[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ManikaHennedige"},"content":"# Diliveri project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Configure Intellij for JDK 11**, as described [here](https://se-education.org/guides/tutorials/intellijJdk.html)."},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html)."},{"lineNumber":11,"author":{"gitId":"ManikaHennedige"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Diliveri.java` file, right-click it, and choose `Run Diliveri.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :classes"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   "},{"lineNumber":17,"author":{"gitId":"ManikaHennedige"},"content":"   \u003e Task :Diliveri.main()"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   "},{"lineNumber":25,"author":{"gitId":"-"},"content":"   What is your name?"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end."},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Build automation using Gradle"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file)."},{"lineNumber":32,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html)."},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Testing"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"### I/O redirection tests"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"ManikaHennedige"},"content":"* To run _I/O redirection_ tests (aka _Text Ui tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script."},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"### JUnit tests"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. "},{"lineNumber":43,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html)."},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Checkstyle"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project."},{"lineNumber":48,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html)."},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"## CI using GitHub Actions"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR."},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Documentation"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation."},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: "},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub."},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab."},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section."},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`."},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation."}],"authorContributionMap":{"ManikaHennedige":4,"-":60}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ManikaHennedige"},"content":"# Diliveri"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"{Give product intro here}"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"Useful links:"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)"}],"authorContributionMap":{"ManikaHennedige":1,"-":7}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"{Give a product intro}"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Quick Start"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"{Give steps to get started quickly}"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed."},{"lineNumber":12,"author":{"gitId":"ManikaHennedige"},"content":"1. Down the latest version of `Diliveri` from [here](http://link.to/duke)."},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"{Give detailed description of each feature}"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Adding a todo: `todo`"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Adds a new item to the list of todo items."},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"Format: `todo n/TODO_NAME d/DEADLINE`"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"* The `DEADLINE` can be in a natural language format."},{"lineNumber":24,"author":{"gitId":"-"},"content":"* The `TODO_NAME` cannot contain punctuation.  "},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"`todo n/Write the rest of the User Guide d/next week`"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"`todo n/Refactor the User Guide to remove passive voice d/13/04/2020`"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"## FAQ"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? "},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"**A**: {your answer here}"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Command Summary"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"{Give a \u0027cheat sheet\u0027 of commands here}"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Add todo `todo n/TODO_NAME d/DEADLINE`"}],"authorContributionMap":{"ManikaHennedige":1,"-":41}},{"path":"src/main/java/Delivery.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ManikaHennedige"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":3,"author":{"gitId":"ManikaHennedige"},"content":"public class Delivery {"},{"lineNumber":4,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":5,"author":{"gitId":"ManikaHennedige"},"content":"    private String address;"},{"lineNumber":6,"author":{"gitId":"ManikaHennedige"},"content":"    private String recipient;"},{"lineNumber":7,"author":{"gitId":"ManikaHennedige"},"content":"    private String weight;"},{"lineNumber":8,"author":{"gitId":"ManikaHennedige"},"content":"    private ArrayList\u003cItem\u003e items;"},{"lineNumber":9,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":10,"author":{"gitId":"ManikaHennedige"},"content":"}"}],"authorContributionMap":{"ManikaHennedige":10}},{"path":"src/main/java/DeliveryList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ManikaHennedige"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":3,"author":{"gitId":"ManikaHennedige"},"content":"public class DeliveryList {"},{"lineNumber":4,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":5,"author":{"gitId":"ManikaHennedige"},"content":"    public static ArrayList\u003cDelivery\u003e deliveries;"},{"lineNumber":6,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":7,"author":{"gitId":"ManikaHennedige"},"content":"    public DeliveryList() {"},{"lineNumber":8,"author":{"gitId":"ManikaHennedige"},"content":"        // todo create (load) the list of deliveries using a .txt containing delivery information"},{"lineNumber":9,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":11,"author":{"gitId":"ManikaHennedige"},"content":"    public void markDeliveryAsComplete() {"},{"lineNumber":12,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"ManikaHennedige"},"content":"}"}],"authorContributionMap":{"ManikaHennedige":13}},{"path":"src/main/java/Deliveryman.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ManikaHennedige"},"content":"public class Deliveryman {"},{"lineNumber":2,"author":{"gitId":"ManikaHennedige"},"content":"    private String driverName;"},{"lineNumber":3,"author":{"gitId":"ManikaHennedige"},"content":"    private String licensePlate;"},{"lineNumber":4,"author":{"gitId":"ManikaHennedige"},"content":"    private String vehicleModel;"},{"lineNumber":5,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":6,"author":{"gitId":"ManikaHennedige"},"content":"    public Deliveryman(String driverName, String licensePlate, String vehicleModel) {"},{"lineNumber":7,"author":{"gitId":"ManikaHennedige"},"content":"        this.driverName \u003d driverName;"},{"lineNumber":8,"author":{"gitId":"ManikaHennedige"},"content":"        this.licensePlate \u003d licensePlate;"},{"lineNumber":9,"author":{"gitId":"ManikaHennedige"},"content":"        this.vehicleModel \u003d vehicleModel;"},{"lineNumber":10,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":12,"author":{"gitId":"ManikaHennedige"},"content":"    public String getDriverName() {"},{"lineNumber":13,"author":{"gitId":"ManikaHennedige"},"content":"        return driverName;"},{"lineNumber":14,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":16,"author":{"gitId":"ManikaHennedige"},"content":"    public String getLicensePlate() {"},{"lineNumber":17,"author":{"gitId":"ManikaHennedige"},"content":"        return licensePlate;"},{"lineNumber":18,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":20,"author":{"gitId":"ManikaHennedige"},"content":"    public String getVehicleModel() {"},{"lineNumber":21,"author":{"gitId":"ManikaHennedige"},"content":"        return vehicleModel;"},{"lineNumber":22,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":24,"author":{"gitId":"ManikaHennedige"},"content":"    public void setDriverName(String driverName) {"},{"lineNumber":25,"author":{"gitId":"ManikaHennedige"},"content":"        this.driverName \u003d driverName;"},{"lineNumber":26,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":28,"author":{"gitId":"ManikaHennedige"},"content":"    public void setLicensePlate(String licensePlate) {"},{"lineNumber":29,"author":{"gitId":"ManikaHennedige"},"content":"        this.licensePlate \u003d licensePlate;"},{"lineNumber":30,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":32,"author":{"gitId":"ManikaHennedige"},"content":"    public void setVehicleModel(String vehicleModel) {"},{"lineNumber":33,"author":{"gitId":"ManikaHennedige"},"content":"        this.vehicleModel \u003d vehicleModel;"},{"lineNumber":34,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"ManikaHennedige"},"content":"}"}],"authorContributionMap":{"ManikaHennedige":35}},{"path":"src/main/java/Diliveri.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"ManikaHennedige"},"content":"public class Diliveri {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application."},{"lineNumber":6,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        System.out.println(\"What is your name?\");"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello \" + in.nextLine());"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ManikaHennedige":1,"-":19}},{"path":"src/main/java/Item.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ManikaHennedige"},"content":"public class Item {"},{"lineNumber":2,"author":{"gitId":"ManikaHennedige"},"content":"    private String itemName;"},{"lineNumber":3,"author":{"gitId":"ManikaHennedige"},"content":"    private int itemPrice;"},{"lineNumber":4,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":5,"author":{"gitId":"ManikaHennedige"},"content":"    public Item(String itemName, int itemPrice) {"},{"lineNumber":6,"author":{"gitId":"ManikaHennedige"},"content":"        this.itemName \u003d itemName;"},{"lineNumber":7,"author":{"gitId":"ManikaHennedige"},"content":"        this.itemPrice \u003d itemPrice;"},{"lineNumber":8,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"ManikaHennedige"},"content":"}"}],"authorContributionMap":{"ManikaHennedige":9}},{"path":"src/main/java/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ManikaHennedige"},"content":"public class Parser {"},{"lineNumber":2,"author":{"gitId":"ManikaHennedige"},"content":"}"}],"authorContributionMap":{"ManikaHennedige":2}},{"path":"src/main/java/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ManikaHennedige"},"content":"public abstract class Ui {"},{"lineNumber":2,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":3,"author":{"gitId":"ManikaHennedige"},"content":"    protected static final String DIVIDER \u003d \"-------------------------------------\";"},{"lineNumber":4,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":5,"author":{"gitId":"ManikaHennedige"},"content":"    protected static void printDivider() {"},{"lineNumber":6,"author":{"gitId":"ManikaHennedige"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":7,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":9,"author":{"gitId":"ManikaHennedige"},"content":"    public static void showWelcomeScreen() {"},{"lineNumber":10,"author":{"gitId":"ManikaHennedige"},"content":"        printDivider();"},{"lineNumber":11,"author":{"gitId":"ManikaHennedige"},"content":"        System.out.println(\"Welcome to diliveri\");"},{"lineNumber":12,"author":{"gitId":"ManikaHennedige"},"content":"        printDivider();"},{"lineNumber":13,"author":{"gitId":"ManikaHennedige"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":15,"author":{"gitId":"ManikaHennedige"},"content":""},{"lineNumber":16,"author":{"gitId":"ManikaHennedige"},"content":"}"}],"authorContributionMap":{"ManikaHennedige":16}},{"path":"src/test/java/seedu/duke/DiliveriTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"ManikaHennedige"},"content":"class DiliveriTest {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ManikaHennedige":1,"-":11}}]
