[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"cloudy3"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"cloudy3":1,"-":46}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"lihaoyangML"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Li Haoyang | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-03-05"},{"lineNumber":6,"author":{"gitId":"justinaquak"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Justina Quak | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"cloudy3"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Cheah Jing Feng | [Github](https://github.com/cloudy3/) | [Portfolio](docs/team/cheahJingFeng.md)","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"beaniestanley"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Stanley Ho | [Github](https://github.com/beaniestanley) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"beaniestanley":1,"justinaquak":1,"cloudy3":1,"lihaoyangML":1,"-":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"justinaquak"},"content":"## Design","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{Describe the design and implementation of the product. Use UML diagrams and short code snippets where applicable.}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"justinaquak"},"content":"## Implementation","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"justinaquak"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"justinaquak"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"justinaquak"},"content":"### View One Shift feature","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"justinaquak"},"content":"#### Implementation","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"justinaquak"},"content":"The current implementation of the View One Shift feature is to call the `App Controller` from `Duke`, and when the user requests to View One Shift, they input \"view one shift\" as a command.","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"justinaquak"},"content":"The `App Controller` then calls the method from its class.","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"justinaquak"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"justinaquak"},"content":"Within the `View One Shift` method, the user is prompted to provide details regarding the date and shift index they are looking for.","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"justinaquak"},"content":"The `App Controller` will then call some methods in Shift to verify the shift exists, and returns the employees scheduled if any.","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"justinaquak"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"justinaquak"},"content":"Given below is an example usage scenario and how this method works at each step.","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"justinaquak"},"content":"This assumes that the data has already been loaded (`date: `11/04/2021, `shiftIndex:` 1, `vacancy:` 2, `employees` : [Adam, Eve])","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"justinaquak"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"justinaquak"},"content":"|Step Number| System Output| User Input | Remarks|","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"justinaquak"},"content":"|-------------|--------------|------------------|------------------|","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"justinaquak"},"content":"|1|Enter Command: | view one shift | user can type in `help` for a list of commands|","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"justinaquak"},"content":"|2|Enter Shift date (in dd/MM/YYYY):|11/04/2021|date format is specified|","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"justinaquak"},"content":"|3|Enter Shift index | 1 | Shift index is from 1-6, each index representing a 4 hr block|","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"justinaquak"},"content":"|4|The people assigned to the shift are: [Adam,Eve]|-|Empty array will be returned if no employee is assigned for the shift|","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"justinaquak"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"justinaquak"},"content":"Step 1: The user launches the program, with the data already loaded. The application then prompts the user for their command.","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"justinaquak"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"justinaquak"},"content":"Step 2: The user inputs a date, and the date is processed by a DateTimeFormatter to ensure that it is in the correct format. ","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"justinaquak"},"content":"This date will be added into the shift ArrayList. ","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"justinaquak"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"justinaquak"},"content":"Step 3: The user inputs a shift index, which represents which shift the user is looking for. For instance, index 1 refers to ","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"justinaquak"},"content":"0000-0400 in the morning, which will be relevant to 24hr fast food chains such as McDonalds!","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"justinaquak"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"justinaquak"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"justinaquak"},"content":"Given below is what will be shown if wrong/invalid inputs are given","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"justinaquak"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"justinaquak"},"content":"|Step Number| System Output| Wrong User Input | System Output|","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"justinaquak"},"content":"|-------------|--------------|------------------|------------------|","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"justinaquak"},"content":"|1|Enter Command: | view one Shift | invalid command|","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"justinaquak"},"content":"|2|Enter Shift date (in dd/MM/YYYY):|12/05/2021|Date chosen has no shifts|","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"justinaquak"},"content":"|3|Enter Shift index | 1 | Shift index selected is not available|","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"justinaquak"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"justinaquak"},"content":"Given below is a sequence diagram of the View One Shift feature","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"justinaquak"},"content":"![img.png](img.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"lihaoyangML"},"content":"### add schedule to employee feature","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"lihaoyangML"},"content":"#### Implementation","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"lihaoyangML"},"content":"The add schedule feature uses of the `Employee` class in the `employee` package to store the schedules of each employee. ","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"lihaoyangML"},"content":"The class diagram for the `Employee` class is as follows:","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"lihaoyangML"},"content":"![employee class diagram v2.PNG](employee%20class%20diagram%20v2.PNG)","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"lihaoyangML"},"content":"Each `Employee` object has an employee name, and an arrayList of schedules, together with the functionality to set/get the employee name, get all of the employee\u0027s schedules, add or drop a schedule from the employee object.","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"lihaoyangML"},"content":"The arraylist of schedules contains all of the employee\u0027s schedules. Each schedule is a String which follows certain constraints as described below:","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"lihaoyangML"},"content":"A schedule must be in the format: dd/mm/yyyy","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"lihaoyangML"},"content":"dd must be an integer between 1-31 for odd months, 1-30 for even months, 1-28 for Feb","lastModifiedDate":"2021-04-08"},{"lineNumber":64,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"lihaoyangML"},"content":"mm must be an integer between 1-12","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"lihaoyangML"},"content":"yyyy must be an integer between 2021-2099","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"lihaoyangML"},"content":"The validation for a schedule is done internally in the `Employee` Class through a method called `isScheduleValid`, which is used in the `addSchedule` method in the `employee` class. Only when `isScheduleValid` returns true, the `addSchedule` method will add the schedule to the employee.","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"lihaoyangML"},"content":"The logic for allowing the user to add a new schedule is in the `EmployeeController` class in the `employee` package and the `Employee` class in the `employee` package. The sequence diagram for the interaction is shown below:","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"lihaoyangML"},"content":"![add schedule sequence diagram v2.PNG](add%20schedule%20sequence%20diagram%20v2.PNG)","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"lihaoyangML"},"content":"When the user enters “add schedule” in `AppController`, `AppController` calls the `addSchedule` method in `EmployeeController`. ","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"lihaoyangML"},"content":"In the `addSchedule` method in `EmployeeController`, the user is first asked to enter the employee’s name that the user wants to add a schedule to. ","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"lihaoyangML"},"content":"The method will then check if there is a matching employee from the arraylist of employees in the system (from the `employees` variable in `AppController`). ","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"lihaoyangML"},"content":"If no employee with the queried name is found, the method terminates with a feedback to the user. ","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"lihaoyangML"},"content":"If there is a matching employee, the system proceeds to ask the user to enter a schedule to be added for the employee. ","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"lihaoyangML"},"content":"After the user enters a schedule, control is passed to the `Employee` object, where the schedule is added to the employee if the schedule is verified to be valid. ","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"lihaoyangML"},"content":"Control is then passed back to the `addSchedule` method in `EmployeeController`, with feedback from the `Employee` object on whether the schedule is valid or not. ","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"lihaoyangML"},"content":"`addSchedule` in `EmployeeController` will provide feedback to the user on if the schedule is added successfully, and end the method call by passing control back to the `run` method in `AppController`.","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"beaniestanley"},"content":"### Assign Employee feature","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"beaniestanley"},"content":"#### Implementation","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"beaniestanley"},"content":"The proposed Assign Employee feature is facilitated by the `Shift` object in the `shift` package,","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"beaniestanley"},"content":"where it stores the employees on the shift, its shift date, shift index, and vacancy. It also uses `listAllEmployees` ","lastModifiedDate":"2021-04-12"},{"lineNumber":96,"author":{"gitId":"beaniestanley"},"content":"method from `EmployeeController` class, which helps user to view the employees that they can assign to the shift.","lastModifiedDate":"2021-04-12"},{"lineNumber":97,"author":{"gitId":"beaniestanley"},"content":"This method, like its name suggests, assigns an employee who has an available schedule to a shift that has vacancies.","lastModifiedDate":"2021-04-12"},{"lineNumber":98,"author":{"gitId":"beaniestanley"},"content":"In version 2.0 and 2.1, exceptions and error-handling are added to ensure bugs are fixed and no longer occur.","lastModifiedDate":"2021-04-12"},{"lineNumber":99,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"beaniestanley"},"content":"Given below is an example usage scenario and how the Assign Employee method behaves at each step.","lastModifiedDate":"2021-03-25"},{"lineNumber":101,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":102,"author":{"gitId":"beaniestanley"},"content":"Step 1: The user launches the application and the `Employee` and `Shift` objects are initialised with the saved data.","lastModifiedDate":"2021-03-25"},{"lineNumber":103,"author":{"gitId":"beaniestanley"},"content":"For this example, we will use the `Employee` object to store all employees and their schedules, where ","lastModifiedDate":"2021-04-12"},{"lineNumber":104,"author":{"gitId":"beaniestanley"},"content":"`employees: `[Adam, Eve], and `shifts` which is an ArrayList of `Shift` objects. As for `Eve`, the object will be ","lastModifiedDate":"2021-04-12"},{"lineNumber":105,"author":{"gitId":"beaniestanley"},"content":"initialised such that `Eve` will be available for schedule on `04/04/2021`.  The example will use a `Shift` object ","lastModifiedDate":"2021-04-12"},{"lineNumber":106,"author":{"gitId":"beaniestanley"},"content":"with attributes `employees: `[Adam], an ArrayList of employees assigned to this shift, meaning `Adam` is ","lastModifiedDate":"2021-04-12"},{"lineNumber":107,"author":{"gitId":"beaniestanley"},"content":"assigned to this shift, `shiftDate: `04/04/2021, `shiftIndex: `3, meaning that the shift period is 0800 to 1200, ","lastModifiedDate":"2021-04-12"},{"lineNumber":108,"author":{"gitId":"beaniestanley"},"content":"and `vacancy: `1, meaning that there is 1 vacancy left in this shift.","lastModifiedDate":"2021-04-12"},{"lineNumber":109,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":110,"author":{"gitId":"beaniestanley"},"content":"Step 2: The system calls `App Controller` and prompts \"Enter Command: \".","lastModifiedDate":"2021-03-25"},{"lineNumber":111,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":112,"author":{"gitId":"beaniestanley"},"content":"Step 3: The user enters `assign employee`. This command will call `assignEmployee()` in `App Controller`, which then ","lastModifiedDate":"2021-03-25"},{"lineNumber":113,"author":{"gitId":"beaniestanley"},"content":"calls the `viewAllShifts()` method that will display all the shifts, and their vacancies. `shifts.isEmpty()` is then run","lastModifiedDate":"2021-04-12"},{"lineNumber":114,"author":{"gitId":"beaniestanley"},"content":"to check whether there is any shift in the database, in which no shift means no employee will be assigned, and the ","lastModifiedDate":"2021-04-12"},{"lineNumber":115,"author":{"gitId":"beaniestanley"},"content":"method ends here prematurely. Else, the method continues to Step 4.","lastModifiedDate":"2021-04-12"},{"lineNumber":116,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":117,"author":{"gitId":"beaniestanley"},"content":"Step 4: The system outputs \"Enter Shift date (in dd/MM/yyyy): \" as `getShiftDate()` is called.","lastModifiedDate":"2021-04-12"},{"lineNumber":118,"author":{"gitId":"beaniestanley"},"content":"The user inputs \"04/04/2021\" and `getShiftDate()` method returns a temporary `LocalDate` object. This will be stored as","lastModifiedDate":"2021-04-12"},{"lineNumber":119,"author":{"gitId":"beaniestanley"},"content":"`shiftDate`, following which the system will output \"Enter Shift index:\" as `getShiftIndex()` is called.","lastModifiedDate":"2021-04-12"},{"lineNumber":120,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":121,"author":{"gitId":"beaniestanley"},"content":"Step 5: The user inputs \"3\" and `getShiftIndex()` returns an integer which will be stored as `shiftIndex`, and ","lastModifiedDate":"2021-04-12"},{"lineNumber":122,"author":{"gitId":"beaniestanley"},"content":"the system proceeds to verify that the `Shift` object with this particular `shiftDate` and `shiftIndex` exists when ","lastModifiedDate":"2021-04-12"},{"lineNumber":123,"author":{"gitId":"beaniestanley"},"content":"`getShift()` returns a non-null value.","lastModifiedDate":"2021-04-12"},{"lineNumber":124,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":125,"author":{"gitId":"beaniestanley"},"content":"Step 6: The system assigns `shift` to a temporary `Shift` object via the `getShift()` method. `EmployeeController` then ","lastModifiedDate":"2021-04-12"},{"lineNumber":126,"author":{"gitId":"beaniestanley"},"content":"calls the `listAllEmployees()` method that displays all the employees in the database that the user can assign to shift.","lastModifiedDate":"2021-04-12"},{"lineNumber":127,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":128,"author":{"gitId":"beaniestanley"},"content":"Step 7: The system outputs \"Enter Employee name to assign: \". The user inputs \"Eve\", and the `getEmployee` method is ","lastModifiedDate":"2021-04-12"},{"lineNumber":129,"author":{"gitId":"beaniestanley"},"content":"called, which returns an `Employee` object that is stored under `employee`. ","lastModifiedDate":"2021-04-12"},{"lineNumber":130,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":131,"author":{"gitId":"beaniestanley"},"content":"Step 8: If `employee` is a null object, the system outputs \"No employee in database. Please add an employee with a ","lastModifiedDate":"2021-04-12"},{"lineNumber":132,"author":{"gitId":"beaniestanley"},"content":"schedule first.\" and ends here. Else, `employeeAvailable()` is called to check whether `Eve` is available to work ","lastModifiedDate":"2021-04-12"},{"lineNumber":133,"author":{"gitId":"beaniestanley"},"content":"according to the schedule, which will output \"Employee Eve is available to work!\". If not, the system outputs ","lastModifiedDate":"2021-04-12"},{"lineNumber":134,"author":{"gitId":"beaniestanley"},"content":"\"Employee Eve is unavailable to work!\", followed by \"Employee Eve is not assigned to this shift. Please assign another ","lastModifiedDate":"2021-04-12"},{"lineNumber":135,"author":{"gitId":"beaniestanley"},"content":"employee.\", where the method ends here prematurely.","lastModifiedDate":"2021-04-12"},{"lineNumber":136,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":137,"author":{"gitId":"beaniestanley"},"content":"Step 9: Continuing from the fact that `Eve` is stored under `employee`, and `employeeAvailable()` yields `true`,","lastModifiedDate":"2021-04-12"},{"lineNumber":138,"author":{"gitId":"beaniestanley"},"content":"the system then checks if `Eve` is already assigned to this shift by calling `shift.getEmployees().contains()`. Since","lastModifiedDate":"2021-04-12"},{"lineNumber":139,"author":{"gitId":"beaniestanley"},"content":"`Eve` has not been assigned to this shift yet, the system assigns `Eve` to this shift, where `vacancy` for this shift ","lastModifiedDate":"2021-04-12"},{"lineNumber":140,"author":{"gitId":"beaniestanley"},"content":"becomes 0 and `Eve` is added to the ArrayList of `employees` stored in this `Shift` object.","lastModifiedDate":"2021-04-12"},{"lineNumber":141,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":142,"author":{"gitId":"beaniestanley"},"content":"Step 10: The system then outputs \"Employee Eve is successfully assigned to this shift.\", where the method ends with ","lastModifiedDate":"2021-04-12"},{"lineNumber":143,"author":{"gitId":"beaniestanley"},"content":"a success case.","lastModifiedDate":"2021-04-12"},{"lineNumber":144,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":145,"author":{"gitId":"beaniestanley"},"content":"Given below is a sequence diagram of the Assign Employee feature.","lastModifiedDate":"2021-03-25"},{"lineNumber":146,"author":{"gitId":"beaniestanley"},"content":"![assignEmployee.PNG](assignEmployee.png) ","lastModifiedDate":"2021-03-25"},{"lineNumber":147,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":148,"author":{"gitId":"cloudy3"},"content":"### Saving of Data","lastModifiedDate":"2021-03-26"},{"lineNumber":149,"author":{"gitId":"cloudy3"},"content":"#### Implementation","lastModifiedDate":"2021-03-26"},{"lineNumber":150,"author":{"gitId":"cloudy3"},"content":"The ArrayList of Employee objects is first formatted by adding the \u0027#\u0027 symbol as a delimiter between the objects and their attributes.","lastModifiedDate":"2021-03-29"},{"lineNumber":151,"author":{"gitId":"cloudy3"},"content":"\u003cbr\u003eFor example, `cactus#23/03/2021`, which saves the employee name `cactus` and the employee schedule `23/03/2021`.","lastModifiedDate":"2021-03-29"},{"lineNumber":152,"author":{"gitId":"cloudy3"},"content":"\u003cbr\u003eThis allows data of objects to be easily written into text files and then loaded.","lastModifiedDate":"2021-03-29"},{"lineNumber":153,"author":{"gitId":"cloudy3"},"content":"\u003cbr\u003eThe ArrayList of Shift objects is saved using the same method.","lastModifiedDate":"2021-03-29"},{"lineNumber":154,"author":{"gitId":"cloudy3"},"content":"\u003cbr\u003eFor example, `28/03/2021#5#1#cactus#mario`, which saves a shift on `28/03/2021`, with a vacancy of `5`, and shift index of `1`.","lastModifiedDate":"2021-03-29"},{"lineNumber":155,"author":{"gitId":"cloudy3"},"content":"The employees on that shift are`cactus` and `mario`.","lastModifiedDate":"2021-03-29"},{"lineNumber":156,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":157,"author":{"gitId":"cloudy3"},"content":"Employee and shift details are saved on separate text files \"employees.text\" and \"shifts.text\".","lastModifiedDate":"2021-03-26"},{"lineNumber":158,"author":{"gitId":"cloudy3"},"content":"A FileWriter is used to write formatted data from the Employee and Shift classes, with \"#\" as the delimiter.","lastModifiedDate":"2021-03-26"},{"lineNumber":159,"author":{"gitId":"cloudy3"},"content":"\u003cbr\u003eThe text files are overwritten with the most recent data whenever the user exits the program by inputting the command `quit`.","lastModifiedDate":"2021-03-29"},{"lineNumber":160,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":161,"author":{"gitId":"cloudy3"},"content":"### Loading of Data","lastModifiedDate":"2021-03-26"},{"lineNumber":162,"author":{"gitId":"cloudy3"},"content":"#### Implementation","lastModifiedDate":"2021-03-26"},{"lineNumber":163,"author":{"gitId":"cloudy3"},"content":"The FileManager Object is first initialized at the start of the program, and loads both","lastModifiedDate":"2021-03-29"},{"lineNumber":164,"author":{"gitId":"cloudy3"},"content":"the \"employees.txt\" and \"shifts.txt\" files.","lastModifiedDate":"2021-03-29"},{"lineNumber":165,"author":{"gitId":"cloudy3"},"content":"\u003cbr\u003eThe FileManager then parses the data from the text files into the Data Parser object.","lastModifiedDate":"2021-03-29"},{"lineNumber":166,"author":{"gitId":"cloudy3"},"content":"\u003cbr\u003eThe Data Parser then initializes the employee and shift objects, returning an ArrayList of Employees","lastModifiedDate":"2021-03-29"},{"lineNumber":167,"author":{"gitId":"cloudy3"},"content":"and ArrayList of Shifts into the program.","lastModifiedDate":"2021-03-29"},{"lineNumber":168,"author":{"gitId":"cloudy3"},"content":"\u003cbr\u003e\u003cbr\u003eThe Sequence Diagram for both `loadEmployees()` and `loadShifts()` is as shown below:","lastModifiedDate":"2021-03-29"},{"lineNumber":169,"author":{"gitId":"cloudy3"},"content":"![loadEmployees](loadEmployees.png)\u003cbr\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":170,"author":{"gitId":"cloudy3"},"content":"![loadShifts](loadShifts.png)","lastModifiedDate":"2021-03-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":175,"author":{"gitId":"justinaquak"},"content":"This application is for fast-food restaurant managers who have difficulty in scheduling different employees to the different shift that they have. ","lastModifiedDate":"2021-03-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"{Describe the value proposition: what problem does it solve?}","lastModifiedDate":"2020-05-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":185,"author":{"gitId":"beaniestanley"},"content":"|v1.0|user|view each of my employee’s available schedules|schedule when to put my employee for work.|","lastModifiedDate":"2021-04-12"},{"lineNumber":186,"author":{"gitId":"beaniestanley"},"content":"|v1.0|user|add new employee’s schedules|keep track of changes in the overall record when a single new schedule needs to be added.|","lastModifiedDate":"2021-04-12"},{"lineNumber":187,"author":{"gitId":"beaniestanley"},"content":"|v1.0|user|drop any employee’s schedules|manage changes in the employee’s schedule.|","lastModifiedDate":"2021-04-12"},{"lineNumber":188,"author":{"gitId":"beaniestanley"},"content":"|v1.0|user|add an employee to a particular shift|schedule an available employee to work on that shift.|","lastModifiedDate":"2021-04-12"},{"lineNumber":189,"author":{"gitId":"beaniestanley"},"content":"|v1.0|user|drop an employee from a particular shift|find a replacement if an employee can no longer make it from that shift.|","lastModifiedDate":"2021-04-12"},{"lineNumber":190,"author":{"gitId":"beaniestanley"},"content":"|v1.0|user|view all employees working on a particular shift|keep track of the employees working on that shift.|","lastModifiedDate":"2021-04-12"},{"lineNumber":191,"author":{"gitId":"beaniestanley"},"content":"|v1.0|user|print the status of all the shifts in a week|easily get an overview of the current week and slot in employees that are available for empty shifts.|","lastModifiedDate":"2021-04-12"},{"lineNumber":192,"author":{"gitId":"beaniestanley"},"content":"|v2.0|new user|see usage instructions|refer to them when I forget how to use the application.|","lastModifiedDate":"2021-04-12"},{"lineNumber":193,"author":{"gitId":"beaniestanley"},"content":"|v2.0|user|view list of all employees|refer to them while I assign them to shift.|","lastModifiedDate":"2021-04-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"beaniestanley":64,"justinaquak":42,"cloudy3":23,"lihaoyangML":45,"-":31}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":5,"author":{"gitId":"cloudy3"},"content":"FastScheduler (FS) is a desktop app for restaurant managers to schedule employees for work, optimised for use via a","lastModifiedDate":"2021-04-07"},{"lineNumber":6,"author":{"gitId":"cloudy3"},"content":"Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast","lastModifiedDate":"2021-04-07"},{"lineNumber":7,"author":{"gitId":"cloudy3"},"content":"and prefer typing, FS can help you manage the schedules of employees and shifts faster than traditional GUI apps.","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2021-04-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":11,"author":{"gitId":"cloudy3"},"content":"1. Ensure you have Java 11 or above installed on your computer.","lastModifiedDate":"2021-04-03"},{"lineNumber":12,"author":{"gitId":"cloudy3"},"content":"2. Download the latest FastScheduler.jar [here](https://github.com/AY2021S2-CS2113-F10-3/tp/releases).","lastModifiedDate":"2021-04-03"},{"lineNumber":13,"author":{"gitId":"cloudy3"},"content":"3. Copy the file to the folder you want to use as the home folder for your FastScheduler APP.","lastModifiedDate":"2021-04-03"},{"lineNumber":14,"author":{"gitId":"cloudy3"},"content":"4. Double-click the file to start the APP.","lastModifiedDate":"2021-04-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"cloudy3"},"content":"## Features","lastModifiedDate":"2021-04-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"cloudy3"},"content":"### Add an employee: `add employee`","lastModifiedDate":"2021-04-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"cloudy3"},"content":"Adds an employee to the restaurant’s database\u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"cloudy3"},"content":"Step 1: add employee\u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":23,"author":{"gitId":"cloudy3"},"content":"System feedback: enter Employee name\u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":24,"author":{"gitId":"cloudy3"},"content":"Step 2: employee_name (eg. Tom)\u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":25,"author":{"gitId":"cloudy3"},"content":"System feedback: Employee added","lastModifiedDate":"2021-04-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"cloudy3"},"content":"### Add new employee’s schedules: `add schedule`","lastModifiedDate":"2021-04-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"cloudy3"},"content":"Adds the employees schedule to the restaurant’s database","lastModifiedDate":"2021-04-03"},{"lineNumber":30,"author":{"gitId":"cloudy3"},"content":"(A valid schedule has the following restrictions: Year is between 2021 and 2099. Month is between 1 and 12. Day is","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"cloudy3"},"content":"between 1 and 31)","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"cloudy3"},"content":"Step 1: add schedule\u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":34,"author":{"gitId":"cloudy3"},"content":"System feedback: enter Employee name\u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":35,"author":{"gitId":"cloudy3"},"content":"Step 2: employee_name (eg. Tom)\u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":36,"author":{"gitId":"cloudy3"},"content":"System feedback: enter Employee schedule\u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":37,"author":{"gitId":"cloudy3"},"content":"Step 3: dd/mm/yyyy (eg. 28/08/2021)\u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":38,"author":{"gitId":"cloudy3"},"content":"System feedback: schedule added","lastModifiedDate":"2021-04-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"cloudy3"},"content":"### Drop existing employee’s schedules: `drop schedule`","lastModifiedDate":"2021-04-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":42,"author":{"gitId":"cloudy3"},"content":"Drops existing employee’s schedule from the restaurant’s database","lastModifiedDate":"2021-04-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"cloudy3"},"content":"Step 1: drop schedule\u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":45,"author":{"gitId":"cloudy3"},"content":"System feedback: enter Employee name\u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":46,"author":{"gitId":"cloudy3"},"content":"Step 2: employee_name (eg. Tom)\u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":47,"author":{"gitId":"cloudy3"},"content":"System feedback: enter Employee schedule\u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":48,"author":{"gitId":"cloudy3"},"content":"Step 3: dd/mm/yyyy (eg. 28/08/2021)\u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":49,"author":{"gitId":"cloudy3"},"content":"System feedback: schedule dropped","lastModifiedDate":"2021-04-03"},{"lineNumber":50,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":51,"author":{"gitId":"cloudy3"},"content":"### Add a shift: `add shift`","lastModifiedDate":"2021-04-03"},{"lineNumber":52,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":53,"author":{"gitId":"cloudy3"},"content":"Adds a shift to the restaurant’s database","lastModifiedDate":"2021-04-03"},{"lineNumber":54,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":55,"author":{"gitId":"cloudy3"},"content":"Step 1: add shift\u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"cloudy3"},"content":"### Assign employees to shift: `assign employee`","lastModifiedDate":"2021-04-03"},{"lineNumber":58,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":59,"author":{"gitId":"cloudy3"},"content":"Assigns an employee who is available for the duration of the shift to a stipulated shift. Each shift represents a 4-hour","lastModifiedDate":"2021-04-07"},{"lineNumber":60,"author":{"gitId":"cloudy3"},"content":"block and there are 6 shift indexes from 1 to 6, where shift index 1 represents 0000h to 0400h, shift index 2 represents","lastModifiedDate":"2021-04-07"},{"lineNumber":61,"author":{"gitId":"cloudy3"},"content":"0400h to 0800h, etc.","lastModifiedDate":"2021-04-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"cloudy3"},"content":"Format: `assign employee`","lastModifiedDate":"2021-04-03"},{"lineNumber":64,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":65,"author":{"gitId":"cloudy3"},"content":"* SHIFT_DATE must be in DDMMYYYY format","lastModifiedDate":"2021-04-03"},{"lineNumber":66,"author":{"gitId":"cloudy3"},"content":"* SHIFT_INDEX must be an integer from 1 to 6","lastModifiedDate":"2021-04-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":68,"author":{"gitId":"cloudy3"},"content":"### Unassign employees from an assigned shift: `unassign employee`","lastModifiedDate":"2021-04-03"},{"lineNumber":69,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":70,"author":{"gitId":"cloudy3"},"content":"Unassign a specific employee from a shift he was assigned to","lastModifiedDate":"2021-04-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":72,"author":{"gitId":"cloudy3"},"content":"Format: `unassign employee`","lastModifiedDate":"2021-04-03"},{"lineNumber":73,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":74,"author":{"gitId":"cloudy3"},"content":"* SHIFT_DATE must be in DDMMYYYY format","lastModifiedDate":"2021-04-03"},{"lineNumber":75,"author":{"gitId":"cloudy3"},"content":"* SHIFT_INDEX must be an integer from 1 to 6","lastModifiedDate":"2021-04-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":77,"author":{"gitId":"cloudy3"},"content":"### View employee’s schedule: `view employee schedule`","lastModifiedDate":"2021-04-03"},{"lineNumber":78,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":79,"author":{"gitId":"cloudy3"},"content":"Views a specific employee’s schedules","lastModifiedDate":"2021-04-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":81,"author":{"gitId":"cloudy3"},"content":"Format: `view employee schedule`","lastModifiedDate":"2021-04-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":83,"author":{"gitId":"cloudy3"},"content":"### View employees assigned for a particular shift: `view one shift`","lastModifiedDate":"2021-04-03"},{"lineNumber":84,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":85,"author":{"gitId":"cloudy3"},"content":"View all the employee names who are assigned for a particular shift","lastModifiedDate":"2021-04-03"},{"lineNumber":86,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":87,"author":{"gitId":"cloudy3"},"content":"Format: `view one shift`","lastModifiedDate":"2021-04-03"},{"lineNumber":88,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":89,"author":{"gitId":"cloudy3"},"content":"* SHIFT_DATE must be in DDMMYYYY format","lastModifiedDate":"2021-04-03"},{"lineNumber":90,"author":{"gitId":"cloudy3"},"content":"* SHIFT_INDEX must be an integer from 1 to 6","lastModifiedDate":"2021-04-03"},{"lineNumber":91,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":92,"author":{"gitId":"cloudy3"},"content":"### View restaurant’s shift schedule: `view shift status`","lastModifiedDate":"2021-04-03"},{"lineNumber":93,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":94,"author":{"gitId":"cloudy3"},"content":"View the restaurant’s shift schedule for the current week","lastModifiedDate":"2021-04-03"},{"lineNumber":95,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":96,"author":{"gitId":"cloudy3"},"content":"Format: `view shift status`","lastModifiedDate":"2021-04-03"},{"lineNumber":97,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":98,"author":{"gitId":"cloudy3"},"content":"### View list of all employees: `list`","lastModifiedDate":"2021-04-03"},{"lineNumber":99,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":100,"author":{"gitId":"cloudy3"},"content":"View the list of all employees in the restaurant","lastModifiedDate":"2021-04-03"},{"lineNumber":101,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":102,"author":{"gitId":"cloudy3"},"content":"Format: `list`","lastModifiedDate":"2021-04-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":106,"author":{"gitId":"cloudy3"},"content":"**Q**: How do I make french fries?","lastModifiedDate":"2021-04-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":108,"author":{"gitId":"cloudy3"},"content":"**A**: Install french fries.jar into your C drive.","lastModifiedDate":"2021-04-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":112,"author":{"gitId":"cloudy3"},"content":"* Add employee `add employee`","lastModifiedDate":"2021-04-03"},{"lineNumber":113,"author":{"gitId":"cloudy3"},"content":"* Add schedule `add schedule`","lastModifiedDate":"2021-04-03"},{"lineNumber":114,"author":{"gitId":"cloudy3"},"content":"* Drop schedule `drop schedule`","lastModifiedDate":"2021-04-03"},{"lineNumber":115,"author":{"gitId":"cloudy3"},"content":"* Add shift `add shift`","lastModifiedDate":"2021-04-03"},{"lineNumber":116,"author":{"gitId":"cloudy3"},"content":"* Assign employee to a shift `assign employee`","lastModifiedDate":"2021-04-03"},{"lineNumber":117,"author":{"gitId":"cloudy3"},"content":"* Unassign employee from a shift `unassign employee`","lastModifiedDate":"2021-04-03"},{"lineNumber":118,"author":{"gitId":"cloudy3"},"content":"* View employee schedule `view employee schedule`","lastModifiedDate":"2021-04-03"},{"lineNumber":119,"author":{"gitId":"cloudy3"},"content":"* View employees in the shift `view one shift`","lastModifiedDate":"2021-04-03"},{"lineNumber":120,"author":{"gitId":"cloudy3"},"content":"* View the shift schedule `view shift status`","lastModifiedDate":"2021-04-03"},{"lineNumber":121,"author":{"gitId":"cloudy3"},"content":"* Lists all employees `list`","lastModifiedDate":"2021-04-03"}],"authorContributionMap":{"cloudy3":90,"-":31}},{"path":"docs/team/cloudy3.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cloudy3"},"content":"# Cheah Jing Feng - Project Portfolio Page","lastModifiedDate":"2021-04-08"},{"lineNumber":2,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":3,"author":{"gitId":"cloudy3"},"content":"## Overview","lastModifiedDate":"2021-04-08"},{"lineNumber":4,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":5,"author":{"gitId":"cloudy3"},"content":"```FastScheduler (FS)``` is a desktop app for restaurant managers to schedule employees for work, optimised for use via","lastModifiedDate":"2021-04-08"},{"lineNumber":6,"author":{"gitId":"cloudy3"},"content":"a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast","lastModifiedDate":"2021-04-08"},{"lineNumber":7,"author":{"gitId":"cloudy3"},"content":"and prefer typing, FS can help you manage the schedules of employees and shifts faster than traditional GUI apps.","lastModifiedDate":"2021-04-08"},{"lineNumber":8,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":9,"author":{"gitId":"cloudy3"},"content":"## Summary of Contributions","lastModifiedDate":"2021-04-08"},{"lineNumber":10,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":11,"author":{"gitId":"cloudy3"},"content":"* **Code","lastModifiedDate":"2021-04-08"},{"lineNumber":12,"author":{"gitId":"cloudy3"},"content":"  contributed:** [RepoSense link](https://nus-cs2113-ay2021s2.github.io/tp-dashboard/?search\u003dcloudy3\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-03-05\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse)","lastModifiedDate":"2021-04-08"},{"lineNumber":13,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":14,"author":{"gitId":"cloudy3"},"content":"___","lastModifiedDate":"2021-04-08"},{"lineNumber":15,"author":{"gitId":"cloudy3"},"content":"Given below are details of my contributions to the project.","lastModifiedDate":"2021-04-08"},{"lineNumber":16,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":17,"author":{"gitId":"cloudy3"},"content":"### New Features","lastModifiedDate":"2021-04-08"},{"lineNumber":18,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":19,"author":{"gitId":"cloudy3"},"content":"#### Implemented `FileManager` class","lastModifiedDate":"2021-04-08"},{"lineNumber":20,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":21,"author":{"gitId":"cloudy3"},"content":"Contains:","lastModifiedDate":"2021-04-08"},{"lineNumber":22,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":23,"author":{"gitId":"cloudy3"},"content":"* `saveEmployees` and `saveShifts` methods","lastModifiedDate":"2021-04-08"},{"lineNumber":24,"author":{"gitId":"cloudy3"},"content":"    * *What it does:* to save the Employees and shifts added to a text file.","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"cloudy3"},"content":"* `loadEmployees` and `loadShifts` methods","lastModifiedDate":"2021-04-08"},{"lineNumber":26,"author":{"gitId":"cloudy3"},"content":"    * *What it does:* to load employees and shifts from the text file to the program.","lastModifiedDate":"2021-04-08"},{"lineNumber":27,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":28,"author":{"gitId":"cloudy3"},"content":"*Justification:* This feature is essential in allowing the user to store data locally and load them, saving the trouble","lastModifiedDate":"2021-04-08"},{"lineNumber":29,"author":{"gitId":"cloudy3"},"content":"to re-enter the data.","lastModifiedDate":"2021-04-08"},{"lineNumber":30,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":31,"author":{"gitId":"cloudy3"},"content":"*Highlights:* This feature is coded in an OOP way that makes use of a Parser to parse the data to be stored/loaded. This","lastModifiedDate":"2021-04-08"},{"lineNumber":32,"author":{"gitId":"cloudy3"},"content":"is very challenging as the FileManager has to be able to handle any sorts of data, and able to store the objects in a","lastModifiedDate":"2021-04-08"},{"lineNumber":33,"author":{"gitId":"cloudy3"},"content":"text file.","lastModifiedDate":"2021-04-08"},{"lineNumber":34,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":35,"author":{"gitId":"cloudy3"},"content":"---","lastModifiedDate":"2021-04-08"},{"lineNumber":36,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":37,"author":{"gitId":"cloudy3"},"content":"#### Implemented `DataParser` class","lastModifiedDate":"2021-04-08"},{"lineNumber":38,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":39,"author":{"gitId":"cloudy3"},"content":"Contains:","lastModifiedDate":"2021-04-08"},{"lineNumber":40,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":41,"author":{"gitId":"cloudy3"},"content":"* `parseData` and `parseShift` methods","lastModifiedDate":"2021-04-08"},{"lineNumber":42,"author":{"gitId":"cloudy3"},"content":"    * *What it does:* converts the employee and shift objects with their attributes to data that can be written to a","lastModifiedDate":"2021-04-08"},{"lineNumber":43,"author":{"gitId":"cloudy3"},"content":"      text file.","lastModifiedDate":"2021-04-08"},{"lineNumber":44,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":45,"author":{"gitId":"cloudy3"},"content":"*Justification:* This feature is essential to store the objects into a save file where all its attributes can be loaded.","lastModifiedDate":"2021-04-08"},{"lineNumber":46,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":47,"author":{"gitId":"cloudy3"},"content":"*Highlights:* This feature is coded in an OOP way that allows the FileManager to use its methods to store the converted","lastModifiedDate":"2021-04-08"},{"lineNumber":48,"author":{"gitId":"cloudy3"},"content":"data. This feature is very challenging as not only does it convert objects into Strings, but also their attributes of","lastModifiedDate":"2021-04-08"},{"lineNumber":49,"author":{"gitId":"cloudy3"},"content":"various data types such as LocalDate.","lastModifiedDate":"2021-04-08"},{"lineNumber":50,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":51,"author":{"gitId":"cloudy3"},"content":"---","lastModifiedDate":"2021-04-08"},{"lineNumber":52,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":53,"author":{"gitId":"cloudy3"},"content":"### Enhancements implemented","lastModifiedDate":"2021-04-08"},{"lineNumber":54,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":55,"author":{"gitId":"cloudy3"},"content":"#### Implemented `formatData()` methods in all entity classes","lastModifiedDate":"2021-04-08"},{"lineNumber":56,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":57,"author":{"gitId":"cloudy3"},"content":"This method formats all the entities into a string data format that contains all their attributes.","lastModifiedDate":"2021-04-08"},{"lineNumber":58,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":59,"author":{"gitId":"cloudy3"},"content":"*Considerations*: Have to take into account the various data types and how can the arraylist of data can be stored.","lastModifiedDate":"2021-04-08"},{"lineNumber":60,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":61,"author":{"gitId":"cloudy3"},"content":"---","lastModifiedDate":"2021-04-08"},{"lineNumber":62,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":63,"author":{"gitId":"cloudy3"},"content":"### Loading of Shifts in the `AppController` on start up","lastModifiedDate":"2021-04-08"},{"lineNumber":64,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":65,"author":{"gitId":"cloudy3"},"content":"This allows the Shifts objects to be initialised with the Employees that are assigned to them, along with vacancies and","lastModifiedDate":"2021-04-08"},{"lineNumber":66,"author":{"gitId":"cloudy3"},"content":"shift date.","lastModifiedDate":"2021-04-08"},{"lineNumber":67,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":68,"author":{"gitId":"cloudy3"},"content":"*Considerations*: This is pretty tricky as the shift objects have to be initialised along with their respective data","lastModifiedDate":"2021-04-08"},{"lineNumber":69,"author":{"gitId":"cloudy3"},"content":"using the Shift Date as an identifier.","lastModifiedDate":"2021-04-08"},{"lineNumber":70,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":71,"author":{"gitId":"cloudy3"},"content":"___","lastModifiedDate":"2021-04-08"},{"lineNumber":72,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":73,"author":{"gitId":"cloudy3"},"content":"#### Implemented Assertions","lastModifiedDate":"2021-04-08"},{"lineNumber":74,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":75,"author":{"gitId":"cloudy3"},"content":"Created the Asserter class to allow testing of methods.","lastModifiedDate":"2021-04-08"},{"lineNumber":76,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":77,"author":{"gitId":"cloudy3"},"content":"___","lastModifiedDate":"2021-04-08"},{"lineNumber":78,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":79,"author":{"gitId":"cloudy3"},"content":"#### Formatted all the codes to fit Java coding standards","lastModifiedDate":"2021-04-08"},{"lineNumber":80,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":81,"author":{"gitId":"cloudy3"},"content":"Made sure the format of all the codes pass the JavaCI tests.","lastModifiedDate":"2021-04-08"},{"lineNumber":82,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":83,"author":{"gitId":"cloudy3"},"content":"---","lastModifiedDate":"2021-04-08"},{"lineNumber":84,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":85,"author":{"gitId":"cloudy3"},"content":"### Contributions to documentation","lastModifiedDate":"2021-04-08"},{"lineNumber":86,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":87,"author":{"gitId":"cloudy3"},"content":"#### User Guide","lastModifiedDate":"2021-04-08"},{"lineNumber":88,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":89,"author":{"gitId":"cloudy3"},"content":"For the user guide, I have transferred over what our team has discussed on Google Docs into the User Guide, along with","lastModifiedDate":"2021-04-08"},{"lineNumber":90,"author":{"gitId":"cloudy3"},"content":"updated commands. I have formatted the guide to make it more readable too.","lastModifiedDate":"2021-04-08"},{"lineNumber":91,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":92,"author":{"gitId":"cloudy3"},"content":"___","lastModifiedDate":"2021-04-08"},{"lineNumber":93,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":94,"author":{"gitId":"cloudy3"},"content":"### Contributions to DG","lastModifiedDate":"2021-04-08"},{"lineNumber":95,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":96,"author":{"gitId":"cloudy3"},"content":"For the developer guide, my main contributions are the sequence diagrams **loadEmployees** and **loadShifts**. For","lastModifiedDate":"2021-04-08"},{"lineNumber":97,"author":{"gitId":"cloudy3"},"content":"the **Design** and **Implementation** sections of the DG, I contributed to the **Saving of Data** and **Loading of","lastModifiedDate":"2021-04-08"},{"lineNumber":98,"author":{"gitId":"cloudy3"},"content":"Data**.","lastModifiedDate":"2021-04-08"},{"lineNumber":99,"author":{"gitId":"cloudy3"},"content":"___","lastModifiedDate":"2021-04-08"},{"lineNumber":100,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":101,"author":{"gitId":"cloudy3"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2021-04-08"},{"lineNumber":102,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":103,"author":{"gitId":"cloudy3"},"content":"* Helping with Bug fixes","lastModifiedDate":"2021-04-08"},{"lineNumber":104,"author":{"gitId":"cloudy3"},"content":"* Supplying ideas for implementation and solution for Bugs","lastModifiedDate":"2021-04-08"},{"lineNumber":105,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":106,"author":{"gitId":"cloudy3"},"content":"___","lastModifiedDate":"2021-04-08"}],"authorContributionMap":{"cloudy3":106}},{"path":"gradle/wrapper/gradle-wrapper.properties","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"distributionBase\u003dGRADLE_USER_HOME","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"distributionPath\u003dwrapper/dists","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"cloudy3"},"content":"distributionUrl\u003dhttps\\://services.gradle.org/distributions/gradle-6.3-bin.zip","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"zipStoreBase\u003dGRADLE_USER_HOME","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"zipStorePath\u003dwrapper/dists","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"cloudy3":1,"-":4}},{"path":"src/main/java/asserts/Asserter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cloudy3"},"content":"package asserts;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"cloudy3"},"content":"import employee.Employee;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"cloudy3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"cloudy3"},"content":"public class Asserter {","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"cloudy3"},"content":"    public static void assertIncrementScheduleSize(int originalScheduleLength, Employee person) {","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"cloudy3"},"content":"        assert originalScheduleLength \u003d\u003d person.getSchedules().size() + 1 : \"1 schedule \"","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"cloudy3"},"content":"                + \"is supposed to be dropped.\";","lastModifiedDate":"2021-04-07"},{"lineNumber":11,"author":{"gitId":"cloudy3"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"cloudy3"},"content":"    public static void assertPositiveVacancies(int vacancy) {","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"cloudy3"},"content":"        assert vacancy \u003e 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"cloudy3"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"cloudy3"},"content":"    public static void assertNonNullEmployees(ArrayList\u003cEmployee\u003e employees) {","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"cloudy3"},"content":"        assert employees !\u003d null;","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"cloudy3"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"cloudy3"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"cloudy3":20}},{"path":"src/main/java/controller/AppController.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lihaoyangML"},"content":"package controller;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"cloudy3"},"content":"import employee.Employee;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"lihaoyangML"},"content":"import employee.EmployeeController;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"cloudy3"},"content":"import io.FileManager;","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"beaniestanley"},"content":"import shift.Shift;","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"beaniestanley"},"content":"import shift.ShiftController;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"cloudy3"},"content":"import ui.Ui;","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"cloudy3"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"lihaoyangML"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"lihaoyangML"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"cloudy3"},"content":"public class AppController {","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"cloudy3"},"content":"    private static ArrayList\u003cEmployee\u003e employees \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"cloudy3"},"content":"    private static ArrayList\u003cShift\u003e shifts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"cloudy3"},"content":"    private static final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"cloudy3"},"content":"    FileManager fileManager \u003d new FileManager();","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"cloudy3"},"content":"    public void run() throws IOException {","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"cloudy3"},"content":"        try {","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"cloudy3"},"content":"            employees \u003d fileManager.loadEmployees();","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"cloudy3"},"content":"            shifts \u003d fileManager.loadShifts();","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"cloudy3"},"content":"            System.out.println(\"Save data loaded!\");","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"cloudy3"},"content":"            for (Shift shift : shifts) {","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"cloudy3"},"content":"                if (shift.getEmployeeList() !\u003d null) {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"lihaoyangML"},"content":"                    for (String name : shift.getEmployeeList()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"lihaoyangML"},"content":"                        shift.assignEmployee(EmployeeController.getEmployeeObjectByName(name, employees));","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"cloudy3"},"content":"                    }","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"cloudy3"},"content":"                }","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"cloudy3"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"cloudy3"},"content":"            System.out.println(\"----------------------------------------------------------------------------\\n\");","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"cloudy3"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-19"},{"lineNumber":34,"author":{"gitId":"cloudy3"},"content":"            System.out.println(\"No save files found.\");","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"cloudy3"},"content":"            System.out.println(\"----------------------------------------------------------------------------\\n\");","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"cloudy3"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":37,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"lihaoyangML"},"content":"        String input;","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"lihaoyangML"},"content":"        while (true) {","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"cloudy3"},"content":"            System.out.println(\"Enter command:\\t\\t\\t(type \u0027help\u0027 for all command options)\");","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"cloudy3"},"content":"            if (sc.hasNextLine()) {","lastModifiedDate":"2021-04-09"},{"lineNumber":42,"author":{"gitId":"lihaoyangML"},"content":"                input \u003d sc.nextLine();","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"justinaquak"},"content":"                switch (input.toLowerCase()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"lihaoyangML"},"content":"                case \"add employee\":","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"lihaoyangML"},"content":"                    EmployeeController.addEmployee(employees);","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"lihaoyangML"},"content":"                    break;","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"lihaoyangML"},"content":"                case \"add schedule\":","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"lihaoyangML"},"content":"                    EmployeeController.addSchedule(employees);","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"lihaoyangML"},"content":"                    break;","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"lihaoyangML"},"content":"                case \"drop schedule\":","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"lihaoyangML"},"content":"                    EmployeeController.dropSchedule(employees);","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"lihaoyangML"},"content":"                    break;","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"lihaoyangML"},"content":"                case \"add shift\":","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"beaniestanley"},"content":"                    ShiftController.addShift(employees, shifts);","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"beaniestanley"},"content":"                    break;","lastModifiedDate":"2021-03-19"},{"lineNumber":56,"author":{"gitId":"lihaoyangML"},"content":"                case \"assign employee\":","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"beaniestanley"},"content":"                    ShiftController.assignEmployee(employees, shifts);","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"cloudy3"},"content":"                    break;","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"lihaoyangML"},"content":"                case \"unassign employee\":","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"beaniestanley"},"content":"                    ShiftController.unassignEmployee(employees, shifts);","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"cloudy3"},"content":"                    break;","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"lihaoyangML"},"content":"                case \"view employee schedule\":","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"lihaoyangML"},"content":"                    EmployeeController.viewEmployeeSchedule(employees);","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"justinaquak"},"content":"                    break;","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"justinaquak"},"content":"                case \"view shift status\":","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"beaniestanley"},"content":"                    ShiftController.viewAllShifts(shifts);","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"cloudy3"},"content":"                    break;","lastModifiedDate":"2021-03-19"},{"lineNumber":68,"author":{"gitId":"justinaquak"},"content":"                case \"view one shift\":","lastModifiedDate":"2021-03-19"},{"lineNumber":69,"author":{"gitId":"beaniestanley"},"content":"                    ShiftController.viewOneShift(shifts);","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"cloudy3"},"content":"                    break;","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"cloudy3"},"content":"                case \"list\":","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"lihaoyangML"},"content":"                    EmployeeController.listAllEmployees(employees);","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"cloudy3"},"content":"                    break;","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"lihaoyangML"},"content":"                case \"help\":","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"cloudy3"},"content":"                    Ui.printHelpMessage();","lastModifiedDate":"2021-04-07"},{"lineNumber":76,"author":{"gitId":"lihaoyangML"},"content":"                    break;","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"lihaoyangML"},"content":"                case \"quit\":","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"cloudy3"},"content":"                    sc.close();","lastModifiedDate":"2021-04-07"},{"lineNumber":79,"author":{"gitId":"cloudy3"},"content":"                    fileManager.saveEmployees(employees);","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"cloudy3"},"content":"                    fileManager.saveShifts(shifts);","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"lihaoyangML"},"content":"                    return;","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"lihaoyangML"},"content":"                default:","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"lihaoyangML"},"content":"                    System.out.println(\"invalid command\");","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"lihaoyangML"},"content":"                }","lastModifiedDate":"2021-03-18"},{"lineNumber":85,"author":{"gitId":"lihaoyangML"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":86,"author":{"gitId":"lihaoyangML"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":87,"author":{"gitId":"beaniestanley"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":88,"author":{"gitId":"cloudy3"},"content":"}","lastModifiedDate":"2021-04-09"},{"lineNumber":89,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-19"}],"authorContributionMap":{"beaniestanley":11,"justinaquak":4,"cloudy3":38,"lihaoyangML":36}},{"path":"src/main/java/employee/Employee.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lihaoyangML"},"content":"package employee;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"lihaoyangML"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"cloudy3"},"content":"public class Employee {","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"lihaoyangML"},"content":"    private String name;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"lihaoyangML"},"content":"    private ArrayList\u003cString\u003e schedules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"lihaoyangML"},"content":"    private static final int MAX_DAY_OF_ODD_MONTH \u003d 31;","lastModifiedDate":"2021-04-08"},{"lineNumber":9,"author":{"gitId":"lihaoyangML"},"content":"    private static final int MAX_DAY_OF_EVEN_MONTH \u003d 30;","lastModifiedDate":"2021-04-08"},{"lineNumber":10,"author":{"gitId":"lihaoyangML"},"content":"    private static final int MAX_DAY_OF_FEB \u003d 28;","lastModifiedDate":"2021-04-08"},{"lineNumber":11,"author":{"gitId":"lihaoyangML"},"content":"    private static final int MIN_DAY_OF_MONTH \u003d 1;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"lihaoyangML"},"content":"    private static final int MAX_MONTH_OF_YEAR \u003d 12;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"lihaoyangML"},"content":"    private static final int MIN_MONTH_OF_YEAR \u003d 1;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"lihaoyangML"},"content":"    private static final int MAX_ALLOWABLE_YEAR \u003d 2099;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"lihaoyangML"},"content":"    private static final int MIN_ALLOWABLE_YEAR \u003d 2021;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"cloudy3"},"content":"    public Employee(String name) {","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"lihaoyangML"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"lihaoyangML"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"lihaoyangML"},"content":"    public String getName() {","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"lihaoyangML"},"content":"        return name;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"lihaoyangML"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"cloudy3"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"cloudy3"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"cloudy3"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"lihaoyangML"},"content":"    public boolean addSchedule(String schedule) {","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"cloudy3"},"content":"        if (isScheduleValid(schedule)) {","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"lihaoyangML"},"content":"            schedules.add(schedule);","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"lihaoyangML"},"content":"            return true;","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"lihaoyangML"},"content":"        } else {","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"lihaoyangML"},"content":"            return false;","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"lihaoyangML"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"lihaoyangML"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"beaniestanley"},"content":"    public static boolean isScheduleValid(String schedule) {","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"lihaoyangML"},"content":"        if (schedule.length() !\u003d 10) {","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"lihaoyangML"},"content":"            return false;","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"lihaoyangML"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"cloudy3"},"content":"        if (!schedule.substring(\"dd\".length(), \"dd/\".length()).equals(\"/\")","lastModifiedDate":"2021-04-07"},{"lineNumber":43,"author":{"gitId":"cloudy3"},"content":"                || !schedule.substring(\"dd/mm\".length(), \"dd/mm/\".length()).equals(\"/\")) {","lastModifiedDate":"2021-04-07"},{"lineNumber":44,"author":{"gitId":"lihaoyangML"},"content":"            return false;","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"lihaoyangML"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"lihaoyangML"},"content":"        String day \u003d schedule.substring(0, \"dd\".length());","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"lihaoyangML"},"content":"        String month \u003d schedule.substring(\"dd/\".length(), \"dd/mm\".length());","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"lihaoyangML"},"content":"        String year \u003d schedule.substring(\"dd/mm/\".length(), \"dd/mm/yyyy\".length());","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"cloudy3"},"content":"        if (!isInteger(day) || !isInteger(month) || !isInteger(year)) {","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"lihaoyangML"},"content":"            return false;","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"lihaoyangML"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"lihaoyangML"},"content":"        int yyyy \u003d Integer.parseInt(year);","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"lihaoyangML"},"content":"        int mm \u003d Integer.parseInt(month);","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"lihaoyangML"},"content":"        int dd \u003d Integer.parseInt(day);","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"lihaoyangML"},"content":"        if (yyyy \u003c MIN_ALLOWABLE_YEAR || yyyy \u003e MAX_ALLOWABLE_YEAR) {","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"lihaoyangML"},"content":"            return false;","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"lihaoyangML"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"lihaoyangML"},"content":"        if (mm \u003c MIN_MONTH_OF_YEAR || mm \u003e MAX_MONTH_OF_YEAR) {","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"lihaoyangML"},"content":"            return false;","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"lihaoyangML"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"lihaoyangML"},"content":"        if (dd \u003c MIN_DAY_OF_MONTH) {","lastModifiedDate":"2021-04-08"},{"lineNumber":62,"author":{"gitId":"lihaoyangML"},"content":"            return false;","lastModifiedDate":"2021-04-08"},{"lineNumber":63,"author":{"gitId":"lihaoyangML"},"content":"        }","lastModifiedDate":"2021-04-08"},{"lineNumber":64,"author":{"gitId":"lihaoyangML"},"content":"        if (mm % 2 \u003d\u003d 1) {","lastModifiedDate":"2021-04-08"},{"lineNumber":65,"author":{"gitId":"cloudy3"},"content":"            return dd \u003c\u003d MAX_DAY_OF_ODD_MONTH;","lastModifiedDate":"2021-04-09"},{"lineNumber":66,"author":{"gitId":"lihaoyangML"},"content":"        } else if (mm !\u003d 2) {","lastModifiedDate":"2021-04-08"},{"lineNumber":67,"author":{"gitId":"cloudy3"},"content":"            return dd \u003c\u003d MAX_DAY_OF_EVEN_MONTH;","lastModifiedDate":"2021-04-09"},{"lineNumber":68,"author":{"gitId":"lihaoyangML"},"content":"        } else {","lastModifiedDate":"2021-04-08"},{"lineNumber":69,"author":{"gitId":"cloudy3"},"content":"            return dd \u003c\u003d MAX_DAY_OF_FEB;","lastModifiedDate":"2021-04-09"},{"lineNumber":70,"author":{"gitId":"lihaoyangML"},"content":"        }","lastModifiedDate":"2021-04-08"},{"lineNumber":71,"author":{"gitId":"lihaoyangML"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"lihaoyangML"},"content":"    public void dropSchedule(String schedule) {","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"lihaoyangML"},"content":"        schedules.remove(schedule);","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"lihaoyangML"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"lihaoyangML"},"content":"    public ArrayList\u003cString\u003e getSchedules() {","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"lihaoyangML"},"content":"        return schedules;","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"lihaoyangML"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"cloudy3"},"content":"    public String formatData() {","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"cloudy3"},"content":"        StringBuilder formattedString \u003d new StringBuilder(getName());","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"cloudy3"},"content":"        for (String schedule : getSchedules()) {","lastModifiedDate":"2021-03-18"},{"lineNumber":85,"author":{"gitId":"cloudy3"},"content":"            formattedString.append(\"#\");","lastModifiedDate":"2021-03-18"},{"lineNumber":86,"author":{"gitId":"cloudy3"},"content":"            formattedString.append(schedule);","lastModifiedDate":"2021-03-18"},{"lineNumber":87,"author":{"gitId":"cloudy3"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":88,"author":{"gitId":"cloudy3"},"content":"        return formattedString + \"\\n\";","lastModifiedDate":"2021-03-18"},{"lineNumber":89,"author":{"gitId":"cloudy3"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":90,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"lihaoyangML"},"content":"    private static boolean isInteger(String input) {","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"lihaoyangML"},"content":"        try {","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"lihaoyangML"},"content":"            Integer.parseInt(input);","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"cloudy3"},"content":"        } catch (NumberFormatException | NullPointerException e) {","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"lihaoyangML"},"content":"            return false;","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"lihaoyangML"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"lihaoyangML"},"content":"        return true;","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"lihaoyangML"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"justinaquak"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"justinaquak"},"content":"    public String toString() {","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"justinaquak"},"content":"        return name;","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"justinaquak"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"lihaoyangML"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"beaniestanley":1,"justinaquak":4,"cloudy3":24,"lihaoyangML":75}},{"path":"src/main/java/employee/EmployeeController.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lihaoyangML"},"content":"package employee;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"cloudy3"},"content":"import asserts.Asserter;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"lihaoyangML"},"content":"import ui.Ui;","lastModifiedDate":"2021-04-08"},{"lineNumber":5,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"lihaoyangML"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"lihaoyangML"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"lihaoyangML"},"content":"public class EmployeeController {","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"lihaoyangML"},"content":"    private static final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"lihaoyangML"},"content":"    public static void addEmployee(ArrayList\u003cEmployee\u003e employees) {","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"lihaoyangML"},"content":"        System.out.println(\"enter Employee name\");","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"lihaoyangML"},"content":"        String name \u003d sc.nextLine();","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"cloudy3"},"content":"        if (isEmployeeDuplicate(employees, name)) {","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"lihaoyangML"},"content":"            System.out.println(\"This employee already exist in the database\");","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"lihaoyangML"},"content":"        } else {","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"lihaoyangML"},"content":"            Employee newEmployee \u003d new Employee(name);","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"lihaoyangML"},"content":"            employees.add(newEmployee);","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"lihaoyangML"},"content":"            System.out.println(\"Employee added\");","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"lihaoyangML"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"lihaoyangML"},"content":"    }","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"lihaoyangML"},"content":"    private static boolean isEmployeeDuplicate(ArrayList\u003cEmployee\u003e employees, String name) {","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"lihaoyangML"},"content":"        for (Employee employee : employees) {","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"lihaoyangML"},"content":"            if (employee.getName().equals(name)) {","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"lihaoyangML"},"content":"                return true;","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"lihaoyangML"},"content":"            }","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"lihaoyangML"},"content":"        }","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"lihaoyangML"},"content":"        return false;","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"lihaoyangML"},"content":"    }","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"lihaoyangML"},"content":"    public static void addSchedule(ArrayList\u003cEmployee\u003e employees) {","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"lihaoyangML"},"content":"        System.out.println(\"enter Employee name\");","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"lihaoyangML"},"content":"        String name \u003d sc.nextLine();","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"lihaoyangML"},"content":"        for (Employee person : employees) {","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"lihaoyangML"},"content":"            if (person.getName().equals(name)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"lihaoyangML"},"content":"                System.out.println(\"enter Employee schedule\");","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"lihaoyangML"},"content":"                String schedule \u003d sc.nextLine();","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"cloudy3"},"content":"                if (isScheduleDuplicate(person, schedule)) {","lastModifiedDate":"2021-04-09"},{"lineNumber":42,"author":{"gitId":"lihaoyangML"},"content":"                    System.out.println(\"This schedule already exist in the database\");","lastModifiedDate":"2021-04-09"},{"lineNumber":43,"author":{"gitId":"lihaoyangML"},"content":"                    return;","lastModifiedDate":"2021-04-09"},{"lineNumber":44,"author":{"gitId":"lihaoyangML"},"content":"                }","lastModifiedDate":"2021-04-09"},{"lineNumber":45,"author":{"gitId":"lihaoyangML"},"content":"                boolean isScheduleValid \u003d person.addSchedule(schedule);","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"lihaoyangML"},"content":"                if (isScheduleValid) {","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"lihaoyangML"},"content":"                    System.out.println(\"schedule added\");","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"lihaoyangML"},"content":"                } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"lihaoyangML"},"content":"                    System.out.println(\"The schedule is invalid\");","lastModifiedDate":"2021-04-08"},{"lineNumber":50,"author":{"gitId":"lihaoyangML"},"content":"                    Ui.printInvalidScheduleFeedbackMessage();","lastModifiedDate":"2021-04-08"},{"lineNumber":51,"author":{"gitId":"lihaoyangML"},"content":"                }","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"lihaoyangML"},"content":"                return;","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"lihaoyangML"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"lihaoyangML"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"lihaoyangML"},"content":"        System.out.println(\"Employee not found\");","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"lihaoyangML"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"lihaoyangML"},"content":"    private static boolean isScheduleDuplicate(Employee employee, String newSchedule) {","lastModifiedDate":"2021-04-09"},{"lineNumber":59,"author":{"gitId":"lihaoyangML"},"content":"        ArrayList\u003cString\u003e employeeSchedules \u003d employee.getSchedules();","lastModifiedDate":"2021-04-09"},{"lineNumber":60,"author":{"gitId":"lihaoyangML"},"content":"        for (String schedule : employeeSchedules) {","lastModifiedDate":"2021-04-09"},{"lineNumber":61,"author":{"gitId":"lihaoyangML"},"content":"            if (schedule.equals(newSchedule)) {","lastModifiedDate":"2021-04-09"},{"lineNumber":62,"author":{"gitId":"lihaoyangML"},"content":"                return true;","lastModifiedDate":"2021-04-09"},{"lineNumber":63,"author":{"gitId":"lihaoyangML"},"content":"            }","lastModifiedDate":"2021-04-09"},{"lineNumber":64,"author":{"gitId":"lihaoyangML"},"content":"        }","lastModifiedDate":"2021-04-09"},{"lineNumber":65,"author":{"gitId":"lihaoyangML"},"content":"        return false;","lastModifiedDate":"2021-04-09"},{"lineNumber":66,"author":{"gitId":"lihaoyangML"},"content":"    }","lastModifiedDate":"2021-04-09"},{"lineNumber":67,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":68,"author":{"gitId":"lihaoyangML"},"content":"    public static void dropSchedule(ArrayList\u003cEmployee\u003e employees) {","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"lihaoyangML"},"content":"        System.out.println(\"enter Employee name\");","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"lihaoyangML"},"content":"        String name \u003d sc.nextLine();","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"lihaoyangML"},"content":"        for (Employee person : employees) {","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"lihaoyangML"},"content":"            if (person.getName().equals(name)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"lihaoyangML"},"content":"                System.out.println(\"enter Employee schedule\");","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"lihaoyangML"},"content":"                String scheduleToDrop \u003d sc.nextLine();","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"lihaoyangML"},"content":"                ArrayList\u003cString\u003e schedules \u003d person.getSchedules();","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"lihaoyangML"},"content":"                int originalScheduleLength \u003d schedules.size();","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"lihaoyangML"},"content":"                for (String schedule : schedules) {","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"lihaoyangML"},"content":"                    if (schedule.equals(scheduleToDrop)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"lihaoyangML"},"content":"                        person.dropSchedule(scheduleToDrop);","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"cloudy3"},"content":"                        Asserter.assertIncrementScheduleSize(originalScheduleLength, person);","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"lihaoyangML"},"content":"                        System.out.println(\"schedule dropped\");","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"lihaoyangML"},"content":"                        return;","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"lihaoyangML"},"content":"                    }","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"lihaoyangML"},"content":"                }","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"lihaoyangML"},"content":"                System.out.println(\"schedule not found\");","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"lihaoyangML"},"content":"                return;","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"lihaoyangML"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"lihaoyangML"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"lihaoyangML"},"content":"        System.out.println(\"Employee not found\");","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"lihaoyangML"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"lihaoyangML"},"content":"    public static void listAllEmployees(ArrayList\u003cEmployee\u003e employees) {","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"lihaoyangML"},"content":"        int i;","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"lihaoyangML"},"content":"        System.out.println(\"Here is the employee list:\");","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"lihaoyangML"},"content":"        for (i \u003d 0; i \u003c employees.size(); i++) {","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"lihaoyangML"},"content":"            System.out.println(i + 1 + \") \" + employees.get(i).getName());","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"lihaoyangML"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"lihaoyangML"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"beaniestanley"},"content":"    public static boolean isEmployeeFound(String name, ArrayList\u003cEmployee\u003e employees) {","lastModifiedDate":"2021-04-12"},{"lineNumber":101,"author":{"gitId":"lihaoyangML"},"content":"        for (Employee person : employees) {","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"lihaoyangML"},"content":"            if (person.getName().equals(name)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"lihaoyangML"},"content":"                return true;","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"lihaoyangML"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"lihaoyangML"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"lihaoyangML"},"content":"        return false;","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"lihaoyangML"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"lihaoyangML"},"content":"    public static void viewEmployeeSchedule(ArrayList\u003cEmployee\u003e employees) {","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"lihaoyangML"},"content":"        System.out.println(\"enter Employee name\");","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"lihaoyangML"},"content":"        String name \u003d sc.nextLine();","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"cloudy3"},"content":"        for (Employee person : employees) {","lastModifiedDate":"2021-04-07"},{"lineNumber":113,"author":{"gitId":"lihaoyangML"},"content":"            if (person.getName().equals(name)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"lihaoyangML"},"content":"                System.out.println(person.getSchedules());","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"lihaoyangML"},"content":"                return;","lastModifiedDate":"2021-03-31"},{"lineNumber":116,"author":{"gitId":"lihaoyangML"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":117,"author":{"gitId":"cloudy3"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":118,"author":{"gitId":"lihaoyangML"},"content":"        System.out.println(\"Employee not found\");","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"lihaoyangML"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"lihaoyangML"},"content":"    public static Employee getEmployeeObjectByName(String name, ArrayList\u003cEmployee\u003e employees) {","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"lihaoyangML"},"content":"        for (Employee person : employees) {","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"lihaoyangML"},"content":"            if (person.getName().equals(name)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":124,"author":{"gitId":"lihaoyangML"},"content":"                return person;","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"lihaoyangML"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":126,"author":{"gitId":"lihaoyangML"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":127,"author":{"gitId":"lihaoyangML"},"content":"        return null;","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"lihaoyangML"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":129,"author":{"gitId":"lihaoyangML"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"beaniestanley":1,"cloudy3":7,"lihaoyangML":121}},{"path":"src/main/java/io/FileManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cloudy3"},"content":"package io;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"cloudy3"},"content":"import employee.Employee;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"cloudy3"},"content":"import parser.DataParser;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"cloudy3"},"content":"import shift.Shift;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"cloudy3"},"content":"import java.io.File;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"cloudy3"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"cloudy3"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"cloudy3"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"cloudy3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"cloudy3"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"cloudy3"},"content":"public class FileManager {","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"cloudy3"},"content":"    private static DataParser dataParser;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"cloudy3"},"content":"    public FileManager() {","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"cloudy3"},"content":"        dataParser \u003d new DataParser();","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"cloudy3"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"cloudy3"},"content":"    public void saveEmployees(ArrayList\u003cEmployee\u003e employees) throws IOException {","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"cloudy3"},"content":"        File path \u003d new File(\"employees.txt\");","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"cloudy3"},"content":"        if (!path.exists()) {","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"cloudy3"},"content":"            if (!path.createNewFile()) {","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"cloudy3"},"content":"                throw new IOException();","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"cloudy3"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"cloudy3"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"cloudy3"},"content":"        FileWriter fileWriter \u003d new FileWriter(path);","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"cloudy3"},"content":"        for (Employee employee : employees) {","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"cloudy3"},"content":"            fileWriter.write(employee.formatData());","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"cloudy3"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"cloudy3"},"content":"        fileWriter.flush();","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"cloudy3"},"content":"        fileWriter.close();","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"cloudy3"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"cloudy3"},"content":"    public void saveShifts(ArrayList\u003cShift\u003e shifts) throws IOException {","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"cloudy3"},"content":"        File path \u003d new File(\"shifts.txt\");","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"cloudy3"},"content":"        if (!path.exists()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"cloudy3"},"content":"            if (!path.createNewFile()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"cloudy3"},"content":"                throw new IOException();","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"cloudy3"},"content":"            }","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"cloudy3"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"cloudy3"},"content":"        FileWriter fileWriter \u003d new FileWriter(path);","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"cloudy3"},"content":"        for (Shift shift : shifts) {","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"cloudy3"},"content":"            fileWriter.write(shift.formatData());","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"cloudy3"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"cloudy3"},"content":"        fileWriter.flush();","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"cloudy3"},"content":"        fileWriter.close();","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"cloudy3"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"cloudy3"},"content":"    public ArrayList\u003cEmployee\u003e loadEmployees() throws FileNotFoundException {","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"cloudy3"},"content":"        ArrayList\u003cEmployee\u003e employees \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-19"},{"lineNumber":54,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"cloudy3"},"content":"        File path \u003d new File(\"employees.txt\");","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"cloudy3"},"content":"        if (!path.exists()) {","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"cloudy3"},"content":"            throw new FileNotFoundException();","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"cloudy3"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"cloudy3"},"content":"        Scanner scanner \u003d new Scanner(path);","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"cloudy3"},"content":"        try {","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"cloudy3"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"cloudy3"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"cloudy3"},"content":"                Employee employee \u003d dataParser.parseData(line);","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"cloudy3"},"content":"                if (employee !\u003d null) {","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"cloudy3"},"content":"                    employees.add(employee);","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"cloudy3"},"content":"                }","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"cloudy3"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"cloudy3"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"cloudy3"},"content":"            System.out.println(\"Failed to load employees!\");","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"cloudy3"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"cloudy3"},"content":"        return employees;","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"cloudy3"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"cloudy3"},"content":"    public ArrayList\u003cShift\u003e loadShifts() throws FileNotFoundException {","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"cloudy3"},"content":"        ArrayList\u003cShift\u003e shifts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"cloudy3"},"content":"        File path \u003d new File(\"shifts.txt\");","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"cloudy3"},"content":"        if (!path.exists()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"cloudy3"},"content":"            throw new FileNotFoundException();","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"cloudy3"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"cloudy3"},"content":"        Scanner scanner \u003d new Scanner(path);","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"cloudy3"},"content":"        try {","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"cloudy3"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"cloudy3"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"cloudy3"},"content":"                Shift shift \u003d dataParser.parseShift(line);","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"cloudy3"},"content":"                if (shift !\u003d null) {","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"cloudy3"},"content":"                    shifts.add(shift);","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"cloudy3"},"content":"                }","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"cloudy3"},"content":"            }","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"cloudy3"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"cloudy3"},"content":"            System.out.println(\"Failed to load shifts!\");","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"cloudy3"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"cloudy3"},"content":"        return shifts;","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"cloudy3"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"cloudy3"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"cloudy3":95}},{"path":"src/main/java/parser/DataParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cloudy3"},"content":"package parser;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"cloudy3"},"content":"import employee.Employee;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"cloudy3"},"content":"import shift.Shift;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"cloudy3"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"cloudy3"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"cloudy3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"cloudy3"},"content":"public class DataParser {","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"cloudy3"},"content":"    public Employee parseData(String line) {","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"cloudy3"},"content":"        String[] splitByHex \u003d line.split(\"#\");","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"cloudy3"},"content":"        Employee parsedEmployee \u003d new Employee(null);","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"cloudy3"},"content":"        parsedEmployee.setName(splitByHex[0]);","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"cloudy3"},"content":"        for (int scheduleIndex \u003d 1; scheduleIndex \u003c splitByHex.length; scheduleIndex++) {","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"cloudy3"},"content":"            parsedEmployee.addSchedule(splitByHex[scheduleIndex]);","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"cloudy3"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"cloudy3"},"content":"        return parsedEmployee;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"cloudy3"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"cloudy3"},"content":"    public Shift parseShift(String line) {","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"cloudy3"},"content":"        String[] splitByHex \u003d line.split(\"#\");","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"cloudy3"},"content":"        ArrayList\u003cEmployee\u003e employees \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"cloudy3"},"content":"        Shift parsedShift \u003d new Shift(employees, null, 1, 0);","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"cloudy3"},"content":"        parsedShift.setShiftDate(LocalDate.parse(splitByHex[0], DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")));","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"cloudy3"},"content":"        parsedShift.setVacancy(Integer.parseInt(splitByHex[1]));","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"cloudy3"},"content":"        parsedShift.setShiftIndex(Integer.parseInt(splitByHex[2]));","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"cloudy3"},"content":"        ArrayList\u003cString\u003e employeeNames \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"cloudy3"},"content":"        for (int shiftIndex \u003d 3; shiftIndex \u003c splitByHex.length; shiftIndex++) {","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"cloudy3"},"content":"            employeeNames.add(splitByHex[shiftIndex]);","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"cloudy3"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"cloudy3"},"content":"        parsedShift.setEmployees(employeeNames);","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"cloudy3"},"content":"        return parsedShift;","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"cloudy3"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"cloudy3"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"cloudy3":40}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"cloudy3"},"content":"import controller.AppController;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"cloudy3"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":7,"author":{"gitId":"cloudy3"},"content":"import ui.Ui;","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application.","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"cloudy3"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"cloudy3"},"content":"        Ui.printWelcomeMessage();","lastModifiedDate":"2021-04-07"},{"lineNumber":15,"author":{"gitId":"cloudy3"},"content":"        Ui.printHelpMessage();","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"cloudy3"},"content":"        AppController controller \u003d new AppController();","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"lihaoyangML"},"content":"        controller.run();","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"cloudy3"},"content":"        Ui.printExitMessage();","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"cloudy3":10,"lihaoyangML":1,"-":10}},{"path":"src/main/java/shift/Shift.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"beaniestanley"},"content":"package shift;","lastModifiedDate":"2021-03-19"},{"lineNumber":2,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":3,"author":{"gitId":"cloudy3"},"content":"import asserts.Asserter;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"beaniestanley"},"content":"import employee.Employee;","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"beaniestanley"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"beaniestanley"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"beaniestanley"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"beaniestanley"},"content":"public class Shift {","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"beaniestanley"},"content":"    private ArrayList\u003cEmployee\u003e employees;","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"cloudy3"},"content":"    private ArrayList\u003cString\u003e employeeList \u003d null;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"beaniestanley"},"content":"    private LocalDate shiftDate;","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"beaniestanley"},"content":"    private int vacancy;","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"beaniestanley"},"content":"    private int shiftIndex;","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"beaniestanley"},"content":"    public Shift(ArrayList\u003cEmployee\u003e employees, LocalDate shiftDate, int shiftIndex, int vacancy) {","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"cloudy3"},"content":"        Asserter.assertNonNullEmployees(employees);","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"beaniestanley"},"content":"        this.employees \u003d employees;","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"beaniestanley"},"content":"        this.shiftDate \u003d shiftDate;","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"beaniestanley"},"content":"        this.vacancy \u003d vacancy;","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"beaniestanley"},"content":"        this.shiftIndex \u003d shiftIndex;","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"beaniestanley"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":24,"author":{"gitId":"beaniestanley"},"content":"    public ArrayList\u003cEmployee\u003e getEmployees() {","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"beaniestanley"},"content":"        return employees;","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"beaniestanley"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"cloudy3"},"content":"    public ArrayList\u003cString\u003e getEmployeeList() {","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"cloudy3"},"content":"        return employeeList;","lastModifiedDate":"2021-04-07"},{"lineNumber":30,"author":{"gitId":"cloudy3"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"cloudy3"},"content":"    public void setEmployees(ArrayList\u003cString\u003e employees) {","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"cloudy3"},"content":"        this.employeeList \u003d employees;","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"beaniestanley"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":36,"author":{"gitId":"beaniestanley"},"content":"    public void assignEmployee(Employee e) {","lastModifiedDate":"2021-03-19"},{"lineNumber":37,"author":{"gitId":"beaniestanley"},"content":"        if (this.vacancy \u003e 0) {","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"beaniestanley"},"content":"            employees.add(e);","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"beaniestanley"},"content":"            this.vacancy--;","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"cloudy3"},"content":"            Asserter.assertPositiveVacancies(this.vacancy);","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"beaniestanley"},"content":"            System.out.println(\"Employee \" + e.getName() + \" is successfully assigned to this shift.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"cloudy3"},"content":"        } else {","lastModifiedDate":"2021-04-07"},{"lineNumber":43,"author":{"gitId":"beaniestanley"},"content":"            System.out.println(\"Shift is full. Employee \" + e.getName() + \" is not assigned to this shift.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"beaniestanley"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":45,"author":{"gitId":"beaniestanley"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":46,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":47,"author":{"gitId":"beaniestanley"},"content":"    public void unassignEmployee(Employee e) {","lastModifiedDate":"2021-03-19"},{"lineNumber":48,"author":{"gitId":"beaniestanley"},"content":"        employees.remove(e);","lastModifiedDate":"2021-03-19"},{"lineNumber":49,"author":{"gitId":"beaniestanley"},"content":"        this.vacancy++;","lastModifiedDate":"2021-03-20"},{"lineNumber":50,"author":{"gitId":"beaniestanley"},"content":"        System.out.println(\"Employee \" + e.getName() + \" is successfully unassigned from this shift.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"beaniestanley"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":52,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":53,"author":{"gitId":"beaniestanley"},"content":"    public LocalDate getShiftDate() {","lastModifiedDate":"2021-03-19"},{"lineNumber":54,"author":{"gitId":"beaniestanley"},"content":"        return shiftDate;","lastModifiedDate":"2021-03-19"},{"lineNumber":55,"author":{"gitId":"beaniestanley"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":56,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":57,"author":{"gitId":"beaniestanley"},"content":"    public void setShiftDate(LocalDate shiftDate) {","lastModifiedDate":"2021-03-19"},{"lineNumber":58,"author":{"gitId":"beaniestanley"},"content":"        this.shiftDate \u003d shiftDate;","lastModifiedDate":"2021-03-19"},{"lineNumber":59,"author":{"gitId":"beaniestanley"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":60,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":61,"author":{"gitId":"beaniestanley"},"content":"    public int getShiftIndex() {","lastModifiedDate":"2021-03-19"},{"lineNumber":62,"author":{"gitId":"beaniestanley"},"content":"        return shiftIndex;","lastModifiedDate":"2021-03-19"},{"lineNumber":63,"author":{"gitId":"beaniestanley"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":64,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":65,"author":{"gitId":"beaniestanley"},"content":"    public void setShiftIndex(int shiftIndex) {","lastModifiedDate":"2021-03-19"},{"lineNumber":66,"author":{"gitId":"beaniestanley"},"content":"        if (shiftIndex \u003c 1 || shiftIndex \u003e 6) {","lastModifiedDate":"2021-03-19"},{"lineNumber":67,"author":{"gitId":"beaniestanley"},"content":"            System.out.println(\"Shift Index value not accepted. Values should be 1 to 6.\");","lastModifiedDate":"2021-03-19"},{"lineNumber":68,"author":{"gitId":"cloudy3"},"content":"        } else {","lastModifiedDate":"2021-04-07"},{"lineNumber":69,"author":{"gitId":"beaniestanley"},"content":"            this.shiftIndex \u003d shiftIndex;","lastModifiedDate":"2021-03-19"},{"lineNumber":70,"author":{"gitId":"beaniestanley"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":71,"author":{"gitId":"beaniestanley"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":72,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":73,"author":{"gitId":"beaniestanley"},"content":"    public int getVacancy() {","lastModifiedDate":"2021-03-19"},{"lineNumber":74,"author":{"gitId":"beaniestanley"},"content":"        return vacancy;","lastModifiedDate":"2021-03-19"},{"lineNumber":75,"author":{"gitId":"beaniestanley"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":76,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":77,"author":{"gitId":"beaniestanley"},"content":"    public void setVacancy(int vacancy) {","lastModifiedDate":"2021-03-19"},{"lineNumber":78,"author":{"gitId":"beaniestanley"},"content":"        this.vacancy \u003d vacancy;","lastModifiedDate":"2021-03-19"},{"lineNumber":79,"author":{"gitId":"beaniestanley"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":80,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"cloudy3"},"content":"    public String getShiftDateToString() {","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"cloudy3"},"content":"        return shiftDate.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"cloudy3"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"cloudy3"},"content":"    public String formatData() {","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"cloudy3"},"content":"        StringBuilder formattedString \u003d new StringBuilder(getShiftDateToString());","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"cloudy3"},"content":"        formattedString.append(\"#\");","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"cloudy3"},"content":"        formattedString.append(vacancy);","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"cloudy3"},"content":"        formattedString.append(\"#\");","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"cloudy3"},"content":"        formattedString.append(shiftIndex);","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"cloudy3"},"content":"        for (Employee employee : employees) {","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"cloudy3"},"content":"            formattedString.append(\"#\");","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"cloudy3"},"content":"            formattedString.append(employee.getName());","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"cloudy3"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"cloudy3"},"content":"        return formattedString + \"\\n\";","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"cloudy3"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"beaniestanley"},"content":"}","lastModifiedDate":"2021-03-19"}],"authorContributionMap":{"beaniestanley":68,"cloudy3":30}},{"path":"src/main/java/shift/ShiftController.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"beaniestanley"},"content":"package shift;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"beaniestanley"},"content":"import employee.Employee;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"beaniestanley"},"content":"import employee.EmployeeController;","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"beaniestanley"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"beaniestanley"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"beaniestanley"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"beaniestanley"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"beaniestanley"},"content":"public class ShiftController {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"beaniestanley"},"content":"    private static LocalDate getShiftDate() {","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"beaniestanley"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"beaniestanley"},"content":"        while (true) {","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"beaniestanley"},"content":"            System.out.println(\"Enter Shift date (in dd/MM/yyyy):\");","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"beaniestanley"},"content":"            String date \u003d sc.nextLine();","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"beaniestanley"},"content":"            LocalDate shiftDate;","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"beaniestanley"},"content":"            if (Employee.isScheduleValid(date)) {","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"beaniestanley"},"content":"                shiftDate \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"beaniestanley"},"content":"                return shiftDate;","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"beaniestanley"},"content":"            }","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"beaniestanley"},"content":"            System.out.println(\"Please enter a valid date.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"beaniestanley"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"beaniestanley"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"beaniestanley"},"content":"    private static int getShiftIndex() {","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"beaniestanley"},"content":"        int shiftIndex \u003d 0;","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"beaniestanley"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"beaniestanley"},"content":"        do {","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"beaniestanley"},"content":"            System.out.println(\"Enter Shift index:\");","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"beaniestanley"},"content":"            try {","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"beaniestanley"},"content":"                shiftIndex \u003d Integer.parseInt(sc.nextLine());","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"beaniestanley"},"content":"            } catch (NumberFormatException | NullPointerException e ) {","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"beaniestanley"},"content":"                System.out.println(\"Shift Index value not accepted. Please input integer values from 1 to 6.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"beaniestanley"},"content":"                continue;","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"beaniestanley"},"content":"            }","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"beaniestanley"},"content":"            if (shiftIndex \u003c 1 || shiftIndex \u003e 6) {","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"beaniestanley"},"content":"                System.out.println(\"Shift Index value not accepted. Please input integer values from 1 to 6.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"beaniestanley"},"content":"            }","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"beaniestanley"},"content":"        } while (shiftIndex \u003c 1 || shiftIndex \u003e 6);","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"beaniestanley"},"content":"        return shiftIndex;","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"beaniestanley"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"beaniestanley"},"content":"    private static int getVacancy() {","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"beaniestanley"},"content":"        int vacancy \u003d 0;","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"beaniestanley"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"beaniestanley"},"content":"        do {","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"beaniestanley"},"content":"            System.out.println(\"Enter Vacancy:\");","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"beaniestanley"},"content":"            try {","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"beaniestanley"},"content":"                vacancy \u003d Integer.parseInt(sc.nextLine());","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"beaniestanley"},"content":"            } catch (NumberFormatException | NullPointerException e ) {","lastModifiedDate":"2021-04-12"},{"lineNumber":53,"author":{"gitId":"beaniestanley"},"content":"                System.out.println(\"Vacancy value not accepted. Please input a positive integer value (greater than 0).\");","lastModifiedDate":"2021-04-12"},{"lineNumber":54,"author":{"gitId":"beaniestanley"},"content":"                continue;","lastModifiedDate":"2021-04-12"},{"lineNumber":55,"author":{"gitId":"beaniestanley"},"content":"            }","lastModifiedDate":"2021-04-12"},{"lineNumber":56,"author":{"gitId":"beaniestanley"},"content":"            if (vacancy \u003c 1) {","lastModifiedDate":"2021-04-12"},{"lineNumber":57,"author":{"gitId":"beaniestanley"},"content":"                System.out.println(\"Vacancy value not accepted. Please input a positive integer value (greater than 0).\");","lastModifiedDate":"2021-04-12"},{"lineNumber":58,"author":{"gitId":"beaniestanley"},"content":"            }","lastModifiedDate":"2021-04-12"},{"lineNumber":59,"author":{"gitId":"beaniestanley"},"content":"        } while (vacancy \u003c 1);","lastModifiedDate":"2021-04-12"},{"lineNumber":60,"author":{"gitId":"beaniestanley"},"content":"        return vacancy;","lastModifiedDate":"2021-04-12"},{"lineNumber":61,"author":{"gitId":"beaniestanley"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":62,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":63,"author":{"gitId":"beaniestanley"},"content":"    private static Shift getShift(LocalDate shiftDate, int shiftIndex, ArrayList\u003cShift\u003e shifts) {","lastModifiedDate":"2021-04-12"},{"lineNumber":64,"author":{"gitId":"beaniestanley"},"content":"        for (Shift shift : shifts) {","lastModifiedDate":"2021-04-12"},{"lineNumber":65,"author":{"gitId":"beaniestanley"},"content":"            if (shift.getShiftDate().equals(shiftDate) \u0026\u0026 shift.getShiftIndex() \u003d\u003d shiftIndex) {","lastModifiedDate":"2021-04-12"},{"lineNumber":66,"author":{"gitId":"beaniestanley"},"content":"                return shift;","lastModifiedDate":"2021-04-12"},{"lineNumber":67,"author":{"gitId":"beaniestanley"},"content":"            }","lastModifiedDate":"2021-04-12"},{"lineNumber":68,"author":{"gitId":"beaniestanley"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":69,"author":{"gitId":"beaniestanley"},"content":"        return null;","lastModifiedDate":"2021-04-12"},{"lineNumber":70,"author":{"gitId":"beaniestanley"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":71,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":72,"author":{"gitId":"beaniestanley"},"content":"    private static Employee getEmployee(String name, ArrayList\u003cEmployee\u003e employees) {","lastModifiedDate":"2021-04-12"},{"lineNumber":73,"author":{"gitId":"beaniestanley"},"content":"        for (Employee person : employees)","lastModifiedDate":"2021-04-12"},{"lineNumber":74,"author":{"gitId":"beaniestanley"},"content":"            if (person.getName().equals(name)) {","lastModifiedDate":"2021-04-12"},{"lineNumber":75,"author":{"gitId":"beaniestanley"},"content":"                return person;","lastModifiedDate":"2021-04-12"},{"lineNumber":76,"author":{"gitId":"beaniestanley"},"content":"            }","lastModifiedDate":"2021-04-12"},{"lineNumber":77,"author":{"gitId":"beaniestanley"},"content":"        return null;","lastModifiedDate":"2021-04-12"},{"lineNumber":78,"author":{"gitId":"beaniestanley"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":79,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":80,"author":{"gitId":"beaniestanley"},"content":"    // Check if shift date is available in employee\u0027s schedule","lastModifiedDate":"2021-04-12"},{"lineNumber":81,"author":{"gitId":"beaniestanley"},"content":"    private static boolean employeeAvailable(Employee employee, LocalDate shiftDate) {","lastModifiedDate":"2021-04-12"},{"lineNumber":82,"author":{"gitId":"beaniestanley"},"content":"        String date \u003d shiftDate.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2021-04-12"},{"lineNumber":83,"author":{"gitId":"beaniestanley"},"content":"        for (String schedule : employee.getSchedules()) {","lastModifiedDate":"2021-04-12"},{"lineNumber":84,"author":{"gitId":"beaniestanley"},"content":"            if (schedule.equals(date)) {","lastModifiedDate":"2021-04-12"},{"lineNumber":85,"author":{"gitId":"beaniestanley"},"content":"                System.out.println(\"Employee \" + employee.getName() + \" is available to work!\");","lastModifiedDate":"2021-04-12"},{"lineNumber":86,"author":{"gitId":"beaniestanley"},"content":"                return true;","lastModifiedDate":"2021-04-12"},{"lineNumber":87,"author":{"gitId":"beaniestanley"},"content":"            }","lastModifiedDate":"2021-04-12"},{"lineNumber":88,"author":{"gitId":"beaniestanley"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":89,"author":{"gitId":"beaniestanley"},"content":"        System.out.println(\"Employee \" + employee.getName() + \" is unavailable to work!\");","lastModifiedDate":"2021-04-12"},{"lineNumber":90,"author":{"gitId":"beaniestanley"},"content":"        return false;","lastModifiedDate":"2021-04-12"},{"lineNumber":91,"author":{"gitId":"beaniestanley"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":92,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":93,"author":{"gitId":"beaniestanley"},"content":"    // Create a new shift","lastModifiedDate":"2021-04-12"},{"lineNumber":94,"author":{"gitId":"beaniestanley"},"content":"    public static void addShift(ArrayList\u003cEmployee\u003e employees, ArrayList\u003cShift\u003e shifts) {","lastModifiedDate":"2021-04-12"},{"lineNumber":95,"author":{"gitId":"beaniestanley"},"content":"        LocalDate shiftDate \u003d getShiftDate();","lastModifiedDate":"2021-04-12"},{"lineNumber":96,"author":{"gitId":"beaniestanley"},"content":"        int shiftIndex \u003d getShiftIndex();","lastModifiedDate":"2021-04-12"},{"lineNumber":97,"author":{"gitId":"beaniestanley"},"content":"        if (getShift(shiftDate, shiftIndex, shifts) !\u003d null) {","lastModifiedDate":"2021-04-12"},{"lineNumber":98,"author":{"gitId":"beaniestanley"},"content":"            System.out.println(\"Shift already exists. Please create another shift instead.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":99,"author":{"gitId":"beaniestanley"},"content":"            return;","lastModifiedDate":"2021-04-12"},{"lineNumber":100,"author":{"gitId":"beaniestanley"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":101,"author":{"gitId":"beaniestanley"},"content":"        int vacancy \u003d getVacancy();","lastModifiedDate":"2021-04-12"},{"lineNumber":102,"author":{"gitId":"beaniestanley"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-04-12"},{"lineNumber":103,"author":{"gitId":"beaniestanley"},"content":"        ArrayList\u003cEmployee\u003e employeesOnShift \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"beaniestanley"},"content":"        boolean runLoop \u003d true;","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"beaniestanley"},"content":"        while (runLoop) {","lastModifiedDate":"2021-04-12"},{"lineNumber":106,"author":{"gitId":"beaniestanley"},"content":"            EmployeeController.listAllEmployees(employees);","lastModifiedDate":"2021-04-12"},{"lineNumber":107,"author":{"gitId":"beaniestanley"},"content":"            System.out.println(\"Enter an employee name to assign to this shift:\");","lastModifiedDate":"2021-04-12"},{"lineNumber":108,"author":{"gitId":"beaniestanley"},"content":"            String name \u003d sc.nextLine();","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"beaniestanley"},"content":"            boolean employeeFound \u003d EmployeeController.isEmployeeFound(name, employees);","lastModifiedDate":"2021-04-12"},{"lineNumber":110,"author":{"gitId":"beaniestanley"},"content":"            Employee employee \u003d getEmployee(name, employees);","lastModifiedDate":"2021-04-12"},{"lineNumber":111,"author":{"gitId":"beaniestanley"},"content":"            if (employee \u003d\u003d null) {","lastModifiedDate":"2021-04-12"},{"lineNumber":112,"author":{"gitId":"beaniestanley"},"content":"                System.out.println(\"No employee in database. Please add an employee with a schedule first.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":113,"author":{"gitId":"beaniestanley"},"content":"                runLoop \u003d false;","lastModifiedDate":"2021-04-12"},{"lineNumber":114,"author":{"gitId":"beaniestanley"},"content":"            } else if (employeeFound) {","lastModifiedDate":"2021-04-12"},{"lineNumber":115,"author":{"gitId":"beaniestanley"},"content":"                if (employeeAvailable(employee, shiftDate)) {","lastModifiedDate":"2021-04-12"},{"lineNumber":116,"author":{"gitId":"beaniestanley"},"content":"                    employeesOnShift.add(employee);","lastModifiedDate":"2021-04-12"},{"lineNumber":117,"author":{"gitId":"beaniestanley"},"content":"                    System.out.println(\"Employee \"  + name + \" is successfully assigned to this shift.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":118,"author":{"gitId":"beaniestanley"},"content":"                    vacancy--;","lastModifiedDate":"2021-04-12"},{"lineNumber":119,"author":{"gitId":"beaniestanley"},"content":"                    Shift shift \u003d new Shift(employeesOnShift, shiftDate, shiftIndex, vacancy);","lastModifiedDate":"2021-04-12"},{"lineNumber":120,"author":{"gitId":"beaniestanley"},"content":"                    shifts.add(shift);","lastModifiedDate":"2021-04-12"},{"lineNumber":121,"author":{"gitId":"beaniestanley"},"content":"                    System.out.println(\"Shift created.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":122,"author":{"gitId":"beaniestanley"},"content":"                    runLoop \u003d false;","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"beaniestanley"},"content":"                }","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"beaniestanley"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"beaniestanley"},"content":"            else {","lastModifiedDate":"2021-04-12"},{"lineNumber":126,"author":{"gitId":"beaniestanley"},"content":"                System.out.println(\"Employee not found.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"beaniestanley"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"beaniestanley"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"beaniestanley"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":130,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"beaniestanley"},"content":"    public static void assignEmployee(ArrayList\u003cEmployee\u003e employees, ArrayList\u003cShift\u003e shifts) {","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"beaniestanley"},"content":"        viewAllShifts(shifts);","lastModifiedDate":"2021-04-12"},{"lineNumber":133,"author":{"gitId":"beaniestanley"},"content":"        if (shifts.isEmpty()) {","lastModifiedDate":"2021-04-12"},{"lineNumber":134,"author":{"gitId":"beaniestanley"},"content":"            return;","lastModifiedDate":"2021-04-12"},{"lineNumber":135,"author":{"gitId":"beaniestanley"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":136,"author":{"gitId":"beaniestanley"},"content":"        LocalDate shiftDate \u003d getShiftDate();","lastModifiedDate":"2021-04-12"},{"lineNumber":137,"author":{"gitId":"beaniestanley"},"content":"        int shiftIndex \u003d getShiftIndex();","lastModifiedDate":"2021-04-12"},{"lineNumber":138,"author":{"gitId":"beaniestanley"},"content":"        if (getShift(shiftDate, shiftIndex, shifts) !\u003d null) {","lastModifiedDate":"2021-04-12"},{"lineNumber":139,"author":{"gitId":"beaniestanley"},"content":"            Shift shift \u003d getShift(shiftDate, shiftIndex, shifts);","lastModifiedDate":"2021-04-12"},{"lineNumber":140,"author":{"gitId":"beaniestanley"},"content":"            assert shift !\u003d null;","lastModifiedDate":"2021-04-12"},{"lineNumber":141,"author":{"gitId":"beaniestanley"},"content":"            EmployeeController.listAllEmployees(employees);","lastModifiedDate":"2021-04-12"},{"lineNumber":142,"author":{"gitId":"beaniestanley"},"content":"            System.out.println(\"Enter Employee name to assign:\");","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"beaniestanley"},"content":"            Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"beaniestanley"},"content":"            String name \u003d sc.nextLine();","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"beaniestanley"},"content":"            Employee employee \u003d getEmployee(name, employees);","lastModifiedDate":"2021-04-12"},{"lineNumber":146,"author":{"gitId":"beaniestanley"},"content":"            if (employee \u003d\u003d null) {","lastModifiedDate":"2021-04-12"},{"lineNumber":147,"author":{"gitId":"beaniestanley"},"content":"                System.out.println(\"No employee in database. Please add an employee with a schedule first.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":148,"author":{"gitId":"beaniestanley"},"content":"                return;","lastModifiedDate":"2021-03-30"},{"lineNumber":149,"author":{"gitId":"beaniestanley"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":150,"author":{"gitId":"beaniestanley"},"content":"            else if (employeeAvailable(employee, shiftDate)) {","lastModifiedDate":"2021-04-12"},{"lineNumber":151,"author":{"gitId":"beaniestanley"},"content":"                if (!shift.getEmployees().contains(employee)) {","lastModifiedDate":"2021-04-12"},{"lineNumber":152,"author":{"gitId":"beaniestanley"},"content":"                    shift.assignEmployee(employee);","lastModifiedDate":"2021-04-12"},{"lineNumber":153,"author":{"gitId":"beaniestanley"},"content":"                }","lastModifiedDate":"2021-04-12"},{"lineNumber":154,"author":{"gitId":"beaniestanley"},"content":"                else {","lastModifiedDate":"2021-04-12"},{"lineNumber":155,"author":{"gitId":"beaniestanley"},"content":"                    System.out.println(\"Employee \" + name + \" is already assigned to the shift. Please assign another employee.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":156,"author":{"gitId":"beaniestanley"},"content":"                }","lastModifiedDate":"2021-03-30"},{"lineNumber":157,"author":{"gitId":"beaniestanley"},"content":"                return;","lastModifiedDate":"2021-03-30"},{"lineNumber":158,"author":{"gitId":"beaniestanley"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":159,"author":{"gitId":"beaniestanley"},"content":"            System.out.println(\"Employee \" + name + \" is not assigned to this shift. Please assign another employee.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":160,"author":{"gitId":"beaniestanley"},"content":"            return;","lastModifiedDate":"2021-04-12"},{"lineNumber":161,"author":{"gitId":"beaniestanley"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":162,"author":{"gitId":"beaniestanley"},"content":"        System.out.println(\"No such shift in database. Please add shift for this index.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":163,"author":{"gitId":"beaniestanley"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":164,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":165,"author":{"gitId":"beaniestanley"},"content":"    public static void unassignEmployee(ArrayList\u003cEmployee\u003e employees, ArrayList\u003cShift\u003e shifts) {","lastModifiedDate":"2021-03-30"},{"lineNumber":166,"author":{"gitId":"beaniestanley"},"content":"        viewAllShifts(shifts);","lastModifiedDate":"2021-04-12"},{"lineNumber":167,"author":{"gitId":"beaniestanley"},"content":"        if (shifts.isEmpty()) {","lastModifiedDate":"2021-04-12"},{"lineNumber":168,"author":{"gitId":"beaniestanley"},"content":"            return;","lastModifiedDate":"2021-04-12"},{"lineNumber":169,"author":{"gitId":"beaniestanley"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":170,"author":{"gitId":"beaniestanley"},"content":"        LocalDate shiftDate \u003d getShiftDate();","lastModifiedDate":"2021-04-12"},{"lineNumber":171,"author":{"gitId":"beaniestanley"},"content":"        int shiftIndex \u003d getShiftIndex();","lastModifiedDate":"2021-04-12"},{"lineNumber":172,"author":{"gitId":"beaniestanley"},"content":"        if (getShift(shiftDate, shiftIndex, shifts) !\u003d null) {","lastModifiedDate":"2021-04-12"},{"lineNumber":173,"author":{"gitId":"beaniestanley"},"content":"            Shift shift \u003d getShift(shiftDate, shiftIndex, shifts);","lastModifiedDate":"2021-04-12"},{"lineNumber":174,"author":{"gitId":"beaniestanley"},"content":"            assert shift !\u003d null;","lastModifiedDate":"2021-04-12"},{"lineNumber":175,"author":{"gitId":"beaniestanley"},"content":"            viewSelectedShift(shift);","lastModifiedDate":"2021-04-12"},{"lineNumber":176,"author":{"gitId":"beaniestanley"},"content":"            System.out.println(\"Enter Employee name to unassign:\");","lastModifiedDate":"2021-03-30"},{"lineNumber":177,"author":{"gitId":"beaniestanley"},"content":"            Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-03-30"},{"lineNumber":178,"author":{"gitId":"beaniestanley"},"content":"            String name \u003d sc.nextLine();","lastModifiedDate":"2021-03-30"},{"lineNumber":179,"author":{"gitId":"beaniestanley"},"content":"            Employee employee \u003d getEmployee(name, employees);","lastModifiedDate":"2021-04-12"},{"lineNumber":180,"author":{"gitId":"beaniestanley"},"content":"            if (shift.getEmployees().contains(employee)) {","lastModifiedDate":"2021-04-12"},{"lineNumber":181,"author":{"gitId":"beaniestanley"},"content":"                shift.unassignEmployee(employee);","lastModifiedDate":"2021-04-12"},{"lineNumber":182,"author":{"gitId":"beaniestanley"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":183,"author":{"gitId":"beaniestanley"},"content":"            else {","lastModifiedDate":"2021-04-12"},{"lineNumber":184,"author":{"gitId":"beaniestanley"},"content":"                System.out.println(\"Employee \" + name + \" is not assigned to this shift. Please unassign another employee.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":185,"author":{"gitId":"beaniestanley"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":186,"author":{"gitId":"beaniestanley"},"content":"            return;","lastModifiedDate":"2021-03-30"},{"lineNumber":187,"author":{"gitId":"beaniestanley"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":188,"author":{"gitId":"beaniestanley"},"content":"        System.out.println(\"No such shift in database. Please add shift for this index.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":189,"author":{"gitId":"beaniestanley"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":190,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":191,"author":{"gitId":"beaniestanley"},"content":"    public static void viewAllShifts(ArrayList\u003cShift\u003e shifts) {","lastModifiedDate":"2021-03-30"},{"lineNumber":192,"author":{"gitId":"beaniestanley"},"content":"        if (shifts.isEmpty()) {","lastModifiedDate":"2021-04-12"},{"lineNumber":193,"author":{"gitId":"beaniestanley"},"content":"            System.out.println(\"No shift in database. Please add shift first.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":194,"author":{"gitId":"beaniestanley"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":195,"author":{"gitId":"beaniestanley"},"content":"        else {","lastModifiedDate":"2021-04-12"},{"lineNumber":196,"author":{"gitId":"beaniestanley"},"content":"            for (Shift shift : shifts) {","lastModifiedDate":"2021-04-12"},{"lineNumber":197,"author":{"gitId":"beaniestanley"},"content":"                viewSelectedShift(shift);","lastModifiedDate":"2021-04-12"},{"lineNumber":198,"author":{"gitId":"beaniestanley"},"content":"            }","lastModifiedDate":"2021-04-12"},{"lineNumber":199,"author":{"gitId":"beaniestanley"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":200,"author":{"gitId":"beaniestanley"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":201,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":202,"author":{"gitId":"beaniestanley"},"content":"    public static void viewSelectedShift(Shift shift){","lastModifiedDate":"2021-04-12"},{"lineNumber":203,"author":{"gitId":"beaniestanley"},"content":"        System.out.println(\"On \" + shift.getShiftDateToString() + \" shift index \" + shift.getShiftIndex() +  \", the employees on shift are: \" + shift.getEmployees());","lastModifiedDate":"2021-04-12"},{"lineNumber":204,"author":{"gitId":"beaniestanley"},"content":"        System.out.println(\"Vacancy left: \" + shift.getVacancy());","lastModifiedDate":"2021-04-12"},{"lineNumber":205,"author":{"gitId":"beaniestanley"},"content":"    }","lastModifiedDate":"2021-04-12"},{"lineNumber":206,"author":{"gitId":"beaniestanley"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":207,"author":{"gitId":"beaniestanley"},"content":"    public static void viewOneShift(ArrayList\u003cShift\u003e shifts) {","lastModifiedDate":"2021-03-30"},{"lineNumber":208,"author":{"gitId":"beaniestanley"},"content":"        LocalDate shiftDate \u003d getShiftDate();","lastModifiedDate":"2021-04-12"},{"lineNumber":209,"author":{"gitId":"beaniestanley"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-03-30"},{"lineNumber":210,"author":{"gitId":"beaniestanley"},"content":"        boolean dateFound \u003d false;","lastModifiedDate":"2021-03-30"},{"lineNumber":211,"author":{"gitId":"beaniestanley"},"content":"        for (Shift item : shifts) {","lastModifiedDate":"2021-03-30"},{"lineNumber":212,"author":{"gitId":"beaniestanley"},"content":"            if (item.getShiftDate().equals(shiftDate)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":213,"author":{"gitId":"beaniestanley"},"content":"                System.out.println(\"Enter Shift index:\");","lastModifiedDate":"2021-03-30"},{"lineNumber":214,"author":{"gitId":"beaniestanley"},"content":"                try {","lastModifiedDate":"2021-04-12"},{"lineNumber":215,"author":{"gitId":"beaniestanley"},"content":"                    int shiftIndex \u003d Integer.parseInt(sc.nextLine());","lastModifiedDate":"2021-03-30"},{"lineNumber":216,"author":{"gitId":"beaniestanley"},"content":"                    if (item.getShiftIndex() \u003d\u003d shiftIndex) {","lastModifiedDate":"2021-03-30"},{"lineNumber":217,"author":{"gitId":"beaniestanley"},"content":"                        System.out.println(\"The people assigned to the shift are:\" + item.getEmployees());","lastModifiedDate":"2021-03-30"},{"lineNumber":218,"author":{"gitId":"cloudy3"},"content":"                    } else {","lastModifiedDate":"2021-04-07"},{"lineNumber":219,"author":{"gitId":"cloudy3"},"content":"                        System.out.println(\"Shift Index selected is not available\");","lastModifiedDate":"2021-04-07"},{"lineNumber":220,"author":{"gitId":"beaniestanley"},"content":"                    }","lastModifiedDate":"2021-03-30"},{"lineNumber":221,"author":{"gitId":"beaniestanley"},"content":"                    dateFound \u003d true;","lastModifiedDate":"2021-03-30"},{"lineNumber":222,"author":{"gitId":"beaniestanley"},"content":"                }","lastModifiedDate":"2021-03-30"},{"lineNumber":223,"author":{"gitId":"beaniestanley"},"content":"                catch (NumberFormatException | NullPointerException e ){","lastModifiedDate":"2021-04-12"},{"lineNumber":224,"author":{"gitId":"beaniestanley"},"content":"                    System.out.println(\"Shift Index value not accepted. Please input integer values from 1 to 6.\");","lastModifiedDate":"2021-04-12"},{"lineNumber":225,"author":{"gitId":"beaniestanley"},"content":"                    return;","lastModifiedDate":"2021-04-12"},{"lineNumber":226,"author":{"gitId":"beaniestanley"},"content":"                }","lastModifiedDate":"2021-04-12"},{"lineNumber":227,"author":{"gitId":"beaniestanley"},"content":"            }","lastModifiedDate":"2021-04-12"},{"lineNumber":228,"author":{"gitId":"beaniestanley"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":229,"author":{"gitId":"beaniestanley"},"content":"        if (!dateFound) {","lastModifiedDate":"2021-03-30"},{"lineNumber":230,"author":{"gitId":"beaniestanley"},"content":"            System.out.println(\"Date chosen has no shifts\");","lastModifiedDate":"2021-03-30"},{"lineNumber":231,"author":{"gitId":"beaniestanley"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":232,"author":{"gitId":"beaniestanley"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":233,"author":{"gitId":"beaniestanley"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"beaniestanley":231,"cloudy3":2}},{"path":"src/main/java/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lihaoyangML"},"content":"package ui;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"cloudy3"},"content":"public class Ui {","lastModifiedDate":"2021-04-07"},{"lineNumber":4,"author":{"gitId":"lihaoyangML"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"lihaoyangML"},"content":"        System.out.println(\"Welcome to fast scheduler!\");","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"lihaoyangML"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"lihaoyangML"},"content":"    public static void printExitMessage() {","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"lihaoyangML"},"content":"        System.out.println(\"Bye, hope to see you again soon!\");","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"lihaoyangML"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"cloudy3"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":12,"author":{"gitId":"lihaoyangML"},"content":"    public static void printHelpMessage() {","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"lihaoyangML"},"content":"        System.out.println(\"Command options available:\\n\");","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"lihaoyangML"},"content":"        System.out.println(\"add employee (add a new employee to the database)\");","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"lihaoyangML"},"content":"        System.out.println(\"add schedule (add a new schedule to an employee)\");","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"lihaoyangML"},"content":"        System.out.println(\"drop schedule (drop an existing schedule from an employee)\");","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"lihaoyangML"},"content":"        System.out.println(\"add shift (add a new shift for the restaurant)\");","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"lihaoyangML"},"content":"        System.out.println(\"assign employee (assign an employee to a shift)\");","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"lihaoyangML"},"content":"        System.out.println(\"unassign employee (unassign an employee from a shift)\");","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"lihaoyangML"},"content":"        System.out.println(\"view employee schedule (displays all schedules of an employee)\");","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"lihaoyangML"},"content":"        System.out.println(\"view shift status (displays all shifts and the name of the employees on the shifts)\");","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"lihaoyangML"},"content":"        System.out.println(\"view one shift (displays the name of the employees on a shift)\");","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"lihaoyangML"},"content":"        System.out.println(\"list (displays the name of all employees)\");","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"lihaoyangML"},"content":"        System.out.println(\"quit (quit the application)\");","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"lihaoyangML"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"lihaoyangML"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":27,"author":{"gitId":"lihaoyangML"},"content":"    public static void printInvalidScheduleFeedbackMessage(){","lastModifiedDate":"2021-04-08"},{"lineNumber":28,"author":{"gitId":"lihaoyangML"},"content":"        System.out.println(\"schedule must be in the format: dd/mm/yyyy\");","lastModifiedDate":"2021-04-08"},{"lineNumber":29,"author":{"gitId":"lihaoyangML"},"content":"        System.out.println(\"dd must be an integer between 1-31 for odd months, 1-30 for even months, 1-28 for Feb\");","lastModifiedDate":"2021-04-08"},{"lineNumber":30,"author":{"gitId":"lihaoyangML"},"content":"        System.out.println(\"mm must be an integer between 1-12\");","lastModifiedDate":"2021-04-08"},{"lineNumber":31,"author":{"gitId":"lihaoyangML"},"content":"        System.out.println(\"yyyy must be an integer between 2021-2099\");","lastModifiedDate":"2021-04-08"},{"lineNumber":32,"author":{"gitId":"lihaoyangML"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":33,"author":{"gitId":"lihaoyangML"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"cloudy3":3,"lihaoyangML":30}}]
