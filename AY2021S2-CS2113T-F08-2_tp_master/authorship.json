[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Configure Intellij for JDK 11**, as described [here](https://se-education.org/guides/tutorials/intellijJdk.html)."},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html)."},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/drugsDuke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :classes"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   "},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   "},{"lineNumber":25,"author":{"gitId":"-"},"content":"   What is your name?"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end."},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Build automation using Gradle"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file)."},{"lineNumber":32,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html)."},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Testing"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"### I/O redirection tests"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script."},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"### JUnit tests"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"NoorSarrah"},"content":"* A skeleton JUnit test (`src/test/java/seedu/drugsDuke/DukeTest.java`) is provided with this project template. "},{"lineNumber":43,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html)."},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Checkstyle"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project."},{"lineNumber":48,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html)."},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"## CI using GitHub Actions"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR."},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Documentation"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation."},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: "},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub."},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab."},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section."},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`."},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation."}],"authorContributionMap":{"NoorSarrah":2,"-":62}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio "},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Owen | [Github](https://github.com/blank-bank) | [Portfolio](docs/team/johndoe.md)"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Chiam Jia-En | [Github](https://github.com/Chiamjiaen/tp) | [Portfolio](docs/team/chiamjiaen.md)"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Joe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ron John | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | John Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Alexander Tan | [Github](https://github.com/AlexanderTanJunAn) | [Portfolio](docs/team/johndoe.md)"}],"authorContributionMap":{"Chiamjiaen":1,"-":7,"AlexanderTanJunAn":1,"blank-bank":1}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"{Give a product intro}"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Quick Start"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"{Give steps to get started quickly}"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed."},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":"1. Down the latest version of `Duke` from [here](http://link.to/drugsDuke)."},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"{Give detailed description of each feature}"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Adding a todo: `todo`"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Adds a new item to the list of todo items."},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"Format: `todo n/TODO_NAME d/DEADLINE`"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"* The `DEADLINE` can be in a natural language format."},{"lineNumber":24,"author":{"gitId":"-"},"content":"* The `TODO_NAME` cannot contain punctuation.  "},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"`todo n/Write the rest of the User Guide d/next week`"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"`todo n/Refactor the User Guide to remove passive voice d/13/04/2020`"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"## FAQ"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? "},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"**A**: {your answer here}"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Command Summary"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"{Give a \u0027cheat sheet\u0027 of commands here}"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Add todo `todo n/TODO_NAME d/DEADLINE`"}],"authorContributionMap":{"NoorSarrah":1,"-":41}},{"path":"docs/team/chiamjiaen.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"# Chiam Jia-En - Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"## Overview"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"huh"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"### Summary of Contributions"}],"authorContributionMap":{"Chiamjiaen":6}},{"path":"src/main/java/DoctorAppointment/AppointmentActions.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MingShun98"},"content":"package DoctorAppointment;"},{"lineNumber":2,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":3,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":4,"author":{"gitId":"MingShun98"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":6,"author":{"gitId":"MingShun98"},"content":"public class AppointmentActions {"},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":"    public static ArrayList\u003cDoctorAppointment\u003e appointmentList \u003d new ArrayList\u003cDoctorAppointment\u003e();"},{"lineNumber":8,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":9,"author":{"gitId":"MingShun98"},"content":"    public static void addAppointment(String input) {"},{"lineNumber":10,"author":{"gitId":"MingShun98"},"content":"        String[] inputArray \u003d input.split(\" \");"},{"lineNumber":11,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":12,"author":{"gitId":"MingShun98"},"content":"        String iD \u003d inputArray[1];"},{"lineNumber":13,"author":{"gitId":"MingShun98"},"content":"        String patientName \u003d inputArray[2];"},{"lineNumber":14,"author":{"gitId":"MingShun98"},"content":"        String gender \u003d inputArray[3];"},{"lineNumber":15,"author":{"gitId":"MingShun98"},"content":"        String date \u003d inputArray[4];"},{"lineNumber":16,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":17,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":18,"author":{"gitId":"MingShun98"},"content":"        DoctorAppointment newAppointment \u003d new DoctorAppointment(iD, patientName, gender, date);"},{"lineNumber":19,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":20,"author":{"gitId":"MingShun98"},"content":"        System.out.println(\"Appointment Added\");"},{"lineNumber":21,"author":{"gitId":"MingShun98"},"content":"        appointmentList.add(newAppointment);"},{"lineNumber":22,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":24,"author":{"gitId":"MingShun98"},"content":"    public static void listAppointment(String input) throws Exception {"},{"lineNumber":25,"author":{"gitId":"MingShun98"},"content":"        String[] inputArray \u003d input.split(\" \");"},{"lineNumber":26,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":27,"author":{"gitId":"MingShun98"},"content":"        String iD \u003d inputArray[1];"},{"lineNumber":28,"author":{"gitId":"MingShun98"},"content":"        if (appointmentList.size() \u003d\u003d 0) throw new Exception();"},{"lineNumber":29,"author":{"gitId":"MingShun98"},"content":"        else {"},{"lineNumber":30,"author":{"gitId":"MingShun98"},"content":"            for (DoctorAppointment doc : appointmentList) {"},{"lineNumber":31,"author":{"gitId":"MingShun98"},"content":"                if (doc.getDoctorId().equals(iD)) {"},{"lineNumber":32,"author":{"gitId":"MingShun98"},"content":"                    System.out.println(doc.getDoctorId());"},{"lineNumber":33,"author":{"gitId":"MingShun98"},"content":"                    System.out.println(doc.getPatientsName());"},{"lineNumber":34,"author":{"gitId":"MingShun98"},"content":"                    System.out.println(doc.getGender());"},{"lineNumber":35,"author":{"gitId":"MingShun98"},"content":"                    doc.getDateFormat(doc.getDate());"},{"lineNumber":36,"author":{"gitId":"MingShun98"},"content":"                }"},{"lineNumber":37,"author":{"gitId":"MingShun98"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"MingShun98"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":41,"author":{"gitId":"MingShun98"},"content":"    public static void deleteAppointment(String input) {"},{"lineNumber":42,"author":{"gitId":"MingShun98"},"content":"        String[] inputArray \u003d input.split(\" \");"},{"lineNumber":43,"author":{"gitId":"MingShun98"},"content":"        String iD \u003d inputArray[1];"},{"lineNumber":44,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":45,"author":{"gitId":"MingShun98"},"content":"        for (DoctorAppointment doc : appointmentList) {"},{"lineNumber":46,"author":{"gitId":"MingShun98"},"content":"            if (doc.getDoctorId().equals(iD)) {"},{"lineNumber":47,"author":{"gitId":"MingShun98"},"content":"                appointmentList.remove(iD);"},{"lineNumber":48,"author":{"gitId":"MingShun98"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"MingShun98"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":51,"author":{"gitId":"MingShun98"},"content":"        int index \u003d 2;"},{"lineNumber":52,"author":{"gitId":"MingShun98"},"content":"        for (int i \u003d 0; i \u003c appointmentList.size(); i++) {"},{"lineNumber":53,"author":{"gitId":"MingShun98"},"content":"            if(appointmentList.get(i).doctorId.equals(iD))"},{"lineNumber":54,"author":{"gitId":"MingShun98"},"content":"                index \u003di;"},{"lineNumber":55,"author":{"gitId":"MingShun98"},"content":"                //System.out.println(appointmentList.get(i).doctorId.equals(iD));"},{"lineNumber":56,"author":{"gitId":"MingShun98"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"MingShun98"},"content":"        System.out.print(index);"},{"lineNumber":58,"author":{"gitId":"MingShun98"},"content":"        appointmentList.remove(index);"},{"lineNumber":59,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":60,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"MingShun98"},"content":"}"}],"authorContributionMap":{"MingShun98":61}},{"path":"src/main/java/DoctorAppointment/DoctorAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MingShun98"},"content":"package DoctorAppointment;"},{"lineNumber":2,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":3,"author":{"gitId":"MingShun98"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"MingShun98"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":6,"author":{"gitId":"MingShun98"},"content":"public class DoctorAppointment {"},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":"    protected String doctorId;"},{"lineNumber":8,"author":{"gitId":"MingShun98"},"content":"    protected String patientsName;"},{"lineNumber":9,"author":{"gitId":"MingShun98"},"content":"    protected String gender;"},{"lineNumber":10,"author":{"gitId":"MingShun98"},"content":"    protected String date;"},{"lineNumber":11,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":12,"author":{"gitId":"MingShun98"},"content":"    public DoctorAppointment(String doctorId, String name, String gender, String date) {"},{"lineNumber":13,"author":{"gitId":"MingShun98"},"content":"        this.doctorId \u003d doctorId;"},{"lineNumber":14,"author":{"gitId":"MingShun98"},"content":"        this.patientsName \u003d name;"},{"lineNumber":15,"author":{"gitId":"MingShun98"},"content":"        this.gender \u003d gender;"},{"lineNumber":16,"author":{"gitId":"MingShun98"},"content":"        this.date \u003d date;"},{"lineNumber":17,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":19,"author":{"gitId":"MingShun98"},"content":"    public String getDoctorId() {"},{"lineNumber":20,"author":{"gitId":"MingShun98"},"content":"        return this.doctorId;"},{"lineNumber":21,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":23,"author":{"gitId":"MingShun98"},"content":"    public String getPatientsName() {"},{"lineNumber":24,"author":{"gitId":"MingShun98"},"content":"        return this.patientsName;"},{"lineNumber":25,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":27,"author":{"gitId":"MingShun98"},"content":"    public String getGender() {"},{"lineNumber":28,"author":{"gitId":"MingShun98"},"content":"        return this.gender;"},{"lineNumber":29,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":31,"author":{"gitId":"MingShun98"},"content":"    public String getDate() {"},{"lineNumber":32,"author":{"gitId":"MingShun98"},"content":"        return this.date;"},{"lineNumber":33,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":35,"author":{"gitId":"MingShun98"},"content":"    /*"},{"lineNumber":36,"author":{"gitId":"MingShun98"},"content":"        Date format \u003d YYYY-MM-DD"},{"lineNumber":37,"author":{"gitId":"MingShun98"},"content":"    */"},{"lineNumber":38,"author":{"gitId":"MingShun98"},"content":"    public void getDateFormat(String inputDate) {"},{"lineNumber":39,"author":{"gitId":"MingShun98"},"content":"        String dateInString \u003d inputDate;"},{"lineNumber":40,"author":{"gitId":"MingShun98"},"content":"        LocalDate dater \u003d LocalDate.parse(dateInString, DateTimeFormatter.BASIC_ISO_DATE);"},{"lineNumber":41,"author":{"gitId":"MingShun98"},"content":"        System.out.println(dater);"},{"lineNumber":42,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":44,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":45,"author":{"gitId":"MingShun98"},"content":"}"}],"authorContributionMap":{"MingShun98":45}},{"path":"src/main/java/DoctorAppointment/DoctorAppointmentInstance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MingShun98"},"content":"package DoctorAppointment;"},{"lineNumber":2,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":3,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":4,"author":{"gitId":"MingShun98"},"content":"import DoctorAppointment.AppointmentActions;"},{"lineNumber":5,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":6,"author":{"gitId":"MingShun98"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":8,"author":{"gitId":"MingShun98"},"content":"public class DoctorAppointmentInstance {"},{"lineNumber":9,"author":{"gitId":"MingShun98"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"MingShun98"},"content":"     * Main entry-point for the java.duke.Duke application."},{"lineNumber":11,"author":{"gitId":"MingShun98"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"MingShun98"},"content":"    public static void main(String[] args) throws Exception {"},{"lineNumber":13,"author":{"gitId":"MingShun98"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":14,"author":{"gitId":"MingShun98"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":15,"author":{"gitId":"MingShun98"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":16,"author":{"gitId":"MingShun98"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":17,"author":{"gitId":"MingShun98"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":18,"author":{"gitId":"MingShun98"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":19,"author":{"gitId":"MingShun98"},"content":"        System.out.println(\"What is your name? MingShun?\");"},{"lineNumber":20,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":21,"author":{"gitId":"MingShun98"},"content":"        Scanner userInput \u003d new Scanner(System.in);"},{"lineNumber":22,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":23,"author":{"gitId":"MingShun98"},"content":"        while (userInput.hasNext()) {"},{"lineNumber":24,"author":{"gitId":"MingShun98"},"content":"            String input \u003d userInput.nextLine();"},{"lineNumber":25,"author":{"gitId":"MingShun98"},"content":"            String[] inputArray \u003d input.split(\" \");"},{"lineNumber":26,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":27,"author":{"gitId":"MingShun98"},"content":"            switch (inputArray[0]) {"},{"lineNumber":28,"author":{"gitId":"MingShun98"},"content":"            case \"add\":"},{"lineNumber":29,"author":{"gitId":"MingShun98"},"content":"                AppointmentActions.addAppointment(input);"},{"lineNumber":30,"author":{"gitId":"MingShun98"},"content":"                break;"},{"lineNumber":31,"author":{"gitId":"MingShun98"},"content":"            case \"list\":"},{"lineNumber":32,"author":{"gitId":"MingShun98"},"content":"                AppointmentActions.listAppointment(input);"},{"lineNumber":33,"author":{"gitId":"MingShun98"},"content":"                break;"},{"lineNumber":34,"author":{"gitId":"MingShun98"},"content":"            case \"delete\":"},{"lineNumber":35,"author":{"gitId":"MingShun98"},"content":"                AppointmentActions.deleteAppointment(input);"},{"lineNumber":36,"author":{"gitId":"MingShun98"},"content":"                break;"},{"lineNumber":37,"author":{"gitId":"MingShun98"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"MingShun98"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"MingShun98"},"content":"}"}],"authorContributionMap":{"MingShun98":40}},{"path":"src/main/java/DoctorAppointment/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MingShun98"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"MingShun98"},"content":"package DoctorAppointment;"},{"lineNumber":3,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":4,"author":{"gitId":"MingShun98"},"content":"public class Parser () {"},{"lineNumber":5,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":6,"author":{"gitId":"MingShun98"},"content":"    public static String parse(String input) {"},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":"        String[] inputArray \u003d input.split(\" \");"},{"lineNumber":8,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":9,"author":{"gitId":"MingShun98"},"content":"        try {"},{"lineNumber":10,"author":{"gitId":"MingShun98"},"content":"            switch (inputArray[0]) {"},{"lineNumber":11,"author":{"gitId":"MingShun98"},"content":"            case \"add\":"},{"lineNumber":12,"author":{"gitId":"MingShun98"},"content":"                AppointmentActions.addAppointment(input);"},{"lineNumber":13,"author":{"gitId":"MingShun98"},"content":"                break;"},{"lineNumber":14,"author":{"gitId":"MingShun98"},"content":"            case \"list\":"},{"lineNumber":15,"author":{"gitId":"MingShun98"},"content":"                AppointmentActions.listAppointment(input);"},{"lineNumber":16,"author":{"gitId":"MingShun98"},"content":"                break;"},{"lineNumber":17,"author":{"gitId":"MingShun98"},"content":"            case \"delete\":"},{"lineNumber":18,"author":{"gitId":"MingShun98"},"content":"                AppointmentActions.deleteAppointment(input);"},{"lineNumber":19,"author":{"gitId":"MingShun98"},"content":"                break;"},{"lineNumber":20,"author":{"gitId":"MingShun98"},"content":"            }"},{"lineNumber":21,"author":{"gitId":"MingShun98"},"content":"        }catch (Exception e){"},{"lineNumber":22,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":23,"author":{"gitId":"MingShun98"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":25,"author":{"gitId":"MingShun98"},"content":"        return \" \";"},{"lineNumber":26,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"MingShun98"},"content":"}"},{"lineNumber":28,"author":{"gitId":"MingShun98"},"content":"*/"}],"authorContributionMap":{"MingShun98":28}},{"path":"src/main/java/nurseschedules/NurseScheduleInstance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package nurseschedules;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import nurseschedules.nurseschedule.NurseScheduleStorage;"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"import nurseschedules.parser.Parser;"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"import nurseschedules.nurseschedule.NurseSchedule;"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"import nurseschedules.nurseschedule.NurseScheduleActions;"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.text.ParseException;"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class NurseScheduleInstance {"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private Parser parser;"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private NurseScheduleActions actions;"},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private NurseScheduleStorage storage;"},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":"    List\u003cNurseSchedule\u003e nurseSchedules \u003d new ArrayList\u003cNurseSchedule\u003e();"},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application."},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":25,"author":{"gitId":"AlexanderTanJunAn"},"content":"        new NurseScheduleInstance().run();"},{"lineNumber":26,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":28,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void run() {"},{"lineNumber":29,"author":{"gitId":"AlexanderTanJunAn"},"content":"        start();"},{"lineNumber":30,"author":{"gitId":"AlexanderTanJunAn"},"content":"        runCommandLoopUntilExit();"},{"lineNumber":31,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":33,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private void start() {"},{"lineNumber":34,"author":{"gitId":"AlexanderTanJunAn"},"content":"        this.parser \u003d new Parser();"},{"lineNumber":35,"author":{"gitId":"AlexanderTanJunAn"},"content":"        this.actions \u003d new NurseScheduleActions();"},{"lineNumber":36,"author":{"gitId":"AlexanderTanJunAn"},"content":"        this.storage \u003d new NurseScheduleStorage();"},{"lineNumber":37,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":38,"author":{"gitId":"AlexanderTanJunAn"},"content":"        storage.load(nurseSchedules);"},{"lineNumber":39,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":43,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":44,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        System.out.println(\"What is your name?\");"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello \" + in.nextLine());"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":52,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private void runCommandLoopUntilExit() {"},{"lineNumber":53,"author":{"gitId":"AlexanderTanJunAn"},"content":"        boolean isRun \u003d true;"},{"lineNumber":54,"author":{"gitId":"AlexanderTanJunAn"},"content":"        while (isRun) {"},{"lineNumber":55,"author":{"gitId":"AlexanderTanJunAn"},"content":"            String line \u003d parser.getUserInput().trim();"},{"lineNumber":56,"author":{"gitId":"AlexanderTanJunAn"},"content":"            String command \u003d parser.getFirstWord(line);"},{"lineNumber":57,"author":{"gitId":"AlexanderTanJunAn"},"content":"            String[] details \u003d parser.getDetails(line);"},{"lineNumber":58,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":59,"author":{"gitId":"AlexanderTanJunAn"},"content":"            if (command.equals(\"add\")) {"},{"lineNumber":60,"author":{"gitId":"AlexanderTanJunAn"},"content":"                try {"},{"lineNumber":61,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    System.out.println(\"Trip to \" + details[1] + \" on \" + parser.formatDate(line) + \" added!\");"},{"lineNumber":62,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    nurseSchedules.add(new NurseSchedule(details[0], details[1], details[2]));"},{"lineNumber":63,"author":{"gitId":"AlexanderTanJunAn"},"content":"                } catch (ParseException e) {"},{"lineNumber":64,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    System.out.println(\"Invalid date!\");"},{"lineNumber":65,"author":{"gitId":"AlexanderTanJunAn"},"content":"                }"},{"lineNumber":66,"author":{"gitId":"AlexanderTanJunAn"},"content":"            } else if (command.equals(\"list\")) {"},{"lineNumber":67,"author":{"gitId":"AlexanderTanJunAn"},"content":"                actions.listSchedules(nurseSchedules, parser.getDetails(line));"},{"lineNumber":68,"author":{"gitId":"AlexanderTanJunAn"},"content":"            } else if (command.equals(\"delete\")) {"},{"lineNumber":69,"author":{"gitId":"AlexanderTanJunAn"},"content":"                actions.deleteSchedule(nurseSchedules, parser.getDetails(line));"},{"lineNumber":70,"author":{"gitId":"AlexanderTanJunAn"},"content":"            } else if (command.equals(\"exit\")) {"},{"lineNumber":71,"author":{"gitId":"AlexanderTanJunAn"},"content":"                storage.writeToFile(nurseSchedules);"},{"lineNumber":72,"author":{"gitId":"AlexanderTanJunAn"},"content":"                isRun \u003d false;"},{"lineNumber":73,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"AlexanderTanJunAn":57,"-":19}},{"path":"src/main/java/nurseschedules/nurseschedule/NurseSchedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package nurseschedules.nurseschedule;"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.text.ParseException;"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.Date;"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class NurseSchedule implements Comparable\u003cNurseSchedule\u003e {"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"    protected String nurseID;"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"    protected String patientID;"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"    protected String datetime;"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public NurseSchedule(String nurseID, String patientID, String datetime) {"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"        this.nurseID \u003d nurseID;"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":"        this.patientID \u003d patientID;"},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"        this.datetime \u003d datetime;"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /** Compares as Date object */"},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public int compareTo(NurseSchedule o) {"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":"        if (getDatetime() \u003d\u003d null || o.getDatetime() \u003d\u003d null) {"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":"            return 0;"},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"AlexanderTanJunAn"},"content":"        SimpleDateFormat parser \u003d new SimpleDateFormat(\"ddMMyyyy\");"},{"lineNumber":25,"author":{"gitId":"AlexanderTanJunAn"},"content":"        Date date \u003d null;"},{"lineNumber":26,"author":{"gitId":"AlexanderTanJunAn"},"content":"        Date odate \u003d null;"},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"AlexanderTanJunAn"},"content":"            date \u003d parser.parse(getDatetime());"},{"lineNumber":29,"author":{"gitId":"AlexanderTanJunAn"},"content":"            odate \u003d parser.parse(o.getDatetime());"},{"lineNumber":30,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (ParseException e) {"},{"lineNumber":31,"author":{"gitId":"AlexanderTanJunAn"},"content":"            e.printStackTrace();"},{"lineNumber":32,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return date.compareTo(odate);"},{"lineNumber":34,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":36,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /** Formats String date into dd/MM/YYYY */"},{"lineNumber":37,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String formatDate(String datetime) throws ParseException {"},{"lineNumber":38,"author":{"gitId":"AlexanderTanJunAn"},"content":"        SimpleDateFormat parser \u003d new SimpleDateFormat(\"ddMMyyyy\");"},{"lineNumber":39,"author":{"gitId":"AlexanderTanJunAn"},"content":"        Date date \u003d parser.parse(datetime);"},{"lineNumber":40,"author":{"gitId":"AlexanderTanJunAn"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyy\");"},{"lineNumber":41,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":42,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return formatter.format(date);"},{"lineNumber":43,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":45,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getNurseID() { return nurseID; }"},{"lineNumber":46,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":47,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getPatientID() { return patientID; }"},{"lineNumber":48,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":49,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getDatetime() { return datetime; }"},{"lineNumber":50,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":51,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getFormattedDatetime() {"},{"lineNumber":52,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String date \u003d null;"},{"lineNumber":53,"author":{"gitId":"AlexanderTanJunAn"},"content":"        try {"},{"lineNumber":54,"author":{"gitId":"AlexanderTanJunAn"},"content":"            date \u003d formatDate(datetime);"},{"lineNumber":55,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (ParseException e) {"},{"lineNumber":56,"author":{"gitId":"AlexanderTanJunAn"},"content":"            e.printStackTrace();"},{"lineNumber":57,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return date;"},{"lineNumber":59,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":61,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String toSave() { return getNurseID() + \"|\" + getPatientID() + \"|\" + getDatetime(); }"},{"lineNumber":62,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":63,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String toFind() { return getFormattedDatetime() + \" \" + patientID; }"},{"lineNumber":64,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":65,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String toString() { return nurseID + \" \" + patientID + \" \" + getFormattedDatetime(); }"},{"lineNumber":66,"author":{"gitId":"AlexanderTanJunAn"},"content":"}"}],"authorContributionMap":{"AlexanderTanJunAn":66}},{"path":"src/main/java/nurseschedules/nurseschedule/NurseScheduleActions.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package nurseschedules.nurseschedule;"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class NurseScheduleActions {"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"    List\u003cNurseSchedule\u003e findSchedules \u003d new ArrayList\u003cNurseSchedule\u003e();"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"    List\u003cString\u003e nursesFound \u003d new ArrayList\u003cString\u003e();"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void listSchedules(List\u003cNurseSchedule\u003e nurseSchedules, String[] details) {"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"        int i \u003d 0;"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":"        if (details[0].equals(\"all\")) {"},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"            listAllSchedules(nurseSchedules);"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } else {"},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":"            findSchedules.clear();"},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":"            while (i \u003c nurseSchedules.size()) {"},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":"                if (nurseSchedules.get(i).getNurseID().equals(details[0])) {"},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    findSchedules.add(nurseSchedules.get(i));"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":"                }"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":"                i++;"},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }"},{"lineNumber":24,"author":{"gitId":"AlexanderTanJunAn"},"content":"            Collections.sort(findSchedules);"},{"lineNumber":25,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":26,"author":{"gitId":"AlexanderTanJunAn"},"content":"            int j \u003d 0;"},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":"            System.out.println(details[0]);"},{"lineNumber":28,"author":{"gitId":"AlexanderTanJunAn"},"content":"            while (j \u003c findSchedules.size()) {"},{"lineNumber":29,"author":{"gitId":"AlexanderTanJunAn"},"content":"                System.out.println(\"\\t\" + findSchedules.get(j).toFind());"},{"lineNumber":30,"author":{"gitId":"AlexanderTanJunAn"},"content":"                j++;"},{"lineNumber":31,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":35,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void listAllSchedules(List\u003cNurseSchedule\u003e nurseSchedules) {"},{"lineNumber":36,"author":{"gitId":"AlexanderTanJunAn"},"content":"        nursesFound.clear();"},{"lineNumber":37,"author":{"gitId":"AlexanderTanJunAn"},"content":"        for (int i \u003d 0; i\u003cnurseSchedules.size(); i++) {"},{"lineNumber":38,"author":{"gitId":"AlexanderTanJunAn"},"content":"            findSchedules.clear();"},{"lineNumber":39,"author":{"gitId":"AlexanderTanJunAn"},"content":"            if (!nursesFound.contains(nurseSchedules.get(i).getNurseID())) {"},{"lineNumber":40,"author":{"gitId":"AlexanderTanJunAn"},"content":"                nursesFound.add(nurseSchedules.get(i).getNurseID());"},{"lineNumber":41,"author":{"gitId":"AlexanderTanJunAn"},"content":"                String nurseID \u003d nurseSchedules.get(i).getNurseID();"},{"lineNumber":42,"author":{"gitId":"AlexanderTanJunAn"},"content":"                for (NurseSchedule nurseSchedule : nurseSchedules) {"},{"lineNumber":43,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    if (nurseID.equals(nurseSchedule.getNurseID())) {"},{"lineNumber":44,"author":{"gitId":"AlexanderTanJunAn"},"content":"                        findSchedules.add(nurseSchedule);"},{"lineNumber":45,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    }"},{"lineNumber":46,"author":{"gitId":"AlexanderTanJunAn"},"content":"                }"},{"lineNumber":47,"author":{"gitId":"AlexanderTanJunAn"},"content":"                Collections.sort(findSchedules);"},{"lineNumber":48,"author":{"gitId":"AlexanderTanJunAn"},"content":"                System.out.println(nurseID);"},{"lineNumber":49,"author":{"gitId":"AlexanderTanJunAn"},"content":"                for (NurseSchedule findSchedule : findSchedules) {"},{"lineNumber":50,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    System.out.println(\"\\t\" + findSchedule.toFind());"},{"lineNumber":51,"author":{"gitId":"AlexanderTanJunAn"},"content":"                }"},{"lineNumber":52,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":56,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void deleteSchedule(List\u003cNurseSchedule\u003e nurseSchedules, String[] details) {"},{"lineNumber":57,"author":{"gitId":"AlexanderTanJunAn"},"content":"        int i \u003d 0;"},{"lineNumber":58,"author":{"gitId":"AlexanderTanJunAn"},"content":"        while (i \u003c nurseSchedules.size()) {"},{"lineNumber":59,"author":{"gitId":"AlexanderTanJunAn"},"content":"            if ((nurseSchedules.get(i).getNurseID()).equals(details[0])"},{"lineNumber":60,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    \u0026\u0026 nurseSchedules.get(i).getDatetime().equals(details[1])) {"},{"lineNumber":61,"author":{"gitId":"AlexanderTanJunAn"},"content":"                System.out.println(\"Trip to \" + nurseSchedules.get(i).getPatientID() +"},{"lineNumber":62,"author":{"gitId":"AlexanderTanJunAn"},"content":"                        \" on \" + nurseSchedules.get(i).getFormattedDatetime() + \" has been cancelled!\");"},{"lineNumber":63,"author":{"gitId":"AlexanderTanJunAn"},"content":"                nurseSchedules.remove(i);"},{"lineNumber":64,"author":{"gitId":"AlexanderTanJunAn"},"content":"                break;"},{"lineNumber":65,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"AlexanderTanJunAn"},"content":"            i++;"},{"lineNumber":67,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"AlexanderTanJunAn"},"content":"}"}],"authorContributionMap":{"AlexanderTanJunAn":69}},{"path":"src/main/java/nurseschedules/nurseschedule/NurseScheduleStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package nurseschedules.nurseschedule;"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.io.FileInputStream;"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class NurseScheduleStorage {"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /** Creates new file */"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private static void createFile() {"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":"        try {"},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"            File file \u003d new File(\"duke.txt\");"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":"            if (file.createNewFile()) {}"},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (IOException e) {"},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":"            e.printStackTrace();"},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private static void readFile(List\u003cNurseSchedule\u003e nurseSchedules) {"},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"AlexanderTanJunAn"},"content":"            FileInputStream file \u003d new FileInputStream(\"duke.txt\");"},{"lineNumber":25,"author":{"gitId":"AlexanderTanJunAn"},"content":"            Scanner sc \u003d new Scanner(file);"},{"lineNumber":26,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":"            while (sc.hasNextLine()) {"},{"lineNumber":28,"author":{"gitId":"AlexanderTanJunAn"},"content":"                String[] details \u003d sc.nextLine().split(\"\\\\|\", 0);"},{"lineNumber":29,"author":{"gitId":"AlexanderTanJunAn"},"content":"                nurseSchedules.add(new NurseSchedule(details[0], details[1], details[2]));"},{"lineNumber":30,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }"},{"lineNumber":31,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (IOException e) {"},{"lineNumber":32,"author":{"gitId":"AlexanderTanJunAn"},"content":"            e.printStackTrace();"},{"lineNumber":33,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":36,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void writeToFile(List\u003cNurseSchedule\u003e nurseSchedules) {"},{"lineNumber":37,"author":{"gitId":"AlexanderTanJunAn"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"AlexanderTanJunAn"},"content":"            File file \u003d new File(\"duke.txt\");"},{"lineNumber":39,"author":{"gitId":"AlexanderTanJunAn"},"content":"            FileWriter writer \u003d new FileWriter(file);"},{"lineNumber":40,"author":{"gitId":"AlexanderTanJunAn"},"content":"            for (NurseSchedule n : nurseSchedules) {"},{"lineNumber":41,"author":{"gitId":"AlexanderTanJunAn"},"content":"                writer.write(n.toSave());"},{"lineNumber":42,"author":{"gitId":"AlexanderTanJunAn"},"content":"                writer.write(\"\\r\\n\");"},{"lineNumber":43,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"AlexanderTanJunAn"},"content":"            writer.close();"},{"lineNumber":45,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (IOException e) {"},{"lineNumber":46,"author":{"gitId":"AlexanderTanJunAn"},"content":"            e.printStackTrace();"},{"lineNumber":47,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":50,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void load(List\u003cNurseSchedule\u003e nurseSchedules) {"},{"lineNumber":51,"author":{"gitId":"AlexanderTanJunAn"},"content":"        createFile();"},{"lineNumber":52,"author":{"gitId":"AlexanderTanJunAn"},"content":"        readFile(nurseSchedules);"},{"lineNumber":53,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":55,"author":{"gitId":"AlexanderTanJunAn"},"content":"}"}],"authorContributionMap":{"AlexanderTanJunAn":55}},{"path":"src/main/java/nurseschedules/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package nurseschedules.parser;"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.text.ParseException;"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.Date;"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class Parser {"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * Gets user input"},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @return User input"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getUserInput() {"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return in.nextLine();"},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * Returns the command of user"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @param text User input"},{"lineNumber":24,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @return First word of user input"},{"lineNumber":25,"author":{"gitId":"AlexanderTanJunAn"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getFirstWord(String text) {"},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":"        int index \u003d text.indexOf(\u0027 \u0027);"},{"lineNumber":28,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":29,"author":{"gitId":"AlexanderTanJunAn"},"content":"        if (index \u003e -1) {"},{"lineNumber":30,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":31,"author":{"gitId":"AlexanderTanJunAn"},"content":"            return text.substring(0, index).trim();"},{"lineNumber":32,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":33,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } else {"},{"lineNumber":34,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":35,"author":{"gitId":"AlexanderTanJunAn"},"content":"            return text;"},{"lineNumber":36,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":39,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String[] getDetails(String text) {"},{"lineNumber":40,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String parts[] \u003d text.split(\" \", 0);"},{"lineNumber":41,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String details[] \u003d new String[3];"},{"lineNumber":42,"author":{"gitId":"AlexanderTanJunAn"},"content":"        if (getFirstWord(text).equals(\"add\")) {"},{"lineNumber":43,"author":{"gitId":"AlexanderTanJunAn"},"content":"            details[0] \u003d parts[1];"},{"lineNumber":44,"author":{"gitId":"AlexanderTanJunAn"},"content":"            details[1] \u003d parts[2];"},{"lineNumber":45,"author":{"gitId":"AlexanderTanJunAn"},"content":"            details[2] \u003d parts[3];"},{"lineNumber":46,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } else if (getFirstWord(text).equals(\"delete\")) {"},{"lineNumber":47,"author":{"gitId":"AlexanderTanJunAn"},"content":"            details[0] \u003d parts[1];"},{"lineNumber":48,"author":{"gitId":"AlexanderTanJunAn"},"content":"            details[1] \u003d parts[2];"},{"lineNumber":49,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } else if (getFirstWord(text).equals(\"list\")) {"},{"lineNumber":50,"author":{"gitId":"AlexanderTanJunAn"},"content":"            details[0] \u003d parts[1];"},{"lineNumber":51,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":53,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return details;"},{"lineNumber":54,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":56,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String formatDate(String text) throws ParseException {"},{"lineNumber":57,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String[] details \u003d getDetails(text);"},{"lineNumber":58,"author":{"gitId":"AlexanderTanJunAn"},"content":"        SimpleDateFormat parser \u003d new SimpleDateFormat(\"ddMMyyyy\");"},{"lineNumber":59,"author":{"gitId":"AlexanderTanJunAn"},"content":"        Date date \u003d parser.parse(details[2]);"},{"lineNumber":60,"author":{"gitId":"AlexanderTanJunAn"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyy\");"},{"lineNumber":61,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String formattedDate \u003d formatter.format(date);"},{"lineNumber":62,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":63,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return formattedDate;"},{"lineNumber":64,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"AlexanderTanJunAn"},"content":"}"}],"authorContributionMap":{"AlexanderTanJunAn":65}},{"path":"src/main/java/seedu/duke/DrugAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NoorSarrah"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":3,"author":{"gitId":"NoorSarrah"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":5,"author":{"gitId":"NoorSarrah"},"content":"public class DrugAction {"},{"lineNumber":6,"author":{"gitId":"NoorSarrah"},"content":"    public ArrayList\u003cdrugInstance\u003e drugInstances \u003d new ArrayList\u003c\u003e();"},{"lineNumber":7,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":8,"author":{"gitId":"NoorSarrah"},"content":"    public void addDrugs(String description) {"},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":"        try {"},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":"            description \u003d description.substring(4);"},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":"            String[] elements \u003d description.split(\" \");"},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":"            drugInstances.add(new drugInstance(elements[0], elements[1], elements[2]));"},{"lineNumber":13,"author":{"gitId":"NoorSarrah"},"content":"            System.out.println(\"Added \" + elements[elements.length - 1] + \" \" + elements[0] + \" to inventory!\");"},{"lineNumber":14,"author":{"gitId":"NoorSarrah"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":15,"author":{"gitId":"NoorSarrah"},"content":"            System.out.println(\"The description of \u0027add\u0027 cannot be empty\");"},{"lineNumber":16,"author":{"gitId":"NoorSarrah"},"content":"            return;"},{"lineNumber":17,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":20,"author":{"gitId":"NoorSarrah"},"content":"    public void deleteDrugs(String description) {"},{"lineNumber":21,"author":{"gitId":"NoorSarrah"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"NoorSarrah"},"content":"            description \u003d description.substring(7);"},{"lineNumber":23,"author":{"gitId":"NoorSarrah"},"content":"            for (int i \u003d 0; i\u003c drugInstances.size(); ++i) {"},{"lineNumber":24,"author":{"gitId":"NoorSarrah"},"content":"                if (drugInstances.get(i).getName().contains(description)) {"},{"lineNumber":25,"author":{"gitId":"NoorSarrah"},"content":"                    System.out.println(\"Deleted \" + drugInstances.get(i).getName() + \" from inventory!\");"},{"lineNumber":26,"author":{"gitId":"NoorSarrah"},"content":"                    drugInstances.remove(drugInstances.get(i));"},{"lineNumber":27,"author":{"gitId":"NoorSarrah"},"content":"                    break;"},{"lineNumber":28,"author":{"gitId":"NoorSarrah"},"content":"                }"},{"lineNumber":29,"author":{"gitId":"NoorSarrah"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"NoorSarrah"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":31,"author":{"gitId":"NoorSarrah"},"content":"            System.out.println(\"The description of \u0027delete\u0027 cannot be empty\");"},{"lineNumber":32,"author":{"gitId":"NoorSarrah"},"content":"            return;"},{"lineNumber":33,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":36,"author":{"gitId":"NoorSarrah"},"content":"    public void printList() {"},{"lineNumber":37,"author":{"gitId":"NoorSarrah"},"content":"        if (drugInstances.size() !\u003d 0) {"},{"lineNumber":38,"author":{"gitId":"NoorSarrah"},"content":"            System.out.println(\"Current Inventory: \");"},{"lineNumber":39,"author":{"gitId":"NoorSarrah"},"content":"            for (int i \u003d 1; i \u003c\u003d drugInstances.size(); ++i) {"},{"lineNumber":40,"author":{"gitId":"NoorSarrah"},"content":"                System.out.println(i + \". \" + drugInstances.get(i-1).getName() + \" \" + drugInstances.get(i-1).getPrice() + \" \" + drugInstances.get(i-1).getQuantity());"},{"lineNumber":41,"author":{"gitId":"NoorSarrah"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"NoorSarrah"},"content":"        } else {"},{"lineNumber":43,"author":{"gitId":"NoorSarrah"},"content":"            System.out.println(\"\\tYou do not have any drugInstances in your inventory:(\");"},{"lineNumber":44,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":47,"author":{"gitId":"NoorSarrah"},"content":"}"},{"lineNumber":48,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":49,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":50,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":51,"author":{"gitId":"NoorSarrah"},"content":""}],"authorContributionMap":{"NoorSarrah":51}},{"path":"src/main/java/seedu/duke/DrugStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NoorSarrah"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"NoorSarrah"},"content":"import java.io.File;"},{"lineNumber":3,"author":{"gitId":"NoorSarrah"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"NoorSarrah"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"NoorSarrah"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"NoorSarrah"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":"public class DrugStorage {"},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":"    protected String filepath;"},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":"    protected ArrayList\u003cdrugInstance\u003e drugInstances \u003d new ArrayList\u003c\u003e();"},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":"    public DrugStorage(String filepath) {"},{"lineNumber":13,"author":{"gitId":"NoorSarrah"},"content":"        this.filepath \u003d filepath;"},{"lineNumber":14,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":16,"author":{"gitId":"NoorSarrah"},"content":"    public ArrayList\u003cdrugInstance\u003e createNewFile() {"},{"lineNumber":17,"author":{"gitId":"NoorSarrah"},"content":"        File drugsFile \u003d new File(getFilepath());"},{"lineNumber":18,"author":{"gitId":"NoorSarrah"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"NoorSarrah"},"content":"            if (drugsFile.createNewFile()) {"},{"lineNumber":20,"author":{"gitId":"NoorSarrah"},"content":"                System.out.println(\"\\tTo save your task locally,\\n\" +"},{"lineNumber":21,"author":{"gitId":"NoorSarrah"},"content":"                        \"\\tA new file has been created at:\\n\\t\" +"},{"lineNumber":22,"author":{"gitId":"NoorSarrah"},"content":"                        drugsFile.getAbsolutePath() + \"\\n\");"},{"lineNumber":23,"author":{"gitId":"NoorSarrah"},"content":"            }"},{"lineNumber":24,"author":{"gitId":"NoorSarrah"},"content":"        } catch (IOException e) {"},{"lineNumber":25,"author":{"gitId":"NoorSarrah"},"content":"            System.out.println(\"\\tThere was an I/O error:\\nBye!\\n\");"},{"lineNumber":26,"author":{"gitId":"NoorSarrah"},"content":"            e.printStackTrace();"},{"lineNumber":27,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"NoorSarrah"},"content":"        return drugInstances;"},{"lineNumber":29,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":31,"author":{"gitId":"NoorSarrah"},"content":"    public String getFilepath() {"},{"lineNumber":32,"author":{"gitId":"NoorSarrah"},"content":"        return this.filepath;"},{"lineNumber":33,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":35,"author":{"gitId":"NoorSarrah"},"content":"    public ArrayList\u003cdrugInstance\u003e uploadDrugs() throws FileNotFoundException {"},{"lineNumber":36,"author":{"gitId":"NoorSarrah"},"content":"        File f \u003d new File(getFilepath());"},{"lineNumber":37,"author":{"gitId":"NoorSarrah"},"content":"        Scanner s \u003d new Scanner(f);"},{"lineNumber":38,"author":{"gitId":"NoorSarrah"},"content":"        while (s.hasNext()) {"},{"lineNumber":39,"author":{"gitId":"NoorSarrah"},"content":"            String[] part \u003d s.nextLine().split(\" | \");"},{"lineNumber":40,"author":{"gitId":"NoorSarrah"},"content":"            drugInstances.add(new drugInstance(part[0], part[1], part[2]));"},{"lineNumber":41,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"NoorSarrah"},"content":"        return drugInstances;"},{"lineNumber":43,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":45,"author":{"gitId":"NoorSarrah"},"content":"    public void saveDrugs() throws IOException {"},{"lineNumber":46,"author":{"gitId":"NoorSarrah"},"content":"        FileWriter fw \u003d new FileWriter(getFilepath());"},{"lineNumber":47,"author":{"gitId":"NoorSarrah"},"content":"        for (seedu.duke.drugInstance drugInstance : drugInstances) {"},{"lineNumber":48,"author":{"gitId":"NoorSarrah"},"content":"            fw.write(drugInstance.stringToSave());"},{"lineNumber":49,"author":{"gitId":"NoorSarrah"},"content":"            fw.write(System.lineSeparator());"},{"lineNumber":50,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"NoorSarrah"},"content":"        fw.close();"},{"lineNumber":52,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":54,"author":{"gitId":"NoorSarrah"},"content":"    public void exitProgram() {"},{"lineNumber":55,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":56,"author":{"gitId":"NoorSarrah"},"content":"        try {"},{"lineNumber":57,"author":{"gitId":"NoorSarrah"},"content":"            saveDrugs();"},{"lineNumber":58,"author":{"gitId":"NoorSarrah"},"content":"        } catch (IOException e) {"},{"lineNumber":59,"author":{"gitId":"NoorSarrah"},"content":"            System.out.println(\"No file was saved due to an I/O error.\\n\");"},{"lineNumber":60,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":63,"author":{"gitId":"NoorSarrah"},"content":"}"},{"lineNumber":64,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":65,"author":{"gitId":"NoorSarrah"},"content":""}],"authorContributionMap":{"NoorSarrah":65}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"NoorSarrah"},"content":"import system.staff.Parser;"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":"import static system.staff.Parser.run;"},{"lineNumber":5,"author":{"gitId":"NoorSarrah"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application."},{"lineNumber":10,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":"    private Ui ui;"},{"lineNumber":13,"author":{"gitId":"NoorSarrah"},"content":"    static final String PATIENT_FILE_PATH \u003d \"data/PatientList.txt\";"},{"lineNumber":14,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":15,"author":{"gitId":"NoorSarrah"},"content":"    public Duke() {"},{"lineNumber":16,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":18,"author":{"gitId":"NoorSarrah"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"NoorSarrah"},"content":"     * Logic for the main loop that processes information"},{"lineNumber":20,"author":{"gitId":"NoorSarrah"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"NoorSarrah"},"content":"    public void run() {"},{"lineNumber":22,"author":{"gitId":"NoorSarrah"},"content":"        ui.printWelcome();"},{"lineNumber":23,"author":{"gitId":"NoorSarrah"},"content":"        String Username \u003d ui.scanInput();"},{"lineNumber":24,"author":{"gitId":"NoorSarrah"},"content":"        ui.printUserName(Username);"},{"lineNumber":25,"author":{"gitId":"NoorSarrah"},"content":"        ui.printStartMenu();"},{"lineNumber":26,"author":{"gitId":"NoorSarrah"},"content":"        boolean isExit \u003d false;"},{"lineNumber":27,"author":{"gitId":"NoorSarrah"},"content":"        while (!isExit) {"},{"lineNumber":28,"author":{"gitId":"NoorSarrah"},"content":"            try {"},{"lineNumber":29,"author":{"gitId":"NoorSarrah"},"content":"                String startMenuCommand \u003d ui.scanInput();"},{"lineNumber":30,"author":{"gitId":"NoorSarrah"},"content":"                String c \u003d startMenuCommand.trim();"},{"lineNumber":31,"author":{"gitId":"NoorSarrah"},"content":"                switch (c) {"},{"lineNumber":32,"author":{"gitId":"NoorSarrah"},"content":"                    case \"1\":"},{"lineNumber":33,"author":{"gitId":"NoorSarrah"},"content":"                        System.out.println(\"Staff Instance!\");"},{"lineNumber":34,"author":{"gitId":"NoorSarrah"},"content":"                        Parser.run();"},{"lineNumber":35,"author":{"gitId":"NoorSarrah"},"content":"                        break;"},{"lineNumber":36,"author":{"gitId":"NoorSarrah"},"content":"                    case \"2\":"},{"lineNumber":37,"author":{"gitId":"NoorSarrah"},"content":"                        new PatientCommandInstance(PATIENT_FILE_PATH).patientInstance();"},{"lineNumber":38,"author":{"gitId":"NoorSarrah"},"content":"                        break;"},{"lineNumber":39,"author":{"gitId":"NoorSarrah"},"content":"                    case \"3\":"},{"lineNumber":40,"author":{"gitId":"NoorSarrah"},"content":"                        System.out.println(\"Doctor\u0027s Appointment Instance!\");"},{"lineNumber":41,"author":{"gitId":"NoorSarrah"},"content":"                        break;"},{"lineNumber":42,"author":{"gitId":"NoorSarrah"},"content":"                    case \"4\":"},{"lineNumber":43,"author":{"gitId":"NoorSarrah"},"content":"                        System.out.println(\"Nurse Schedule Instance!\");"},{"lineNumber":44,"author":{"gitId":"NoorSarrah"},"content":"                        break;"},{"lineNumber":45,"author":{"gitId":"NoorSarrah"},"content":"                    case \"5\":"},{"lineNumber":46,"author":{"gitId":"NoorSarrah"},"content":"                        System.out.println(\"Drug Viewer Instance!\");"},{"lineNumber":47,"author":{"gitId":"NoorSarrah"},"content":"                        break;"},{"lineNumber":48,"author":{"gitId":"NoorSarrah"},"content":"                    case \"help\":"},{"lineNumber":49,"author":{"gitId":"NoorSarrah"},"content":"                        System.out.println(\"Here is the list of Start Menu commands!\");"},{"lineNumber":50,"author":{"gitId":"NoorSarrah"},"content":"                        ui.printStartMenu();"},{"lineNumber":51,"author":{"gitId":"NoorSarrah"},"content":"                        break;"},{"lineNumber":52,"author":{"gitId":"NoorSarrah"},"content":"                    case \"bye\":"},{"lineNumber":53,"author":{"gitId":"NoorSarrah"},"content":"                        isExit \u003d true;"},{"lineNumber":54,"author":{"gitId":"NoorSarrah"},"content":"                        ui.printGoodbye();"},{"lineNumber":55,"author":{"gitId":"NoorSarrah"},"content":"                        break;"},{"lineNumber":56,"author":{"gitId":"NoorSarrah"},"content":"                    default:"},{"lineNumber":57,"author":{"gitId":"NoorSarrah"},"content":"                        System.out.println(\"OOPS! That is not a registered command! Please type \\\"help\\\" to see the list of commands\");"},{"lineNumber":58,"author":{"gitId":"NoorSarrah"},"content":"                        break;"},{"lineNumber":59,"author":{"gitId":"NoorSarrah"},"content":"                }"},{"lineNumber":60,"author":{"gitId":"NoorSarrah"},"content":"            } catch (NullPointerException | IOException e) {"},{"lineNumber":61,"author":{"gitId":"NoorSarrah"},"content":"                //Command C can return as null if an error is triggered in parser"},{"lineNumber":62,"author":{"gitId":"NoorSarrah"},"content":"                //Null Pointer Exception may hence occur, the catch statement is to ensure it does not exit the loop."},{"lineNumber":63,"author":{"gitId":"NoorSarrah"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":67,"author":{"gitId":"NoorSarrah"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"NoorSarrah"},"content":"     * Calls for the running of a new Duke instance"},{"lineNumber":69,"author":{"gitId":"NoorSarrah"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"NoorSarrah"},"content":"     * @param args Runtime arguments are unused"},{"lineNumber":71,"author":{"gitId":"NoorSarrah"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"NoorSarrah"},"content":"    public static void main(String[] args) {"},{"lineNumber":73,"author":{"gitId":"NoorSarrah"},"content":"        new Duke().run();"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"NoorSarrah":65,"-":10}},{"path":"src/main/java/seedu/duke/DukeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"    protected String error;"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"     * Instantiates this exception"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"     * @param error error type"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"    public DukeException(String error) {"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"        this.error \u003d error;"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"     * Shows the error encountered by the user"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"     * @param input error type"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"    public void getError(String input) {"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"        switch (error) {"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"        case \"done\":"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"OOPS! I need the command to be in the right format! \\n\" +"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Try \\\"done [(integer) task number]\\\" \\n\" +"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Please make sure you do not include any brackets [ or ] in your input! \\n\" +"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Also make sure that the task number is actually accounted for in the list! \");"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"            break;"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"        case \"todo\":"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"OOPS! I need the command to be in the right format! \\n\" +"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Try \\\"todo [description]\\\" \\n\" +"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Please make sure you do not include any brackets [ or ] in your input!\");"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"            break;"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"        case \"deadline\":"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"OOPS! I need the command to be in the right format! \\n\" +"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Try \\\"deadline [description] /by [time]\\\" \\n\" +"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Please make sure you do not include any brackets [ or ] in your input!\");"},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"            break;"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"        case \"event\":"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"OOPS! I need the command to be in the right format! \\n\" +"},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Try \\\"event [description] /at [time]\\\" \\n\" +"},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Please make sure you do not include any brackets [ or ] in your input!\");"},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":"            break;"},{"lineNumber":44,"author":{"gitId":"Chiamjiaen"},"content":"        case \"delete\":"},{"lineNumber":45,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"OOPS! I need the command to be in the right format! \\n\" +"},{"lineNumber":46,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Try \\\"delete [(integer) task number]\\\" \\n\" +"},{"lineNumber":47,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Please make sure you do not include any brackets [ or ] in your input! \\n\" +"},{"lineNumber":48,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Also make sure that the task number is actually accounted for in the list! \");"},{"lineNumber":49,"author":{"gitId":"Chiamjiaen"},"content":"            break;"},{"lineNumber":50,"author":{"gitId":"Chiamjiaen"},"content":"        case \"loadFile\":"},{"lineNumber":51,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"OOPS! The file format is wrong! It may have been corrupted! \\n\" +"},{"lineNumber":52,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Please delete the file \\\"data/PatientList.txt\\\" to try making another file! \");"},{"lineNumber":53,"author":{"gitId":"Chiamjiaen"},"content":"        default:"},{"lineNumber":54,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"OOPS! Your command may not be valid! \\n\" +"},{"lineNumber":55,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Please check the list of available commands using \\\"help\\\"\");"},{"lineNumber":56,"author":{"gitId":"Chiamjiaen"},"content":"            break;"},{"lineNumber":57,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":59}},{"path":"src/main/java/seedu/duke/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"public class Parser {"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"     * Checks the number of tokens and throws an exception based on the command"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"     * @param numberOfTokens number of tokens in the string"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"     * @param command        interpreted command from the user to be used in error finding"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"     * @throws DukeException exception based on command"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"    public static void lengthCheck(int numberOfTokens, String command) throws DukeException {"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"        if (numberOfTokens \u003c 2) {"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"            throw new DukeException(command);"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"    public static boolean patientParse(String fullCommand) {"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"        String[] stringTokens \u003d fullCommand.trim().split(\" \", 2);"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"        int numberOfTokens \u003d stringTokens.length;"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"        String command \u003d stringTokens[0];"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"            switch (command) {"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"            case \"list\":"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"                PatientList.listPatients();"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"                break;"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"            case \"add\":"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"                lengthCheck(numberOfTokens, command);"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"                String[] toCommand \u003d stringTokens[1].trim().split(\" \", 6);"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"                PatientList.addPatient(toCommand[0], toCommand[1], Integer.parseInt(toCommand[2]),"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"                        toCommand[3], toCommand[4], toCommand[5]);"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"                break;"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"            case \"delete\":"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"                lengthCheck(numberOfTokens, command);"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"                PatientList.deletePatient(Integer.parseInt(stringTokens[1]));"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"                break;"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"            case \"find\":"},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"                lengthCheck(numberOfTokens, command);"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"                PatientList.findPatient(stringTokens[1]);"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":"                break;"},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":"            case \"help\":"},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":"                Ui.printPatientHelpList();"},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":"            case \"return\":"},{"lineNumber":44,"author":{"gitId":"Chiamjiaen"},"content":"                return true;"},{"lineNumber":45,"author":{"gitId":"Chiamjiaen"},"content":"            default:"},{"lineNumber":46,"author":{"gitId":"Chiamjiaen"},"content":"                Ui.unrecognizedCommandMessage();"},{"lineNumber":47,"author":{"gitId":"Chiamjiaen"},"content":"                break;"},{"lineNumber":48,"author":{"gitId":"Chiamjiaen"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":50,"author":{"gitId":"Chiamjiaen"},"content":"            Ui.invalidFormatMessage();"},{"lineNumber":51,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (DukeException e) {"},{"lineNumber":52,"author":{"gitId":"Chiamjiaen"},"content":"            e.getError(command);"},{"lineNumber":53,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"Chiamjiaen"},"content":"        return false;"},{"lineNumber":55,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":56}},{"path":"src/main/java/seedu/duke/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"public class Patient {"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"    protected String patientID;"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"    protected String name;"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"    protected int age;"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"    protected String gender;"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"    protected String illness;"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    protected String drugsNeeded;"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"    public Patient(String patientID, String name, int age, String gender, String illness, String drugsNeeded) {"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"        this.patientID \u003d patientID;"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"        this.name \u003d name;"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"        this.age \u003d age;"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"        this.gender \u003d gender;"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"        this.illness \u003d illness;"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"        this.drugsNeeded \u003d drugsNeeded;"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"    public String getPatientDetails() {"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"        return (patientID + \", \" + name + \", \" + age + \", \" +"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"                gender + \", \" + illness + \", \" + drugsNeeded);"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"    public String toSaveFormat() {"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"        return (patientID + \" | \" + name + \" | \" + age + \" | \" +"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"                gender + \" | \" + illness + \" | \" + drugsNeeded);"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":29}},{"path":"src/main/java/seedu/duke/PatientCommandInstance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"public class PatientCommandInstance {"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"    private Ui ui;"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"    private PatientList patients;"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"    private Storage storage;"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"    static final String PATIENT_FILE_PATH \u003d \"data/PatientList.txt\";"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"    public PatientCommandInstance(String filepath) {"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"        ui \u003d new Ui();"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"        storage \u003d new Storage(PATIENT_FILE_PATH);"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"        try {"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"            patients \u003d new PatientList(storage.loadPatients());"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (DukeException e) {"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"            ui.showLoadingError();"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"            //creates new task list if failure to load from folder."},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"            patients \u003d new PatientList();"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"    public void patientInstance() {"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"        ui.patientCommandWelcome();"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"        boolean isReturnToStartMenu \u003d false;"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"        while (!isReturnToStartMenu) {"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"            try {"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"                String fullCommand \u003d ui.scanInput();"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"                ui.showLine(); // show the divider line (\"_______\")"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"                isReturnToStartMenu \u003d Parser.patientParse(fullCommand);"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"                if (isReturnToStartMenu) {"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"                    ui.returningToStartMenuMessage();"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"                }"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"                ui.showLine();"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"            } catch (NullPointerException e) {"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"                //Command C can return as null if an error is triggered in parser"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"                //Null Pointer Exception may hence occur, the catch statement is to ensure it does not exit the loop."},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"        storage.storePatients(patients);"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":42}},{"path":"src/main/java/seedu/duke/PatientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"public class PatientList {"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"    private static ArrayList\u003cPatient\u003e patients \u003d new ArrayList\u003cPatient\u003e();"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"    public PatientList() {"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"    public PatientList(ArrayList\u003cPatient\u003e load) {"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"        this.patients \u003d load;"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"    public static void addPatient(String patientID, String name, int age, String gender, String illness, String drugsNeeded) {"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"        Patient newPatient \u003d new Patient(patientID, name, age, gender, illness, drugsNeeded);"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"        patients.add(newPatient);"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"        Ui.patientAddedMessage(name);"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"    public static void findPatient(String inputString) {"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"        int numberOfPatients \u003d patients.size();"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"        for (int i \u003d 0; i \u003c numberOfPatients; i++) {"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"            String patientDetails \u003d patients.get(i).getPatientDetails();"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"            if (patientDetails.contains(inputString)) {"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"                Ui.printPatientList(i, patientDetails);"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"            }"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"    public static void listPatients() {"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"        int numberOfPatients \u003d patients.size();"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"        if (numberOfPatients \u003d\u003d 0) {"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"            Ui.emptyPatientListMessage();"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"        } else {"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"            Ui.notEmptyPatientListMessage();"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"            for (int i \u003d 0; i \u003c numberOfPatients; i++) {"},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"                Ui.printPatientList(i, patients.get(i).getPatientDetails());"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":"    public static void deletePatient(int inputInt) {"},{"lineNumber":44,"author":{"gitId":"Chiamjiaen"},"content":"        int patientIndex \u003d inputInt - 1;"},{"lineNumber":45,"author":{"gitId":"Chiamjiaen"},"content":"        if (inputInt \u003c\u003d 0 || inputInt \u003e patients.size()) {"},{"lineNumber":46,"author":{"gitId":"Chiamjiaen"},"content":"            Ui.incorrectInput();"},{"lineNumber":47,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"Chiamjiaen"},"content":"        Patient toBeDeleted \u003d patients.get(patientIndex);"},{"lineNumber":49,"author":{"gitId":"Chiamjiaen"},"content":"        patients.remove(patientIndex);"},{"lineNumber":50,"author":{"gitId":"Chiamjiaen"},"content":"        Ui.deletePatientMessage(toBeDeleted.getPatientDetails(), patients.size());"},{"lineNumber":51,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":53,"author":{"gitId":"Chiamjiaen"},"content":"    public int getSize() {"},{"lineNumber":54,"author":{"gitId":"Chiamjiaen"},"content":"        return patients.size();"},{"lineNumber":55,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":57,"author":{"gitId":"Chiamjiaen"},"content":"    public String toSaveFile(int i) {"},{"lineNumber":58,"author":{"gitId":"Chiamjiaen"},"content":"        return patients.get(i).toSaveFormat();"},{"lineNumber":59,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":60}},{"path":"src/main/java/seedu/duke/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"public class Storage {"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"    static File saveFile;"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"    static ArrayList\u003cPatient\u003e patients \u003d new ArrayList\u003c\u003e();"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    static String filePath;"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"     * Instantiates a storage handler by taking in the filepath"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"     * @param filePath the filepath where the file will be created"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"    public Storage(String filePath) {"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"        saveFile \u003d new File(filePath);"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"        Storage.filePath \u003d filePath;"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"     * Checks if the file exists and initializes one if there is not."},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"    public void fileInit() {"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"            //makes file directory if it doesnt exist in the system."},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"            if (!(saveFile.exists())) {"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"                saveFile.getParentFile().mkdirs();"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"                saveFile.createNewFile();"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"OOPS! I can\u0027t create the directory or file!\");"},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":"     * Loads the saved list of patients from save location"},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"Chiamjiaen"},"content":"     * @return Populated patients arraylist"},{"lineNumber":45,"author":{"gitId":"Chiamjiaen"},"content":"     * @throws DukeException if there is an error in loading"},{"lineNumber":46,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"Chiamjiaen"},"content":"    public ArrayList\u003cPatient\u003e loadPatients() throws DukeException {"},{"lineNumber":48,"author":{"gitId":"Chiamjiaen"},"content":"        fileInit();"},{"lineNumber":49,"author":{"gitId":"Chiamjiaen"},"content":"        try {"},{"lineNumber":50,"author":{"gitId":"Chiamjiaen"},"content":"            // initializing file scanner to scan the file"},{"lineNumber":51,"author":{"gitId":"Chiamjiaen"},"content":"            Scanner fileScanner \u003d new Scanner(saveFile);"},{"lineNumber":52,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":53,"author":{"gitId":"Chiamjiaen"},"content":"            while (fileScanner.hasNext()) {"},{"lineNumber":54,"author":{"gitId":"Chiamjiaen"},"content":"                String currentScan \u003d fileScanner.nextLine();"},{"lineNumber":55,"author":{"gitId":"Chiamjiaen"},"content":"                //splits the string into sections for storing in the ArrayList"},{"lineNumber":56,"author":{"gitId":"Chiamjiaen"},"content":"                String[] taskSave \u003d currentScan.trim().split(\" \\\\| \");"},{"lineNumber":57,"author":{"gitId":"Chiamjiaen"},"content":"                if (taskSave.length !\u003d 6) {"},{"lineNumber":58,"author":{"gitId":"Chiamjiaen"},"content":"                    throw new DukeException(\"loadFile\");"},{"lineNumber":59,"author":{"gitId":"Chiamjiaen"},"content":"                }"},{"lineNumber":60,"author":{"gitId":"Chiamjiaen"},"content":"                Patient tempPatient \u003d new Patient(taskSave[0], taskSave[1], Integer.parseInt(taskSave[2]),"},{"lineNumber":61,"author":{"gitId":"Chiamjiaen"},"content":"                        taskSave[3], taskSave[4], taskSave[5]);"},{"lineNumber":62,"author":{"gitId":"Chiamjiaen"},"content":"                patients.add(tempPatient);"},{"lineNumber":63,"author":{"gitId":"Chiamjiaen"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":65,"author":{"gitId":"Chiamjiaen"},"content":"            throw new DukeException(\"OOPS! I can\u0027t read the save file!\");"},{"lineNumber":66,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (DukeException e) {"},{"lineNumber":67,"author":{"gitId":"Chiamjiaen"},"content":"            e.getError(\"loadFile\");"},{"lineNumber":68,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"Chiamjiaen"},"content":"        return patients;"},{"lineNumber":70,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":72,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"Chiamjiaen"},"content":"     * Saves all tasks to text file"},{"lineNumber":74,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"Chiamjiaen"},"content":"     * @param saveInput current files to be stored"},{"lineNumber":76,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"Chiamjiaen"},"content":"    public void storePatients(PatientList saveInput) {"},{"lineNumber":78,"author":{"gitId":"Chiamjiaen"},"content":"        fileInit();"},{"lineNumber":79,"author":{"gitId":"Chiamjiaen"},"content":"        try {"},{"lineNumber":80,"author":{"gitId":"Chiamjiaen"},"content":"            //creates a new file writer to write to text file"},{"lineNumber":81,"author":{"gitId":"Chiamjiaen"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath);"},{"lineNumber":82,"author":{"gitId":"Chiamjiaen"},"content":"            for (int i \u003d 0; i \u003c saveInput.getSize(); i++) {"},{"lineNumber":83,"author":{"gitId":"Chiamjiaen"},"content":"                fileWriter.write(saveInput.toSaveFile(i) + \"\\n\");"},{"lineNumber":84,"author":{"gitId":"Chiamjiaen"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"Chiamjiaen"},"content":"            fileWriter.close();"},{"lineNumber":86,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (java.io.IOException e) {"},{"lineNumber":87,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"☹ OOPS!!! The file can\u0027t be saved :-(\");"},{"lineNumber":88,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":90}},{"path":"src/main/java/seedu/duke/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"public class Ui {"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"    static Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"    static String LINEBREAK \u003d \"____________________________________________________________\\n\";"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    static String LOGO \u003d \" ____        _        \\n\""},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"    public static String scanInput() {"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"        String input \u003d scanner.nextLine().trim();"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"        return input;"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"    public static void printPatientHelpList() {"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Here is a list of patient commands: \");"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"help\\\" brings up this list of commands!\");"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"add [Patient ID] [Name] [Age] [Gender] [Illness] [Drugs Needed]\\\" adds a patient to the patient list!\");"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"list\\\" brings up the list of all current patients!\");"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"delete [index in list]\\\" deletes the patient at that index from the list!\");"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"find [keyword or phrase]\\\" finds a keyword or phrase and shows its corresponding patient!\");"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"return\\\" returns you to the Start Menu!\");"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"    public static void unrecognizedCommandMessage() {"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"OOPS! I cant recognize that command! \");"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"    public static void invalidFormatMessage() {"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"OOPS! Please check to see if your command is properly formatted! \");"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"    public void showLine() {"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(LINEBREAK);"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":"    public static void printWelcome() {"},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Hello from\\n\" + LOGO + \"What is your name?\");"},{"lineNumber":44,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":46,"author":{"gitId":"Chiamjiaen"},"content":"    public static void printUserName(String userName) {"},{"lineNumber":47,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Hello \" + userName + \"!\");"},{"lineNumber":48,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":50,"author":{"gitId":"Chiamjiaen"},"content":"    public static void printStartMenu() {"},{"lineNumber":51,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Start Menu\");"},{"lineNumber":52,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Commands:\");"},{"lineNumber":53,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"1\\\" to go to staff\");"},{"lineNumber":54,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"2\\\" to go to patients\");"},{"lineNumber":55,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"3\\\" to go to doctors appointments\");"},{"lineNumber":56,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"4\\\" to go to nurse schedules\");"},{"lineNumber":57,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"5\\\" to go to drugs inventory\");"},{"lineNumber":58,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"help\\\" to see what each of the sections contain\");"},{"lineNumber":59,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"bye\\\" to exit the application\");"},{"lineNumber":60,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":62,"author":{"gitId":"Chiamjiaen"},"content":"    public static void patientAddedMessage(String name) {"},{"lineNumber":63,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(name + \" is now a patient here!\");"},{"lineNumber":64,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":66,"author":{"gitId":"Chiamjiaen"},"content":"    public static void printPatientList(int i, String patientDetails) {"},{"lineNumber":67,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(i + \".\" + patientDetails);"},{"lineNumber":68,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":70,"author":{"gitId":"Chiamjiaen"},"content":"    public static void emptyPatientListMessage() {"},{"lineNumber":71,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"OOPS! It seems like you have no patients in the list now!\");"},{"lineNumber":72,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":74,"author":{"gitId":"Chiamjiaen"},"content":"    public static void notEmptyPatientListMessage() {"},{"lineNumber":75,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Here are the patients currently in the list!\");"},{"lineNumber":76,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":78,"author":{"gitId":"Chiamjiaen"},"content":"    public static void incorrectInput() {"},{"lineNumber":79,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"OOPS! Please check to see if your command is properly formatted! \");"},{"lineNumber":80,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":82,"author":{"gitId":"Chiamjiaen"},"content":"    public static void deletePatientMessage(String deletedPatientDetails, int inputInt) {"},{"lineNumber":83,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Noted. I\u0027ve removed this patient: \\n\" + deletedPatientDetails);"},{"lineNumber":84,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Now you have \" + inputInt + \" patients in the list\");"},{"lineNumber":85,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":87,"author":{"gitId":"Chiamjiaen"},"content":"    public void printGoodbye() {"},{"lineNumber":88,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Goodbye! Have a nice day!\");"},{"lineNumber":89,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":91,"author":{"gitId":"Chiamjiaen"},"content":"    public void patientCommandWelcome() {"},{"lineNumber":92,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Welcome to the patient Commands section!\");"},{"lineNumber":93,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Here is a list of patient commands: \");"},{"lineNumber":94,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"add [Patient ID] [Name] [Age] [Gender] [Illness] [Drugs Needed]\\\" adds a patient to the patient list!\");"},{"lineNumber":95,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"list\\\" brings up the list of all current patients!\");"},{"lineNumber":96,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"delete [index in list]\\\" deletes the patient at that index from the list!\");"},{"lineNumber":97,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"find [keyword or phrase]\\\" finds a keyword or phrase and shows its corresponding patient!\");"},{"lineNumber":98,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"help\\\" brings up a list of commands!\");"},{"lineNumber":99,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"return\\\" returns you to the Start Menu!\");"},{"lineNumber":100,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":102,"author":{"gitId":"Chiamjiaen"},"content":"    public void returningToStartMenuMessage() {"},{"lineNumber":103,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Returning to start Menu!\");"},{"lineNumber":104,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":106,"author":{"gitId":"Chiamjiaen"},"content":"    public void showLoadingError() {"},{"lineNumber":107,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"OOPS! There was an error loading the file!\");"},{"lineNumber":108,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":109}},{"path":"src/main/java/seedu/duke/drugInstance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NoorSarrah"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":3,"author":{"gitId":"NoorSarrah"},"content":"public class drugInstance {"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":"    protected String name;"},{"lineNumber":5,"author":{"gitId":"NoorSarrah"},"content":"    protected String price;"},{"lineNumber":6,"author":{"gitId":"NoorSarrah"},"content":"    protected String quantity;"},{"lineNumber":7,"author":{"gitId":"NoorSarrah"},"content":"    public drugInstance(String name, String price, String quantity) {"},{"lineNumber":8,"author":{"gitId":"NoorSarrah"},"content":"        this.name \u003d name;"},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":"        this.price \u003d price;"},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":"        this.quantity \u003d quantity;"},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"NoorSarrah"},"content":"    public String getName() {"},{"lineNumber":14,"author":{"gitId":"NoorSarrah"},"content":"        return this.name;"},{"lineNumber":15,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"NoorSarrah"},"content":"    public String getPrice() {"},{"lineNumber":17,"author":{"gitId":"NoorSarrah"},"content":"        return this.price;"},{"lineNumber":18,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"NoorSarrah"},"content":"    public String getQuantity() {"},{"lineNumber":20,"author":{"gitId":"NoorSarrah"},"content":"        return this.quantity;"},{"lineNumber":21,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"NoorSarrah"},"content":"    public String stringToSave() {"},{"lineNumber":23,"author":{"gitId":"NoorSarrah"},"content":"        return getName() + \" | \" + getPrice() + \" | \" + getQuantity();"},{"lineNumber":24,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"NoorSarrah"},"content":"}"}],"authorContributionMap":{"NoorSarrah":25}},{"path":"src/main/java/seedu/duke/drugsDuke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NoorSarrah"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":3,"author":{"gitId":"NoorSarrah"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"NoorSarrah"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"NoorSarrah"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":8,"author":{"gitId":"NoorSarrah"},"content":"public class drugsDuke {"},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":"     * Main entry-point for the java.duke.drugsDuke application."},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"NoorSarrah"},"content":"    protected DrugStorage drugStorage;"},{"lineNumber":14,"author":{"gitId":"NoorSarrah"},"content":"    protected DrugAction drugAction;"},{"lineNumber":15,"author":{"gitId":"NoorSarrah"},"content":"    protected ArrayList\u003cdrugInstance\u003e drugInstances;"},{"lineNumber":16,"author":{"gitId":"NoorSarrah"},"content":"    public drugsDuke(String filePath) {"},{"lineNumber":17,"author":{"gitId":"NoorSarrah"},"content":"        drugStorage \u003d new DrugStorage(filePath);"},{"lineNumber":18,"author":{"gitId":"NoorSarrah"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"NoorSarrah"},"content":"            drugInstances \u003d drugStorage.uploadDrugs();"},{"lineNumber":20,"author":{"gitId":"NoorSarrah"},"content":"            drugAction \u003d new DrugAction();"},{"lineNumber":21,"author":{"gitId":"NoorSarrah"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":22,"author":{"gitId":"NoorSarrah"},"content":"            drugInstances \u003d drugStorage.createNewFile();"},{"lineNumber":23,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"NoorSarrah"},"content":"    public static void main(String[] args) {"},{"lineNumber":26,"author":{"gitId":"NoorSarrah"},"content":"        String pathOfFile \u003d new File(\"\").getAbsolutePath();"},{"lineNumber":27,"author":{"gitId":"NoorSarrah"},"content":"        drugsDuke drugsDuke \u003d new drugsDuke(pathOfFile + \"/drugInstances.txt\");"},{"lineNumber":28,"author":{"gitId":"NoorSarrah"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":29,"author":{"gitId":"NoorSarrah"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":30,"author":{"gitId":"NoorSarrah"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":31,"author":{"gitId":"NoorSarrah"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":32,"author":{"gitId":"NoorSarrah"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":33,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":34,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"What is your name?\");"},{"lineNumber":35,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":36,"author":{"gitId":"NoorSarrah"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":37,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"Hello \" + in.nextLine());"},{"lineNumber":38,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":39,"author":{"gitId":"NoorSarrah"},"content":"        drugsDuke.run();"},{"lineNumber":40,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":42,"author":{"gitId":"NoorSarrah"},"content":"    public void run() {"},{"lineNumber":43,"author":{"gitId":"NoorSarrah"},"content":"        Scanner myObj \u003d new Scanner(System.in);"},{"lineNumber":44,"author":{"gitId":"NoorSarrah"},"content":"        String command \u003d myObj.nextLine();"},{"lineNumber":45,"author":{"gitId":"NoorSarrah"},"content":"        while (!command.equals(\"bye\")) {"},{"lineNumber":46,"author":{"gitId":"NoorSarrah"},"content":"            if (command.equals(\"list\")) {"},{"lineNumber":47,"author":{"gitId":"NoorSarrah"},"content":"                drugAction.printList();"},{"lineNumber":48,"author":{"gitId":"NoorSarrah"},"content":"            } else if (command.contains(\"add\")) {"},{"lineNumber":49,"author":{"gitId":"NoorSarrah"},"content":"                drugAction.addDrugs(command);"},{"lineNumber":50,"author":{"gitId":"NoorSarrah"},"content":"            } else if (command.contains(\"delete\")) {"},{"lineNumber":51,"author":{"gitId":"NoorSarrah"},"content":"                drugAction.deleteDrugs(command);"},{"lineNumber":52,"author":{"gitId":"NoorSarrah"},"content":"            } else {"},{"lineNumber":53,"author":{"gitId":"NoorSarrah"},"content":"                System.out.println(\"There is no such action! Please only enter the following: \");"},{"lineNumber":54,"author":{"gitId":"NoorSarrah"},"content":"                System.out.println(\"1) add \u003c...\u003e\\r\\n2) delete\u003c...\u003e\\r\\n3) list\\r\\n4) bye\");"},{"lineNumber":55,"author":{"gitId":"NoorSarrah"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"NoorSarrah"},"content":"            command \u003d myObj.nextLine();"},{"lineNumber":57,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"NoorSarrah"},"content":"        drugStorage.exitProgram();"},{"lineNumber":59,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":61,"author":{"gitId":"NoorSarrah"},"content":"}"}],"authorContributionMap":{"NoorSarrah":61}},{"path":"src/main/java/system/staff/Doctor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package system.staff;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class Doctor extends Staff{"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"    public Doctor(String[] array) {"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"        super(array);"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":9}},{"path":"src/main/java/system/staff/Nurse.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package system.staff;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class Nurse extends Staff{"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"    public Nurse(String[] array) {"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"        super(array);"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":9}},{"path":"src/main/java/system/staff/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package system.staff;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import static system.staff.UI.printLine;"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"import static system.staff.UI.staffHeader;"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"public class Parser {"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"    public static void run() throws IOException {"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"        Storage.fileHandling();"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Type something\");"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"        while (true) {"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"            String line;"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"            line \u003d in.nextLine();"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"            if (commandHandler(line) \u003d\u003d 0) {"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"                break;"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"    public static int commandHandler(String line) throws IOException {"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"        switch (line.split(\" \")[0]) {"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"        case (\"add\"):"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"            Staff.add(line);"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"        case (\"print\"):"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"            staffHeader();"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"            printLine();"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"            Staff.print();"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"        case (\"list\"):"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"            staffHeader();"},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"            printLine();"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"            if (line.split(\" \")[1].equals(\"nurses\")) {"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"                Staff.listNurse();"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"            } else if (line.split(\" \")[1].equals(\"doctors\")) {"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"                Staff.listDoctor();"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"            } else {"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"        case (\"delete\"):"},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"            Staff.delete(line);"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"        default:"},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":"            Storage.writeToFile();"},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":"            return 0;"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"    return 1;"},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":62,"author":{"gitId":"blank-bank"},"content":"    protected static String[] addFunctionParser(String line) {"},{"lineNumber":63,"author":{"gitId":"blank-bank"},"content":"        int length \u003d line.split(\" \").length;"},{"lineNumber":64,"author":{"gitId":"blank-bank"},"content":"        String[] input \u003d new String[4];"},{"lineNumber":65,"author":{"gitId":"blank-bank"},"content":"        String[] array \u003d line.split(\" \");"},{"lineNumber":66,"author":{"gitId":"blank-bank"},"content":"        for (int i \u003d 1; i\u003clength; i++) {"},{"lineNumber":67,"author":{"gitId":"blank-bank"},"content":"            try {"},{"lineNumber":68,"author":{"gitId":"blank-bank"},"content":"                if (i \u003c\u003d 4) {"},{"lineNumber":69,"author":{"gitId":"blank-bank"},"content":"                    input[i-1] \u003d array[i];"},{"lineNumber":70,"author":{"gitId":"blank-bank"},"content":"                } else {"},{"lineNumber":71,"author":{"gitId":"blank-bank"},"content":"                    input[3] \u003d input[3] + \" \" + array[i];"},{"lineNumber":72,"author":{"gitId":"blank-bank"},"content":"                }"},{"lineNumber":73,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":74,"author":{"gitId":"blank-bank"},"content":"            } catch (IndexOutOfBoundsException e){"},{"lineNumber":75,"author":{"gitId":"blank-bank"},"content":"                input[i-1] \u003d \" \";"},{"lineNumber":76,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"blank-bank"},"content":"        return input;"},{"lineNumber":79,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":80}},{"path":"src/main/java/system/staff/Staff.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package system.staff;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import static system.staff.Parser.addFunctionParser;"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import static system.staff.UI.prettyPrint;"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"public class Staff {"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"    private static ArrayList\u003cStaff\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"    protected static int numStaff \u003d 0;"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"    protected String id;"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"    protected String name;"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"    protected String age;"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"    protected String specialisation;"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"    public Staff(String[] list){"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"        this.id \u003d list[0];"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"        this.name \u003d list[1];"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"        this.age \u003d list[2];"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"        this.specialisation \u003d list[3];"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"    //Need to implement addNurse and addDoctor if the parameters will be changed"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"    public static void addStaff(Staff staff) {"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"        list.add(staff);"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"        numStaff++;"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"    public static void add(String line) {"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"        String[] array \u003d addFunctionParser(line);"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"        Staff staff \u003d new Staff(array);"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"        addStaff(staff);"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"        UI.hiredOutput(line);"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"    public static void print(){"},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"        for (Staff staff: list){"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"            System.out.println("},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"                    prettyPrint(staff.getId(), 10) + \" \" + prettyPrint(staff.getName(), 10) + \" \""},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"                            + prettyPrint(staff.getAge(),5) + \" \" + prettyPrint(staff.getSpecialisation(), 20));"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"    protected static ArrayList getList(){"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"        return list;"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"    public static void listNurse(){"},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"        for (Staff staff: list){"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"            if (staff.getType().equals(\"N\")) {"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"                System.out.println("},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"                        prettyPrint(staff.getId(), 10) + \" \" + prettyPrint(staff.getName(), 10) + \" \""},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":"                                + prettyPrint(staff.getAge(), 5) + \" \" + prettyPrint(staff.getSpecialisation(), 20));"},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"    public static void listDoctor(){"},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":"        for (Staff staff: list){"},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":"            if (staff.getType().equals(\"D\")) {"},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":"                System.out.println("},{"lineNumber":62,"author":{"gitId":"blank-bank"},"content":"                        prettyPrint(staff.getId(), 10) + \" \" + prettyPrint(staff.getName(), 10) + \" \""},{"lineNumber":63,"author":{"gitId":"blank-bank"},"content":"                                + prettyPrint(staff.getAge(), 5) + \" \" + prettyPrint(staff.getSpecialisation(), 20));"},{"lineNumber":64,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":68,"author":{"gitId":"blank-bank"},"content":"    public static void delete(String line) {"},{"lineNumber":69,"author":{"gitId":"blank-bank"},"content":"        int i \u003d 0;"},{"lineNumber":70,"author":{"gitId":"blank-bank"},"content":"        for (Staff staff: list){"},{"lineNumber":71,"author":{"gitId":"blank-bank"},"content":"            if (staff.getId().equals(line.split(\" \")[1])) {"},{"lineNumber":72,"author":{"gitId":"blank-bank"},"content":"                list.remove(i);"},{"lineNumber":73,"author":{"gitId":"blank-bank"},"content":"                numStaff--;"},{"lineNumber":74,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"blank-bank"},"content":"            i++;"},{"lineNumber":76,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"blank-bank"},"content":"        System.out.println(line.split(\" \")[1] + \" has been fired.\");"},{"lineNumber":78,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":80,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":81,"author":{"gitId":"blank-bank"},"content":"    public String getName() {"},{"lineNumber":82,"author":{"gitId":"blank-bank"},"content":"        return name;"},{"lineNumber":83,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"blank-bank"},"content":"    public String getAge() {"},{"lineNumber":85,"author":{"gitId":"blank-bank"},"content":"        return age;"},{"lineNumber":86,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"blank-bank"},"content":"    public String getSpecialisation() {"},{"lineNumber":88,"author":{"gitId":"blank-bank"},"content":"        return specialisation;"},{"lineNumber":89,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"blank-bank"},"content":"    public String getId() {"},{"lineNumber":91,"author":{"gitId":"blank-bank"},"content":"        return id;"},{"lineNumber":92,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"blank-bank"},"content":"    public String getType() {"},{"lineNumber":94,"author":{"gitId":"blank-bank"},"content":"        return this.id.substring(0,1);"},{"lineNumber":95,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":97,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":98,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":98}},{"path":"src/main/java/system/staff/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package system.staff;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"    private static final String FILE_PATH \u003d \"Staff.txt\";"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"    public static void fileHandling(){"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"            loadFile();"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"            createFile();"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"    public static void loadTask(String line){"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"        String[] arr \u003d line.split(\"\\\\|\");"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"        Staff staff \u003d new Staff(arr);"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"        Staff.addStaff(staff);"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"    public static void loadFile() throws FileNotFoundException {"},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":"        File f \u003d new File(FILE_PATH);           // create a File for the given file path"},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"        Scanner s \u003d new Scanner(f);            // create a Scanner using the File as the source"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"        while (s.hasNext()) {"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"            loadTask(s.nextLine());"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"    public static void writeToFile() throws IOException {"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"        createFile();"},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"        FileWriter fw \u003d new FileWriter(FILE_PATH);"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"        for (int i\u003d0; i\u003cStaff.numStaff; i++) {"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"            ArrayList\u003cStaff\u003e buffer \u003d Staff.getList();"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"            fw.write(formWriteData(buffer.get(i)));"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"        fw.close();"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"    public static void createFile(){"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"        try {"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"            File myObj \u003d new File(FILE_PATH);"},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"            if (myObj.createNewFile()) {"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\"File created: \" + myObj.getName());"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"            } else {"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\"File is overwritten.\");"},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":"        } catch (IOException e) {"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":57,"author":{"gitId":"blank-bank"},"content":"            e.printStackTrace();"},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":"    public static String formWriteData(Staff staff) {"},{"lineNumber":62,"author":{"gitId":"blank-bank"},"content":"        return (staff.getId() + \"|\" + staff.getName() + \"|\" + staff.getAge() + \"|\" + staff.getSpecialisation() + \"\\n\");"},{"lineNumber":63,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":65,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":65}},{"path":"src/main/java/system/staff/UI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package system.staff;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class UI {"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"    public static void hiredOutput(String line) {"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"        if (line.split(\" \")[1].charAt(0) \u003d\u003d \u0027D\u0027) {"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"Doctor \" + line.split(\" \")[2] + \" hired!\");"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"        else if (line.split(\" \")[1].charAt(0) \u003d\u003d \u0027N\u0027) {"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"Nurse \" + line.split(\" \")[2] + \" hired!\");"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"    public static String prettyPrint(String string, int length) {"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"        return String.format(\"%1$-\" + length + \"s\", string);"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"    public static String repeat(int count, String with) {"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"        return new String(new char[count]).replace(\"\\0\", with);"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"    public static void printLine() {"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"        System.out.println(repeat(45, \"-\"));"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":"    public static void staffHeader() {"},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"        System.out.println("},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"                prettyPrint(\"ID\", 10) + \" \" + prettyPrint(\"Name\", 10) + \" \""},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"                        + prettyPrint(\"Age\",5) + \" \" + prettyPrint(\"Specialisation\", 20));"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":38}},{"path":"src/test/java/seedu/duke/NurseScheduleInstanceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"class NurseScheduleInstanceTest {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":11,"AlexanderTanJunAn":1}}]
