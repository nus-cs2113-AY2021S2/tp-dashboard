[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Configure Intellij for JDK 11**, as described [here](https://se-education.org/guides/tutorials/intellijJdk.html)."},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html)."},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/drugsDuke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   \u003e Task :classes"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   "},{"lineNumber":18,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":21,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   "},{"lineNumber":26,"author":{"gitId":"-"},"content":"   What is your name?"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end."},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Build automation using Gradle"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file)."},{"lineNumber":33,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html)."},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Testing"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"### I/O redirection tests"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script."},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"### JUnit tests"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. "},{"lineNumber":44,"author":{"gitId":"NoorSarrah"},"content":"* A skeleton JUnit test (`src/test/java/seedu/drugsDuke/DukeTest.java`) is provided with this project template. "},{"lineNumber":45,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html)."},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"## Checkstyle"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project."},{"lineNumber":50,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html)."},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"## CI using GitHub Actions"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR."},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Documentation"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation."},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: "},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub."},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab."},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section."},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`."},{"lineNumber":66,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation."}],"authorContributionMap":{"NoorSarrah":2,"-":64}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":"jar {"},{"lineNumber":8,"author":{"gitId":"MingShun98"},"content":"    manifest {"},{"lineNumber":9,"author":{"gitId":"MingShun98"},"content":"        attributes("},{"lineNumber":10,"author":{"gitId":"MingShun98"},"content":"                \u0027Main-Class\u0027: \u0027seedu.duke.Duke\u0027"},{"lineNumber":11,"author":{"gitId":"MingShun98"},"content":"        )"},{"lineNumber":12,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"MingShun98"},"content":"}"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"}"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"MingShun98":7,"-":46}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio "},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Owen | [Github](https://github.com/blank-bank) | [Portfolio](docs/team/johndoe.md)"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Chiam Jia-En | [Github](https://github.com/Chiamjiaen/tp) | [Portfolio](docs/team/chiamjiaen.md)"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Joe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ron John | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | John Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Alexander Tan | [Github](https://github.com/AlexanderTanJunAn) | [Portfolio](docs/team/johndoe.md)"}],"authorContributionMap":{"Chiamjiaen":1,"-":7,"AlexanderTanJunAn":1,"blank-bank":1}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"{Give a product intro}"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Quick Start"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"{Give steps to get started quickly}"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed."},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":"1. Down the latest version of `Duke` from [here](http://link.to/drugsDuke)."},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"{Give detailed description of each feature}"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Adding a todo: `todo`"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Adds a new item to the list of todo items."},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"Format: `todo n/TODO_NAME d/DEADLINE`"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"* The `DEADLINE` can be in a natural language format."},{"lineNumber":24,"author":{"gitId":"-"},"content":"* The `TODO_NAME` cannot contain punctuation.  "},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"`todo n/Write the rest of the User Guide d/next week`"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"`todo n/Refactor the User Guide to remove passive voice d/13/04/2020`"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"## FAQ"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? "},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"**A**: {your answer here}"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Command Summary"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"{Give a \u0027cheat sheet\u0027 of commands here}"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Add todo `todo n/TODO_NAME d/DEADLINE`"}],"authorContributionMap":{"NoorSarrah":1,"-":41}},{"path":"docs/team/chiamjiaen.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"# Chiam Jia-En - Project Portfolio Page"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"## Overview"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"huh"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"### Summary of Contributions"}],"authorContributionMap":{"Chiamjiaen":6}},{"path":"src/main/java/seedu/doctorappointments/AppointmentActions.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.doctorappointments;"},{"lineNumber":2,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":3,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":4,"author":{"gitId":"MingShun98"},"content":"import seedu.duke.exceptions.EmptyListException;"},{"lineNumber":5,"author":{"gitId":"MingShun98"},"content":"import seedu.duke.storage.DoctorAppointmentStorage;"},{"lineNumber":6,"author":{"gitId":"MingShun98"},"content":"import seedu.duke.ui.UI;"},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":8,"author":{"gitId":"MingShun98"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"MingShun98"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":11,"author":{"gitId":"MingShun98"},"content":"public class AppointmentActions {"},{"lineNumber":12,"author":{"gitId":"MingShun98"},"content":"    public static ArrayList\u003cDoctorAppointment\u003e appointmentList;"},{"lineNumber":13,"author":{"gitId":"MingShun98"},"content":"    protected static DoctorAppointmentStorage storage \u003d new DoctorAppointmentStorage(\"data/DoctorAppointmentList.txt\");"},{"lineNumber":14,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":15,"author":{"gitId":"MingShun98"},"content":"    public AppointmentActions(ArrayList\u003cDoctorAppointment\u003e loadAppointments) {"},{"lineNumber":16,"author":{"gitId":"MingShun98"},"content":"        appointmentList \u003d loadAppointments;"},{"lineNumber":17,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":19,"author":{"gitId":"MingShun98"},"content":"    public static void addAppointment(String input) throws IOException {"},{"lineNumber":20,"author":{"gitId":"MingShun98"},"content":"        String[] inputArray \u003d input.split(\" \");"},{"lineNumber":21,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":22,"author":{"gitId":"MingShun98"},"content":"        String iD \u003d inputArray[1];"},{"lineNumber":23,"author":{"gitId":"MingShun98"},"content":"        String patientName \u003d inputArray[2];"},{"lineNumber":24,"author":{"gitId":"MingShun98"},"content":"        String gender \u003d inputArray[3];"},{"lineNumber":25,"author":{"gitId":"MingShun98"},"content":"        String date \u003d inputArray[4];"},{"lineNumber":26,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":27,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":28,"author":{"gitId":"MingShun98"},"content":"        DoctorAppointment newAppointment \u003d new DoctorAppointment(iD, patientName, gender, date);"},{"lineNumber":29,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":30,"author":{"gitId":"MingShun98"},"content":"        System.out.println(\"Appointment Added\");"},{"lineNumber":31,"author":{"gitId":"MingShun98"},"content":"        appointmentList.add(newAppointment);"},{"lineNumber":32,"author":{"gitId":"MingShun98"},"content":"        storage.writeToFile(appointmentList);"},{"lineNumber":33,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":35,"author":{"gitId":"MingShun98"},"content":"    public static void listAppointment(String input) throws Exception {"},{"lineNumber":36,"author":{"gitId":"MingShun98"},"content":"        String[] inputArray \u003d input.split(\" \");"},{"lineNumber":37,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":38,"author":{"gitId":"MingShun98"},"content":"        String iD \u003d inputArray[1];"},{"lineNumber":39,"author":{"gitId":"MingShun98"},"content":"        if (appointmentList.size() \u003d\u003d 0) throw new EmptyListException();"},{"lineNumber":40,"author":{"gitId":"MingShun98"},"content":"        else {"},{"lineNumber":41,"author":{"gitId":"MingShun98"},"content":"            for (DoctorAppointment doc : appointmentList) {"},{"lineNumber":42,"author":{"gitId":"MingShun98"},"content":"                if (doc.getDoctorId().equals(iD)) {"},{"lineNumber":43,"author":{"gitId":"MingShun98"},"content":"                    System.out.println(\"ID: \" + doc.getDoctorId());"},{"lineNumber":44,"author":{"gitId":"MingShun98"},"content":"                    System.out.println(\"Patient\u0027s Name: \" + doc.getPatientsName());"},{"lineNumber":45,"author":{"gitId":"MingShun98"},"content":"                    System.out.println(\"Gender: \" + doc.getGender());"},{"lineNumber":46,"author":{"gitId":"MingShun98"},"content":"                    System.out.println(\"Date: \" + doc.getDateFormat(doc.getDate()));"},{"lineNumber":47,"author":{"gitId":"MingShun98"},"content":"                }"},{"lineNumber":48,"author":{"gitId":"MingShun98"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"MingShun98"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":52,"author":{"gitId":"MingShun98"},"content":"    public static void deleteAppointment(String input) throws IOException {"},{"lineNumber":53,"author":{"gitId":"MingShun98"},"content":"        String[] inputArray \u003d input.split(\" \");"},{"lineNumber":54,"author":{"gitId":"MingShun98"},"content":"        String iD \u003d inputArray[1];"},{"lineNumber":55,"author":{"gitId":"MingShun98"},"content":"        int index \u003d 999;"},{"lineNumber":56,"author":{"gitId":"MingShun98"},"content":"        int counter \u003d 0;"},{"lineNumber":57,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":58,"author":{"gitId":"MingShun98"},"content":"        for (DoctorAppointment doc : appointmentList) {"},{"lineNumber":59,"author":{"gitId":"MingShun98"},"content":"            if (doc.getDoctorId().equals(iD)) {"},{"lineNumber":60,"author":{"gitId":"MingShun98"},"content":"                index \u003d counter;"},{"lineNumber":61,"author":{"gitId":"MingShun98"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"MingShun98"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"MingShun98"},"content":"        storage.writeToFile(appointmentList);"},{"lineNumber":64,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":65,"author":{"gitId":"MingShun98"},"content":"        if (index \u003d\u003d 999) System.out.println(\"ID number not found\");"},{"lineNumber":66,"author":{"gitId":"MingShun98"},"content":"        else {"},{"lineNumber":67,"author":{"gitId":"MingShun98"},"content":"            System.out.println(\"iD: \" + appointmentList.get(index).getDoctorId() + \" has been deleted!\");"},{"lineNumber":68,"author":{"gitId":"MingShun98"},"content":"            appointmentList.remove(index);"},{"lineNumber":69,"author":{"gitId":"MingShun98"},"content":"            storage.writeToFile(appointmentList);"},{"lineNumber":70,"author":{"gitId":"MingShun98"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":72,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":74,"author":{"gitId":"MingShun98"},"content":"    public static void helpAppointment() {"},{"lineNumber":75,"author":{"gitId":"MingShun98"},"content":"        UI.doctorAppointmentHelp();"},{"lineNumber":76,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"MingShun98"},"content":"}"}],"authorContributionMap":{"MingShun98":76,"blank-bank":1}},{"path":"src/main/java/seedu/doctorappointments/DoctorAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.doctorappointments;"},{"lineNumber":2,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":3,"author":{"gitId":"MingShun98"},"content":"import java.text.ParseException;"},{"lineNumber":4,"author":{"gitId":"MingShun98"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":5,"author":{"gitId":"MingShun98"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"MingShun98"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"MingShun98"},"content":"import java.util.Date;"},{"lineNumber":9,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":10,"author":{"gitId":"MingShun98"},"content":"public class DoctorAppointment {"},{"lineNumber":11,"author":{"gitId":"MingShun98"},"content":"    protected String doctorId;"},{"lineNumber":12,"author":{"gitId":"MingShun98"},"content":"    protected String patientsName;"},{"lineNumber":13,"author":{"gitId":"MingShun98"},"content":"    protected String gender;"},{"lineNumber":14,"author":{"gitId":"MingShun98"},"content":"    protected String date;"},{"lineNumber":15,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":16,"author":{"gitId":"MingShun98"},"content":"    public DoctorAppointment(String doctorId, String name, String gender, String date) {"},{"lineNumber":17,"author":{"gitId":"MingShun98"},"content":"        this.doctorId \u003d doctorId;"},{"lineNumber":18,"author":{"gitId":"MingShun98"},"content":"        this.patientsName \u003d name;"},{"lineNumber":19,"author":{"gitId":"MingShun98"},"content":"        this.gender \u003d gender;"},{"lineNumber":20,"author":{"gitId":"MingShun98"},"content":"        this.date \u003d date;"},{"lineNumber":21,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":23,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":24,"author":{"gitId":"MingShun98"},"content":"    public String getDoctorId() {"},{"lineNumber":25,"author":{"gitId":"MingShun98"},"content":"        return this.doctorId;"},{"lineNumber":26,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":28,"author":{"gitId":"MingShun98"},"content":"    public String getPatientsName() {"},{"lineNumber":29,"author":{"gitId":"MingShun98"},"content":"        return this.patientsName;"},{"lineNumber":30,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":32,"author":{"gitId":"MingShun98"},"content":"    public String getGender() {"},{"lineNumber":33,"author":{"gitId":"MingShun98"},"content":"        return this.gender;"},{"lineNumber":34,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":36,"author":{"gitId":"MingShun98"},"content":"    public String getDate() {"},{"lineNumber":37,"author":{"gitId":"MingShun98"},"content":"        return this.date;"},{"lineNumber":38,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":40,"author":{"gitId":"MingShun98"},"content":"    /*"},{"lineNumber":41,"author":{"gitId":"MingShun98"},"content":"        Date format \u003d YYYY-MM-DD"},{"lineNumber":42,"author":{"gitId":"MingShun98"},"content":"    */"},{"lineNumber":43,"author":{"gitId":"MingShun98"},"content":"    public String getDateFormat(String inputDate) throws ParseException {"},{"lineNumber":44,"author":{"gitId":"MingShun98"},"content":"        SimpleDateFormat parser \u003d new SimpleDateFormat(\"ddMMyyyy\");"},{"lineNumber":45,"author":{"gitId":"MingShun98"},"content":"        Date date \u003d parser.parse(inputDate);"},{"lineNumber":46,"author":{"gitId":"MingShun98"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyy\");"},{"lineNumber":47,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":48,"author":{"gitId":"MingShun98"},"content":"        return formatter.format(date);"},{"lineNumber":49,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":51,"author":{"gitId":"MingShun98"},"content":"    public String saveTask() {"},{"lineNumber":52,"author":{"gitId":"MingShun98"},"content":"        return doctorId + \" | \" + patientsName + \" | \" + gender + \" | \" + date;"},{"lineNumber":53,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":55,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":56,"author":{"gitId":"MingShun98"},"content":"}"}],"authorContributionMap":{"MingShun98":55,"blank-bank":1}},{"path":"src/main/java/seedu/doctorappointments/DoctorAppointmentInstance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.doctorappointments;"},{"lineNumber":2,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":3,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":4,"author":{"gitId":"MingShun98"},"content":"import seedu.duke.storage.DoctorAppointmentStorage;"},{"lineNumber":5,"author":{"gitId":"MingShun98"},"content":"import seedu.duke.ui.UI;"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":8,"author":{"gitId":"MingShun98"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"MingShun98"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":11,"author":{"gitId":"MingShun98"},"content":"public class DoctorAppointmentInstance {"},{"lineNumber":12,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":13,"author":{"gitId":"MingShun98"},"content":"    private UI ui;"},{"lineNumber":14,"author":{"gitId":"MingShun98"},"content":"    private AppointmentActions details;"},{"lineNumber":15,"author":{"gitId":"MingShun98"},"content":"    private DoctorAppointmentStorage doctorAppointmentStorage;"},{"lineNumber":16,"author":{"gitId":"MingShun98"},"content":"    static final String PATIENT_FILE_PATH \u003d \"data/DoctorAppointmentList.txt\";"},{"lineNumber":17,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":18,"author":{"gitId":"MingShun98"},"content":"    public DoctorAppointmentInstance(String filepath) {"},{"lineNumber":19,"author":{"gitId":"MingShun98"},"content":"        ui \u003d new UI();"},{"lineNumber":20,"author":{"gitId":"MingShun98"},"content":"        doctorAppointmentStorage \u003d new DoctorAppointmentStorage(PATIENT_FILE_PATH);"},{"lineNumber":21,"author":{"gitId":"MingShun98"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"MingShun98"},"content":"            details \u003d doctorAppointmentStorage.loadFile();"},{"lineNumber":23,"author":{"gitId":"MingShun98"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":24,"author":{"gitId":"MingShun98"},"content":"            try {"},{"lineNumber":25,"author":{"gitId":"MingShun98"},"content":"                doctorAppointmentStorage.createFile();"},{"lineNumber":26,"author":{"gitId":"MingShun98"},"content":"                details \u003d doctorAppointmentStorage.loadFile();"},{"lineNumber":27,"author":{"gitId":"MingShun98"},"content":"            } catch (IOException e1) {"},{"lineNumber":28,"author":{"gitId":"MingShun98"},"content":"                System.out.println(\"File cannot be created\");"},{"lineNumber":29,"author":{"gitId":"MingShun98"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"MingShun98"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":33,"author":{"gitId":"MingShun98"},"content":"    public void run() {"},{"lineNumber":34,"author":{"gitId":"MingShun98"},"content":"        UI.doctorAppointmentsWelcome();"},{"lineNumber":35,"author":{"gitId":"MingShun98"},"content":"        UI.showLine();"},{"lineNumber":36,"author":{"gitId":"MingShun98"},"content":"        boolean isReturnToStartMenu \u003d false;"},{"lineNumber":37,"author":{"gitId":"MingShun98"},"content":"        Scanner userInput \u003d new Scanner(System.in);"},{"lineNumber":38,"author":{"gitId":"MingShun98"},"content":"        while (!isReturnToStartMenu) {"},{"lineNumber":39,"author":{"gitId":"MingShun98"},"content":"            try {"},{"lineNumber":40,"author":{"gitId":"MingShun98"},"content":"                System.out.print(\"Appointments --\u003e \");"},{"lineNumber":41,"author":{"gitId":"MingShun98"},"content":"                String input \u003d userInput.nextLine();"},{"lineNumber":42,"author":{"gitId":"MingShun98"},"content":"                ui.showLine(); // show the divider line (\"_______\")"},{"lineNumber":43,"author":{"gitId":"MingShun98"},"content":"                isReturnToStartMenu \u003d Parser.parse(input);"},{"lineNumber":44,"author":{"gitId":"MingShun98"},"content":"                if (isReturnToStartMenu) {"},{"lineNumber":45,"author":{"gitId":"MingShun98"},"content":"                    ui.returningToStartMenuMessage();"},{"lineNumber":46,"author":{"gitId":"MingShun98"},"content":"                }"},{"lineNumber":47,"author":{"gitId":"MingShun98"},"content":"                ui.showLine();"},{"lineNumber":48,"author":{"gitId":"MingShun98"},"content":"            } catch (NullPointerException e) {"},{"lineNumber":49,"author":{"gitId":"MingShun98"},"content":"                //Command C can return as null if an error is triggered in parser"},{"lineNumber":50,"author":{"gitId":"MingShun98"},"content":"                //Null Pointer Exception may hence occur, the catch statement is to ensure it does not exit the loop."},{"lineNumber":51,"author":{"gitId":"MingShun98"},"content":"            } catch (Exception e) {"},{"lineNumber":52,"author":{"gitId":"MingShun98"},"content":"                System.out.println(\"OOPS something went wrong :0\");"},{"lineNumber":53,"author":{"gitId":"MingShun98"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"MingShun98"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"MingShun98"},"content":"}"}],"authorContributionMap":{"MingShun98":54,"AlexanderTanJunAn":1,"blank-bank":1}},{"path":"src/main/java/seedu/doctorappointments/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MingShun98"},"content":"package seedu.doctorappointments;"},{"lineNumber":2,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":3,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":4,"author":{"gitId":"MingShun98"},"content":"public class Parser {"},{"lineNumber":5,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":6,"author":{"gitId":"MingShun98"},"content":"    public static boolean parse(String input) throws Exception {"},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":"        String[] inputArray \u003d input.split(\" \");"},{"lineNumber":8,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":9,"author":{"gitId":"MingShun98"},"content":"        switch (inputArray[0]) {"},{"lineNumber":10,"author":{"gitId":"MingShun98"},"content":"        case \"add\":"},{"lineNumber":11,"author":{"gitId":"MingShun98"},"content":"            AppointmentActions.addAppointment(input);"},{"lineNumber":12,"author":{"gitId":"MingShun98"},"content":"            break;"},{"lineNumber":13,"author":{"gitId":"MingShun98"},"content":"        case \"list\":"},{"lineNumber":14,"author":{"gitId":"MingShun98"},"content":"            AppointmentActions.listAppointment(input);"},{"lineNumber":15,"author":{"gitId":"MingShun98"},"content":"            break;"},{"lineNumber":16,"author":{"gitId":"MingShun98"},"content":"        case \"delete\":"},{"lineNumber":17,"author":{"gitId":"MingShun98"},"content":"            AppointmentActions.deleteAppointment(input);"},{"lineNumber":18,"author":{"gitId":"MingShun98"},"content":"            break;"},{"lineNumber":19,"author":{"gitId":"MingShun98"},"content":"        case \"return\":"},{"lineNumber":20,"author":{"gitId":"MingShun98"},"content":"            return true;"},{"lineNumber":21,"author":{"gitId":"MingShun98"},"content":"        case \"help\":"},{"lineNumber":22,"author":{"gitId":"MingShun98"},"content":"            AppointmentActions.helpAppointment();"},{"lineNumber":23,"author":{"gitId":"MingShun98"},"content":"            break;"},{"lineNumber":24,"author":{"gitId":"MingShun98"},"content":"        default:"},{"lineNumber":25,"author":{"gitId":"MingShun98"},"content":"            System.out.println(\"Sorry, I don\u0027t know what that means :(\");"},{"lineNumber":26,"author":{"gitId":"MingShun98"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"MingShun98"},"content":"        return false;"},{"lineNumber":28,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"MingShun98"},"content":"}"}],"authorContributionMap":{"MingShun98":29}},{"path":"src/main/java/seedu/drugs/Drug.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.drugs;"},{"lineNumber":2,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":3,"author":{"gitId":"NoorSarrah"},"content":"public class Drug {"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":"    protected String name;"},{"lineNumber":5,"author":{"gitId":"NoorSarrah"},"content":"    protected String price;"},{"lineNumber":6,"author":{"gitId":"NoorSarrah"},"content":"    protected String quantity;"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":8,"author":{"gitId":"NoorSarrah"},"content":"    public Drug(String name, String price, String quantity) {"},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":"        this.name \u003d name;"},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":"        this.price \u003d price;"},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":"        this.quantity \u003d quantity;"},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":13,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":15,"author":{"gitId":"NoorSarrah"},"content":"    public String getName() {"},{"lineNumber":16,"author":{"gitId":"NoorSarrah"},"content":"        return this.name;"},{"lineNumber":17,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":19,"author":{"gitId":"NoorSarrah"},"content":"    public String getPrice() {"},{"lineNumber":20,"author":{"gitId":"NoorSarrah"},"content":"        return this.price;"},{"lineNumber":21,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":23,"author":{"gitId":"NoorSarrah"},"content":"    public String getQuantity() {"},{"lineNumber":24,"author":{"gitId":"NoorSarrah"},"content":"        return this.quantity;"},{"lineNumber":25,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":27,"author":{"gitId":"NoorSarrah"},"content":"    public String stringToSave() {"},{"lineNumber":28,"author":{"gitId":"NoorSarrah"},"content":"        return getName() + \" | \" + getPrice() + \" | \" + getQuantity();"},{"lineNumber":29,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"NoorSarrah"},"content":"}"}],"authorContributionMap":{"NoorSarrah":24,"AlexanderTanJunAn":5,"blank-bank":1}},{"path":"src/main/java/seedu/drugs/DrugAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.drugs;"},{"lineNumber":2,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":3,"author":{"gitId":"NoorSarrah"},"content":"import seedu.duke.Duke;"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":5,"author":{"gitId":"NoorSarrah"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":7,"author":{"gitId":"NoorSarrah"},"content":"public class DrugAction {"},{"lineNumber":8,"author":{"gitId":"NoorSarrah"},"content":"    public ArrayList\u003cDrug\u003e Drugs \u003d new ArrayList\u003c\u003e();"},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":"    public void addDrugs(String description) {"},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":"        try {"},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":"            description \u003d description.substring(4);"},{"lineNumber":13,"author":{"gitId":"NoorSarrah"},"content":"            String[] elements \u003d description.split(\" \");"},{"lineNumber":14,"author":{"gitId":"NoorSarrah"},"content":"            Drugs.add(new Drug(elements[0], elements[1], elements[2]));"},{"lineNumber":15,"author":{"gitId":"NoorSarrah"},"content":"            System.out.println(\"Added \" + elements[elements.length - 1] + \" \" + elements[0] + \" to inventory!\");"},{"lineNumber":16,"author":{"gitId":"NoorSarrah"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":17,"author":{"gitId":"NoorSarrah"},"content":"            System.out.println(\"The description of \u0027add\u0027 cannot be empty\");"},{"lineNumber":18,"author":{"gitId":"NoorSarrah"},"content":"            return;"},{"lineNumber":19,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":22,"author":{"gitId":"NoorSarrah"},"content":"    public void deleteDrugs(String description) {"},{"lineNumber":23,"author":{"gitId":"NoorSarrah"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"NoorSarrah"},"content":"            description \u003d description.substring(7);"},{"lineNumber":25,"author":{"gitId":"NoorSarrah"},"content":"            for (int i \u003d 0; i \u003c Drugs.size(); ++i) {"},{"lineNumber":26,"author":{"gitId":"NoorSarrah"},"content":"                if (Drugs.get(i).getName().contains(description)) {"},{"lineNumber":27,"author":{"gitId":"NoorSarrah"},"content":"                    System.out.println(\"Deleted \" + Drugs.get(i).getName() + \" from inventory!\");"},{"lineNumber":28,"author":{"gitId":"NoorSarrah"},"content":"                    Drugs.remove(Drugs.get(i));"},{"lineNumber":29,"author":{"gitId":"NoorSarrah"},"content":"                    break;"},{"lineNumber":30,"author":{"gitId":"NoorSarrah"},"content":"                }"},{"lineNumber":31,"author":{"gitId":"NoorSarrah"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"NoorSarrah"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":33,"author":{"gitId":"NoorSarrah"},"content":"            System.out.println(\"The description of \u0027delete\u0027 cannot be empty\");"},{"lineNumber":34,"author":{"gitId":"NoorSarrah"},"content":"            return;"},{"lineNumber":35,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":38,"author":{"gitId":"NoorSarrah"},"content":"    public void printHelpMessage() {"},{"lineNumber":39,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"Here is a list of Drug commands: \");"},{"lineNumber":40,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"\\\"help\\\" brings up this list of commands!\");"},{"lineNumber":41,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"\\\"add [Name] [Price] [Quantity]\\\" adds a Drug to the drug list!\");"},{"lineNumber":42,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"\\\"list\\\" brings up the list of all current drugs!\");"},{"lineNumber":43,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"\\\"delete [Name]\\\" deletes the drug with the specific name from the list!\");"},{"lineNumber":44,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"\\\"return\\\" returns you to the Start Menu!\");"},{"lineNumber":45,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":47,"author":{"gitId":"NoorSarrah"},"content":"    public void printList() {"},{"lineNumber":48,"author":{"gitId":"NoorSarrah"},"content":"        if (Drugs.size() !\u003d 0) {"},{"lineNumber":49,"author":{"gitId":"NoorSarrah"},"content":"            System.out.println(\"Current Inventory: \");"},{"lineNumber":50,"author":{"gitId":"NoorSarrah"},"content":"            for (int i \u003d 1; i \u003c\u003d Drugs.size(); ++i) {"},{"lineNumber":51,"author":{"gitId":"NoorSarrah"},"content":"                System.out.println(i + \". \" + Drugs.get(i - 1).getName() + \" \" + Drugs.get(i - 1).getPrice() + \" \" + Drugs.get(i - 1).getQuantity());"},{"lineNumber":52,"author":{"gitId":"NoorSarrah"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"NoorSarrah"},"content":"        } else {"},{"lineNumber":54,"author":{"gitId":"NoorSarrah"},"content":"            System.out.println(\"You do not have any Drugs in your inventory:(\");"},{"lineNumber":55,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":58,"author":{"gitId":"NoorSarrah"},"content":"}"},{"lineNumber":59,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":60,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":61,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":62,"author":{"gitId":"NoorSarrah"},"content":""}],"authorContributionMap":{"NoorSarrah":61,"blank-bank":1}},{"path":"src/main/java/seedu/drugs/DrugInstance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NoorSarrah"},"content":"package seedu.drugs;"},{"lineNumber":2,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":3,"author":{"gitId":"NoorSarrah"},"content":"import seedu.duke.storage.DrugStorage;"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":5,"author":{"gitId":"NoorSarrah"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":6,"author":{"gitId":"NoorSarrah"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":8,"author":{"gitId":"NoorSarrah"},"content":"public class DrugInstance {"},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":"     * Main entry-point for the java.duke.DrugInstance application."},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"NoorSarrah"},"content":"    protected DrugStorage drugStorage;"},{"lineNumber":14,"author":{"gitId":"NoorSarrah"},"content":"    protected DrugAction drugAction;"},{"lineNumber":15,"author":{"gitId":"NoorSarrah"},"content":"    protected ArrayList\u003cDrug\u003e Drugs;"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":17,"author":{"gitId":"NoorSarrah"},"content":"    public DrugInstance(String filePath) {"},{"lineNumber":18,"author":{"gitId":"NoorSarrah"},"content":"        drugStorage \u003d new DrugStorage(filePath);"},{"lineNumber":19,"author":{"gitId":"NoorSarrah"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"NoorSarrah"},"content":"            Drugs \u003d drugStorage.uploadDrugs();"},{"lineNumber":21,"author":{"gitId":"NoorSarrah"},"content":"            drugAction \u003d new DrugAction();"},{"lineNumber":22,"author":{"gitId":"NoorSarrah"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":23,"author":{"gitId":"NoorSarrah"},"content":"            Drugs \u003d drugStorage.createNewFile();"},{"lineNumber":24,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":27,"author":{"gitId":"NoorSarrah"},"content":"    public void run() {"},{"lineNumber":28,"author":{"gitId":"NoorSarrah"},"content":"        Parser parser \u003d new Parser(drugAction);"},{"lineNumber":29,"author":{"gitId":"NoorSarrah"},"content":"        parser.parseMethod();"},{"lineNumber":30,"author":{"gitId":"NoorSarrah"},"content":"        drugStorage.exitProgram();"},{"lineNumber":31,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":33,"author":{"gitId":"NoorSarrah"},"content":"}"}],"authorContributionMap":{"NoorSarrah":32,"AlexanderTanJunAn":1}},{"path":"src/main/java/seedu/drugs/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NoorSarrah"},"content":"package seedu.drugs;"},{"lineNumber":2,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":3,"author":{"gitId":"NoorSarrah"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":5,"author":{"gitId":"NoorSarrah"},"content":"public class Parser {"},{"lineNumber":6,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":7,"author":{"gitId":"NoorSarrah"},"content":"    protected DrugAction drugAction;"},{"lineNumber":8,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":"    public Parser(DrugAction drugAction) {"},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":"        this.drugAction \u003d drugAction;"},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":13,"author":{"gitId":"NoorSarrah"},"content":"    public void parseMethod() {"},{"lineNumber":14,"author":{"gitId":"NoorSarrah"},"content":"        System.out.print(\"Drug --\u003e \");"},{"lineNumber":15,"author":{"gitId":"NoorSarrah"},"content":"        Scanner myObj \u003d new Scanner(System.in);"},{"lineNumber":16,"author":{"gitId":"NoorSarrah"},"content":"        String command \u003d myObj.nextLine();"},{"lineNumber":17,"author":{"gitId":"NoorSarrah"},"content":"        while (!command.equals(\"bye\")) {"},{"lineNumber":18,"author":{"gitId":"NoorSarrah"},"content":"            if (command.equals(\"list\")) {"},{"lineNumber":19,"author":{"gitId":"NoorSarrah"},"content":"                drugAction.printList();"},{"lineNumber":20,"author":{"gitId":"NoorSarrah"},"content":"            } else if (command.contains(\"add\")) {"},{"lineNumber":21,"author":{"gitId":"NoorSarrah"},"content":"                drugAction.addDrugs(command);"},{"lineNumber":22,"author":{"gitId":"NoorSarrah"},"content":"            } else if (command.contains(\"delete\")) {"},{"lineNumber":23,"author":{"gitId":"NoorSarrah"},"content":"                drugAction.deleteDrugs(command);"},{"lineNumber":24,"author":{"gitId":"NoorSarrah"},"content":"            } else if (command.contains(\"help\")) {"},{"lineNumber":25,"author":{"gitId":"NoorSarrah"},"content":"                drugAction.printHelpMessage();"},{"lineNumber":26,"author":{"gitId":"NoorSarrah"},"content":"            } else if (command.contains(\"return\")) {"},{"lineNumber":27,"author":{"gitId":"NoorSarrah"},"content":"                return;"},{"lineNumber":28,"author":{"gitId":"NoorSarrah"},"content":"            } else {"},{"lineNumber":29,"author":{"gitId":"NoorSarrah"},"content":"                System.out.println(\"There is no such action! Please only enter the following: \");"},{"lineNumber":30,"author":{"gitId":"NoorSarrah"},"content":"                System.out.println(\"1) help\\r\\n2) add \u003c...\u003e\\r\\n3) list\\r\\n4) delete \u003c...\u003e\\r\\n5) return\");"},{"lineNumber":31,"author":{"gitId":"NoorSarrah"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"NoorSarrah"},"content":"            command \u003d myObj.nextLine();"},{"lineNumber":33,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"NoorSarrah"},"content":"}"}],"authorContributionMap":{"NoorSarrah":34,"AlexanderTanJunAn":1}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"NoorSarrah"},"content":"import seedu.drugs.DrugInstance;"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.nurseschedules.NurseScheduleInstance;"},{"lineNumber":6,"author":{"gitId":"MingShun98"},"content":"import seedu.doctorappointments.DoctorAppointmentInstance;"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"import seedu.staff.Parser;"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"import seedu.duke.ui.UI;"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"import seedu.patient.PatientCommandInstance;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":15,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":16,"author":{"gitId":"NoorSarrah"},"content":"    static final String PATIENT_FILE_PATH \u003d \"data/PatientList.txt\";"},{"lineNumber":17,"author":{"gitId":"MingShun98"},"content":"    static final String APPOINTMENT_FILE_PATH \u003d \"data/DoctorAppointmentList.txt\";"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"    static final String DRUG_FILE_PATH \u003d \"data/DrugsInventoryList.txt\";"},{"lineNumber":19,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":20,"author":{"gitId":"NoorSarrah"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"NoorSarrah"},"content":"     * Logic for the main loop that processes information"},{"lineNumber":22,"author":{"gitId":"NoorSarrah"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"    public static void run() {"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"        UI.printWelcome();"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"        UI.userNamePrompt();"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"        String Username \u003d UI.scanInput();"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"        UI.printUserName(Username);"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"        UI.printStartMenu();"},{"lineNumber":29,"author":{"gitId":"NoorSarrah"},"content":"        boolean isExit \u003d false;"},{"lineNumber":30,"author":{"gitId":"NoorSarrah"},"content":"        while (!isExit) {"},{"lineNumber":31,"author":{"gitId":"NoorSarrah"},"content":"            try {"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"                UI.startMenuPrompt();"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"                String startMenuCommand \u003d UI.scanInput();"},{"lineNumber":34,"author":{"gitId":"NoorSarrah"},"content":"                String c \u003d startMenuCommand.trim();"},{"lineNumber":35,"author":{"gitId":"NoorSarrah"},"content":"                switch (c) {"},{"lineNumber":36,"author":{"gitId":"NoorSarrah"},"content":"                case \"1\":"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"                    UI.showLine();"},{"lineNumber":38,"author":{"gitId":"NoorSarrah"},"content":"                    Parser.run();"},{"lineNumber":39,"author":{"gitId":"NoorSarrah"},"content":"                    break;"},{"lineNumber":40,"author":{"gitId":"NoorSarrah"},"content":"                case \"2\":"},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":"                    UI.showLine();"},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":"                    System.out.println(\"Patient Instance!\");"},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":"                    PatientCommandInstance patients \u003d new PatientCommandInstance(PATIENT_FILE_PATH);"},{"lineNumber":44,"author":{"gitId":"Chiamjiaen"},"content":"                    patients.run();"},{"lineNumber":45,"author":{"gitId":"NoorSarrah"},"content":"                    break;"},{"lineNumber":46,"author":{"gitId":"NoorSarrah"},"content":"                case \"3\":"},{"lineNumber":47,"author":{"gitId":"Chiamjiaen"},"content":"                    UI.showLine();"},{"lineNumber":48,"author":{"gitId":"NoorSarrah"},"content":"                    System.out.println(\"Doctor\u0027s Appointment Instance!\");"},{"lineNumber":49,"author":{"gitId":"MingShun98"},"content":"                    DoctorAppointmentInstance appointments \u003d new DoctorAppointmentInstance(APPOINTMENT_FILE_PATH);"},{"lineNumber":50,"author":{"gitId":"MingShun98"},"content":"                    appointments.run();"},{"lineNumber":51,"author":{"gitId":"NoorSarrah"},"content":"                    break;"},{"lineNumber":52,"author":{"gitId":"NoorSarrah"},"content":"                case \"4\":"},{"lineNumber":53,"author":{"gitId":"Chiamjiaen"},"content":"                    UI.showLine();"},{"lineNumber":54,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    NurseScheduleInstance.main();"},{"lineNumber":55,"author":{"gitId":"NoorSarrah"},"content":"                    break;"},{"lineNumber":56,"author":{"gitId":"NoorSarrah"},"content":"                case \"5\":"},{"lineNumber":57,"author":{"gitId":"Chiamjiaen"},"content":"                    UI.showLine();"},{"lineNumber":58,"author":{"gitId":"NoorSarrah"},"content":"                    System.out.println(\"Drug Viewer Instance!\");"},{"lineNumber":59,"author":{"gitId":"Chiamjiaen"},"content":"                    DrugInstance addict \u003d new DrugInstance(DRUG_FILE_PATH);"},{"lineNumber":60,"author":{"gitId":"NoorSarrah"},"content":"                    addict.run();"},{"lineNumber":61,"author":{"gitId":"NoorSarrah"},"content":"                    break;"},{"lineNumber":62,"author":{"gitId":"NoorSarrah"},"content":"                case \"help\":"},{"lineNumber":63,"author":{"gitId":"Chiamjiaen"},"content":"                    UI.showLine();"},{"lineNumber":64,"author":{"gitId":"NoorSarrah"},"content":"                    System.out.println(\"Here is the list of Start Menu commands!\");"},{"lineNumber":65,"author":{"gitId":"blank-bank"},"content":"                    UI.printStartMenu();"},{"lineNumber":66,"author":{"gitId":"NoorSarrah"},"content":"                    break;"},{"lineNumber":67,"author":{"gitId":"NoorSarrah"},"content":"                case \"bye\":"},{"lineNumber":68,"author":{"gitId":"Chiamjiaen"},"content":"                    UI.showLine();"},{"lineNumber":69,"author":{"gitId":"NoorSarrah"},"content":"                    isExit \u003d true;"},{"lineNumber":70,"author":{"gitId":"blank-bank"},"content":"                    UI.printGoodbye();"},{"lineNumber":71,"author":{"gitId":"NoorSarrah"},"content":"                    break;"},{"lineNumber":72,"author":{"gitId":"NoorSarrah"},"content":"                default:"},{"lineNumber":73,"author":{"gitId":"Chiamjiaen"},"content":"                    UI.showLine();"},{"lineNumber":74,"author":{"gitId":"NoorSarrah"},"content":"                    System.out.println(\"OOPS! That is not a registered command! Please type \\\"help\\\" to see the list of commands\");"},{"lineNumber":75,"author":{"gitId":"Chiamjiaen"},"content":"                    UI.showLine();"},{"lineNumber":76,"author":{"gitId":"NoorSarrah"},"content":"                    break;"},{"lineNumber":77,"author":{"gitId":"NoorSarrah"},"content":"                }"},{"lineNumber":78,"author":{"gitId":"NoorSarrah"},"content":"            } catch (NullPointerException | IOException e) {"},{"lineNumber":79,"author":{"gitId":"NoorSarrah"},"content":"                //Command C can return as null if an error is triggered in parser"},{"lineNumber":80,"author":{"gitId":"NoorSarrah"},"content":"                //Null Pointer Exception may hence occur, the catch statement is to ensure it does not exit the loop."},{"lineNumber":81,"author":{"gitId":"NoorSarrah"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"NoorSarrah"},"content":"     * Calls for the running of a new Duke instance"},{"lineNumber":87,"author":{"gitId":"NoorSarrah"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"NoorSarrah"},"content":"     * @param args Runtime arguments are unused"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":91,"author":{"gitId":"blank-bank"},"content":"        Duke.run();"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"NoorSarrah":48,"MingShun98":4,"Chiamjiaen":15,"-":9,"AlexanderTanJunAn":4,"blank-bank":13}},{"path":"src/main/java/seedu/duke/exceptions/DukeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"    protected String error;"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"     * Instantiates this exception"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"     * @param error error type"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"    public DukeException(String error) {"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"        this.error \u003d error;"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"    public DukeException() {"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"     * Shows the error encountered by the user"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"     * @param input error type"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"    public void getError(String input) {"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"        switch (error) {"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"        case \"loadFile\":"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"OOPS! The file format is wrong! It may have been corrupted! \\n\" +"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Please delete the file \\\"data/PatientList.txt\\\" so we can make a new file for you! \");"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"            break;"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"        case \"add\":"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"OOPS! You have inputted the wrong number of parameters! \\n\" +"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"                    \"There should not be any space in the name! \\n\" +"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"                    \"There should only be 7 inputted terms including \\\"add\\\" \\n\" +"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Please type \\\"help\\\" to see the right command format!\");"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"            break;"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"        case \"find\":"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"OOPS! You have inputted the wrong number of parameters! \\n\" +"},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"                    \"There should only be 2 inputted terms including \\\"find\\\" \\n\" +"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Please type \\\"help\\\" to see the right command format!\");"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":"            break;"},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":"        case \"delete\":"},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"OOPS! You have inputted the wrong number of parameters! \\n\" +"},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":"                    \"There should only be 2 inputted terms including \\\"delete\\\" \\n\" +"},{"lineNumber":44,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Please type \\\"help\\\" to see the right command format!\");"},{"lineNumber":45,"author":{"gitId":"Chiamjiaen"},"content":"            break;"},{"lineNumber":46,"author":{"gitId":"Chiamjiaen"},"content":"        case \"return\":"},{"lineNumber":47,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"OOPS! You have inputted the wrong number of parameters! \\n\" +"},{"lineNumber":48,"author":{"gitId":"Chiamjiaen"},"content":"                    \"There should only be 1 inputted term which is \\\"return\\\" \\n\" +"},{"lineNumber":49,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Please type \\\"help\\\" to see the right command format!\");"},{"lineNumber":50,"author":{"gitId":"Chiamjiaen"},"content":"            break;"},{"lineNumber":51,"author":{"gitId":"Chiamjiaen"},"content":"        case \"help\":"},{"lineNumber":52,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"OOPS! You have inputted the wrong number of parameters! \\n\" +"},{"lineNumber":53,"author":{"gitId":"Chiamjiaen"},"content":"                    \"There should only be 1 inputted term which is \\\"help\\\"\");"},{"lineNumber":54,"author":{"gitId":"Chiamjiaen"},"content":"            break;"},{"lineNumber":55,"author":{"gitId":"Chiamjiaen"},"content":"        case \"list\":"},{"lineNumber":56,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"OOPS! You have inputted the wrong number of parameters! \\n\" +"},{"lineNumber":57,"author":{"gitId":"Chiamjiaen"},"content":"                    \"There should only be 1 inputted term which is \\\"list\\\" \\n\" +"},{"lineNumber":58,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Please type \\\"help\\\" to see the right command format!\");"},{"lineNumber":59,"author":{"gitId":"Chiamjiaen"},"content":"            break;"},{"lineNumber":60,"author":{"gitId":"Chiamjiaen"},"content":"        case \"IDLength\":"},{"lineNumber":61,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"OOPS! Looks like your ID length is incorrect! \\n\" +"},{"lineNumber":62,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Please ensure that the ID has 6 characters!\");"},{"lineNumber":63,"author":{"gitId":"Chiamjiaen"},"content":"            break;"},{"lineNumber":64,"author":{"gitId":"Chiamjiaen"},"content":"        case \"IDType\":"},{"lineNumber":65,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"OOPS! Looks like your ID type is incorrect! \\n\" +"},{"lineNumber":66,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Please ensure that the ID starts with \\\"P\\\"!\");"},{"lineNumber":67,"author":{"gitId":"Chiamjiaen"},"content":"            break;"},{"lineNumber":68,"author":{"gitId":"Chiamjiaen"},"content":"        case \"IDValue\":"},{"lineNumber":69,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"OOPS! Looks like your ID value is incorrect! \\n\" +"},{"lineNumber":70,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Please ensure that the ID includes 5 numbers after \\\"P\\\"! \\n\" +"},{"lineNumber":71,"author":{"gitId":"Chiamjiaen"},"content":"                    \"eg. P12345 or P67891\");"},{"lineNumber":72,"author":{"gitId":"Chiamjiaen"},"content":"            break;"},{"lineNumber":73,"author":{"gitId":"Chiamjiaen"},"content":"        case \"IDTaken\":"},{"lineNumber":74,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"OOPS! Looks like the ID has been taken! \\n\" +"},{"lineNumber":75,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Try a different ID! You can use the \\\"list\\\" command to see which IDs have been taken!\");"},{"lineNumber":76,"author":{"gitId":"Chiamjiaen"},"content":"            break;"},{"lineNumber":77,"author":{"gitId":"Chiamjiaen"},"content":"        case \"IDDoesNotExist\":"},{"lineNumber":78,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"OOPS! Looks like the ID does not exist! \\n\" +"},{"lineNumber":79,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Check that you have inputted the right ID! \\n\" +"},{"lineNumber":80,"author":{"gitId":"Chiamjiaen"},"content":"                    \"You can use the \\\"list\\\" command to see which IDs exist!\");"},{"lineNumber":81,"author":{"gitId":"Chiamjiaen"},"content":"            break;"},{"lineNumber":82,"author":{"gitId":"Chiamjiaen"},"content":"        default:"},{"lineNumber":83,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"OOPS! Your command may not be valid! \\n\" +"},{"lineNumber":84,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Please check the list of available commands using \\\"help\\\"\");"},{"lineNumber":85,"author":{"gitId":"Chiamjiaen"},"content":"            break;"},{"lineNumber":86,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":87,"blank-bank":1}},{"path":"src/main/java/seedu/duke/exceptions/EmptyListException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MingShun98"},"content":"package seedu.duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":3,"author":{"gitId":"MingShun98"},"content":"public class EmptyListException extends Exception {"},{"lineNumber":4,"author":{"gitId":"MingShun98"},"content":"    public String getMessage() {"},{"lineNumber":5,"author":{"gitId":"MingShun98"},"content":"        return \"OOPS!!! The list is empty!\";"},{"lineNumber":6,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":"}"}],"authorContributionMap":{"MingShun98":7}},{"path":"src/main/java/seedu/duke/exceptions/NoInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class NoInputException extends Exception {"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":4}},{"path":"src/main/java/seedu/duke/exceptions/WrongListInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class WrongListInputException extends Exception {"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":4}},{"path":"src/main/java/seedu/duke/exceptions/WrongStaffIdException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class WrongStaffIdException extends Exception {"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":4}},{"path":"src/main/java/seedu/duke/exceptions/patient/duplicateIDException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.duke.exceptions.patient;"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"public class duplicateIDException extends DukeException {"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"    public duplicateIDException(String error) {"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"        this.error \u003d error;"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"    public void getError(String input) {"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"        super.getError(input);"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":15}},{"path":"src/main/java/seedu/duke/exceptions/patient/invalidIDLengthException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.duke.exceptions.patient;"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"public class invalidIDLengthException extends DukeException {"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"    public invalidIDLengthException(String error) {"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"        this.error \u003d error;"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"    public void getError(String input) {"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"        super.getError(input);"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":15}},{"path":"src/main/java/seedu/duke/exceptions/patient/invalidIDTypeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.duke.exceptions.patient;"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"public class invalidIDTypeException extends DukeException {"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"    public invalidIDTypeException(String error) {"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"        this.error \u003d error;"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"    public void getError(String input) {"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"        super.getError(input);"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":15}},{"path":"src/main/java/seedu/duke/exceptions/patient/invalidIDValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.duke.exceptions.patient;"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"public class invalidIDValueException extends DukeException {"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"    public invalidIDValueException(String error) {"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"        this.error \u003d error;"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"    public void getError(String input) {"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"        super.getError(input);"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":14}},{"path":"src/main/java/seedu/duke/exceptions/patient/nonexistentIDException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.duke.exceptions.patient;"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"public class nonexistentIDException extends DukeException {"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"    public nonexistentIDException(String error) {"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"        this.error \u003d error;"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"    public void getError(String input) {"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"        super.getError(input);"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":15}},{"path":"src/main/java/seedu/duke/menuparser/MenuParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.duke.menuparser;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import seedu.duke.exceptions.DukeException;"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.duke.exceptions.patient.*;"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import seedu.duke.ui.UI;"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"import seedu.patient.PatientList;"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"public class MenuParser {"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"     * Checks the number of tokens and throws an exception based on the command"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"     * @param numberOfTokens number of tokens in the string"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"     * @param command        interpreted command from the user to be used in error finding"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"     * @throws DukeException exception based on command"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"    public static void lengthCheck(int numberOfTokens, String command) throws DukeException {"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"        if (command.equals(\"add\") \u0026\u0026 numberOfTokens !\u003d 7) {"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"            throw new DukeException(command);"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"        } else if ((command.equals(\"delete\") || command.equals(\"find\")) \u0026\u0026 numberOfTokens !\u003d 2) {"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"            throw new DukeException(command);"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"        } else if ((command.equals(\"list\") || command.equals(\"return\") || command.equals(\"help\")) \u0026\u0026 numberOfTokens !\u003d 1) {"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"            throw new DukeException(command);"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"    private static int numberOfIntegersInString(String userInput) {"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"        int numberOfIntegers \u003d 0;"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"        for (int i \u003d 0; i \u003c userInput.length(); i++) {"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"            if (Character.isDigit(userInput.charAt(i))) {"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"                numberOfIntegers++;"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"        return numberOfIntegers;"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"    private static void isValidID(String userID) throws invalidIDLengthException, invalidIDTypeException, invalidIDValueException {"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"        if (userID.length() !\u003d 6) {"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":"            throw new invalidIDLengthException(\"IDLength\");"},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":"        } else if (!(userID.charAt(0) \u003d\u003d \u0027P\u0027)) {"},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":"            throw new invalidIDTypeException(\"IDType\");"},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":"        } else if (numberOfIntegersInString(userID) !\u003d 5) {"},{"lineNumber":44,"author":{"gitId":"Chiamjiaen"},"content":"            throw new invalidIDValueException(\"IDValue\");"},{"lineNumber":45,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":48,"author":{"gitId":"Chiamjiaen"},"content":"    private static void isIDExist(String userID, PatientList patients, String command) throws nonexistentIDException, duplicateIDException {"},{"lineNumber":49,"author":{"gitId":"Chiamjiaen"},"content":"        if (patients.isIDTaken(userID)) {"},{"lineNumber":50,"author":{"gitId":"Chiamjiaen"},"content":"            if (command.equals(\"add\")) {"},{"lineNumber":51,"author":{"gitId":"Chiamjiaen"},"content":"                throw new duplicateIDException(\"IDTaken\");"},{"lineNumber":52,"author":{"gitId":"Chiamjiaen"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"Chiamjiaen"},"content":"        } else {"},{"lineNumber":54,"author":{"gitId":"Chiamjiaen"},"content":"            if ((command.equals(\"delete\") || command.equals(\"find\"))) {"},{"lineNumber":55,"author":{"gitId":"Chiamjiaen"},"content":"                throw new nonexistentIDException(\"IDDoesNotExist\");"},{"lineNumber":56,"author":{"gitId":"Chiamjiaen"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":60,"author":{"gitId":"Chiamjiaen"},"content":"    public static boolean patientParse(String fullCommand, PatientList patients) {"},{"lineNumber":61,"author":{"gitId":"Chiamjiaen"},"content":"        String[] stringTokens \u003d fullCommand.trim().split(\" \");"},{"lineNumber":62,"author":{"gitId":"Chiamjiaen"},"content":"        int numberOfTokens \u003d stringTokens.length;"},{"lineNumber":63,"author":{"gitId":"Chiamjiaen"},"content":"        String command \u003d stringTokens[0];"},{"lineNumber":64,"author":{"gitId":"Chiamjiaen"},"content":"        try {"},{"lineNumber":65,"author":{"gitId":"Chiamjiaen"},"content":"            switch (command) {"},{"lineNumber":66,"author":{"gitId":"Chiamjiaen"},"content":"            case \"list\":"},{"lineNumber":67,"author":{"gitId":"Chiamjiaen"},"content":"                lengthCheck(numberOfTokens, command);"},{"lineNumber":68,"author":{"gitId":"Chiamjiaen"},"content":"                PatientList.listPatients();"},{"lineNumber":69,"author":{"gitId":"Chiamjiaen"},"content":"                break;"},{"lineNumber":70,"author":{"gitId":"Chiamjiaen"},"content":"            case \"add\":"},{"lineNumber":71,"author":{"gitId":"Chiamjiaen"},"content":"                lengthCheck(numberOfTokens, command);"},{"lineNumber":72,"author":{"gitId":"Chiamjiaen"},"content":"                if (iDParser(patients, stringTokens, command)) {"},{"lineNumber":73,"author":{"gitId":"Chiamjiaen"},"content":"                    PatientList.addPatient(stringTokens[1], stringTokens[2], Integer.parseInt(stringTokens[3]),"},{"lineNumber":74,"author":{"gitId":"Chiamjiaen"},"content":"                            stringTokens[4], stringTokens[5], stringTokens[6]);"},{"lineNumber":75,"author":{"gitId":"Chiamjiaen"},"content":"                }"},{"lineNumber":76,"author":{"gitId":"Chiamjiaen"},"content":"                break;"},{"lineNumber":77,"author":{"gitId":"Chiamjiaen"},"content":"            case \"delete\":"},{"lineNumber":78,"author":{"gitId":"Chiamjiaen"},"content":"                lengthCheck(numberOfTokens, command);"},{"lineNumber":79,"author":{"gitId":"Chiamjiaen"},"content":"                if (iDParser(patients, stringTokens, command)) {"},{"lineNumber":80,"author":{"gitId":"Chiamjiaen"},"content":"                    PatientList.deletePatient(stringTokens[1]);"},{"lineNumber":81,"author":{"gitId":"Chiamjiaen"},"content":"                }"},{"lineNumber":82,"author":{"gitId":"Chiamjiaen"},"content":"                break;"},{"lineNumber":83,"author":{"gitId":"Chiamjiaen"},"content":"            case \"find\":"},{"lineNumber":84,"author":{"gitId":"Chiamjiaen"},"content":"                lengthCheck(numberOfTokens, command);"},{"lineNumber":85,"author":{"gitId":"Chiamjiaen"},"content":"                if (iDParser(patients, stringTokens, command)) {"},{"lineNumber":86,"author":{"gitId":"Chiamjiaen"},"content":"                    PatientList.findPatient(stringTokens[1]);"},{"lineNumber":87,"author":{"gitId":"Chiamjiaen"},"content":"                }"},{"lineNumber":88,"author":{"gitId":"Chiamjiaen"},"content":"                break;"},{"lineNumber":89,"author":{"gitId":"Chiamjiaen"},"content":"            case \"help\":"},{"lineNumber":90,"author":{"gitId":"Chiamjiaen"},"content":"                lengthCheck(numberOfTokens, command);"},{"lineNumber":91,"author":{"gitId":"blank-bank"},"content":"                UI.printPatientHelpList();"},{"lineNumber":92,"author":{"gitId":"Chiamjiaen"},"content":"                break;"},{"lineNumber":93,"author":{"gitId":"Chiamjiaen"},"content":"            case \"return\":"},{"lineNumber":94,"author":{"gitId":"Chiamjiaen"},"content":"                lengthCheck(numberOfTokens, command);"},{"lineNumber":95,"author":{"gitId":"Chiamjiaen"},"content":"                UI.returningToStartMenuMessage();"},{"lineNumber":96,"author":{"gitId":"Chiamjiaen"},"content":"                return true;"},{"lineNumber":97,"author":{"gitId":"Chiamjiaen"},"content":"            default:"},{"lineNumber":98,"author":{"gitId":"blank-bank"},"content":"                UI.unrecognizedCommandMessage();"},{"lineNumber":99,"author":{"gitId":"Chiamjiaen"},"content":"                break;"},{"lineNumber":100,"author":{"gitId":"Chiamjiaen"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":102,"author":{"gitId":"blank-bank"},"content":"            UI.invalidFormatMessage();"},{"lineNumber":103,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (DukeException e) {"},{"lineNumber":104,"author":{"gitId":"Chiamjiaen"},"content":"            e.getError(command);"},{"lineNumber":105,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"Chiamjiaen"},"content":"        return false;"},{"lineNumber":107,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":109,"author":{"gitId":"Chiamjiaen"},"content":"    private static boolean iDParser(PatientList patients, String[] stringTokens, String command) {"},{"lineNumber":110,"author":{"gitId":"Chiamjiaen"},"content":"        try {"},{"lineNumber":111,"author":{"gitId":"Chiamjiaen"},"content":"            isValidID(stringTokens[1]);"},{"lineNumber":112,"author":{"gitId":"Chiamjiaen"},"content":"            isIDExist(stringTokens[1], patients, command);"},{"lineNumber":113,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (invalidIDLengthException e) {"},{"lineNumber":114,"author":{"gitId":"Chiamjiaen"},"content":"            e.getError(\"IDLength\");"},{"lineNumber":115,"author":{"gitId":"Chiamjiaen"},"content":"            return false;"},{"lineNumber":116,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (invalidIDTypeException e) {"},{"lineNumber":117,"author":{"gitId":"Chiamjiaen"},"content":"            e.getError(\"IDType\");"},{"lineNumber":118,"author":{"gitId":"Chiamjiaen"},"content":"            return false;"},{"lineNumber":119,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (invalidIDValueException e) {"},{"lineNumber":120,"author":{"gitId":"Chiamjiaen"},"content":"            e.getError(\"IDValue\");"},{"lineNumber":121,"author":{"gitId":"Chiamjiaen"},"content":"            return false;"},{"lineNumber":122,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (nonexistentIDException e) {"},{"lineNumber":123,"author":{"gitId":"Chiamjiaen"},"content":"            e.getError(\"IDDoesNotExist\");"},{"lineNumber":124,"author":{"gitId":"Chiamjiaen"},"content":"            return false;"},{"lineNumber":125,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (duplicateIDException e) {"},{"lineNumber":126,"author":{"gitId":"Chiamjiaen"},"content":"            e.getError(\"IDTaken\");"},{"lineNumber":127,"author":{"gitId":"Chiamjiaen"},"content":"            return false;"},{"lineNumber":128,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"Chiamjiaen"},"content":"        return true;"},{"lineNumber":130,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":132,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":133,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":123,"blank-bank":10}},{"path":"src/main/java/seedu/duke/storage/DoctorAppointmentStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MingShun98"},"content":"package seedu.duke.storage;"},{"lineNumber":2,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":3,"author":{"gitId":"MingShun98"},"content":"import seedu.doctorappointments.AppointmentActions;"},{"lineNumber":4,"author":{"gitId":"MingShun98"},"content":"import seedu.doctorappointments.DoctorAppointment;"},{"lineNumber":5,"author":{"gitId":"MingShun98"},"content":"import seedu.drugs.Drug;"},{"lineNumber":6,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":"import javax.print.Doc;"},{"lineNumber":8,"author":{"gitId":"MingShun98"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"MingShun98"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":10,"author":{"gitId":"MingShun98"},"content":"import java.io.FileWriter;"},{"lineNumber":11,"author":{"gitId":"MingShun98"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"MingShun98"},"content":"import java.nio.file.Files;"},{"lineNumber":13,"author":{"gitId":"MingShun98"},"content":"import java.nio.file.Path;"},{"lineNumber":14,"author":{"gitId":"MingShun98"},"content":"import java.nio.file.Paths;"},{"lineNumber":15,"author":{"gitId":"MingShun98"},"content":"import java.util.ArrayList;"},{"lineNumber":16,"author":{"gitId":"MingShun98"},"content":"import java.util.Scanner;"},{"lineNumber":17,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":18,"author":{"gitId":"MingShun98"},"content":"public class DoctorAppointmentStorage {"},{"lineNumber":19,"author":{"gitId":"MingShun98"},"content":"    private final String filePath;"},{"lineNumber":20,"author":{"gitId":"MingShun98"},"content":"    private final File file;"},{"lineNumber":21,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":22,"author":{"gitId":"MingShun98"},"content":"    public DoctorAppointmentStorage(String filePath) {"},{"lineNumber":23,"author":{"gitId":"MingShun98"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":24,"author":{"gitId":"MingShun98"},"content":"        this.file \u003d new File(filePath);"},{"lineNumber":25,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":27,"author":{"gitId":"MingShun98"},"content":"    public void createFile() throws IOException {"},{"lineNumber":28,"author":{"gitId":"MingShun98"},"content":"        Path pathToFile \u003d Paths.get(filePath);"},{"lineNumber":29,"author":{"gitId":"MingShun98"},"content":"        Files.createDirectories(pathToFile.getParent());"},{"lineNumber":30,"author":{"gitId":"MingShun98"},"content":"        file.createNewFile();"},{"lineNumber":31,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":33,"author":{"gitId":"MingShun98"},"content":"    public AppointmentActions loadFile() throws FileNotFoundException {"},{"lineNumber":34,"author":{"gitId":"MingShun98"},"content":"        ArrayList\u003cDoctorAppointment\u003e loadAppointments \u003d new ArrayList\u003c\u003e();"},{"lineNumber":35,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":36,"author":{"gitId":"MingShun98"},"content":"        File fileName \u003d new File(filePath);"},{"lineNumber":37,"author":{"gitId":"MingShun98"},"content":"        Scanner fileReader \u003d new Scanner(fileName);"},{"lineNumber":38,"author":{"gitId":"MingShun98"},"content":"        while (fileReader.hasNextLine()) {"},{"lineNumber":39,"author":{"gitId":"MingShun98"},"content":"            String input \u003d fileReader.nextLine();"},{"lineNumber":40,"author":{"gitId":"MingShun98"},"content":"            String[] data \u003d input.split(\"\\\\s\\\\|\\\\s\", 4);"},{"lineNumber":41,"author":{"gitId":"MingShun98"},"content":"            loadAppointments.add(new DoctorAppointment(data[0], data[1], data[2], data[3]));"},{"lineNumber":42,"author":{"gitId":"MingShun98"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"MingShun98"},"content":"        fileReader.close();"},{"lineNumber":44,"author":{"gitId":"MingShun98"},"content":"        return new AppointmentActions(loadAppointments);"},{"lineNumber":45,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":47,"author":{"gitId":"MingShun98"},"content":"    public void writeToFile(ArrayList\u003cDoctorAppointment\u003e taskList) throws IOException {"},{"lineNumber":48,"author":{"gitId":"MingShun98"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath, false);"},{"lineNumber":49,"author":{"gitId":"MingShun98"},"content":"        fileWriter.write(\"\");"},{"lineNumber":50,"author":{"gitId":"MingShun98"},"content":"        for (DoctorAppointment task : taskList) {"},{"lineNumber":51,"author":{"gitId":"MingShun98"},"content":"            fileWriter.write(task.saveTask() + \"\\n\");"},{"lineNumber":52,"author":{"gitId":"MingShun98"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"MingShun98"},"content":"        fileWriter.close();"},{"lineNumber":54,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":56,"author":{"gitId":"MingShun98"},"content":"}"}],"authorContributionMap":{"MingShun98":56}},{"path":"src/main/java/seedu/duke/storage/DrugStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NoorSarrah"},"content":"package seedu.duke.storage;"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":3,"author":{"gitId":"NoorSarrah"},"content":"import seedu.drugs.Drug;"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":5,"author":{"gitId":"NoorSarrah"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"NoorSarrah"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitId":"NoorSarrah"},"content":"import java.io.FileWriter;"},{"lineNumber":8,"author":{"gitId":"NoorSarrah"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":"import java.util.Scanner;"},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":13,"author":{"gitId":"NoorSarrah"},"content":"public class DrugStorage {"},{"lineNumber":14,"author":{"gitId":"NoorSarrah"},"content":"    protected String filepath;"},{"lineNumber":15,"author":{"gitId":"NoorSarrah"},"content":"    protected ArrayList\u003cDrug\u003e Drugs \u003d new ArrayList\u003c\u003e();"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":17,"author":{"gitId":"NoorSarrah"},"content":"    public DrugStorage(String filepath) {"},{"lineNumber":18,"author":{"gitId":"NoorSarrah"},"content":"        this.filepath \u003d filepath;"},{"lineNumber":19,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":21,"author":{"gitId":"NoorSarrah"},"content":"    public ArrayList\u003cDrug\u003e createNewFile() {"},{"lineNumber":22,"author":{"gitId":"NoorSarrah"},"content":"        File drugsFile \u003d new File(getFilepath());"},{"lineNumber":23,"author":{"gitId":"NoorSarrah"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"NoorSarrah"},"content":"            if (drugsFile.createNewFile()) {"},{"lineNumber":25,"author":{"gitId":"NoorSarrah"},"content":"                System.out.println(\"\\tTo save your task locally,\\n\" +"},{"lineNumber":26,"author":{"gitId":"NoorSarrah"},"content":"                        \"\\tA new file has been created at:\\n\\t\" +"},{"lineNumber":27,"author":{"gitId":"NoorSarrah"},"content":"                        drugsFile.getAbsolutePath() + \"\\n\");"},{"lineNumber":28,"author":{"gitId":"NoorSarrah"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"NoorSarrah"},"content":"        } catch (IOException e) {"},{"lineNumber":30,"author":{"gitId":"NoorSarrah"},"content":"            System.out.println(\"\\tThere was an I/O error:\\nBye!\\n\");"},{"lineNumber":31,"author":{"gitId":"NoorSarrah"},"content":"            e.printStackTrace();"},{"lineNumber":32,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"NoorSarrah"},"content":"        return Drugs;"},{"lineNumber":34,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":36,"author":{"gitId":"NoorSarrah"},"content":"    public String getFilepath() {"},{"lineNumber":37,"author":{"gitId":"NoorSarrah"},"content":"        return this.filepath;"},{"lineNumber":38,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":40,"author":{"gitId":"NoorSarrah"},"content":"    public ArrayList\u003cDrug\u003e uploadDrugs() throws FileNotFoundException {"},{"lineNumber":41,"author":{"gitId":"NoorSarrah"},"content":"        File f \u003d new File(getFilepath());"},{"lineNumber":42,"author":{"gitId":"NoorSarrah"},"content":"        Scanner s \u003d new Scanner(f);"},{"lineNumber":43,"author":{"gitId":"NoorSarrah"},"content":"        while (s.hasNext()) {"},{"lineNumber":44,"author":{"gitId":"NoorSarrah"},"content":"            String[] part \u003d s.nextLine().split(\" | \");"},{"lineNumber":45,"author":{"gitId":"NoorSarrah"},"content":"            Drugs.add(new Drug(part[0], part[1], part[2]));"},{"lineNumber":46,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"NoorSarrah"},"content":"        return Drugs;"},{"lineNumber":48,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":50,"author":{"gitId":"NoorSarrah"},"content":"    public void saveDrugs() throws IOException {"},{"lineNumber":51,"author":{"gitId":"NoorSarrah"},"content":"        FileWriter fw \u003d new FileWriter(getFilepath());"},{"lineNumber":52,"author":{"gitId":"NoorSarrah"},"content":"        for (Drug Drug : Drugs) {"},{"lineNumber":53,"author":{"gitId":"NoorSarrah"},"content":"            fw.write(Drug.stringToSave());"},{"lineNumber":54,"author":{"gitId":"NoorSarrah"},"content":"            fw.write(System.lineSeparator());"},{"lineNumber":55,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"NoorSarrah"},"content":"        fw.close();"},{"lineNumber":57,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":59,"author":{"gitId":"NoorSarrah"},"content":"    public void exitProgram() {"},{"lineNumber":60,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"Returning to start menu!\");"},{"lineNumber":61,"author":{"gitId":"NoorSarrah"},"content":"        try {"},{"lineNumber":62,"author":{"gitId":"NoorSarrah"},"content":"            saveDrugs();"},{"lineNumber":63,"author":{"gitId":"NoorSarrah"},"content":"        } catch (IOException e) {"},{"lineNumber":64,"author":{"gitId":"NoorSarrah"},"content":"            System.out.println(\"No file was saved due to an I/O error.\\n\");"},{"lineNumber":65,"author":{"gitId":"NoorSarrah"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"NoorSarrah"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":68,"author":{"gitId":"NoorSarrah"},"content":"}"},{"lineNumber":69,"author":{"gitId":"NoorSarrah"},"content":""},{"lineNumber":70,"author":{"gitId":"NoorSarrah"},"content":""}],"authorContributionMap":{"NoorSarrah":67,"AlexanderTanJunAn":2,"blank-bank":1}},{"path":"src/main/java/seedu/duke/storage/NurseScheduleStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package seedu.duke.storage;"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.nurseschedules.NurseSchedule;"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.io.FileInputStream;"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.io.FileWriter;"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.Scanner;"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class NurseScheduleStorage {"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * Creates new file"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private static void createFile() {"},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":"            File file \u003d new File(\"duke.txt\");"},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":"            if (file.createNewFile()) {"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (IOException e) {"},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"            e.printStackTrace();"},{"lineNumber":24,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private static void readFile(List\u003cNurseSchedule\u003e nurseSchedules) {"},{"lineNumber":28,"author":{"gitId":"AlexanderTanJunAn"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"AlexanderTanJunAn"},"content":"            FileInputStream file \u003d new FileInputStream(\"duke.txt\");"},{"lineNumber":30,"author":{"gitId":"AlexanderTanJunAn"},"content":"            Scanner sc \u003d new Scanner(file);"},{"lineNumber":31,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":32,"author":{"gitId":"AlexanderTanJunAn"},"content":"            while (sc.hasNextLine()) {"},{"lineNumber":33,"author":{"gitId":"AlexanderTanJunAn"},"content":"                String[] details \u003d sc.nextLine().split(\"\\\\|\", 0);"},{"lineNumber":34,"author":{"gitId":"AlexanderTanJunAn"},"content":"                nurseSchedules.add(new NurseSchedule(details[0], details[1], details[2]));"},{"lineNumber":35,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"AlexanderTanJunAn"},"content":"            e.printStackTrace();"},{"lineNumber":38,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":41,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void writeToFile(List\u003cNurseSchedule\u003e nurseSchedules) {"},{"lineNumber":42,"author":{"gitId":"AlexanderTanJunAn"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"AlexanderTanJunAn"},"content":"            File file \u003d new File(\"duke.txt\");"},{"lineNumber":44,"author":{"gitId":"AlexanderTanJunAn"},"content":"            FileWriter writer \u003d new FileWriter(file);"},{"lineNumber":45,"author":{"gitId":"AlexanderTanJunAn"},"content":"            for (NurseSchedule n : nurseSchedules) {"},{"lineNumber":46,"author":{"gitId":"AlexanderTanJunAn"},"content":"                writer.write(n.toSave());"},{"lineNumber":47,"author":{"gitId":"AlexanderTanJunAn"},"content":"                writer.write(\"\\r\\n\");"},{"lineNumber":48,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"AlexanderTanJunAn"},"content":"            writer.close();"},{"lineNumber":50,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (IOException e) {"},{"lineNumber":51,"author":{"gitId":"AlexanderTanJunAn"},"content":"            e.printStackTrace();"},{"lineNumber":52,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":55,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void load(List\u003cNurseSchedule\u003e nurseSchedules) {"},{"lineNumber":56,"author":{"gitId":"AlexanderTanJunAn"},"content":"        createFile();"},{"lineNumber":57,"author":{"gitId":"AlexanderTanJunAn"},"content":"        readFile(nurseSchedules);"},{"lineNumber":58,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":60,"author":{"gitId":"AlexanderTanJunAn"},"content":"}"}],"authorContributionMap":{"AlexanderTanJunAn":60}},{"path":"src/main/java/seedu/duke/storage/PatientStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.duke.storage;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import seedu.duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import seedu.patient.Patient;"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import seedu.patient.PatientList;"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"import java.io.FileWriter;"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"import java.io.File;"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"import java.io.IOException;"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"public class PatientStorage {"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"    static File saveFile;"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"    static ArrayList\u003cPatient\u003e patients \u003d new ArrayList\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"    static String filePath;"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"     * Instantiates a storage handler by taking in the filepath"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"     * @param filePath the filepath where the file will be created"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"    public PatientStorage(String filePath) {"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"        saveFile \u003d new File(filePath);"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"        PatientStorage.filePath \u003d filePath;"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"     * Checks if the file exists and initializes one if there is not."},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"    public void fileInit() {"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"            //makes file directory if it doesnt exist in the system."},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"            if (!(saveFile.exists())) {"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"                saveFile.getParentFile().mkdirs();"},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"                saveFile.createNewFile();"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (IOException e) {"},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"OOPS! I can\u0027t create the directory or file!\");"},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":45,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"Chiamjiaen"},"content":"     * Loads the saved list of patients from save location"},{"lineNumber":47,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"Chiamjiaen"},"content":"     * @return Populated patients arraylist"},{"lineNumber":49,"author":{"gitId":"Chiamjiaen"},"content":"     * @throws DukeException if there is an error in loading"},{"lineNumber":50,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"Chiamjiaen"},"content":"    public ArrayList\u003cPatient\u003e loadPatients() throws DukeException {"},{"lineNumber":52,"author":{"gitId":"Chiamjiaen"},"content":"        fileInit();"},{"lineNumber":53,"author":{"gitId":"Chiamjiaen"},"content":"        try {"},{"lineNumber":54,"author":{"gitId":"Chiamjiaen"},"content":"            // initializing file scanner to scan the file"},{"lineNumber":55,"author":{"gitId":"Chiamjiaen"},"content":"            Scanner fileScanner \u003d new Scanner(saveFile);"},{"lineNumber":56,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":57,"author":{"gitId":"Chiamjiaen"},"content":"            while (fileScanner.hasNext()) {"},{"lineNumber":58,"author":{"gitId":"Chiamjiaen"},"content":"                String currentScan \u003d fileScanner.nextLine();"},{"lineNumber":59,"author":{"gitId":"Chiamjiaen"},"content":"                //splits the string into sections for storing in the ArrayList"},{"lineNumber":60,"author":{"gitId":"Chiamjiaen"},"content":"                String[] taskSave \u003d currentScan.trim().split(\" \\\\| \");"},{"lineNumber":61,"author":{"gitId":"Chiamjiaen"},"content":"                if (taskSave.length !\u003d 6) {"},{"lineNumber":62,"author":{"gitId":"Chiamjiaen"},"content":"                    throw new DukeException(\"loadFile\");"},{"lineNumber":63,"author":{"gitId":"Chiamjiaen"},"content":"                }"},{"lineNumber":64,"author":{"gitId":"Chiamjiaen"},"content":"                Patient tempPatient \u003d new Patient(taskSave[0], taskSave[1], Integer.parseInt(taskSave[2]),"},{"lineNumber":65,"author":{"gitId":"Chiamjiaen"},"content":"                        taskSave[3], taskSave[4], taskSave[5]);"},{"lineNumber":66,"author":{"gitId":"Chiamjiaen"},"content":"                patients.add(tempPatient);"},{"lineNumber":67,"author":{"gitId":"Chiamjiaen"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":69,"author":{"gitId":"Chiamjiaen"},"content":"            throw new DukeException(\"OOPS! I can\u0027t read the save file!\");"},{"lineNumber":70,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (DukeException e) {"},{"lineNumber":71,"author":{"gitId":"Chiamjiaen"},"content":"            e.getError(\"loadFile\");"},{"lineNumber":72,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"Chiamjiaen"},"content":"        return patients;"},{"lineNumber":74,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":76,"author":{"gitId":"Chiamjiaen"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"Chiamjiaen"},"content":"     * Saves all tasks to text file"},{"lineNumber":78,"author":{"gitId":"Chiamjiaen"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"Chiamjiaen"},"content":"     * @param saveInput current files to be stored"},{"lineNumber":80,"author":{"gitId":"Chiamjiaen"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"Chiamjiaen"},"content":"    public void storePatients(PatientList saveInput) {"},{"lineNumber":82,"author":{"gitId":"Chiamjiaen"},"content":"        fileInit();"},{"lineNumber":83,"author":{"gitId":"Chiamjiaen"},"content":"        try {"},{"lineNumber":84,"author":{"gitId":"Chiamjiaen"},"content":"            //creates a new file writer to write to text file"},{"lineNumber":85,"author":{"gitId":"Chiamjiaen"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath);"},{"lineNumber":86,"author":{"gitId":"Chiamjiaen"},"content":"            for (int i \u003d 0; i \u003c saveInput.getSize(); i++) {"},{"lineNumber":87,"author":{"gitId":"Chiamjiaen"},"content":"                fileWriter.write(saveInput.toSaveFile(i) + \"\\n\");"},{"lineNumber":88,"author":{"gitId":"Chiamjiaen"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"Chiamjiaen"},"content":"            fileWriter.close();"},{"lineNumber":90,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (java.io.IOException e) {"},{"lineNumber":91,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"☹ OOPS!!! The file can\u0027t be saved :-(\");"},{"lineNumber":92,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":86,"blank-bank":8}},{"path":"src/main/java/seedu/duke/storage/StaffStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.duke.storage;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import seedu.staff.Staff;"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import seedu.staff.StaffList;"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"import java.io.FileWriter;"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"public class StaffStorage {"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"    private static final String FILE_PATH \u003d \"data/Staff.txt\";"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"    public static void fileHandling() {"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"            loadFile();"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"            createFile();"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"    public static void loadTask(String line) {"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"        String[] arr \u003d line.split(\"\\\\|\");"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"        Staff staff \u003d new Staff(arr);"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"        StaffList.addStaff(staff);"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"    public static void loadFile() throws FileNotFoundException {"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"        File f \u003d new File(FILE_PATH);           // create a File for the given file path"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"        Scanner s \u003d new Scanner(f);            // create a Scanner using the File as the source"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"        while (s.hasNext()) {"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"            loadTask(s.nextLine());"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"    public static void writeToFile() throws IOException {"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"        createFile();"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"        FileWriter fw \u003d new FileWriter(FILE_PATH);"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"        for (int i \u003d 0; i \u003c StaffList.getNumStaff(); i++) {"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"            ArrayList\u003cStaff\u003e buffer \u003d StaffList.getList();"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"            fw.write(formWriteData(buffer.get(i)));"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"        fw.close();"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"    public static void createFile() {"},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"        try {"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"            File myObj \u003d new File(FILE_PATH);"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"            if (myObj.createNewFile()) {"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\"File created: \" + myObj.getName());"},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":"            } else {"},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\"File is overwritten.\");"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"blank-bank"},"content":"        } catch (IOException e) {"},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"An error occurred.\");"},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":"            e.printStackTrace();"},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":63,"author":{"gitId":"blank-bank"},"content":"    public static String formWriteData(Staff staff) {"},{"lineNumber":64,"author":{"gitId":"blank-bank"},"content":"        return (staff.getId() + \"|\" + staff.getName() + \"|\" + staff.getAge() + \"|\" + staff.getSpecialisation() + \"\\n\");"},{"lineNumber":65,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":66}},{"path":"src/main/java/seedu/duke/ui/UI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.duke.ui;"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"public class UI {"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"    static Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"    static String LINEBREAK \u003d \"____________________________________________________________\";"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    static String LOGO \u003d \" __   __  ______  _______  _  ________  __   __  __  __  _______  __   __  _             __   \\n\""},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"            + \"|  | |  ||   ___||   _   || ||___    _||  | |  ||  ||  ||   _   ||  | |  || | _   _     /  \\\\  \\n\""},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"            + \"|  |_|  ||  |___ |  |_|  || |    |  |  |  |_|  ||  ||  ||  |_|  ||  | |  || || |_| |___/ / \\\\\\\\ \\n\""},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"            + \"|   _   ||   ___||   _   || |    ||\u003d|  |   _   |\\\\  \\\\/  /|   _   ||  | |  || ||_________  | | |\\n\""},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"            + \"|  | |  ||  |___ |  | |  || |___ ||\u003d|  |  | |  | \\\\    / |  | |  ||  |_|  || |_____     \\\\ \\\\ // \\n\""},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"            + \"|__| |__||______||__| |__||_____||__|  |__| |__|  \\\\__/  |__| |__||_______||_______|     \\\\__/  \\n\";"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"    public static String scanInput() {"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"        String input \u003d scanner.nextLine().trim();"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"        return input;"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"    public static void printPatientHelpList() {"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Here is a list of patient commands: \");"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"help\\\" brings up this list of commands!\");"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"add [Patient ID] [Name] [Age] [Gender] [Illness] [Drugs Needed]\\\" adds a patient to the patient list!\");"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"*The name must not have a space included!\");"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"*The patient ID must start with a \\\"P\\\" and have a 5 digit number after! eg. P12345\");"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"*The age must be an integer!\");"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"list\\\" brings up the list of all current patients!\");"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"delete [Patient ID]\\\" deletes the patient with the ID from the list!\");"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"find [Patient ID]\\\" finds the corresponding patient that matches the ID!\");"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"return\\\" returns you to the Start Menu!\");"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Please take note the follow the number of parameters in each command strictly!\");"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"    public static void unrecognizedCommandMessage() {"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"OOPS! I cant recognize that command! \");"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"    public static void noCommandErrorMessage() {"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"OOPS! There is no command entered! \");"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":"    public static void invalidFormatMessage() {"},{"lineNumber":44,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"OOPS! Please check to see if your command is properly formatted! \");"},{"lineNumber":45,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"    public static void showLine() {"},{"lineNumber":48,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(LINEBREAK);"},{"lineNumber":49,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"    public static void emptyLine() {"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"        System.out.print(\"\\n\");"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":55,"author":{"gitId":"Chiamjiaen"},"content":"    public static void printWelcome() {"},{"lineNumber":56,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Welcome to \\n\" + LOGO + \"What is your name?\");"},{"lineNumber":57,"author":{"gitId":"Chiamjiaen"},"content":"        showLine();"},{"lineNumber":58,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":60,"author":{"gitId":"Chiamjiaen"},"content":"    public static void printUserName(String userName) {"},{"lineNumber":61,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Hello \" + userName + \"!\");"},{"lineNumber":62,"author":{"gitId":"Chiamjiaen"},"content":"        showLine();"},{"lineNumber":63,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":65,"author":{"gitId":"Chiamjiaen"},"content":"    public static void printStartMenu() {"},{"lineNumber":66,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Start Menu\");"},{"lineNumber":67,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Commands:\");"},{"lineNumber":68,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"1\\\" to go to staff\");"},{"lineNumber":69,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"2\\\" to go to patients\");"},{"lineNumber":70,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"3\\\" to go to doctors appointments\");"},{"lineNumber":71,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"4\\\" to go to nurse schedules\");"},{"lineNumber":72,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"5\\\" to go to drugs inventory\");"},{"lineNumber":73,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"help\\\" to see what each of the sections contain\");"},{"lineNumber":74,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"bye\\\" to exit the application\");"},{"lineNumber":75,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":77,"author":{"gitId":"Chiamjiaen"},"content":"    public static void patientAddedMessage(String name) {"},{"lineNumber":78,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(name + \" is now a patient here!\");"},{"lineNumber":79,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":81,"author":{"gitId":"Chiamjiaen"},"content":"    public static void printPatientList(int i, String patientDetails) {"},{"lineNumber":82,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(i + \".\" + patientDetails);"},{"lineNumber":83,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":85,"author":{"gitId":"Chiamjiaen"},"content":"    public static void emptyPatientListMessage() {"},{"lineNumber":86,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"OOPS! It seems like you have no patients in the list now!\");"},{"lineNumber":87,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":89,"author":{"gitId":"Chiamjiaen"},"content":"    public static void notEmptyPatientListMessage() {"},{"lineNumber":90,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Here are the patients currently in the list!\");"},{"lineNumber":91,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":93,"author":{"gitId":"Chiamjiaen"},"content":"    public static void incorrectInput() {"},{"lineNumber":94,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"OOPS! Please check to see if your command is properly formatted! \");"},{"lineNumber":95,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":97,"author":{"gitId":"Chiamjiaen"},"content":"    public static void deletePatientMessage(String deletedPatient, int inputInt) {"},{"lineNumber":98,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Noted. I\u0027ve removed this patient: \\n\" + deletedPatient);"},{"lineNumber":99,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Now you have \" + inputInt + \" patients in the list\");"},{"lineNumber":100,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":102,"author":{"gitId":"blank-bank"},"content":"    public static void printGoodbye() {"},{"lineNumber":103,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Goodbye! Have a nice day!\");"},{"lineNumber":104,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":106,"author":{"gitId":"Chiamjiaen"},"content":"    public static void patientMenuPrompt() {"},{"lineNumber":107,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.print(\"Patient --\u003e \");"},{"lineNumber":108,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":110,"author":{"gitId":"Chiamjiaen"},"content":"    public static void startMenuPrompt() {"},{"lineNumber":111,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.print(\"Start Menu --\u003e \");"},{"lineNumber":112,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":114,"author":{"gitId":"Chiamjiaen"},"content":"    public static void userNamePrompt() {"},{"lineNumber":115,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.print(\"User Name --\u003e \");"},{"lineNumber":116,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":118,"author":{"gitId":"Chiamjiaen"},"content":"    public void patientCommandWelcome() {"},{"lineNumber":119,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Welcome to the patient Commands section!\");"},{"lineNumber":120,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Here is a list of patient commands: \");"},{"lineNumber":121,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"add [Patient ID] [Name] [Age] [Gender] [Illness] [Drugs Needed]\\\" adds a patient to the patient list!\");"},{"lineNumber":122,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"list\\\" brings up the list of all current patients!\");"},{"lineNumber":123,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"delete [Patient ID]\\\" deletes the patient with the ID from the list!\");"},{"lineNumber":124,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"find [Patient ID]\\\" finds the corresponding patient that matches the ID!\");"},{"lineNumber":125,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"help\\\" brings up a list of commands!\");"},{"lineNumber":126,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"\\\"return\\\" returns you to the Start Menu!\");"},{"lineNumber":127,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":129,"author":{"gitId":"Chiamjiaen"},"content":"    public static void returningToStartMenuMessage() {"},{"lineNumber":130,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Returning to start menu!\");"},{"lineNumber":131,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":133,"author":{"gitId":"Chiamjiaen"},"content":"    public void showLoadingError() {"},{"lineNumber":134,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"OOPS! There was an error loading the file!\");"},{"lineNumber":135,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":137,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":138,"author":{"gitId":"blank-bank"},"content":"    public static void hiredOutput(String line) {"},{"lineNumber":139,"author":{"gitId":"blank-bank"},"content":"        if (line.split(\" \")[1].charAt(0) \u003d\u003d \u0027D\u0027) {"},{"lineNumber":140,"author":{"gitId":"blank-bank"},"content":"            try {"},{"lineNumber":141,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\"Doctor \" + line.split(\" \")[2] + \" hired!\");"},{"lineNumber":142,"author":{"gitId":"blank-bank"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":143,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\"Unknown Doctor hired!\");"},{"lineNumber":144,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":145,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } else if (line.split(\" \")[1].charAt(0) \u003d\u003d \u0027N\u0027) {"},{"lineNumber":146,"author":{"gitId":"blank-bank"},"content":"            try {"},{"lineNumber":147,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\"Nurse \" + line.split(\" \")[2] + \" hired!\");"},{"lineNumber":148,"author":{"gitId":"blank-bank"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":149,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\"Unknown Doctor hired!\");"},{"lineNumber":150,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":151,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":154,"author":{"gitId":"blank-bank"},"content":"    public static void firedOutput(String line) {"},{"lineNumber":155,"author":{"gitId":"blank-bank"},"content":"        System.out.println(line.split(\" \")[1] + \" has been fired.\");"},{"lineNumber":156,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":158,"author":{"gitId":"blank-bank"},"content":"    public static void staffDoesNotExist(String line) {"},{"lineNumber":159,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Staff with ID: \" + line.split(\" \")[1] + \" does not exist\");"},{"lineNumber":160,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":162,"author":{"gitId":"blank-bank"},"content":"    public static String prettyPrint(String string, int length) {"},{"lineNumber":163,"author":{"gitId":"blank-bank"},"content":"        return String.format(\"%1$-\" + length + \"s\", string);"},{"lineNumber":164,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":166,"author":{"gitId":"blank-bank"},"content":"    public static String repeat(int count, String with) {"},{"lineNumber":167,"author":{"gitId":"blank-bank"},"content":"        return new String(new char[count]).replace(\"\\0\", with);"},{"lineNumber":168,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":170,"author":{"gitId":"blank-bank"},"content":"    public static void staffListHeader() {"},{"lineNumber":171,"author":{"gitId":"blank-bank"},"content":"        System.out.println("},{"lineNumber":172,"author":{"gitId":"blank-bank"},"content":"                prettyPrint(\"ID\", 10) + \" | \" + prettyPrint(\"Name\", 10) + \" | \""},{"lineNumber":173,"author":{"gitId":"blank-bank"},"content":"                        + prettyPrint(\"Age\", 5) + \" | \" + prettyPrint(\"Specialisation\", 20));"},{"lineNumber":174,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":175,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":176,"author":{"gitId":"blank-bank"},"content":"    public static void printStaffHelpList() {"},{"lineNumber":177,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Here is a list of Staff commands: \");"},{"lineNumber":178,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"\\\"help\\\" brings up this list of commands!\");"},{"lineNumber":179,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"\\\"add [Staff ID] [Name] [Age] [Specialisation]\\\" adds a Staff to the staff list!\");"},{"lineNumber":180,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"\\\"list\\\" brings up the list of all current staff!\");"},{"lineNumber":181,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"\\\"delete [Staff ID]\\\" deletes the staff with the specified ID from the list!\");"},{"lineNumber":182,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"\\\"find [keyword or phrase]\\\" finds a keyword or phrase and shows its corresponding staff!\");"},{"lineNumber":183,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"\\\"return\\\" returns you to the Start Menu!\");"},{"lineNumber":184,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":185,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":186,"author":{"gitId":"blank-bank"},"content":"    public static void WrongStaffIDErrorMessage() {"},{"lineNumber":187,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Error in Staff ID input\\nPlease input with the following format [D/N][5 digit ID number]\");"},{"lineNumber":188,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":190,"author":{"gitId":"blank-bank"},"content":"    public static void WrongListInputErrorMessage() {"},{"lineNumber":191,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Invalid List command parameter\\nPlease input with the following format:\\n\\tlist\\n\\tlist nurses\\n\\tlist doctors\");"},{"lineNumber":192,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":193,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":194,"author":{"gitId":"blank-bank"},"content":"    public static void NoInputErrorMessage() {"},{"lineNumber":195,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Command is missing input parameter\");"},{"lineNumber":196,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":197,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":198,"author":{"gitId":"blank-bank"},"content":"    public static void staffMenuPrompt() {"},{"lineNumber":199,"author":{"gitId":"blank-bank"},"content":"        System.out.print(\"Staff --\u003e \");"},{"lineNumber":200,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":201,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":202,"author":{"gitId":"blank-bank"},"content":"    public static void staffMenuHeader() {"},{"lineNumber":203,"author":{"gitId":"blank-bank"},"content":"        System.out.print(\"Welcome to Staff Menu!\\nType \\\"help\\\" for staff menu commands\\n\\n\");"},{"lineNumber":204,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":205,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":206,"author":{"gitId":"blank-bank"},"content":"    public static boolean isListTypo() {"},{"lineNumber":207,"author":{"gitId":"blank-bank"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":208,"author":{"gitId":"blank-bank"},"content":"        String input;"},{"lineNumber":209,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Do you mean \\\"list\\\" (y/n)\");"},{"lineNumber":210,"author":{"gitId":"blank-bank"},"content":"        input \u003d in.nextLine();"},{"lineNumber":211,"author":{"gitId":"blank-bank"},"content":"        return input.equals(\"y\");"},{"lineNumber":212,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":213,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":214,"author":{"gitId":"blank-bank"},"content":"    public static boolean isFindTypo() {"},{"lineNumber":215,"author":{"gitId":"blank-bank"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":216,"author":{"gitId":"blank-bank"},"content":"        String input;"},{"lineNumber":217,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Do you mean \\\"find\\\" (y/n)\");"},{"lineNumber":218,"author":{"gitId":"blank-bank"},"content":"        input \u003d in.nextLine();"},{"lineNumber":219,"author":{"gitId":"blank-bank"},"content":"        return input.equals(\"y\");"},{"lineNumber":220,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":221,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":222,"author":{"gitId":"MingShun98"},"content":"    public static void doctorAppointmentsWelcome() {"},{"lineNumber":223,"author":{"gitId":"MingShun98"},"content":"        System.out.println(\"Welcome to the Appointments\u0027 Menu!\");"},{"lineNumber":224,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":225,"author":{"gitId":"MingShun98"},"content":""},{"lineNumber":226,"author":{"gitId":"MingShun98"},"content":"    public static void doctorAppointmentHelp() {"},{"lineNumber":227,"author":{"gitId":"MingShun98"},"content":"        System.out.println(\"Welcome to the Appointments Commands section!\");"},{"lineNumber":228,"author":{"gitId":"MingShun98"},"content":"        System.out.println(\"Here is a list of doctor appointments commands: \");"},{"lineNumber":229,"author":{"gitId":"MingShun98"},"content":"        System.out.println(\"\\\"add [Doctor ID] [Patient\u0027s Name] [Gender] [DDMMYYYY]\\\" adds a appointment to the appointment list!\");"},{"lineNumber":230,"author":{"gitId":"MingShun98"},"content":"        System.out.println(\"\\\"list [Doctor ID]\\\" brings up the list of current appointments for the doctor!\");"},{"lineNumber":231,"author":{"gitId":"MingShun98"},"content":"        System.out.println(\"\\\"delete [Appointment ID]\\\" deletes the appointment with the indicated ID from the list!\");"},{"lineNumber":232,"author":{"gitId":"MingShun98"},"content":"        System.out.println(\"\\\"help\\\" brings up a list of commands!\");"},{"lineNumber":233,"author":{"gitId":"MingShun98"},"content":"        System.out.println(\"\\\"return\\\" returns you to the Start Menu!\");"},{"lineNumber":234,"author":{"gitId":"MingShun98"},"content":"    }"},{"lineNumber":235,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"MingShun98":14,"Chiamjiaen":122,"AlexanderTanJunAn":5,"blank-bank":94}},{"path":"src/main/java/seedu/nurseschedules/NurseSchedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package seedu.nurseschedules;"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.text.ParseException;"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.Date;"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class NurseSchedule implements Comparable\u003cNurseSchedule\u003e {"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"    protected String nurseID;"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"    protected String patientID;"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"    protected String datetime;"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public NurseSchedule(String nurseID, String patientID, String datetime) {"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"        this.nurseID \u003d nurseID;"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":"        this.patientID \u003d patientID;"},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"        this.datetime \u003d datetime;"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * Compares as Date object"},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public int compareTo(NurseSchedule o) {"},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"        if (getDatetime() \u003d\u003d null || o.getDatetime() \u003d\u003d null) {"},{"lineNumber":24,"author":{"gitId":"AlexanderTanJunAn"},"content":"            return 0;"},{"lineNumber":25,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"AlexanderTanJunAn"},"content":"        SimpleDateFormat parser \u003d new SimpleDateFormat(\"ddMMyyyy\");"},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":"        Date date \u003d null;"},{"lineNumber":28,"author":{"gitId":"AlexanderTanJunAn"},"content":"        Date odate \u003d null;"},{"lineNumber":29,"author":{"gitId":"AlexanderTanJunAn"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"AlexanderTanJunAn"},"content":"            date \u003d parser.parse(getDatetime());"},{"lineNumber":31,"author":{"gitId":"AlexanderTanJunAn"},"content":"            odate \u003d parser.parse(o.getDatetime());"},{"lineNumber":32,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (ParseException e) {"},{"lineNumber":33,"author":{"gitId":"AlexanderTanJunAn"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return date.compareTo(odate);"},{"lineNumber":36,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":38,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * Formats String date into dd/MM/YYYY"},{"lineNumber":40,"author":{"gitId":"AlexanderTanJunAn"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String formatDate(String datetime) throws ParseException {"},{"lineNumber":42,"author":{"gitId":"AlexanderTanJunAn"},"content":"        SimpleDateFormat parser \u003d new SimpleDateFormat(\"ddMMyyyy\");"},{"lineNumber":43,"author":{"gitId":"AlexanderTanJunAn"},"content":"        Date date \u003d parser.parse(datetime);"},{"lineNumber":44,"author":{"gitId":"AlexanderTanJunAn"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyy\");"},{"lineNumber":45,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":46,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return formatter.format(date);"},{"lineNumber":47,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":49,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getNurseID() {"},{"lineNumber":50,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return nurseID;"},{"lineNumber":51,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":53,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getPatientID() {"},{"lineNumber":54,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return patientID;"},{"lineNumber":55,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":57,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getDatetime() {"},{"lineNumber":58,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return datetime;"},{"lineNumber":59,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":61,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getFormattedDatetime() {"},{"lineNumber":62,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String date \u003d null;"},{"lineNumber":63,"author":{"gitId":"AlexanderTanJunAn"},"content":"        try {"},{"lineNumber":64,"author":{"gitId":"AlexanderTanJunAn"},"content":"            date \u003d formatDate(datetime);"},{"lineNumber":65,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (ParseException e) {"},{"lineNumber":66,"author":{"gitId":"AlexanderTanJunAn"},"content":"            e.printStackTrace();"},{"lineNumber":67,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return date;"},{"lineNumber":69,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":71,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String toSave() {"},{"lineNumber":72,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return getNurseID() + \"|\" + getPatientID() + \"|\" + getDatetime();"},{"lineNumber":73,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":75,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String toFind() {"},{"lineNumber":76,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return getFormattedDatetime() + \" \" + patientID;"},{"lineNumber":77,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":79,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String toString() {"},{"lineNumber":80,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return nurseID + \" \" + patientID + \" \" + getFormattedDatetime();"},{"lineNumber":81,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"AlexanderTanJunAn"},"content":"}"}],"authorContributionMap":{"AlexanderTanJunAn":82}},{"path":"src/main/java/seedu/nurseschedules/NurseScheduleActions.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package seedu.nurseschedules;"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class NurseScheduleActions {"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"    List\u003cNurseSchedule\u003e findSchedules \u003d new ArrayList\u003cNurseSchedule\u003e();"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"    List\u003cString\u003e nursesFound \u003d new ArrayList\u003cString\u003e();"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void listSchedules(List\u003cNurseSchedule\u003e nurseSchedules, String[] details) {"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"        int i \u003d 0;"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":"        if (details[0].equals(\"all\")) {"},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"            listAllSchedules(nurseSchedules);"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } else {"},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":"            findSchedules.clear();"},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":"            while (i \u003c nurseSchedules.size()) {"},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":"                if (nurseSchedules.get(i).getNurseID().equals(details[0])) {"},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    findSchedules.add(nurseSchedules.get(i));"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":"                }"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":"                i++;"},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }"},{"lineNumber":24,"author":{"gitId":"AlexanderTanJunAn"},"content":"            Collections.sort(findSchedules);"},{"lineNumber":25,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":26,"author":{"gitId":"AlexanderTanJunAn"},"content":"            int j \u003d 0;"},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":"            System.out.println(details[0]);"},{"lineNumber":28,"author":{"gitId":"AlexanderTanJunAn"},"content":"            while (j \u003c findSchedules.size()) {"},{"lineNumber":29,"author":{"gitId":"AlexanderTanJunAn"},"content":"                System.out.println(\"\\t\" + findSchedules.get(j).toFind());"},{"lineNumber":30,"author":{"gitId":"AlexanderTanJunAn"},"content":"                j++;"},{"lineNumber":31,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":35,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void listAllSchedules(List\u003cNurseSchedule\u003e nurseSchedules) {"},{"lineNumber":36,"author":{"gitId":"AlexanderTanJunAn"},"content":"        nursesFound.clear();"},{"lineNumber":37,"author":{"gitId":"AlexanderTanJunAn"},"content":"        if (nurseSchedules.size() \u003d\u003d 0) {"},{"lineNumber":38,"author":{"gitId":"AlexanderTanJunAn"},"content":"            System.out.println(\"No schedules found!\");"},{"lineNumber":39,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } else {"},{"lineNumber":40,"author":{"gitId":"AlexanderTanJunAn"},"content":"            for (int i \u003d 0; i \u003c nurseSchedules.size(); i++) {"},{"lineNumber":41,"author":{"gitId":"AlexanderTanJunAn"},"content":"                findSchedules.clear();"},{"lineNumber":42,"author":{"gitId":"AlexanderTanJunAn"},"content":"                if (!nursesFound.contains(nurseSchedules.get(i).getNurseID())) {"},{"lineNumber":43,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    nursesFound.add(nurseSchedules.get(i).getNurseID());"},{"lineNumber":44,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    String nurseID \u003d nurseSchedules.get(i).getNurseID();"},{"lineNumber":45,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    for (NurseSchedule nurseSchedule : nurseSchedules) {"},{"lineNumber":46,"author":{"gitId":"AlexanderTanJunAn"},"content":"                        if (nurseID.equals(nurseSchedule.getNurseID())) {"},{"lineNumber":47,"author":{"gitId":"AlexanderTanJunAn"},"content":"                            findSchedules.add(nurseSchedule);"},{"lineNumber":48,"author":{"gitId":"AlexanderTanJunAn"},"content":"                        }"},{"lineNumber":49,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    }"},{"lineNumber":50,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    Collections.sort(findSchedules);"},{"lineNumber":51,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    System.out.println(nurseID);"},{"lineNumber":52,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    for (NurseSchedule findSchedule : findSchedules) {"},{"lineNumber":53,"author":{"gitId":"AlexanderTanJunAn"},"content":"                        System.out.println(\"\\t\" + findSchedule.toFind());"},{"lineNumber":54,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    }"},{"lineNumber":55,"author":{"gitId":"AlexanderTanJunAn"},"content":"                }"},{"lineNumber":56,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":60,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void deleteSchedule(List\u003cNurseSchedule\u003e nurseSchedules, String[] details) {"},{"lineNumber":61,"author":{"gitId":"AlexanderTanJunAn"},"content":"        int i \u003d 0;"},{"lineNumber":62,"author":{"gitId":"AlexanderTanJunAn"},"content":"        while (i \u003c nurseSchedules.size()) {"},{"lineNumber":63,"author":{"gitId":"AlexanderTanJunAn"},"content":"            if ((nurseSchedules.get(i).getNurseID()).equals(details[0])"},{"lineNumber":64,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    \u0026\u0026 nurseSchedules.get(i).getDatetime().equals(details[1])) {"},{"lineNumber":65,"author":{"gitId":"AlexanderTanJunAn"},"content":"                System.out.println(\"Trip to \" + nurseSchedules.get(i).getPatientID() +"},{"lineNumber":66,"author":{"gitId":"AlexanderTanJunAn"},"content":"                        \" on \" + nurseSchedules.get(i).getFormattedDatetime() + \" has been cancelled!\");"},{"lineNumber":67,"author":{"gitId":"AlexanderTanJunAn"},"content":"                nurseSchedules.remove(i);"},{"lineNumber":68,"author":{"gitId":"AlexanderTanJunAn"},"content":"                break;"},{"lineNumber":69,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"AlexanderTanJunAn"},"content":"            i++;"},{"lineNumber":71,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"AlexanderTanJunAn"},"content":"}"}],"authorContributionMap":{"AlexanderTanJunAn":73}},{"path":"src/main/java/seedu/nurseschedules/NurseScheduleInstance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package seedu.nurseschedules;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.duke.storage.NurseScheduleStorage;"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.nurseschedules.parser.Parser;"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.text.ParseException;"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class NurseScheduleInstance {"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private Parser parser;"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private NurseScheduleActions actions;"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private NurseScheduleStorage storage;"},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":"    List\u003cNurseSchedule\u003e nurseSchedules \u003d new ArrayList\u003cNurseSchedule\u003e();"},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application."},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public static void main() {"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":"        new NurseScheduleInstance().run();"},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":25,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void run() {"},{"lineNumber":26,"author":{"gitId":"AlexanderTanJunAn"},"content":"        start();"},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":"        runCommandLoopUntilExit();"},{"lineNumber":28,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":30,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private void start() {"},{"lineNumber":31,"author":{"gitId":"AlexanderTanJunAn"},"content":"        this.parser \u003d new Parser();"},{"lineNumber":32,"author":{"gitId":"AlexanderTanJunAn"},"content":"        this.actions \u003d new NurseScheduleActions();"},{"lineNumber":33,"author":{"gitId":"AlexanderTanJunAn"},"content":"        this.storage \u003d new NurseScheduleStorage();"},{"lineNumber":34,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":35,"author":{"gitId":"AlexanderTanJunAn"},"content":"        storage.load(nurseSchedules);"},{"lineNumber":36,"author":{"gitId":"AlexanderTanJunAn"},"content":"        System.out.println(\"Welcome to Nurse Schedules!\");"},{"lineNumber":37,"author":{"gitId":"AlexanderTanJunAn"},"content":"        System.out.println(\"Type \\\"help\\\" to for nurse schedules commands\");"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":40,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private void runCommandLoopUntilExit() {"},{"lineNumber":41,"author":{"gitId":"AlexanderTanJunAn"},"content":"        boolean isRun \u003d true;"},{"lineNumber":42,"author":{"gitId":"AlexanderTanJunAn"},"content":"        while (isRun) {"},{"lineNumber":43,"author":{"gitId":"AlexanderTanJunAn"},"content":"            System.out.print(\"NSchedule --\u003e \");"},{"lineNumber":44,"author":{"gitId":"AlexanderTanJunAn"},"content":"            String line \u003d parser.getUserInput().trim();"},{"lineNumber":45,"author":{"gitId":"AlexanderTanJunAn"},"content":"            String command \u003d parser.getFirstWord(line);"},{"lineNumber":46,"author":{"gitId":"AlexanderTanJunAn"},"content":"            String[] details \u003d parser.getDetails(line);"},{"lineNumber":47,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":48,"author":{"gitId":"AlexanderTanJunAn"},"content":"            if (command.equals(\"add\")) {"},{"lineNumber":49,"author":{"gitId":"AlexanderTanJunAn"},"content":"                try {"},{"lineNumber":50,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    System.out.println(\"Trip to \" + details[1] + \" on \" + parser.formatDate(line) + \" added!\");"},{"lineNumber":51,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    nurseSchedules.add(new NurseSchedule(details[0], details[1], details[2]));"},{"lineNumber":52,"author":{"gitId":"AlexanderTanJunAn"},"content":"                } catch (ParseException e) {"},{"lineNumber":53,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    System.out.println(\"Invalid date!\");"},{"lineNumber":54,"author":{"gitId":"AlexanderTanJunAn"},"content":"                }"},{"lineNumber":55,"author":{"gitId":"AlexanderTanJunAn"},"content":"            } else if (command.equals(\"list\")) {"},{"lineNumber":56,"author":{"gitId":"AlexanderTanJunAn"},"content":"                actions.listSchedules(nurseSchedules, parser.getDetails(line));"},{"lineNumber":57,"author":{"gitId":"AlexanderTanJunAn"},"content":"            } else if (command.equals(\"delete\")) {"},{"lineNumber":58,"author":{"gitId":"AlexanderTanJunAn"},"content":"                actions.deleteSchedule(nurseSchedules, parser.getDetails(line));"},{"lineNumber":59,"author":{"gitId":"AlexanderTanJunAn"},"content":"            } else if (command.equals(\"help\")) {"},{"lineNumber":60,"author":{"gitId":"AlexanderTanJunAn"},"content":"                System.out.println(\"Here is a list of Nurse Schedules commands: \");"},{"lineNumber":61,"author":{"gitId":"AlexanderTanJunAn"},"content":"                System.out.println(\"\\\"help\\\" brings up this list of commands!\");"},{"lineNumber":62,"author":{"gitId":"AlexanderTanJunAn"},"content":"                System.out.println(\"\\\"add [NurseID] [Patient ID] [Date (DDMMYYYY)]\\\" adds a schedule to the schedule list!\");"},{"lineNumber":63,"author":{"gitId":"AlexanderTanJunAn"},"content":"                System.out.println(\"\\\"list [NurseID/all]\\\" brings up the list of either all or specified nurse schedules!\");"},{"lineNumber":64,"author":{"gitId":"AlexanderTanJunAn"},"content":"                System.out.println(\"\\\"delete [NurseID] [Date (DDMMYYYY)]\\\" deletes the schedule with the specified nurse ID!\");"},{"lineNumber":65,"author":{"gitId":"AlexanderTanJunAn"},"content":"                System.out.println(\"\\\"return\\\" returns you to the Start Menu!\");"},{"lineNumber":66,"author":{"gitId":"AlexanderTanJunAn"},"content":"            } else if (command.equals(\"return\")) {"},{"lineNumber":67,"author":{"gitId":"AlexanderTanJunAn"},"content":"                storage.writeToFile(nurseSchedules);"},{"lineNumber":68,"author":{"gitId":"AlexanderTanJunAn"},"content":"                System.out.println(\"Returning to start menu!\");"},{"lineNumber":69,"author":{"gitId":"AlexanderTanJunAn"},"content":"                isRun \u003d false;"},{"lineNumber":70,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"AlexanderTanJunAn":66,"-":7}},{"path":"src/main/java/seedu/nurseschedules/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package seedu.nurseschedules.parser;"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.text.ParseException;"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.Date;"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class Parser {"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * Gets user input"},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @return User input"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getUserInput() {"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return in.nextLine();"},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * Returns the command of user"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @param text User input"},{"lineNumber":24,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @return First word of user input"},{"lineNumber":25,"author":{"gitId":"AlexanderTanJunAn"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getFirstWord(String text) {"},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":"        int index \u003d text.indexOf(\u0027 \u0027);"},{"lineNumber":28,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":29,"author":{"gitId":"AlexanderTanJunAn"},"content":"        if (index \u003e -1) {"},{"lineNumber":30,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":31,"author":{"gitId":"AlexanderTanJunAn"},"content":"            return text.substring(0, index).trim();"},{"lineNumber":32,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":33,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } else {"},{"lineNumber":34,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":35,"author":{"gitId":"AlexanderTanJunAn"},"content":"            return text;"},{"lineNumber":36,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":39,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String[] getDetails(String text) {"},{"lineNumber":40,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String details[] \u003d new String[3];"},{"lineNumber":41,"author":{"gitId":"AlexanderTanJunAn"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"AlexanderTanJunAn"},"content":"            String parts[] \u003d text.split(\" \", 0);"},{"lineNumber":43,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":44,"author":{"gitId":"AlexanderTanJunAn"},"content":"            if (getFirstWord(text).equals(\"add\")) {"},{"lineNumber":45,"author":{"gitId":"AlexanderTanJunAn"},"content":"                details[0] \u003d parts[1];"},{"lineNumber":46,"author":{"gitId":"AlexanderTanJunAn"},"content":"                details[1] \u003d parts[2];"},{"lineNumber":47,"author":{"gitId":"AlexanderTanJunAn"},"content":"                details[2] \u003d parts[3];"},{"lineNumber":48,"author":{"gitId":"AlexanderTanJunAn"},"content":"            } else if (getFirstWord(text).equals(\"delete\")) {"},{"lineNumber":49,"author":{"gitId":"AlexanderTanJunAn"},"content":"                details[0] \u003d parts[1];"},{"lineNumber":50,"author":{"gitId":"AlexanderTanJunAn"},"content":"                details[1] \u003d parts[2];"},{"lineNumber":51,"author":{"gitId":"AlexanderTanJunAn"},"content":"            } else if (getFirstWord(text).equals(\"list\")) {"},{"lineNumber":52,"author":{"gitId":"AlexanderTanJunAn"},"content":"                details[0] \u003d parts[1];"},{"lineNumber":53,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (Exception e) {"},{"lineNumber":55,"author":{"gitId":"AlexanderTanJunAn"},"content":"            System.out.println(\"Invalid Command!\");"},{"lineNumber":56,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return details;"},{"lineNumber":58,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":60,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String formatDate(String text) throws ParseException {"},{"lineNumber":61,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String[] details \u003d getDetails(text);"},{"lineNumber":62,"author":{"gitId":"AlexanderTanJunAn"},"content":"        SimpleDateFormat parser \u003d new SimpleDateFormat(\"ddMMyyyy\");"},{"lineNumber":63,"author":{"gitId":"AlexanderTanJunAn"},"content":"        Date date \u003d parser.parse(details[2]);"},{"lineNumber":64,"author":{"gitId":"AlexanderTanJunAn"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyy\");"},{"lineNumber":65,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String formattedDate \u003d formatter.format(date);"},{"lineNumber":66,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":67,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return formattedDate;"},{"lineNumber":68,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"AlexanderTanJunAn"},"content":"}"}],"authorContributionMap":{"AlexanderTanJunAn":69}},{"path":"src/main/java/seedu/patient/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.patient;"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"public class Patient {"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"    protected String patientID;"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"    protected String name;"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"    protected int age;"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"    protected String gender;"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"    protected String illness;"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    protected String drugsNeeded;"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"    public Patient(String patientID, String name, int age, String gender, String illness, String drugsNeeded) {"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"        this.patientID \u003d patientID;"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"        this.name \u003d name;"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"        this.age \u003d age;"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"        this.gender \u003d gender;"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"        this.illness \u003d illness;"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"        this.drugsNeeded \u003d drugsNeeded;"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"    public String getPatientDetails() {"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"        return (\"ID: \" + patientID + \" \\n\" +"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"                \"name: \" + name + \" \\n\" +"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"                \"age: \" + age + \" \\n\" +"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"                \"gender: \" + gender + \" \\n\" +"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"                \"illness: \" + illness + \" \\n\" +"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"                \"drugsNeeded: \" + drugsNeeded);"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"    public String getPatientID() {"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"        return this.patientID;"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"    public String getPatientName() {"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"        return this.name;"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"    public String toSaveFormat() {"},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"        return (patientID + \" | \" + name + \" | \" + age + \" | \" +"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"                gender + \" | \" + illness + \" | \" + drugsNeeded);"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":40,"blank-bank":1}},{"path":"src/main/java/seedu/patient/PatientCommandInstance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.patient;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import seedu.duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import seedu.duke.menuparser.MenuParser;"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import seedu.duke.storage.PatientStorage;"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import seedu.duke.ui.UI;"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"public class PatientCommandInstance {"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"    private UI ui;"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"    private PatientList patients;"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"    private PatientStorage patientStorage;"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    public PatientCommandInstance(String filepath) {"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"        ui \u003d new UI();"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"        patientStorage \u003d new PatientStorage(filepath);"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"            patients \u003d new PatientList(patientStorage.loadPatients());"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (DukeException e) {"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"            ui.showLoadingError();"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"            //creates new task list if failure to load from folder."},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"            patients \u003d new PatientList();"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"    public void run() {"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"        ui.patientCommandWelcome();"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"        boolean isReturnToStartMenu \u003d false;"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"        while (!isReturnToStartMenu) {"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"            try {"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"                UI.showLine(); // show the divider line (\"_______\")"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"                UI.patientMenuPrompt();"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"                String fullCommand \u003d UI.scanInput();"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"                isReturnToStartMenu \u003d MenuParser.patientParse(fullCommand, patients);"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"                UI.showLine();"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"            } catch (NullPointerException e) {"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"                //Command C can return as null if an error is triggered in parser"},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"                //Null Pointer Exception may hence occur, the catch statement is to ensure it does not exit the loop."},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"        patientStorage.storePatients(patients);"},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":44,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":32,"blank-bank":12}},{"path":"src/main/java/seedu/patient/PatientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.patient;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import seedu.duke.ui.UI;"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"public class PatientList {"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"    private static ArrayList\u003cPatient\u003e patients \u003d new ArrayList\u003cPatient\u003e();"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"    public PatientList() {"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"    public PatientList(ArrayList\u003cPatient\u003e load) {"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"        this.patients \u003d load;"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"    public static void addPatient(String patientID, String name, int age, String gender, String illness, String drugsNeeded) {"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"        Patient newPatient \u003d new Patient(patientID, name, age, gender, illness, drugsNeeded);"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"        patients.add(newPatient);"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"        UI.patientAddedMessage(name);"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"    public static void findPatient(String inputString) {"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"        int numberOfPatients \u003d patients.size();"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"        for (int i \u003d 0; i \u003c numberOfPatients; i++) {"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"            String patientDetails \u003d patients.get(i).getPatientDetails();"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"            if (patientDetails.contains(inputString)) {"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"                UI.printPatientList(i+1, patientDetails);"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"    public static boolean isIDTaken(String inputString) {"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"        int numberOfPatients \u003d patients.size();"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"        for (int i \u003d 0; i \u003c numberOfPatients; i++) {"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"            String patientID \u003d patients.get(i).getPatientID();"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"            if (patientID.equals(inputString)) {"},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"                return true;"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":"        return false;"},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":44,"author":{"gitId":"Chiamjiaen"},"content":"    public static void listPatients() {"},{"lineNumber":45,"author":{"gitId":"Chiamjiaen"},"content":"        int numberOfPatients \u003d patients.size();"},{"lineNumber":46,"author":{"gitId":"Chiamjiaen"},"content":"        if (numberOfPatients \u003d\u003d 0) {"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"            UI.emptyPatientListMessage();"},{"lineNumber":48,"author":{"gitId":"Chiamjiaen"},"content":"        } else {"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"            UI.notEmptyPatientListMessage();"},{"lineNumber":50,"author":{"gitId":"Chiamjiaen"},"content":"            for (int i \u003d 0; i \u003c numberOfPatients; i++) {"},{"lineNumber":51,"author":{"gitId":"Chiamjiaen"},"content":"                UI.showLine();"},{"lineNumber":52,"author":{"gitId":"Chiamjiaen"},"content":"                UI.printPatientList(i + 1, patients.get(i).getPatientDetails());"},{"lineNumber":53,"author":{"gitId":"Chiamjiaen"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":57,"author":{"gitId":"Chiamjiaen"},"content":"    public static void deletePatient(String inputID) {"},{"lineNumber":58,"author":{"gitId":"Chiamjiaen"},"content":"        int patientIndex \u003d 0;"},{"lineNumber":59,"author":{"gitId":"Chiamjiaen"},"content":"        String patientName \u003d null;"},{"lineNumber":60,"author":{"gitId":"Chiamjiaen"},"content":"        for (int i \u003d 0; i \u003c patients.size(); i++) {"},{"lineNumber":61,"author":{"gitId":"Chiamjiaen"},"content":"            Patient patientTemp \u003d patients.get(i);"},{"lineNumber":62,"author":{"gitId":"Chiamjiaen"},"content":"            String tempID \u003d patientTemp.getPatientID();"},{"lineNumber":63,"author":{"gitId":"Chiamjiaen"},"content":"            String tempName \u003d patientTemp.getPatientName();"},{"lineNumber":64,"author":{"gitId":"Chiamjiaen"},"content":"            if (tempID.equals(inputID)) {"},{"lineNumber":65,"author":{"gitId":"Chiamjiaen"},"content":"                patientIndex \u003d i;"},{"lineNumber":66,"author":{"gitId":"Chiamjiaen"},"content":"                patientName \u003d tempName;"},{"lineNumber":67,"author":{"gitId":"Chiamjiaen"},"content":"                break;"},{"lineNumber":68,"author":{"gitId":"Chiamjiaen"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"Chiamjiaen"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"Chiamjiaen"},"content":"        patients.remove(patientIndex);"},{"lineNumber":71,"author":{"gitId":"Chiamjiaen"},"content":"        UI.deletePatientMessage(patientName, patients.size());"},{"lineNumber":72,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":74,"author":{"gitId":"Chiamjiaen"},"content":"    public int getSize() {"},{"lineNumber":75,"author":{"gitId":"Chiamjiaen"},"content":"        return patients.size();"},{"lineNumber":76,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"Chiamjiaen"},"content":""},{"lineNumber":78,"author":{"gitId":"Chiamjiaen"},"content":"    public String toSaveFile(int i) {"},{"lineNumber":79,"author":{"gitId":"Chiamjiaen"},"content":"        return patients.get(i).toSaveFormat();"},{"lineNumber":80,"author":{"gitId":"Chiamjiaen"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"Chiamjiaen"},"content":"}"}],"authorContributionMap":{"Chiamjiaen":75,"blank-bank":6}},{"path":"src/main/java/seedu/staff/Doctor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.staff;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class Doctor extends Staff {"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"    public Doctor(String[] array) {"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"        super(array);"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":9}},{"path":"src/main/java/seedu/staff/Nurse.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.staff;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class Nurse extends Staff {"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"    public Nurse(String[] array) {"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"        super(array);"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"blank-bank":9}},{"path":"src/main/java/seedu/staff/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.staff;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import seedu.duke.exceptions.NoInputException;"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import seedu.duke.exceptions.WrongListInputException;"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import seedu.duke.exceptions.WrongStaffIdException;"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import seedu.duke.storage.StaffStorage;"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"import seedu.duke.ui.UI;"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"import java.util.Arrays;"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"import static seedu.duke.ui.UI.*;"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"public class Parser {"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"    public static void run() throws IOException {"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"        StaffStorage.fileHandling();"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"        staffMenuHeader();"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"        while (true) {"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"            UI.staffMenuPrompt();"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"            String line;"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"            line \u003d in.nextLine();"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"            try {"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"                if (commandHandler(line) \u003d\u003d 0) {"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"                    System.out.println(\"Returning to start Menu!\\n\");"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"                    break;"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"                }"},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":"            } catch (WrongStaffIdException e) {"},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"                UI.WrongStaffIDErrorMessage();"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"            } catch (WrongListInputException e) {"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"                UI.WrongListInputErrorMessage();"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"            } catch (NoInputException e) {"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"                UI.NoInputErrorMessage();"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"    public static void checkID(String line) throws WrongStaffIdException {"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"        line \u003d line.split(\" \")[1];"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"            Integer.parseInt(line.substring(1));"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"            throw new WrongStaffIdException();"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"        if (!(line.charAt(0) \u003d\u003d \u0027D\u0027 || line.charAt(0) \u003d\u003d \u0027N\u0027)) {"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"            throw new WrongStaffIdException();"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"    public static void checkEmptyInput(String line) throws NoInputException {"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"        if (line.split(\" \").length \u003c 2) {"},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":"            throw new NoInputException();"},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"    public static void checkListCommand(String line) throws WrongListInputException {"},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":"        if ((line.split(\" \").length \u003e 1) \u0026\u0026"},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":"                !((line.split(\" \")[1].equals(\"nurses\") || line.split(\" \")[1].equals(\"doctors\")))) {"},{"lineNumber":62,"author":{"gitId":"blank-bank"},"content":"            throw new WrongListInputException();"},{"lineNumber":63,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":66,"author":{"gitId":"blank-bank"},"content":"    public static int commandHandler(String line) throws IOException, WrongStaffIdException,"},{"lineNumber":67,"author":{"gitId":"blank-bank"},"content":"            WrongListInputException, NoInputException {"},{"lineNumber":68,"author":{"gitId":"blank-bank"},"content":"        if (line.equals(\" \")) {"},{"lineNumber":69,"author":{"gitId":"blank-bank"},"content":"            UI.noCommandErrorMessage();"},{"lineNumber":70,"author":{"gitId":"blank-bank"},"content":"            return 1;"},{"lineNumber":71,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":73,"author":{"gitId":"blank-bank"},"content":"        switch (line.split(\" \")[0]) {"},{"lineNumber":74,"author":{"gitId":"blank-bank"},"content":"        case (\"add\"):"},{"lineNumber":75,"author":{"gitId":"blank-bank"},"content":"            checkID(line);"},{"lineNumber":76,"author":{"gitId":"blank-bank"},"content":"            StaffList.add(line);"},{"lineNumber":77,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":78,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":79,"author":{"gitId":"blank-bank"},"content":"        case (\"lsit\"):"},{"lineNumber":80,"author":{"gitId":"blank-bank"},"content":"            if (!isListTypo()) {"},{"lineNumber":81,"author":{"gitId":"blank-bank"},"content":"                UI.unrecognizedCommandMessage();"},{"lineNumber":82,"author":{"gitId":"blank-bank"},"content":"                break;"},{"lineNumber":83,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"blank-bank"},"content":"        case (\"list\"):"},{"lineNumber":85,"author":{"gitId":"blank-bank"},"content":"            UI.emptyLine();"},{"lineNumber":86,"author":{"gitId":"blank-bank"},"content":"            checkListCommand(line);"},{"lineNumber":87,"author":{"gitId":"blank-bank"},"content":"            UI.staffListHeader();"},{"lineNumber":88,"author":{"gitId":"blank-bank"},"content":"            UI.showLine();"},{"lineNumber":89,"author":{"gitId":"blank-bank"},"content":"            String[] string \u003d Arrays.copyOfRange(line.split(\" \"), 1, 2);"},{"lineNumber":90,"author":{"gitId":"blank-bank"},"content":"            StaffList.list(string);"},{"lineNumber":91,"author":{"gitId":"blank-bank"},"content":"            UI.emptyLine();"},{"lineNumber":92,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":93,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":94,"author":{"gitId":"blank-bank"},"content":"        case (\"delete\"):"},{"lineNumber":95,"author":{"gitId":"blank-bank"},"content":"            checkEmptyInput(line);"},{"lineNumber":96,"author":{"gitId":"blank-bank"},"content":"            checkID(line);"},{"lineNumber":97,"author":{"gitId":"blank-bank"},"content":"            StaffList.delete(line);"},{"lineNumber":98,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":99,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":100,"author":{"gitId":"blank-bank"},"content":"        case (\"help\"):"},{"lineNumber":101,"author":{"gitId":"blank-bank"},"content":"            UI.printStaffHelpList();"},{"lineNumber":102,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":103,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":104,"author":{"gitId":"blank-bank"},"content":"        case (\"fidn\"):"},{"lineNumber":105,"author":{"gitId":"blank-bank"},"content":"            if (!isFindTypo()) {"},{"lineNumber":106,"author":{"gitId":"blank-bank"},"content":"                UI.unrecognizedCommandMessage();"},{"lineNumber":107,"author":{"gitId":"blank-bank"},"content":"                break;"},{"lineNumber":108,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":109,"author":{"gitId":"blank-bank"},"content":"        case (\"find\"):"},{"lineNumber":110,"author":{"gitId":"blank-bank"},"content":"            UI.emptyLine();"},{"lineNumber":111,"author":{"gitId":"blank-bank"},"content":"            checkEmptyInput(line);"},{"lineNumber":112,"author":{"gitId":"blank-bank"},"content":"            staffListHeader();"},{"lineNumber":113,"author":{"gitId":"blank-bank"},"content":"            UI.showLine();"},{"lineNumber":114,"author":{"gitId":"blank-bank"},"content":"            StaffList.find(line.split(\" \")[1]);"},{"lineNumber":115,"author":{"gitId":"blank-bank"},"content":"            UI.emptyLine();"},{"lineNumber":116,"author":{"gitId":"blank-bank"},"content":"            break;"},{"lineNumber":117,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":118,"author":{"gitId":"blank-bank"},"content":"        case (\"return\"):"},{"lineNumber":119,"author":{"gitId":"blank-bank"},"content":"            StaffStorage.writeToFile();"},{"lineNumber":120,"author":{"gitId":"blank-bank"},"content":"            StaffList.resetList();"},{"lineNumber":121,"author":{"gitId":"blank-bank"},"content":"            return 0;"},{"lineNumber":122,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":123,"author":{"gitId":"blank-bank"},"content":"        default:"},{"lineNumber":124,"author":{"gitId":"blank-bank"},"content":"            UI.unrecognizedCommandMessage();"},{"lineNumber":125,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"blank-bank"},"content":"        return 1;"},{"lineNumber":127,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":129,"author":{"gitId":"blank-bank"},"content":"    protected static String[] addFunctionParser(String line) {"},{"lineNumber":130,"author":{"gitId":"blank-bank"},"content":"        int length \u003d line.split(\" \").length;"},{"lineNumber":131,"author":{"gitId":"blank-bank"},"content":"        String[] input \u003d new String[4];"},{"lineNumber":132,"author":{"gitId":"blank-bank"},"content":"        String[] array \u003d line.split(\" \");"},{"lineNumber":133,"author":{"gitId":"blank-bank"},"content":"        for (int i \u003d 1; i \u003c length; i++) {"},{"lineNumber":134,"author":{"gitId":"blank-bank"},"content":"            try {"},{"lineNumber":135,"author":{"gitId":"blank-bank"},"content":"                if (i \u003c\u003d 4) {"},{"lineNumber":136,"author":{"gitId":"blank-bank"},"content":"                    input[i - 1] \u003d array[i];"},{"lineNumber":137,"author":{"gitId":"blank-bank"},"content":"                } else {"},{"lineNumber":138,"author":{"gitId":"blank-bank"},"content":"                    input[3] \u003d input[3] + \" \" + array[i];"},{"lineNumber":139,"author":{"gitId":"blank-bank"},"content":"                }"},{"lineNumber":140,"author":{"gitId":"blank-bank"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":141,"author":{"gitId":"blank-bank"},"content":"                input[i - 1] \u003d \" \";"},{"lineNumber":142,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":143,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":144,"author":{"gitId":"blank-bank"},"content":"        return input;"},{"lineNumber":145,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"AlexanderTanJunAn":2,"blank-bank":144}},{"path":"src/main/java/seedu/staff/Staff.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.staff;"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class Staff {"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"    protected String id;"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"    protected String name;"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"    protected String age;"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"    protected String specialisation;"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"    public Staff(String[] list) {"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"        this.id \u003d list[0];"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"        this.name \u003d list[1];"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"        this.age \u003d list[2];"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"        this.specialisation \u003d list[3];"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"    //Need to implement addNurse and addDoctor if the parameters will be changed"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"    public String getName() {"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"        return this.name;"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"    public String getAge() {"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"        return this.age;"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"    public String getSpecialisation() {"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"        return this.specialisation;"},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"    public String getId() {"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"        return this.id;"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"    public String getType() {"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"        return this.id.substring(0, 1);"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"AlexanderTanJunAn":5,"blank-bank":36}},{"path":"src/main/java/seedu/staff/StaffList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.staff;"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import seedu.duke.ui.UI;"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import java.util.Iterator;"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"import static seedu.duke.ui.UI.*;"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"import static seedu.staff.Parser.addFunctionParser;"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"public class StaffList {"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"    private static final String DOCTOR_TYPE \u003d \"D\";"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"    private static final String NURSE_TYPE \u003d \"N\";"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"    private static ArrayList\u003cStaff\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"    protected static int numStaff \u003d 0;"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"    public static void resetList() {"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"        list.clear();"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"        numStaff\u003d0;"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"    public static void addStaff(Staff staff) {"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"        list.add(staff);"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"        numStaff++;"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"    public static void add(String line) {"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"        String[] array \u003d addFunctionParser(line);"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"        if (isValidID(array[0])) {"},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":"            Staff staff \u003d new Staff(array);"},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"            addStaff(staff);"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"            UI.hiredOutput(line);"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"    public static boolean isValidID(String id) {"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"        for (Staff staff : list) {"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"            if (staff.getId().equals(id)) {"},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\"Error that staff ID has been taken\\n\");"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"                return false;"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"        return true;"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"    public static ArrayList getList() {"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"        return list;"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"    public static void list(String... parameter) {"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"        if (parameter[0] \u003d\u003d (null)) {"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"            for (Staff staff : list) {"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"                display(staff);"},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":"        } else if (parameter[0].equals(\"nurses\")) {"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":"            for (Staff staff : list) {"},{"lineNumber":57,"author":{"gitId":"blank-bank"},"content":"                if (staff.getType().equals(NURSE_TYPE)) {"},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"                    display(staff);"},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":"                }"},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":"        } else if (parameter[0].equals(\"doctors\")) {"},{"lineNumber":62,"author":{"gitId":"blank-bank"},"content":"            for (Staff staff : list) {"},{"lineNumber":63,"author":{"gitId":"blank-bank"},"content":"                if (staff.getType().equals(DOCTOR_TYPE)) {"},{"lineNumber":64,"author":{"gitId":"blank-bank"},"content":"                    display(staff);"},{"lineNumber":65,"author":{"gitId":"blank-bank"},"content":"                }"},{"lineNumber":66,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":70,"author":{"gitId":"blank-bank"},"content":"    public static void find(String keyword) {"},{"lineNumber":71,"author":{"gitId":"blank-bank"},"content":"        for (Staff staff : list) {"},{"lineNumber":72,"author":{"gitId":"blank-bank"},"content":"            if (search(keyword, staff)) {"},{"lineNumber":73,"author":{"gitId":"blank-bank"},"content":"                display(staff);"},{"lineNumber":74,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":78,"author":{"gitId":"blank-bank"},"content":"    public static boolean search(String keyword, Staff staff) {"},{"lineNumber":79,"author":{"gitId":"blank-bank"},"content":"        return staff.getAge().contains(keyword) || staff.getName().contains(keyword)"},{"lineNumber":80,"author":{"gitId":"blank-bank"},"content":"                || staff.getId().contains(keyword) || staff.getSpecialisation().contains(keyword);"},{"lineNumber":81,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":83,"author":{"gitId":"blank-bank"},"content":"    public static void delete(String line) {"},{"lineNumber":84,"author":{"gitId":"blank-bank"},"content":"        int i \u003d 0;"},{"lineNumber":85,"author":{"gitId":"blank-bank"},"content":"        boolean isExistingID \u003d false;"},{"lineNumber":86,"author":{"gitId":"blank-bank"},"content":"        for (Iterator\u003cStaff\u003e iterator \u003d list.iterator(); iterator.hasNext(); ) {"},{"lineNumber":87,"author":{"gitId":"blank-bank"},"content":"            Staff staff \u003d iterator.next();"},{"lineNumber":88,"author":{"gitId":"blank-bank"},"content":"            if (staff.getId().equals(line.split(\" \")[1])) {"},{"lineNumber":89,"author":{"gitId":"blank-bank"},"content":"                iterator.remove();"},{"lineNumber":90,"author":{"gitId":"blank-bank"},"content":"                numStaff--;"},{"lineNumber":91,"author":{"gitId":"blank-bank"},"content":"                isExistingID \u003d true;"},{"lineNumber":92,"author":{"gitId":"blank-bank"},"content":"            }"},{"lineNumber":93,"author":{"gitId":"blank-bank"},"content":"            i++;"},{"lineNumber":94,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"blank-bank"},"content":"        if (isExistingID) {"},{"lineNumber":96,"author":{"gitId":"blank-bank"},"content":"            firedOutput(line);"},{"lineNumber":97,"author":{"gitId":"blank-bank"},"content":"        } else {"},{"lineNumber":98,"author":{"gitId":"blank-bank"},"content":"            staffDoesNotExist(line);"},{"lineNumber":99,"author":{"gitId":"blank-bank"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":102,"author":{"gitId":"blank-bank"},"content":"    public static void display(Staff staff) {"},{"lineNumber":103,"author":{"gitId":"blank-bank"},"content":"        System.out.println("},{"lineNumber":104,"author":{"gitId":"blank-bank"},"content":"                prettyPrint(staff.getId(), 10) + \" | \" + prettyPrint(staff.getName(), 10) + \" | \""},{"lineNumber":105,"author":{"gitId":"blank-bank"},"content":"                        + prettyPrint(staff.getAge(), 5) + \" | \" + prettyPrint(staff.getSpecialisation(), 20));"},{"lineNumber":106,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"blank-bank"},"content":""},{"lineNumber":108,"author":{"gitId":"blank-bank"},"content":"    public static int getNumStaff() {"},{"lineNumber":109,"author":{"gitId":"blank-bank"},"content":"        return numStaff;"},{"lineNumber":110,"author":{"gitId":"blank-bank"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"blank-bank"},"content":"}"}],"authorContributionMap":{"AlexanderTanJunAn":2,"blank-bank":109}},{"path":"src/test/java/seedu/nurseschedules/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package seedu.nurseschedules.parser;"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"class ParserTest {"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"    void testGetFirstWord() {"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"        assertEquals(\"test\", parser.getFirstWord(\"test get first word\"));"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":""},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":"    void getDetails() {"},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String[] details;"},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":"        details \u003d parser.getDetails(\"add test details padding\");"},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":"        assertEquals(details[0], \"test\");"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":"}"}],"authorContributionMap":{"AlexanderTanJunAn":22}}]
