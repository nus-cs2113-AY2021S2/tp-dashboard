[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Configure Intellij for JDK 11**, as described [here](https://se-education.org/guides/tutorials/intellijJdk.html).","lastModifiedDate":"2020-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-06-08"},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/drugsDuke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-06-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"NoorSarrah"},"content":"* A skeleton JUnit test (`src/test/java/seedu/drugsDuke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-06-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-06-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"NoorSarrah":2,"-":64}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":"jar {","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"MingShun98"},"content":"    manifest {","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"MingShun98"},"content":"        attributes(","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"MingShun98"},"content":"                \u0027Main-Class\u0027: \u0027seedu.duke.Duke\u0027","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"MingShun98"},"content":"        )","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"MingShun98"},"content":"}","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-04-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"MingShun98":7,"-":46,"blank-bank":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Owen | [Github](https://github.com/blank-bank) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-03-05"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Chiam Jia-En | [Github](https://github.com/Chiamjiaen/tp) | [Portfolio](docs/team/chiamjiaen.md)","lastModifiedDate":"2021-03-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Joe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ron John | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | John Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Alexander Tan | [Github](https://github.com/AlexanderTanJunAn) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-03-05"}],"authorContributionMap":{"Chiamjiaen":1,"-":7,"AlexanderTanJunAn":1,"blank-bank":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"**Developer Guide**","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"**Introduction**","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"### **What is HealthVault**","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"HealthVault is a desktop app for managing doctor, nurse and patient","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"information, optimised for use through the command line interface. This","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"app is for the head nurse of a hospital, if the user can type fast, it","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"is better than a traditional GUI app.","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"### **Purpose and scope**","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"The purpose of this developer guide is to describe the architecture and","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"software design decisions for our application. This guide will cover our","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"program architecture, the logical view of major components and how our","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"functions work.","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"**Setting Up and Getting Started**","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"----------------------------------","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"### **Setting up**","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"There are 2 prerequisites for this project","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"1.  Java 11","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":"-   Launch your terminal and type \"java -version\" to ensure the correct","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"    \u003e version","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"2.  Intellij IDEA","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"### **Getting Started**","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"1.  Fork this repo, and clone the fork into your computer.","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"2.  Import the project as a gradle project","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"3.  Run Duke.main and try a few commands","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"4.  Run the tests to ensure they all pass.","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"**Design**","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"----------","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"**Architecture**","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"----------------","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\"\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"Our application utilises many layers of abstraction which allows each","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":"individual component to be self contained yet able to work with other","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":"components. The Main Menu component allows direct access to other","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":"components as shown in the diagram.","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"Shared functionalities are placed within the Common Classes component","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"AlexanderTanJunAn"},"content":"which will be elaborated on in the section [Common","lastModifiedDate":"2021-04-04"},{"lineNumber":60,"author":{"gitId":"AlexanderTanJunAn"},"content":"Classes](#common-classes)","lastModifiedDate":"2021-04-04"},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"blank-bank"},"content":"### ","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"blank-bank"},"content":"### **UI component**","lastModifiedDate":"2021-03-26"},{"lineNumber":65,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"blank-bank"},"content":"1.  Each class has a specified UI class that serves the specific need","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"blank-bank"},"content":"    \u003e for the individual class","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"blank-bank"},"content":"2.  There is a Main UI Class that shares all common UI functionalities","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"blank-bank"},"content":"    \u003e amongst the classes. This will be elaborated in the Common Classes","lastModifiedDate":"2021-03-26"},{"lineNumber":71,"author":{"gitId":"blank-bank"},"content":"    \u003e component","lastModifiedDate":"2021-03-26"},{"lineNumber":72,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":73,"author":{"gitId":"blank-bank"},"content":"\u003e (Insert UI UML diagrams)","lastModifiedDate":"2021-03-26"},{"lineNumber":74,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":75,"author":{"gitId":"blank-bank"},"content":"### **Logic component**","lastModifiedDate":"2021-03-26"},{"lineNumber":76,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":77,"author":{"gitId":"blank-bank"},"content":"1.  This component would be the backbone of our program, where the","lastModifiedDate":"2021-03-26"},{"lineNumber":78,"author":{"gitId":"blank-bank"},"content":"    \u003e functions of each individual class are crafted and contribute to","lastModifiedDate":"2021-03-26"},{"lineNumber":79,"author":{"gitId":"blank-bank"},"content":"    \u003e the program.","lastModifiedDate":"2021-03-26"},{"lineNumber":80,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":81,"author":{"gitId":"blank-bank"},"content":"2.  Command is passed through the Parser.java class which determines","lastModifiedDate":"2021-03-26"},{"lineNumber":82,"author":{"gitId":"blank-bank"},"content":"    \u003e what actions to perform. The actions to be performed are methods","lastModifiedDate":"2021-03-26"},{"lineNumber":83,"author":{"gitId":"blank-bank"},"content":"    \u003e called in the classes stated below.","lastModifiedDate":"2021-03-26"},{"lineNumber":84,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":85,"author":{"gitId":"blank-bank"},"content":"[Actions:]{.ul}","lastModifiedDate":"2021-03-26"},{"lineNumber":86,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":87,"author":{"gitId":"blank-bank"},"content":"1.  In the menu of Doctor\u0027s Appointment, command of \"add D12345 Alex M","lastModifiedDate":"2021-03-26"},{"lineNumber":88,"author":{"gitId":"blank-bank"},"content":"    \u003e 21012021\".","lastModifiedDate":"2021-03-26"},{"lineNumber":89,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":90,"author":{"gitId":"blank-bank"},"content":"2.  Input is passed along to the Parser.java class where the keyword","lastModifiedDate":"2021-03-26"},{"lineNumber":91,"author":{"gitId":"blank-bank"},"content":"    \u003e \"add\" is detected.","lastModifiedDate":"2021-03-26"},{"lineNumber":92,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":93,"author":{"gitId":"blank-bank"},"content":"3.  addAppointment() method in the AppointmentActions.java class is","lastModifiedDate":"2021-03-26"},{"lineNumber":94,"author":{"gitId":"blank-bank"},"content":"    \u003e called and adds the details into the list","lastModifiedDate":"2021-03-26"},{"lineNumber":95,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":96,"author":{"gitId":"blank-bank"},"content":"[Classes:]{.ul}","lastModifiedDate":"2021-03-26"},{"lineNumber":97,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":98,"author":{"gitId":"blank-bank"},"content":"1.  AppointmentActions","lastModifiedDate":"2021-03-26"},{"lineNumber":99,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":100,"author":{"gitId":"blank-bank"},"content":"2.  DrugActions","lastModifiedDate":"2021-03-26"},{"lineNumber":101,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":102,"author":{"gitId":"blank-bank"},"content":"3.  NurseScheduleActions","lastModifiedDate":"2021-03-26"},{"lineNumber":103,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":104,"author":{"gitId":"blank-bank"},"content":"4.  PatientList","lastModifiedDate":"2021-03-26"},{"lineNumber":105,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":106,"author":{"gitId":"blank-bank"},"content":"5.  StaffList","lastModifiedDate":"2021-03-26"},{"lineNumber":107,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":108,"author":{"gitId":"blank-bank"},"content":"### **Object Class component**","lastModifiedDate":"2021-03-26"},{"lineNumber":109,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":110,"author":{"gitId":"blank-bank"},"content":"This component is to distinguish the separate object that has been","lastModifiedDate":"2021-03-26"},{"lineNumber":111,"author":{"gitId":"blank-bank"},"content":"instantiated to hold the details of our target users. An object class","lastModifiedDate":"2021-03-26"},{"lineNumber":112,"author":{"gitId":"blank-bank"},"content":"allows for a structure that helps store details from user input in the","lastModifiedDate":"2021-03-26"},{"lineNumber":113,"author":{"gitId":"blank-bank"},"content":"format that we want to be saved.","lastModifiedDate":"2021-03-26"},{"lineNumber":114,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":115,"author":{"gitId":"blank-bank"},"content":"[Objects:]{.ul}","lastModifiedDate":"2021-03-26"},{"lineNumber":116,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":117,"author":{"gitId":"blank-bank"},"content":"1.  DoctorAppointment.java","lastModifiedDate":"2021-03-26"},{"lineNumber":118,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":119,"author":{"gitId":"blank-bank"},"content":"2.  Drug.java","lastModifiedDate":"2021-03-26"},{"lineNumber":120,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":121,"author":{"gitId":"blank-bank"},"content":"3.  Patient.java","lastModifiedDate":"2021-03-26"},{"lineNumber":122,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":123,"author":{"gitId":"blank-bank"},"content":"4.  NurseSchedule.java","lastModifiedDate":"2021-03-26"},{"lineNumber":124,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":125,"author":{"gitId":"blank-bank"},"content":"5.  Staff.java","lastModifiedDate":"2021-03-26"},{"lineNumber":126,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":127,"author":{"gitId":"blank-bank"},"content":"### ","lastModifiedDate":"2021-03-26"},{"lineNumber":128,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":129,"author":{"gitId":"blank-bank"},"content":"### **Storage component**","lastModifiedDate":"2021-03-26"},{"lineNumber":130,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":131,"author":{"gitId":"blank-bank"},"content":"The difference classes for storages are separated into their respective","lastModifiedDate":"2021-03-26"},{"lineNumber":132,"author":{"gitId":"blank-bank"},"content":"architecture for easier management.","lastModifiedDate":"2021-03-26"},{"lineNumber":133,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":134,"author":{"gitId":"blank-bank"},"content":"\u003e [Methods:]{.ul}","lastModifiedDate":"2021-03-26"},{"lineNumber":135,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":136,"author":{"gitId":"blank-bank"},"content":"1.  writeToFile() - Calling upon this method whenever there is change to","lastModifiedDate":"2021-03-26"},{"lineNumber":137,"author":{"gitId":"blank-bank"},"content":"    \u003e the data array list.","lastModifiedDate":"2021-03-26"},{"lineNumber":138,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":139,"author":{"gitId":"blank-bank"},"content":"2.  createFile() - Called during the start of the program when","lastModifiedDate":"2021-03-26"},{"lineNumber":140,"author":{"gitId":"blank-bank"},"content":"    \u003e loadFile() is called and returns an error, meaning that there are","lastModifiedDate":"2021-03-26"},{"lineNumber":141,"author":{"gitId":"blank-bank"},"content":"    \u003e no text files in storage. Thus, this method is called to create a","lastModifiedDate":"2021-03-26"},{"lineNumber":142,"author":{"gitId":"blank-bank"},"content":"    \u003e new text file for data storage.","lastModifiedDate":"2021-03-26"},{"lineNumber":143,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":144,"author":{"gitId":"blank-bank"},"content":"3.  loadFile() - Called during the start of the program, to initialise","lastModifiedDate":"2021-03-26"},{"lineNumber":145,"author":{"gitId":"blank-bank"},"content":"    \u003e the array list and load previously saved data.","lastModifiedDate":"2021-03-26"},{"lineNumber":146,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":147,"author":{"gitId":"blank-bank"},"content":"[Classes:]{.ul}","lastModifiedDate":"2021-03-26"},{"lineNumber":148,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":149,"author":{"gitId":"blank-bank"},"content":"1.  DoctorAppointmentStorage","lastModifiedDate":"2021-03-26"},{"lineNumber":150,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":151,"author":{"gitId":"blank-bank"},"content":"2.  DrugStorage","lastModifiedDate":"2021-03-26"},{"lineNumber":152,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":153,"author":{"gitId":"blank-bank"},"content":"3.  NurseScheduleStorage","lastModifiedDate":"2021-03-26"},{"lineNumber":154,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":155,"author":{"gitId":"blank-bank"},"content":"4.  PatientStorage","lastModifiedDate":"2021-03-26"},{"lineNumber":156,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":157,"author":{"gitId":"blank-bank"},"content":"5.  StaffStorage","lastModifiedDate":"2021-03-26"},{"lineNumber":158,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":159,"author":{"gitId":"blank-bank"},"content":"### **Common classes**","lastModifiedDate":"2021-03-26"},{"lineNumber":160,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":161,"author":{"gitId":"blank-bank"},"content":"1.  Main UI Class","lastModifiedDate":"2021-03-26"},{"lineNumber":162,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":163,"author":{"gitId":"blank-bank"},"content":"2.  Main Storage Class","lastModifiedDate":"2021-03-26"},{"lineNumber":164,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":165,"author":{"gitId":"blank-bank"},"content":" ","lastModifiedDate":"2021-03-26"},{"lineNumber":166,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":167,"author":{"gitId":"blank-bank"},"content":"**Implementation**","lastModifiedDate":"2021-03-26"},{"lineNumber":168,"author":{"gitId":"blank-bank"},"content":"------------------","lastModifiedDate":"2021-03-26"},{"lineNumber":169,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":170,"author":{"gitId":"blank-bank"},"content":"This section describes how the features are being implemented. The scope","lastModifiedDate":"2021-03-26"},{"lineNumber":171,"author":{"gitId":"blank-bank"},"content":"will include the Doctor Appointments / Drugs / Nurse Schedules /","lastModifiedDate":"2021-03-26"},{"lineNumber":172,"author":{"gitId":"blank-bank"},"content":"Patients / Staff related features.","lastModifiedDate":"2021-03-26"},{"lineNumber":173,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":174,"author":{"gitId":"blank-bank"},"content":"Common features that can be identified across the scope include these","lastModifiedDate":"2021-03-26"},{"lineNumber":175,"author":{"gitId":"blank-bank"},"content":"distinct functionalities: Adding, Deleting and Listing. For Nurse","lastModifiedDate":"2021-03-26"},{"lineNumber":176,"author":{"gitId":"blank-bank"},"content":"Schedules/ Patients / Staff related features, there is an additional","lastModifiedDate":"2021-03-26"},{"lineNumber":177,"author":{"gitId":"blank-bank"},"content":"search functionality.","lastModifiedDate":"2021-03-26"},{"lineNumber":178,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":179,"author":{"gitId":"blank-bank"},"content":"### **Menu-related Features**","lastModifiedDate":"2021-03-26"},{"lineNumber":180,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":181,"author":{"gitId":"blank-bank"},"content":"**Main Menu**","lastModifiedDate":"2021-03-26"},{"lineNumber":182,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":183,"author":{"gitId":"blank-bank"},"content":"This feature allows users to select the different menus for Patient /","lastModifiedDate":"2021-03-26"},{"lineNumber":184,"author":{"gitId":"blank-bank"},"content":"Staff / Doctor Appointments / Nurse Schedules and Drugs through","lastModifiedDate":"2021-03-26"},{"lineNumber":185,"author":{"gitId":"blank-bank"},"content":"inputting commands within the main menu. Failure to input a correct or","lastModifiedDate":"2021-03-26"},{"lineNumber":186,"author":{"gitId":"blank-bank"},"content":"recognized command will then prompt the program to generate an exception","lastModifiedDate":"2021-03-26"},{"lineNumber":187,"author":{"gitId":"blank-bank"},"content":"that will alert the user of what they have done wrongly, and also prompt","lastModifiedDate":"2021-03-26"},{"lineNumber":188,"author":{"gitId":"blank-bank"},"content":"the user to access the help list to view the correct set of commands and","lastModifiedDate":"2021-03-26"},{"lineNumber":189,"author":{"gitId":"blank-bank"},"content":"their proper syntaxes.","lastModifiedDate":"2021-03-26"},{"lineNumber":190,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":191,"author":{"gitId":"blank-bank"},"content":"If the user enters a correct and recognized command, they will be able","lastModifiedDate":"2021-03-26"},{"lineNumber":192,"author":{"gitId":"blank-bank"},"content":"to access the functionalities related to the specific Objects (i.e","lastModifiedDate":"2021-03-26"},{"lineNumber":193,"author":{"gitId":"blank-bank"},"content":"Staff, Patient, Doctor Appointments, Nurse Schedules, Drugs).","lastModifiedDate":"2021-03-26"},{"lineNumber":194,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":195,"author":{"gitId":"blank-bank"},"content":"[Implementation:]{.ul}","lastModifiedDate":"2021-03-26"},{"lineNumber":196,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":197,"author":{"gitId":"blank-bank"},"content":"1.  A command is requested from the user as the application starts,","lastModifiedDate":"2021-03-26"},{"lineNumber":198,"author":{"gitId":"blank-bank"},"content":"    \u003e Duke.run() calls UI.scanInput() to read the user\u0027s input from the","lastModifiedDate":"2021-03-26"},{"lineNumber":199,"author":{"gitId":"blank-bank"},"content":"    \u003e command line.","lastModifiedDate":"2021-03-26"},{"lineNumber":200,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":201,"author":{"gitId":"blank-bank"},"content":"2.  The user input determines which type of functionalities will be","lastModifiedDate":"2021-03-26"},{"lineNumber":202,"author":{"gitId":"blank-bank"},"content":"    \u003e accessed by the user.","lastModifiedDate":"2021-03-26"},{"lineNumber":203,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":204,"author":{"gitId":"blank-bank"},"content":"**Staff Menu**","lastModifiedDate":"2021-03-26"},{"lineNumber":205,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":206,"author":{"gitId":"blank-bank"},"content":"1.  When \"Staff\" is given as input in the main menu, `duke.run()` will call `StaffParser.run()`","lastModifiedDate":"2021-04-04"},{"lineNumber":207,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":208,"author":{"gitId":"blank-bank"},"content":"2.  `StaffParser.run()` provides the user a huge range of functionalities to work with the Staff Objects.","lastModifiedDate":"2021-04-04"},{"lineNumber":209,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":210,"author":{"gitId":"blank-bank"},"content":"3.  `StaffParser.run()` will request input from the user.","lastModifiedDate":"2021-04-04"},{"lineNumber":211,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":212,"author":{"gitId":"blank-bank"},"content":"4.  User input will determine the type of actions taken on Staff Objects.","lastModifiedDate":"2021-04-04"},{"lineNumber":213,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":214,"author":{"gitId":"blank-bank"},"content":"5.  The details of the functionalities related to Staff Object is detailed in the section below under [Staff-related-Features](#staff-related-features).","lastModifiedDate":"2021-04-04"},{"lineNumber":215,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":216,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":217,"author":{"gitId":"blank-bank"},"content":"**Doctor Appointment Menu**","lastModifiedDate":"2021-03-26"},{"lineNumber":218,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":219,"author":{"gitId":"blank-bank"},"content":"This feature of the program can be accessed through the main menu as the","lastModifiedDate":"2021-03-26"},{"lineNumber":220,"author":{"gitId":"blank-bank"},"content":"application starts running. Accessing this feature gains access to the","lastModifiedDate":"2021-03-26"},{"lineNumber":221,"author":{"gitId":"blank-bank"},"content":"DoctorAppointment package, including the classes","lastModifiedDate":"2021-03-26"},{"lineNumber":222,"author":{"gitId":"blank-bank"},"content":"AppointmentActions.java, DoctorAppointment.java,","lastModifiedDate":"2021-03-26"},{"lineNumber":223,"author":{"gitId":"blank-bank"},"content":"DoctorAppointmentInstance.java, DoctorAppointmentStorage.java and","lastModifiedDate":"2021-03-26"},{"lineNumber":224,"author":{"gitId":"blank-bank"},"content":"Parser.java. The purpose of this feature is to save a database of","lastModifiedDate":"2021-03-26"},{"lineNumber":225,"author":{"gitId":"blank-bank"},"content":"patient details when they make an appointment with the doctor.","lastModifiedDate":"2021-03-26"},{"lineNumber":226,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":227,"author":{"gitId":"blank-bank"},"content":"[Implementation:]{.ul}","lastModifiedDate":"2021-03-26"},{"lineNumber":228,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":229,"author":{"gitId":"blank-bank"},"content":"6.  When the user types in a command,","lastModifiedDate":"2021-03-26"},{"lineNumber":230,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":231,"author":{"gitId":"blank-bank"},"content":"    a.  Duke.run() calls UI.scanInput() to read the user\u0027s input from","lastModifiedDate":"2021-03-26"},{"lineNumber":232,"author":{"gitId":"blank-bank"},"content":"        \u003e the command line.","lastModifiedDate":"2021-03-26"},{"lineNumber":233,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":234,"author":{"gitId":"blank-bank"},"content":"7.  After scanning the user input, it will be run through case","lastModifiedDate":"2021-03-26"},{"lineNumber":235,"author":{"gitId":"blank-bank"},"content":"    \u003e statements in Duke.run() to find the appropriate command that","lastModifiedDate":"2021-03-26"},{"lineNumber":236,"author":{"gitId":"blank-bank"},"content":"    \u003e corresponds to the user\u0027s input","lastModifiedDate":"2021-03-26"},{"lineNumber":237,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":238,"author":{"gitId":"blank-bank"},"content":"8.  Depending on the input Duke.run() will then bring the user to the","lastModifiedDate":"2021-03-26"},{"lineNumber":239,"author":{"gitId":"blank-bank"},"content":"    \u003e specific instance handler for that feature, which can be","lastModifiedDate":"2021-03-26"},{"lineNumber":240,"author":{"gitId":"blank-bank"},"content":"    \u003e Staff.Parser.run() or NurseScheduleInstance.main(). Alternatively,","lastModifiedDate":"2021-03-26"},{"lineNumber":241,"author":{"gitId":"blank-bank"},"content":"    \u003e Duke.run() creates either a PatientCommandInstance or","lastModifiedDate":"2021-03-26"},{"lineNumber":242,"author":{"gitId":"blank-bank"},"content":"    \u003e DoctorAppointmentInstance or DrugInstance object that may act as","lastModifiedDate":"2021-03-26"},{"lineNumber":243,"author":{"gitId":"blank-bank"},"content":"    \u003e an instance handler.","lastModifiedDate":"2021-03-26"},{"lineNumber":244,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":245,"author":{"gitId":"blank-bank"},"content":"9.  The selected instance handler will then have its own menu that may","lastModifiedDate":"2021-03-26"},{"lineNumber":246,"author":{"gitId":"blank-bank"},"content":"    \u003e handle any additional user commands that are inputted to access","lastModifiedDate":"2021-03-26"},{"lineNumber":247,"author":{"gitId":"blank-bank"},"content":"    \u003e features within that particular instance.","lastModifiedDate":"2021-03-26"},{"lineNumber":248,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":249,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":250,"author":{"gitId":"blank-bank"},"content":"### **Staff-related Features**","lastModifiedDate":"2021-03-26"},{"lineNumber":251,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":252,"author":{"gitId":"blank-bank"},"content":"**Adding a new Staff**","lastModifiedDate":"2021-03-26"},{"lineNumber":253,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":254,"author":{"gitId":"blank-bank"},"content":"**Implementation**","lastModifiedDate":"2021-04-04"},{"lineNumber":255,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":256,"author":{"gitId":"blank-bank"},"content":"When the user attempts to add a new staff, the StaffStorage, StaffList, UI, StaffUI classes will be accessed, and the following sequence of actions is called to prompt execution result to user:","lastModifiedDate":"2021-04-04"},{"lineNumber":257,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":258,"author":{"gitId":"blank-bank"},"content":"`add/[Staff ID]/[name]/[age]/[specialisation]`","lastModifiedDate":"2021-04-04"},{"lineNumber":259,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":260,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Getting User Input**","lastModifiedDate":"2021-04-04"},{"lineNumber":261,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":262,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 1.  User inputs add command which is processed by the `Staff.Parser.run()`","lastModifiedDate":"2021-04-04"},{"lineNumber":263,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":264,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;2.  `Parser.run()` calls `StaffUI.inputToCreateStaff()` to receive user input for Staff object details.","lastModifiedDate":"2021-04-04"},{"lineNumber":265,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":266,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.  `StaffUI.inputToCreateStaff()` calls `UI.abortEnabledScanInput()` to receive user input for each detail of a Staff Object.","lastModifiedDate":"2021-04-04"},{"lineNumber":267,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":268,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;**Creating Staff Object with User Input**","lastModifiedDate":"2021-04-04"},{"lineNumber":269,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":270,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;4.  As the user inputs the Staff ID, `StaffUI.inputToCreateStaff()` calls `Parser.checkID()` to ensure that the Staff ID input is ","lastModifiedDate":"2021-04-04"},{"lineNumber":271,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; valid.","lastModifiedDate":"2021-04-04"},{"lineNumber":272,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":273,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;5.  A Staff Object is created and stored in an existing ArrayList\u003cStaff\u003e, StaffList. which contains all the Staff Objects.","lastModifiedDate":"2021-04-04"},{"lineNumber":274,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":275,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;**Saving Staff Objects into .txt file**","lastModifiedDate":"2021-04-04"},{"lineNumber":276,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":277,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;6.  The Parser then calls `StaffStorage.writeToFile()` which starts the process of writing the details of all existing Staff ","lastModifiedDate":"2021-04-04"},{"lineNumber":278,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Objects, within the StaffList into a specified .txt file.","lastModifiedDate":"2021-04-04"},{"lineNumber":279,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":280,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;7.  `StaffStorage.writeToFile()` then calls `createFile()` which ensures that the specified .txt file exists.","lastModifiedDate":"2021-04-04"},{"lineNumber":281,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":282,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;8.  Data is written and saved.","lastModifiedDate":"2021-04-04"},{"lineNumber":283,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":284,"author":{"gitId":"blank-bank"},"content":"**Deleting a Staff**","lastModifiedDate":"2021-03-26"},{"lineNumber":285,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":286,"author":{"gitId":"blank-bank"},"content":"**Implementation**","lastModifiedDate":"2021-04-04"},{"lineNumber":287,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":288,"author":{"gitId":"blank-bank"},"content":"When the user attempts to delete a staff, the StaffStorage, StaffList, UI, StaffUI classes will be accessed, and the following sequence of actions is called to prompt execution result to user:","lastModifiedDate":"2021-04-04"},{"lineNumber":289,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":290,"author":{"gitId":"blank-bank"},"content":"`delete/[Staff ID]`","lastModifiedDate":"2021-04-04"},{"lineNumber":291,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":292,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Getting User Input**","lastModifiedDate":"2021-04-04"},{"lineNumber":293,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":294,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 1.  User inputs `delete/[Staff ID]` command","lastModifiedDate":"2021-04-04"},{"lineNumber":295,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":296,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 2.  `Parser.run()` calls `checkEmptyInput()` to ensure that input is not empty","lastModifiedDate":"2021-04-04"},{"lineNumber":297,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":298,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.  `Parser.run()` calls `Parser.checkID()` to ensure that the Staff ID input  is valid.","lastModifiedDate":"2021-04-04"},{"lineNumber":299,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":300,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Deleting Staff Object with specified Staff ID**","lastModifiedDate":"2021-04-04"},{"lineNumber":301,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":302,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 4.  `Parser.run()` calls `StaffList.delete()` to begin the deletion of the Staff with Staff ID specified.","lastModifiedDate":"2021-04-04"},{"lineNumber":303,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":304,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 5.  `StaffList.delete()` iterates through the ArrayList\\\u003cStaff\\\u003e, list, to find the specified Staff Object.","lastModifiedDate":"2021-04-04"},{"lineNumber":305,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":306,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 6.  If the specified Staff Object is found, it is deleted.","lastModifiedDate":"2021-04-04"},{"lineNumber":307,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":308,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Prompting result to user**","lastModifiedDate":"2021-04-04"},{"lineNumber":309,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":310,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 7.  If a deletion occurs, `StaffList.delete()` calls `StaffUI.staffFiredOutput()` to  output a feedback message.","lastModifiedDate":"2021-04-04"},{"lineNumber":311,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":312,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 8.  If no deletion occurs, `StaffUI.staffDoesNotExist()` is called instead for a different feedback message.","lastModifiedDate":"2021-04-04"},{"lineNumber":313,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":314,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Saving Staff Objects into .txt file**","lastModifiedDate":"2021-04-04"},{"lineNumber":315,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":316,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 9.  The Parser then calls StaffStorage.writeToFile() which starts the process of writing the details of all existing Staff Objects, ","lastModifiedDate":"2021-04-04"},{"lineNumber":317,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; within the StaffList into a specified .txt file.","lastModifiedDate":"2021-04-04"},{"lineNumber":318,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":319,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;10. StaffStorage.writeToFile() then calls createFile() which ensures that the specified .txt file exists.","lastModifiedDate":"2021-04-04"},{"lineNumber":320,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":321,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;11. Data is written and saved.","lastModifiedDate":"2021-04-04"},{"lineNumber":322,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":323,"author":{"gitId":"blank-bank"},"content":"**Viewing all Staff**","lastModifiedDate":"2021-03-26"},{"lineNumber":324,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":325,"author":{"gitId":"blank-bank"},"content":"**Implementation**","lastModifiedDate":"2021-04-04"},{"lineNumber":326,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":327,"author":{"gitId":"blank-bank"},"content":"When the user attempts to add a new staff, the StaffStorage, StaffList, UI, StaffUI classes will be accessed, and the following sequence of actions is called to prompt execution result to user:","lastModifiedDate":"2021-04-04"},{"lineNumber":328,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":329,"author":{"gitId":"blank-bank"},"content":"`list/\u003cdoctors/nurses\u003e`","lastModifiedDate":"2021-04-04"},{"lineNumber":330,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":331,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;**Getting User Input**","lastModifiedDate":"2021-04-04"},{"lineNumber":332,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":333,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;1.  User inputs list command","lastModifiedDate":"2021-04-04"},{"lineNumber":334,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":335,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;2.  `Parser.run()` calls `Parser.checkListCommand()` to ensure that input is valid (Otherwise, WrongListInputException is ","lastModifiedDate":"2021-04-04"},{"lineNumber":336,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; called).","lastModifiedDate":"2021-04-04"},{"lineNumber":337,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":338,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.  Parser.run() calls `StaffUI.staffListHeader()` to format the output for readability.","lastModifiedDate":"2021-04-04"},{"lineNumber":339,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":340,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;**Displaying Staff Object details**","lastModifiedDate":"2021-04-04"},{"lineNumber":341,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":342,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;4.  `Parser.run()` calls StaffList.list() to begin the process of displaying details of Staff Objects.","lastModifiedDate":"2021-04-04"},{"lineNumber":343,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":344,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;5.  Based on the optional input, `StaffList.list()` will iterate through the relevant Staff Objects and call ","lastModifiedDate":"2021-04-04"},{"lineNumber":345,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `StaffList.display()` for each Object","lastModifiedDate":"2021-04-04"},{"lineNumber":346,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":347,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;6.  `StaffList.display()` will call `UI.prettyPrint()` to format the output to the console screen.","lastModifiedDate":"2021-04-04"},{"lineNumber":348,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":349,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":350,"author":{"gitId":"blank-bank"},"content":"**Finding a Staff**","lastModifiedDate":"2021-03-26"},{"lineNumber":351,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":352,"author":{"gitId":"blank-bank"},"content":"[Implementation:]{.ul}","lastModifiedDate":"2021-03-26"},{"lineNumber":353,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":354,"author":{"gitId":"blank-bank"},"content":"When the user attempts to find a staff using a certain keyword, the","lastModifiedDate":"2021-03-26"},{"lineNumber":355,"author":{"gitId":"blank-bank"},"content":"StaffStorage, StaffList, UI, StaffUI classes will be accessed, and the","lastModifiedDate":"2021-03-26"},{"lineNumber":356,"author":{"gitId":"blank-bank"},"content":"following sequence of actions is called to prompt execution result to","lastModifiedDate":"2021-03-26"},{"lineNumber":357,"author":{"gitId":"blank-bank"},"content":"user:","lastModifiedDate":"2021-03-26"},{"lineNumber":358,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":359,"author":{"gitId":"blank-bank"},"content":"find \\[keyword\\]","lastModifiedDate":"2021-03-26"},{"lineNumber":360,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":361,"author":{"gitId":"blank-bank"},"content":"\u003e Getting User Input","lastModifiedDate":"2021-03-26"},{"lineNumber":362,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":363,"author":{"gitId":"blank-bank"},"content":"1.  User inputs find command with a keyword input.","lastModifiedDate":"2021-03-26"},{"lineNumber":364,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":365,"author":{"gitId":"blank-bank"},"content":"2.  Parser.run() calls checkEmptyInput() to ensure that keyword input is","lastModifiedDate":"2021-03-26"},{"lineNumber":366,"author":{"gitId":"blank-bank"},"content":"    \u003e not empty.","lastModifiedDate":"2021-03-26"},{"lineNumber":367,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":368,"author":{"gitId":"blank-bank"},"content":"3.  Parser.run() calls StaffUI.staffListHeader() to format the output","lastModifiedDate":"2021-03-26"},{"lineNumber":369,"author":{"gitId":"blank-bank"},"content":"    \u003e for readability.","lastModifiedDate":"2021-03-26"},{"lineNumber":370,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":371,"author":{"gitId":"blank-bank"},"content":"\u003e Finding Staff Objects that matches keyword","lastModifiedDate":"2021-03-26"},{"lineNumber":372,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":373,"author":{"gitId":"blank-bank"},"content":"4.  Parser.run() calls StaffList.find() to begin the process of finding","lastModifiedDate":"2021-03-26"},{"lineNumber":374,"author":{"gitId":"blank-bank"},"content":"    \u003e relevant Staff Objects.","lastModifiedDate":"2021-03-26"},{"lineNumber":375,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":376,"author":{"gitId":"blank-bank"},"content":"5.  StaffList.find() will iterate through all Staff Objects and call","lastModifiedDate":"2021-03-26"},{"lineNumber":377,"author":{"gitId":"blank-bank"},"content":"    \u003e StaffList.search() for each Object","lastModifiedDate":"2021-03-26"},{"lineNumber":378,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":379,"author":{"gitId":"blank-bank"},"content":"6.  StaffList.search() indicates which Staff Object has details that","lastModifiedDate":"2021-03-26"},{"lineNumber":380,"author":{"gitId":"blank-bank"},"content":"    \u003e matches the relevant keyword input","lastModifiedDate":"2021-03-26"},{"lineNumber":381,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":382,"author":{"gitId":"blank-bank"},"content":"7.  For each relevant Staff Object, StaffList.display() will be called","lastModifiedDate":"2021-03-26"},{"lineNumber":383,"author":{"gitId":"blank-bank"},"content":"    \u003e to display the Staff Object details to user","lastModifiedDate":"2021-03-26"},{"lineNumber":384,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":385,"author":{"gitId":"blank-bank"},"content":"**Return to main menu**","lastModifiedDate":"2021-03-26"},{"lineNumber":386,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":387,"author":{"gitId":"blank-bank"},"content":"[Implementation:]{.ul}","lastModifiedDate":"2021-03-26"},{"lineNumber":388,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":389,"author":{"gitId":"blank-bank"},"content":"User will be returned the Main Menu upon usage of the return command","lastModifiedDate":"2021-03-26"},{"lineNumber":390,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":391,"author":{"gitId":"blank-bank"},"content":"return","lastModifiedDate":"2021-03-26"},{"lineNumber":392,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":393,"author":{"gitId":"blank-bank"},"content":"\u003e Saving Staff Objects into .txt file","lastModifiedDate":"2021-03-26"},{"lineNumber":394,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":395,"author":{"gitId":"blank-bank"},"content":"1.  User executes return command","lastModifiedDate":"2021-03-26"},{"lineNumber":396,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":397,"author":{"gitId":"blank-bank"},"content":"2.  Parser.run() calls StaffStorage.writeToFile() which starts the","lastModifiedDate":"2021-03-26"},{"lineNumber":398,"author":{"gitId":"blank-bank"},"content":"    \u003e process of writing the details of all existing Staff Objects,","lastModifiedDate":"2021-03-26"},{"lineNumber":399,"author":{"gitId":"blank-bank"},"content":"    \u003e within the StaffList into a specified .txt file.","lastModifiedDate":"2021-03-26"},{"lineNumber":400,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":401,"author":{"gitId":"blank-bank"},"content":"3.  StaffStorage.writeToFile() then calls createFile() which ensures","lastModifiedDate":"2021-03-26"},{"lineNumber":402,"author":{"gitId":"blank-bank"},"content":"    \u003e that the specified .txt file exists.","lastModifiedDate":"2021-03-26"},{"lineNumber":403,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":404,"author":{"gitId":"blank-bank"},"content":"4.  Data is written and saved.","lastModifiedDate":"2021-03-26"},{"lineNumber":405,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":406,"author":{"gitId":"blank-bank"},"content":"5.  StaffList.resetList() will be called to remove all previous entries","lastModifiedDate":"2021-03-26"},{"lineNumber":407,"author":{"gitId":"blank-bank"},"content":"    \u003e of Staff Objects within ArrayList\\\u003cStaff\\\u003e list.","lastModifiedDate":"2021-03-26"},{"lineNumber":408,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":409,"author":{"gitId":"blank-bank"},"content":"6.  Parser.run() will cease running and control will be returned to","lastModifiedDate":"2021-03-26"},{"lineNumber":410,"author":{"gitId":"blank-bank"},"content":"    \u003e duke.run()","lastModifiedDate":"2021-03-26"},{"lineNumber":411,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":412,"author":{"gitId":"blank-bank"},"content":"**View relevant Staff commands**","lastModifiedDate":"2021-03-26"},{"lineNumber":413,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":414,"author":{"gitId":"blank-bank"},"content":"[Implementation:]{.ul}","lastModifiedDate":"2021-03-26"},{"lineNumber":415,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":416,"author":{"gitId":"blank-bank"},"content":"All commands in the Staff Menu will be displayed with detailed","lastModifiedDate":"2021-03-26"},{"lineNumber":417,"author":{"gitId":"blank-bank"},"content":"information on its usage","lastModifiedDate":"2021-03-26"},{"lineNumber":418,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":419,"author":{"gitId":"blank-bank"},"content":"help","lastModifiedDate":"2021-03-26"},{"lineNumber":420,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":421,"author":{"gitId":"blank-bank"},"content":"1.  StaffUI.printStaffHelpList() is executed and help commands and","lastModifiedDate":"2021-03-26"},{"lineNumber":422,"author":{"gitId":"blank-bank"},"content":"    \u003e instructions are displayed;","lastModifiedDate":"2021-03-26"},{"lineNumber":423,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":424,"author":{"gitId":"blank-bank"},"content":"Failure to input a correct or recognized command will then prompt the","lastModifiedDate":"2021-03-26"},{"lineNumber":425,"author":{"gitId":"blank-bank"},"content":"program to generate an exception that will alert the user of what they","lastModifiedDate":"2021-03-26"},{"lineNumber":426,"author":{"gitId":"blank-bank"},"content":"have done wrongly, and also prompt the user to access the help list to","lastModifiedDate":"2021-03-26"},{"lineNumber":427,"author":{"gitId":"blank-bank"},"content":"view the correct set of commands and their proper syntaxes.","lastModifiedDate":"2021-03-26"},{"lineNumber":428,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":429,"author":{"gitId":"blank-bank"},"content":"If the user enters a correct and recognized command, they will then be","lastModifiedDate":"2021-03-26"},{"lineNumber":430,"author":{"gitId":"blank-bank"},"content":"put into the respective instance of feature that they selected.","lastModifiedDate":"2021-03-26"},{"lineNumber":431,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":432,"author":{"gitId":"blank-bank"},"content":"###  ","lastModifiedDate":"2021-03-26"},{"lineNumber":433,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":434,"author":{"gitId":"blank-bank"},"content":"**Patient-related Features**","lastModifiedDate":"2021-03-26"},{"lineNumber":435,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":436,"author":{"gitId":"blank-bank"},"content":"**Adding a Patient**","lastModifiedDate":"2021-03-26"},{"lineNumber":437,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":438,"author":{"gitId":"blank-bank"},"content":"add \\[Patient ID\\] \\[name\\] \\[age\\] \\[gender\\] \\[illness\\] \\[medication","lastModifiedDate":"2021-03-26"},{"lineNumber":439,"author":{"gitId":"blank-bank"},"content":"needed\\]","lastModifiedDate":"2021-03-26"},{"lineNumber":440,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":441,"author":{"gitId":"blank-bank"},"content":"This feature allows the user to add a patient to the list of current","lastModifiedDate":"2021-03-26"},{"lineNumber":442,"author":{"gitId":"blank-bank"},"content":"patients. If the user fails to correctly input the proper parameters.","lastModifiedDate":"2021-03-26"},{"lineNumber":443,"author":{"gitId":"blank-bank"},"content":"Exceptions will be triggered to guide the user on what caused the","lastModifiedDate":"2021-03-26"},{"lineNumber":444,"author":{"gitId":"blank-bank"},"content":"exception and the action will be aborted. The user will also be directed","lastModifiedDate":"2021-03-26"},{"lineNumber":445,"author":{"gitId":"blank-bank"},"content":"to use the help command to refer to the correct syntax.","lastModifiedDate":"2021-03-26"},{"lineNumber":446,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":447,"author":{"gitId":"blank-bank"},"content":"If the patient is added successfully, a message showing the name of the","lastModifiedDate":"2021-03-26"},{"lineNumber":448,"author":{"gitId":"blank-bank"},"content":"patient added will be shown to the user.","lastModifiedDate":"2021-03-26"},{"lineNumber":449,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":450,"author":{"gitId":"blank-bank"},"content":"[Implementation:]{.ul}","lastModifiedDate":"2021-03-26"},{"lineNumber":451,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":452,"author":{"gitId":"blank-bank"},"content":"When a user attempts to add a patient the following classes will be","lastModifiedDate":"2021-03-26"},{"lineNumber":453,"author":{"gitId":"blank-bank"},"content":"accessed: PatientCommandInstance, UI, PatientUI, Patient, PatientList,","lastModifiedDate":"2021-03-26"},{"lineNumber":454,"author":{"gitId":"blank-bank"},"content":"PatientParser, PatientStorage.","lastModifiedDate":"2021-03-26"},{"lineNumber":455,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":456,"author":{"gitId":"blank-bank"},"content":"1.  User Executes command add P12345 Joe 30 M flu panadol","lastModifiedDate":"2021-03-26"},{"lineNumber":457,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":458,"author":{"gitId":"blank-bank"},"content":"    a.  PatientCommandInstance calls UI.scanInput() to read the user","lastModifiedDate":"2021-03-26"},{"lineNumber":459,"author":{"gitId":"blank-bank"},"content":"        \u003e input","lastModifiedDate":"2021-03-26"},{"lineNumber":460,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":461,"author":{"gitId":"blank-bank"},"content":"    b.  PatientCommandInstance calls PatientParser.patientParse() to","lastModifiedDate":"2021-03-26"},{"lineNumber":462,"author":{"gitId":"blank-bank"},"content":"        \u003e parse the user\\\u0027s input into a string array.","lastModifiedDate":"2021-03-26"},{"lineNumber":463,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":464,"author":{"gitId":"blank-bank"},"content":"2.  Checking user input in parser","lastModifiedDate":"2021-03-26"},{"lineNumber":465,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":466,"author":{"gitId":"blank-bank"},"content":"    a.  Using the case statements in patientParse, the command add is","lastModifiedDate":"2021-03-26"},{"lineNumber":467,"author":{"gitId":"blank-bank"},"content":"        \u003e identified.","lastModifiedDate":"2021-03-26"},{"lineNumber":468,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":469,"author":{"gitId":"blank-bank"},"content":"    b.  PatientParse then calls lengthCheck() and iDParser() to scan the","lastModifiedDate":"2021-03-26"},{"lineNumber":470,"author":{"gitId":"blank-bank"},"content":"        \u003e user input for any errors","lastModifiedDate":"2021-03-26"},{"lineNumber":471,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":472,"author":{"gitId":"blank-bank"},"content":"    c.  If lengthCheck() and iDParser() throw an exception, the current","lastModifiedDate":"2021-03-26"},{"lineNumber":473,"author":{"gitId":"blank-bank"},"content":"        \u003e action will be aborted and the user will be notified with an","lastModifiedDate":"2021-03-26"},{"lineNumber":474,"author":{"gitId":"blank-bank"},"content":"        \u003e appropriate error message and once again prompted to enter","lastModifiedDate":"2021-03-26"},{"lineNumber":475,"author":{"gitId":"blank-bank"},"content":"        \u003e another command. If successful, the program will move to","lastModifiedDate":"2021-03-26"},{"lineNumber":476,"author":{"gitId":"blank-bank"},"content":"        \u003e step 3.","lastModifiedDate":"2021-03-26"},{"lineNumber":477,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":478,"author":{"gitId":"blank-bank"},"content":"3.  Creating Patient object","lastModifiedDate":"2021-03-26"},{"lineNumber":479,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":480,"author":{"gitId":"blank-bank"},"content":"    a.  patientParse calls PatientList.addPatient() and creates a","lastModifiedDate":"2021-03-26"},{"lineNumber":481,"author":{"gitId":"blank-bank"},"content":"        \u003e Patient object that will be stored in the PatientList Object","lastModifiedDate":"2021-03-26"},{"lineNumber":482,"author":{"gitId":"blank-bank"},"content":"        \u003e which contains an ArrayList of Patient objects.","lastModifiedDate":"2021-03-26"},{"lineNumber":483,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":484,"author":{"gitId":"blank-bank"},"content":"4.  Prompting user that Patient Object has been created","lastModifiedDate":"2021-03-26"},{"lineNumber":485,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":486,"author":{"gitId":"blank-bank"},"content":"    a.  After successfully creating the Patient Object and adding it to","lastModifiedDate":"2021-03-26"},{"lineNumber":487,"author":{"gitId":"blank-bank"},"content":"        \u003e the PatientList object. PatientList.addPatient() calls","lastModifiedDate":"2021-03-26"},{"lineNumber":488,"author":{"gitId":"blank-bank"},"content":"        \u003e PatientUI.patientAddedMessage() to print a message notifying","lastModifiedDate":"2021-03-26"},{"lineNumber":489,"author":{"gitId":"blank-bank"},"content":"        \u003e the user that a patient has been added.","lastModifiedDate":"2021-03-26"},{"lineNumber":490,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":491,"author":{"gitId":"blank-bank"},"content":"5.  Saving the current list of patients","lastModifiedDate":"2021-03-26"},{"lineNumber":492,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":493,"author":{"gitId":"blank-bank"},"content":"    a.  After the new Patient object is created and stored in a","lastModifiedDate":"2021-03-26"},{"lineNumber":494,"author":{"gitId":"blank-bank"},"content":"        \u003e PatientList, patientParse returns to the","lastModifiedDate":"2021-03-26"},{"lineNumber":495,"author":{"gitId":"blank-bank"},"content":"        \u003e PatientCommandInstance.","lastModifiedDate":"2021-03-26"},{"lineNumber":496,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":497,"author":{"gitId":"blank-bank"},"content":"    b.  PatientCommandInstance then calls PatientStorage.storePatients()","lastModifiedDate":"2021-03-26"},{"lineNumber":498,"author":{"gitId":"blank-bank"},"content":"        \u003e store the updated PatientList object into a text file at a","lastModifiedDate":"2021-03-26"},{"lineNumber":499,"author":{"gitId":"blank-bank"},"content":"        \u003e specified directory.","lastModifiedDate":"2021-03-26"},{"lineNumber":500,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":501,"author":{"gitId":"blank-bank"},"content":"**Listing patients**","lastModifiedDate":"2021-03-26"},{"lineNumber":502,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":503,"author":{"gitId":"blank-bank"},"content":"list","lastModifiedDate":"2021-03-26"},{"lineNumber":504,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":505,"author":{"gitId":"blank-bank"},"content":"This feature allows the user to view the list of patients. If the","lastModifiedDate":"2021-03-26"},{"lineNumber":506,"author":{"gitId":"blank-bank"},"content":"command is inputted correctly a list showing the current patients in the","lastModifiedDate":"2021-03-26"},{"lineNumber":507,"author":{"gitId":"blank-bank"},"content":"order in which they were added to the list will be displayed.","lastModifiedDate":"2021-03-26"},{"lineNumber":508,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":509,"author":{"gitId":"blank-bank"},"content":"[Implementation:]{.ul}","lastModifiedDate":"2021-03-26"},{"lineNumber":510,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":511,"author":{"gitId":"blank-bank"},"content":"When a user attempts to add a patient the following classes will be","lastModifiedDate":"2021-03-26"},{"lineNumber":512,"author":{"gitId":"blank-bank"},"content":"accessed: PatientCommandInstance, UI, PatientUI, Patient, PatientList,","lastModifiedDate":"2021-03-26"},{"lineNumber":513,"author":{"gitId":"blank-bank"},"content":"PatientParser.","lastModifiedDate":"2021-03-26"},{"lineNumber":514,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":515,"author":{"gitId":"blank-bank"},"content":"1.  User Executes command list","lastModifiedDate":"2021-03-26"},{"lineNumber":516,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":517,"author":{"gitId":"blank-bank"},"content":"    a.  PatientCommandInstance calls UI.scanInput() to read the user","lastModifiedDate":"2021-03-26"},{"lineNumber":518,"author":{"gitId":"blank-bank"},"content":"        \u003e input","lastModifiedDate":"2021-03-26"},{"lineNumber":519,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":520,"author":{"gitId":"blank-bank"},"content":"    b.  PatientCommandInstance calls PatientParser.patientParse() to","lastModifiedDate":"2021-03-26"},{"lineNumber":521,"author":{"gitId":"blank-bank"},"content":"        \u003e parse the user\\\u0027s input into a string array.","lastModifiedDate":"2021-03-26"},{"lineNumber":522,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":523,"author":{"gitId":"blank-bank"},"content":"2.  Checking user input in parser","lastModifiedDate":"2021-03-26"},{"lineNumber":524,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":525,"author":{"gitId":"blank-bank"},"content":"    a.  Using the case statements in patientParse, the command list is","lastModifiedDate":"2021-03-26"},{"lineNumber":526,"author":{"gitId":"blank-bank"},"content":"        \u003e identified.","lastModifiedDate":"2021-03-26"},{"lineNumber":527,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":528,"author":{"gitId":"blank-bank"},"content":"    b.  patientParse then calls lengthCheck() to scan the user input for","lastModifiedDate":"2021-03-26"},{"lineNumber":529,"author":{"gitId":"blank-bank"},"content":"        \u003e any errors","lastModifiedDate":"2021-03-26"},{"lineNumber":530,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":531,"author":{"gitId":"blank-bank"},"content":"    c.  If lengthCheck() throws an exception, the current action will be","lastModifiedDate":"2021-03-26"},{"lineNumber":532,"author":{"gitId":"blank-bank"},"content":"        \u003e aborted and the user will be notified with an appropriate","lastModifiedDate":"2021-03-26"},{"lineNumber":533,"author":{"gitId":"blank-bank"},"content":"        \u003e error message and once again prompted to enter another","lastModifiedDate":"2021-03-26"},{"lineNumber":534,"author":{"gitId":"blank-bank"},"content":"        \u003e command. If successful, the program will move to step 3.","lastModifiedDate":"2021-03-26"},{"lineNumber":535,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":536,"author":{"gitId":"blank-bank"},"content":"3.  Listing the Patients in the list","lastModifiedDate":"2021-03-26"},{"lineNumber":537,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":538,"author":{"gitId":"blank-bank"},"content":"    a.  patientParse calls PatientList.listPatients() to list the","lastModifiedDate":"2021-03-26"},{"lineNumber":539,"author":{"gitId":"blank-bank"},"content":"        \u003e patients currently in the PatientList, which is an array of","lastModifiedDate":"2021-03-26"},{"lineNumber":540,"author":{"gitId":"blank-bank"},"content":"        \u003e current Patients.","lastModifiedDate":"2021-03-26"},{"lineNumber":541,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":542,"author":{"gitId":"blank-bank"},"content":"4.  Printing the list of Patients","lastModifiedDate":"2021-03-26"},{"lineNumber":543,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":544,"author":{"gitId":"blank-bank"},"content":"    a.  If there are no patients currently in the list,","lastModifiedDate":"2021-03-26"},{"lineNumber":545,"author":{"gitId":"blank-bank"},"content":"        \u003e PatientList.listPatients() calls","lastModifiedDate":"2021-03-26"},{"lineNumber":546,"author":{"gitId":"blank-bank"},"content":"        \u003e PatientUI.emptyPatientListMessage(). And displays to the user","lastModifiedDate":"2021-03-26"},{"lineNumber":547,"author":{"gitId":"blank-bank"},"content":"        \u003e that there are no patients in the list.","lastModifiedDate":"2021-03-26"},{"lineNumber":548,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":549,"author":{"gitId":"blank-bank"},"content":"    b.  If there are patients currently in the list,","lastModifiedDate":"2021-03-26"},{"lineNumber":550,"author":{"gitId":"blank-bank"},"content":"        \u003e PatientList.listPatients() calls","lastModifiedDate":"2021-03-26"},{"lineNumber":551,"author":{"gitId":"blank-bank"},"content":"        \u003e PatientUI.notEmptyPatientListMessage() before iterating","lastModifiedDate":"2021-03-26"},{"lineNumber":552,"author":{"gitId":"blank-bank"},"content":"        \u003e through the list and calling PatientUI.printPatientList() to","lastModifiedDate":"2021-03-26"},{"lineNumber":553,"author":{"gitId":"blank-bank"},"content":"        \u003e show each individual patient in the list.","lastModifiedDate":"2021-03-26"},{"lineNumber":554,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":555,"author":{"gitId":"blank-bank"},"content":"**Deleting a Patient:**","lastModifiedDate":"2021-03-26"},{"lineNumber":556,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":557,"author":{"gitId":"blank-bank"},"content":"delete \\[Patient ID\\]","lastModifiedDate":"2021-03-26"},{"lineNumber":558,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":559,"author":{"gitId":"blank-bank"},"content":"This feature allows the user to delete an existing patient in the list","lastModifiedDate":"2021-03-26"},{"lineNumber":560,"author":{"gitId":"blank-bank"},"content":"of patients. If the user fails to correctly input the proper parameters.","lastModifiedDate":"2021-03-26"},{"lineNumber":561,"author":{"gitId":"blank-bank"},"content":"Exceptions will be triggered that will notify the user on what caused","lastModifiedDate":"2021-03-26"},{"lineNumber":562,"author":{"gitId":"blank-bank"},"content":"the exception and the action will be aborted. The user will also be","lastModifiedDate":"2021-03-26"},{"lineNumber":563,"author":{"gitId":"blank-bank"},"content":"directed to use the help command to refer to the correct syntax.","lastModifiedDate":"2021-03-26"},{"lineNumber":564,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":565,"author":{"gitId":"blank-bank"},"content":"If the patient has been successfully deleted from the list they will be","lastModifiedDate":"2021-03-26"},{"lineNumber":566,"author":{"gitId":"blank-bank"},"content":"notified with a message showing the deleted patient\u0027s name and that they","lastModifiedDate":"2021-03-26"},{"lineNumber":567,"author":{"gitId":"blank-bank"},"content":"have been removed from the list.","lastModifiedDate":"2021-03-26"},{"lineNumber":568,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":569,"author":{"gitId":"blank-bank"},"content":"[Implementation:]{.ul}","lastModifiedDate":"2021-03-26"},{"lineNumber":570,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":571,"author":{"gitId":"blank-bank"},"content":"When a user attempts to add a patient the following classes will be","lastModifiedDate":"2021-03-26"},{"lineNumber":572,"author":{"gitId":"blank-bank"},"content":"accessed: PatientCommandInstance, UI, PatientUI, Patient, PatientList,","lastModifiedDate":"2021-03-26"},{"lineNumber":573,"author":{"gitId":"blank-bank"},"content":"PatientParser, PatientStorage.","lastModifiedDate":"2021-03-26"},{"lineNumber":574,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":575,"author":{"gitId":"blank-bank"},"content":"1.  User Executes command delete P12345","lastModifiedDate":"2021-03-26"},{"lineNumber":576,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":577,"author":{"gitId":"blank-bank"},"content":"    a.  PatientCommandInstance calls UI.scanInput() to read the user","lastModifiedDate":"2021-03-26"},{"lineNumber":578,"author":{"gitId":"blank-bank"},"content":"        \u003e input","lastModifiedDate":"2021-03-26"},{"lineNumber":579,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":580,"author":{"gitId":"blank-bank"},"content":"    b.  PatientCommandInstance calls PatientParser.patientParse() to","lastModifiedDate":"2021-03-26"},{"lineNumber":581,"author":{"gitId":"blank-bank"},"content":"        \u003e parse the user\\\u0027s input into a string array.","lastModifiedDate":"2021-03-26"},{"lineNumber":582,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":583,"author":{"gitId":"blank-bank"},"content":"2.  Checking user input in parser","lastModifiedDate":"2021-03-26"},{"lineNumber":584,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":585,"author":{"gitId":"blank-bank"},"content":"    a.  Using the case statements in patientParse, the command delete is","lastModifiedDate":"2021-03-26"},{"lineNumber":586,"author":{"gitId":"blank-bank"},"content":"        \u003e identified.","lastModifiedDate":"2021-03-26"},{"lineNumber":587,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":588,"author":{"gitId":"blank-bank"},"content":"    b.  patientParse then calls lengthCheck() and iDParser() to scan the","lastModifiedDate":"2021-03-26"},{"lineNumber":589,"author":{"gitId":"blank-bank"},"content":"        \u003e user input for any errors","lastModifiedDate":"2021-03-26"},{"lineNumber":590,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":591,"author":{"gitId":"blank-bank"},"content":"    c.  If lengthCheck() and iDParser() throw an exception, the current","lastModifiedDate":"2021-03-26"},{"lineNumber":592,"author":{"gitId":"blank-bank"},"content":"        \u003e action will be aborted and the user will be notified with an","lastModifiedDate":"2021-03-26"},{"lineNumber":593,"author":{"gitId":"blank-bank"},"content":"        \u003e appropriate error message and once again prompted to enter","lastModifiedDate":"2021-03-26"},{"lineNumber":594,"author":{"gitId":"blank-bank"},"content":"        \u003e another command. If successful, the program will move to","lastModifiedDate":"2021-03-26"},{"lineNumber":595,"author":{"gitId":"blank-bank"},"content":"        \u003e step 3.","lastModifiedDate":"2021-03-26"},{"lineNumber":596,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":597,"author":{"gitId":"blank-bank"},"content":"3.  Deleting the Patient from the list","lastModifiedDate":"2021-03-26"},{"lineNumber":598,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":599,"author":{"gitId":"blank-bank"},"content":"    a.  patientParse calls PatientList.deletePatient() and the patient","lastModifiedDate":"2021-03-26"},{"lineNumber":600,"author":{"gitId":"blank-bank"},"content":"        \u003e specified by the user is deleted from the list through","lastModifiedDate":"2021-03-26"},{"lineNumber":601,"author":{"gitId":"blank-bank"},"content":"        \u003e iterating through the patientList and discovering the location","lastModifiedDate":"2021-03-26"},{"lineNumber":602,"author":{"gitId":"blank-bank"},"content":"        \u003e of Patient specified before deleting the object from the","lastModifiedDate":"2021-03-26"},{"lineNumber":603,"author":{"gitId":"blank-bank"},"content":"        \u003e ArrayList","lastModifiedDate":"2021-03-26"},{"lineNumber":604,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":605,"author":{"gitId":"blank-bank"},"content":"4.  Notifying user that Patient has been deleted","lastModifiedDate":"2021-03-26"},{"lineNumber":606,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":607,"author":{"gitId":"blank-bank"},"content":"    a.  After successfully deleting the Patient from the PatientList","lastModifiedDate":"2021-03-26"},{"lineNumber":608,"author":{"gitId":"blank-bank"},"content":"        \u003e object. PatientList.deletePatient() calls","lastModifiedDate":"2021-03-26"},{"lineNumber":609,"author":{"gitId":"blank-bank"},"content":"        \u003e PatientUI.deletePatientMessage() to print a message notifying","lastModifiedDate":"2021-03-26"},{"lineNumber":610,"author":{"gitId":"blank-bank"},"content":"        \u003e the user that the Patient has been deleted.","lastModifiedDate":"2021-03-26"},{"lineNumber":611,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":612,"author":{"gitId":"blank-bank"},"content":"5.  Saving the current list of patients","lastModifiedDate":"2021-03-26"},{"lineNumber":613,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":614,"author":{"gitId":"blank-bank"},"content":"    a.  After the new Patient object is deleted from the PatientList,","lastModifiedDate":"2021-03-26"},{"lineNumber":615,"author":{"gitId":"blank-bank"},"content":"        \u003e patientParse returns to the PatientCommandInstance.","lastModifiedDate":"2021-03-26"},{"lineNumber":616,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":617,"author":{"gitId":"blank-bank"},"content":"    b.  PatientCommandInstance then calls PatientStorage.storePatients()","lastModifiedDate":"2021-03-26"},{"lineNumber":618,"author":{"gitId":"blank-bank"},"content":"        \u003e store the updated PatientList object into a text file at a","lastModifiedDate":"2021-03-26"},{"lineNumber":619,"author":{"gitId":"blank-bank"},"content":"        \u003e specified directory.","lastModifiedDate":"2021-03-26"},{"lineNumber":620,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":621,"author":{"gitId":"blank-bank"},"content":"**Finding a patient:**","lastModifiedDate":"2021-03-26"},{"lineNumber":622,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":623,"author":{"gitId":"blank-bank"},"content":"find \\[Patient ID\\]","lastModifiedDate":"2021-03-26"},{"lineNumber":624,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":625,"author":{"gitId":"blank-bank"},"content":"This feature allows the user to find an existing patient in the list of","lastModifiedDate":"2021-03-26"},{"lineNumber":626,"author":{"gitId":"blank-bank"},"content":"patients. If the user fails to correctly input the proper parameters.","lastModifiedDate":"2021-03-26"},{"lineNumber":627,"author":{"gitId":"blank-bank"},"content":"Exceptions will be triggered that will notify the user on what caused","lastModifiedDate":"2021-03-26"},{"lineNumber":628,"author":{"gitId":"blank-bank"},"content":"the exception and the action will be aborted. The user will also be","lastModifiedDate":"2021-03-26"},{"lineNumber":629,"author":{"gitId":"blank-bank"},"content":"directed to use the help command to refer to the correct syntax.","lastModifiedDate":"2021-03-26"},{"lineNumber":630,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":631,"author":{"gitId":"blank-bank"},"content":"If the find command is successfully executed. The user will be notified","lastModifiedDate":"2021-03-26"},{"lineNumber":632,"author":{"gitId":"blank-bank"},"content":"as the patient they were finding will be listed.","lastModifiedDate":"2021-03-26"},{"lineNumber":633,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":634,"author":{"gitId":"blank-bank"},"content":"[Implementation:]{.ul}","lastModifiedDate":"2021-03-26"},{"lineNumber":635,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":636,"author":{"gitId":"blank-bank"},"content":"When a user attempts to add a patient the following classes will be","lastModifiedDate":"2021-03-26"},{"lineNumber":637,"author":{"gitId":"blank-bank"},"content":"accessed: PatientCommandInstance, UI, PatientUI, Patient, PatientList,","lastModifiedDate":"2021-03-26"},{"lineNumber":638,"author":{"gitId":"blank-bank"},"content":"PatientParser, PatientStorage.","lastModifiedDate":"2021-03-26"},{"lineNumber":639,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":640,"author":{"gitId":"blank-bank"},"content":"1.  User Executes command find P12345","lastModifiedDate":"2021-03-26"},{"lineNumber":641,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":642,"author":{"gitId":"blank-bank"},"content":"    a.  PatientCommandInstance calls UI.scanInput() to read the user","lastModifiedDate":"2021-03-26"},{"lineNumber":643,"author":{"gitId":"blank-bank"},"content":"        \u003e input","lastModifiedDate":"2021-03-26"},{"lineNumber":644,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":645,"author":{"gitId":"blank-bank"},"content":"    b.  PatientCommandInstance calls PatientParser.patientParse() to","lastModifiedDate":"2021-03-26"},{"lineNumber":646,"author":{"gitId":"blank-bank"},"content":"        \u003e parse the user\\\u0027s input into a string array.","lastModifiedDate":"2021-03-26"},{"lineNumber":647,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":648,"author":{"gitId":"blank-bank"},"content":"2.  Checking user input in parser","lastModifiedDate":"2021-03-26"},{"lineNumber":649,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":650,"author":{"gitId":"blank-bank"},"content":"    a.  Using the case statements in patientParse, the command find is","lastModifiedDate":"2021-03-26"},{"lineNumber":651,"author":{"gitId":"blank-bank"},"content":"        \u003e identified.","lastModifiedDate":"2021-03-26"},{"lineNumber":652,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":653,"author":{"gitId":"blank-bank"},"content":"    b.  patientParse then calls lengthCheck() and iDParser() to scan the","lastModifiedDate":"2021-03-26"},{"lineNumber":654,"author":{"gitId":"blank-bank"},"content":"        \u003e user input for any errors.","lastModifiedDate":"2021-03-26"},{"lineNumber":655,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":656,"author":{"gitId":"blank-bank"},"content":"    c.  If lengthCheck() and iDParser() throw an exception, the current","lastModifiedDate":"2021-03-26"},{"lineNumber":657,"author":{"gitId":"blank-bank"},"content":"        \u003e action will be aborted and the user will be notified with an","lastModifiedDate":"2021-03-26"},{"lineNumber":658,"author":{"gitId":"blank-bank"},"content":"        \u003e appropriate error message and once again prompted to enter","lastModifiedDate":"2021-03-26"},{"lineNumber":659,"author":{"gitId":"blank-bank"},"content":"        \u003e another command. If successful, the program will move to","lastModifiedDate":"2021-03-26"},{"lineNumber":660,"author":{"gitId":"blank-bank"},"content":"        \u003e step 3.","lastModifiedDate":"2021-03-26"},{"lineNumber":661,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":662,"author":{"gitId":"blank-bank"},"content":"3.  Finding the Patient in the list","lastModifiedDate":"2021-03-26"},{"lineNumber":663,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":664,"author":{"gitId":"blank-bank"},"content":"    a.  patientParse calls PatientList.findPatient() and iterates","lastModifiedDate":"2021-03-26"},{"lineNumber":665,"author":{"gitId":"blank-bank"},"content":"        \u003e through the list to find the Patient that matches the input","lastModifiedDate":"2021-03-26"},{"lineNumber":666,"author":{"gitId":"blank-bank"},"content":"        \u003e specified by the user.","lastModifiedDate":"2021-03-26"},{"lineNumber":667,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":668,"author":{"gitId":"blank-bank"},"content":"4.  Notifying user that Patient has been found","lastModifiedDate":"2021-03-26"},{"lineNumber":669,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":670,"author":{"gitId":"blank-bank"},"content":"    a.  After successfully finding the Patient.","lastModifiedDate":"2021-03-26"},{"lineNumber":671,"author":{"gitId":"blank-bank"},"content":"        \u003e PatientList.findPatient() calls PatientUI.printPatientList()","lastModifiedDate":"2021-03-26"},{"lineNumber":672,"author":{"gitId":"blank-bank"},"content":"        \u003e to print a message notifying the user that a patient has been","lastModifiedDate":"2021-03-26"},{"lineNumber":673,"author":{"gitId":"blank-bank"},"content":"        \u003e found, showing the patients details.","lastModifiedDate":"2021-03-26"},{"lineNumber":674,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":675,"author":{"gitId":"blank-bank"},"content":"**Help**","lastModifiedDate":"2021-03-26"},{"lineNumber":676,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":677,"author":{"gitId":"blank-bank"},"content":"help","lastModifiedDate":"2021-03-26"},{"lineNumber":678,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":679,"author":{"gitId":"blank-bank"},"content":"This feature shows a list of commands usable within the patient-related","lastModifiedDate":"2021-03-26"},{"lineNumber":680,"author":{"gitId":"blank-bank"},"content":"functions and their correct syntaxes that must be followed to enable","lastModifiedDate":"2021-03-26"},{"lineNumber":681,"author":{"gitId":"blank-bank"},"content":"proper usage.","lastModifiedDate":"2021-03-26"},{"lineNumber":682,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":683,"author":{"gitId":"blank-bank"},"content":"[Implementation:]{.ul}","lastModifiedDate":"2021-03-26"},{"lineNumber":684,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":685,"author":{"gitId":"blank-bank"},"content":"When a user attempts to add a patient the following classes will be","lastModifiedDate":"2021-03-26"},{"lineNumber":686,"author":{"gitId":"blank-bank"},"content":"accessed: PatientCommandInstance, UI, PatientUI, PatientParser.","lastModifiedDate":"2021-03-26"},{"lineNumber":687,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":688,"author":{"gitId":"blank-bank"},"content":"1.  User Executes command help","lastModifiedDate":"2021-03-26"},{"lineNumber":689,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":690,"author":{"gitId":"blank-bank"},"content":"    a.  PatientCommandInstance calls UI.scanInput() to read the user","lastModifiedDate":"2021-03-26"},{"lineNumber":691,"author":{"gitId":"blank-bank"},"content":"        \u003e input","lastModifiedDate":"2021-03-26"},{"lineNumber":692,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":693,"author":{"gitId":"blank-bank"},"content":"    b.  PatientCommandInstance calls PatientParser.patientParse() to","lastModifiedDate":"2021-03-26"},{"lineNumber":694,"author":{"gitId":"blank-bank"},"content":"        \u003e parse the user\\\u0027s input into a string array.","lastModifiedDate":"2021-03-26"},{"lineNumber":695,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":696,"author":{"gitId":"blank-bank"},"content":"2.  Checking user input in parser","lastModifiedDate":"2021-03-26"},{"lineNumber":697,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":698,"author":{"gitId":"blank-bank"},"content":"    a.  Using the case statements in patientParse, the command find is","lastModifiedDate":"2021-03-26"},{"lineNumber":699,"author":{"gitId":"blank-bank"},"content":"        \u003e identified.","lastModifiedDate":"2021-03-26"},{"lineNumber":700,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":701,"author":{"gitId":"blank-bank"},"content":"    b.  PatientParse then calls lengthCheck() to scan the user input for","lastModifiedDate":"2021-03-26"},{"lineNumber":702,"author":{"gitId":"blank-bank"},"content":"        \u003e any errors.","lastModifiedDate":"2021-03-26"},{"lineNumber":703,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":704,"author":{"gitId":"blank-bank"},"content":"    c.  If lengthCheck() throws an exception, the current action will be","lastModifiedDate":"2021-03-26"},{"lineNumber":705,"author":{"gitId":"blank-bank"},"content":"        \u003e aborted and the user will be notified with an appropriate","lastModifiedDate":"2021-03-26"},{"lineNumber":706,"author":{"gitId":"blank-bank"},"content":"        \u003e error message and once again prompted to enter another","lastModifiedDate":"2021-03-26"},{"lineNumber":707,"author":{"gitId":"blank-bank"},"content":"        \u003e command. If successful, the program will move to step 3.","lastModifiedDate":"2021-03-26"},{"lineNumber":708,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":709,"author":{"gitId":"blank-bank"},"content":"3.  Printing the help list for the user to reference","lastModifiedDate":"2021-03-26"},{"lineNumber":710,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":711,"author":{"gitId":"blank-bank"},"content":"    a.  patientParse calls PatientUI.printPatientHelpList() to print a","lastModifiedDate":"2021-03-26"},{"lineNumber":712,"author":{"gitId":"blank-bank"},"content":"        \u003e list of commands and instructions on how to use them.","lastModifiedDate":"2021-03-26"},{"lineNumber":713,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":714,"author":{"gitId":"blank-bank"},"content":"**Return to main menu**","lastModifiedDate":"2021-03-26"},{"lineNumber":715,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":716,"author":{"gitId":"blank-bank"},"content":"return","lastModifiedDate":"2021-03-26"},{"lineNumber":717,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":718,"author":{"gitId":"blank-bank"},"content":"This feature returns the user to the main menu of the program.","lastModifiedDate":"2021-03-26"},{"lineNumber":719,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":720,"author":{"gitId":"blank-bank"},"content":"[Implementation:]{.ul}","lastModifiedDate":"2021-03-26"},{"lineNumber":721,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":722,"author":{"gitId":"blank-bank"},"content":"When a user attempts to add a patient the following classes will be","lastModifiedDate":"2021-03-26"},{"lineNumber":723,"author":{"gitId":"blank-bank"},"content":"accessed: PatientCommandInstance, UI, PatientUI, PatientParser.","lastModifiedDate":"2021-03-26"},{"lineNumber":724,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":725,"author":{"gitId":"blank-bank"},"content":"1.  User Executes command return","lastModifiedDate":"2021-03-26"},{"lineNumber":726,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":727,"author":{"gitId":"blank-bank"},"content":"    a.  PatientCommandInstance calls UI.scanInput() to read the user","lastModifiedDate":"2021-03-26"},{"lineNumber":728,"author":{"gitId":"blank-bank"},"content":"        \u003e input","lastModifiedDate":"2021-03-26"},{"lineNumber":729,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":730,"author":{"gitId":"blank-bank"},"content":"    b.  PatientCommandInstance calls PatientParser.patientParse() to","lastModifiedDate":"2021-03-26"},{"lineNumber":731,"author":{"gitId":"blank-bank"},"content":"        \u003e parse the user\\\u0027s input into a string array.","lastModifiedDate":"2021-03-26"},{"lineNumber":732,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":733,"author":{"gitId":"blank-bank"},"content":"2.  Checking user input in parser","lastModifiedDate":"2021-03-26"},{"lineNumber":734,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":735,"author":{"gitId":"blank-bank"},"content":"    a.  Using the case statements in patientParse, the command return is","lastModifiedDate":"2021-03-26"},{"lineNumber":736,"author":{"gitId":"blank-bank"},"content":"        \u003e identified.","lastModifiedDate":"2021-03-26"},{"lineNumber":737,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":738,"author":{"gitId":"blank-bank"},"content":"    b.  PatientParse then calls lengthCheck() to scan the user input for","lastModifiedDate":"2021-03-26"},{"lineNumber":739,"author":{"gitId":"blank-bank"},"content":"        \u003e any errors.","lastModifiedDate":"2021-03-26"},{"lineNumber":740,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":741,"author":{"gitId":"blank-bank"},"content":"    c.  If lengthCheck() throws an exception, the current action will be","lastModifiedDate":"2021-03-26"},{"lineNumber":742,"author":{"gitId":"blank-bank"},"content":"        \u003e aborted and the user will be notified with an appropriate","lastModifiedDate":"2021-03-26"},{"lineNumber":743,"author":{"gitId":"blank-bank"},"content":"        \u003e error message and once again prompted to enter another","lastModifiedDate":"2021-03-26"},{"lineNumber":744,"author":{"gitId":"blank-bank"},"content":"        \u003e command. If successful, the program will move to step 3.","lastModifiedDate":"2021-03-26"},{"lineNumber":745,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":746,"author":{"gitId":"blank-bank"},"content":"3.  Notifying user of returning to main menu","lastModifiedDate":"2021-03-26"},{"lineNumber":747,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":748,"author":{"gitId":"blank-bank"},"content":"    a.  patientParse calls UI.returningToStartMenuMessage() to show the","lastModifiedDate":"2021-03-26"},{"lineNumber":749,"author":{"gitId":"blank-bank"},"content":"        \u003e user that they will now exit from the PatientCommandInstance.","lastModifiedDate":"2021-03-26"},{"lineNumber":750,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":751,"author":{"gitId":"blank-bank"},"content":"4.  Returning to main menu","lastModifiedDate":"2021-03-26"},{"lineNumber":752,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":753,"author":{"gitId":"blank-bank"},"content":"```{\u003dhtml}","lastModifiedDate":"2021-03-26"},{"lineNumber":754,"author":{"gitId":"blank-bank"},"content":"\u003c!-- --\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":755,"author":{"gitId":"blank-bank"},"content":"```","lastModifiedDate":"2021-03-26"},{"lineNumber":756,"author":{"gitId":"blank-bank"},"content":"a.  patientParse returns true to PatientCommandInstance and this causes","lastModifiedDate":"2021-03-26"},{"lineNumber":757,"author":{"gitId":"blank-bank"},"content":"    \u003e the PatientCommandInstance to break out of its input loop. Thereby","lastModifiedDate":"2021-03-26"},{"lineNumber":758,"author":{"gitId":"blank-bank"},"content":"    \u003e returning to the main menu from the PatientCommandInstance.","lastModifiedDate":"2021-03-26"},{"lineNumber":759,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":760,"author":{"gitId":"AlexanderTanJunAn"},"content":"## **Nurse Schedule-related Features**","lastModifiedDate":"2021-03-27"},{"lineNumber":761,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":762,"author":{"gitId":"blank-bank"},"content":"When the user accesses an instance of Nurse Schedules, the","lastModifiedDate":"2021-03-26"},{"lineNumber":763,"author":{"gitId":"blank-bank"},"content":"NurseScheduleParser, NurseScheduleActions and NurseScheduleStorage","lastModifiedDate":"2021-03-26"},{"lineNumber":764,"author":{"gitId":"blank-bank"},"content":"classes will be accessed. If data is found on the NurseSchedules text","lastModifiedDate":"2021-03-26"},{"lineNumber":765,"author":{"gitId":"blank-bank"},"content":"file, it will be loaded into the arraylist, else a new text file is","lastModifiedDate":"2021-03-26"},{"lineNumber":766,"author":{"gitId":"blank-bank"},"content":"created.","lastModifiedDate":"2021-03-26"},{"lineNumber":767,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":768,"author":{"gitId":"AlexanderTanJunAn"},"content":"### Implementation:","lastModifiedDate":"2021-03-27"},{"lineNumber":769,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":770,"author":{"gitId":"AlexanderTanJunAn"},"content":"1.  User types in a command","lastModifiedDate":"2021-04-04"},{"lineNumber":771,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":772,"author":{"gitId":"AlexanderTanJunAn"},"content":"2.  NurseScheduleInstance calls UI.getInput() to receive user input.","lastModifiedDate":"2021-04-04"},{"lineNumber":773,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":774,"author":{"gitId":"AlexanderTanJunAn"},"content":"3.  NurseScheduleInstance passes the input to nurseParse().","lastModifiedDate":"2021-04-04"},{"lineNumber":775,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":776,"author":{"gitId":"AlexanderTanJunAn"},"content":"4.  nurseParse() creates a Command object with the relevant parameters and returns it to NurseScheduleInstance.","lastModifiedDate":"2021-04-04"},{"lineNumber":777,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":778,"author":{"gitId":"AlexanderTanJunAn"},"content":"5.  NurseScheduleInstance executes the object by calling the objects execute method.","lastModifiedDate":"2021-04-04"},{"lineNumber":779,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":780,"author":{"gitId":"AlexanderTanJunAn"},"content":"### **Adding a new Nurse Schedule**","lastModifiedDate":"2021-03-27"},{"lineNumber":781,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":782,"author":{"gitId":"AlexanderTanJunAn"},"content":"### Implementation","lastModifiedDate":"2021-03-27"},{"lineNumber":783,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":784,"author":{"gitId":"blank-bank"},"content":"When the user attempts to add a new nurse schedule, the","lastModifiedDate":"2021-03-26"},{"lineNumber":785,"author":{"gitId":"AlexanderTanJunAn"},"content":"NurseScheduleInstance, NurseScheduleParser, NurseScheduleChecker, NurseScheduleActions and Nurse Schedule Command","lastModifiedDate":"2021-04-04"},{"lineNumber":786,"author":{"gitId":"AlexanderTanJunAn"},"content":"classes will be accessed, and the following sequence of actions is","lastModifiedDate":"2021-04-04"},{"lineNumber":787,"author":{"gitId":"blank-bank"},"content":"called to prompt execution results to user:","lastModifiedDate":"2021-03-26"},{"lineNumber":788,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":789,"author":{"gitId":"AlexanderTanJunAn"},"content":"`add/[Nurse ID]/[Date (DDMMYYYY)]`:","lastModifiedDate":"2021-04-04"},{"lineNumber":790,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":791,"author":{"gitId":"AlexanderTanJunAn"},"content":"Getting User Input:","lastModifiedDate":"2021-03-27"},{"lineNumber":792,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":793,"author":{"gitId":"AlexanderTanJunAn"},"content":"1. User inputs command which is received by NurseScheduleInstance.runCommandLoopUntilExit().","lastModifiedDate":"2021-04-04"},{"lineNumber":794,"author":{"gitId":"AlexanderTanJunAn"},"content":"2. User input is the passed to NurseScheduleParser.nurseParse() which returns a Command Add object.","lastModifiedDate":"2021-04-04"},{"lineNumber":795,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":796,"author":{"gitId":"AlexanderTanJunAn"},"content":"Creating NurseSchedule object with User Input:","lastModifiedDate":"2021-03-27"},{"lineNumber":797,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":798,"author":{"gitId":"AlexanderTanJunAn"},"content":"3. NurseScheduleInstance then executes the Command Add object.","lastModifiedDate":"2021-04-04"},{"lineNumber":799,"author":{"gitId":"AlexanderTanJunAn"},"content":"4. addSchedule() from NurseScheduleActions will then be called which creates the NurseSchedule object and adds it into the arraylist.","lastModifiedDate":"2021-04-04"},{"lineNumber":800,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":801,"author":{"gitId":"AlexanderTanJunAn"},"content":"Saving NurseSchedule objects into .txt file:","lastModifiedDate":"2021-03-27"},{"lineNumber":802,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":803,"author":{"gitId":"AlexanderTanJunAn"},"content":"4. The command loop then calls NurseScheduleStorage.writeToFile() which starts the process of writing details of all existing Nurse Schedule objects within the ArrayList to the specified .txt file","lastModifiedDate":"2021-03-27"},{"lineNumber":804,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":805,"author":{"gitId":"AlexanderTanJunAn"},"content":"### **Listing Nurse Schedules**","lastModifiedDate":"2021-03-27"},{"lineNumber":806,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":807,"author":{"gitId":"AlexanderTanJunAn"},"content":"### Implementation:","lastModifiedDate":"2021-03-27"},{"lineNumber":808,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":809,"author":{"gitId":"blank-bank"},"content":"When the user attempts to list nurse schedules, they will have the","lastModifiedDate":"2021-03-26"},{"lineNumber":810,"author":{"gitId":"blank-bank"},"content":"choice of listing all schedules or a specified nurse id\u0027s schedule. This","lastModifiedDate":"2021-03-26"},{"lineNumber":811,"author":{"gitId":"blank-bank"},"content":"is similar to a search function. This will access the","lastModifiedDate":"2021-03-26"},{"lineNumber":812,"author":{"gitId":"blank-bank"},"content":"NurseScheduleActions class.","lastModifiedDate":"2021-03-26"},{"lineNumber":813,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":814,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u003cimg src\u003d\"images/ListNurseIDSequenceDiagram.png\"\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":815,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u003cp align \u003d \"center\"\u003e Sequence Diagram when list/N12345 inputted.\u003c/p\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":816,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":817,"author":{"gitId":"AlexanderTanJunAn"},"content":"`list/[Nurse ID or list/all`:","lastModifiedDate":"2021-04-04"},{"lineNumber":818,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":819,"author":{"gitId":"blank-bank"},"content":"Getting User Input","lastModifiedDate":"2021-03-26"},{"lineNumber":820,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":821,"author":{"gitId":"AlexanderTanJunAn"},"content":"1. User inputs command which is received by NurseScheduleInstance.runCommandLoopUntilExit().","lastModifiedDate":"2021-04-04"},{"lineNumber":822,"author":{"gitId":"AlexanderTanJunAn"},"content":"2. User input is the passed to NurseScheduleParser.nurseParse() which returns a Command List object.","lastModifiedDate":"2021-04-04"},{"lineNumber":823,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":824,"author":{"gitId":"blank-bank"},"content":"Gathering necessary schedules","lastModifiedDate":"2021-03-26"},{"lineNumber":825,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":826,"author":{"gitId":"AlexanderTanJunAn"},"content":"3. NurseScheduleInstance then executes Command List object, which calls listSchedules() from NurseScheduleActions.","lastModifiedDate":"2021-04-04"},{"lineNumber":827,"author":{"gitId":"AlexanderTanJunAn"},"content":"3. listSchedules() will call listAllSchedules() if the user inputs all, else it will check if Nurse ID is valid and call getNurseSchedulesById().","lastModifiedDate":"2021-04-04"},{"lineNumber":828,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":829,"author":{"gitId":"blank-bank"},"content":"Printing schedules","lastModifiedDate":"2021-03-26"},{"lineNumber":830,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":831,"author":{"gitId":"blank-bank"},"content":"4. printSchedules() is then called to print all schedules.","lastModifiedDate":"2021-03-26"},{"lineNumber":832,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":833,"author":{"gitId":"AlexanderTanJunAn"},"content":"### **Deleting Nurse Schedules**","lastModifiedDate":"2021-03-27"},{"lineNumber":834,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":835,"author":{"gitId":"AlexanderTanJunAn"},"content":"### Implementation:","lastModifiedDate":"2021-03-27"},{"lineNumber":836,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":837,"author":{"gitId":"AlexanderTanJunAn"},"content":"When the user wants to delete a specified nurse schedule, the NurseScheduleActions and NurseScheduleStorage classes will be accessed.","lastModifiedDate":"2021-03-27"},{"lineNumber":838,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":839,"author":{"gitId":"AlexanderTanJunAn"},"content":"`delete/[Nurse ID]/[Date (DDMMYYYY)]`:","lastModifiedDate":"2021-04-04"},{"lineNumber":840,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":841,"author":{"gitId":"AlexanderTanJunAn"},"content":"Getting User Input","lastModifiedDate":"2021-03-27"},{"lineNumber":842,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":843,"author":{"gitId":"AlexanderTanJunAn"},"content":"1. User inputs command which is received by NurseScheduleInstance.runCommandLoopUntilExit().","lastModifiedDate":"2021-04-04"},{"lineNumber":844,"author":{"gitId":"AlexanderTanJunAn"},"content":"2. User input is the passed to NurseScheduleParser.nurseParse() which returns a Command Delete object.","lastModifiedDate":"2021-04-04"},{"lineNumber":845,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":846,"author":{"gitId":"AlexanderTanJunAn"},"content":"Deleting Schedule","lastModifiedDate":"2021-03-27"},{"lineNumber":847,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":848,"author":{"gitId":"AlexanderTanJunAn"},"content":"3. NurseSchedule then executes Command Delete object, which calls deleteSchedule() from NurseScheduleActions.","lastModifiedDate":"2021-04-04"},{"lineNumber":849,"author":{"gitId":"AlexanderTanJunAn"},"content":"3. deleteSchedule() loops through the arraylist of schedules and calls remove() to delete the specified schedule. ","lastModifiedDate":"2021-03-27"},{"lineNumber":850,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":851,"author":{"gitId":"blank-bank"},"content":"### **Doctor Appointment-related Features**","lastModifiedDate":"2021-03-26"},{"lineNumber":852,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":853,"author":{"gitId":"blank-bank"},"content":"[Implementation:]{.ul}","lastModifiedDate":"2021-03-26"},{"lineNumber":854,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":855,"author":{"gitId":"blank-bank"},"content":"1.  User executes command","lastModifiedDate":"2021-03-26"},{"lineNumber":856,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":857,"author":{"gitId":"blank-bank"},"content":"2.  Depending on the command, the Parser.java Class will determine which","lastModifiedDate":"2021-03-26"},{"lineNumber":858,"author":{"gitId":"blank-bank"},"content":"    \u003e method of Appointment Actions to call upon.","lastModifiedDate":"2021-03-26"},{"lineNumber":859,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":860,"author":{"gitId":"blank-bank"},"content":"3.  Commands includes add, list, delete, help and return.","lastModifiedDate":"2021-03-26"},{"lineNumber":861,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":862,"author":{"gitId":"blank-bank"},"content":"[Features:]{.ul}","lastModifiedDate":"2021-03-26"},{"lineNumber":863,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":864,"author":{"gitId":"blank-bank"},"content":"1.  add\\[Doctor ID\\] \\[Patient\u0027s Name\\] \\[Gender\\] \\[DDMMYYYY\\]:","lastModifiedDate":"2021-03-26"},{"lineNumber":865,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":866,"author":{"gitId":"blank-bank"},"content":"-   When the user inputs the command, the input will be parsed into","lastModifiedDate":"2021-03-26"},{"lineNumber":867,"author":{"gitId":"blank-bank"},"content":"    \u003e Parser.java, which will call upon addAppointment() method in the","lastModifiedDate":"2021-03-26"},{"lineNumber":868,"author":{"gitId":"blank-bank"},"content":"    \u003e AppointmentActions.java.","lastModifiedDate":"2021-03-26"},{"lineNumber":869,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":870,"author":{"gitId":"blank-bank"},"content":"-   Within the method, the string input would be split() into an","lastModifiedDate":"2021-03-26"},{"lineNumber":871,"author":{"gitId":"blank-bank"},"content":"    \u003e inputArray which will then create a new object of type","lastModifiedDate":"2021-03-26"},{"lineNumber":872,"author":{"gitId":"blank-bank"},"content":"    \u003e DoctorAppointment and added into the \\\u003cDoctorAppointment\\\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":873,"author":{"gitId":"blank-bank"},"content":"    \u003e ArrayList.","lastModifiedDate":"2021-03-26"},{"lineNumber":874,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":875,"author":{"gitId":"blank-bank"},"content":"2.  list \\[Doctor ID\\]:","lastModifiedDate":"2021-03-26"},{"lineNumber":876,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":877,"author":{"gitId":"blank-bank"},"content":"-   When a list command is called, it calls upon the listAppointment()","lastModifiedDate":"2021-03-26"},{"lineNumber":878,"author":{"gitId":"blank-bank"},"content":"    \u003e method in the AppointmentActions.java class.","lastModifiedDate":"2021-03-26"},{"lineNumber":879,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":880,"author":{"gitId":"blank-bank"},"content":"-   The input of the queried doctor ID is passed along as a string into","lastModifiedDate":"2021-03-26"},{"lineNumber":881,"author":{"gitId":"blank-bank"},"content":"    \u003e the stated method and it iterates through the ArrayList of saved","lastModifiedDate":"2021-03-26"},{"lineNumber":882,"author":{"gitId":"blank-bank"},"content":"    \u003e doctor\u0027s appointment with a for loop.","lastModifiedDate":"2021-03-26"},{"lineNumber":883,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":884,"author":{"gitId":"blank-bank"},"content":"-   Comparing if the Doctor ID while iterating is equals to the input","lastModifiedDate":"2021-03-26"},{"lineNumber":885,"author":{"gitId":"blank-bank"},"content":"    \u003e that is passed, the details of the Appointment - ID, Patient\u0027s","lastModifiedDate":"2021-03-26"},{"lineNumber":886,"author":{"gitId":"blank-bank"},"content":"    \u003e Name, Gender, Date, is printed out for the user.","lastModifiedDate":"2021-03-26"},{"lineNumber":887,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":888,"author":{"gitId":"blank-bank"},"content":"3.  delete \\[Appointment ID\\]:","lastModifiedDate":"2021-03-26"},{"lineNumber":889,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":890,"author":{"gitId":"blank-bank"},"content":"-   When the command delete is called. The Parser.java will recognise","lastModifiedDate":"2021-03-26"},{"lineNumber":891,"author":{"gitId":"blank-bank"},"content":"    \u003e the command and call upon deleteAppointment() method in the","lastModifiedDate":"2021-03-26"},{"lineNumber":892,"author":{"gitId":"blank-bank"},"content":"    \u003e AppointmentActions.java class.","lastModifiedDate":"2021-03-26"},{"lineNumber":893,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":894,"author":{"gitId":"blank-bank"},"content":"-   A variable \"index\" of default value 999 is initialised. A for loop","lastModifiedDate":"2021-03-26"},{"lineNumber":895,"author":{"gitId":"blank-bank"},"content":"    \u003e is then called upon to iterate through the current ArrayList of","lastModifiedDate":"2021-03-26"},{"lineNumber":896,"author":{"gitId":"blank-bank"},"content":"    \u003e doctor\u0027s appointment list to search for the ID that is equal to","lastModifiedDate":"2021-03-26"},{"lineNumber":897,"author":{"gitId":"blank-bank"},"content":"    \u003e the input.","lastModifiedDate":"2021-03-26"},{"lineNumber":898,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":899,"author":{"gitId":"blank-bank"},"content":"-   If there is a match, the variable index would be set to the","lastModifiedDate":"2021-03-26"},{"lineNumber":900,"author":{"gitId":"blank-bank"},"content":"    \u003e iteration in which the ID had been matched","lastModifiedDate":"2021-03-26"},{"lineNumber":901,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":902,"author":{"gitId":"blank-bank"},"content":"-   If the value of index remains at 999, the system recognise that","lastModifiedDate":"2021-03-26"},{"lineNumber":903,"author":{"gitId":"blank-bank"},"content":"    \u003e there is no matched ID in the system, else, the system would","lastModifiedDate":"2021-03-26"},{"lineNumber":904,"author":{"gitId":"blank-bank"},"content":"    \u003e remove the appointment details from the Doctor Appointment List","lastModifiedDate":"2021-03-26"},{"lineNumber":905,"author":{"gitId":"blank-bank"},"content":"    \u003e and call upon writeToFile() method from the storage class to","lastModifiedDate":"2021-03-26"},{"lineNumber":906,"author":{"gitId":"blank-bank"},"content":"    \u003e rewrite the file with the most current details.","lastModifiedDate":"2021-03-26"},{"lineNumber":907,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":908,"author":{"gitId":"blank-bank"},"content":"4.  help:","lastModifiedDate":"2021-03-26"},{"lineNumber":909,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":910,"author":{"gitId":"blank-bank"},"content":"-   When the command help is called. The Parser.java will recognise the","lastModifiedDate":"2021-03-26"},{"lineNumber":911,"author":{"gitId":"blank-bank"},"content":"    \u003e command and call upon helpAppointment() method in the","lastModifiedDate":"2021-03-26"},{"lineNumber":912,"author":{"gitId":"blank-bank"},"content":"    \u003e AppointmentActions.java class.","lastModifiedDate":"2021-03-26"},{"lineNumber":913,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":914,"author":{"gitId":"blank-bank"},"content":"-   The method calls upon doctorAppointmentHelp() method from the UI","lastModifiedDate":"2021-03-26"},{"lineNumber":915,"author":{"gitId":"blank-bank"},"content":"    \u003e class which will print the commands that are necessary for the","lastModifiedDate":"2021-03-26"},{"lineNumber":916,"author":{"gitId":"blank-bank"},"content":"    \u003e program.","lastModifiedDate":"2021-03-26"},{"lineNumber":917,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":918,"author":{"gitId":"blank-bank"},"content":"5.  return:","lastModifiedDate":"2021-03-26"},{"lineNumber":919,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":920,"author":{"gitId":"blank-bank"},"content":"-   When the command return is called, the Parser.java class returns a","lastModifiedDate":"2021-03-26"},{"lineNumber":921,"author":{"gitId":"blank-bank"},"content":"    \u003e boolean value of True instead of the default False.","lastModifiedDate":"2021-03-26"},{"lineNumber":922,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":923,"author":{"gitId":"blank-bank"},"content":"-   This will set the boolean variable, isReturnToStartMenu in the","lastModifiedDate":"2021-03-26"},{"lineNumber":924,"author":{"gitId":"blank-bank"},"content":"    \u003e DoctorAppointmentInstance.java class to True.","lastModifiedDate":"2021-03-26"},{"lineNumber":925,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":926,"author":{"gitId":"blank-bank"},"content":"-   This will prompt the program to return to the staff Menu as if when","lastModifiedDate":"2021-03-26"},{"lineNumber":927,"author":{"gitId":"blank-bank"},"content":"    \u003e the program first booted.","lastModifiedDate":"2021-03-26"},{"lineNumber":928,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":929,"author":{"gitId":"blank-bank"},"content":" ","lastModifiedDate":"2021-03-26"},{"lineNumber":930,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":931,"author":{"gitId":"blank-bank"},"content":"**Drugs-related features**","lastModifiedDate":"2021-03-26"},{"lineNumber":932,"author":{"gitId":"blank-bank"},"content":"--------------------------","lastModifiedDate":"2021-03-26"},{"lineNumber":933,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":934,"author":{"gitId":"blank-bank"},"content":"This feature can be accessed when the user inputs \"5\" into the terminal.","lastModifiedDate":"2021-03-26"},{"lineNumber":935,"author":{"gitId":"blank-bank"},"content":"The user will gain access to DrugParser, DrugStorage, and DrugActions.","lastModifiedDate":"2021-03-26"},{"lineNumber":936,"author":{"gitId":"blank-bank"},"content":"If data is found on the Drugs text file, it will be loaded into the","lastModifiedDate":"2021-03-26"},{"lineNumber":937,"author":{"gitId":"blank-bank"},"content":"arraylist, else a new text file is created. The purpose of this feature","lastModifiedDate":"2021-03-26"},{"lineNumber":938,"author":{"gitId":"blank-bank"},"content":"is to save a database of all the drugs in the inventory.","lastModifiedDate":"2021-03-26"},{"lineNumber":939,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":940,"author":{"gitId":"blank-bank"},"content":"[Implementation:]{.ul}","lastModifiedDate":"2021-03-26"},{"lineNumber":941,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":942,"author":{"gitId":"blank-bank"},"content":"User executes a command. Depending on the command, DrugInstance will","lastModifiedDate":"2021-03-26"},{"lineNumber":943,"author":{"gitId":"blank-bank"},"content":"call the relevant methods in DrugActions. DrugActions will either add,","lastModifiedDate":"2021-03-26"},{"lineNumber":944,"author":{"gitId":"blank-bank"},"content":"list or delete a Drug object.","lastModifiedDate":"2021-03-26"},{"lineNumber":945,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":946,"author":{"gitId":"blank-bank"},"content":"add\\[Drug name\\] \\[Price\\] \\[Quantity\\]:","lastModifiedDate":"2021-03-26"},{"lineNumber":947,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":948,"author":{"gitId":"blank-bank"},"content":"Getting User Input","lastModifiedDate":"2021-03-26"},{"lineNumber":949,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":950,"author":{"gitId":"blank-bank"},"content":"\u003e User input add command which is processed by DrugInstance.run().","lastModifiedDate":"2021-03-26"},{"lineNumber":951,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":952,"author":{"gitId":"blank-bank"},"content":"Creating Drug object with User Input","lastModifiedDate":"2021-03-26"},{"lineNumber":953,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":954,"author":{"gitId":"blank-bank"},"content":"\u003e DrugAction.addDrug() creates a new NurseSchedule object and is stored","lastModifiedDate":"2021-03-26"},{"lineNumber":955,"author":{"gitId":"NoorSarrah"},"content":"\u003e into an existing ArrayList\\\u003cDrug\\\u003e inventory which contains all the inventory","lastModifiedDate":"2021-03-30"},{"lineNumber":956,"author":{"gitId":"blank-bank"},"content":"\u003e objects.","lastModifiedDate":"2021-03-26"},{"lineNumber":957,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":958,"author":{"gitId":"blank-bank"},"content":"Saving Drug objects into .txt file","lastModifiedDate":"2021-03-26"},{"lineNumber":959,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":960,"author":{"gitId":"blank-bank"},"content":"\u003e The command loop then calls DrugStorage.writeToFile() which starts the","lastModifiedDate":"2021-03-26"},{"lineNumber":961,"author":{"gitId":"blank-bank"},"content":"\u003e process of writing details of all existing Drug objects within the","lastModifiedDate":"2021-03-26"},{"lineNumber":962,"author":{"gitId":"blank-bank"},"content":"\u003e ArrayList to the specified .txt file","lastModifiedDate":"2021-03-26"},{"lineNumber":963,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":964,"author":{"gitId":"blank-bank"},"content":"list \\[Drug name\\]:","lastModifiedDate":"2021-03-26"},{"lineNumber":965,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":966,"author":{"gitId":"blank-bank"},"content":"\u003e When the user inputs this command, the input will be parsed into","lastModifiedDate":"2021-03-26"},{"lineNumber":967,"author":{"gitId":"blank-bank"},"content":"\u003e Parser.java, which will call the DrugActions.listDrug() method in the","lastModifiedDate":"2021-03-26"},{"lineNumber":968,"author":{"gitId":"blank-bank"},"content":"\u003e DrugActions.java.","lastModifiedDate":"2021-03-26"},{"lineNumber":969,"author":{"gitId":"blank-bank"},"content":"\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":970,"author":{"gitId":"blank-bank"},"content":"\u003e The most updated database of drugs saved will be listed.","lastModifiedDate":"2021-03-26"},{"lineNumber":971,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":972,"author":{"gitId":"blank-bank"},"content":"delete \\[Drug name\\]:","lastModifiedDate":"2021-03-26"},{"lineNumber":973,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":974,"author":{"gitId":"blank-bank"},"content":"\u003e When the user inputs this command, the input will be parsed into","lastModifiedDate":"2021-03-26"},{"lineNumber":975,"author":{"gitId":"blank-bank"},"content":"\u003e Parser.java, which will call the DrugActions.deleteDrug() method in","lastModifiedDate":"2021-03-26"},{"lineNumber":976,"author":{"gitId":"blank-bank"},"content":"\u003e the DrugActions.java.","lastModifiedDate":"2021-03-26"},{"lineNumber":977,"author":{"gitId":"blank-bank"},"content":"\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":978,"author":{"gitId":"NoorSarrah"},"content":"\u003e Everything related to that specific inventory will be removed.","lastModifiedDate":"2021-03-30"},{"lineNumber":979,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":980,"author":{"gitId":"blank-bank"},"content":"help:","lastModifiedDate":"2021-03-26"},{"lineNumber":981,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":982,"author":{"gitId":"blank-bank"},"content":"\u003e When the user inputs this command, the input will be parsed into","lastModifiedDate":"2021-03-26"},{"lineNumber":983,"author":{"gitId":"blank-bank"},"content":"\u003e Parser.java, which will call the DrugUI.printHelpMessage() method in","lastModifiedDate":"2021-03-26"},{"lineNumber":984,"author":{"gitId":"blank-bank"},"content":"\u003e the DrugUI.java.","lastModifiedDate":"2021-03-26"},{"lineNumber":985,"author":{"gitId":"blank-bank"},"content":"\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":986,"author":{"gitId":"blank-bank"},"content":"\u003e The available features, add, list, delete, help, and return will be","lastModifiedDate":"2021-03-26"},{"lineNumber":987,"author":{"gitId":"blank-bank"},"content":"\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":988,"author":{"gitId":"blank-bank"},"content":"\u003e displayed for the user.","lastModifiedDate":"2021-03-26"},{"lineNumber":989,"author":{"gitId":"blank-bank"},"content":"\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":990,"author":{"gitId":"blank-bank"},"content":"\u003e The program will wait for the user to input one of the features.","lastModifiedDate":"2021-03-26"},{"lineNumber":991,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":992,"author":{"gitId":"blank-bank"},"content":"return:","lastModifiedDate":"2021-03-26"},{"lineNumber":993,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":994,"author":{"gitId":"blank-bank"},"content":"\u003e When the user inputs this command, the input will be parsed into","lastModifiedDate":"2021-03-26"},{"lineNumber":995,"author":{"gitId":"blank-bank"},"content":"\u003e Parser.java, it will bring the user back to the main menu of the","lastModifiedDate":"2021-03-26"},{"lineNumber":996,"author":{"gitId":"blank-bank"},"content":"\u003e program.","lastModifiedDate":"2021-03-26"},{"lineNumber":997,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":998,"author":{"gitId":"blank-bank"},"content":" ","lastModifiedDate":"2021-03-26"},{"lineNumber":999,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1000,"author":{"gitId":"blank-bank"},"content":"**Documentation, logging testing, configuration, dev-ops**","lastModifiedDate":"2021-03-26"},{"lineNumber":1001,"author":{"gitId":"blank-bank"},"content":"----------------------------------------------------------","lastModifiedDate":"2021-03-26"},{"lineNumber":1002,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1003,"author":{"gitId":"blank-bank"},"content":"### **Product scope**","lastModifiedDate":"2021-03-26"},{"lineNumber":1004,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1005,"author":{"gitId":"blank-bank"},"content":"**Target user profile:**","lastModifiedDate":"2021-03-26"},{"lineNumber":1006,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1007,"author":{"gitId":"blank-bank"},"content":"-   Has a need to manage a huge amount of data like medical records,","lastModifiedDate":"2021-03-26"},{"lineNumber":1008,"author":{"gitId":"blank-bank"},"content":"    \u003e schedules and doctor info","lastModifiedDate":"2021-03-26"},{"lineNumber":1009,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1010,"author":{"gitId":"blank-bank"},"content":"-   Prefers a no-frills functional app over other types","lastModifiedDate":"2021-03-26"},{"lineNumber":1011,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1012,"author":{"gitId":"blank-bank"},"content":"-   Can type reasonably fast and accurate","lastModifiedDate":"2021-03-26"},{"lineNumber":1013,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1014,"author":{"gitId":"blank-bank"},"content":"-   Does not need a mouse","lastModifiedDate":"2021-03-26"},{"lineNumber":1015,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1016,"author":{"gitId":"blank-bank"},"content":"-   Reasonably comfortable using CLI applications","lastModifiedDate":"2021-03-26"},{"lineNumber":1017,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1018,"author":{"gitId":"blank-bank"},"content":"**Value Proposition:** A hospital management system that is faster and","lastModifiedDate":"2021-03-26"},{"lineNumber":1019,"author":{"gitId":"blank-bank"},"content":"minimal compared to a typical GUI application","lastModifiedDate":"2021-03-26"},{"lineNumber":1020,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1021,"author":{"gitId":"blank-bank"},"content":"### User stories","lastModifiedDate":"2021-03-26"},{"lineNumber":1022,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1023,"author":{"gitId":"blank-bank"},"content":"  **Priority**   **As a\\...**   **I want to\\...**                                       **So that I can\\...**","lastModifiedDate":"2021-03-26"},{"lineNumber":1024,"author":{"gitId":"blank-bank"},"content":"  -------------- -------------- ------------------------------------------------------- --------------------------------------------------","lastModifiedDate":"2021-03-26"},{"lineNumber":1025,"author":{"gitId":"blank-bank"},"content":"  \\* \\* \\*       new user       quickly refer to usage instructions                     quickly get on track with the workflow","lastModifiedDate":"2021-03-26"},{"lineNumber":1026,"author":{"gitId":"blank-bank"},"content":"  \\* \\* \\*       user           add a new staff/patient                                 ","lastModifiedDate":"2021-03-26"},{"lineNumber":1027,"author":{"gitId":"blank-bank"},"content":"  \\* \\* \\*       user           delete staff/patients                                   remove entries i no longer need","lastModifiedDate":"2021-03-26"},{"lineNumber":1028,"author":{"gitId":"blank-bank"},"content":"  \\* \\* \\*       user           quickly look up schedules for both nurses and doctors   plan my schedule better","lastModifiedDate":"2021-03-26"},{"lineNumber":1029,"author":{"gitId":"NoorSarrah"},"content":"  \\* \\* \\*       user           quickly look up inventory inventories                        plan what and when to restock our inventory supplies","lastModifiedDate":"2021-03-30"},{"lineNumber":1030,"author":{"gitId":"blank-bank"},"content":"  \\*             user           have the program recognize slight errors in typing      have leeway working in a high-stress environment","lastModifiedDate":"2021-03-26"},{"lineNumber":1031,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1032,"author":{"gitId":"blank-bank"},"content":"### ","lastModifiedDate":"2021-03-26"},{"lineNumber":1033,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1034,"author":{"gitId":"blank-bank"},"content":"### Non-Functional Requirements","lastModifiedDate":"2021-03-26"},{"lineNumber":1035,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1036,"author":{"gitId":"blank-bank"},"content":"1.  Should work on any mainstream OS as long as it has Java 11 or above","lastModifiedDate":"2021-03-26"},{"lineNumber":1037,"author":{"gitId":"blank-bank"},"content":"    \u003e installed as cross-platform testing has been carried out","lastModifiedDate":"2021-03-26"},{"lineNumber":1038,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1039,"author":{"gitId":"blank-bank"},"content":"2.  Should be able to hold all details of hospitals max capacity without","lastModifiedDate":"2021-03-26"},{"lineNumber":1040,"author":{"gitId":"blank-bank"},"content":"    \u003e any noticeable decrease in performance","lastModifiedDate":"2021-03-26"},{"lineNumber":1041,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1042,"author":{"gitId":"blank-bank"},"content":"3.  User with average typing speed will be able to fulfil tasks faster","lastModifiedDate":"2021-03-26"},{"lineNumber":1043,"author":{"gitId":"blank-bank"},"content":"    \u003e than regular GUI application with mouse","lastModifiedDate":"2021-03-26"},{"lineNumber":1044,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1045,"author":{"gitId":"blank-bank"},"content":"Changed section: saved here just in case","lastModifiedDate":"2021-03-26"},{"lineNumber":1046,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1047,"author":{"gitId":"blank-bank"},"content":"[Features:]{.ul}","lastModifiedDate":"2021-03-26"},{"lineNumber":1048,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1049,"author":{"gitId":"blank-bank"},"content":"1.  Staff","lastModifiedDate":"2021-03-26"},{"lineNumber":1050,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1051,"author":{"gitId":"blank-bank"},"content":"-   Staff.Parser.run() method is called to instantiate a new instance of","lastModifiedDate":"2021-03-26"},{"lineNumber":1052,"author":{"gitId":"blank-bank"},"content":"    \u003e a command handler for staff related commands","lastModifiedDate":"2021-03-26"},{"lineNumber":1053,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1054,"author":{"gitId":"blank-bank"},"content":"2.  Patient","lastModifiedDate":"2021-03-26"},{"lineNumber":1055,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1056,"author":{"gitId":"blank-bank"},"content":"-   A new PatientCommandInstance object: (patient) is being instantiated","lastModifiedDate":"2021-03-26"},{"lineNumber":1057,"author":{"gitId":"blank-bank"},"content":"    \u003e with the variable \"PATIENT_FILE_PATH\" which is a constant that","lastModifiedDate":"2021-03-26"},{"lineNumber":1058,"author":{"gitId":"blank-bank"},"content":"    \u003e stores the location of patient save data","lastModifiedDate":"2021-03-26"},{"lineNumber":1059,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1060,"author":{"gitId":"blank-bank"},"content":"-   patient.run() is then called to run the instance of command handler","lastModifiedDate":"2021-03-26"},{"lineNumber":1061,"author":{"gitId":"blank-bank"},"content":"    \u003e for patient related commands","lastModifiedDate":"2021-03-26"},{"lineNumber":1062,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1063,"author":{"gitId":"blank-bank"},"content":"3.  Appointment","lastModifiedDate":"2021-03-26"},{"lineNumber":1064,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1065,"author":{"gitId":"blank-bank"},"content":"-   A new DoctorAppointmentInstance object: (appointments) is being","lastModifiedDate":"2021-03-26"},{"lineNumber":1066,"author":{"gitId":"blank-bank"},"content":"    \u003e instantiated with the variable \"APPOINTMENT_FILE_PATH\" which is a","lastModifiedDate":"2021-03-26"},{"lineNumber":1067,"author":{"gitId":"blank-bank"},"content":"    \u003e constant that stores the location of appointment save data","lastModifiedDate":"2021-03-26"},{"lineNumber":1068,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1069,"author":{"gitId":"blank-bank"},"content":"-   appointment.run() is then called to run the instance of command","lastModifiedDate":"2021-03-26"},{"lineNumber":1070,"author":{"gitId":"blank-bank"},"content":"    \u003e handler for appointment related commands","lastModifiedDate":"2021-03-26"},{"lineNumber":1071,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1072,"author":{"gitId":"blank-bank"},"content":"4.  Schedule","lastModifiedDate":"2021-03-26"},{"lineNumber":1073,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1074,"author":{"gitId":"blank-bank"},"content":"-   NurseScheduleInstance.main() is called to instantiate a new instance","lastModifiedDate":"2021-03-26"},{"lineNumber":1075,"author":{"gitId":"blank-bank"},"content":"    \u003e of a command handler for nurse schedule related commands","lastModifiedDate":"2021-03-26"},{"lineNumber":1076,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1077,"author":{"gitId":"blank-bank"},"content":"5.  Inventory","lastModifiedDate":"2021-03-26"},{"lineNumber":1078,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1079,"author":{"gitId":"blank-bank"},"content":"-   A new DrugInstance object: (addict) is being instantiated with the","lastModifiedDate":"2021-03-26"},{"lineNumber":1080,"author":{"gitId":"blank-bank"},"content":"    \u003e variable \"DRUG_FILE_PATH\" which is a constant that stores the","lastModifiedDate":"2021-03-26"},{"lineNumber":1081,"author":{"gitId":"blank-bank"},"content":"    \u003e location of inventory save data","lastModifiedDate":"2021-03-26"},{"lineNumber":1082,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1083,"author":{"gitId":"blank-bank"},"content":"-   addict.run() is then called to run the instance of command handler","lastModifiedDate":"2021-03-26"},{"lineNumber":1084,"author":{"gitId":"blank-bank"},"content":"    \u003e for inventory related commands","lastModifiedDate":"2021-03-26"},{"lineNumber":1085,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1086,"author":{"gitId":"blank-bank"},"content":"6.  Bye","lastModifiedDate":"2021-03-26"},{"lineNumber":1087,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1088,"author":{"gitId":"blank-bank"},"content":"-   Updates the value of the boolean variable \"isExit\" to \"true\".","lastModifiedDate":"2021-03-26"},{"lineNumber":1089,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1090,"author":{"gitId":"blank-bank"},"content":"7.  Help","lastModifiedDate":"2021-03-26"},{"lineNumber":1091,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1092,"author":{"gitId":"blank-bank"},"content":"-   Calls the method UI.printStartMenu to print a list of helpful","lastModifiedDate":"2021-03-26"},{"lineNumber":1093,"author":{"gitId":"blank-bank"},"content":"    \u003e commands for the user to view.","lastModifiedDate":"2021-03-26"},{"lineNumber":1094,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1095,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1096,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1097,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1098,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":1099,"author":{"gitId":"blank-bank"},"content":"\u003c!-- Original Template --\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":1100,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":1101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1102,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2020-05-24"},{"lineNumber":1103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1104,"author":{"gitId":"-"},"content":"{Describe the design and implementation of the product. Use UML diagrams and short code snippets where applicable.}","lastModifiedDate":"2020-05-24"},{"lineNumber":1105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1107,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":1108,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":1109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1110,"author":{"gitId":"-"},"content":"{Describe the target user profile}","lastModifiedDate":"2020-05-24"},{"lineNumber":1111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1112,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":1113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1114,"author":{"gitId":"-"},"content":"{Describe the value proposition: what problem does it solve?}","lastModifiedDate":"2020-05-24"},{"lineNumber":1115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1116,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":1117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1118,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":1119,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":1120,"author":{"gitId":"-"},"content":"|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|","lastModifiedDate":"2020-05-24"},{"lineNumber":1121,"author":{"gitId":"-"},"content":"|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|","lastModifiedDate":"2020-05-24"},{"lineNumber":1122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1123,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":1124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1125,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":1126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1127,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":1128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1129,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":1130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1131,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":1132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1133,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"NoorSarrah":3,"AlexanderTanJunAn":47,"-":34,"blank-bank":1049}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"# HealthVault User Guide","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"\u003cimg src\u003d\"images/HealthVaultLogo.png\" width \u003d \"200\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"## Opening Words","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":" Welcome to HealthVault application\u0027s User Guide!\t\t\t\t\t ","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":"The purpose of this User Guide is to assist you in the usage of the application. You will be able to utilize all the features of the HealthVault application to create the most efficient healthcare environment!","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"## Content Page","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"NoorSarrah"},"content":"1. [Introduction](#1-introduction)","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"\t1. [What is HealthVault?](#11-what-is-healthvault)","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"\t2. [About the User Guide](#12-about-the-user-guide)","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"2. [How to use this guide](#2-how-to-use-the-guide)","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"\t1. [Technical terms](#21-technical-terms)","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"\t2. [Symbols \u0026 Icons](#22-symbols--icons)","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"3. [Getting Started](#3-getting-started)","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"\t1. [Introduction to Command Line Interface (CLI)](#31-introduction-to-command-line-interface-cli)","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"\t2. [Installation Guide](#-32-installation-guide)","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"4. [Start Menu](#4-start-menu)","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":" \t1. [Interpreting help commands](#41-interpreting-help-commands)","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"5. [Features](#5-features)","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t1. [Staff](#51-staff)","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t2. [Patient](#52-patient)","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"\t3. [Doctor\u0027s Appointment](#53-doctors-appointment)","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t4. [Schedules for Nurses](#54-schedules-for-nurses)","lastModifiedDate":"2021-04-04"},{"lineNumber":30,"author":{"gitId":"AlexanderTanJunAn"},"content":"\t5. [Inventory](#55-inventory)","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"6. [FAQ](#6-faq)","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"7. [Command Summary](#7-command-summary)","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"AlexanderTanJunAn"},"content":"## 1. Introduction","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"### 1.1 What is HealthVault?","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"To save a life is the top priority of any healthcare worker. ","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"In such a precarious situation, every second matters and a Head Nurse cannot afford to waste time when they need to store or view critical information.","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":"Introducting HealthVault, a Head Nurse\u0027s personal information recording system. HealthVault is a desktop app for managing doctor, nurse, patient and inventory information, optimised for use through the command line interface. If the user can type fast, HealthVault brings both convenience and speed for a Head Nurse to view and store critical information.","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":"In this application there are 5 main features that are provided for the user. ","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"* **Staff:** Keeps record of and allows you to access staff information.","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"* **Patient:** Keeps record of and allows you to access patient information.","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"Chiamjiaen"},"content":"* **Doctor Appointments:** Keeps record of and allows you to create and view Doctor Appointments.","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"Chiamjiaen"},"content":"* **Nurse Schedules:** Keeps record of and allows you to create and view Nurse Schedules.","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"Chiamjiaen"},"content":"* **Inventory:** Keeps record of and allows you to view your current hospital inventory of supplies","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"Chiamjiaen"},"content":"Each feature can be accessed by accessing its specific menu. For example, the Patient details can be accessed by accessing the Patient Menu from the Start Menu.","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"Chiamjiaen"},"content":"### 1.2 About the User Guide","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"Chiamjiaen"},"content":"This user guide helps you to understand how to use the HealthVault application by introducing the various commands and interfaces to you.","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"Chiamjiaen"},"content":"Various helpful screenshots from the application also help to guide you through the application.","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"Chiamjiaen"},"content":"This user guide will cover the following:","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"Chiamjiaen"},"content":"* How to set up the application","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"Chiamjiaen"},"content":"* How to use Command Line Interface - CLI","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"Chiamjiaen"},"content":"* Helpful tips on how to use the guide","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"Chiamjiaen"},"content":"* How to use each of the features","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"Chiamjiaen"},"content":"* Frequently asked questions","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"blank-bank"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"blank-bank"},"content":"## 2. How to use the guide","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"blank-bank"},"content":"### 2.1 Technical Terms","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Command Line Interface** - Accessing the functionalities of a computer program in the form of lines of text.","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Graphical User Interface** - Allows users to interact with the functionalities of a computer program through graphical icons ","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; and audio indicators, instead of text-based user interfaces, typed command labels or text navigation.","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Case Sensitive** - Differentiating between capital and lower-case letters.","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **User Input** - Any information or data sent to a computer by the user using the application.","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Alphanumeric** - Consisting of only alphabets and numerals.","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Delimiter** - A character that seperates different sections of a text or input","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":85,"author":{"gitId":"blank-bank"},"content":"### 2.2 Symbols \u0026 Icons","lastModifiedDate":"2021-04-01"},{"lineNumber":86,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **[]** - Square brackets for compulsory user inputs.","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **\u003c\u003e** - Angled quotation marks for optional user inputs.","lastModifiedDate":"2021-04-01"},{"lineNumber":90,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":91,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":92,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; :information_source: This icon denotes a important information to note.","lastModifiedDate":"2021-04-01"},{"lineNumber":93,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":94,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; :exclamation: Warning sign to inform user against doing certain actions ","lastModifiedDate":"2021-04-01"},{"lineNumber":95,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":96,"author":{"gitId":"blank-bank"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":97,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":98,"author":{"gitId":"Chiamjiaen"},"content":"## 3. Getting Started","lastModifiedDate":"2021-04-04"},{"lineNumber":99,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":100,"author":{"gitId":"blank-bank"},"content":"### 3.1 Introduction to Command Line Interface (CLI)","lastModifiedDate":"2021-04-01"},{"lineNumber":101,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":102,"author":{"gitId":"Chiamjiaen"},"content":"HealthVault uses the Command Line Interface (CLI) to run. And CLI is primary input method for interacting with HealthVault.","lastModifiedDate":"2021-04-01"},{"lineNumber":103,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":104,"author":{"gitId":"blank-bank"},"content":"As CLI is not commonly used, this section hopes to orientate you with the CLI environment if you are new, and acts as a refresher for returning users.","lastModifiedDate":"2021-04-01"},{"lineNumber":105,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":106,"author":{"gitId":"Chiamjiaen"},"content":"CLI takes in a user input from the input marker as shown in the image included below. The red arrow points to where the users input will appear.","lastModifiedDate":"2021-04-01"},{"lineNumber":107,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":108,"author":{"gitId":"Chiamjiaen"},"content":"\u003cimg src\u003d\"images/CLIimage.jpg\" \u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":109,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":110,"author":{"gitId":"blank-bank"},"content":"After keying in their input, the most common way to enter the response into the system is to press the \u003ckbd\u003eEnter\u003c/kbd\u003e key for the command to be registered.","lastModifiedDate":"2021-04-01"},{"lineNumber":111,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":113,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":114,"author":{"gitId":"Chiamjiaen"},"content":"### \u003ca name\u003d\"section2\"\u003e 3.2 Installation Guide","lastModifiedDate":"2021-04-04"},{"lineNumber":115,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"AlexanderTanJunAn"},"content":"1. Ensure system has Java 11","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"AlexanderTanJunAn"},"content":"2. Download the latest JAR file from this [website](https://github.com/AY2021S2-CS2113T-F08-2/tp/releases)","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"AlexanderTanJunAn"},"content":"3. Open the command window ","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"AlexanderTanJunAn"},"content":"   - Click the search icon in the bottom left side of the screen ","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"AlexanderTanJunAn"},"content":"   - Type ‘command prompt’ in the search bar","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"AlexanderTanJunAn"},"content":"   - Select the application called ‘Command Prompt’","lastModifiedDate":"2021-03-29"},{"lineNumber":124,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"blank-bank"},"content":"4. `cd` into the folder containing the JAR file","lastModifiedDate":"2021-04-01"},{"lineNumber":126,"author":{"gitId":"AlexanderTanJunAn"},"content":"   - Locate the file path of the JAR file that you have downloaded","lastModifiedDate":"2021-03-29"},{"lineNumber":127,"author":{"gitId":"blank-bank"},"content":"   - For example:  (C:\\Users\\JohnDoe\\Downloads), where JohnDoe is the user’s name","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"AlexanderTanJunAn"},"content":"   - Then, run the following command: `cd [File Path]`","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"AlexanderTanJunAn"},"content":"   - Example: `cd C:\\Users\\JohnDoe\\Downloads`","lastModifiedDate":"2021-03-29"},{"lineNumber":130,"author":{"gitId":"Chiamjiaen"},"content":"   - Run the following command: `java -jar [JAR file name]`","lastModifiedDate":"2021-04-04"},{"lineNumber":131,"author":{"gitId":"AlexanderTanJunAn"},"content":"  ","lastModifiedDate":"2021-03-29"},{"lineNumber":132,"author":{"gitId":"blank-bank"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":133,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":134,"author":{"gitId":"blank-bank"},"content":"## 4. Start Menu","lastModifiedDate":"2021-04-01"},{"lineNumber":135,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":136,"author":{"gitId":"blank-bank"},"content":"The Start Menu is the first menu you will encounter upon running the application after following the installation guide in [section 3](#section3). ","lastModifiedDate":"2021-04-01"},{"lineNumber":137,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":138,"author":{"gitId":"blank-bank"},"content":"Here is an example of how the welcome screen of HealthVault will look like.","lastModifiedDate":"2021-04-01"},{"lineNumber":139,"author":{"gitId":"blank-bank"},"content":"\u003cimg src\u003d\"images/Start Menu.PNG\" \u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":140,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":141,"author":{"gitId":"blank-bank"},"content":"The Start Menu allows you to access various Menus in the application based on the feature that you would like to access.","lastModifiedDate":"2021-04-01"},{"lineNumber":142,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"blank-bank"},"content":"For example, the Staff Menu allows you to access the Staff feature within the database. ","lastModifiedDate":"2021-04-01"},{"lineNumber":144,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":145,"author":{"gitId":"blank-bank"},"content":"The welcome screen of HealthVault presents you with the basic commands and a description of their functionalities.","lastModifiedDate":"2021-04-01"},{"lineNumber":146,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":147,"author":{"gitId":"blank-bank"},"content":"Input any command to access the respective features and input the `exit` command to quit the application.","lastModifiedDate":"2021-04-01"},{"lineNumber":148,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":149,"author":{"gitId":"blank-bank"},"content":"### 4.1 Interpreting help commands","lastModifiedDate":"2021-04-01"},{"lineNumber":150,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":151,"author":{"gitId":"AlexanderTanJunAn"},"content":":information_source: All instances of commands and code will be highlighted in grey and will have a different font.","lastModifiedDate":"2021-03-29"},{"lineNumber":152,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":153,"author":{"gitId":"blank-bank"},"content":"This is an example of a typical help command in the application.","lastModifiedDate":"2021-04-01"},{"lineNumber":154,"author":{"gitId":"blank-bank"},"content":"\u003cimg src\u003d\"images/StaffHelp.PNG\" \u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":155,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":156,"author":{"gitId":"blank-bank"},"content":"The **Commands** column gives the command that allows you to accomplish a certain action with the relevant features. ","lastModifiedDate":"2021-04-01"},{"lineNumber":157,"author":{"gitId":"blank-bank"},"content":"For example, the `add` command allows you to add a new staff and their relevant details into the database.","lastModifiedDate":"2021-04-01"},{"lineNumber":158,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":159,"author":{"gitId":"blank-bank"},"content":"The **Description** column gives you an explaination on the usage and purpose of the command.","lastModifiedDate":"2021-04-01"},{"lineNumber":160,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":161,"author":{"gitId":"blank-bank"},"content":"The **Format** column gives the appropriate format for you to use the command.","lastModifiedDate":"2021-04-01"},{"lineNumber":162,"author":{"gitId":"blank-bank"},"content":"For example, the `add` format requires specific details regarding the staff that will be added into the database.","lastModifiedDate":"2021-04-01"},{"lineNumber":163,"author":{"gitId":"blank-bank"},"content":"The \u0027-\u0027 in the format column specifies that the command can be used alone without any additional details.","lastModifiedDate":"2021-04-01"},{"lineNumber":164,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":165,"author":{"gitId":"blank-bank"},"content":"The detailed explaination of each command will be explained in the subsequent sections.","lastModifiedDate":"2021-04-01"},{"lineNumber":166,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":167,"author":{"gitId":"blank-bank"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":169,"author":{"gitId":"NoorSarrah"},"content":"## 5. Features ","lastModifiedDate":"2021-03-31"},{"lineNumber":170,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":171,"author":{"gitId":"blank-bank"},"content":" :exclamation: WARNING: You are recommended not to edit any text files generated by HealthVault manually. ","lastModifiedDate":"2021-04-01"},{"lineNumber":172,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":173,"author":{"gitId":"NoorSarrah"},"content":"### 5.1 Staff","lastModifiedDate":"2021-03-31"},{"lineNumber":174,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":175,"author":{"gitId":"NoorSarrah"},"content":"The functions in Staff menu allow you, the head nurse, to access and modify the details of each staff in the hospital. ","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"NoorSarrah"},"content":"(Note for Staff ID: D/N \u003d Doctor/Nurse)","lastModifiedDate":"2021-03-31"},{"lineNumber":177,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":178,"author":{"gitId":"blank-bank"},"content":"This is an example of the welcome screen for Staff Menu.","lastModifiedDate":"2021-04-01"},{"lineNumber":179,"author":{"gitId":"blank-bank"},"content":"\u003cimg src\u003d\"images/StaffWelcome.PNG\" width \u003d \"850\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":180,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":181,"author":{"gitId":"blank-bank"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":182,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":183,"author":{"gitId":"NoorSarrah"},"content":"#### Adding a new staff: `add`","lastModifiedDate":"2021-03-31"},{"lineNumber":184,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Adds a new doctor or nurse to the respective staff lists. ","lastModifiedDate":"2021-04-01"},{"lineNumber":185,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":186,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Format**:","lastModifiedDate":"2021-04-01"},{"lineNumber":187,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":188,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `add/[Staff ID]/[Name]/[Age]/[Specialisation]` ","lastModifiedDate":"2021-04-01"},{"lineNumber":189,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":190,"author":{"gitId":"blank-bank"},"content":"\u003e:information_source: Important notes about the input format","lastModifiedDate":"2021-04-01"},{"lineNumber":191,"author":{"gitId":"Chiamjiaen"},"content":"\u003e1. Make sure that the inputted user ID starts with a D (for doctor ID) or N (for nurse ID)  and has **exactly** 5 digits in the number following!","lastModifiedDate":"2021-04-04"},{"lineNumber":192,"author":{"gitId":"blank-bank"},"content":"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":193,"author":{"gitId":"blank-bank"},"content":"\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example**: `N12345`, `D54321`","lastModifiedDate":"2021-04-01"},{"lineNumber":194,"author":{"gitId":"blank-bank"},"content":"\u003e   ","lastModifiedDate":"2021-04-01"},{"lineNumber":195,"author":{"gitId":"Chiamjiaen"},"content":"\u003e2. Any input field in HealthVault only accepts space and alphanumeric characters","lastModifiedDate":"2021-04-04"},{"lineNumber":196,"author":{"gitId":"Chiamjiaen"},"content":"\u003e3. The age field input should be a positive integer starting from 0 but less than 150","lastModifiedDate":"2021-04-04"},{"lineNumber":197,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":198,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":199,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example of usage**:\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":200,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":201,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Adding a Pediatrician Doctor MingShun with Staff ID of D12345 of age 30","lastModifiedDate":"2021-04-01"},{"lineNumber":202,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":203,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ``` Staff --\u003e add/D12345/MingShun/30/Pediatrician```","lastModifiedDate":"2021-04-01"},{"lineNumber":204,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":205,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome**:","lastModifiedDate":"2021-04-01"},{"lineNumber":206,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":207,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003cimg src\u003d\"images/StaffAdd.PNG\" width \u003d \"850\" \u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":208,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":209,"author":{"gitId":"blank-bank"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":210,"author":{"gitId":"blank-bank"},"content":" ","lastModifiedDate":"2021-04-01"},{"lineNumber":211,"author":{"gitId":"NoorSarrah"},"content":"#### Deleting a staff: `delete`","lastModifiedDate":"2021-03-31"},{"lineNumber":212,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":213,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Deletes a staff from the staff list.","lastModifiedDate":"2021-04-01"},{"lineNumber":214,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":215,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Format**:","lastModifiedDate":"2021-04-01"},{"lineNumber":216,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":217,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `delete/[Staff ID]`","lastModifiedDate":"2021-04-01"},{"lineNumber":218,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":219,"author":{"gitId":"blank-bank"},"content":"\u003e:information_source: Important notes about the input format","lastModifiedDate":"2021-04-01"},{"lineNumber":220,"author":{"gitId":"Chiamjiaen"},"content":"\u003e1. Make sure that the inputted user ID starts with a D (for doctor ID) or N (for nurse ID)  and has **exactly** 5 digits in the number following! ","lastModifiedDate":"2021-04-04"},{"lineNumber":221,"author":{"gitId":"blank-bank"},"content":"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":222,"author":{"gitId":"blank-bank"},"content":"\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example**: `N12345`, `D54321`","lastModifiedDate":"2021-04-01"},{"lineNumber":223,"author":{"gitId":"blank-bank"},"content":"\u003e   ","lastModifiedDate":"2021-04-01"},{"lineNumber":224,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":225,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example of usage**:","lastModifiedDate":"2021-04-01"},{"lineNumber":226,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":227,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Deleting Staff with ID D12345.","lastModifiedDate":"2021-04-01"},{"lineNumber":228,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":229,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ```Staff --\u003e delete/D12345 ```","lastModifiedDate":"2021-04-01"},{"lineNumber":230,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":231,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome**:","lastModifiedDate":"2021-04-01"},{"lineNumber":232,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":233,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u003cimg src\u003d\"images/StaffDelete.PNG\" width \u003d \"850\" \u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":234,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":235,"author":{"gitId":"blank-bank"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":236,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":237,"author":{"gitId":"NoorSarrah"},"content":"#### Listing all doctors or nurses: `list`","lastModifiedDate":"2021-03-31"},{"lineNumber":238,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Lists either all doctors or all nurses.","lastModifiedDate":"2021-04-01"},{"lineNumber":239,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":240,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Format**:","lastModifiedDate":"2021-04-01"},{"lineNumber":241,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":242,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `list/\u003cdoctors/nurses\u003e`","lastModifiedDate":"2021-04-01"},{"lineNumber":243,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":244,"author":{"gitId":"blank-bank"},"content":"\u003e:information_source: Important notes about the input format","lastModifiedDate":"2021-04-01"},{"lineNumber":245,"author":{"gitId":"blank-bank"},"content":"\u003e1. \u003c\u003e implies that the inputs are optional","lastModifiedDate":"2021-04-01"},{"lineNumber":246,"author":{"gitId":"blank-bank"},"content":"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":247,"author":{"gitId":"blank-bank"},"content":"\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example**: `list`, `list/doctors`","lastModifiedDate":"2021-04-01"},{"lineNumber":248,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":249,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example of usage (doctors)**:","lastModifiedDate":"2021-04-01"},{"lineNumber":250,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":251,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; List all Doctors Details.","lastModifiedDate":"2021-04-01"},{"lineNumber":252,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":253,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ```Staff --\u003e list/doctors ```","lastModifiedDate":"2021-04-01"},{"lineNumber":254,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":255,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome (doctors)**:","lastModifiedDate":"2021-04-01"},{"lineNumber":256,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":257,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u003cimg src\u003d\"images/StaffListDoc.PNG\" width \u003d \"850\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":258,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":259,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":260,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example of usage (nurses)**:","lastModifiedDate":"2021-04-01"},{"lineNumber":261,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":262,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; List all Nurses Details.","lastModifiedDate":"2021-04-01"},{"lineNumber":263,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":264,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ```Staff --\u003e list/nurses ```","lastModifiedDate":"2021-04-01"},{"lineNumber":265,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":266,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome (nurses)**:","lastModifiedDate":"2021-04-01"},{"lineNumber":267,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":268,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u003cimg src\u003d\"images/StaffListNurse.PNG\" width \u003d \"850\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":269,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":270,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":271,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example of usage (no input)**:","lastModifiedDate":"2021-04-01"},{"lineNumber":272,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":273,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; List all Staff Details.","lastModifiedDate":"2021-04-01"},{"lineNumber":274,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":275,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ```Staff --\u003e list```","lastModifiedDate":"2021-04-01"},{"lineNumber":276,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":277,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome(no input)**:","lastModifiedDate":"2021-04-01"},{"lineNumber":278,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":279,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u003cimg src\u003d\"images/StaffList.PNG\" width \u003d \"850\" \u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":280,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":281,"author":{"gitId":"blank-bank"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":282,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":283,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":284,"author":{"gitId":"blank-bank"},"content":"#### Finding a staff: `find`","lastModifiedDate":"2021-04-01"},{"lineNumber":285,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Find a staff from the staff list with a keyword.","lastModifiedDate":"2021-04-01"},{"lineNumber":286,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":287,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Format**:","lastModifiedDate":"2021-04-01"},{"lineNumber":288,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":289,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `find/[keyword]`","lastModifiedDate":"2021-04-01"},{"lineNumber":290,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":291,"author":{"gitId":"blank-bank"},"content":"\u003e:information_source: Important notes about the input format","lastModifiedDate":"2021-04-01"},{"lineNumber":292,"author":{"gitId":"blank-bank"},"content":"\u003e1. Any keyword input will be searched through every field of Staff details. i.e. It can be used to search Staff ID, name, age and specialisation.","lastModifiedDate":"2021-04-01"},{"lineNumber":293,"author":{"gitId":"blank-bank"},"content":"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":294,"author":{"gitId":"blank-bank"},"content":"\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example**: `find/19`, `find/D12345`","lastModifiedDate":"2021-04-01"},{"lineNumber":295,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":296,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example of usage**:","lastModifiedDate":"2021-04-01"},{"lineNumber":297,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":298,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Find all Staff with Oncology specialisation.","lastModifiedDate":"2021-04-01"},{"lineNumber":299,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":300,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ```Staff --\u003e find/Oncology```","lastModifiedDate":"2021-04-01"},{"lineNumber":301,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":302,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome**:","lastModifiedDate":"2021-04-01"},{"lineNumber":303,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":304,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003cimg src\u003d\"images/StaffFind.PNG\" width \u003d \"850\" \u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":305,"author":{"gitId":"blank-bank"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":306,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":307,"author":{"gitId":"NoorSarrah"},"content":"#### Returning to Start Menu: `return`","lastModifiedDate":"2021-03-31"},{"lineNumber":308,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":309,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Return you to the Start Menu.","lastModifiedDate":"2021-04-01"},{"lineNumber":310,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":311,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome**:","lastModifiedDate":"2021-04-01"},{"lineNumber":312,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":313,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u003cimg src\u003d\"images/StaffReturn.PNG\" width \u003d \"850\" \u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":314,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":315,"author":{"gitId":"NoorSarrah"},"content":"#### Help: `help`","lastModifiedDate":"2021-03-31"},{"lineNumber":316,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":317,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Display the commands for the Staff Menu.","lastModifiedDate":"2021-04-01"},{"lineNumber":318,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":319,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome**:","lastModifiedDate":"2021-04-01"},{"lineNumber":320,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":321,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u003cimg src\u003d\"images/StaffHelp.PNG\" width \u003d \"850\" \u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":322,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":323,"author":{"gitId":"blank-bank"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":324,"author":{"gitId":"NoorSarrah"},"content":"### 5.2 Patient","lastModifiedDate":"2021-03-31"},{"lineNumber":325,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":326,"author":{"gitId":"NoorSarrah"},"content":"The functions in the Patient menu allow you, the head nurse, to add, view, find, and delete patients in the patient list.","lastModifiedDate":"2021-03-31"},{"lineNumber":327,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":328,"author":{"gitId":"Chiamjiaen"},"content":"When you first enter the Patient menu, you will be greeted with the following welcome message.","lastModifiedDate":"2021-04-01"},{"lineNumber":329,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":330,"author":{"gitId":"Chiamjiaen"},"content":"\u003cimg src \u003d \"images/PatientWelcome.PNG\" width \u003d \"850\" \u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":331,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":332,"author":{"gitId":"Chiamjiaen"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":333,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":334,"author":{"gitId":"NoorSarrah"},"content":"#### Adding a new patient: `add`","lastModifiedDate":"2021-03-31"},{"lineNumber":335,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Adds a new patient to the patient list.","lastModifiedDate":"2021-04-01"},{"lineNumber":336,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":337,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Format**: ","lastModifiedDate":"2021-04-01"},{"lineNumber":338,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":339,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `add/[Patient ID]/[Name]/[Age]/[Gender]/[Illness]/[Drugs needed]`","lastModifiedDate":"2021-04-01"},{"lineNumber":340,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":341,"author":{"gitId":"Chiamjiaen"},"content":"\u003e:information_source: Important notes about the input format","lastModifiedDate":"2021-04-01"},{"lineNumber":342,"author":{"gitId":"Chiamjiaen"},"content":"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":343,"author":{"gitId":"Chiamjiaen"},"content":"\u003e1. Make sure that the inputted user ID starts with a P and has **exactly** 5 digits in the number following! ","lastModifiedDate":"2021-04-04"},{"lineNumber":344,"author":{"gitId":"blank-bank"},"content":"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":345,"author":{"gitId":"blank-bank"},"content":"\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example**: `P12345`, `P54321`","lastModifiedDate":"2021-04-01"},{"lineNumber":346,"author":{"gitId":"blank-bank"},"content":"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":347,"author":{"gitId":"Chiamjiaen"},"content":"\u003e2. Any input field in HealthVault only accepts space and alphanumeric characters","lastModifiedDate":"2021-04-04"},{"lineNumber":348,"author":{"gitId":"Chiamjiaen"},"content":"\u003e3. The gender field input should only be \"M\", \"F\" or \"Others\"","lastModifiedDate":"2021-04-01"},{"lineNumber":349,"author":{"gitId":"Chiamjiaen"},"content":"\u003e4. The age field input should be a positive integer starting from 0 but less than 150","lastModifiedDate":"2021-04-04"},{"lineNumber":350,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":351,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example of usage**:","lastModifiedDate":"2021-04-01"},{"lineNumber":352,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":353,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Adding a Patient Sam (Age 40, Male who is having a fever and needs Paracetamol) with the Patient ID of P55555. ","lastModifiedDate":"2021-04-01"},{"lineNumber":354,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":355,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ``` Patient --\u003e add/P55555/Sam/40/M/Fever/Paracetamol```","lastModifiedDate":"2021-04-01"},{"lineNumber":356,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":357,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome**:","lastModifiedDate":"2021-04-01"},{"lineNumber":358,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":359,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003cimg src \u003d \"images/PatientAdd.jpg\" width \u003d \"850\" \u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":360,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":361,"author":{"gitId":"Chiamjiaen"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":362,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":363,"author":{"gitId":"NoorSarrah"},"content":"#### Deleting a patient: `delete`","lastModifiedDate":"2021-03-31"},{"lineNumber":364,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Deletes a patient from the patient list.","lastModifiedDate":"2021-04-01"},{"lineNumber":365,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":366,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Format**: ","lastModifiedDate":"2021-04-01"},{"lineNumber":367,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":368,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `delete/[Patient ID]`","lastModifiedDate":"2021-04-01"},{"lineNumber":369,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":370,"author":{"gitId":"Chiamjiaen"},"content":"\u003e:information_source: Important notes about the input format","lastModifiedDate":"2021-04-01"},{"lineNumber":371,"author":{"gitId":"Chiamjiaen"},"content":"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":372,"author":{"gitId":"Chiamjiaen"},"content":"\u003e1. Make sure that the inputted user ID starts with a P and has **exactly** 5 digits in the number following! ","lastModifiedDate":"2021-04-04"},{"lineNumber":373,"author":{"gitId":"blank-bank"},"content":"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":374,"author":{"gitId":"blank-bank"},"content":"\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example**: `P12345`, `P54321`","lastModifiedDate":"2021-04-01"},{"lineNumber":375,"author":{"gitId":"blank-bank"},"content":"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":376,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":377,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example of usage**:","lastModifiedDate":"2021-04-01"},{"lineNumber":378,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":379,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ```Patient --\u003e delete/P55555```","lastModifiedDate":"2021-04-01"},{"lineNumber":380,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":381,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome**:","lastModifiedDate":"2021-04-01"},{"lineNumber":382,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":383,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003cimg src \u003d \"images/PatientDelete.PNG\" width \u003d \"850\" \u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":384,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":385,"author":{"gitId":"Chiamjiaen"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":386,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":387,"author":{"gitId":"NoorSarrah"},"content":"#### Listing all patients: `list`","lastModifiedDate":"2021-03-31"},{"lineNumber":388,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":389,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Lists all patients in the patient list.","lastModifiedDate":"2021-04-01"},{"lineNumber":390,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":391,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Format**: ","lastModifiedDate":"2021-04-01"},{"lineNumber":392,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":393,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `list`","lastModifiedDate":"2021-04-01"},{"lineNumber":394,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":395,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example of usage**:","lastModifiedDate":"2021-04-01"},{"lineNumber":396,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":397,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ``` Staff --\u003e list```","lastModifiedDate":"2021-04-01"},{"lineNumber":398,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":399,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome**:","lastModifiedDate":"2021-04-01"},{"lineNumber":400,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":401,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003cimg src \u003d \"images/PatientList.jpg\" width \u003d \"850\" \u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":402,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":403,"author":{"gitId":"Chiamjiaen"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":404,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":405,"author":{"gitId":"NoorSarrah"},"content":"#### Finding a patient: `find`","lastModifiedDate":"2021-03-31"},{"lineNumber":406,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Finds a patient currently in the patient list.","lastModifiedDate":"2021-04-01"},{"lineNumber":407,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":408,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Format**: ","lastModifiedDate":"2021-04-01"},{"lineNumber":409,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":410,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `find/[Keyword/Phrase]`","lastModifiedDate":"2021-04-01"},{"lineNumber":411,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":412,"author":{"gitId":"Chiamjiaen"},"content":"\u003e:information_source: Important notes about the input format","lastModifiedDate":"2021-04-01"},{"lineNumber":413,"author":{"gitId":"blank-bank"},"content":"\u003e1. Any keyword input will be searched through every field of Patient details. i.e. It can be used to search Patient ID, name, age, illness, medication required.","lastModifiedDate":"2021-04-01"},{"lineNumber":414,"author":{"gitId":"Chiamjiaen"},"content":"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":415,"author":{"gitId":"blank-bank"},"content":"\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example**: `find/19`, `find/P12345`","lastModifiedDate":"2021-04-01"},{"lineNumber":416,"author":{"gitId":"Chiamjiaen"},"content":"\u003e ","lastModifiedDate":"2021-04-04"},{"lineNumber":417,"author":{"gitId":"Chiamjiaen"},"content":"\u003e The keyword input can be case insensitive and still find matches in the database.","lastModifiedDate":"2021-04-04"},{"lineNumber":418,"author":{"gitId":"Chiamjiaen"},"content":"\u003e ","lastModifiedDate":"2021-04-04"},{"lineNumber":419,"author":{"gitId":"Chiamjiaen"},"content":"\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example**: `find/john` is able to match with a name field \"John\" or \"JOHN\"","lastModifiedDate":"2021-04-04"},{"lineNumber":420,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":421,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example of usage**:","lastModifiedDate":"2021-04-01"},{"lineNumber":422,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":423,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Finding through inputting the ID","lastModifiedDate":"2021-04-01"},{"lineNumber":424,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":425,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ``` Patient --\u003e find/P54321```","lastModifiedDate":"2021-04-01"},{"lineNumber":426,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":427,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome**:","lastModifiedDate":"2021-04-01"},{"lineNumber":428,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":429,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003cimg src \u003d \"images/PatientFindID.jpg\" width \u003d \"850\" \u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":430,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":431,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example of usage**:","lastModifiedDate":"2021-04-01"},{"lineNumber":432,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":433,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Finding through inputting the name","lastModifiedDate":"2021-04-01"},{"lineNumber":434,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":435,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ``` Patient --\u003e find/Sam```","lastModifiedDate":"2021-04-01"},{"lineNumber":436,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":437,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome**:","lastModifiedDate":"2021-04-01"},{"lineNumber":438,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":439,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003cimg src \u003d \"images/PatientFindName.jpg\" width \u003d \"850\" \u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":440,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":441,"author":{"gitId":"Chiamjiaen"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":442,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":443,"author":{"gitId":"NoorSarrah"},"content":"#### Help: `help`","lastModifiedDate":"2021-03-31"},{"lineNumber":444,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":445,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Display the commands for the Staff Menu.","lastModifiedDate":"2021-04-01"},{"lineNumber":446,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":447,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome**:","lastModifiedDate":"2021-04-01"},{"lineNumber":448,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":449,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003cimg src\u003d\"images/PatientHelp.jpg\" width \u003d \"850\" \u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":450,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":451,"author":{"gitId":"Chiamjiaen"},"content":"#### Returning to Start Menu: `return`","lastModifiedDate":"2021-04-01"},{"lineNumber":452,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":453,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Return you to the Start Menu.","lastModifiedDate":"2021-04-01"},{"lineNumber":454,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":455,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome**:","lastModifiedDate":"2021-04-01"},{"lineNumber":456,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":457,"author":{"gitId":"blank-bank"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003cimg src\u003d\"images/PatientReturn.PNG\" width \u003d \"850\" \u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":458,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":459,"author":{"gitId":"blank-bank"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":460,"author":{"gitId":"NoorSarrah"},"content":"### 5.3 Doctor\u0027s Appointment","lastModifiedDate":"2021-03-31"},{"lineNumber":461,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":462,"author":{"gitId":"NoorSarrah"},"content":"The functions in the Doctor\u0027s Appointment menu allow you, the head nurse, to add, view, and delete appointments made with a specific doctor.","lastModifiedDate":"2021-03-31"},{"lineNumber":463,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":464,"author":{"gitId":"MingShun98"},"content":"This is an example of the welcome screen for Doctors\u0027 Appointments Menu.","lastModifiedDate":"2021-04-01"},{"lineNumber":465,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":466,"author":{"gitId":"MingShun98"},"content":"\u003cimg src\u003d\"images/DoctorAppointmentWelcome.jpg\" width \u003d \"800\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":467,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":468,"author":{"gitId":"blank-bank"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":469,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":470,"author":{"gitId":"NoorSarrah"},"content":"#### Adding an appointment: `add`","lastModifiedDate":"2021-03-31"},{"lineNumber":471,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Adds a new doctor\u0027s appointment to the list of appointments.","lastModifiedDate":"2021-04-01"},{"lineNumber":472,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":473,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Format**:","lastModifiedDate":"2021-04-01"},{"lineNumber":474,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":475,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `add/[Doctor ID]/[Appointment ID]/[Patient’s Name]/[Gender]/[DDMMYYYY]` ","lastModifiedDate":"2021-04-01"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":477,"author":{"gitId":"MingShun98"},"content":"\u003e:information_source: Important notes about the input format","lastModifiedDate":"2021-04-01"},{"lineNumber":478,"author":{"gitId":"Chiamjiaen"},"content":"\u003e1. Make sure that the inputted doctor/appointment ID starts with a D/A and have **exactly** 5 digits in the number following! ","lastModifiedDate":"2021-04-04"},{"lineNumber":479,"author":{"gitId":"MingShun98"},"content":"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":480,"author":{"gitId":"MingShun98"},"content":"\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example**: `D12345`, `A54321`","lastModifiedDate":"2021-04-01"},{"lineNumber":481,"author":{"gitId":"MingShun98"},"content":"\u003e   ","lastModifiedDate":"2021-04-01"},{"lineNumber":482,"author":{"gitId":"blank-bank"},"content":"\u003e2. Any input fields in HealthVault only accepts space and alphanumeric characters","lastModifiedDate":"2021-04-01"},{"lineNumber":483,"author":{"gitId":"MingShun98"},"content":"\u003e3. The gender field input should only be \"M\", \"F\".","lastModifiedDate":"2021-04-01"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":485,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":486,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example of usage**:\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":487,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":488,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Adding an appointment for Alex, a male, with Doctor ID D12345 on 21/01/2021.","lastModifiedDate":"2021-04-01"},{"lineNumber":489,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":490,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ``` Appointments --\u003e add/D12345/A12345/Alex/M/21012021```","lastModifiedDate":"2021-04-01"},{"lineNumber":491,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":492,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome**:","lastModifiedDate":"2021-04-01"},{"lineNumber":493,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":494,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003cimg src\u003d\"images/DoctorAppointmentAdd.jpg\" width \u003d \"800\" \u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":495,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":496,"author":{"gitId":"MingShun98"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":497,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":498,"author":{"gitId":"MingShun98"},"content":"#### Deleting an appointment: `delete`","lastModifiedDate":"2021-04-01"},{"lineNumber":499,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Deletes an appointment from the list of appointments or deletes all appointments belonging to a doctor.","lastModifiedDate":"2021-04-01"},{"lineNumber":500,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":501,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Format**:","lastModifiedDate":"2021-04-01"},{"lineNumber":502,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":503,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `delete/[DoctorID/ Appointment ID]` ","lastModifiedDate":"2021-04-01"},{"lineNumber":504,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":505,"author":{"gitId":"MingShun98"},"content":"\u003e:information_source: Important notes about the input format","lastModifiedDate":"2021-04-01"},{"lineNumber":506,"author":{"gitId":"Chiamjiaen"},"content":"\u003e1. Make sure that the inputted doctor/appointment ID starts with a D/A and have **exactly** 5 digits in the number following! ","lastModifiedDate":"2021-04-04"},{"lineNumber":507,"author":{"gitId":"MingShun98"},"content":"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":508,"author":{"gitId":"MingShun98"},"content":"\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example**: `D12345`, `A54321`","lastModifiedDate":"2021-04-01"},{"lineNumber":509,"author":{"gitId":"MingShun98"},"content":"\u003e ","lastModifiedDate":"2021-04-01"},{"lineNumber":510,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":511,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example of usage (Doctor ID)**:\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":512,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":513,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Deleting all Appointments for Doctor with ID D12345.","lastModifiedDate":"2021-04-01"},{"lineNumber":514,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":515,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ``` Appointments --\u003e delete/D12345```","lastModifiedDate":"2021-04-01"},{"lineNumber":516,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":517,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome**:","lastModifiedDate":"2021-04-01"},{"lineNumber":518,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":519,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003cimg src\u003d\"images/DoctorAppointmentDeleteDocID.jpg\" width \u003d \"800\" \u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":520,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":521,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example of usage (Appointment ID)**:\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":522,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":523,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Deleting the Appointment with ID A12346","lastModifiedDate":"2021-04-01"},{"lineNumber":524,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":525,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ``` Appointments --\u003e delete/A12346```","lastModifiedDate":"2021-04-01"},{"lineNumber":526,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":527,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome**:","lastModifiedDate":"2021-04-01"},{"lineNumber":528,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":529,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003cimg src\u003d\"images/DoctorAppointmentDeleteAptID.jpg\" width \u003d \"800\" \u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":530,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":531,"author":{"gitId":"MingShun98"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":532,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":533,"author":{"gitId":"MingShun98"},"content":"#### Listing an appointment: `list`","lastModifiedDate":"2021-04-01"},{"lineNumber":534,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Lists all of the appointments of a specific doctor or list an individual appointment.","lastModifiedDate":"2021-04-01"},{"lineNumber":535,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":536,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Format**:","lastModifiedDate":"2021-04-01"},{"lineNumber":537,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":538,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `list/[DoctorID/ Appointment ID]` ","lastModifiedDate":"2021-04-01"},{"lineNumber":539,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":540,"author":{"gitId":"MingShun98"},"content":"\u003e:information_source: Important notes about the input format","lastModifiedDate":"2021-04-01"},{"lineNumber":541,"author":{"gitId":"Chiamjiaen"},"content":"\u003e1. Make sure that the inputted doctor/appointment ID starts with a D/A and have **exactly** 5 digits in the number following! ","lastModifiedDate":"2021-04-04"},{"lineNumber":542,"author":{"gitId":"MingShun98"},"content":"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":543,"author":{"gitId":"MingShun98"},"content":"\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example**: `D12345`, `A54321`","lastModifiedDate":"2021-04-01"},{"lineNumber":544,"author":{"gitId":"MingShun98"},"content":"\u003e ","lastModifiedDate":"2021-04-01"},{"lineNumber":545,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":546,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example of usage (Doctor ID)**:\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":547,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":548,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Listing all Appointments for Doctor with ID D12345.","lastModifiedDate":"2021-04-01"},{"lineNumber":549,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":550,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ``` Appointments --\u003e list/D12345```","lastModifiedDate":"2021-04-01"},{"lineNumber":551,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":552,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome**:","lastModifiedDate":"2021-04-01"},{"lineNumber":553,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":554,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003cimg src\u003d\"images/DoctorAppointmentListDocID.jpg\" width \u003d \"800\" \u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":555,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":556,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example of usage (Appointment ID)**:\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":557,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":558,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; List the Appointment with ID A12345","lastModifiedDate":"2021-04-01"},{"lineNumber":559,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":560,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ``` Appointments --\u003e list/A12345```","lastModifiedDate":"2021-04-01"},{"lineNumber":561,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":562,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome**:","lastModifiedDate":"2021-04-01"},{"lineNumber":563,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":564,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003cimg src\u003d\"images/DoctorAppointmentListAptID.jpg\" width \u003d \"800\" \u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":565,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":566,"author":{"gitId":"MingShun98"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":567,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":568,"author":{"gitId":"MingShun98"},"content":"#### Returns to Start Menu: `return`","lastModifiedDate":"2021-04-01"},{"lineNumber":569,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Returning to the Main Menu from the Doctor Appointment\u0027s Menu.","lastModifiedDate":"2021-04-01"},{"lineNumber":570,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":571,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome**:","lastModifiedDate":"2021-04-01"},{"lineNumber":572,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":573,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003cimg src\u003d\"images/DoctorAppointmentReturn.jpg\" width \u003d \"800\" \u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":574,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":575,"author":{"gitId":"MingShun98"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":576,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":577,"author":{"gitId":"MingShun98"},"content":"#### Help: `help`","lastModifiedDate":"2021-04-01"},{"lineNumber":578,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Display the commands for the Doctor Appointment\u0027s Menu.","lastModifiedDate":"2021-04-01"},{"lineNumber":579,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":580,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome**:","lastModifiedDate":"2021-04-01"},{"lineNumber":581,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":582,"author":{"gitId":"MingShun98"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003cimg src\u003d\"images/DoctorAppointmentHelp.jpg\" width \u003d \"850\" \u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":583,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":584,"author":{"gitId":"MingShun98"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":585,"author":{"gitId":"AlexanderTanJunAn"},"content":"### 5.4 Schedules for Nurses","lastModifiedDate":"2021-04-04"},{"lineNumber":586,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":587,"author":{"gitId":"NoorSarrah"},"content":"The functions in the Nurse Schedule menu allow you, the head nurse, to add, view, and delete schedules of your nurses.","lastModifiedDate":"2021-03-31"},{"lineNumber":588,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":589,"author":{"gitId":"AlexanderTanJunAn"},"content":"This is an example of the welcome screen for the Nurse Schedule Menu.","lastModifiedDate":"2021-04-01"},{"lineNumber":590,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u003cimg src\u003d\"images/NurseScheduleStartScreen.png\" width \u003d \"600\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":591,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":592,"author":{"gitId":"AlexanderTanJunAn"},"content":"#### Adding a new schedule: `add`","lastModifiedDate":"2021-03-28"},{"lineNumber":593,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":594,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Adds a new schedule to the list of nurse schedules.","lastModifiedDate":"2021-04-01"},{"lineNumber":595,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":596,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Format**: ","lastModifiedDate":"2021-04-01"},{"lineNumber":597,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":598,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  `add/[Nurse ID]/[Patient ID]/[Date (DDMMYYYY)]`","lastModifiedDate":"2021-04-01"},{"lineNumber":599,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":600,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u003e:information_source: Important notes about the input format","lastModifiedDate":"2021-04-01"},{"lineNumber":601,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u003e1. Make sure Nurse ID exists in Staff and Patient ID exists in Patients before adding.","lastModifiedDate":"2021-04-04"},{"lineNumber":602,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u003e2. Make sure that the inputted user ID starts with a N for Nurse, P for Patient and have **exactly** 5 digits in the number following! ","lastModifiedDate":"2021-04-04"},{"lineNumber":603,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":604,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example**: `N12345`, `P54321`","lastModifiedDate":"2021-04-01"},{"lineNumber":605,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":606,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u003e3. Any input fields in HealthVault only accepts space and alphanumeric characters.","lastModifiedDate":"2021-04-04"},{"lineNumber":607,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u003e4. HealhVault currently only allows the adding of **1** schedule per patient per day.","lastModifiedDate":"2021-04-04"},{"lineNumber":608,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":609,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example of usage**:\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":610,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":611,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Adding a schedule for Nurse ID N12345 to visit P12345 on 30/01/2020","lastModifiedDate":"2021-04-01"},{"lineNumber":612,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":613,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ``` NSchedule --\u003e add/N12345/P12345/30012020 ```","lastModifiedDate":"2021-04-03"},{"lineNumber":614,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":615,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome**:","lastModifiedDate":"2021-04-01"},{"lineNumber":616,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":617,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003cimg src\u003d\"images/NurseScheduleAdd.png\" width \u003d \"500\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":618,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":619,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":620,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":621,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":622,"author":{"gitId":"NoorSarrah"},"content":"#### Deleting a schedule: `delete`","lastModifiedDate":"2021-03-31"},{"lineNumber":623,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Deletes a schedule from the list of nurse schedules.","lastModifiedDate":"2021-04-01"},{"lineNumber":624,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":625,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Format**: ","lastModifiedDate":"2021-04-01"},{"lineNumber":626,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":627,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `delete/[Nurse ID]/[Date (DDMMYYYY)]`","lastModifiedDate":"2021-04-01"},{"lineNumber":628,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":629,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u003e:information_source: Important notes about the input format","lastModifiedDate":"2021-04-01"},{"lineNumber":630,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":631,"author":{"gitId":"Chiamjiaen"},"content":"\u003e1. Make sure that the inputted Nurse ID starts with a N for Nurse, and have **exactly** 5 digits in the number following! ","lastModifiedDate":"2021-04-04"},{"lineNumber":632,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":633,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example**: `N12345`, `P54321`","lastModifiedDate":"2021-04-01"},{"lineNumber":634,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":635,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u003e2. HealthVault only accepts valid Date inputs.","lastModifiedDate":"2021-04-01"},{"lineNumber":636,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":637,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example of usage**:","lastModifiedDate":"2021-04-01"},{"lineNumber":638,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":639,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Deletes a schedule with the specified Nurse ID and Date.","lastModifiedDate":"2021-04-01"},{"lineNumber":640,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":641,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ``` NSchedule --\u003e delete/N12345/30012020 ```","lastModifiedDate":"2021-04-03"},{"lineNumber":642,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":643,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome**:","lastModifiedDate":"2021-04-01"},{"lineNumber":644,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":645,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003cimg src\u003d\"images/NurseScheduleDelete.png\" width \u003d \"550\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":646,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":647,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":648,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":649,"author":{"gitId":"AlexanderTanJunAn"},"content":"#### Listing schedules: `list`","lastModifiedDate":"2021-03-28"},{"lineNumber":650,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; List either all schedules or specified Nurse ID\u0027s schedule.","lastModifiedDate":"2021-04-01"},{"lineNumber":651,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":652,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Format**: ","lastModifiedDate":"2021-04-01"},{"lineNumber":653,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; `list/[Nurse ID/all]`","lastModifiedDate":"2021-04-01"},{"lineNumber":654,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":655,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u003e:information_source: Important notes about the input format","lastModifiedDate":"2021-04-01"},{"lineNumber":656,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":657,"author":{"gitId":"Chiamjiaen"},"content":"\u003e1. Make sure that the inputted Nurse ID starts with a N for Nurse, and have **exactly** 5 digits in the number following! ","lastModifiedDate":"2021-04-04"},{"lineNumber":658,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":659,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example**: `N12345`, `P54321`","lastModifiedDate":"2021-04-01"},{"lineNumber":660,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":661,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example of usage(Nurse ID)**:","lastModifiedDate":"2021-04-01"},{"lineNumber":662,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":663,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Listing all schedules of specified Nurse ID.","lastModifiedDate":"2021-04-01"},{"lineNumber":664,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":665,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ``` NSchedule --\u003e list/N12345 ```","lastModifiedDate":"2021-04-01"},{"lineNumber":666,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":667,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome(Nurse ID)**:","lastModifiedDate":"2021-04-01"},{"lineNumber":668,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":669,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u003cimg src\u003d\"images/NurseScheduleListNurseID.png\" width \u003d \"550\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":670,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":671,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":672,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":673,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example of usage(all)**:","lastModifiedDate":"2021-04-01"},{"lineNumber":674,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":675,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Listing all schedules.","lastModifiedDate":"2021-04-01"},{"lineNumber":676,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":677,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ``` NSchedule --\u003e list/all ```","lastModifiedDate":"2021-04-01"},{"lineNumber":678,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":679,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome(all)**:","lastModifiedDate":"2021-04-01"},{"lineNumber":680,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":681,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003cimg src\u003d\"images/NurseScheduleListAll.png\" width \u003d \"550\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":683,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":684,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":685,"author":{"gitId":"NoorSarrah"},"content":"#### Returning to Start Menu: `return`","lastModifiedDate":"2021-03-31"},{"lineNumber":686,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":687,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Returns to Start Menu.","lastModifiedDate":"2021-04-01"},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":689,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome**:","lastModifiedDate":"2021-04-01"},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":691,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003cimg src\u003d\"images/NurseScheduleReturn.png\" width \u003d \"250\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":693,"author":{"gitId":"AlexanderTanJunAn"},"content":"#### Help: `help`","lastModifiedDate":"2021-04-01"},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":695,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Prints Nurse Schedule help message.","lastModifiedDate":"2021-04-01"},{"lineNumber":696,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":697,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome**:","lastModifiedDate":"2021-04-01"},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":699,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003cimg src\u003d\"images/NurseScheduleHelp.png\" width \u003d \"850\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":700,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":701,"author":{"gitId":"AlexanderTanJunAn"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":702,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":703,"author":{"gitId":"NoorSarrah"},"content":"### 5.5 Inventory","lastModifiedDate":"2021-03-31"},{"lineNumber":704,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":705,"author":{"gitId":"NoorSarrah"},"content":"The functions in the Inventory menu allow you, the head nurse, to add, view, and delete drugs existing in your inventory.","lastModifiedDate":"2021-03-31"},{"lineNumber":706,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":707,"author":{"gitId":"NoorSarrah"},"content":"This is an example of the welcome screen for the Nurse Schedule Menu.","lastModifiedDate":"2021-04-01"},{"lineNumber":708,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":709,"author":{"gitId":"blank-bank"},"content":"\u003cimg src\u003d\"images/InventoryWelcomeHeader.PNG\" width \u003d \"600\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":710,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":711,"author":{"gitId":"NoorSarrah"},"content":"#### Adding a drug: `add`","lastModifiedDate":"2021-03-31"},{"lineNumber":712,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":713,"author":{"gitId":"NoorSarrah"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Adds a drug to the drug inventory.","lastModifiedDate":"2021-04-01"},{"lineNumber":714,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":715,"author":{"gitId":"NoorSarrah"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Format**: ","lastModifiedDate":"2021-04-01"},{"lineNumber":716,"author":{"gitId":"NoorSarrah"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  `add/[Name]/[Price]/[Quantity]`","lastModifiedDate":"2021-04-01"},{"lineNumber":717,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":718,"author":{"gitId":"NoorSarrah"},"content":"\u003e:information_source: Important notes about the input format","lastModifiedDate":"2021-04-01"},{"lineNumber":719,"author":{"gitId":"NoorSarrah"},"content":"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":720,"author":{"gitId":"NoorSarrah"},"content":"\u003e1. Make sure that the inputted price is valid!","lastModifiedDate":"2021-04-01"},{"lineNumber":721,"author":{"gitId":"NoorSarrah"},"content":"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":722,"author":{"gitId":"NoorSarrah"},"content":"\u003e \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example**: `3`, `3.0`, `3.00`","lastModifiedDate":"2021-04-01"},{"lineNumber":723,"author":{"gitId":"NoorSarrah"},"content":"\u003e   ","lastModifiedDate":"2021-04-01"},{"lineNumber":724,"author":{"gitId":"blank-bank"},"content":"\u003e2. Any input fields in HealthVault only accepts space and alphanumeric characters","lastModifiedDate":"2021-04-01"},{"lineNumber":725,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":726,"author":{"gitId":"NoorSarrah"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example of usage**:","lastModifiedDate":"2021-04-01"},{"lineNumber":727,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":728,"author":{"gitId":"NoorSarrah"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ```Inventory --\u003e add/paracetamol/3/90```","lastModifiedDate":"2021-04-01"},{"lineNumber":729,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":730,"author":{"gitId":"NoorSarrah"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome**:","lastModifiedDate":"2021-04-01"},{"lineNumber":731,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":732,"author":{"gitId":"NoorSarrah"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003cimg src\u003d\"images/InventoryAdd.PNG\" width \u003d \"600\"\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":733,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":734,"author":{"gitId":"NoorSarrah"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":735,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":736,"author":{"gitId":"NoorSarrah"},"content":"#### Deleting a drug: `delete`","lastModifiedDate":"2021-03-31"},{"lineNumber":737,"author":{"gitId":"NoorSarrah"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Deletes a drug from the inventory list.","lastModifiedDate":"2021-04-01"},{"lineNumber":738,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":739,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":740,"author":{"gitId":"NoorSarrah"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Format**: ","lastModifiedDate":"2021-04-01"},{"lineNumber":741,"author":{"gitId":"NoorSarrah"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  `delete/[Name]`","lastModifiedDate":"2021-04-01"},{"lineNumber":742,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":743,"author":{"gitId":"NoorSarrah"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example of usage**:","lastModifiedDate":"2021-04-01"},{"lineNumber":744,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":745,"author":{"gitId":"NoorSarrah"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ```Inventory --\u003e delete/paracetamol```","lastModifiedDate":"2021-04-01"},{"lineNumber":746,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":747,"author":{"gitId":"NoorSarrah"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome**:","lastModifiedDate":"2021-04-01"},{"lineNumber":748,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":749,"author":{"gitId":"NoorSarrah"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003cimg src\u003d\"images/InventoryDelete.PNG\" width \u003d \"600\"\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":750,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":751,"author":{"gitId":"NoorSarrah"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":752,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":753,"author":{"gitId":"NoorSarrah"},"content":"#### Listing drugs: `list`","lastModifiedDate":"2021-03-31"},{"lineNumber":754,"author":{"gitId":"NoorSarrah"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Lists all the drugs in the inventory.","lastModifiedDate":"2021-04-01"},{"lineNumber":755,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":756,"author":{"gitId":"NoorSarrah"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Format**: ","lastModifiedDate":"2021-04-01"},{"lineNumber":757,"author":{"gitId":"NoorSarrah"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  `list`","lastModifiedDate":"2021-04-01"},{"lineNumber":758,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":759,"author":{"gitId":"NoorSarrah"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Example of usage**:","lastModifiedDate":"2021-04-01"},{"lineNumber":760,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":761,"author":{"gitId":"NoorSarrah"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ```Inventory --\u003e list```","lastModifiedDate":"2021-04-01"},{"lineNumber":762,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":763,"author":{"gitId":"NoorSarrah"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome**:","lastModifiedDate":"2021-04-01"},{"lineNumber":764,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":765,"author":{"gitId":"NoorSarrah"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003cimg src\u003d\"images/InventoryList.PNG\" width \u003d \"600\"\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":766,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":767,"author":{"gitId":"NoorSarrah"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":768,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":769,"author":{"gitId":"NoorSarrah"},"content":"#### Returning to Start Menu: `return`","lastModifiedDate":"2021-03-31"},{"lineNumber":770,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":771,"author":{"gitId":"NoorSarrah"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Returns to Start Menu.","lastModifiedDate":"2021-04-01"},{"lineNumber":772,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":773,"author":{"gitId":"NoorSarrah"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome**:","lastModifiedDate":"2021-04-01"},{"lineNumber":774,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":775,"author":{"gitId":"NoorSarrah"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003cimg src\u003d\"images/InventoryReturn.PNG\" width \u003d \"600\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":776,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":777,"author":{"gitId":"NoorSarrah"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":778,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":779,"author":{"gitId":"NoorSarrah"},"content":"#### Help: `help`","lastModifiedDate":"2021-03-31"},{"lineNumber":780,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":781,"author":{"gitId":"NoorSarrah"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Prints Inventory help message.","lastModifiedDate":"2021-04-01"},{"lineNumber":782,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":783,"author":{"gitId":"NoorSarrah"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; **Expected Outcome**:","lastModifiedDate":"2021-04-01"},{"lineNumber":784,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":785,"author":{"gitId":"NoorSarrah"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003cimg src\u003d\"images/InventoryHelpFinal.PNG\" width \u003d \"600\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":786,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":787,"author":{"gitId":"blank-bank"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":788,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":789,"author":{"gitId":"NoorSarrah"},"content":"## 6. FAQ","lastModifiedDate":"2021-03-31"},{"lineNumber":790,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":791,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":792,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":793,"author":{"gitId":"blank-bank"},"content":"**A**: Navigate to where the TP jar file is located and identify the data folder. Simply copy this data folder and transfer it via thumbdrive or other means to your other computer. When setting up the jar file in a new folder in your other computer, move the data folder into the new folder in which you have set up the jar before starting the application. You\u0027re now good to go to start accessing the data on your new computer!","lastModifiedDate":"2021-04-01"},{"lineNumber":794,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":795,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":796,"author":{"gitId":"blank-bank"},"content":"**Q**: Why is HealthVault telling me there is a Corrupted File?","lastModifiedDate":"2021-04-01"},{"lineNumber":797,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":798,"author":{"gitId":"Chiamjiaen"},"content":"**A**: Corrupted Files are a result of editing the text file manually and causing unpermissible inputs into the data fields. As a result HealthVault is unable process and retrieve the data.","lastModifiedDate":"2021-04-04"},{"lineNumber":799,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":800,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":801,"author":{"gitId":"blank-bank"},"content":"**Q**: What do i do when HealthVault tells me there is a Corrupted File?","lastModifiedDate":"2021-04-01"},{"lineNumber":802,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":803,"author":{"gitId":"blank-bank"},"content":"**A**: First, exit the HealthVault application. Then locate the relevant .txt file that is corrupted. Either delete the .txt file, or edit the .txt file so that it matches the required input fields that is accepted by HealthVault. Finally relaunch the HealthVault application.","lastModifiedDate":"2021-04-01"},{"lineNumber":804,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":805,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":806,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":807,"author":{"gitId":"blank-bank"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":808,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":809,"author":{"gitId":"NoorSarrah"},"content":"## 7. Command Summary","lastModifiedDate":"2021-03-31"},{"lineNumber":810,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":811,"author":{"gitId":"AlexanderTanJunAn"},"content":"| Command             | Example                                                                                                    |","lastModifiedDate":"2021-03-29"},{"lineNumber":812,"author":{"gitId":"AlexanderTanJunAn"},"content":"|---------------------|------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2021-03-29"},{"lineNumber":813,"author":{"gitId":"AlexanderTanJunAn"},"content":"| **Start Menu**      |                                                                                                            |","lastModifiedDate":"2021-03-29"},{"lineNumber":814,"author":{"gitId":"AlexanderTanJunAn"},"content":"| staff               | `staff`                                                                                                    |","lastModifiedDate":"2021-03-29"},{"lineNumber":815,"author":{"gitId":"AlexanderTanJunAn"},"content":"| patient             | `patient`                                                                                                  |","lastModifiedDate":"2021-03-29"},{"lineNumber":816,"author":{"gitId":"AlexanderTanJunAn"},"content":"| appointments        | `appointments`                                                                                             |","lastModifiedDate":"2021-03-29"},{"lineNumber":817,"author":{"gitId":"AlexanderTanJunAn"},"content":"| schedules           | `schedules`                                                                                                |","lastModifiedDate":"2021-03-29"},{"lineNumber":818,"author":{"gitId":"AlexanderTanJunAn"},"content":"| inventory           | `inventory`                                                                                                |","lastModifiedDate":"2021-03-29"},{"lineNumber":819,"author":{"gitId":"AlexanderTanJunAn"},"content":"| help                | `help`                                                                                                     |","lastModifiedDate":"2021-03-29"},{"lineNumber":820,"author":{"gitId":"AlexanderTanJunAn"},"content":"| **Staff**           |                                                                                                            |","lastModifiedDate":"2021-03-29"},{"lineNumber":821,"author":{"gitId":"AlexanderTanJunAn"},"content":"| add                 | `add/[Staff ID]/[Name]/[Age]/[Specialisation]`\u003cbr/\u003e\u003cbr/\u003e`add/D12345/A12345/Alex/M 21012021`                |","lastModifiedDate":"2021-03-29"},{"lineNumber":822,"author":{"gitId":"AlexanderTanJunAn"},"content":"| delete              | `delete/[Staff ID]`\u003cbr/\u003e\u003cbr/\u003e`delete/D12345`                                                               |","lastModifiedDate":"2021-03-29"},{"lineNumber":823,"author":{"gitId":"blank-bank"},"content":"| find\t\t      | `find/[keyword]`\u003cbr/\u003e\u003cbr/\u003e`find/D12345` \t\t\t\t\t\t\t\t   |","lastModifiedDate":"2021-04-01"},{"lineNumber":824,"author":{"gitId":"AlexanderTanJunAn"},"content":"| list                | `list`                                                                                                     |","lastModifiedDate":"2021-03-29"},{"lineNumber":825,"author":{"gitId":"AlexanderTanJunAn"},"content":"| help                | `help`                                                                                                     |","lastModifiedDate":"2021-03-29"},{"lineNumber":826,"author":{"gitId":"AlexanderTanJunAn"},"content":"| return              | `return`                                                                                                   |","lastModifiedDate":"2021-03-29"},{"lineNumber":827,"author":{"gitId":"AlexanderTanJunAn"},"content":"| **Patient**         |                                                                                                            |","lastModifiedDate":"2021-03-29"},{"lineNumber":828,"author":{"gitId":"AlexanderTanJunAn"},"content":"| add                 | `add/[Patient ID]/[Name] [Age]/[Gender]/[Illness]/[Drugs needed]`\u003cbr/\u003e\u003cbr/\u003e`add/P55555/Sam/40/Male Fever/Paracetamol`   |","lastModifiedDate":"2021-03-29"},{"lineNumber":829,"author":{"gitId":"AlexanderTanJunAn"},"content":"| delete              | `delete/[Patient ID]`\u003cbr/\u003e\u003cbr/\u003e`delete/P55555`                                                                          |","lastModifiedDate":"2021-03-29"},{"lineNumber":830,"author":{"gitId":"blank-bank"},"content":"| find                | `find/[keyword]`\u003cbr/\u003e\u003cbr/\u003e`find/P55555`                                                                              |","lastModifiedDate":"2021-04-01"},{"lineNumber":831,"author":{"gitId":"AlexanderTanJunAn"},"content":"| list                | `list`                                                                                                     |","lastModifiedDate":"2021-03-29"},{"lineNumber":832,"author":{"gitId":"AlexanderTanJunAn"},"content":"| help                | `help`                                                                                                     |","lastModifiedDate":"2021-03-29"},{"lineNumber":833,"author":{"gitId":"AlexanderTanJunAn"},"content":"| return              | `return`                                                                                                   |","lastModifiedDate":"2021-03-29"},{"lineNumber":834,"author":{"gitId":"AlexanderTanJunAn"},"content":"| **Doctor Appointments** |                                                                                                        |","lastModifiedDate":"2021-03-29"},{"lineNumber":835,"author":{"gitId":"MingShun98"},"content":"| add                 | `add/[Doctor ID]/[Appointment ID]/[Patient’s Name]/[Gender]/[DDMMYYYY]`\u003cbr/\u003e\u003cbr/\u003e`add/D12345/A12345/Mingshun/M/19082021`    |","lastModifiedDate":"2021-04-01"},{"lineNumber":836,"author":{"gitId":"MingShun98"},"content":"| delete              | `delete/[Doctor ID/Appointment ID]` \u003cbr/\u003e\u003cbr/\u003e`delete/D12345`\u003cbr/\u003e\u003cbr/\u003e`delete/A12345`                      |","lastModifiedDate":"2021-04-01"},{"lineNumber":837,"author":{"gitId":"MingShun98"},"content":"| list                | `list/[Doctor ID/Appointment ID]` \u003cbr/\u003e\u003cbr/\u003e`list/D12345`\u003cbr/\u003e\u003cbr/\u003e`list/A12345`\t\t\t     \t   |","lastModifiedDate":"2021-04-01"},{"lineNumber":838,"author":{"gitId":"AlexanderTanJunAn"},"content":"| help                | `help`                                                                                                     |","lastModifiedDate":"2021-03-29"},{"lineNumber":839,"author":{"gitId":"AlexanderTanJunAn"},"content":"| return              | `return`                                                                                                   |","lastModifiedDate":"2021-03-29"},{"lineNumber":840,"author":{"gitId":"AlexanderTanJunAn"},"content":"| **Nurse Schedules** |                                                                                                            |","lastModifiedDate":"2021-03-29"},{"lineNumber":841,"author":{"gitId":"AlexanderTanJunAn"},"content":"| add                 | `add/[Nurse ID]/[Patient ID]/[DDMMYYYY]`\u003cbr/\u003e\u003cbr/\u003e`add/N12345/P56789/30012020`                             |","lastModifiedDate":"2021-03-29"},{"lineNumber":842,"author":{"gitId":"AlexanderTanJunAn"},"content":"| delete              | `delete/[Nurse ID]/[DDMMYYYY]`\u003cbr/\u003e\u003cbr/\u003e`delete/N12345/30012020`                                           |","lastModifiedDate":"2021-03-29"},{"lineNumber":843,"author":{"gitId":"AlexanderTanJunAn"},"content":"| list                | `list/[Nurse ID/all]`\u003cbr/\u003e\u003cbr/\u003e`list/N12345/list/all`                                                      |","lastModifiedDate":"2021-03-29"},{"lineNumber":844,"author":{"gitId":"AlexanderTanJunAn"},"content":"| help                | `help`                                                                                                     |","lastModifiedDate":"2021-03-29"},{"lineNumber":845,"author":{"gitId":"AlexanderTanJunAn"},"content":"| return              | `return`                                                                                                   |","lastModifiedDate":"2021-03-29"},{"lineNumber":846,"author":{"gitId":"AlexanderTanJunAn"},"content":"| **Drugs Inventory** |                                                                                                            |","lastModifiedDate":"2021-03-29"},{"lineNumber":847,"author":{"gitId":"AlexanderTanJunAn"},"content":"| add                 | `add/[Name]/[Price]/[Quantity]`\u003cbr/\u003e\u003cbr/\u003e`add/paracetamol/$3/90`                                           |","lastModifiedDate":"2021-03-29"},{"lineNumber":848,"author":{"gitId":"AlexanderTanJunAn"},"content":"| delete              | `delete/[Name]`\u003cbr/\u003e\u003cbr/\u003e`delete/paracetamol`                                                              |","lastModifiedDate":"2021-03-29"},{"lineNumber":849,"author":{"gitId":"AlexanderTanJunAn"},"content":"| list                | `list`                                                                                                     |","lastModifiedDate":"2021-03-29"},{"lineNumber":850,"author":{"gitId":"AlexanderTanJunAn"},"content":"| help                | `help`                                                                                                     |","lastModifiedDate":"2021-03-29"},{"lineNumber":851,"author":{"gitId":"AlexanderTanJunAn"},"content":"| return              | `return`                                                                                                   |","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"NoorSarrah":143,"MingShun98":109,"Chiamjiaen":92,"AlexanderTanJunAn":170,"-":31,"blank-bank":306}},{"path":"docs/team/chiamjiaen.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"# Chiam Jia-En - Project Portfolio Page","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"## Overview","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"huh","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"### Summary of Contributions","lastModifiedDate":"2021-03-05"}],"authorContributionMap":{"Chiamjiaen":6}},{"path":"src/main/java/seedu/duke/Constants.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.duke;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"public class Constants {","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"    public static final String LINEBREAK \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"    public static final String LISTLINEBREAK \u003d \"________________________________________________________\"","lastModifiedDate":"2021-04-04"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"            +\"____________________________________________\";","lastModifiedDate":"2021-04-04"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    public static final String HELPLINEBREAK \u003d \"________________________________________________________\"","lastModifiedDate":"2021-04-04"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"            +\"__________________________________________________________________________________\";","lastModifiedDate":"2021-04-04"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"    public static final String LOGO \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"            \" __   __  ______  _______  _  ________  __   __  __  __  _______  __   __  _             __   \\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"             + \"|  | |  ||   ___||   _   || ||___    _||  | |  ||  ||  ||   _   ||  | |  || | _   _     /  \\\\  \\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"             + \"|  |_|  ||  |___ |  |_|  || |    |  |  |  |_|  ||  ||  ||  |_|  ||  | |  || || |_| |___/ / \\\\\\\\ \\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"             + \"|   _   ||   ___||   _   || |    ||\u003d|  |   _   |\\\\  \\\\/  /|   _   ||  | |  || ||_________  | | |\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"             + \"|  | |  ||  |___ |  | |  || |___ ||\u003d|  |  | |  | \\\\    / |  | |  ||  |_|  || |_____     \\\\ \\\\ // \\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"             + \"|__| |__||______||__| |__||_____||__|  |__| |__|  \\\\__/  |__| |__||_______||_______|     \\\\__/  \\n\";","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"    public static final String PATIENT_FILE_PATH \u003d \"data/Patients.txt\";","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"    public static final String APPOINTMENT_FILE_PATH \u003d \"data/DoctorAppointment.txt\";","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"    public static final String INVENTORY_FILE_PATH \u003d \"data/Inventory.txt\";","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"    public static final String STAFF_FILE_PATH \u003d \"data/Staff.txt\";","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"    public static final String SCHEDULES_FILE_PATH \u003d \"data/NurseSchedule.txt\";","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public static final String PATIENT_LOGS_FILE_PATH \u003d \"\";","lastModifiedDate":"2021-04-02"},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public static final String APPOINTMENT_LOGS_FILE_PATH \u003d \"\";","lastModifiedDate":"2021-04-02"},{"lineNumber":28,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public static final String INVENTORY_LOGS_FILE_PATH \u003d \"\";","lastModifiedDate":"2021-04-02"},{"lineNumber":29,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public static final String STAFF_LOGS_FILE_PATH \u003d \"\";","lastModifiedDate":"2021-04-02"},{"lineNumber":30,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public static final String SCHEDULES_LOGS_FILE_PATH \u003d \"data/logs/NurseSchedules.log\";","lastModifiedDate":"2021-04-02"},{"lineNumber":31,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"    public static final String TO_STAFF_INSTANCE \u003d \"staff\";","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"    public static final String TO_PATIENT_INSTANCE \u003d \"patient\";","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"    public static final String TO_APPOINTMENTS_INSTANCE \u003d \"appointments\";","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"    public static final String TO_SCHEDULES_INSTANCE \u003d \"schedules\";","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"    public static final String TO_INVENTORY_INSTANCE \u003d \"inventory\";","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"    public static final String TO_STAFF_INSTANCE_DESCRIPTION \u003d \"To go to staff\";","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"    public static final String TO_PATIENT_INSTANCE_DESCRIPTION \u003d \"To go to patients\";","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"    public static final String TO_APPOINTMENTS_INSTANCE_DESCRIPTION \u003d \"To go to doctors appointments\";","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"    public static final String TO_SCHEDULES_INSTANCE_DESCRIPTION \u003d \"To go to nurse schedules\";","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"    public static final String TO_INVENTORY_INSTANCE_DESCRIPTION \u003d \"To go to inventory\";","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"    public static final String EXIT_COMMAND_DESCRIPTION \u003d \"To exit the application\";","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"    public static final String HELP_COMMAND_DESCRIPTION \u003d \"To see what commands for Start Menu\";","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"Chiamjiaen"},"content":"    public static final String EXIT_COMMAND \u003d \"exit\";","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"Chiamjiaen"},"content":"    public static final String HELP_COMMAND \u003d \"help\";","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"    public static final String ADD_COMMAND \u003d \"add\";","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"    public static final String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"    public static final String FIND_COMMAND \u003d \"find\";","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"    public static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"    public static final String RETURN_COMMAND \u003d \"return\";","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"Chiamjiaen"},"content":"    //field Checking","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"Chiamjiaen"},"content":"    public static final String[] VALID_GENDER_INPUT \u003d {\"M\", \"F\", \"Others\"};","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"blank-bank"},"content":"    // Miscellaneous","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"Chiamjiaen"},"content":"    public static final String BLANK \u003d \"\";","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"Chiamjiaen"},"content":"    public static final String MARK_BLANK \u003d \"-\";","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":"    public static final String RETURN_DESCRIPTION \u003d \"Returns you to the Start Menu!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"blank-bank"},"content":"    // HELP HEADER","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"blank-bank"},"content":"    public static final String HELP_HEADER_COMMAND \u003d \"Commands\";","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"blank-bank"},"content":"    public static final String HELP_HEADER_DESCRIPTION \u003d \"Description\";","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"blank-bank"},"content":"    public static final String HELP_HEADER_FORMAT \u003d \"Format\";","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"blank-bank"},"content":"    // HELP FUNCTION DESCRIPTION","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"blank-bank"},"content":"    public static final String STAFF_HELP_DESCRIPTION \u003d \"Brings up the list of commands for Staff!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"blank-bank"},"content":"    public static final String PATIENT_HELP_DESCRIPTION \u003d \"Brings up the list of commands for Patient!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"MingShun98"},"content":"    public static final String APPOINTMENTS_HELP_DESCRIPTION \u003d \"Brings up the list of commands for Doctor Appointments!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"blank-bank"},"content":"    public static final String SCHEDULES_HELP_DESCRIPTION \u003d \"Brings up the list of commands for Nurse Schedule!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"blank-bank"},"content":"    public static final String INVENTORY_HELP_DESCRIPTION \u003d \"Brings up the list of commands for Inventory!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"blank-bank"},"content":"    // ADD FUNCTION DESCRIPTION","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"blank-bank"},"content":"    public static final String STAFF_ADD_DESCRIPTION \u003d \"Adds Staff details to the Staff database!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"blank-bank"},"content":"    public static final String PATIENT_ADD_DESCRIPTION \u003d \"Adds Patient details to the Patient database!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"blank-bank"},"content":"    public static final String APPOINTMENTS_ADD_DESCRIPTION \u003d \"Adds Doctor Appointment details to the database!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"blank-bank"},"content":"    public static final String SCHEDULES_ADD_DESCRIPTION \u003d \"Adds Nurse Schedule details to the database!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"blank-bank"},"content":"    public static final String INVENTORY_ADD_DESCRIPTION \u003d \"Adds Inventory details to the database!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"blank-bank"},"content":"    // ADD FUNCTION FORMATTING","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"blank-bank"},"content":"    public static final String STAFF_ADD_FORMAT \u003d \"add/[Staff ID]/[Name]/[Age]/[Specialisation]\";","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"Chiamjiaen"},"content":"    public static final String PATIENT_ADD_FORMAT \u003d \"add/[Patient ID]/[Name]/[Age]/[Gender]/[Illness]/[Medication Needed]\";","lastModifiedDate":"2021-04-04"},{"lineNumber":85,"author":{"gitId":"MingShun98"},"content":"    public static final String APPOINTMENTS_ADD_FORMAT \u003d \"add/[Doctor ID]/[Appointment ID]/[Name]/[Gender]/[Date (DDMMYYYY)]\";","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public static final String SCHEDULES_ADD_FORMAT \u003d \"add/[Nurse ID]/[Patient ID]/[Date (DDMMYYYY)]\";","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"NoorSarrah"},"content":"    public static final String INVENTORY_ADD_FORMAT \u003d \"add/[Drug name]/[Price]/[Quantity]\";","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"blank-bank"},"content":"    // LIST FUNCTION DESCRIPTION","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"blank-bank"},"content":"    public static final String STAFF_LIST_DESCRIPTION \u003d \"Brings up the list of all current Staff in database!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"blank-bank"},"content":"    public static final String PATIENT_LIST_DESCRIPTION \u003d \"Brings up the list of all current Patient in database!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"MingShun98"},"content":"    public static final String APPOINTMENTS_LIST_DESCRIPTION \u003d \"Brings up the list of all current Doctors\u0027 Appointments in database!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"blank-bank"},"content":"    public static final String SCHEDULES_LIST_DESCRIPTION \u003d \"Brings up the list of all current Nurse Schedules in database!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"blank-bank"},"content":"    public static final String INVENTORY_LIST_DESCRIPTION \u003d \"Brings up the list of all current Inventory in database!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"blank-bank"},"content":"    // LIST FUNCTION FORMATTING","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"blank-bank"},"content":"    public static final String STAFF_LIST_FORMAT \u003d \"list/\u003cinput\u003e, where input \u003d\u003d doctor or nurse\";","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"MingShun98"},"content":"    public static final String APPOINTMENTS_LIST_FORMAT \u003d \"list/[DoctorID/AppointmentID]\";","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public static final String SCHEDULES_LIST_FORMAT \u003d \"list/[NurseID/all]\";","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"NoorSarrah"},"content":"    public static final String INVENTORY_LIST_FORMAT \u003d \"list\";","lastModifiedDate":"2021-04-01"},{"lineNumber":102,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"blank-bank"},"content":"    // DELETE FUNCTION DESCRIPTION","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"blank-bank"},"content":"    public static final String STAFF_DELETE_DESCRIPTION \u003d \"Deletes the Staff with the specified ID from the list!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"blank-bank"},"content":"    public static final String PATIENT_DELETE_DESCRIPTION \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"blank-bank"},"content":"            \"Deletes the Patient with the specified ID from the list!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"MingShun98"},"content":"    public static final String APPOINTMENTS_DELETE_DESCRIPTION \u003d \"Deletes the Appointment with the specified ID from the list!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"blank-bank"},"content":"    public static final String SCHEDULES_DELETE_DESCRIPTION \u003d \"Deletes the Schedule with the specified ID from the list!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"NoorSarrah"},"content":"    public static final String INVENTORY_DELETE_DESCRIPTION \u003d \"Deletes the Inventory item from the list!\";","lastModifiedDate":"2021-04-01"},{"lineNumber":111,"author":{"gitId":"blank-bank"},"content":"    // DELETE FUNCTION FORMATTING","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"blank-bank"},"content":"    public static final String STAFF_DELETE_FORMAT \u003d \"delete/[Staff ID]\";","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"blank-bank"},"content":"    public static final String PATIENT_DELETE_FORMAT \u003d \"delete/[Patient ID]\";","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"MingShun98"},"content":"    public static final String APPOINTMENTS_DELETE_FORMAT \u003d \"delete/[DoctorID/Appointment ID]\";","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"blank-bank"},"content":"    public static final String SCHEDULES_DELETE_FORMAT \u003d \"delete/[Nurse ID]/[Date (DDMMYYYY)]\";","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"blank-bank"},"content":"    public static final String INVENTORY_DELETE_FORMAT \u003d \"delete/[Drug Name]\";","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"blank-bank"},"content":"    // FIND FUNCTION DESCRIPTION","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"blank-bank"},"content":"    public static final String STAFF_FIND_DESCRIPTION \u003d \"Finds a matching Staff using a keyword or phrase!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"Chiamjiaen"},"content":"    public static final String PATIENT_FIND_DESCRIPTION \u003d \"Finds a matching Patient using a keyword or phrase!\";","lastModifiedDate":"2021-04-04"},{"lineNumber":122,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"blank-bank"},"content":"    // FIND FUNCTION FORMATTING","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"blank-bank"},"content":"    public static final String STAFF_FIND_FORMAT \u003d \"find/[keyword or phrase]\";","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"Chiamjiaen"},"content":"    public static final String PATIENT_FIND_FORMAT \u003d \"find/[keyword or phrase]\";","lastModifiedDate":"2021-04-04"},{"lineNumber":126,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":128,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"NoorSarrah":3,"MingShun98":6,"Chiamjiaen":29,"AlexanderTanJunAn":8,"blank-bank":82}},{"path":"src/main/java/seedu/duke/HealthVault.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.parser.StartMenuParser;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import seedu.ui.UI;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class HealthVault {","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"    private UI ui;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    private StartMenuParser parser;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private HealthVault() {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"        ui \u003d new UI();","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"        parser \u003d new StartMenuParser();","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"NoorSarrah"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"     * Calls for the running of a new Duke instance.","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"     * @param args Runtime arguments are unused","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"NoorSarrah"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":"        new HealthVault().run();","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"    public void run() {","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"        UI.printWelcome();","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"        UI.printStartMenu();","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"NoorSarrah"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"NoorSarrah"},"content":"        while (!isExit) {","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"NoorSarrah"},"content":"            try {","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"                String userInput \u003d ui.getInput(\"Start Menu\");","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"                UI.printEmptyLine();","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"                Command c \u003d parser.startMenuParse(userInput);","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"                c.execute();","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"                if (isExit) {","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"                    ui.printGoodbye();","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"                }","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"NoorSarrah"},"content":"                //Command C can return as null if an error is triggered in parser","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"NoorSarrah"},"content":"                //Null Pointer Exception may hence occur, the catch statement is to ensure it does not exit the loop.","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"NoorSarrah"},"content":"            }","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"NoorSarrah"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"NoorSarrah":12,"Chiamjiaen":21,"-":3,"AlexanderTanJunAn":4,"blank-bank":5}},{"path":"src/main/java/seedu/exceptions/CorruptedFileException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class CorruptedFileException extends HealthVaultException {","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"    private String file;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"    public CorruptedFileException(String file) {","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"        this.file \u003d file;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"        return \"The file \" + this.file + \" is corrupted\";","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"blank-bank":14}},{"path":"src/main/java/seedu/exceptions/DuplicateIDException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class DuplicateIDException extends HealthVaultException {","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"    private String IDType;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"    public DuplicateIDException(String IDType) {","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"        this.IDType \u003d IDType;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"        return \"The \" + IDType + \" ID has already been taken! Use a different ID!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"Chiamjiaen":11,"blank-bank":3}},{"path":"src/main/java/seedu/exceptions/EmptyListException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"MingShun98"},"content":"public class EmptyListException extends Exception {","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"MingShun98"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"MingShun98"},"content":"        return \"OOPS!!! The list is empty!\";","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"MingShun98":6,"blank-bank":1}},{"path":"src/main/java/seedu/exceptions/ExcessInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class ExcessInputException extends HealthVaultException{","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return \"OOPS! There are too many inputs for this command\";","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"AlexanderTanJunAn":3,"blank-bank":4}},{"path":"src/main/java/seedu/exceptions/HealthVaultException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class HealthVaultException extends Exception {","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"    protected String error;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"    public HealthVaultException(String error) {","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"        this.error \u003d error;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"    public HealthVaultException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"     * Shows the error encountered by the user","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"     * @param input error type","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"    public void getError(String input) {","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"        switch (error) {","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"            case \"loadFile\":","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\"OOPS! The file format is wrong! It may have been corrupted! \\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"                        + \"Please delete the file \\\"data/PatientList.txt\\\" so we can make a new file for you! \");","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"                break;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"            case \"add\":","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\"OOPS! You have inputted the wrong number of parameters! \\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"                        + \"There should not be any space in the name! \\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"                        + \"There should only be 7 inputted terms including \\\"add\\\" \\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"                        + \"Please type \\\"help\\\" to see the right command format!\");","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"                break;","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"            case \"find\":","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\"OOPS! You have inputted the wrong number of parameters! \\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"                        + \"There should only be 2 inputted terms including \\\"find\\\" \\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"                        + \"Please type \\\"help\\\" to see the right command format!\");","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"                break;","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"            case \"delete\":","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\"OOPS! You have inputted the wrong number of parameters! \\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"                        + \"There should only be 2 inputted terms including \\\"delete\\\" \\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"                        + \"Please type \\\"help\\\" to see the right command format!\");","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":"                break;","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":"            case \"return\":","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\"OOPS! You have inputted the wrong number of parameters! \\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"                        + \"There should only be 1 inputted term which is \\\"return\\\" \\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"                        + \"Please type \\\"help\\\" to see the right command format!\");","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"Chiamjiaen"},"content":"                break;","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"Chiamjiaen"},"content":"            case \"help\":","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"Chiamjiaen"},"content":"                System.out.println(\"OOPS! You have inputted the wrong number of parameters! \\n\" +","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"Chiamjiaen"},"content":"                        \"There should only be 1 inputted term which is \\\"help\\\"\");","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"Chiamjiaen"},"content":"                break;","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"Chiamjiaen"},"content":"            case \"list\":","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"Chiamjiaen"},"content":"                System.out.println(\"OOPS! You have inputted the wrong number of parameters! \\n\" +","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"Chiamjiaen"},"content":"                        \"There should only be 1 inputted term which is \\\"list\\\" \\n\" +","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"Chiamjiaen"},"content":"                        \"Please type \\\"help\\\" to see the right command format!\");","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"Chiamjiaen"},"content":"                break;","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"Chiamjiaen"},"content":"            case \"IDLength\":","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"Chiamjiaen"},"content":"                System.out.println(\"OOPS! Looks like your ID length is incorrect! \\n\" +","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"Chiamjiaen"},"content":"                        \"Please ensure that the ID has 6 characters!\");","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"Chiamjiaen"},"content":"                break;","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"Chiamjiaen"},"content":"            case \"IDType\":","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"Chiamjiaen"},"content":"                System.out.println(\"OOPS! Looks like your ID type is incorrect! \\n\" +","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"Chiamjiaen"},"content":"                        \"Please ensure that the ID starts with \\\"P\\\"!\");","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"Chiamjiaen"},"content":"                break;","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"Chiamjiaen"},"content":"            case \"IDValue\":","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"Chiamjiaen"},"content":"                System.out.println(\"OOPS! Looks like your ID value is incorrect! \\n\" +","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"Chiamjiaen"},"content":"                        \"Please ensure that the ID includes 5 numbers after \\\"P\\\"! \\n\" +","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"Chiamjiaen"},"content":"                        \"eg. P12345 or P67891\");","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"Chiamjiaen"},"content":"                break;","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"Chiamjiaen"},"content":"            case \"IDTaken\":","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"Chiamjiaen"},"content":"                System.out.println(\"OOPS! Looks like the ID has been taken! \\n\" +","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"Chiamjiaen"},"content":"                        \"Try a different ID! You can use the \\\"list\\\" command to see which IDs have been taken!\");","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"Chiamjiaen"},"content":"                break;","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"Chiamjiaen"},"content":"            case \"IDDoesNotExist\":","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"Chiamjiaen"},"content":"                System.out.println(\"OOPS! Looks like the ID does not exist! \\n\" +","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"Chiamjiaen"},"content":"                        \"Check that you have inputted the right ID! \\n\" +","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"Chiamjiaen"},"content":"                        \"You can use the \\\"list\\\" command to see which IDs exist!\");","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"Chiamjiaen"},"content":"                break;","lastModifiedDate":"2021-03-11"},{"lineNumber":77,"author":{"gitId":"NoorSarrah"},"content":"            case \"DrugStored\":","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"NoorSarrah"},"content":"                System.out.println(\"OOPS! Looks like this drug has already been stored!\");","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"NoorSarrah"},"content":"                break;","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"NoorSarrah"},"content":"            case \"IllegalCharacter\":","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"NoorSarrah"},"content":"                System.out.println(\"OOPS! You have an illegal character in your input!\");","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"NoorSarrah"},"content":"                break;","lastModifiedDate":"2021-04-03"},{"lineNumber":83,"author":{"gitId":"Chiamjiaen"},"content":"            default:","lastModifiedDate":"2021-03-11"},{"lineNumber":84,"author":{"gitId":"Chiamjiaen"},"content":"                System.out.println(\"OOPS! Your command may not be valid! \\n\" +","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"Chiamjiaen"},"content":"                        \"Please check the list of available commands using \\\"help\\\"\");","lastModifiedDate":"2021-03-11"},{"lineNumber":86,"author":{"gitId":"Chiamjiaen"},"content":"                break;","lastModifiedDate":"2021-03-11"},{"lineNumber":87,"author":{"gitId":"Chiamjiaen"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":88,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"Chiamjiaen"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"Chiamjiaen"},"content":"        return \"There seems to be an error!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":92,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"NoorSarrah":6,"MingShun98":2,"Chiamjiaen":65,"blank-bank":19}},{"path":"src/main/java/seedu/exceptions/IDNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class IDNotFoundException extends HealthVaultException{","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"        private String IDType;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"        public IDNotFoundException(String IDType) {","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"            this.IDType \u003d IDType;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"        public String getMessage() {","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"            return \"The \" + IDType + \" ID does not exist!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"blank-bank":13}},{"path":"src/main/java/seedu/exceptions/InsufficientInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class InsufficientInputException extends HealthVaultException{","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"        return \"OOPS! There is too little input for this command\";","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"blank-bank":7}},{"path":"src/main/java/seedu/exceptions/InvalidDateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class InvalidDateException extends HealthVaultException{","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"        return \"The date format is invalid!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"blank-bank":7}},{"path":"src/main/java/seedu/exceptions/InvalidGenderException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class InvalidGenderException extends HealthVaultException{","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"        return \"The gender is invalid!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"blank-bank":7}},{"path":"src/main/java/seedu/exceptions/InvalidIDException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class InvalidIDException extends HealthVaultException{","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"MingShun98"},"content":"        return \"OOPS! Looks like your ID value is incorrect!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"MingShun98":1,"AlexanderTanJunAn":1,"blank-bank":5}},{"path":"src/main/java/seedu/exceptions/InvalidIntegerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class InvalidIntegerException extends HealthVaultException{","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"        return \"The numeric input is invalid!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"blank-bank":7}},{"path":"src/main/java/seedu/exceptions/NoInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class NoInputException extends HealthVaultException {","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"        return \"There is an empty field in the input! All fields must be filled!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"blank-bank":7}},{"path":"src/main/java/seedu/exceptions/UnrecognizedCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.exceptions;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class UnrecognizedCommandException extends HealthVaultException {","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"        return \"OOPS! Your command may not be valid! \\n\" +","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"                \"Please check the list of available commands using \\\"help\\\"\";","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Chiamjiaen":5,"blank-bank":4}},{"path":"src/main/java/seedu/exceptions/doctorappointment/AppointmentIDTakenException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MingShun98"},"content":"package seedu.exceptions.doctorappointment;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"MingShun98"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"MingShun98"},"content":"public class AppointmentIDTakenException extends HealthVaultException {","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"MingShun98"},"content":"    public String getMessage(){return \"Sorry, Appointment ID is already in the system.\";}","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"MingShun98":7}},{"path":"src/main/java/seedu/exceptions/doctorappointment/DocIDNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MingShun98"},"content":"package seedu.exceptions.doctorappointment;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"MingShun98"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"MingShun98"},"content":"public class DocIDNotFoundException extends HealthVaultException {","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"MingShun98"},"content":"    private String IDType;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"MingShun98"},"content":"    public DocIDNotFoundException(String IDType) {","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"MingShun98"},"content":"        this.IDType \u003d IDType;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"MingShun98"},"content":"    public String getMessage() {","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"MingShun98"},"content":"        return \"The \" + IDType + \" ID does not exist in the Staff Database!\";","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"MingShun98"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"MingShun98":15}},{"path":"src/main/java/seedu/exceptions/doctorappointment/FileCreatingErrorException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MingShun98"},"content":"package seedu.exceptions.doctorappointment;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"MingShun98"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"MingShun98"},"content":"public class FileCreatingErrorException extends HealthVaultException {","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"MingShun98"},"content":"    public String getMessage(){return \"File cannot be created\";};","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"MingShun98":7}},{"path":"src/main/java/seedu/exceptions/doctorappointment/InvalidDocIDException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MingShun98"},"content":"package seedu.exceptions.doctorappointment;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"MingShun98"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"MingShun98"},"content":"public class InvalidDocIDException extends HealthVaultException {","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"MingShun98"},"content":"    public String getMessage(){","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":"        return \"Sorry this Doctor ID is invalid\" ;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"MingShun98"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"MingShun98":9}},{"path":"src/main/java/seedu/exceptions/doctorappointment/InvalidGenderException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MingShun98"},"content":"package seedu.exceptions.doctorappointment;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"MingShun98"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"MingShun98"},"content":"public class InvalidGenderException extends HealthVaultException {","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"MingShun98"},"content":"    public String getMessage(){","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":"        return \"Sorry please type in M or F for gender.\" ;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"MingShun98"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"MingShun98":9}},{"path":"src/main/java/seedu/exceptions/doctorappointment/WrongAptIDFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MingShun98"},"content":"package seedu.exceptions.doctorappointment;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"MingShun98"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"MingShun98"},"content":"public class WrongAptIDFormatException extends HealthVaultException {","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"MingShun98"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":"        return \"Error in Appointment ID input\\nPlease input with the following format [A][5 digit ID number]\";","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"MingShun98"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"MingShun98":9}},{"path":"src/main/java/seedu/exceptions/inventory/DuplicateDrugException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NoorSarrah"},"content":"package seedu.exceptions.inventory;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"public class DuplicateDrugException extends HealthVaultException {","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"NoorSarrah"},"content":"    public DuplicateDrugException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"NoorSarrah"},"content":"    public void getError(String input) {","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"OOPS! This drug already exists in the Inventory!\");","lastModifiedDate":"2021-04-03"},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"NoorSarrah":8,"Chiamjiaen":2,"blank-bank":2}},{"path":"src/main/java/seedu/exceptions/inventory/InvalidPriceException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NoorSarrah"},"content":"package seedu.exceptions.inventory;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"public class InvalidPriceException extends HealthVaultException {","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"NoorSarrah"},"content":"    public InvalidPriceException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"NoorSarrah"},"content":"    public void getError(String input) {","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"Please input a valid price. Eg 3 or 3.00\");","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"NoorSarrah":9,"blank-bank":2}},{"path":"src/main/java/seedu/exceptions/inventory/NonExistentDrugException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NoorSarrah"},"content":"package seedu.exceptions.inventory;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"public class NonExistentDrugException extends HealthVaultException {","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"NoorSarrah"},"content":"    public NonExistentDrugException(String error) {","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"NoorSarrah"},"content":"        this.error \u003d error;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":"    public void getError(String input) {","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"OOPS! This drug does not exist in the Inventory!\");;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"NoorSarrah":10,"blank-bank":2}},{"path":"src/main/java/seedu/exceptions/inventory/WrongNumberException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NoorSarrah"},"content":"package seedu.exceptions.inventory;","lastModifiedDate":"2021-04-03"},{"lineNumber":2,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":3,"author":{"gitId":"NoorSarrah"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-04-03"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":5,"author":{"gitId":"NoorSarrah"},"content":"public class WrongNumberException extends HealthVaultException {","lastModifiedDate":"2021-04-03"},{"lineNumber":6,"author":{"gitId":"NoorSarrah"},"content":"    protected String errorField;","lastModifiedDate":"2021-04-03"},{"lineNumber":7,"author":{"gitId":"NoorSarrah"},"content":"    public WrongNumberException(String errorField) {","lastModifiedDate":"2021-04-03"},{"lineNumber":8,"author":{"gitId":"NoorSarrah"},"content":"        this.errorField \u003d errorField;","lastModifiedDate":"2021-04-03"},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-04-03"},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":"    public void getError() {","lastModifiedDate":"2021-04-03"},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"Please enter a valid \" + this.errorField + \"!\");","lastModifiedDate":"2021-04-03"},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-04-03"},{"lineNumber":13,"author":{"gitId":"NoorSarrah"},"content":"}","lastModifiedDate":"2021-04-03"}],"authorContributionMap":{"NoorSarrah":13}},{"path":"src/main/java/seedu/exceptions/nurseschedules/DuplicateScheduleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package seedu.exceptions.nurseschedules;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-04-04"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class DuplicateScheduleException extends HealthVaultException {","lastModifiedDate":"2021-04-04"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"    String date \u003d null;","lastModifiedDate":"2021-04-04"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public DuplicateScheduleException(String date) {","lastModifiedDate":"2021-04-04"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-04-04"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getMessage() {","lastModifiedDate":"2021-04-04"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return \"Patient has already been scheduled on \" + date + \"!\";","lastModifiedDate":"2021-04-04"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"}","lastModifiedDate":"2021-04-04"}],"authorContributionMap":{"AlexanderTanJunAn":15}},{"path":"src/main/java/seedu/exceptions/nurseschedules/EmptyListException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.exceptions.nurseschedules;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"public class EmptyListException extends HealthVaultException {","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return \"OOPS! No schedules are found in the system!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"AlexanderTanJunAn":6,"blank-bank":3}},{"path":"src/main/java/seedu/exceptions/nurseschedules/InvalidIDTypeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package seedu.exceptions.nurseschedules;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class InvalidIDTypeException extends HealthVaultException {","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return \"OOPS! Looks like your ID value is incorrect! \\n\" +","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"                \"Please ensure that the ID includes 5 numbers after \\\"N\\\" or \\\"P\\\" \\n\" +","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"                \"eg. N12345 or P67891\";","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"AlexanderTanJunAn":11}},{"path":"src/main/java/seedu/exceptions/nurseschedules/InvalidScheduleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package seedu.exceptions.nurseschedules;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-04-04"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class InvalidScheduleException extends HealthVaultException {","lastModifiedDate":"2021-04-04"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getMessage() {","lastModifiedDate":"2021-04-04"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return \"Schedule you are trying to delete does not exist!\";","lastModifiedDate":"2021-04-04"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"}","lastModifiedDate":"2021-04-04"}],"authorContributionMap":{"AlexanderTanJunAn":9}},{"path":"src/main/java/seedu/exceptions/nurseschedules/NurseCrossValidationError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package seedu.exceptions.nurseschedules;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class NurseCrossValidationError extends HealthVaultException {","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return \"Staff file is not loaded, Nurse ID cannot be validated.\" +","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"                System.lineSeparator() + \"Please delete data/Staff.txt before trying again\";","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"AlexanderTanJunAn":10}},{"path":"src/main/java/seedu/exceptions/nurseschedules/NurseIdNotFound.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.exceptions.nurseschedules;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"public class NurseIdNotFound extends HealthVaultException {","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return \"NurseID does not exist! Please check Staff List and try again!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"AlexanderTanJunAn":6,"blank-bank":3}},{"path":"src/main/java/seedu/exceptions/nurseschedules/PatientCrossValidationError.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package seedu.exceptions.nurseschedules;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class PatientCrossValidationError extends HealthVaultException {","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getMessage() {","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return \"Patient file is not loaded, Patient ID cannot be validated.\" +","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"                System.lineSeparator() + \"Please delete data/Patient.txt before trying again\";","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"AlexanderTanJunAn":10}},{"path":"src/main/java/seedu/exceptions/nurseschedules/PatientIdNotFound.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package seedu.exceptions.nurseschedules;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class PatientIdNotFound extends HealthVaultException {","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getMessage() {","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return \"PatientID does not exist! Please check Patient List and try again!\";","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"AlexanderTanJunAn":9}},{"path":"src/main/java/seedu/exceptions/nurseschedules/WrongInputsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.exceptions.nurseschedules;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"public class WrongInputsException extends HealthVaultException {","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return \"OOPS! Please check to see if your command is properly formatted!\";","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"AlexanderTanJunAn":3,"blank-bank":6}},{"path":"src/main/java/seedu/exceptions/patient/IllegalCharacterException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.exceptions.patient;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"public class IllegalCharacterException extends HealthVaultException {","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"    private String errorField;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    public IllegalCharacterException(String errorField) {","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"        this.errorField \u003d errorField;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"        return \"You have an illegal character in your: \" + errorField;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Chiamjiaen":13,"blank-bank":2}},{"path":"src/main/java/seedu/exceptions/patient/InvalidAgeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.exceptions.patient;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"public class InvalidAgeException extends HealthVaultException {","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"        return \"Your age input is invalid! \\n\" +","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"                \"Please ensure that the age is an integer between 0 and 150!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Chiamjiaen":9,"blank-bank":2}},{"path":"src/main/java/seedu/exceptions/patient/InvalidFieldsNumberException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.exceptions.patient;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"public class InvalidFieldsNumberException extends HealthVaultException {","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"    String error;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    public InvalidFieldsNumberException(String error) {","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"        this.error \u003d error;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"        switch (error) {","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"        case \"add\":","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"            return \"You have inputted the wrong number of parameters! \\n\" +","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"                    \"There should only be 7 inputted terms including \\\"add\\\" \\n\" +","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Please type \\\"help\\\" to see the right command format!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"        case \"find\":","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"            return \"You have inputted the wrong number of parameters! \\n\" +","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"                    \"There should only be 2 inputted terms including \\\"find\\\" \\n\" +","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Please type \\\"help\\\" to see the right command format!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"        case \"delete\":","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"            return \"You have inputted the wrong number of parameters! \\n\" +","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"                    \"There should only be 2 inputted terms including \\\"delete\\\" \\n\" +","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Please type \\\"help\\\" to see the right command format!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"        case \"return\":","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"            return \"OOPS! You have inputted the wrong number of parameters! \\n\" +","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"                    \"There should only be 1 inputted term which is \\\"return\\\" \\n\" +","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Please type \\\"help\\\" to see the right command format!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"        case \"help\":","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"            return \"OOPS! You have inputted the wrong number of parameters! \\n\" +","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"                    \"There should only be 1 inputted term which is \\\"help\\\"\";","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"        case \"list\":","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"            return \"OOPS! You have inputted the wrong number of parameters! \\n\" +","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"                    \"There should only be 1 inputted term which is \\\"list\\\" \\n\" +","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"                    \"Please type \\\"help\\\" to see the right command format!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"        default:","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"            return \"You have inputted the wrong number of parameters!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"Chiamjiaen":43}},{"path":"src/main/java/seedu/exceptions/patient/InvalidIDLengthException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.exceptions.patient;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"public class InvalidIDLengthException extends HealthVaultException {","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"    public InvalidIDLengthException(String error) {","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"        this.error \u003d error;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"        return \"Looks like your ID length is incorrect! \\n\" +","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"                \"Please ensure that the ID has 6 characters!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"Chiamjiaen":13,"blank-bank":3}},{"path":"src/main/java/seedu/exceptions/patient/InvalidIDTypeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.exceptions.patient;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"public class InvalidIDTypeException extends HealthVaultException {","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"    public InvalidIDTypeException(String error) {","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"        this.error \u003d error;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"        return \"Looks like your ID type is incorrect! \\n\" +","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"                \"Please ensure that the ID starts with \\\"P\\\"!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"Chiamjiaen":12,"blank-bank":3}},{"path":"src/main/java/seedu/exceptions/patient/InvalidIDValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.exceptions.patient;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"public class InvalidIDValueException extends HealthVaultException {","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"    public InvalidIDValueException(String error) {","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"        this.error \u003d error;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"        return \"Looks like your ID value is incorrect! \\n\" +","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"                \"Please ensure that the ID includes 5 numbers after \\\"P\\\"! \\n\" +","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"                \"eg. P12345 or P67891\";","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"Chiamjiaen":13,"blank-bank":3}},{"path":"src/main/java/seedu/exceptions/staff/WrongListInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.exceptions.staff;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"public class WrongListInputException extends HealthVaultException {","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"        return \"Invalid List command parameter\\nPlease input with the either of the following format:\\n\\tlist\\n\\tlist/nurses\\n\\tlist/doctors\";","lastModifiedDate":"2021-04-03"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Chiamjiaen":1,"blank-bank":7}},{"path":"src/main/java/seedu/exceptions/staff/WrongStaffIdException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.exceptions.staff;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"public class WrongStaffIdException extends HealthVaultException {","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"        return \"Error in Staff ID input\\nPlease input with the following format [D/N][5 digit ID number]\";","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Chiamjiaen":1,"blank-bank":7}},{"path":"src/main/java/seedu/logic/command/AppointmentActions.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.logic.command;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"MingShun98"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.model.DoctorAppointment;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.EmptyListException;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"import seedu.storage.DoctorAppointmentStorage;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"import seedu.ui.DoctorAppointmentUI;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"MingShun98"},"content":"import seedu.ui.UI;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"MingShun98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"MingShun98"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"MingShun98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"MingShun98"},"content":"public class AppointmentActions {","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"MingShun98"},"content":"    public static ArrayList\u003cDoctorAppointment\u003e appointmentList;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"MingShun98"},"content":"    public AppointmentActions(ArrayList\u003cDoctorAppointment\u003e loadAppointments) {","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"MingShun98"},"content":"        appointmentList \u003d loadAppointments;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"MingShun98"},"content":"    public static void addAppointment(String[] inputArray) throws IOException {","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"MingShun98"},"content":"        String doctorID \u003d inputArray[1];","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"MingShun98"},"content":"        String appointmentID \u003d inputArray[2];","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"MingShun98"},"content":"        String patientName \u003d inputArray[3];","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"MingShun98"},"content":"        String gender \u003d inputArray[4];","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"MingShun98"},"content":"        String date \u003d inputArray[5];","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"MingShun98"},"content":"        DoctorAppointment newAppointment \u003d new DoctorAppointment(doctorID, appointmentID, patientName, gender, date);","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"MingShun98"},"content":"        DoctorAppointmentUI.printAddedAppointment();","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"MingShun98"},"content":"        appointmentList.add(newAppointment);","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"MingShun98"},"content":"        DoctorAppointmentStorage.writeToFile(appointmentList);","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"MingShun98"},"content":"    public static void listAppointment(String input) throws HealthVaultException, EmptyListException, ParseException {","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"MingShun98"},"content":"        String indicator \u003d \"A\";","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"MingShun98"},"content":"        String[] inputArray \u003d input.split(\"\");","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"MingShun98"},"content":"        String iD \u003d inputArray[0];","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"MingShun98"},"content":"        if (appointmentList.size() \u003d\u003d 0) throw new EmptyListException();","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"MingShun98"},"content":"        else {","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"MingShun98"},"content":"            if (iD.equals(\"A\")) {","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"MingShun98"},"content":"                DoctorAppointmentUI.AptPrintList(indicator);","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"MingShun98"},"content":"                UI.showLine();","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"MingShun98"},"content":"                for (DoctorAppointment doc : appointmentList) {","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"MingShun98"},"content":"                    if (doc.getAppointmentId().equals(input)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"MingShun98"},"content":"                        DoctorAppointmentUI.printList(doc, indicator);","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"MingShun98"},"content":"                    }","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"MingShun98"},"content":"                }","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"MingShun98"},"content":"            } else {","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"MingShun98"},"content":"                indicator \u003d \"D\";","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"MingShun98"},"content":"                DoctorAppointmentUI.AptPrintList(indicator);","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"MingShun98"},"content":"                UI.showLine();","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"MingShun98"},"content":"                DoctorAppointmentUI.printEmptyCell(input);","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"MingShun98"},"content":"                for (int i \u003d0; i\u003cappointmentList.size();i++) {","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"MingShun98"},"content":"                    if (appointmentList.get(i).getDoctorId().equals(input)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"MingShun98"},"content":"                        DoctorAppointmentUI.printList(appointmentList.get(i), indicator);","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"MingShun98"},"content":"                        if(i !\u003d appointmentList.size()-1)DoctorAppointmentUI.printEmptyCell(\"\");","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"MingShun98"},"content":"                    }","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"MingShun98"},"content":"                }","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"MingShun98"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":65,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":66,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":67,"author":{"gitId":"MingShun98"},"content":"    public static void deleteAppointment(String inputID) throws IOException {","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"MingShun98"},"content":"        String[] iD \u003d inputID.split(\"\");","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":70,"author":{"gitId":"MingShun98"},"content":"        if (iD[0].equals(\"A\")) {","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"MingShun98"},"content":"            for (int i \u003d 0; i \u003c appointmentList.size(); i++) {","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"MingShun98"},"content":"                if (appointmentList.get(i).getAppointmentId().equals(inputID)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"MingShun98"},"content":"                    DoctorAppointmentUI.deletedAptID(appointmentList.get(i).getAppointmentId());","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"MingShun98"},"content":"                    appointmentList.remove(i);","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"MingShun98"},"content":"                    DoctorAppointmentStorage.writeToFile(appointmentList);","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"MingShun98"},"content":"                }","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"MingShun98"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"MingShun98"},"content":"        } else if (iD[0].equals(\"D\")) {","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"MingShun98"},"content":"            for (int i \u003d appointmentList.size()-1; i \u003e\u003d0; i--) {","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"MingShun98"},"content":"                if (appointmentList.get(i).getDoctorId().equals(inputID)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"MingShun98"},"content":"                    DoctorAppointmentUI.deletedDocID(appointmentList.get(i).getDoctorId(), appointmentList.get(i).getAppointmentId());","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"MingShun98"},"content":"                    appointmentList.remove(i);","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"MingShun98"},"content":"                    DoctorAppointmentStorage.writeToFile(appointmentList);","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"MingShun98"},"content":"                }","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"MingShun98"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":86,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":88,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":89,"author":{"gitId":"MingShun98"},"content":"    public static void helpAppointment() {","lastModifiedDate":"2021-03-18"},{"lineNumber":90,"author":{"gitId":"blank-bank"},"content":"        DoctorAppointmentUI.doctorAppointmentHelp();","lastModifiedDate":"2021-03-22"},{"lineNumber":91,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":92,"author":{"gitId":"MingShun98"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"MingShun98":86,"Chiamjiaen":1,"blank-bank":5}},{"path":"src/main/java/seedu/logic/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.DuplicateIDException;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.nurseschedules.*;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"MingShun98"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import seedu.storage.StaffStorage;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"NoorSarrah"},"content":"import seedu.ui.InventoryUI;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"import seedu.ui.DoctorAppointmentUI;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"import seedu.ui.NurseScheduleUI;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.ui.PatientUI;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"import seedu.ui.StaffUI;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"public abstract class Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"    public Command() {","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"    public void execute () {","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"    public void execute (PatientActions patients, PatientUI ui){","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"    public void execute(StaffAggregation staff, StaffUI staffUI, StaffStorage staffStorage) throws IOException {","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"NoorSarrah"},"content":"    public void execute (InventoryActions drugs, InventoryUI ui) {","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"MingShun98"},"content":"    public void execute (AppointmentActions appointment, DoctorAppointmentUI ui) throws HealthVaultException, IOException, Exception {","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void execute (NurseScheduleActions nurseSchedule, NurseScheduleUI ui) throws NurseIdNotFound, InvalidIDTypeException, NurseCrossValidationError, DuplicateIDException, PatientIdNotFound, PatientCrossValidationError, DuplicateScheduleException {","lastModifiedDate":"2021-04-04"},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"NoorSarrah":3,"MingShun98":3,"Chiamjiaen":25,"AlexanderTanJunAn":3,"blank-bank":8}},{"path":"src/main/java/seedu/logic/command/InventoryActions.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NoorSarrah"},"content":"package seedu.logic.command;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"NoorSarrah"},"content":"import seedu.model.Inventory;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":"import seedu.ui.InventoryUI;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"NoorSarrah"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"NoorSarrah"},"content":"import static seedu.ui.UI.prettyPrint;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"NoorSarrah"},"content":"public class InventoryActions {","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":"    private InventoryUI ui;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":"    public static ArrayList\u003cInventory\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":"    public InventoryActions() {","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":15,"author":{"gitId":"NoorSarrah"},"content":"    public InventoryActions(ArrayList\u003cInventory\u003e load) {","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"NoorSarrah"},"content":"     this.list \u003d load;","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"NoorSarrah"},"content":"    public void addDrugs(String[] argArr) {","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"NoorSarrah"},"content":"        Inventory newInventory \u003d new Inventory(argArr[0], Double.parseDouble(argArr[1]), Integer.parseInt(argArr[2]));","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"NoorSarrah"},"content":"        list.add(newInventory);","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"NoorSarrah"},"content":"    public void deleteDrugs(String inputName) {","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"NoorSarrah"},"content":"        String drugName \u003d null;","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"NoorSarrah"},"content":"        for (int i \u003d 0; i\u003c list.size(); i++) {","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"NoorSarrah"},"content":"            Inventory inventoryTemp \u003d list.get(i);","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"NoorSarrah"},"content":"            String tempName \u003d inventoryTemp.getDrugName();","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"NoorSarrah"},"content":"            if (tempName.equals(inputName)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"NoorSarrah"},"content":"                list.remove(inventoryTemp);","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"NoorSarrah"},"content":"                drugName \u003d tempName;","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"NoorSarrah"},"content":"                InventoryUI.deleteDrugMessage(drugName);","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"NoorSarrah"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"NoorSarrah"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"NoorSarrah"},"content":"    public void listDrugs() {","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"NoorSarrah"},"content":"        int numberOfDrugs \u003d list.size();","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"NoorSarrah"},"content":"        if (numberOfDrugs !\u003d 0) {","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"NoorSarrah"},"content":"            //ui.notEmptyInventoryListMessage();","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"NoorSarrah"},"content":"            System.out.print(System.lineSeparator());","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"NoorSarrah"},"content":"            ui.inventoryListHeader();","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":"            for (int i \u003d 0; i \u003c 60; i++) {","lastModifiedDate":"2021-04-03"},{"lineNumber":44,"author":{"gitId":"Chiamjiaen"},"content":"                System.out.print(\"-\");","lastModifiedDate":"2021-04-03"},{"lineNumber":45,"author":{"gitId":"Chiamjiaen"},"content":"            }","lastModifiedDate":"2021-04-03"},{"lineNumber":46,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"\\n\");","lastModifiedDate":"2021-04-03"},{"lineNumber":47,"author":{"gitId":"Chiamjiaen"},"content":"            /*String newString \u003d \"-\";","lastModifiedDate":"2021-04-03"},{"lineNumber":48,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(newString.repeat(60));","lastModifiedDate":"2021-04-03"},{"lineNumber":49,"author":{"gitId":"Chiamjiaen"},"content":"            */","lastModifiedDate":"2021-04-03"},{"lineNumber":50,"author":{"gitId":"NoorSarrah"},"content":"            for (Inventory inventory : list) {","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"NoorSarrah"},"content":"                display(inventory);","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"NoorSarrah"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"NoorSarrah"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"NoorSarrah"},"content":"            ui.emptyInventoryListMessage();","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"NoorSarrah"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"NoorSarrah"},"content":"    public boolean isDrugStored(String inputString) {","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"NoorSarrah"},"content":"        for (Inventory inventory : list) {","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"NoorSarrah"},"content":"            String drugName \u003d inventory.getDrugName();","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"NoorSarrah"},"content":"            if (drugName.equals(inputString)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"NoorSarrah"},"content":"                return true;","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"NoorSarrah"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"NoorSarrah"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"NoorSarrah"},"content":"        return false;","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"NoorSarrah"},"content":"    public static void display(Inventory inventory) {","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"NoorSarrah"},"content":"                prettyPrint(inventory.getDrugName(), 15) + \" | \"","lastModifiedDate":"2021-04-03"},{"lineNumber":71,"author":{"gitId":"NoorSarrah"},"content":"                        + prettyPrint(inventory.getPrice(), 10) + \" | \"","lastModifiedDate":"2021-04-03"},{"lineNumber":72,"author":{"gitId":"NoorSarrah"},"content":"                        + prettyPrint(Integer.toString(inventory.getQuantity()), 5));","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"NoorSarrah"},"content":"    public int getSize() {","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"NoorSarrah"},"content":"        return list.size();","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"NoorSarrah"},"content":"    public String toSaveFile(int i) {","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"NoorSarrah"},"content":"        return list.get(i).toSaveFormat();","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"NoorSarrah"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"NoorSarrah":80,"Chiamjiaen":7}},{"path":"src/main/java/seedu/logic/command/NurseScheduleActions.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.logic.command;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.DuplicateIDException;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.nurseschedules.*;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.logic.errorchecker.NurseScheduleChecker;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.model.NurseSchedule;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"import seedu.ui.NurseScheduleUI;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.ui.UI;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"import static seedu.logic.instance.NurseScheduleInstance.logger;","lastModifiedDate":"2021-04-02"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":"import static seedu.ui.UI.prettyPrint;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.List;","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-04-02"},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class NurseScheduleActions {","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private static ArrayList\u003cNurseSchedule\u003e findSchedules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private static ArrayList\u003cString\u003e nursesFound \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private String nurseID \u003d null;","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private static ArrayList\u003cNurseSchedule\u003e nurseSchedules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public NurseScheduleActions(ArrayList\u003cNurseSchedule\u003e load) {","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"AlexanderTanJunAn"},"content":"        nurseSchedules \u003d load;","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"AlexanderTanJunAn"},"content":"        logger.info(\"Creating a NurseSchedule list\");","lastModifiedDate":"2021-04-02"},{"lineNumber":30,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public NurseScheduleActions() { }","lastModifiedDate":"2021-04-02"},{"lineNumber":33,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":34,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void clearSchedules() {","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"AlexanderTanJunAn"},"content":"        nurseSchedules.clear();","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void addSchedule(String[] details) throws NurseIdNotFound, InvalidIDTypeException,","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"AlexanderTanJunAn"},"content":"            NurseCrossValidationError, PatientIdNotFound, PatientCrossValidationError, DuplicateScheduleException {","lastModifiedDate":"2021-04-04"},{"lineNumber":40,"author":{"gitId":"AlexanderTanJunAn"},"content":"        try {","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"AlexanderTanJunAn"},"content":"            NurseScheduleChecker.checkValidNurseID(details[0]);","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"AlexanderTanJunAn"},"content":"            NurseScheduleChecker.checkDuplicatePatientID(details[1], details[2], nurseSchedules);","lastModifiedDate":"2021-04-04"},{"lineNumber":43,"author":{"gitId":"AlexanderTanJunAn"},"content":"            NurseScheduleChecker.checkNurseIDExist(details[0]);","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"AlexanderTanJunAn"},"content":"            NurseScheduleChecker.checkValidPatientID(details[1]);","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"AlexanderTanJunAn"},"content":"            NurseScheduleChecker.checkPatientDExist(details[1]);","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"AlexanderTanJunAn"},"content":"            nurseSchedules.add(new NurseSchedule(details[0], details[1], details[2]));","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"AlexanderTanJunAn"},"content":"            NurseScheduleUI.printAddedSchedule(details[1], details[2]);","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"AlexanderTanJunAn"},"content":"            logger.info(\"Schedule successfully added\");","lastModifiedDate":"2021-04-02"},{"lineNumber":49,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"AlexanderTanJunAn"},"content":"        catch (ParseException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"AlexanderTanJunAn"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"AlexanderTanJunAn"},"content":"            logger.log(Level.WARNING, \"Failed to add schedule\");","lastModifiedDate":"2021-04-02"},{"lineNumber":53,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * Handler when list command is issued.","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"AlexanderTanJunAn"},"content":"     *","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @param details Contains either NurseID or \u0027all\u0027","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"AlexanderTanJunAn"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void listSchedules(String[] details)","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"AlexanderTanJunAn"},"content":"            throws EmptyListException, NurseIdNotFound {","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"AlexanderTanJunAn"},"content":"        if (details[0].equals(\"ALL\")) {","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"AlexanderTanJunAn"},"content":"            listAllSchedules();","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } else if (isValidNurseID(nurseSchedules, details[0])) {","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"AlexanderTanJunAn"},"content":"            findSchedules.clear();","lastModifiedDate":"2021-03-11"},{"lineNumber":67,"author":{"gitId":"AlexanderTanJunAn"},"content":"            NurseScheduleUI.nurseListHeader();","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"AlexanderTanJunAn"},"content":"            UI.showLine();","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"AlexanderTanJunAn"},"content":"            getNurseSchedulesByID(nurseSchedules, details[0]);","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"AlexanderTanJunAn"},"content":"            printSchedules(findSchedules);","lastModifiedDate":"2021-03-22"},{"lineNumber":71,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":72,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":73,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":74,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * Handler for \u0027list all\u0027 schedules.","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"AlexanderTanJunAn"},"content":"     *","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @throws EmptyListException when nurse schedule list is empty","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"AlexanderTanJunAn"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void listAllSchedules() throws EmptyListException {","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"AlexanderTanJunAn"},"content":"        nursesFound.clear();","lastModifiedDate":"2021-03-11"},{"lineNumber":81,"author":{"gitId":"AlexanderTanJunAn"},"content":"        if (nurseSchedules.size() \u003d\u003d 0) {","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"AlexanderTanJunAn"},"content":"            throw new EmptyListException();","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } else {","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"AlexanderTanJunAn"},"content":"            NurseScheduleUI.nurseListHeader();","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"AlexanderTanJunAn"},"content":"            UI.showLine();","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"AlexanderTanJunAn"},"content":"            for (int i \u003d 0; i \u003c nurseSchedules.size(); i++) {","lastModifiedDate":"2021-03-11"},{"lineNumber":87,"author":{"gitId":"AlexanderTanJunAn"},"content":"                findSchedules.clear();","lastModifiedDate":"2021-03-11"},{"lineNumber":88,"author":{"gitId":"AlexanderTanJunAn"},"content":"                nurseID \u003d nurseSchedules.get(i).getNurseID();","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"AlexanderTanJunAn"},"content":"                if (!isNurseDone(nurseSchedules, i)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    getNurseSchedulesByID(nurseSchedules, nurseID);","lastModifiedDate":"2021-03-22"},{"lineNumber":91,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    printSchedules(findSchedules);","lastModifiedDate":"2021-03-22"},{"lineNumber":92,"author":{"gitId":"AlexanderTanJunAn"},"content":"                }","lastModifiedDate":"2021-03-11"},{"lineNumber":93,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":94,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":95,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":96,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":97,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * Deletes schedule with given nurseID and datetime.","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"AlexanderTanJunAn"},"content":"     *","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @param details nurseID to delete","lastModifiedDate":"2021-03-22"},{"lineNumber":101,"author":{"gitId":"AlexanderTanJunAn"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":102,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void deleteSchedule(String[] details) throws NurseIdNotFound, InvalidScheduleException {","lastModifiedDate":"2021-04-04"},{"lineNumber":103,"author":{"gitId":"AlexanderTanJunAn"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-03-11"},{"lineNumber":104,"author":{"gitId":"AlexanderTanJunAn"},"content":"        while (i \u003c nurseSchedules.size()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":105,"author":{"gitId":"AlexanderTanJunAn"},"content":"            if(!isValidNurseID(nurseSchedules, details[0]) | !isValidSchedule(nurseSchedules, details[0], details[1])) {","lastModifiedDate":"2021-04-04"},{"lineNumber":106,"author":{"gitId":"AlexanderTanJunAn"},"content":"                break;","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"AlexanderTanJunAn"},"content":"            if ((nurseSchedules.get(i).getNurseID()).equals(details[0])","lastModifiedDate":"2021-03-11"},{"lineNumber":109,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    \u0026\u0026 nurseSchedules.get(i).getDatetime().equals(details[1])) {","lastModifiedDate":"2021-03-11"},{"lineNumber":110,"author":{"gitId":"AlexanderTanJunAn"},"content":"                NurseScheduleUI.printDeletedSchedule(nurseSchedules.get(i).getPatientID(),","lastModifiedDate":"2021-03-22"},{"lineNumber":111,"author":{"gitId":"AlexanderTanJunAn"},"content":"                        nurseSchedules.get(i).getFormattedDatetime());","lastModifiedDate":"2021-03-20"},{"lineNumber":112,"author":{"gitId":"AlexanderTanJunAn"},"content":"                nurseSchedules.remove(i);","lastModifiedDate":"2021-03-11"},{"lineNumber":113,"author":{"gitId":"AlexanderTanJunAn"},"content":"                logger.info(\"Schedule successfully removed\");","lastModifiedDate":"2021-04-02"},{"lineNumber":114,"author":{"gitId":"AlexanderTanJunAn"},"content":"                break;","lastModifiedDate":"2021-03-11"},{"lineNumber":115,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":116,"author":{"gitId":"AlexanderTanJunAn"},"content":"            i++;","lastModifiedDate":"2021-03-11"},{"lineNumber":117,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":118,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":119,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":120,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private void getNurseSchedulesByID(List\u003cNurseSchedule\u003e nurseSchedules, String id) {","lastModifiedDate":"2021-03-22"},{"lineNumber":121,"author":{"gitId":"AlexanderTanJunAn"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-03-22"},{"lineNumber":122,"author":{"gitId":"AlexanderTanJunAn"},"content":"        while (i \u003c nurseSchedules.size()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":123,"author":{"gitId":"AlexanderTanJunAn"},"content":"            if (nurseSchedules.get(i).getNurseID().equals(id)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":124,"author":{"gitId":"AlexanderTanJunAn"},"content":"                findSchedules.add(nurseSchedules.get(i));","lastModifiedDate":"2021-03-22"},{"lineNumber":125,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }","lastModifiedDate":"2021-03-22"},{"lineNumber":126,"author":{"gitId":"AlexanderTanJunAn"},"content":"            i++;","lastModifiedDate":"2021-03-22"},{"lineNumber":127,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":128,"author":{"gitId":"AlexanderTanJunAn"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":129,"author":{"gitId":"AlexanderTanJunAn"},"content":"            Collections.sort(findSchedules);","lastModifiedDate":"2021-03-22"},{"lineNumber":130,"author":{"gitId":"AlexanderTanJunAn"},"content":"            System.out.println(prettyPrint(id, 10) + \" | \" + findSchedules.get(0).toFind());","lastModifiedDate":"2021-04-01"},{"lineNumber":131,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (Exception ignored) {}","lastModifiedDate":"2021-04-04"},{"lineNumber":132,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":133,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":134,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":135,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * Prints schedules.","lastModifiedDate":"2021-03-22"},{"lineNumber":136,"author":{"gitId":"AlexanderTanJunAn"},"content":"     *","lastModifiedDate":"2021-03-22"},{"lineNumber":137,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @param list List of schedules to be printed","lastModifiedDate":"2021-03-22"},{"lineNumber":138,"author":{"gitId":"AlexanderTanJunAn"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":139,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private void printSchedules(List\u003cNurseSchedule\u003e list) {","lastModifiedDate":"2021-03-22"},{"lineNumber":140,"author":{"gitId":"AlexanderTanJunAn"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-03-30"},{"lineNumber":141,"author":{"gitId":"AlexanderTanJunAn"},"content":"        while (i \u003c list.size()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":142,"author":{"gitId":"AlexanderTanJunAn"},"content":"            NurseScheduleUI.printEmptyCell();","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"AlexanderTanJunAn"},"content":"            System.out.println(list.get(i).toFind());","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"AlexanderTanJunAn"},"content":"            i++;","lastModifiedDate":"2021-03-22"},{"lineNumber":145,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":146,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":147,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":148,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private boolean isNurseDone(List\u003cNurseSchedule\u003e nurseSchedules, int i) {","lastModifiedDate":"2021-03-22"},{"lineNumber":149,"author":{"gitId":"AlexanderTanJunAn"},"content":"        if (nursesFound.contains(nurseSchedules.get(i).getNurseID())) {","lastModifiedDate":"2021-03-22"},{"lineNumber":150,"author":{"gitId":"AlexanderTanJunAn"},"content":"            return true;","lastModifiedDate":"2021-03-22"},{"lineNumber":151,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } else {","lastModifiedDate":"2021-03-22"},{"lineNumber":152,"author":{"gitId":"AlexanderTanJunAn"},"content":"            nursesFound.add(nurseSchedules.get(i).getNurseID());","lastModifiedDate":"2021-03-22"},{"lineNumber":153,"author":{"gitId":"AlexanderTanJunAn"},"content":"            return false;","lastModifiedDate":"2021-03-22"},{"lineNumber":154,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":155,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":156,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":157,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":158,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * Checks if nurseID exists within schedules.","lastModifiedDate":"2021-03-22"},{"lineNumber":159,"author":{"gitId":"AlexanderTanJunAn"},"content":"     *","lastModifiedDate":"2021-03-22"},{"lineNumber":160,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @param nurseSchedules List of all schedules","lastModifiedDate":"2021-03-22"},{"lineNumber":161,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @param id NurseID to check","lastModifiedDate":"2021-03-22"},{"lineNumber":162,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @return boolean","lastModifiedDate":"2021-03-22"},{"lineNumber":163,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @throws NurseIdNotFound if id does not exist","lastModifiedDate":"2021-03-22"},{"lineNumber":164,"author":{"gitId":"AlexanderTanJunAn"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":165,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private boolean isValidNurseID(List\u003cNurseSchedule\u003e nurseSchedules, String id) throws NurseIdNotFound {","lastModifiedDate":"2021-03-22"},{"lineNumber":166,"author":{"gitId":"AlexanderTanJunAn"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-03-22"},{"lineNumber":167,"author":{"gitId":"AlexanderTanJunAn"},"content":"        while (i \u003c nurseSchedules.size()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":168,"author":{"gitId":"AlexanderTanJunAn"},"content":"            if (nurseSchedules.get(i).getNurseID().equals(id)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":169,"author":{"gitId":"AlexanderTanJunAn"},"content":"                return true;","lastModifiedDate":"2021-03-22"},{"lineNumber":170,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }","lastModifiedDate":"2021-03-22"},{"lineNumber":171,"author":{"gitId":"AlexanderTanJunAn"},"content":"            i++;","lastModifiedDate":"2021-03-22"},{"lineNumber":172,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":173,"author":{"gitId":"AlexanderTanJunAn"},"content":"        throw new NurseIdNotFound();","lastModifiedDate":"2021-03-22"},{"lineNumber":174,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":175,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":176,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private boolean isValidSchedule(List\u003cNurseSchedule\u003e nurseSchedules, String id, String date) throws InvalidScheduleException {","lastModifiedDate":"2021-04-04"},{"lineNumber":177,"author":{"gitId":"AlexanderTanJunAn"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-04-04"},{"lineNumber":178,"author":{"gitId":"AlexanderTanJunAn"},"content":"        while (i \u003c nurseSchedules.size()) {","lastModifiedDate":"2021-04-04"},{"lineNumber":179,"author":{"gitId":"AlexanderTanJunAn"},"content":"            if (nurseSchedules.get(i).getNurseID().equals(id)) {","lastModifiedDate":"2021-04-04"},{"lineNumber":180,"author":{"gitId":"AlexanderTanJunAn"},"content":"                if (nurseSchedules.get(i).getDatetime().equals(date)) {","lastModifiedDate":"2021-04-04"},{"lineNumber":181,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    return true;","lastModifiedDate":"2021-04-04"},{"lineNumber":182,"author":{"gitId":"AlexanderTanJunAn"},"content":"                }","lastModifiedDate":"2021-04-04"},{"lineNumber":183,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }","lastModifiedDate":"2021-04-04"},{"lineNumber":184,"author":{"gitId":"AlexanderTanJunAn"},"content":"            i++;","lastModifiedDate":"2021-04-04"},{"lineNumber":185,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":186,"author":{"gitId":"AlexanderTanJunAn"},"content":"        throw new InvalidScheduleException();","lastModifiedDate":"2021-04-04"},{"lineNumber":187,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":188,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":189,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public int getSize() {","lastModifiedDate":"2021-03-29"},{"lineNumber":190,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return nurseSchedules.size();","lastModifiedDate":"2021-03-29"},{"lineNumber":191,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":192,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":193,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String toSaveFile(int i) {","lastModifiedDate":"2021-03-29"},{"lineNumber":194,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return nurseSchedules.get(i).toSave();","lastModifiedDate":"2021-03-29"},{"lineNumber":195,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":196,"author":{"gitId":"AlexanderTanJunAn"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"Chiamjiaen":1,"AlexanderTanJunAn":193,"blank-bank":2}},{"path":"src/main/java/seedu/logic/command/PatientActions.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.model.Patient;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import seedu.ui.PatientUI;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import seedu.ui.UI;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"import java.util.Locale;","lastModifiedDate":"2021-04-04"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"public class PatientActions {","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"    private static ArrayList\u003cPatient\u003e patients \u003d new ArrayList\u003cPatient\u003e();","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    public PatientActions() {","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"    public PatientActions(ArrayList\u003cPatient\u003e load) {","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"        this.patients \u003d load;","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"    public void addPatient(String[] argArr) {","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"        Patient newPatient \u003d new Patient(argArr[0], argArr[1], Integer.parseInt(argArr[2]), argArr[3], argArr[4], argArr[5]);","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"        patients.add(newPatient);","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"    public void findPatient(String inputString) {","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"        int numberOfPatients \u003d patients.size();","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"        boolean isFound \u003d false;","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"        boolean isHeaderPrinted \u003d false;","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"        for (int i \u003d 0; i \u003c numberOfPatients; i++) {","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"            String patientDetails \u003d patients.get(i).getPatientDetailsString().toLowerCase();","lastModifiedDate":"2021-04-04"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"            String[] patientDetailsArr \u003d patients.get(i).getPatientDetailsArray();","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"            if (patientDetails.contains(inputString.toLowerCase())) {","lastModifiedDate":"2021-04-04"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"                isFound \u003d true;","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"                if (!isHeaderPrinted) {","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"                    PatientUI.patientListHeader();","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"                    isHeaderPrinted \u003d true;","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"                }","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"                PatientUI.printPatientList(patientDetailsArr);","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":"        if (!isFound) {","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":"            PatientUI.patientNotFoundMessage();","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"Chiamjiaen"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isIDTaken(String inputString) {","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"Chiamjiaen"},"content":"        for (Patient patient : patients) {","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"Chiamjiaen"},"content":"            String patientID \u003d patient.getPatientID();","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"Chiamjiaen"},"content":"            if (patientID.equals(inputString)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"Chiamjiaen"},"content":"                return true;","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"Chiamjiaen"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"Chiamjiaen"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"Chiamjiaen"},"content":"        return false;","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"Chiamjiaen"},"content":"    public void listPatients() {","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"Chiamjiaen"},"content":"        int numberOfPatients \u003d patients.size();","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"Chiamjiaen"},"content":"        if (numberOfPatients \u003d\u003d 0) {","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":"            PatientUI.emptyPatientListMessage();","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"Chiamjiaen"},"content":"        } else {","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"blank-bank"},"content":"            PatientUI.notEmptyPatientListMessage();","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"Chiamjiaen"},"content":"            PatientUI.patientListHeader();","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"Chiamjiaen"},"content":"            for (int i \u003d 0; i \u003c numberOfPatients; i++) {","lastModifiedDate":"2021-03-11"},{"lineNumber":65,"author":{"gitId":"Chiamjiaen"},"content":"                PatientUI.printPatientList(patients.get(i).getPatientDetailsArray());","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"Chiamjiaen"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":67,"author":{"gitId":"Chiamjiaen"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":68,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":69,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":70,"author":{"gitId":"Chiamjiaen"},"content":"    public void deletePatient(String inputID) {","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"Chiamjiaen"},"content":"        int patientIndex \u003d 0;","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"Chiamjiaen"},"content":"        String patientName \u003d null;","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"Chiamjiaen"},"content":"        for (int i \u003d 0; i \u003c patients.size(); i++) {","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"Chiamjiaen"},"content":"            Patient patientTemp \u003d patients.get(i);","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"Chiamjiaen"},"content":"            String tempID \u003d patientTemp.getPatientID();","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"Chiamjiaen"},"content":"            String tempName \u003d patientTemp.getPatientName();","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"Chiamjiaen"},"content":"            if (tempID.equals(inputID)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"Chiamjiaen"},"content":"                patientIndex \u003d i;","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"Chiamjiaen"},"content":"                patientName \u003d tempName;","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"Chiamjiaen"},"content":"                break;","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"Chiamjiaen"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"Chiamjiaen"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":83,"author":{"gitId":"Chiamjiaen"},"content":"        patients.remove(patientIndex);","lastModifiedDate":"2021-03-11"},{"lineNumber":84,"author":{"gitId":"blank-bank"},"content":"        PatientUI.deletePatientMessage(patientName, patients.size());","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":86,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":87,"author":{"gitId":"Chiamjiaen"},"content":"    public int getSize() {","lastModifiedDate":"2021-03-11"},{"lineNumber":88,"author":{"gitId":"Chiamjiaen"},"content":"        return patients.size();","lastModifiedDate":"2021-03-11"},{"lineNumber":89,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":90,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":91,"author":{"gitId":"Chiamjiaen"},"content":"    public String toSaveFile(int i) {","lastModifiedDate":"2021-03-11"},{"lineNumber":92,"author":{"gitId":"Chiamjiaen"},"content":"        return patients.get(i).toSaveFormat();","lastModifiedDate":"2021-03-11"},{"lineNumber":93,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":94,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"Chiamjiaen":88,"blank-bank":6}},{"path":"src/main/java/seedu/logic/command/StaffAggregation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.errorchecker.StaffChecker;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.model.staff.Staff;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import seedu.ui.StaffUI;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"import static seedu.ui.UI.prettyPrint;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"public class StaffAggregation {","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"    private static final String DOCTOR_TYPE \u003d \"D\";","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"    private static final String NURSE_TYPE \u003d \"N\";","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"    private ArrayList\u003cStaff\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"    protected static int numStaff \u003d 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"    private StaffChecker staffChecker \u003d new StaffChecker();","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"    public StaffAggregation() {","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"    public void resetList() {","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"        this.list.clear();","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"        numStaff\u003d0;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"    public void addStaff(Staff staff) {","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"        list.add(staff);","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"        numStaff++;","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"    public void add(String[] array) {","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"        if (isValidID(array[0])) {","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"            Staff staff \u003d new Staff(array);","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"            addStaff(staff);","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"    public boolean isValidID(String id) {","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"        for (Staff staff : list) {","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"            if (staff.getId().equals(id)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"                return false;","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"        return true;","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"    public ArrayList\u003cStaff\u003e getList() {","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"        return this.list;","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"    public void list(String... parameter) {","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"        if (getNumStaff() \u003d\u003d 0){","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":"            StaffUI.emptyListOutput();","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":"        if (parameter[0] \u003d\u003d (null)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"blank-bank"},"content":"            for (Staff staff : list) {","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"                display(staff);","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":"        } else if (parameter[0].equals(\"nurses\")) {","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":"            for (Staff staff : list) {","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"blank-bank"},"content":"                if (staff.getType().equals(NURSE_TYPE)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"blank-bank"},"content":"                    display(staff);","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"blank-bank"},"content":"                }","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"blank-bank"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"blank-bank"},"content":"        } else if (parameter[0].equals(\"doctors\")) {","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"blank-bank"},"content":"            for (Staff staff : list) {","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"blank-bank"},"content":"                if (staff.getType().equals(DOCTOR_TYPE)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"blank-bank"},"content":"                    display(staff);","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"blank-bank"},"content":"                }","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"blank-bank"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"blank-bank"},"content":"    public void find(String keyword) {","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"blank-bank"},"content":"        for (Staff staff : list) {","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"blank-bank"},"content":"            if (search(keyword, staff)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"blank-bank"},"content":"                display(staff);","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"blank-bank"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"blank-bank"},"content":"    public boolean search(String keyword, Staff staff) {","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"blank-bank"},"content":"        return staffChecker.isSameInt(staff.getAge(), keyword) || staff.getName().contains(keyword)","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"blank-bank"},"content":"                    || staff.getId().contains(keyword) || staff.getSpecialisation().contains(keyword);","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"blank-bank"},"content":"    public void delete(String line) {","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"blank-bank"},"content":"        boolean isExistingID \u003d false;","lastModifiedDate":"2021-03-18"},{"lineNumber":93,"author":{"gitId":"blank-bank"},"content":"        for (Iterator\u003cStaff\u003e iterator \u003d list.iterator(); iterator.hasNext(); ) {","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"blank-bank"},"content":"            Staff staff \u003d iterator.next();","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"blank-bank"},"content":"            if (staff.getId().equals(line.split(\"/\")[1])) {","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"blank-bank"},"content":"                iterator.remove();","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"blank-bank"},"content":"                numStaff--;","lastModifiedDate":"2021-03-18"},{"lineNumber":98,"author":{"gitId":"blank-bank"},"content":"                isExistingID \u003d true;","lastModifiedDate":"2021-03-18"},{"lineNumber":99,"author":{"gitId":"blank-bank"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"blank-bank"},"content":"        if (isExistingID) {","lastModifiedDate":"2021-03-18"},{"lineNumber":102,"author":{"gitId":"blank-bank"},"content":"            StaffUI.staffFiredOutput(line);","lastModifiedDate":"2021-03-22"},{"lineNumber":103,"author":{"gitId":"blank-bank"},"content":"        } else {","lastModifiedDate":"2021-03-18"},{"lineNumber":104,"author":{"gitId":"blank-bank"},"content":"            StaffUI.staffDoesNotExist(line);","lastModifiedDate":"2021-03-22"},{"lineNumber":105,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":106,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"blank-bank"},"content":"    public static void display(Staff staff) {","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"blank-bank"},"content":"        System.out.println(","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"blank-bank"},"content":"                prettyPrint(staff.getId(), 10) + \" | \" + prettyPrint(staff.getName(), 10) + \" | \"","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"blank-bank"},"content":"                        + prettyPrint(Integer.toString(staff.getAge()), 5) + \" | \" + prettyPrint(staff.getSpecialisation(), 20));","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"blank-bank"},"content":"    public static int getNumStaff() {","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"blank-bank"},"content":"        return numStaff;","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"blank-bank"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Chiamjiaen":2,"AlexanderTanJunAn":2,"blank-bank":113}},{"path":"src/main/java/seedu/logic/command/doctorappointment/DoctorAppointmentAdd.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.doctorappointment;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"MingShun98"},"content":"import seedu.exceptions.doctorappointment.*;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.AppointmentActions;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"MingShun98"},"content":"import seedu.logic.parser.DoctorAppointmentParser;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":"import seedu.logic.parser.NurseSchedulesParser;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"MingShun98"},"content":"import seedu.ui.DoctorAppointmentUI;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"MingShun98"},"content":"import javax.print.Doc;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"MingShun98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"public class DoctorAppointmentAdd extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"MingShun98"},"content":"    private String[] input;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"MingShun98"},"content":"    public DoctorAppointmentAdd(String[] parsedInput) {","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"MingShun98"},"content":"        input \u003d parsedInput;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"MingShun98"},"content":"    public void execute(AppointmentActions appointment, DoctorAppointmentUI ui) throws IOException {","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"MingShun98"},"content":"        AppointmentActions.addAppointment(input);","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"MingShun98":12,"Chiamjiaen":18}},{"path":"src/main/java/seedu/logic/command/doctorappointment/DoctorAppointmentDelete.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.doctorappointment;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.AppointmentActions;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"MingShun98"},"content":"import seedu.ui.DoctorAppointmentUI;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"MingShun98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"public class DoctorAppointmentDelete extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"MingShun98"},"content":"    private String[] input;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"MingShun98"},"content":"    private String ID;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"MingShun98"},"content":"    public DoctorAppointmentDelete(String[] parsedInput) {","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"MingShun98"},"content":"        ID \u003d parsedInput[1];","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"MingShun98"},"content":"        input \u003d parsedInput;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"MingShun98"},"content":"    public void execute(AppointmentActions appointment, DoctorAppointmentUI ui) throws IOException {","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"MingShun98"},"content":"        AppointmentActions.deleteAppointment(ID);","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"MingShun98":12,"Chiamjiaen":18}},{"path":"src/main/java/seedu/logic/command/doctorappointment/DoctorAppointmentHelp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.doctorappointment;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"MingShun98"},"content":"import seedu.logic.command.AppointmentActions;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"MingShun98"},"content":"import seedu.ui.DoctorAppointmentUI;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"public class DoctorAppointmentHelp extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"MingShun98"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"MingShun98"},"content":"    public void execute(AppointmentActions appointment, DoctorAppointmentUI ui) {","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"MingShun98"},"content":"        AppointmentActions.helpAppointment();","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"MingShun98":7,"Chiamjiaen":11}},{"path":"src/main/java/seedu/logic/command/doctorappointment/DoctorAppointmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.doctorappointment;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"MingShun98"},"content":"import seedu.exceptions.EmptyListException;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"MingShun98"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.AppointmentActions;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":"import seedu.ui.DoctorAppointmentUI;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"MingShun98"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"public class DoctorAppointmentList extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"MingShun98"},"content":"    private String[] input;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"MingShun98"},"content":"    private String ID;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"MingShun98"},"content":"    public DoctorAppointmentList(String[] parsedInput) {","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"MingShun98"},"content":"        ID \u003d parsedInput[1];","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"MingShun98"},"content":"        input \u003d parsedInput;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"MingShun98"},"content":"    public void execute(AppointmentActions appointment, DoctorAppointmentUI ui) throws ParseException, EmptyListException, HealthVaultException {","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"MingShun98"},"content":"        AppointmentActions.listAppointment(ID);","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"MingShun98":14,"Chiamjiaen":16}},{"path":"src/main/java/seedu/logic/command/doctorappointment/DoctorAppointmentReturn.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.doctorappointment;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"public class DoctorAppointmentReturn extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"        return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Chiamjiaen":11}},{"path":"src/main/java/seedu/logic/command/inventory/InventoryAdd.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.inventory;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":"import seedu.logic.command.InventoryActions;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"NoorSarrah"},"content":"import seedu.ui.InventoryUI;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"public class InventoryAdd extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":"    private String[] argArr;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":"    public InventoryAdd(String[] args) {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":"        this.argArr \u003d args;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"NoorSarrah"},"content":"    public void execute(InventoryActions drugs, InventoryUI ui) {","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"NoorSarrah"},"content":"        drugs.addDrugs(argArr);","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"NoorSarrah"},"content":"        ui.drugAddedMessage(argArr[0]);","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"NoorSarrah":13,"Chiamjiaen":11}},{"path":"src/main/java/seedu/logic/command/inventory/InventoryDelete.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.inventory;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"NoorSarrah"},"content":"import seedu.logic.command.InventoryActions;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":"import seedu.ui.InventoryUI;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"public class InventoryDelete extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":"    private String args;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":"    public InventoryDelete(String args) {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":"        this.args \u003d args;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"NoorSarrah"},"content":"    public void execute(InventoryActions drugs, InventoryUI ui) {","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"NoorSarrah"},"content":"        drugs.deleteDrugs(args);","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"NoorSarrah":11,"Chiamjiaen":11}},{"path":"src/main/java/seedu/logic/command/inventory/InventoryHelp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.inventory;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":"import seedu.logic.command.InventoryActions;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"NoorSarrah"},"content":"import seedu.ui.InventoryUI;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"public class InventoryHelp extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":"    public void execute(InventoryActions drugs, InventoryUI ui) {","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":"        ui.printInventoryHelpMessage();","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"NoorSarrah":6,"Chiamjiaen":11}},{"path":"src/main/java/seedu/logic/command/inventory/InventoryList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.inventory;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":"import seedu.logic.command.InventoryActions;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"NoorSarrah"},"content":"import seedu.ui.InventoryUI;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"public class InventoryList extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":"    public void execute(InventoryActions inventory, InventoryUI ui) {","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":"        inventory.listDrugs();","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"NoorSarrah":6,"Chiamjiaen":11}},{"path":"src/main/java/seedu/logic/command/inventory/InventoryReturn.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.inventory;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"public class InventoryReturn extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"        return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Chiamjiaen":11}},{"path":"src/main/java/seedu/logic/command/nurseschedule/NurseScheduleAdd.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.nurseschedule;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.DuplicateIDException;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.nurseschedules.*;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.logic.command.NurseScheduleActions;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.ui.NurseScheduleUI;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"public class NurseScheduleAdd extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private String[] argArr;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public NurseScheduleAdd(String [] args) {","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":"        argArr \u003d args;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void execute(NurseScheduleActions nurseSchedules, NurseScheduleUI ui) throws NurseIdNotFound, InvalidIDTypeException,","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":"            NurseCrossValidationError, DuplicateIDException, PatientIdNotFound, PatientCrossValidationError, DuplicateScheduleException {","lastModifiedDate":"2021-04-04"},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":"        nurseSchedules.addSchedule(argArr);","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Chiamjiaen":10,"AlexanderTanJunAn":17}},{"path":"src/main/java/seedu/logic/command/nurseschedule/NurseScheduleDelete.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.nurseschedule;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.nurseschedules.InvalidScheduleException;","lastModifiedDate":"2021-04-04"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.nurseschedules.NurseIdNotFound;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.logic.command.NurseScheduleActions;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.ui.NurseScheduleUI;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"public class NurseScheduleDelete extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private String[] argArr;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public NurseScheduleDelete(String [] args) {","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":"        argArr \u003d args;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void execute(NurseScheduleActions nurseSchedules, NurseScheduleUI ui) {","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":"        try {","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":"            nurseSchedules.deleteSchedule(argArr);","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (NurseIdNotFound | InvalidScheduleException e) {","lastModifiedDate":"2021-04-04"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Chiamjiaen":11,"AlexanderTanJunAn":19}},{"path":"src/main/java/seedu/logic/command/nurseschedule/NurseScheduleHelp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.nurseschedule;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.logic.command.NurseScheduleActions;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.ui.NurseScheduleUI;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"public class NurseScheduleHelp extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void execute(NurseScheduleActions nurseSchedules, NurseScheduleUI ui) {","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":"        ui.printNurseScheduleHelpList();","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Chiamjiaen":11,"AlexanderTanJunAn":7}},{"path":"src/main/java/seedu/logic/command/nurseschedule/NurseScheduleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.nurseschedule;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.nurseschedules.EmptyListException;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.nurseschedules.NurseIdNotFound;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.logic.command.NurseScheduleActions;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.ui.NurseScheduleUI;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"public class NurseScheduleList extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private String[] argArr;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public NurseScheduleList(String [] args) {","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":"        argArr \u003d args;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void execute(NurseScheduleActions nurseSchedules, NurseScheduleUI ui) {","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":"        try {","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":"            nurseSchedules.listSchedules(argArr);","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (EmptyListException e) {","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (NurseIdNotFound e) {","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"AlexanderTanJunAn"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Chiamjiaen":11,"AlexanderTanJunAn":21}},{"path":"src/main/java/seedu/logic/command/nurseschedule/NurseScheduleReturn.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.nurseschedule;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"public class NurseScheduleReturn extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"        return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Chiamjiaen":11}},{"path":"src/main/java/seedu/logic/command/patient/PatientAdd.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.patient;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.PatientActions;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.ui.PatientUI;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"public class PatientAdd extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    private String[] argArr;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"    public PatientAdd(String[] args) {","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"        argArr \u003d args;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"    public void execute(PatientActions patients, PatientUI ui) {","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"        patients.addPatient(argArr);","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"        ui.patientAddedMessage(argArr[1]);","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Chiamjiaen":24}},{"path":"src/main/java/seedu/logic/command/patient/PatientDelete.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.patient;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.PatientActions;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.ui.PatientUI;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"public class PatientDelete extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    private String args;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"    public PatientDelete(String args) {","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"        this.args \u003d args;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"    public void execute(PatientActions patients, PatientUI ui) {","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"        patients.deletePatient(args);","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Chiamjiaen":23}},{"path":"src/main/java/seedu/logic/command/patient/PatientFind.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.patient;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.PatientActions;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.ui.PatientUI;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"public class PatientFind extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    private String args;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"    public PatientFind(String args) {","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"        this.args \u003d args;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"    public void execute(PatientActions patients, PatientUI ui) {","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"        patients.findPatient(args);","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Chiamjiaen":24}},{"path":"src/main/java/seedu/logic/command/patient/PatientHelp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.patient;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.PatientActions;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.ui.PatientUI;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"public class PatientHelp extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"    public void execute(PatientActions patients, PatientUI ui) {","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"        ui.printPatientHelpList();","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Chiamjiaen":18}},{"path":"src/main/java/seedu/logic/command/patient/PatientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.patient;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.PatientActions;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.ui.PatientUI;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"public class PatientList extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"    public void execute(PatientActions patients, PatientUI ui) {","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"        patients.listPatients();","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Chiamjiaen":18}},{"path":"src/main/java/seedu/logic/command/patient/PatientReturn.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.patient;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"public class PatientReturn extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"        return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Chiamjiaen":11}},{"path":"src/main/java/seedu/logic/command/staff/StaffAdd.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.staff;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.DuplicateIDException;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.command.StaffAggregation;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import seedu.storage.StaffStorage;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"import seedu.ui.StaffUI;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"public class StaffAdd extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"    private String[] argArr;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"    public StaffAdd(String[] args) {","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"        argArr \u003d args;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"    public void execute(StaffAggregation staffAggregation, StaffUI staffUI, StaffStorage staffStorage) {","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"        staffAggregation.add(argArr);","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"        try {","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"            staffStorage.writeToFile(staffAggregation);","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Chiamjiaen":11,"blank-bank":22}},{"path":"src/main/java/seedu/logic/command/staff/StaffDelete.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.staff;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.command.StaffAggregation;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import seedu.storage.StaffStorage;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import seedu.ui.StaffUI;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"public class StaffDelete extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"    private String input;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"    public StaffDelete (String line) {","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"        this.input \u003d line;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"    public void execute(StaffAggregation staffAggregation, StaffUI staffUI, StaffStorage staffStorage) throws IOException {","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"        staffAggregation.delete(input);","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"        staffStorage.writeToFile(staffAggregation);","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Chiamjiaen":11,"blank-bank":16}},{"path":"src/main/java/seedu/logic/command/staff/StaffFind.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.staff;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.command.StaffAggregation;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import seedu.storage.StaffStorage;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import seedu.ui.StaffUI;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"import seedu.ui.UI;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"public class StaffFind extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"    private String input;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"    public StaffFind (String line) {","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"        this.input \u003d line;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"    public void execute(StaffAggregation staffAggregation, StaffUI staffUI, StaffStorage staffStorage) throws IOException {","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"        UI.printEmptyLine();","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"        StaffUI.staffListHeader();","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"        UI.showLine();","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"        staffAggregation.find(this.input.split(\"/\")[1]);","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"        UI.printEmptyLine();","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Chiamjiaen":11,"blank-bank":21}},{"path":"src/main/java/seedu/logic/command/staff/StaffHelp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.staff;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.command.StaffAggregation;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import seedu.storage.StaffStorage;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import seedu.ui.StaffUI;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"public class StaffHelp extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"    public StaffHelp() {","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"    public void execute(StaffAggregation staffAggregation, StaffUI staffUI, StaffStorage staffStorage) {","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"        StaffUI.printStaffHelpMessage();","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Chiamjiaen":11,"blank-bank":10}},{"path":"src/main/java/seedu/logic/command/staff/StaffList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.staff;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.command.StaffAggregation;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import seedu.storage.StaffStorage;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import seedu.ui.StaffUI;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"import seedu.ui.UI;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"public class StaffList extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"    private String input;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"    public StaffList (String line) {","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"        this.input \u003d line;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"    public void execute(StaffAggregation staffAggregation, StaffUI staffUI, StaffStorage staffStorage) {","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"        UI.printEmptyLine();","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"        if (StaffAggregation.getNumStaff() \u003d\u003d 0) {","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"            StaffUI.emptyListOutput();","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"            UI.printEmptyLine();","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"            return;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"        StaffUI.staffListHeader();","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"        UI.showLine();","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"        String[] string \u003d Arrays.copyOfRange(this.input.split(\"/\"), 1, 2);","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"        staffAggregation.list(string);","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"        UI.printEmptyLine();","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Chiamjiaen":14,"blank-bank":22}},{"path":"src/main/java/seedu/logic/command/staff/StaffReturn.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.staff;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.command.StaffAggregation;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import seedu.storage.StaffStorage;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import seedu.ui.StaffUI;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"public class StaffReturn extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"    public void execute(StaffAggregation staffAggregation, StaffUI staffUI, StaffStorage staffStorage) throws IOException {","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"       staffAggregation.resetList();","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"        return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Chiamjiaen":11,"blank-bank":10}},{"path":"src/main/java/seedu/logic/command/startmenu/MainExit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.startmenu;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"public class MainExit extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"        return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Chiamjiaen":11}},{"path":"src/main/java/seedu/logic/command/startmenu/MainHelp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.startmenu;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.ui.UI;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"public class MainHelp extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    public void execute() {","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"        UI.printStartMenu();","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Chiamjiaen":17}},{"path":"src/main/java/seedu/logic/command/startmenu/ToDoctorAppointmentInstance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.startmenu;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.instance.DoctorAppointmentInstance;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"import static seedu.duke.Constants.APPOINTMENT_FILE_PATH;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"public class ToDoctorAppointmentInstance extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"    public void execute() {","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"        DoctorAppointmentInstance appointmentInstance \u003d new DoctorAppointmentInstance(APPOINTMENT_FILE_PATH);","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"        appointmentInstance.run();","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Chiamjiaen":19}},{"path":"src/main/java/seedu/logic/command/startmenu/ToInventoryInstance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.startmenu;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.instance.InventoryInstance;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"import static seedu.duke.Constants.INVENTORY_FILE_PATH;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"public class ToInventoryInstance extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"    public void execute() {","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"        InventoryInstance inventory \u003d new InventoryInstance(INVENTORY_FILE_PATH);","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"        inventory.run();","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Chiamjiaen":20}},{"path":"src/main/java/seedu/logic/command/startmenu/ToNurseScheduleInstance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.startmenu;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.logic.instance.NurseScheduleInstance;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"public class ToNurseScheduleInstance extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void execute() {","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"        NurseScheduleInstance schedules \u003d new NurseScheduleInstance();","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":"        schedules.runCommandLoopUntilExit();","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Chiamjiaen":11,"AlexanderTanJunAn":7}},{"path":"src/main/java/seedu/logic/command/startmenu/ToPatientInstance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.startmenu;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.instance.PatientCommandInstance;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"import static seedu.duke.Constants.PATIENT_FILE_PATH;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"public class ToPatientInstance extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"    public void execute() {","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"        PatientCommandInstance patients \u003d new PatientCommandInstance(PATIENT_FILE_PATH);","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"        patients.run();","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Chiamjiaen":19}},{"path":"src/main/java/seedu/logic/command/startmenu/ToStaffInstance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.command.startmenu;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.instance.StaffInstance;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import static seedu.duke.Constants.STAFF_FILE_PATH;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"public class ToStaffInstance extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"    public void execute() {","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"        StaffInstance staffInstance \u003d new StaffInstance(STAFF_FILE_PATH);","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"        staffInstance.run();","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"        return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Chiamjiaen":11,"blank-bank":7}},{"path":"src/main/java/seedu/logic/errorchecker/DoctorAppointmentChecker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.logic.errorchecker;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"MingShun98"},"content":"import seedu.duke.Constants;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"MingShun98"},"content":"import seedu.exceptions.*;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"MingShun98"},"content":"import seedu.exceptions.doctorappointment.*;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"MingShun98"},"content":"import seedu.exceptions.doctorappointment.InvalidGenderException;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":"import seedu.exceptions.patient.IllegalCharacterException;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"MingShun98"},"content":"import seedu.exceptions.staff.WrongStaffIdException;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"MingShun98"},"content":"import seedu.logic.command.AppointmentActions;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"MingShun98"},"content":"import seedu.logic.parser.DoctorAppointmentParser;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"MingShun98"},"content":"import seedu.model.DoctorAppointment;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"MingShun98"},"content":"import seedu.model.staff.Staff;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"MingShun98"},"content":"import seedu.storage.DoctorAppointmentStorage;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"MingShun98"},"content":"import seedu.ui.UI;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"MingShun98"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"MingShun98"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"MingShun98"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"MingShun98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"MingShun98"},"content":"import java.util.Date;","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"public class DoctorAppointmentChecker extends MainChecker {","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"MingShun98"},"content":"    private static String doctorID;","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"MingShun98"},"content":"    private static String appointmentID;","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"MingShun98"},"content":"    private static String name;","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"MingShun98"},"content":"    private static String ID;","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"MingShun98"},"content":"    private static String gender;","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"MingShun98"},"content":"    private static String date;","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"MingShun98"},"content":"    public static void checkValidDataForAdd(String[] input) throws HealthVaultException {","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"MingShun98"},"content":"        doctorID \u003d input[1];","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"MingShun98"},"content":"        appointmentID \u003d input[2];","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"MingShun98"},"content":"        name \u003d input[3];","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"MingShun98"},"content":"        gender \u003d input[4];","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"MingShun98"},"content":"        date \u003d input[5];","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"MingShun98"},"content":"        if (!isValidDocID(doctorID)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"MingShun98"},"content":"            throw new DocIDNotFoundException(doctorID);","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"MingShun98"},"content":"        if (!isValidAppointmentID(appointmentID)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"MingShun98"},"content":"            throw new IDNotFoundException(appointmentID);","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"MingShun98"},"content":"        illegalCharacterChecker(name, \"name\");","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"MingShun98"},"content":"        if (!isValidGender(gender)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"MingShun98"},"content":"            throw new InvalidGenderException();","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"MingShun98"},"content":"        if (!isValidDate(date)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"MingShun98"},"content":"            throw new seedu.exceptions.InvalidDateException();","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"MingShun98"},"content":"    public static void checkValidDataForList(String[] input) throws seedu.exceptions.InvalidIDException {","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"MingShun98"},"content":"        ID \u003d input[1];","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"MingShun98"},"content":"        if (!isValidDocID(ID) \u0026\u0026 !isValidListAppointmentID(ID)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"MingShun98"},"content":"            throw new seedu.exceptions.InvalidIDException();","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"MingShun98"},"content":"    public static void checkValidDataForDelete(String[] input) throws seedu.exceptions.InvalidIDException {","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"MingShun98"},"content":"        ID \u003d input[1];","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"MingShun98"},"content":"        if (!isValidIDToDelete(ID)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"MingShun98"},"content":"            throw new seedu.exceptions.InvalidIDException();","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"MingShun98"},"content":"    public static void checkAptID(String id) throws WrongAptIDFormatException {","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"MingShun98"},"content":"        try {","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"MingShun98"},"content":"            Integer.parseInt(id.substring(1));","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"MingShun98"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"MingShun98"},"content":"            throw new WrongAptIDFormatException();","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"MingShun98"},"content":"        if (!(id.charAt(0) \u003d\u003d \u0027A\u0027) || (id.length()) !\u003d 6) {","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"MingShun98"},"content":"            throw new WrongAptIDFormatException();","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"MingShun98"},"content":"    public static void illegalCharacterChecker(String name, String path) throws IllegalCharacterException {","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"MingShun98"},"content":"        String cleanedInput \u003d UI.cleanseInput(name);","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"MingShun98"},"content":"        if (!name.equals(cleanedInput)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"MingShun98"},"content":"            throw new IllegalCharacterException(path);","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"MingShun98"},"content":"    public static void illegalCharacterNameCheckerForStorage(String name) throws CorruptedFileException {","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"MingShun98"},"content":"        String cleanedInput \u003d UI.cleanseInput(name);","lastModifiedDate":"2021-04-01"},{"lineNumber":85,"author":{"gitId":"MingShun98"},"content":"        if (!name.equals(cleanedInput)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":86,"author":{"gitId":"MingShun98"},"content":"            throw new CorruptedFileException(Constants.APPOINTMENT_FILE_PATH);","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":90,"author":{"gitId":"MingShun98"},"content":"    public static void checkDataFromStorage(String input, ArrayList\u003cString\u003e storageList) throws HealthVaultException {","lastModifiedDate":"2021-04-01"},{"lineNumber":91,"author":{"gitId":"MingShun98"},"content":"        String[] inputArray \u003d input.split(\"\\\\s\\\\|\\\\s\", 5);","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"MingShun98"},"content":"        checkID(inputArray[0], inputArray[1]);","lastModifiedDate":"2021-04-01"},{"lineNumber":93,"author":{"gitId":"MingShun98"},"content":"        illegalCharacterNameCheckerForStorage(inputArray[2]);","lastModifiedDate":"2021-04-01"},{"lineNumber":94,"author":{"gitId":"MingShun98"},"content":"        illegalCharacterNameCheckerForStorage(inputArray[1]);","lastModifiedDate":"2021-04-01"},{"lineNumber":95,"author":{"gitId":"MingShun98"},"content":"        checkDuplicateAptIDFromStorage(inputArray[1], storageList);","lastModifiedDate":"2021-04-01"},{"lineNumber":96,"author":{"gitId":"MingShun98"},"content":"        if (!isValidGender(inputArray[3]) || !isValidDate(inputArray[4])) {","lastModifiedDate":"2021-04-01"},{"lineNumber":97,"author":{"gitId":"MingShun98"},"content":"            throw new CorruptedFileException(Constants.APPOINTMENT_FILE_PATH);","lastModifiedDate":"2021-04-01"},{"lineNumber":98,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":99,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":100,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":101,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":102,"author":{"gitId":"MingShun98"},"content":"    public static void checkDuplicateAptIDFromStorage(String appointmentID, ArrayList\u003cString\u003e storageList) throws HealthVaultException {","lastModifiedDate":"2021-04-01"},{"lineNumber":103,"author":{"gitId":"MingShun98"},"content":"        for (String storageID : storageList){","lastModifiedDate":"2021-04-01"},{"lineNumber":104,"author":{"gitId":"MingShun98"},"content":"            if (storageID.equals(appointmentID))","lastModifiedDate":"2021-04-01"},{"lineNumber":105,"author":{"gitId":"MingShun98"},"content":"                throw new CorruptedFileException(Constants.APPOINTMENT_FILE_PATH);","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"MingShun98"},"content":"    public static void checkID(String doctorID, String appointmentID) throws HealthVaultException {","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"MingShun98"},"content":"        try {","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"MingShun98"},"content":"            Integer.parseInt(doctorID.substring(1));","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"MingShun98"},"content":"            Integer.parseInt(appointmentID.substring(1));","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"MingShun98"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"MingShun98"},"content":"            throw new CorruptedFileException(Constants.APPOINTMENT_FILE_PATH);","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":116,"author":{"gitId":"MingShun98"},"content":"        if (!(doctorID.charAt(0) \u003d\u003d \u0027D\u0027) || (doctorID.length()) !\u003d 6) {","lastModifiedDate":"2021-03-31"},{"lineNumber":117,"author":{"gitId":"MingShun98"},"content":"            throw new CorruptedFileException(Constants.APPOINTMENT_FILE_PATH);","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"MingShun98"},"content":"        if (!(appointmentID.charAt(0) \u003d\u003d \u0027A\u0027) || (doctorID.length()) !\u003d 6) {","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"MingShun98"},"content":"            throw new CorruptedFileException(Constants.APPOINTMENT_FILE_PATH);","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":124,"author":{"gitId":"MingShun98"},"content":"    public static boolean isValidDocID(String doctorID) {","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"MingShun98"},"content":"        try {","lastModifiedDate":"2021-03-31"},{"lineNumber":126,"author":{"gitId":"MingShun98"},"content":"            String[] character \u003d doctorID.split(\"\");","lastModifiedDate":"2021-03-31"},{"lineNumber":127,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"MingShun98"},"content":"            if (character[0].equals(\"D\")) {","lastModifiedDate":"2021-03-31"},{"lineNumber":129,"author":{"gitId":"MingShun98"},"content":"                ArrayList\u003cStaff\u003e doctorList;","lastModifiedDate":"2021-03-31"},{"lineNumber":130,"author":{"gitId":"MingShun98"},"content":"                doctorList \u003d DoctorAppointmentStorage.loadDoctorFile();","lastModifiedDate":"2021-03-31"},{"lineNumber":131,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"MingShun98"},"content":"                for (Staff id : doctorList) {","lastModifiedDate":"2021-03-31"},{"lineNumber":133,"author":{"gitId":"MingShun98"},"content":"                    if (id.getId().equals(doctorID)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"MingShun98"},"content":"                        return true;","lastModifiedDate":"2021-03-31"},{"lineNumber":135,"author":{"gitId":"MingShun98"},"content":"                    }","lastModifiedDate":"2021-03-31"},{"lineNumber":136,"author":{"gitId":"MingShun98"},"content":"                }","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"MingShun98"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"MingShun98"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"MingShun98"},"content":"        return false;","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":144,"author":{"gitId":"MingShun98"},"content":"    public static boolean isValidAppointmentID(String appointmentID) throws HealthVaultException{","lastModifiedDate":"2021-04-01"},{"lineNumber":145,"author":{"gitId":"MingShun98"},"content":"        String[] character \u003d appointmentID.split(\"\");","lastModifiedDate":"2021-03-31"},{"lineNumber":146,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":147,"author":{"gitId":"MingShun98"},"content":"        checkAptID(appointmentID);","lastModifiedDate":"2021-03-31"},{"lineNumber":148,"author":{"gitId":"MingShun98"},"content":"        illegalCharacterChecker(appointmentID, \"Appointment ID\");","lastModifiedDate":"2021-04-01"},{"lineNumber":149,"author":{"gitId":"MingShun98"},"content":"        if (character[0].equals(\"A\")) {","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"MingShun98"},"content":"            for (DoctorAppointment id : AppointmentActions.appointmentList) {","lastModifiedDate":"2021-03-31"},{"lineNumber":151,"author":{"gitId":"MingShun98"},"content":"                if (id.getAppointmentId().equals(appointmentID)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":152,"author":{"gitId":"MingShun98"},"content":"                    throw new DuplicateIDException(appointmentID);","lastModifiedDate":"2021-03-31"},{"lineNumber":153,"author":{"gitId":"MingShun98"},"content":"                }","lastModifiedDate":"2021-03-31"},{"lineNumber":154,"author":{"gitId":"MingShun98"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":155,"author":{"gitId":"MingShun98"},"content":"            return true;","lastModifiedDate":"2021-03-31"},{"lineNumber":156,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":157,"author":{"gitId":"MingShun98"},"content":"        return false;","lastModifiedDate":"2021-03-31"},{"lineNumber":158,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":159,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":160,"author":{"gitId":"MingShun98"},"content":"    public static boolean isValidListAppointmentID(String appointmentID) {","lastModifiedDate":"2021-03-31"},{"lineNumber":161,"author":{"gitId":"MingShun98"},"content":"        String[] character \u003d appointmentID.split(\"\");","lastModifiedDate":"2021-03-31"},{"lineNumber":162,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"MingShun98"},"content":"        if (character[0].equals(\"A\")) {","lastModifiedDate":"2021-03-31"},{"lineNumber":164,"author":{"gitId":"MingShun98"},"content":"            for (DoctorAppointment id : AppointmentActions.appointmentList) {","lastModifiedDate":"2021-03-31"},{"lineNumber":165,"author":{"gitId":"MingShun98"},"content":"                if (id.getAppointmentId().equals(appointmentID)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":166,"author":{"gitId":"MingShun98"},"content":"                    return true;","lastModifiedDate":"2021-03-31"},{"lineNumber":167,"author":{"gitId":"MingShun98"},"content":"                }","lastModifiedDate":"2021-03-31"},{"lineNumber":168,"author":{"gitId":"MingShun98"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":169,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":170,"author":{"gitId":"MingShun98"},"content":"        return false;","lastModifiedDate":"2021-03-31"},{"lineNumber":171,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":172,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":173,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":174,"author":{"gitId":"MingShun98"},"content":"    public static boolean isValidGender(String gender) {","lastModifiedDate":"2021-03-31"},{"lineNumber":175,"author":{"gitId":"MingShun98"},"content":"        return gender.equals(\"M\") || gender.equals(\"F\");","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":177,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":178,"author":{"gitId":"MingShun98"},"content":"    public static boolean isValidDate(String datetime) {","lastModifiedDate":"2021-03-31"},{"lineNumber":179,"author":{"gitId":"MingShun98"},"content":"        if (!datetime.trim().equals(\"\")) {","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"MingShun98"},"content":"            SimpleDateFormat sdfrmt \u003d new SimpleDateFormat(\"ddMMyyyy\");","lastModifiedDate":"2021-03-31"},{"lineNumber":181,"author":{"gitId":"MingShun98"},"content":"            sdfrmt.setLenient(false);","lastModifiedDate":"2021-03-31"},{"lineNumber":182,"author":{"gitId":"MingShun98"},"content":"            try {","lastModifiedDate":"2021-03-31"},{"lineNumber":183,"author":{"gitId":"MingShun98"},"content":"                Date javaDate \u003d sdfrmt.parse(datetime);","lastModifiedDate":"2021-03-31"},{"lineNumber":184,"author":{"gitId":"MingShun98"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":185,"author":{"gitId":"MingShun98"},"content":"                System.out.println(datetime + \" is Invalid Date format\");","lastModifiedDate":"2021-03-31"},{"lineNumber":186,"author":{"gitId":"MingShun98"},"content":"                return false;","lastModifiedDate":"2021-03-31"},{"lineNumber":187,"author":{"gitId":"MingShun98"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":188,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":189,"author":{"gitId":"MingShun98"},"content":"        return true;","lastModifiedDate":"2021-03-31"},{"lineNumber":190,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":191,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":192,"author":{"gitId":"MingShun98"},"content":"    public static boolean isValidIDToDelete(String ID) {","lastModifiedDate":"2021-03-31"},{"lineNumber":193,"author":{"gitId":"MingShun98"},"content":"        String[] IDKeyword \u003d ID.split(\"\");","lastModifiedDate":"2021-03-31"},{"lineNumber":194,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":195,"author":{"gitId":"MingShun98"},"content":"        for (DoctorAppointment doc : AppointmentActions.appointmentList) {","lastModifiedDate":"2021-03-31"},{"lineNumber":196,"author":{"gitId":"MingShun98"},"content":"            if (IDKeyword[0].equals(\"A\")) {","lastModifiedDate":"2021-03-31"},{"lineNumber":197,"author":{"gitId":"MingShun98"},"content":"                if (doc.getAppointmentId().equals(ID)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":198,"author":{"gitId":"MingShun98"},"content":"                    return true;","lastModifiedDate":"2021-03-31"},{"lineNumber":199,"author":{"gitId":"MingShun98"},"content":"                }","lastModifiedDate":"2021-03-31"},{"lineNumber":200,"author":{"gitId":"MingShun98"},"content":"            } else if (IDKeyword[0].equals(\"D\")) {","lastModifiedDate":"2021-03-31"},{"lineNumber":201,"author":{"gitId":"MingShun98"},"content":"                if (doc.getDoctorId().equals(ID)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":202,"author":{"gitId":"MingShun98"},"content":"                    return true;","lastModifiedDate":"2021-03-31"},{"lineNumber":203,"author":{"gitId":"MingShun98"},"content":"                }","lastModifiedDate":"2021-03-31"},{"lineNumber":204,"author":{"gitId":"MingShun98"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":205,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":206,"author":{"gitId":"MingShun98"},"content":"        return false;","lastModifiedDate":"2021-03-31"},{"lineNumber":207,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":208,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":209,"author":{"gitId":"blank-bank"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"MingShun98":205,"blank-bank":4}},{"path":"src/main/java/seedu/logic/errorchecker/InventoryChecker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.logic.errorchecker;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"NoorSarrah"},"content":"import seedu.exceptions.CorruptedFileException;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"NoorSarrah"},"content":"import seedu.exceptions.NoInputException;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"NoorSarrah"},"content":"import seedu.exceptions.inventory.DuplicateDrugException;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"NoorSarrah"},"content":"import seedu.exceptions.inventory.NonExistentDrugException;","lastModifiedDate":"2021-04-03"},{"lineNumber":8,"author":{"gitId":"NoorSarrah"},"content":"import seedu.exceptions.inventory.WrongNumberException;","lastModifiedDate":"2021-04-03"},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":"import seedu.exceptions.patient.IllegalCharacterException;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":"import seedu.logic.command.InventoryActions;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":"import seedu.model.Inventory;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"public class InventoryChecker extends MainChecker {","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"NoorSarrah"},"content":"    private InventoryActions inventory;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"NoorSarrah"},"content":"    private ArrayList\u003cInventory\u003e inventoryArrayList;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"    private String[] stringTokens;","lastModifiedDate":"2021-04-02"},{"lineNumber":18,"author":{"gitId":"NoorSarrah"},"content":"    private int numberOfTokens;","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"NoorSarrah"},"content":"    public InventoryChecker(InventoryActions inventory, String[] stringTokens, int numberOfTokens) {","lastModifiedDate":"2021-04-03"},{"lineNumber":21,"author":{"gitId":"NoorSarrah"},"content":"        this.inventory \u003d inventory;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"NoorSarrah"},"content":"        this.stringTokens \u003d stringTokens;","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"NoorSarrah"},"content":"        this.numberOfTokens \u003d numberOfTokens;","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"    public InventoryChecker(ArrayList\u003cInventory\u003e inventory, String[] stringTokens, int numberOfTokens) {","lastModifiedDate":"2021-04-02"},{"lineNumber":27,"author":{"gitId":"NoorSarrah"},"content":"        inventoryArrayList \u003d inventory;","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"NoorSarrah"},"content":"        this.stringTokens \u003d stringTokens;","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"NoorSarrah"},"content":"        this.numberOfTokens \u003d numberOfTokens;","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"NoorSarrah"},"content":"    public void checkStorage() throws HealthVaultException {","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"NoorSarrah"},"content":"        emptySpaceCheck();","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"NoorSarrah"},"content":"        checkStorageLength();","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"        illegalCharacterChecker(stringTokens[0], \"name\");","lastModifiedDate":"2021-04-02"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"        illegalCharacterChecker(stringTokens[2], \"quantity\");","lastModifiedDate":"2021-04-02"},{"lineNumber":37,"author":{"gitId":"NoorSarrah"},"content":"        checkPrice(stringTokens[1]);","lastModifiedDate":"2021-04-03"},{"lineNumber":38,"author":{"gitId":"NoorSarrah"},"content":"        checkQuantity(stringTokens[2]);","lastModifiedDate":"2021-04-03"},{"lineNumber":39,"author":{"gitId":"NoorSarrah"},"content":"        checkDuplicate(stringTokens[0]);","lastModifiedDate":"2021-04-03"},{"lineNumber":40,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":42,"author":{"gitId":"NoorSarrah"},"content":"    public void checkAdd() throws DuplicateDrugException, WrongNumberException, IllegalCharacterException, seedu.exceptions.patient.IllegalCharacterException {","lastModifiedDate":"2021-04-03"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"        illegalCharacterChecker(stringTokens[1], \"name\");","lastModifiedDate":"2021-04-02"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"        illegalCharacterChecker(stringTokens[3], \"quantity\");","lastModifiedDate":"2021-04-02"},{"lineNumber":45,"author":{"gitId":"NoorSarrah"},"content":"        checkPrice(stringTokens[2]);","lastModifiedDate":"2021-04-03"},{"lineNumber":46,"author":{"gitId":"NoorSarrah"},"content":"        checkQuantity(stringTokens[3]);","lastModifiedDate":"2021-04-03"},{"lineNumber":47,"author":{"gitId":"NoorSarrah"},"content":"        checkDuplicate(stringTokens[1]);","lastModifiedDate":"2021-04-03"},{"lineNumber":48,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":50,"author":{"gitId":"NoorSarrah"},"content":"    public void checkDelete() throws IllegalCharacterException, NonExistentDrugException {","lastModifiedDate":"2021-04-03"},{"lineNumber":51,"author":{"gitId":"NoorSarrah"},"content":"        illegalCharacterChecker(stringTokens[1], \"name\");","lastModifiedDate":"2021-04-03"},{"lineNumber":52,"author":{"gitId":"NoorSarrah"},"content":"        isNameExist(stringTokens[1], inventory);","lastModifiedDate":"2021-04-03"},{"lineNumber":53,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":55,"author":{"gitId":"NoorSarrah"},"content":"    public void checkStorageLength() throws HealthVaultException {","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"NoorSarrah"},"content":"        if (numberOfTokens !\u003d 3) {","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"NoorSarrah"},"content":"            throw new CorruptedFileException(\"Inventory\");","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"NoorSarrah"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":61,"author":{"gitId":"NoorSarrah"},"content":"    public void emptySpaceCheck() throws NoInputException {","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"NoorSarrah"},"content":"        for (int i \u003d 0; i \u003c numberOfTokens; i++) {","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"blank-bank"},"content":"            if (stringTokens[i].trim().equals(\"\")) {","lastModifiedDate":"2021-04-02"},{"lineNumber":64,"author":{"gitId":"NoorSarrah"},"content":"                throw new NoInputException();","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"NoorSarrah"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"NoorSarrah"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":69,"author":{"gitId":"NoorSarrah"},"content":"    public static void checkDuplicate(String inputString) throws DuplicateDrugException {","lastModifiedDate":"2021-04-03"},{"lineNumber":70,"author":{"gitId":"NoorSarrah"},"content":"        for (Inventory inventory : InventoryActions.list) {","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"NoorSarrah"},"content":"            String drugName \u003d inventory.getDrugName();","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"NoorSarrah"},"content":"            if (drugName.equals(inputString)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"NoorSarrah"},"content":"                throw new DuplicateDrugException();","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"NoorSarrah"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"NoorSarrah"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":78,"author":{"gitId":"NoorSarrah"},"content":"    public static void checkQuantity(String number) throws WrongNumberException {","lastModifiedDate":"2021-04-03"},{"lineNumber":79,"author":{"gitId":"NoorSarrah"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"NoorSarrah"},"content":"            Integer.parseInt(number);","lastModifiedDate":"2021-04-03"},{"lineNumber":81,"author":{"gitId":"NoorSarrah"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"NoorSarrah"},"content":"            throw new WrongNumberException(\"quantity\");","lastModifiedDate":"2021-04-03"},{"lineNumber":83,"author":{"gitId":"NoorSarrah"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"NoorSarrah"},"content":"        if (Integer.parseInt(number) \u003c 0) {","lastModifiedDate":"2021-04-01"},{"lineNumber":85,"author":{"gitId":"NoorSarrah"},"content":"            throw new WrongNumberException(\"quantity\");","lastModifiedDate":"2021-04-03"},{"lineNumber":86,"author":{"gitId":"NoorSarrah"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"NoorSarrah"},"content":"    public static boolean checkPrice(String price) throws WrongNumberException {","lastModifiedDate":"2021-04-03"},{"lineNumber":90,"author":{"gitId":"NoorSarrah"},"content":"        try {","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"NoorSarrah"},"content":"            Double.parseDouble(price);","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"NoorSarrah"},"content":"        } catch (NumberFormatException e) { //check if price is a double","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"NoorSarrah"},"content":"            throw new WrongNumberException(\"price\");","lastModifiedDate":"2021-04-03"},{"lineNumber":94,"author":{"gitId":"NoorSarrah"},"content":"        }","lastModifiedDate":"2021-04-03"},{"lineNumber":95,"author":{"gitId":"NoorSarrah"},"content":"        if (Double.parseDouble(price) \u003c 0) {","lastModifiedDate":"2021-04-03"},{"lineNumber":96,"author":{"gitId":"NoorSarrah"},"content":"            throw new WrongNumberException(\"price\");","lastModifiedDate":"2021-04-03"},{"lineNumber":97,"author":{"gitId":"NoorSarrah"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"NoorSarrah"},"content":"        return false;","lastModifiedDate":"2021-04-01"},{"lineNumber":99,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":101,"author":{"gitId":"NoorSarrah"},"content":"    public void isNameExist(String userInput, InventoryActions drugs) throws NonExistentDrugException{","lastModifiedDate":"2021-04-03"},{"lineNumber":102,"author":{"gitId":"NoorSarrah"},"content":"       if (!drugs.isDrugStored(userInput)) {","lastModifiedDate":"2021-04-03"},{"lineNumber":103,"author":{"gitId":"NoorSarrah"},"content":"           throw new NonExistentDrugException(\"NameDoesNotExist\");","lastModifiedDate":"2021-04-03"},{"lineNumber":104,"author":{"gitId":"NoorSarrah"},"content":"       }","lastModifiedDate":"2021-04-03"},{"lineNumber":105,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-04-03"},{"lineNumber":106,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":107,"author":{"gitId":"NoorSarrah"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"NoorSarrah":97,"blank-bank":11}},{"path":"src/main/java/seedu/logic/errorchecker/MainChecker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.logic.errorchecker;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"NoorSarrah"},"content":"import seedu.exceptions.ExcessInputException;","lastModifiedDate":"2021-04-03"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":"import seedu.exceptions.InsufficientInputException;","lastModifiedDate":"2021-04-03"},{"lineNumber":5,"author":{"gitId":"NoorSarrah"},"content":"import seedu.exceptions.InvalidGenderException;","lastModifiedDate":"2021-04-03"},{"lineNumber":6,"author":{"gitId":"NoorSarrah"},"content":"import seedu.exceptions.InvalidIntegerException;","lastModifiedDate":"2021-04-03"},{"lineNumber":7,"author":{"gitId":"NoorSarrah"},"content":"import seedu.exceptions.NoInputException;","lastModifiedDate":"2021-04-03"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.patient.IllegalCharacterException;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"import seedu.ui.UI;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"import static seedu.duke.Constants.VALID_GENDER_INPUT;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"public class MainChecker {","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"    public static void checkNumInput(String line, int max, int min) throws InsufficientInputException, ExcessInputException {","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"        if (line.split(\"/\").length \u003c min) {","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"            throw new InsufficientInputException();","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"        if (line.split(\"/\").length \u003e max) {","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"            throw new ExcessInputException();","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"    public static void checkDataNumInput(String line, int max, int min) throws InsufficientInputException, ExcessInputException {","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"        if (line.split(\"\\\\|\").length \u003c min) {","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"            throw new InsufficientInputException();","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"        if (line.split(\"\\\\|\").length \u003e max) {","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"            throw new ExcessInputException();","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"    public static void checkNumericInput(String number) throws NumberFormatException, InvalidIntegerException {","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"            Integer.parseInt(number);     // Check age is numeric","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"            throw new NumberFormatException();","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"        if (Integer.parseInt(number) \u003c 0) {","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"            throw new InvalidIntegerException();","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"    public static void checkBlankInput(String line) throws NoInputException {","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"        String[] array \u003d line.split(\"/\");","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"        for (String s : array) {","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"            if (s.trim().equals(\"\")) {","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"                throw new NoInputException();","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":"    public static void checkBlankInputForStorage(String line) throws NoInputException {","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"Chiamjiaen"},"content":"        String[] array \u003d line.split(\"\\\\|\");","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"        for (String s : array) {","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":"            if (s.trim().equals(\"\")) {","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":"                throw new NoInputException();","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"Chiamjiaen"},"content":"    public void checkGender(String stringToken) throws InvalidGenderException {","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"Chiamjiaen"},"content":"        String gender \u003d stringToken;","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"Chiamjiaen"},"content":"        if (!Arrays.stream(VALID_GENDER_INPUT).anyMatch(gender::equals)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"Chiamjiaen"},"content":"            throw new InvalidGenderException();","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"Chiamjiaen"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"MingShun98"},"content":"    public static void illegalCharacterChecker(String stringToken, String fieldInput) throws IllegalCharacterException {","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"blank-bank"},"content":"        String cleanedInput \u003d UI.cleanseInput(stringToken.trim());","lastModifiedDate":"2021-04-03"},{"lineNumber":75,"author":{"gitId":"blank-bank"},"content":"        if (!stringToken.equals(cleanedInput)){","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"blank-bank"},"content":"            throw new IllegalCharacterException(fieldInput);","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"blank-bank"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"NoorSarrah":5,"MingShun98":1,"Chiamjiaen":18,"AlexanderTanJunAn":3,"blank-bank":52}},{"path":"src/main/java/seedu/logic/errorchecker/NurseScheduleChecker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.logic.errorchecker;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.DuplicateIDException;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.InvalidDateException;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.NoInputException;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.nurseschedules.*;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.logic.parser.NurseSchedulesParser;","lastModifiedDate":"2021-04-04"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.model.NurseSchedule;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.model.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.model.staff.Staff;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.storage.DoctorAppointmentStorage;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.storage.NurseScheduleStorage;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-04-03"},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-04-03"},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-04-03"},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-04-03"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.Date;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.List;","lastModifiedDate":"2021-04-04"},{"lineNumber":24,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class NurseScheduleChecker extends MainChecker {","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public static void isValidDate(final String date) throws InvalidDateException {","lastModifiedDate":"2021-04-03"},{"lineNumber":28,"author":{"gitId":"AlexanderTanJunAn"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"AlexanderTanJunAn"},"content":"            LocalDate.parse(date,","lastModifiedDate":"2021-04-03"},{"lineNumber":30,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    DateTimeFormatter.ofPattern(\"ddMMuuuu\")","lastModifiedDate":"2021-04-03"},{"lineNumber":31,"author":{"gitId":"AlexanderTanJunAn"},"content":"                        .withResolverStyle(ResolverStyle.STRICT));","lastModifiedDate":"2021-04-03"},{"lineNumber":32,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-04-03"},{"lineNumber":33,"author":{"gitId":"AlexanderTanJunAn"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public static void checkEmptyInput(String line) throws NoInputException {","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String[] array \u003d line.split(\"/\");","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"AlexanderTanJunAn"},"content":"        for (String s : array) {","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"AlexanderTanJunAn"},"content":"            if (s.trim().equals(\"\")) {","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"AlexanderTanJunAn"},"content":"                throw new NoInputException();","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public static void checkNurseIDExist(String nurseID) throws NurseIdNotFound, NurseCrossValidationError {","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"AlexanderTanJunAn"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"AlexanderTanJunAn"},"content":"            ArrayList\u003cStaff\u003e doctorList;","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"AlexanderTanJunAn"},"content":"            doctorList \u003d DoctorAppointmentStorage.loadDoctorFile();","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"AlexanderTanJunAn"},"content":"            for (Staff id : doctorList) {","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"AlexanderTanJunAn"},"content":"                if (id.getId().equals(nurseID)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    return;","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"AlexanderTanJunAn"},"content":"                }","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"AlexanderTanJunAn"},"content":"            throw new NurseIdNotFound();","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"AlexanderTanJunAn"},"content":"            throw new NurseCrossValidationError();","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"AlexanderTanJunAn"},"content":"            throw new NurseIdNotFound();","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public static void checkPatientDExist(String patientID) throws PatientIdNotFound, PatientCrossValidationError {","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"AlexanderTanJunAn"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"AlexanderTanJunAn"},"content":"            ArrayList\u003cPatient\u003e patientList;","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"AlexanderTanJunAn"},"content":"            patientList \u003d NurseScheduleStorage.loadPatientFile();","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"AlexanderTanJunAn"},"content":"            for (Patient id : patientList) {","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"AlexanderTanJunAn"},"content":"                if (id.getPatientID().equals(patientID)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    return;","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"AlexanderTanJunAn"},"content":"                }","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"AlexanderTanJunAn"},"content":"            throw new PatientIdNotFound();","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"AlexanderTanJunAn"},"content":"            throw new PatientCrossValidationError();","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"AlexanderTanJunAn"},"content":"            throw new PatientIdNotFound();","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public static void checkValidNurseID(String userID) throws InvalidIDTypeException {","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"AlexanderTanJunAn"},"content":"        if (userID.length() !\u003d 6) {","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"AlexanderTanJunAn"},"content":"            throw new InvalidIDTypeException();","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } else if (!(userID.charAt(0) \u003d\u003d \u0027N\u0027)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"AlexanderTanJunAn"},"content":"            throw new InvalidIDTypeException();","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } else if (numberOfIntegersInString(userID) !\u003d 5) {","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"AlexanderTanJunAn"},"content":"            throw new InvalidIDTypeException();","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public static void checkValidPatientID(String userID) throws InvalidIDTypeException {","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"AlexanderTanJunAn"},"content":"        if (userID.length() !\u003d 6) {","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"AlexanderTanJunAn"},"content":"            throw new InvalidIDTypeException();","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }  else if (!(userID.charAt(0) \u003d\u003d \u0027P\u0027)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"AlexanderTanJunAn"},"content":"            throw new InvalidIDTypeException();","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } else if (numberOfIntegersInString(userID) !\u003d 5) {","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"AlexanderTanJunAn"},"content":"            throw new InvalidIDTypeException();","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private static int numberOfIntegersInString(String userInput) {","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"AlexanderTanJunAn"},"content":"        int numberOfIntegers \u003d 0;","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"AlexanderTanJunAn"},"content":"        for (int i \u003d 0; i \u003c userInput.length(); i++) {","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"AlexanderTanJunAn"},"content":"            if (Character.isDigit(userInput.charAt(i))) {","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"AlexanderTanJunAn"},"content":"                numberOfIntegers++;","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return numberOfIntegers;","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":113,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public static void checkDuplicatePatientID(String id, String date, ArrayList\u003cNurseSchedule\u003e list) throws DuplicateScheduleException {","lastModifiedDate":"2021-04-04"},{"lineNumber":114,"author":{"gitId":"AlexanderTanJunAn"},"content":"        for (NurseSchedule patient : list) {","lastModifiedDate":"2021-04-01"},{"lineNumber":115,"author":{"gitId":"AlexanderTanJunAn"},"content":"            if (patient.getPatientID().equals(id)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":116,"author":{"gitId":"AlexanderTanJunAn"},"content":"                if (patient.getDatetime().equals(date)) {","lastModifiedDate":"2021-04-04"},{"lineNumber":117,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    try {","lastModifiedDate":"2021-04-04"},{"lineNumber":118,"author":{"gitId":"AlexanderTanJunAn"},"content":"                        date \u003d NurseSchedulesParser.formatDate(date);","lastModifiedDate":"2021-04-04"},{"lineNumber":119,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    } catch (ParseException e) {}","lastModifiedDate":"2021-04-04"},{"lineNumber":120,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    throw new DuplicateScheduleException(date);","lastModifiedDate":"2021-04-04"},{"lineNumber":121,"author":{"gitId":"AlexanderTanJunAn"},"content":"                }","lastModifiedDate":"2021-04-04"},{"lineNumber":122,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }","lastModifiedDate":"2021-04-04"},{"lineNumber":123,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":124,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":125,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":126,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /**","lastModifiedDate":"2021-04-04"},{"lineNumber":127,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * Checks if nurseID exists within schedules.","lastModifiedDate":"2021-04-04"},{"lineNumber":128,"author":{"gitId":"AlexanderTanJunAn"},"content":"     *","lastModifiedDate":"2021-04-04"},{"lineNumber":129,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @param nurseSchedules List of all schedules","lastModifiedDate":"2021-04-04"},{"lineNumber":130,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @param id NurseID to check","lastModifiedDate":"2021-04-04"},{"lineNumber":131,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @return boolean","lastModifiedDate":"2021-04-04"},{"lineNumber":132,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @throws NurseIdNotFound if id does not exist","lastModifiedDate":"2021-04-04"},{"lineNumber":133,"author":{"gitId":"AlexanderTanJunAn"},"content":"     */","lastModifiedDate":"2021-04-04"},{"lineNumber":134,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private boolean isValidNurseID(List\u003cNurseSchedule\u003e nurseSchedules, String id) throws NurseIdNotFound {","lastModifiedDate":"2021-04-04"},{"lineNumber":135,"author":{"gitId":"AlexanderTanJunAn"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-04-04"},{"lineNumber":136,"author":{"gitId":"AlexanderTanJunAn"},"content":"        while (i \u003c nurseSchedules.size()) {","lastModifiedDate":"2021-04-04"},{"lineNumber":137,"author":{"gitId":"AlexanderTanJunAn"},"content":"            if (nurseSchedules.get(i).getNurseID().equals(id)) {","lastModifiedDate":"2021-04-04"},{"lineNumber":138,"author":{"gitId":"AlexanderTanJunAn"},"content":"                return true;","lastModifiedDate":"2021-04-04"},{"lineNumber":139,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }","lastModifiedDate":"2021-04-04"},{"lineNumber":140,"author":{"gitId":"AlexanderTanJunAn"},"content":"            i++;","lastModifiedDate":"2021-04-04"},{"lineNumber":141,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":142,"author":{"gitId":"AlexanderTanJunAn"},"content":"        throw new NurseIdNotFound();","lastModifiedDate":"2021-04-04"},{"lineNumber":143,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":144,"author":{"gitId":"blank-bank"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"AlexanderTanJunAn":141,"blank-bank":3}},{"path":"src/main/java/seedu/logic/errorchecker/PatientChecker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.logic.errorchecker;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.exceptions.*;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.exceptions.patient.*;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.PatientActions;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.model.Patient;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"public class PatientChecker extends MainChecker{","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"    private PatientActions patients;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"    private ArrayList\u003cPatient\u003e patientArrayList;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    private String[] stringTokens;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"    private String command;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"    private int numberOfTokens;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"    public PatientChecker(PatientActions patients, String[] stringTokens, String command, int numberOfTokens) {","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"        this.patients \u003d patients;","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"        this.stringTokens \u003d stringTokens;","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"        this.numberOfTokens \u003d numberOfTokens;","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"    public PatientChecker(ArrayList\u003cPatient\u003e patients, String[] stringTokens, int numberOfTokens) {","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"        patientArrayList \u003d patients;","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"        this.stringTokens \u003d stringTokens;","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"        this.numberOfTokens \u003d numberOfTokens;","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"    public void checkStorage() throws HealthVaultException {","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"        emptySpaceCheck();","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"        checkStorageLength();","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"        checkIDStorage();","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"        checkAge(stringTokens[2]);","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"        illegalCharacterChecker(stringTokens[1], \"name\");","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"        illegalCharacterChecker(stringTokens[4], \"Illness\");","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"        illegalCharacterChecker(stringTokens[5], \"medication required\");","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"        checkGender(stringTokens[3]);","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":"    public void checkAdd() throws HealthVaultException, NumberFormatException {","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":"        emptySpaceCheck();","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"Chiamjiaen"},"content":"        checkLength();","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"Chiamjiaen"},"content":"        checkID();","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"Chiamjiaen"},"content":"        checkAge(stringTokens[3]);","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"Chiamjiaen"},"content":"        illegalCharacterChecker(stringTokens[2], \"name\");","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"Chiamjiaen"},"content":"        illegalCharacterChecker(stringTokens[5], \"Illness\");","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"Chiamjiaen"},"content":"        illegalCharacterChecker(stringTokens[6], \"medication required\");","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"Chiamjiaen"},"content":"        checkGender(stringTokens[4]);","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"Chiamjiaen"},"content":"    public void checkFind() throws HealthVaultException {","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"Chiamjiaen"},"content":"        emptySpaceCheck();","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"Chiamjiaen"},"content":"        checkLength();","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"Chiamjiaen"},"content":"        illegalCharacterChecker(stringTokens[1], \"keyword\");","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"Chiamjiaen"},"content":"    public void checkStorageLength() throws HealthVaultException {","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"Chiamjiaen"},"content":"        if (numberOfTokens !\u003d 6) {","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"Chiamjiaen"},"content":"            throw new CorruptedFileException(\"Patient\");","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"Chiamjiaen"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"Chiamjiaen"},"content":"    public void checkLength() throws HealthVaultException {","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"Chiamjiaen"},"content":"        if (command.equals(\"add\") \u0026\u0026 numberOfTokens !\u003d 7) {","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"Chiamjiaen"},"content":"            throw new InvalidFieldsNumberException(command);","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"Chiamjiaen"},"content":"        } else if ((command.equals(\"delete\") || command.equals(\"find\")) \u0026\u0026 numberOfTokens !\u003d 2) {","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"Chiamjiaen"},"content":"            throw new InvalidFieldsNumberException(command);","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"Chiamjiaen"},"content":"        } else if ((command.equals(\"list\") || command.equals(\"return\") || command.equals(\"help\"))","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"Chiamjiaen"},"content":"                \u0026\u0026 numberOfTokens !\u003d 1) {","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"Chiamjiaen"},"content":"            throw new InvalidFieldsNumberException(command);","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"Chiamjiaen"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"Chiamjiaen"},"content":"    private void emptySpaceCheck() throws NoInputException {","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"Chiamjiaen"},"content":"        for (int i \u003d 0; i \u003c numberOfTokens; i++) {","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"Chiamjiaen"},"content":"            if (stringTokens[i].trim().equals(\"\")) {","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"Chiamjiaen"},"content":"                throw new NoInputException();","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"Chiamjiaen"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"Chiamjiaen"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"Chiamjiaen"},"content":"    private void checkAge(String stringToken) throws NumberFormatException, HealthVaultException {","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"Chiamjiaen"},"content":"        checkNumericInput(stringToken);","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"Chiamjiaen"},"content":"        checkAgeRange(stringToken);","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"Chiamjiaen"},"content":"    private void checkAgeRange(String ageString) throws InvalidAgeException {","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"Chiamjiaen"},"content":"        int age \u003d Integer.parseInt(ageString);","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"Chiamjiaen"},"content":"        if (!(age \u003e\u003d 0 \u0026\u0026 age \u003c 150)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"Chiamjiaen"},"content":"            throw new InvalidAgeException();","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"Chiamjiaen"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"Chiamjiaen"},"content":"    public void checkID() throws HealthVaultException {","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"Chiamjiaen"},"content":"        checkValidID(stringTokens[1]);","lastModifiedDate":"2021-04-01"},{"lineNumber":98,"author":{"gitId":"Chiamjiaen"},"content":"        checkIDExist(stringTokens[1], patients, command);","lastModifiedDate":"2021-04-01"},{"lineNumber":99,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"Chiamjiaen"},"content":"    public void checkIDStorage() throws HealthVaultException {","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"Chiamjiaen"},"content":"        checkValidID(stringTokens[0]);","lastModifiedDate":"2021-04-01"},{"lineNumber":103,"author":{"gitId":"Chiamjiaen"},"content":"        checkIDExistStorage(stringTokens[0]);","lastModifiedDate":"2021-04-01"},{"lineNumber":104,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"Chiamjiaen"},"content":"    private int numberOfIntegersInString(String userInput) {","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"Chiamjiaen"},"content":"        int numberOfIntegers \u003d 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"Chiamjiaen"},"content":"        for (int i \u003d 0; i \u003c userInput.length(); i++) {","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"Chiamjiaen"},"content":"            if (Character.isDigit(userInput.charAt(i))) {","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"Chiamjiaen"},"content":"                numberOfIntegers++;","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"Chiamjiaen"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"Chiamjiaen"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"Chiamjiaen"},"content":"        return numberOfIntegers;","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":116,"author":{"gitId":"Chiamjiaen"},"content":"    private void checkValidID(String userID) throws InvalidIDLengthException, InvalidIDTypeException,","lastModifiedDate":"2021-03-31"},{"lineNumber":117,"author":{"gitId":"Chiamjiaen"},"content":"            InvalidIDValueException {","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"Chiamjiaen"},"content":"        if (userID.length() !\u003d 6) {","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"Chiamjiaen"},"content":"            throw new InvalidIDLengthException(\"IDLength\");","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"Chiamjiaen"},"content":"        } else if (!(userID.charAt(0) \u003d\u003d \u0027P\u0027)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"Chiamjiaen"},"content":"            throw new InvalidIDTypeException(\"IDType\");","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"Chiamjiaen"},"content":"        } else if (numberOfIntegersInString(userID) !\u003d 5) {","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"Chiamjiaen"},"content":"            throw new InvalidIDValueException(\"IDValue\");","lastModifiedDate":"2021-03-31"},{"lineNumber":124,"author":{"gitId":"Chiamjiaen"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":126,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":127,"author":{"gitId":"Chiamjiaen"},"content":"    private void checkIDExistStorage(String userID) throws CorruptedFileException {","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"Chiamjiaen"},"content":"        if (isIDTakenStorage(userID)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":129,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"There is a duplicate ID!\");","lastModifiedDate":"2021-04-03"},{"lineNumber":130,"author":{"gitId":"Chiamjiaen"},"content":"            throw new CorruptedFileException(\"Patient\");","lastModifiedDate":"2021-03-31"},{"lineNumber":131,"author":{"gitId":"Chiamjiaen"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":133,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"Chiamjiaen"},"content":"    private boolean isIDTakenStorage(String userID) {","lastModifiedDate":"2021-03-31"},{"lineNumber":135,"author":{"gitId":"Chiamjiaen"},"content":"        for (Patient patient : patientArrayList) {","lastModifiedDate":"2021-03-31"},{"lineNumber":136,"author":{"gitId":"Chiamjiaen"},"content":"            String patientID \u003d patient.getPatientID();","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"Chiamjiaen"},"content":"            if (patientID.equals(userID)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"Chiamjiaen"},"content":"                System.out.println(\"The duplicate ID is: \" + userID);","lastModifiedDate":"2021-04-03"},{"lineNumber":139,"author":{"gitId":"Chiamjiaen"},"content":"                return true;","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"Chiamjiaen"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"Chiamjiaen"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"Chiamjiaen"},"content":"        return false;","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":144,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":145,"author":{"gitId":"Chiamjiaen"},"content":"    private void checkIDExist(String userID, PatientActions patients, String command) throws IDNotFoundException,","lastModifiedDate":"2021-03-31"},{"lineNumber":146,"author":{"gitId":"Chiamjiaen"},"content":"            DuplicateIDException {","lastModifiedDate":"2021-03-31"},{"lineNumber":147,"author":{"gitId":"Chiamjiaen"},"content":"        if (patients.isIDTaken(userID)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":148,"author":{"gitId":"Chiamjiaen"},"content":"            if (command.equals(\"add\")) {","lastModifiedDate":"2021-03-31"},{"lineNumber":149,"author":{"gitId":"Chiamjiaen"},"content":"                throw new DuplicateIDException(\"Patient\");","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"Chiamjiaen"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":151,"author":{"gitId":"Chiamjiaen"},"content":"        } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":152,"author":{"gitId":"Chiamjiaen"},"content":"            if ((command.equals(\"delete\") || command.equals(\"find\"))) {","lastModifiedDate":"2021-03-31"},{"lineNumber":153,"author":{"gitId":"Chiamjiaen"},"content":"                throw new IDNotFoundException(\"Patient\");","lastModifiedDate":"2021-03-31"},{"lineNumber":154,"author":{"gitId":"Chiamjiaen"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":155,"author":{"gitId":"Chiamjiaen"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":156,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":157,"author":{"gitId":"blank-bank"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"Chiamjiaen":153,"blank-bank":4}},{"path":"src/main/java/seedu/logic/errorchecker/StaffChecker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.logic.errorchecker;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.*;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.patient.IllegalCharacterException;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.staff.WrongListInputException;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.staff.WrongStaffIdException;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.command.StaffAggregation;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"import seedu.model.staff.Staff;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"public class StaffChecker extends MainChecker {","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"    public boolean isSameInt(int a, String b) {","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"            int temp \u003d Integer.parseInt(b);","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"            return a \u003d\u003d temp;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"            return false;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"    public void checkValidDataForAdd(String line, StaffAggregation staffAggregation) throws","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"            NoInputException, WrongStaffIdException, InvalidIntegerException,","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"            ExcessInputException, InsufficientInputException, DuplicateIDException {","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"        checkNumInput(line,5,5);","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"        checkStaffID(line.split(\"/\")[1]);","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"        checkDuplicateStaffID(line.split(\"/\")[1],staffAggregation.getList());","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":"        checkNumericInput(line.split(\"/\")[3]);","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"        checkBlankInput(line);","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"    public void checkValidDataFromStorage(String line, ArrayList\u003cStaff\u003e list) throws NoInputException,","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"            WrongStaffIdException, InvalidIntegerException,","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"            ExcessInputException, InsufficientInputException, DuplicateIDException {","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"        checkDataNumInput(line,4,4);","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"        checkStaffID(line.split(\"\\\\|\")[0]);","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"        checkDuplicateStaffID(line.split(\"\\\\|\")[0], list);","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"        checkNumericInput(line.split(\"\\\\|\")[2]);","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"        checkBlankInputForStorage(line);","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"    public void checkDuplicateStaffID(String id, ArrayList\u003cStaff\u003e list) throws DuplicateIDException {","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"        for (Staff staff : list) {","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"            if (staff.getId().equals(id)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"                throw new DuplicateIDException(\"Staff\");","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"    public void checkStaffID(String id) throws WrongStaffIdException, InvalidIntegerException {","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":"            if (Integer.parseInt(id.substring(1)) \u003c 0) {","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":"                throw new InvalidIntegerException();","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"blank-bank"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"            throw new WrongStaffIdException();","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":"        if (!(id.charAt(0) \u003d\u003d \u0027D\u0027 || id.charAt(0) \u003d\u003d \u0027N\u0027) || (id.length()) !\u003d 6) {","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":"            throw new WrongStaffIdException();","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"blank-bank"},"content":"    public String[] invalidCharactersStaffChecker(String line) throws IllegalCharacterException {","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"blank-bank"},"content":"        String [] cleanArray \u003d Arrays.copyOfRange(line.split(\"/\"), 1, 5);","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"blank-bank"},"content":"        String[] field \u003d {\"ID\", \"name\", \"age\", \"specialisation\"};","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"blank-bank"},"content":"        for (int i \u003d 0; i \u003c cleanArray.length; i++) {","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"blank-bank"},"content":"            illegalCharacterChecker(cleanArray[i], field[i]);","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"blank-bank"},"content":"        return cleanArray;","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"blank-bank"},"content":"    public String[] invalidCharactersStaffCheckerForStorage(String line) throws IllegalCharacterException {","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"blank-bank"},"content":"        String [] cleanArray \u003d line.split(\"\\\\|\");","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"blank-bank"},"content":"        String[] field \u003d {\"ID\", \"name\", \"age\", \"specialisation\"};","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"blank-bank"},"content":"        for (int i \u003d 0; i \u003c (cleanArray.length); i++) {","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"blank-bank"},"content":"            //cleanArray[i] \u003d UI.cleanseInput(cleanArray[i]);","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"blank-bank"},"content":"            illegalCharacterChecker(cleanArray[i], field[i]);","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"blank-bank"},"content":"        return cleanArray;","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"blank-bank"},"content":"    public void checkListCommand(String line) throws WrongListInputException {","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"blank-bank"},"content":"        if ((line.split(\"/\").length \u003e 1) \u0026\u0026","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"blank-bank"},"content":"                !((line.split(\"/\")[1].equals(\"nurses\") || line.split(\"/\")[1].equals(\"doctors\")))) {","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"blank-bank"},"content":"            throw new WrongListInputException();","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"blank-bank"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"blank-bank":91}},{"path":"src/main/java/seedu/logic/instance/DoctorAppointmentInstance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.logic.instance;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"MingShun98"},"content":"import seedu.exceptions.CorruptedFileException;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"MingShun98"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"MingShun98"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":"import seedu.logic.parser.DoctorAppointmentParser;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.command.AppointmentActions;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"import seedu.storage.DoctorAppointmentStorage;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"import seedu.ui.DoctorAppointmentUI;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"import seedu.ui.UI;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"MingShun98"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"MingShun98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"MingShun98"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"MingShun98"},"content":" * Doctor Appointment Instance where the functionality of Doctor Appointment Menu Starts Running","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"MingShun98"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"MingShun98"},"content":"public class DoctorAppointmentInstance {","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"MingShun98"},"content":"    private DoctorAppointmentUI ui;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"MingShun98"},"content":"    private AppointmentActions details;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"MingShun98"},"content":"    private DoctorAppointmentStorage doctorAppointmentStorage;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"MingShun98"},"content":"    public DoctorAppointmentInstance(String filepath) {","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"MingShun98"},"content":"        ui \u003d new DoctorAppointmentUI();","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"MingShun98"},"content":"        doctorAppointmentStorage \u003d new DoctorAppointmentStorage(filepath);","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"MingShun98"},"content":"    public void run() {","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"MingShun98"},"content":"        try {","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"MingShun98"},"content":"            details \u003d doctorAppointmentStorage.loadFile();","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"MingShun98"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"MingShun98"},"content":"            try {","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"MingShun98"},"content":"                doctorAppointmentStorage.createFile();","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"MingShun98"},"content":"                details \u003d doctorAppointmentStorage.loadFile();","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"MingShun98"},"content":"            } catch (IOException | CorruptedFileException e1) {","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"MingShun98"},"content":"                System.out.println(e1.getMessage());","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"MingShun98"},"content":"            } catch (HealthVaultException e2) {","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"MingShun98"},"content":"                e2.getMessage();","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"MingShun98"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"MingShun98"},"content":"        } catch (CorruptedFileException e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"MingShun98"},"content":"            DoctorAppointmentUI.corruptedFileErrorMessage();","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"MingShun98"},"content":"            return;","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"MingShun98"},"content":"        } catch (HealthVaultException e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"MingShun98"},"content":"            e.getMessage();","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"MingShun98"},"content":"        UI.showLine();","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"MingShun98"},"content":"        DoctorAppointmentUI.doctorAppointmentsWelcome();","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"MingShun98"},"content":"        ui.printAppointmentMenuPrompt();","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"MingShun98"},"content":"        boolean isReturnToStartMenu \u003d false;","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"MingShun98"},"content":"        while (!isReturnToStartMenu) {","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"MingShun98"},"content":"            try {","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"MingShun98"},"content":"                String input \u003d ui.getInput(\"Appointment\");","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"MingShun98"},"content":"                UI.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"MingShun98"},"content":"                Command c \u003d DoctorAppointmentParser.parse(input, details);","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"MingShun98"},"content":"                c.execute(details, ui);","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"MingShun98"},"content":"                isReturnToStartMenu \u003d c.isExit();","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"MingShun98"},"content":"                if (isReturnToStartMenu) {","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"MingShun98"},"content":"                    UI.returningToStartMenuMessage();","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"MingShun98"},"content":"                }","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"MingShun98"},"content":"                DoctorAppointmentUI.printNewLine();","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"MingShun98"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"MingShun98"},"content":"                //Command C can return as null if an error is triggered in parser","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"MingShun98"},"content":"                //Null Pointer Exception may hence occur, the catch statement is to ensure it does not exit the loop.","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"MingShun98"},"content":"            } catch (HealthVaultException e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"MingShun98"},"content":"                //System.out.println(\"OOPS something went wrong :0\");","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"MingShun98"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"MingShun98"},"content":"                DoctorAppointmentUI.printNewLine();","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"MingShun98"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"MingShun98"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"MingShun98"},"content":"                DoctorAppointmentUI.printNewLine();","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"MingShun98"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":75,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":76,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":77,"author":{"gitId":"MingShun98"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"MingShun98":71,"AlexanderTanJunAn":1,"blank-bank":5}},{"path":"src/main/java/seedu/logic/instance/InventoryInstance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.logic.instance;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":"import seedu.exceptions.InsufficientInputException;","lastModifiedDate":"2021-04-03"},{"lineNumber":5,"author":{"gitId":"NoorSarrah"},"content":"import seedu.exceptions.ExcessInputException;","lastModifiedDate":"2021-04-03"},{"lineNumber":6,"author":{"gitId":"NoorSarrah"},"content":"import seedu.exceptions.NoInputException;","lastModifiedDate":"2021-04-03"},{"lineNumber":7,"author":{"gitId":"NoorSarrah"},"content":"import seedu.exceptions.inventory.DuplicateDrugException;","lastModifiedDate":"2021-04-03"},{"lineNumber":8,"author":{"gitId":"NoorSarrah"},"content":"import seedu.exceptions.inventory.WrongNumberException;","lastModifiedDate":"2021-04-03"},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":"import seedu.exceptions.patient.IllegalCharacterException;","lastModifiedDate":"2021-04-03"},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":"import seedu.logic.command.InventoryActions;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":"import seedu.logic.parser.InventoryParser;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":"import seedu.model.Inventory;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"NoorSarrah"},"content":"import seedu.storage.InventoryStorage;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"NoorSarrah"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"NoorSarrah"},"content":"import seedu.ui.InventoryUI;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"NoorSarrah"},"content":"import seedu.ui.UI;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"NoorSarrah"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"public class InventoryInstance {","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"NoorSarrah"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"NoorSarrah"},"content":"     * Main entry-point for the java.duke.DrugInstance application.","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"NoorSarrah"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"NoorSarrah"},"content":"    private InventoryUI ui;","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"NoorSarrah"},"content":"    private InventoryActions inventory;","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"NoorSarrah"},"content":"    private InventoryStorage inventoryStorage;","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"NoorSarrah"},"content":"    private InventoryParser parser;","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"    public InventoryInstance(String filePath) {","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"NoorSarrah"},"content":"        ui \u003d new InventoryUI();","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"NoorSarrah"},"content":"        inventoryStorage \u003d new InventoryStorage(filePath);","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"NoorSarrah"},"content":"        parser \u003d new InventoryParser();","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"NoorSarrah"},"content":"    public void run() {","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"NoorSarrah"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"NoorSarrah"},"content":"            ArrayList\u003cInventory\u003e list \u003d inventoryStorage.loadInventory();","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"NoorSarrah"},"content":"            inventory \u003d new InventoryActions(list);","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"NoorSarrah"},"content":"        } catch (HealthVaultException e) {","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"NoorSarrah"},"content":"            ui.corruptedFileErrorMessage();","lastModifiedDate":"2021-04-03"},{"lineNumber":41,"author":{"gitId":"NoorSarrah"},"content":"            inventory \u003d new InventoryActions();","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"NoorSarrah"},"content":"            return;","lastModifiedDate":"2021-04-03"},{"lineNumber":43,"author":{"gitId":"NoorSarrah"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"NoorSarrah"},"content":"        InventoryUI.inventoryMenuHeader();","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"NoorSarrah"},"content":"        boolean isReturnToStartMenu \u003d false;","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"NoorSarrah"},"content":"        while (!isReturnToStartMenu) {","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"NoorSarrah"},"content":"            try {","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"NoorSarrah"},"content":"                UI.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"NoorSarrah"},"content":"                String fullCommand \u003d ui.getInput(\"Inventory\");","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"NoorSarrah"},"content":"                Command c \u003d parser.inventoryParse(fullCommand, inventory);","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"NoorSarrah"},"content":"                c.execute(inventory, ui);","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"NoorSarrah"},"content":"                inventoryStorage.storeInventory(inventory);","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"NoorSarrah"},"content":"                isReturnToStartMenu \u003d c.isExit();","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"NoorSarrah"},"content":"                if (isReturnToStartMenu) {","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"NoorSarrah"},"content":"                    UI.returningToStartMenuMessage();","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"NoorSarrah"},"content":"                }","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"NoorSarrah"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"NoorSarrah"},"content":"                //Command C can return as null if an error is triggered in parser","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"NoorSarrah"},"content":"                //Null Pointer Exception may hence occur, the catch statement is to ensure it does not exit the loop.","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"NoorSarrah"},"content":"            } catch (WrongNumberException e) {","lastModifiedDate":"2021-04-03"},{"lineNumber":61,"author":{"gitId":"NoorSarrah"},"content":"                e.getError();","lastModifiedDate":"2021-04-03"},{"lineNumber":62,"author":{"gitId":"NoorSarrah"},"content":"            } catch (DuplicateDrugException e) {","lastModifiedDate":"2021-04-03"},{"lineNumber":63,"author":{"gitId":"NoorSarrah"},"content":"                e.getError(\"DrugStored\");","lastModifiedDate":"2021-04-03"},{"lineNumber":64,"author":{"gitId":"NoorSarrah"},"content":"            } catch (IllegalCharacterException | InsufficientInputException |","lastModifiedDate":"2021-04-03"},{"lineNumber":65,"author":{"gitId":"NoorSarrah"},"content":"                    ExcessInputException | NoInputException e) {","lastModifiedDate":"2021-04-03"},{"lineNumber":66,"author":{"gitId":"NoorSarrah"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-04-03"},{"lineNumber":67,"author":{"gitId":"NoorSarrah"},"content":"            } catch (HealthVaultException e) {","lastModifiedDate":"2021-04-03"},{"lineNumber":68,"author":{"gitId":"NoorSarrah"},"content":"                e.getError(\"\");","lastModifiedDate":"2021-04-03"},{"lineNumber":69,"author":{"gitId":"NoorSarrah"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"NoorSarrah"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"NoorSarrah"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"NoorSarrah":68,"Chiamjiaen":2,"blank-bank":2}},{"path":"src/main/java/seedu/logic/instance/NurseScheduleInstance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.logic.instance;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.InvalidDateException;","lastModifiedDate":"2021-04-03"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.nurseschedules.*;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.logic.command.NurseScheduleActions;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.parser.NurseSchedulesParser;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"import seedu.storage.NurseScheduleStorage;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"import seedu.ui.NurseScheduleUI;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.ui.UI;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.logging.*;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":" * Main entry-point for the NurseSchedules instance.","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class NurseScheduleInstance {","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private NurseSchedulesParser parser;","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private NurseScheduleActions nurseSchedules;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private NurseScheduleStorage storage;","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private NurseScheduleUI ui;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public static Logger logger;","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public NurseScheduleInstance() {","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"AlexanderTanJunAn"},"content":"        parser \u003d new NurseSchedulesParser();","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"AlexanderTanJunAn"},"content":"        storage \u003d new NurseScheduleStorage();","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"AlexanderTanJunAn"},"content":"        ui \u003d new NurseScheduleUI();","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"AlexanderTanJunAn"},"content":"        logger \u003d Logger.getLogger(this.getClass().getName());","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"AlexanderTanJunAn"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"AlexanderTanJunAn"},"content":"        logger.addHandler(storage.initLogger());","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"AlexanderTanJunAn"},"content":"        logger.info(\"NurseSchedule instantiated\");","lastModifiedDate":"2021-04-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /** Reads the user command and executes it, until the user issues the exit command. */","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void runCommandLoopUntilExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"AlexanderTanJunAn"},"content":"        try {","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"AlexanderTanJunAn"},"content":"            nurseSchedules \u003d new NurseScheduleActions(NurseScheduleStorage.load());","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (IOException | NullPointerException | ArrayIndexOutOfBoundsException","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"AlexanderTanJunAn"},"content":"                | NurseIdNotFound | InvalidIDTypeException | PatientIdNotFound | InvalidDateException e) {","lastModifiedDate":"2021-04-03"},{"lineNumber":44,"author":{"gitId":"AlexanderTanJunAn"},"content":"            ui.corruptedFileErrorMessage();","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"AlexanderTanJunAn"},"content":"            logger.log(Level.SEVERE, \"Error loading NurseSchedule.txt\");","lastModifiedDate":"2021-04-02"},{"lineNumber":46,"author":{"gitId":"AlexanderTanJunAn"},"content":"            return;","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (NurseCrossValidationError e) {","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"AlexanderTanJunAn"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"AlexanderTanJunAn"},"content":"            logger.log(Level.SEVERE,\"Error loading Staff.txt\");","lastModifiedDate":"2021-04-02"},{"lineNumber":50,"author":{"gitId":"AlexanderTanJunAn"},"content":"            return;","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (PatientCrossValidationError e) {","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"AlexanderTanJunAn"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"AlexanderTanJunAn"},"content":"            logger.log(Level.SEVERE,\"Error loading Patients.txt\");","lastModifiedDate":"2021-04-02"},{"lineNumber":54,"author":{"gitId":"AlexanderTanJunAn"},"content":"            return;","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"AlexanderTanJunAn"},"content":"        ui.printNurseScheduleWelcomeMessage();","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"AlexanderTanJunAn"},"content":"        boolean isReturnToStartMenu \u003d false;","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"AlexanderTanJunAn"},"content":"        while (!isReturnToStartMenu) {","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"AlexanderTanJunAn"},"content":"            logger.info(\"Nurse Schedule super loop started\");","lastModifiedDate":"2021-04-02"},{"lineNumber":60,"author":{"gitId":"AlexanderTanJunAn"},"content":"            try {","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"AlexanderTanJunAn"},"content":"                String line \u003d ui.getInput(\"NSchedule\");","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"AlexanderTanJunAn"},"content":"                Command c \u003d parser.nurseParse(line, ui);","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"AlexanderTanJunAn"},"content":"                ui.lineBreak();","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"AlexanderTanJunAn"},"content":"                c.execute(nurseSchedules, ui);","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"AlexanderTanJunAn"},"content":"                storage.writeToFile(nurseSchedules);","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"AlexanderTanJunAn"},"content":"                isReturnToStartMenu \u003d c.isExit();","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"AlexanderTanJunAn"},"content":"                if (isReturnToStartMenu) {","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    nurseSchedules.clearSchedules();","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    UI.returningToStartMenuMessage();","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    logger.info(\"Exiting nurse schedule instance\");","lastModifiedDate":"2021-04-02"},{"lineNumber":71,"author":{"gitId":"AlexanderTanJunAn"},"content":"                }","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"AlexanderTanJunAn"},"content":"                ui.lineBreak();","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"AlexanderTanJunAn"},"content":"            } catch (HealthVaultException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"AlexanderTanJunAn"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"AlexanderTanJunAn"},"content":"                ui.lineBreak();","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"AlexanderTanJunAn"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"AlexanderTanJunAn"},"content":"                //ui.invalidInputsMessage();","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"AlexanderTanJunAn"},"content":"                //Command C can return as null if an error is triggered in parser","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"AlexanderTanJunAn"},"content":"                //Null Pointer Exception may hence occur, the catch statement is to ensure it does not exit the loop.","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"AlexanderTanJunAn"},"content":"                logger.log(Level.WARNING, \"null command returned\");","lastModifiedDate":"2021-04-02"},{"lineNumber":81,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":83,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"AlexanderTanJunAn":77,"-":2,"blank-bank":5}},{"path":"src/main/java/seedu/logic/instance/PatientCommandInstance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.logic.instance;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.parser.PatientParser;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.PatientActions;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"import seedu.storage.PatientStorage;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"import seedu.ui.PatientUI;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"import seedu.ui.UI;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"public class PatientCommandInstance {","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"    private PatientUI ui;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    private PatientActions patients;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"    private PatientStorage patientStorage;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"    private PatientParser parser;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"    public PatientCommandInstance(String filepath) {","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"        ui \u003d new PatientUI();","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"        patientStorage \u003d new PatientStorage(filepath);","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"        parser \u003d new PatientParser();","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"    public void run() {","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"        try {","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"            patients \u003d new PatientActions(patientStorage.loadPatients());","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (HealthVaultException | NumberFormatException e) {","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"            ui.corruptedFileErrorMessage();","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"            patients \u003d new PatientActions();","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"            return;","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"        PatientUI.patientCommandWelcome();","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"        boolean isReturnToStartMenu \u003d false;","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"        while (!isReturnToStartMenu) {","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"            try {","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"                UI.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"                String fullCommand \u003d ui.getInput(\"Patient\");","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"                Command c \u003d parser.patientParse(fullCommand, patients);","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"                c.execute(patients, ui);","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":"                patientStorage.storePatients(patients);","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":"                isReturnToStartMenu \u003d c.isExit();","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":"                if (isReturnToStartMenu) {","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":"                    UI.returningToStartMenuMessage();","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"Chiamjiaen"},"content":"                }","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"Chiamjiaen"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"Chiamjiaen"},"content":"                //Command C can return as null if an error is triggered in parser","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"Chiamjiaen"},"content":"                //Null Pointer Exception may hence occur, the catch statement is to ensure it does not exit the loop.","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"Chiamjiaen"},"content":"            } catch (HealthVaultException e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"Chiamjiaen"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"Chiamjiaen"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"Chiamjiaen"},"content":"                System.out.println(\"Your age input is not an accepted integer!\");","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"Chiamjiaen"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"Chiamjiaen"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"Chiamjiaen":47,"blank-bank":8}},{"path":"src/main/java/seedu/logic/instance/StaffInstance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.logic.instance;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.command.StaffAggregation;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.parser.StaffParser;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"import seedu.storage.StaffStorage;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"import seedu.ui.StaffUI;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"import seedu.ui.UI;","lastModifiedDate":"2021-04-02"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"public class StaffInstance {","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"    private StaffUI staffUI;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"    private StaffAggregation staffAggregation;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"    private StaffStorage staffStorage;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"    private StaffParser staffParser;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"    public StaffInstance(String filepath) {","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"        staffUI \u003d new StaffUI();","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"        staffStorage \u003d new StaffStorage(filepath);","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"        staffParser \u003d new StaffParser();","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"        staffAggregation \u003d new StaffAggregation();","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"    public void run() {","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"            staffStorage.fileHandling(staffAggregation);","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"        } catch (HealthVaultException e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"            StaffUI.corruptedFileErrorMessage();","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":"            return;","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"        StaffUI.staffMenuHeader();","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"        while (true) {","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"            String line;","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"            line \u003d staffUI.getInput(\"Staff\");","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"            try {","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"                Command c \u003d staffParser.commandHandler(line, staffAggregation);","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"                if (c \u003d\u003d null){","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"                    continue;","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"                }","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"                c.execute(staffAggregation, staffUI, staffStorage);","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"                if (c.isExit()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"                    System.out.println(\"Returning to start Menu!\\n\");","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"                    break;","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"                }","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"            } catch (HealthVaultException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"                StaffUI.invalidNumericErrorMessage();","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"                UI.unidentifiedErrorMessage();","lastModifiedDate":"2021-04-02"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"blank-bank":55}},{"path":"src/main/java/seedu/logic/parser/DoctorAppointmentParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.logic.parser;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"MingShun98"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"MingShun98"},"content":"import seedu.exceptions.UnrecognizedCommandException;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.command.AppointmentActions;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"MingShun98"},"content":"import seedu.logic.command.doctorappointment.*;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"MingShun98"},"content":"import seedu.logic.errorchecker.DoctorAppointmentChecker;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"MingShun98"},"content":"import seedu.logic.errorchecker.MainChecker;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"MingShun98"},"content":"import static seedu.ui.UI.smartCommandRecognition;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"MingShun98"},"content":"public class DoctorAppointmentParser {","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"MingShun98"},"content":"    public static Command parse(String input, AppointmentActions details) throws HealthVaultException {","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"MingShun98"},"content":"        final String[] COMMANDS \u003d {\"add\", \"delete\", \"list\", \"return\", \"help\"};","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"MingShun98"},"content":"        String[] inputArray \u003d input.split(\"/\");","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"MingShun98"},"content":"        assert inputArray.length \u003e 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"MingShun98"},"content":"        assert inputArray.length \u003c 7;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"MingShun98"},"content":"        Command c \u003d null;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"MingShun98"},"content":"        MainChecker.checkBlankInput(input);","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"        MainChecker.checkNumInput(input, 6,1);","lastModifiedDate":"2021-04-02"},{"lineNumber":25,"author":{"gitId":"MingShun98"},"content":"        switch (smartCommandRecognition(COMMANDS, input.split(\"/\")[0])) {","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"MingShun98"},"content":"        case \"add\": {","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"MingShun98"},"content":"            MainChecker.checkNumInput(input, 6, 6);","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"MingShun98"},"content":"            DoctorAppointmentChecker.checkValidDataForAdd(inputArray);","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"MingShun98"},"content":"            c \u003d new DoctorAppointmentAdd(inputArray);","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"MingShun98"},"content":"            break;","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"MingShun98"},"content":"        case \"list\": {","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"MingShun98"},"content":"            MainChecker.checkNumInput(input, 2, 2);","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"MingShun98"},"content":"            DoctorAppointmentChecker.checkValidDataForList(inputArray);","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"MingShun98"},"content":"            c \u003d new DoctorAppointmentList(inputArray);","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"MingShun98"},"content":"            break;","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"MingShun98"},"content":"        case \"delete\": {","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"MingShun98"},"content":"            MainChecker.checkNumInput(input, 2, 2);","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"MingShun98"},"content":"            DoctorAppointmentChecker.checkValidDataForDelete(inputArray);","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"MingShun98"},"content":"            c \u003d new DoctorAppointmentDelete(inputArray);","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"MingShun98"},"content":"            break;","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"MingShun98"},"content":"        case \"return\":","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"MingShun98"},"content":"            c \u003d new DoctorAppointmentReturn();","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"MingShun98"},"content":"            break;","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"MingShun98"},"content":"        case \"help\":","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"MingShun98"},"content":"            c \u003d new DoctorAppointmentHelp();","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"MingShun98"},"content":"            break;","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"MingShun98"},"content":"        default:","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"MingShun98"},"content":"            throw new UnrecognizedCommandException();","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"MingShun98"},"content":"        return c;","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"MingShun98"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"MingShun98":54,"blank-bank":3}},{"path":"src/main/java/seedu/logic/parser/InventoryParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NoorSarrah"},"content":"package seedu.logic.parser;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"NoorSarrah"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-04-03"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"NoorSarrah"},"content":"import seedu.logic.command.InventoryActions;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"NoorSarrah"},"content":"import seedu.logic.command.inventory.InventoryAdd;","lastModifiedDate":"2021-04-03"},{"lineNumber":7,"author":{"gitId":"NoorSarrah"},"content":"import seedu.logic.command.inventory.InventoryDelete;","lastModifiedDate":"2021-04-03"},{"lineNumber":8,"author":{"gitId":"NoorSarrah"},"content":"import seedu.logic.command.inventory.InventoryHelp;","lastModifiedDate":"2021-04-03"},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":"import seedu.logic.command.inventory.InventoryList;","lastModifiedDate":"2021-04-03"},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":"import seedu.logic.command.inventory.InventoryReturn;","lastModifiedDate":"2021-04-03"},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":"import seedu.logic.errorchecker.InventoryChecker;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":"import seedu.logic.errorchecker.MainChecker;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"NoorSarrah"},"content":"import seedu.ui.UI;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"NoorSarrah"},"content":"import static seedu.ui.UI.smartCommandRecognition;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"NoorSarrah"},"content":"public class InventoryParser {","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"NoorSarrah"},"content":"    static final String[] COMMANDS \u003d {\"add\", \"delete\", \"list\", \"return\", \"help\"};","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"NoorSarrah"},"content":"    private InventoryChecker checker;","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"NoorSarrah"},"content":"    public Command inventoryParse(String fullCommand, InventoryActions inventories)","lastModifiedDate":"2021-04-03"},{"lineNumber":21,"author":{"gitId":"NoorSarrah"},"content":"            throws ArrayIndexOutOfBoundsException,","lastModifiedDate":"2021-04-03"},{"lineNumber":22,"author":{"gitId":"NoorSarrah"},"content":"            HealthVaultException {","lastModifiedDate":"2021-04-03"},{"lineNumber":23,"author":{"gitId":"NoorSarrah"},"content":"        String[] stringTokens \u003d fullCommand.trim().split(\"/\");","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"NoorSarrah"},"content":"        int numberOfTokens \u003d stringTokens.length;","lastModifiedDate":"2021-04-03"},{"lineNumber":25,"author":{"gitId":"NoorSarrah"},"content":"        MainChecker.checkNumInput(fullCommand, 4, 1);","lastModifiedDate":"2021-04-03"},{"lineNumber":26,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":27,"author":{"gitId":"NoorSarrah"},"content":"        String command \u003d smartCommandRecognition(COMMANDS, stringTokens[0]);","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":29,"author":{"gitId":"NoorSarrah"},"content":"        Command c \u003d null;","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"NoorSarrah"},"content":"        checker \u003d new InventoryChecker(inventories, stringTokens, numberOfTokens);","lastModifiedDate":"2021-04-03"},{"lineNumber":31,"author":{"gitId":"NoorSarrah"},"content":"        switch (command) {","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"NoorSarrah"},"content":"        case \"list\":","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"NoorSarrah"},"content":"            int numberOfInputs \u003d 1;","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"NoorSarrah"},"content":"            MainChecker.checkNumInput(fullCommand, numberOfInputs, numberOfInputs);","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"NoorSarrah"},"content":"            c \u003d new InventoryList();","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"NoorSarrah"},"content":"            break;","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"NoorSarrah"},"content":"        case \"add\":","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"NoorSarrah"},"content":"            numberOfInputs \u003d 4;","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"NoorSarrah"},"content":"            MainChecker.checkNumInput(fullCommand, numberOfInputs, numberOfInputs);","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"NoorSarrah"},"content":"            MainChecker.checkBlankInput(fullCommand);","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"NoorSarrah"},"content":"            checker.checkAdd();","lastModifiedDate":"2021-04-03"},{"lineNumber":42,"author":{"gitId":"NoorSarrah"},"content":"            String[] addFormat \u003d parseToAddFormat(stringTokens);","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"NoorSarrah"},"content":"            c \u003d new InventoryAdd(addFormat);","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"NoorSarrah"},"content":"            break;","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"NoorSarrah"},"content":"        case \"delete\":","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"NoorSarrah"},"content":"            numberOfInputs \u003d 2;","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"NoorSarrah"},"content":"            MainChecker.checkNumInput(fullCommand, numberOfInputs, numberOfInputs);","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"NoorSarrah"},"content":"            MainChecker.checkBlankInput(fullCommand);","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"NoorSarrah"},"content":"            checker.checkDelete();","lastModifiedDate":"2021-04-03"},{"lineNumber":50,"author":{"gitId":"NoorSarrah"},"content":"            c \u003d new InventoryDelete(stringTokens[1]);","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"NoorSarrah"},"content":"            break;","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"NoorSarrah"},"content":"        case \"help\":","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"NoorSarrah"},"content":"            numberOfInputs \u003d 1;","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"NoorSarrah"},"content":"            MainChecker.checkNumInput(fullCommand, numberOfInputs, numberOfInputs);","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"NoorSarrah"},"content":"            c \u003d new InventoryHelp();","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"NoorSarrah"},"content":"            break;","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"NoorSarrah"},"content":"        case \"return\":","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"NoorSarrah"},"content":"            numberOfInputs \u003d 1;","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"NoorSarrah"},"content":"            MainChecker.checkNumInput(fullCommand, numberOfInputs, numberOfInputs);","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"NoorSarrah"},"content":"            c \u003d new InventoryReturn();","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"NoorSarrah"},"content":"            break;","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"NoorSarrah"},"content":"        default:","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"NoorSarrah"},"content":"            UI.invalidCommandErrorMessage();","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"NoorSarrah"},"content":"            break;","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"NoorSarrah"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"NoorSarrah"},"content":"        return c;","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":69,"author":{"gitId":"NoorSarrah"},"content":"    private String[] parseToAddFormat(String[] stringTokens) {","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"NoorSarrah"},"content":"       String[] addFormat;","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"NoorSarrah"},"content":"       addFormat \u003d new String[] {stringTokens[1], stringTokens[2], stringTokens[3]};","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"NoorSarrah"},"content":"       return addFormat;","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"NoorSarrah"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"NoorSarrah":74}},{"path":"src/main/java/seedu/logic/parser/NurseSchedulesParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.logic.parser;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.ExcessInputException;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.InsufficientInputException;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.InvalidDateException;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.NoInputException;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.nurseschedules.WrongInputsException;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.patient.IllegalCharacterException;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.logic.command.nurseschedule.*;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.logic.errorchecker.MainChecker;","lastModifiedDate":"2021-04-02"},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.logic.errorchecker.NurseScheduleChecker;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.ui.NurseScheduleUI;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.Date;","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-04-02"},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":"import static seedu.logic.instance.NurseScheduleInstance.logger;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"import static seedu.ui.UI.smartCommandRecognition;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class NurseSchedulesParser {","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"AlexanderTanJunAn"},"content":"    static final String[] COMMANDS \u003d {\"ADD\", \"DELETE\", \"LIST\", \"RETURN\", \"HELP\"};","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":"    NurseScheduleChecker checker \u003d new NurseScheduleChecker();","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * Returns the command of user.","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"AlexanderTanJunAn"},"content":"     *","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @param text User input","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * @return First word of user input","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"AlexanderTanJunAn"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getFirstWord(String text) {","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"AlexanderTanJunAn"},"content":"        int index \u003d text.indexOf(\u0027/\u0027);","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"AlexanderTanJunAn"},"content":"        if (index \u003e -1) {","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"AlexanderTanJunAn"},"content":"            return text.substring(0, index).trim();","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } else {","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"AlexanderTanJunAn"},"content":"            return text;","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String[] getDetails(String input, String command) throws WrongInputsException, NoInputException, ExcessInputException, InsufficientInputException, IllegalCharacterException, InvalidDateException {","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"AlexanderTanJunAn"},"content":"        NurseScheduleChecker.checkEmptyInput(input);","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String[] details \u003d new String[3];","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String[] parts \u003d input.split(\"/\");","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"AlexanderTanJunAn"},"content":"        assert parts.length \u003e 0;","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"AlexanderTanJunAn"},"content":"        if (parts.length \u003c\u003d 1) {","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"AlexanderTanJunAn"},"content":"            throw new WrongInputsException();","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"AlexanderTanJunAn"},"content":"        switch (command) {","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"AlexanderTanJunAn"},"content":"        case \"ADD\":","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"AlexanderTanJunAn"},"content":"            checker.isValidDate(parts[3]);","lastModifiedDate":"2021-04-03"},{"lineNumber":62,"author":{"gitId":"AlexanderTanJunAn"},"content":"            MainChecker.checkNumInput(input, 4, 4);","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"AlexanderTanJunAn"},"content":"            details[0] \u003d parts[1];","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"AlexanderTanJunAn"},"content":"            details[1] \u003d parts[2];","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"AlexanderTanJunAn"},"content":"            details[2] \u003d parts[3];","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"AlexanderTanJunAn"},"content":"            MainChecker.illegalCharacterChecker(details[0], \"Nurse ID\");","lastModifiedDate":"2021-04-03"},{"lineNumber":67,"author":{"gitId":"AlexanderTanJunAn"},"content":"            MainChecker.illegalCharacterChecker(details[1], \"Patient ID\");","lastModifiedDate":"2021-04-03"},{"lineNumber":68,"author":{"gitId":"AlexanderTanJunAn"},"content":"            break;","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"AlexanderTanJunAn"},"content":"        case \"DELETE\":","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"AlexanderTanJunAn"},"content":"            checker.isValidDate(parts[2]);","lastModifiedDate":"2021-04-03"},{"lineNumber":71,"author":{"gitId":"AlexanderTanJunAn"},"content":"            MainChecker.checkNumInput(input, 3, 3);","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"AlexanderTanJunAn"},"content":"            details[0] \u003d parts[1];","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"AlexanderTanJunAn"},"content":"            details[1] \u003d parts[2];","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"AlexanderTanJunAn"},"content":"            MainChecker.illegalCharacterChecker(details[0], \"Nurse ID\");","lastModifiedDate":"2021-04-03"},{"lineNumber":75,"author":{"gitId":"AlexanderTanJunAn"},"content":"            break;","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"AlexanderTanJunAn"},"content":"        case \"LIST\":","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"AlexanderTanJunAn"},"content":"            MainChecker.checkNumInput(input, 2, 2);","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"AlexanderTanJunAn"},"content":"            details[0] \u003d parts[1];","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"AlexanderTanJunAn"},"content":"            break;","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return details;","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public static String formatDate(String datetime) throws ParseException {","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"AlexanderTanJunAn"},"content":"        SimpleDateFormat parser \u003d new SimpleDateFormat(\"ddMMyyyy\");","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"AlexanderTanJunAn"},"content":"        Date date \u003d parser.parse(datetime);","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"AlexanderTanJunAn"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy\");","lastModifiedDate":"2021-03-22"},{"lineNumber":88,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return formatter.format(date);","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":91,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public Command nurseParse(String input, NurseScheduleUI ui) throws NoInputException, InsufficientInputException, ExcessInputException, IllegalCharacterException, InvalidDateException {","lastModifiedDate":"2021-04-01"},{"lineNumber":93,"author":{"gitId":"AlexanderTanJunAn"},"content":"        assert input !\u003d null : \"user input should not be null\";","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"AlexanderTanJunAn"},"content":"        assert !(input.isEmpty()) : \"user input should not be empty\";","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"AlexanderTanJunAn"},"content":"        NurseSchedulesParser parser \u003d new NurseSchedulesParser();","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String line \u003d input.toUpperCase();","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String command \u003d smartCommandRecognition(COMMANDS, parser.getFirstWord(line));","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"AlexanderTanJunAn"},"content":"        Command c \u003d null;","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"AlexanderTanJunAn"},"content":"        logger.info(\"Parsing command...\");","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"AlexanderTanJunAn"},"content":"        switch (command) {","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"AlexanderTanJunAn"},"content":"        case \"ADD\":","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"AlexanderTanJunAn"},"content":"            try {","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"AlexanderTanJunAn"},"content":"                String[] details \u003d parser.getDetails(line, command);","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"AlexanderTanJunAn"},"content":"                c \u003d new NurseScheduleAdd(details);","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"AlexanderTanJunAn"},"content":"            } catch (ArrayIndexOutOfBoundsException | WrongInputsException e) {","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"AlexanderTanJunAn"},"content":"                ui.formatHelpMessage();","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"AlexanderTanJunAn"},"content":"                ui.addHelpMessage();","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"AlexanderTanJunAn"},"content":"                logger.log(Level.WARNING, \"Parameter error in add command!\");","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"AlexanderTanJunAn"},"content":"            break;","lastModifiedDate":"2021-03-28"},{"lineNumber":114,"author":{"gitId":"AlexanderTanJunAn"},"content":"        case \"LIST\":","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"AlexanderTanJunAn"},"content":"            try {","lastModifiedDate":"2021-03-28"},{"lineNumber":116,"author":{"gitId":"AlexanderTanJunAn"},"content":"                String[] details \u003d parser.getDetails(line, command);","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"AlexanderTanJunAn"},"content":"                c \u003d new NurseScheduleList(details);","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"AlexanderTanJunAn"},"content":"            } catch (ArrayIndexOutOfBoundsException | WrongInputsException e) {","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"AlexanderTanJunAn"},"content":"                ui.formatHelpMessage();","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"AlexanderTanJunAn"},"content":"                ui.listHelpMessage();","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"AlexanderTanJunAn"},"content":"                logger.log(Level.WARNING, \"Parameter error in list command!\");","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"AlexanderTanJunAn"},"content":"            break;","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"AlexanderTanJunAn"},"content":"        case \"DELETE\":","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"AlexanderTanJunAn"},"content":"            try {","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"AlexanderTanJunAn"},"content":"                String[] details \u003d parser.getDetails(line, command);","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"AlexanderTanJunAn"},"content":"                c \u003d new NurseScheduleDelete(details);","lastModifiedDate":"2021-03-29"},{"lineNumber":128,"author":{"gitId":"AlexanderTanJunAn"},"content":"            } catch(ArrayIndexOutOfBoundsException | WrongInputsException e) {","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"AlexanderTanJunAn"},"content":"                ui.formatHelpMessage();","lastModifiedDate":"2021-03-29"},{"lineNumber":130,"author":{"gitId":"AlexanderTanJunAn"},"content":"                ui.deleteHelpMessage();","lastModifiedDate":"2021-03-29"},{"lineNumber":131,"author":{"gitId":"AlexanderTanJunAn"},"content":"                logger.log(Level.WARNING, \"Parameter error in delete command!\");","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"AlexanderTanJunAn"},"content":"            break;","lastModifiedDate":"2021-03-29"},{"lineNumber":134,"author":{"gitId":"AlexanderTanJunAn"},"content":"        case \"HELP\":","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"AlexanderTanJunAn"},"content":"            c \u003d new NurseScheduleHelp();","lastModifiedDate":"2021-03-29"},{"lineNumber":136,"author":{"gitId":"AlexanderTanJunAn"},"content":"            break;","lastModifiedDate":"2021-03-29"},{"lineNumber":137,"author":{"gitId":"AlexanderTanJunAn"},"content":"        case \"RETURN\":","lastModifiedDate":"2021-03-30"},{"lineNumber":138,"author":{"gitId":"AlexanderTanJunAn"},"content":"            c \u003d new NurseScheduleReturn();","lastModifiedDate":"2021-03-29"},{"lineNumber":139,"author":{"gitId":"AlexanderTanJunAn"},"content":"            break;","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"AlexanderTanJunAn"},"content":"        default:","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"AlexanderTanJunAn"},"content":"            logger.log(Level.WARNING, \"Command not successfully parsed!\");","lastModifiedDate":"2021-03-30"},{"lineNumber":142,"author":{"gitId":"AlexanderTanJunAn"},"content":"            ui.invalidInputsMessage();","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"AlexanderTanJunAn"},"content":"            break;","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":145,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return c;","lastModifiedDate":"2021-03-29"},{"lineNumber":146,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":147,"author":{"gitId":"AlexanderTanJunAn"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"AlexanderTanJunAn":143,"blank-bank":4}},{"path":"src/main/java/seedu/logic/parser/PatientParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.logic.parser;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.exceptions.UnrecognizedCommandException;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.command.PatientActions;","lastModifiedDate":"2021-04-02"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.patient.*;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.errorchecker.MainChecker;","lastModifiedDate":"2021-04-02"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.errorchecker.PatientChecker;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"import static seedu.ui.UI.smartCommandRecognition;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"public class PatientParser {","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"    protected static final String[] COMMANDS \u003d {\"add\", \"delete\", \"list\", \"find\", \"return\", \"help\"};","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"    private PatientChecker checker;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"    public Command patientParse(String fullCommand, PatientActions patients) throws ArrayIndexOutOfBoundsException,","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"            HealthVaultException, NumberFormatException {","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"        String[] stringTokens \u003d fullCommand.trim().split(\"/\");","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"        int numberOfTokens \u003d stringTokens.length;","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"        /*ArrayList\u003cString\u003e cleanString \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"        for (int i \u003d 0; i \u003c numberOfTokens; i++) {","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"            cleanString.add(UI.cleanseInput(stringTokens[i]));","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"        }*/","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"        MainChecker.checkNumInput(fullCommand,7,1);","lastModifiedDate":"2021-04-02"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"        String command \u003d smartCommandRecognition(COMMANDS, stringTokens[0]);","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"        Command c \u003d null;","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"        checker \u003d new PatientChecker(patients, stringTokens, command, numberOfTokens);","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"        switch (command) {","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"        case \"list\":","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"            checker.checkLength();","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"            c \u003d new PatientList();","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"            break;","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"        case \"add\":","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"            checker.checkAdd();","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"            String[] addFormat \u003d parseToAddFormat(stringTokens);","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"            c \u003d new PatientAdd(addFormat);","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":"            break;","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":"        case \"delete\":","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":"            checker.checkLength();","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":"            checker.checkID();","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"Chiamjiaen"},"content":"            c \u003d new PatientDelete(stringTokens[1]);","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"Chiamjiaen"},"content":"            break;","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"Chiamjiaen"},"content":"        case \"find\":","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"Chiamjiaen"},"content":"            checker.checkFind();","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"Chiamjiaen"},"content":"            c \u003d new PatientFind(stringTokens[1]);","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"Chiamjiaen"},"content":"            break;","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"Chiamjiaen"},"content":"        case \"help\":","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"Chiamjiaen"},"content":"            checker.checkLength();","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"Chiamjiaen"},"content":"            c \u003d new PatientHelp();","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"Chiamjiaen"},"content":"            break;","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"Chiamjiaen"},"content":"        case \"return\":","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"Chiamjiaen"},"content":"            checker.checkLength();","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"Chiamjiaen"},"content":"            c \u003d new PatientReturn();","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"Chiamjiaen"},"content":"            break;","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"Chiamjiaen"},"content":"        default:","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"Chiamjiaen"},"content":"            throw new UnrecognizedCommandException();","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"Chiamjiaen"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"Chiamjiaen"},"content":"        return c;","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"Chiamjiaen"},"content":"    private String[] parseToAddFormat(String[] input) {","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"Chiamjiaen"},"content":"        String[] addFormat;","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"Chiamjiaen"},"content":"        addFormat \u003d new String[] {input[1], input[2], input[3],","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"Chiamjiaen"},"content":"                input[4], input[5], input[6]};","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"Chiamjiaen"},"content":"        return addFormat;","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"Chiamjiaen":64,"blank-bank":7}},{"path":"src/main/java/seedu/logic/parser/StaffParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.logic.parser;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.*;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.patient.IllegalCharacterException;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.staff.WrongListInputException;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.staff.WrongStaffIdException;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.command.StaffAggregation;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.command.staff.*;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.errorchecker.MainChecker;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.errorchecker.StaffChecker;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"import seedu.ui.StaffUI;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"import seedu.ui.UI;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"import static seedu.ui.UI.smartCommandRecognition;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"public class StaffParser {","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"    static final String[] COMMANDS \u003d {\"add\", \"delete\", \"list\", \"find\", \"return\", \"help\"};","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"    private StaffChecker staffChecker \u003d new StaffChecker();","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"    public Command commandHandler(String line, StaffAggregation staffAggregation) throws","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"            WrongStaffIdException, WrongListInputException, ExcessInputException,","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"            InsufficientInputException, NoInputException, NumberFormatException,","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"            InvalidIntegerException, DuplicateIDException, IllegalCharacterException {","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"        Command c \u003d null;","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"        if (line.equals(\" \")) {","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"            UI.noCommandErrorMessage();","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"            return new StaffReturn();","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"        staffChecker.checkNumInput(line, 5,1);","lastModifiedDate":"2021-04-02"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"        switch (smartCommandRecognition(COMMANDS, line.split(\"/\")[0])) {","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"        case (\"add\"):","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"            staffChecker.checkValidDataForAdd(line, staffAggregation);","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"            String[] arr \u003d staffChecker.invalidCharactersStaffChecker(line);","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"            StaffUI.staffHiredOutput(arr[0], arr[1]);","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"            c \u003d new StaffAdd(arr);","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"            break;","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"        case (\"list\"):","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"            staffChecker.checkListCommand(line);","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"            MainChecker.checkNumInput(line,2,1);","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"            c \u003d new StaffList(line);","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"            break;","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"        case (\"delete\"):","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"            staffChecker.checkNumInput(line,2,2);","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"            staffChecker.checkStaffID(line.split(\"/\")[1]);","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"            c \u003d new StaffDelete(line);","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"            break;","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"        case (\"help\"):","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":"            c \u003d new StaffHelp();","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":"            break;","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"blank-bank"},"content":"        case (\"find\"):","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"            staffChecker.checkNumInput(line,2,2);","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":"            c \u003d new StaffFind(line);","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":"            break;","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"blank-bank"},"content":"        case (\"return\"):","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"blank-bank"},"content":"            return new StaffReturn();","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"blank-bank"},"content":"        default:","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"blank-bank"},"content":"            UI.invalidCommandErrorMessage();","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":68,"author":{"gitId":"blank-bank"},"content":"        return c;","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":70,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":71,"author":{"gitId":"blank-bank"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"blank-bank":71}},{"path":"src/main/java/seedu/logic/parser/StartMenuParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.logic.parser;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.exceptions.UnrecognizedCommandException;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.startmenu.*;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"import java.util.Locale;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"import static seedu.duke.Constants.*;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"import static seedu.ui.UI.cleanseInput;","lastModifiedDate":"2021-04-02"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"import static seedu.ui.UI.smartCommandRecognition;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"public class StartMenuParser {","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    static final String[] COMMANDS \u003d {\"staff\", \"patient\", \"appointments\", \"schedules\", \"inventory\", \"help\", \"exit\"};","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"    public Command startMenuParse(String userInput) {","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"        assert userInput !\u003d null : \"user input should not be null\";","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"        assert !(userInput.isEmpty()) : \"user input should not be empty\";","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"        Command c \u003d null;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"        try {","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"            String formattedMessage \u003d userInput.toLowerCase(Locale.ROOT).trim();","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"            switch (smartCommandRecognition(COMMANDS, cleanseInput(formattedMessage))) {","lastModifiedDate":"2021-04-02"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"            case TO_STAFF_INSTANCE:","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"                c \u003d new ToStaffInstance();","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"                break;","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"            case TO_PATIENT_INSTANCE:","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"                c \u003d new ToPatientInstance();","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"                break;","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"            case TO_SCHEDULES_INSTANCE:","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"                c \u003d new ToNurseScheduleInstance();","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"                break;","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"            case TO_APPOINTMENTS_INSTANCE:","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"                c \u003d new ToDoctorAppointmentInstance();","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"                break;","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"            case TO_INVENTORY_INSTANCE:","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"                c \u003d new ToInventoryInstance();","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"                break;","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"            case HELP_COMMAND:","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":"                c \u003d new MainHelp();","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":"                break;","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":"            case EXIT_COMMAND:","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":"                c \u003d new MainExit();","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"Chiamjiaen"},"content":"                break;","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"Chiamjiaen"},"content":"            default:","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"Chiamjiaen"},"content":"                throw new UnrecognizedCommandException();","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"Chiamjiaen"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (UnrecognizedCommandException e) {","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"            e.getMessage();","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"Chiamjiaen"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"Chiamjiaen"},"content":"        return c;","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Chiamjiaen":49,"blank-bank":4}},{"path":"src/main/java/seedu/model/DoctorAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.model;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"MingShun98"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"MingShun98"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"MingShun98"},"content":"import java.util.Date;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":"public class DoctorAppointment {","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"MingShun98"},"content":"    protected String doctorId;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"MingShun98"},"content":"    protected String appointmentID;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"MingShun98"},"content":"    protected String patientsName;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"MingShun98"},"content":"    protected String gender;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"MingShun98"},"content":"    protected String date;","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"MingShun98"},"content":"    public DoctorAppointment(String doctorId, String appointmentID, String name, String gender, String date) {","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"MingShun98"},"content":"        this.doctorId \u003d doctorId;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"MingShun98"},"content":"        this.appointmentID \u003d appointmentID;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"MingShun98"},"content":"        this.patientsName \u003d name;","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"MingShun98"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"MingShun98"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"MingShun98"},"content":"    public String getAppointmentId() {","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"MingShun98"},"content":"        return this.appointmentID;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"MingShun98"},"content":"    public String getDoctorId() {","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"MingShun98"},"content":"        return this.doctorId;","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"MingShun98"},"content":"    public String getPatientsName() {","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"MingShun98"},"content":"        return this.patientsName;","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"MingShun98"},"content":"    public String getGender() {","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"MingShun98"},"content":"        return this.gender;","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"MingShun98"},"content":"    public String getDate() {","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"MingShun98"},"content":"        return this.date;","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"MingShun98"},"content":"    /*","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"MingShun98"},"content":"        Date format \u003d YYYY-MM-DD","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"MingShun98"},"content":"    */","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"MingShun98"},"content":"    public String getDateFormat(String inputDate) throws ParseException {","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"MingShun98"},"content":"        SimpleDateFormat parser \u003d new SimpleDateFormat(\"ddMMyyyy\");","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"MingShun98"},"content":"        Date date \u003d parser.parse(inputDate);","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"MingShun98"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyy\");","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"MingShun98"},"content":"        return formatter.format(date);","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"MingShun98"},"content":"    public String saveTask() {","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"MingShun98"},"content":"        return doctorId + \" | \" + appointmentID + \" | \"+ patientsName + \" | \" + gender + \" | \" + date;","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"MingShun98"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"MingShun98":57,"Chiamjiaen":1}},{"path":"src/main/java/seedu/model/Inventory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NoorSarrah"},"content":"package seedu.model;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"NoorSarrah"},"content":"import java.text.DecimalFormat;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"NoorSarrah"},"content":"public class Inventory {","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"NoorSarrah"},"content":"    protected String name;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"NoorSarrah"},"content":"    protected Double price;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"NoorSarrah"},"content":"    protected int quantity;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":"    public Inventory(String name, Double price, int quantity) {","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":"        this.price \u003d price;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"NoorSarrah"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"NoorSarrah"},"content":"    public String getDrugName() {","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"NoorSarrah"},"content":"        return this.name;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"NoorSarrah"},"content":"    public String getPrice() {","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"NoorSarrah"},"content":"        DecimalFormat df \u003d new DecimalFormat(\"0.00\");","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"NoorSarrah"},"content":"        return df.format(price);","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"NoorSarrah"},"content":"    public int getQuantity() {","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"NoorSarrah"},"content":"        return this.quantity;","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"NoorSarrah"},"content":"    public String getDrugDetails() {","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"NoorSarrah"},"content":"        return (\"Name: \" + name + \"\\n\" +","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"NoorSarrah"},"content":"                \"Price: $\" + price + \"\\n\" +","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"NoorSarrah"},"content":"                \"Quantity: \" + quantity + \"\\n\");","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"NoorSarrah"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"NoorSarrah"},"content":"        return name + \"|\" + price + \"|\" + quantity;","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"NoorSarrah"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"NoorSarrah":37}},{"path":"src/main/java/seedu/model/NurseSchedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.model;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.Date;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"import static seedu.ui.UI.prettyPrint;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class NurseSchedule implements Comparable\u003cNurseSchedule\u003e {","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"    protected String nurseID;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"    protected String patientID;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":"    protected String datetime;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public NurseSchedule(String nurseID, String patientID, String datetime) {","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":"        this.nurseID \u003d nurseID;","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"        this.patientID \u003d patientID;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":"        this.datetime \u003d datetime;","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * Compares as Date object.","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public int compareTo(NurseSchedule o) {","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"AlexanderTanJunAn"},"content":"        if (getDatetime() \u003d\u003d null || o.getDatetime() \u003d\u003d null) {","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"AlexanderTanJunAn"},"content":"            return 0;","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":"        SimpleDateFormat parser \u003d new SimpleDateFormat(\"ddMMyyyy\");","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"AlexanderTanJunAn"},"content":"        Date date \u003d null;","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"AlexanderTanJunAn"},"content":"        Date odate \u003d null;","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"AlexanderTanJunAn"},"content":"        try {","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"AlexanderTanJunAn"},"content":"            date \u003d parser.parse(getDatetime());","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"AlexanderTanJunAn"},"content":"            odate \u003d parser.parse(o.getDatetime());","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"AlexanderTanJunAn"},"content":"            e.getMessage();","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"AlexanderTanJunAn"},"content":"            return 1;","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return date.compareTo(odate);","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * Formats String date into dd/MM/YYYY.","lastModifiedDate":"2021-03-20"},{"lineNumber":42,"author":{"gitId":"AlexanderTanJunAn"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String formatDate(String datetime) throws ParseException {","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"AlexanderTanJunAn"},"content":"        SimpleDateFormat parser \u003d new SimpleDateFormat(\"ddMMyyyy\");","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"AlexanderTanJunAn"},"content":"        Date date \u003d parser.parse(datetime);","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"AlexanderTanJunAn"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyy\");","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return formatter.format(date);","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getNurseID() {","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return nurseID;","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getPatientID() {","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return patientID;","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getDatetime() {","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return datetime;","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String getFormattedDatetime() {","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String date \u003d null;","lastModifiedDate":"2021-03-11"},{"lineNumber":65,"author":{"gitId":"AlexanderTanJunAn"},"content":"        try {","lastModifiedDate":"2021-03-11"},{"lineNumber":66,"author":{"gitId":"AlexanderTanJunAn"},"content":"            date \u003d formatDate(datetime);","lastModifiedDate":"2021-03-11"},{"lineNumber":67,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-03-11"},{"lineNumber":68,"author":{"gitId":"AlexanderTanJunAn"},"content":"            e.getMessage();","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":70,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return date;","lastModifiedDate":"2021-03-11"},{"lineNumber":71,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":72,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":73,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String toSave() {","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return getNurseID() + \"|\" + getPatientID() + \"|\" + getDatetime();","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":77,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String toFind() {","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"AlexanderTanJunAn"},"content":"        //return getFormattedDatetime() + \" \" + patientID;","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return prettyPrint(patientID, 10) + \" | \" + prettyPrint(getFormattedDatetime(), 10);","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":82,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public String toString() {","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return nurseID + \" \" + patientID + \" \" + getFormattedDatetime();","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":85,"author":{"gitId":"AlexanderTanJunAn"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"Chiamjiaen":1,"AlexanderTanJunAn":84}},{"path":"src/main/java/seedu/model/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.model;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import java.util.Locale;","lastModifiedDate":"2021-04-04"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"public class Patient {","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"    protected String patientID;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"    protected String name;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"    protected int age;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"    protected String gender;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"    protected String illness;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"    protected String medicationNeeded;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"    protected String[] patientDetails;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"    public Patient(String patientID, String name, int age, String gender, String illness, String drugsNeeded) {","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"        this.patientID \u003d patientID;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"        this.age \u003d age;","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"        this.illness \u003d illness;","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"        this.medicationNeeded \u003d drugsNeeded;","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"        this.patientDetails \u003d new String[] {patientID, name, String.valueOf(age), gender, illness, medicationNeeded};","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"    public String[] getPatientDetailsArray() {","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"        return (patientDetails) ;","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"    public String getPatientDetailsString() {","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"        return(patientID + \" | \" + name + \" | \" + age + \" | \" + gender + \" | \" + illness + \" | \" + medicationNeeded);","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"    public String getPatientID() {","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"        return this.patientID;","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"    public String getPatientName() {","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"        return this.name;","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":"        return (patientID + \" | \" + name + \" | \" + age + \" | \" +","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":"                gender + \" | \" + illness + \" | \" + medicationNeeded);","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"Chiamjiaen":44}},{"path":"src/main/java/seedu/model/staff/Doctor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.model.staff;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class Doctor extends Staff {","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"    public Doctor(String[] array) {","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"        super(array);","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"Chiamjiaen":1,"blank-bank":8}},{"path":"src/main/java/seedu/model/staff/Nurse.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.model.staff;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class Nurse extends Staff {","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"    public Nurse(String[] array) {","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"        super(array);","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"Chiamjiaen":1,"blank-bank":8}},{"path":"src/main/java/seedu/model/staff/Staff.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.model.staff;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class Staff {","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"    protected String staffID;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"    protected String name;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"    protected int age;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"    protected String specialisation;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"    public Staff(String[] array) {","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"        this.staffID \u003d array[0];","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"        this.name \u003d array[1];","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"        this.age \u003d Integer.parseInt(array[2]);","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"        this.specialisation \u003d array[3];","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"    public String getName() {","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"        if (this.name \u003d\u003d null) {","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"            return \"-\";","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"        return this.name;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"    public int getAge() {","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"        return this.age;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"    public String getSpecialisation() {","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"        if (this.specialisation \u003d\u003d null) {","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":"            return \"-\";","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"        return this.specialisation;","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"    public String getId() {","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"        if (this.staffID \u003d\u003d null) {","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"            return \"-\";","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"        return this.staffID;","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"    public String getType() {","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"        return this.staffID.substring(0, 1);","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"    public String formWriteData() {","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"        return (this.staffID + \"|\" + this.name + \"|\"","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"                + this.age + \"|\" + this.specialisation + \"\\n\");","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"Chiamjiaen":1,"AlexanderTanJunAn":5,"blank-bank":45}},{"path":"src/main/java/seedu/storage/DoctorAppointmentStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.storage;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"MingShun98"},"content":"import seedu.duke.Constants;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.CorruptedFileException;","lastModifiedDate":"2021-04-02"},{"lineNumber":5,"author":{"gitId":"MingShun98"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.command.AppointmentActions;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":"import seedu.logic.errorchecker.DoctorAppointmentChecker;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.model.DoctorAppointment;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"MingShun98"},"content":"import seedu.model.staff.Staff;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"MingShun98"},"content":"import java.io.File;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"MingShun98"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"MingShun98"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"MingShun98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"MingShun98"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"MingShun98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"MingShun98"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"MingShun98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"MingShun98"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"MingShun98"},"content":"public class DoctorAppointmentStorage {","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"MingShun98"},"content":"    private static String staticFilePath \u003d Constants.APPOINTMENT_FILE_PATH;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"MingShun98"},"content":"    private final String filePath;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"MingShun98"},"content":"    private final File file;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"MingShun98"},"content":"    private final static String STAFF_FILE_PATH \u003d Constants.STAFF_FILE_PATH;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"MingShun98"},"content":"    public DoctorAppointmentStorage(String filePath) {","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"MingShun98"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"MingShun98"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"MingShun98"},"content":"    public void createFile() throws IOException {","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"MingShun98"},"content":"        Path pathToFile \u003d Paths.get(filePath);","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"MingShun98"},"content":"        Files.createDirectories(pathToFile.getParent());","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"MingShun98"},"content":"        file.createNewFile();","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"MingShun98"},"content":"    public AppointmentActions loadFile() throws FileNotFoundException, HealthVaultException {","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"MingShun98"},"content":"        ArrayList\u003cDoctorAppointment\u003e loadAppointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"MingShun98"},"content":"        ArrayList\u003cString\u003e checkStorage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"MingShun98"},"content":"        File fileName \u003d new File(filePath);","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"MingShun98"},"content":"        Scanner fileReader \u003d new Scanner(fileName);","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"MingShun98"},"content":"        while (fileReader.hasNextLine()) {","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"MingShun98"},"content":"            try {","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"MingShun98"},"content":"                String input \u003d fileReader.nextLine();","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"Chiamjiaen"},"content":"                if (input.equals(\"\")) {","lastModifiedDate":"2021-04-03"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"                    throw new CorruptedFileException(Constants.APPOINTMENT_FILE_PATH);","lastModifiedDate":"2021-04-02"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"                }","lastModifiedDate":"2021-04-02"},{"lineNumber":50,"author":{"gitId":"MingShun98"},"content":"                String[] data \u003d input.split(\"\\\\s\\\\|\\\\s\", 5);","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"MingShun98"},"content":"                DoctorAppointmentChecker.checkDataFromStorage(input, checkStorage);","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"MingShun98"},"content":"                checkStorage.add(data[1]);","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"MingShun98"},"content":"                loadAppointments.add(new DoctorAppointment(data[0], data[1], data[2], data[3], data[4]));","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"MingShun98"},"content":"            }catch (Exception e){","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"MingShun98"},"content":"                throw new CorruptedFileException(Constants.APPOINTMENT_FILE_PATH);","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"MingShun98"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"MingShun98"},"content":"        fileReader.close();","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"MingShun98"},"content":"        return new AppointmentActions(loadAppointments);","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"MingShun98"},"content":"    public static void writeToFile(ArrayList\u003cDoctorAppointment\u003e taskList) throws IOException {","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"MingShun98"},"content":"        FileWriter fileWriter \u003d new FileWriter(staticFilePath, false);","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"MingShun98"},"content":"        fileWriter.write(\"\");","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"MingShun98"},"content":"        for (DoctorAppointment task : taskList) {","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"MingShun98"},"content":"            fileWriter.write(task.saveTask() + \"\\n\");","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"MingShun98"},"content":"        fileWriter.close();","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"MingShun98"},"content":"    public static ArrayList\u003cStaff\u003e loadDoctorFile() throws FileNotFoundException {","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"MingShun98"},"content":"        ArrayList\u003cStaff\u003e loadDoctorList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"MingShun98"},"content":"        File fileName \u003d new File(STAFF_FILE_PATH);","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"MingShun98"},"content":"        Scanner fileReader \u003d new Scanner(fileName);","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"MingShun98"},"content":"        while (fileReader.hasNextLine()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"MingShun98"},"content":"            String input \u003d fileReader.nextLine();","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"MingShun98"},"content":"            String[] data \u003d input.split(\"\\\\|\");","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"MingShun98"},"content":"            loadDoctorList.add(new Staff(data));","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"MingShun98"},"content":"        fileReader.close();","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"MingShun98"},"content":"        return loadDoctorList;","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"MingShun98"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"MingShun98":79,"Chiamjiaen":2,"blank-bank":5}},{"path":"src/main/java/seedu/storage/InventoryStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NoorSarrah"},"content":"package seedu.storage;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":"import seedu.logic.command.InventoryActions;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"NoorSarrah"},"content":"import seedu.logic.errorchecker.InventoryChecker;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"NoorSarrah"},"content":"import seedu.model.Inventory;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"NoorSarrah"},"content":"import seedu.ui.InventoryUI;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"NoorSarrah"},"content":"import java.io.File;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"NoorSarrah"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"NoorSarrah"},"content":"public class InventoryStorage {","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"NoorSarrah"},"content":"    protected File saveFile;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"NoorSarrah"},"content":"    protected String filePath;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"NoorSarrah"},"content":"    protected ArrayList\u003cInventory\u003e inventories \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"NoorSarrah"},"content":"    protected InventoryUI ui;","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"NoorSarrah"},"content":"    protected InventoryChecker checker;","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"NoorSarrah"},"content":"    public InventoryStorage(String filePath) {","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"NoorSarrah"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"NoorSarrah"},"content":"        saveFile \u003d new File(filePath);","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"NoorSarrah"},"content":"    public void fileInit() {","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"NoorSarrah"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"NoorSarrah"},"content":"            //makes file directory if it doesnt exist in the system.","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"NoorSarrah"},"content":"            if (!(saveFile.exists())) {","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"NoorSarrah"},"content":"                saveFile.getParentFile().mkdirs();","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"NoorSarrah"},"content":"                saveFile.createNewFile();","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"NoorSarrah"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"NoorSarrah"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"NoorSarrah"},"content":"            System.out.println(\"OOPS! I can\u0027t create the directory or file!\");","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"NoorSarrah"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"NoorSarrah"},"content":"   /* public ArrayList\u003cInventory\u003e createNewFile() {","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"NoorSarrah"},"content":"        File drugsFile \u003d new File(getFilepath());","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"NoorSarrah"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"NoorSarrah"},"content":"            if (drugsFile.createNewFile()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"NoorSarrah"},"content":"                System.out.println(\"\\tTo save your task locally,\\n\" +","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"NoorSarrah"},"content":"                        \"\\tA new file has been created at:\\n\\t\" +","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"NoorSarrah"},"content":"                        drugsFile.getAbsolutePath() + \"\\n\");","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"NoorSarrah"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"NoorSarrah"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"NoorSarrah"},"content":"            System.out.println(\"\\tThere was an I/O error:\\nBye!\\n\");","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"NoorSarrah"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"NoorSarrah"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"NoorSarrah"},"content":"        return inventories;","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"NoorSarrah"},"content":"    public String getFilepath() {","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"NoorSarrah"},"content":"        return this.filepath;","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"NoorSarrah"},"content":"    }*/","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"    public ArrayList\u003cInventory\u003e loadInventory() throws HealthVaultException {","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"NoorSarrah"},"content":"        fileInit();","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"NoorSarrah"},"content":"        Scanner fileScanner \u003d null;","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"NoorSarrah"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"NoorSarrah"},"content":"            // initializing file scanner to scan the file","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"NoorSarrah"},"content":"            fileScanner \u003d new Scanner(saveFile);","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"NoorSarrah"},"content":"            while (fileScanner.hasNext()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"NoorSarrah"},"content":"                String currentScan \u003d fileScanner.nextLine();","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"NoorSarrah"},"content":"                //splits the string into sections for storing in the ArrayList","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"NoorSarrah"},"content":"                String[] taskSave \u003d currentScan.trim().split(\"\\\\|\");","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"NoorSarrah"},"content":"                int numberOfTokens \u003d taskSave.length;","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"NoorSarrah"},"content":"                if (taskSave.length !\u003d 3) {","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"blank-bank"},"content":"                    throw new HealthVaultException(\"loadFile\");","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"NoorSarrah"},"content":"                }","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"blank-bank"},"content":"                checker \u003d new InventoryChecker(inventories, taskSave, numberOfTokens);","lastModifiedDate":"2021-04-02"},{"lineNumber":74,"author":{"gitId":"NoorSarrah"},"content":"                checker.checkStorage();","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"NoorSarrah"},"content":"                Inventory tempInventory \u003d new Inventory(taskSave[0], Double.parseDouble(taskSave[1]), Integer.parseInt(taskSave[2]));","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"NoorSarrah"},"content":"                inventories.add(tempInventory);","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"NoorSarrah"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"NoorSarrah"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"NoorSarrah"},"content":"            throw new HealthVaultException(\"loadFile\");","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"NoorSarrah"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"NoorSarrah"},"content":"        fileScanner.close();","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"NoorSarrah"},"content":"        return inventories;","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"NoorSarrah"},"content":"    public void storeInventory(InventoryActions saveInput) {","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"NoorSarrah"},"content":"        fileInit();","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"NoorSarrah"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"NoorSarrah"},"content":"            //creates a new file writer to write to text file","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"NoorSarrah"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"NoorSarrah"},"content":"            for (int i \u003d 0; i \u003c saveInput.getSize(); i++) {","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"NoorSarrah"},"content":"                fileWriter.write(saveInput.toSaveFile(i) + \"\\n\");","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"NoorSarrah"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"NoorSarrah"},"content":"            fileWriter.close();","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"NoorSarrah"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"NoorSarrah"},"content":"            System.out.println(\"☹ OOPS!!! The file can\u0027t be saved :-(\");","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"NoorSarrah"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"NoorSarrah"},"content":"   /* public ArrayList\u003cInventory\u003e uploadDrugs() throws FileNotFoundException {","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"NoorSarrah"},"content":"        File f \u003d new File(getFilepath());","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"NoorSarrah"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"NoorSarrah"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"NoorSarrah"},"content":"            String[] part \u003d s.nextLine().split(\" | \");","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"NoorSarrah"},"content":"            Drugs.add(new Inventory(part[0], Double.parseDouble(part[1]), part[2]));","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"NoorSarrah"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"NoorSarrah"},"content":"        return Drugs;","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"NoorSarrah"},"content":"    }*/","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"NoorSarrah"},"content":"   /* public void saveDrugs() throws IOException {","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"NoorSarrah"},"content":"        FileWriter fw \u003d new FileWriter(getFilepath());","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"NoorSarrah"},"content":"        for (Inventory Inventory : inventories) {","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"NoorSarrah"},"content":"            fw.write(Inventory.stringToSave());","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"NoorSarrah"},"content":"            fw.write(System.lineSeparator());","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"NoorSarrah"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"NoorSarrah"},"content":"        fw.close();","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"NoorSarrah"},"content":"    }*/","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"NoorSarrah"},"content":"    /*public void exitProgram() {","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"Returning to start menu!\");","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"NoorSarrah"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"NoorSarrah"},"content":"            saveDrugs();","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"NoorSarrah"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"NoorSarrah"},"content":"            System.out.println(\"No file was saved due to an I/O error.\\n\");","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"NoorSarrah"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"NoorSarrah"},"content":"    }*/","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"NoorSarrah"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"NoorSarrah":123,"blank-bank":4}},{"path":"src/main/java/seedu/storage/NurseScheduleStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.storage;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.InvalidDateException;","lastModifiedDate":"2021-04-03"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.nurseschedules.*;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.logic.command.NurseScheduleActions;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.logic.errorchecker.NurseScheduleChecker;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.model.NurseSchedule;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.model.Patient;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.ui.NurseScheduleUI;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.io.*;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":"import static seedu.duke.Constants.*;","lastModifiedDate":"2021-04-02"},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class NurseScheduleStorage {","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private static final String FILE_PATH \u003d SCHEDULES_FILE_PATH;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":"    static ArrayList\u003cNurseSchedule\u003e nurseSchedules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"AlexanderTanJunAn"},"content":"     * Creates new file.","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"AlexanderTanJunAn"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private static void createFile() {","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":"        try {","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"AlexanderTanJunAn"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"AlexanderTanJunAn"},"content":"            file.createNewFile();","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (IOException | NullPointerException e) {","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"AlexanderTanJunAn"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"AlexanderTanJunAn"},"content":"    private static ArrayList\u003cNurseSchedule\u003e readFile() throws NurseIdNotFound, InvalidIDTypeException,","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"AlexanderTanJunAn"},"content":"            FileNotFoundException, NurseCrossValidationError, PatientIdNotFound, PatientCrossValidationError, InvalidDateException {","lastModifiedDate":"2021-04-03"},{"lineNumber":37,"author":{"gitId":"AlexanderTanJunAn"},"content":"        FileInputStream file \u003d new FileInputStream(FILE_PATH);","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"AlexanderTanJunAn"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"AlexanderTanJunAn"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"AlexanderTanJunAn"},"content":"            String[] details \u003d sc.nextLine().split(\"\\\\|\", 0);","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"AlexanderTanJunAn"},"content":"            NurseScheduleChecker.checkNurseIDExist(details[0]);","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"AlexanderTanJunAn"},"content":"            NurseScheduleChecker.checkPatientDExist(details[1]);","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"AlexanderTanJunAn"},"content":"            NurseScheduleChecker.checkValidNurseID(details[0]);","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"AlexanderTanJunAn"},"content":"            NurseScheduleChecker.checkValidPatientID(details[1]);","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"AlexanderTanJunAn"},"content":"            NurseScheduleChecker.isValidDate(details[2]);","lastModifiedDate":"2021-04-03"},{"lineNumber":47,"author":{"gitId":"AlexanderTanJunAn"},"content":"            nurseSchedules.add(new NurseSchedule(details[0], details[1], details[2]));","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return nurseSchedules;","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void writeToFile(NurseScheduleActions nurseSchedules) {","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"AlexanderTanJunAn"},"content":"        try {","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"AlexanderTanJunAn"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2021-03-20"},{"lineNumber":55,"author":{"gitId":"AlexanderTanJunAn"},"content":"            FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"AlexanderTanJunAn"},"content":"            for (int i \u003d 0; i\u003cnurseSchedules.getSize(); i++) {","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"AlexanderTanJunAn"},"content":"                writer.write(nurseSchedules.toSaveFile(i));","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"AlexanderTanJunAn"},"content":"                writer.write(\"\\r\\n\");","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"AlexanderTanJunAn"},"content":"            writer.close();","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"AlexanderTanJunAn"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":65,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":66,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public static ArrayList\u003cNurseSchedule\u003e load() throws FileNotFoundException, InvalidIDTypeException, NurseIdNotFound, NurseCrossValidationError, PatientIdNotFound, PatientCrossValidationError, InvalidDateException {","lastModifiedDate":"2021-04-03"},{"lineNumber":67,"author":{"gitId":"AlexanderTanJunAn"},"content":"        createFile();","lastModifiedDate":"2021-03-11"},{"lineNumber":68,"author":{"gitId":"AlexanderTanJunAn"},"content":"        nurseSchedules \u003d readFile();","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return nurseSchedules;","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":71,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public FileHandler initLogger() {","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"AlexanderTanJunAn"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"AlexanderTanJunAn"},"content":"            FileHandler fileHandler \u003d new FileHandler(SCHEDULES_LOGS_FILE_PATH);","lastModifiedDate":"2021-04-02"},{"lineNumber":75,"author":{"gitId":"AlexanderTanJunAn"},"content":"            return fileHandler;","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"AlexanderTanJunAn"},"content":"            System.out.println(\"Error with logging file!\");","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return null;","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":82,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public static ArrayList\u003cPatient\u003e loadPatientFile() throws FileNotFoundException {","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"AlexanderTanJunAn"},"content":"        ArrayList\u003cPatient\u003e patientList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":85,"author":{"gitId":"AlexanderTanJunAn"},"content":"        File fileName \u003d new File(PATIENT_FILE_PATH);","lastModifiedDate":"2021-04-01"},{"lineNumber":86,"author":{"gitId":"AlexanderTanJunAn"},"content":"        Scanner fileReader \u003d new Scanner(fileName);","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"AlexanderTanJunAn"},"content":"        while (fileReader.hasNextLine()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"AlexanderTanJunAn"},"content":"            String input \u003d fileReader.nextLine();","lastModifiedDate":"2021-04-01"},{"lineNumber":90,"author":{"gitId":"AlexanderTanJunAn"},"content":"            String[] data \u003d input.trim().split(\"\\\\|\");","lastModifiedDate":"2021-04-01"},{"lineNumber":91,"author":{"gitId":"AlexanderTanJunAn"},"content":"            int numberOfTokens \u003d data.length;","lastModifiedDate":"2021-04-01"},{"lineNumber":92,"author":{"gitId":"AlexanderTanJunAn"},"content":"            ArrayList\u003cString\u003e cleanString \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-01"},{"lineNumber":93,"author":{"gitId":"AlexanderTanJunAn"},"content":"            for (int i \u003d 0; i \u003c numberOfTokens; i++) {","lastModifiedDate":"2021-04-01"},{"lineNumber":94,"author":{"gitId":"AlexanderTanJunAn"},"content":"                cleanString.add(NurseScheduleUI.cleanseInput(data[i]).trim());","lastModifiedDate":"2021-04-01"},{"lineNumber":95,"author":{"gitId":"AlexanderTanJunAn"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":96,"author":{"gitId":"AlexanderTanJunAn"},"content":"            Patient tempPatient \u003d new Patient(data[0].trim(), data[1].trim(),","lastModifiedDate":"2021-04-01"},{"lineNumber":97,"author":{"gitId":"AlexanderTanJunAn"},"content":"                    Integer.parseInt(data[2].trim()), data[3], data[4], data[5]);","lastModifiedDate":"2021-04-01"},{"lineNumber":98,"author":{"gitId":"AlexanderTanJunAn"},"content":"            patientList.add(tempPatient);","lastModifiedDate":"2021-04-01"},{"lineNumber":99,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":100,"author":{"gitId":"AlexanderTanJunAn"},"content":"        fileReader.close();","lastModifiedDate":"2021-04-01"},{"lineNumber":101,"author":{"gitId":"AlexanderTanJunAn"},"content":"        return patientList;","lastModifiedDate":"2021-04-01"},{"lineNumber":102,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":103,"author":{"gitId":"AlexanderTanJunAn"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"Chiamjiaen":1,"AlexanderTanJunAn":101,"blank-bank":1}},{"path":"src/main/java/seedu/storage/PatientStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.storage;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.exceptions.*;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.errorchecker.PatientChecker;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.model.Patient;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.PatientActions;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.ui.PatientUI;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"import java.io.File;","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"public class PatientStorage {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"    static File saveFile;","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"    static ArrayList\u003cPatient\u003e patients;","lastModifiedDate":"2021-04-03"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"    static String filePath;","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"    static PatientUI ui;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"    static PatientChecker checker;","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"    public PatientStorage(String filepath) {","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"        filePath \u003d filepath;","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"        saveFile \u003d new File(filepath);","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"        ui \u003d new PatientUI();","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"        patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-03"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"     * Instantiates a storage handler by taking in the filepath","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"     * @param filePath the filepath where the file will be created","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"Chiamjiaen"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"Chiamjiaen"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"Chiamjiaen"},"content":"     * Checks if the file exists and initializes one if there is not.","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":"    public void fileInit() {","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":"        try {","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":"            //makes file directory if it doesnt exist in the system.","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":"            if (!(saveFile.exists())) {","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"Chiamjiaen"},"content":"                saveFile.getParentFile().mkdirs();","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"Chiamjiaen"},"content":"                saveFile.createNewFile();","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"Chiamjiaen"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"OOPS! I can\u0027t create the directory or file!\");","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"Chiamjiaen"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"Chiamjiaen"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"Chiamjiaen"},"content":"     * Loads the saved list of patients from save location","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"Chiamjiaen"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"Chiamjiaen"},"content":"     * @return Populated patients arraylist","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":"     * @throws HealthVaultException if there is an error in loading","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"Chiamjiaen"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"    public ArrayList\u003cPatient\u003e loadPatients() throws HealthVaultException {","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"Chiamjiaen"},"content":"        fileInit();","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"Chiamjiaen"},"content":"        // initializing file scanner to scan the file","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"Chiamjiaen"},"content":"        Scanner fileScanner \u003d null;","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"Chiamjiaen"},"content":"        try {","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"Chiamjiaen"},"content":"            fileScanner \u003d new Scanner(saveFile);","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"Chiamjiaen"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"Chiamjiaen"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"Chiamjiaen"},"content":"        while (fileScanner.hasNext()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":68,"author":{"gitId":"Chiamjiaen"},"content":"            String currentScan \u003d fileScanner.nextLine();","lastModifiedDate":"2021-03-11"},{"lineNumber":69,"author":{"gitId":"Chiamjiaen"},"content":"            //splits the string into sections for storing in the ArrayList","lastModifiedDate":"2021-03-11"},{"lineNumber":70,"author":{"gitId":"Chiamjiaen"},"content":"            String[] taskSave \u003d currentScan.trim().split(\" \\\\| \");","lastModifiedDate":"2021-03-11"},{"lineNumber":71,"author":{"gitId":"Chiamjiaen"},"content":"            int numberOfTokens \u003d taskSave.length;","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"Chiamjiaen"},"content":"            if (numberOfTokens \u003d\u003d 0) {","lastModifiedDate":"2021-04-03"},{"lineNumber":73,"author":{"gitId":"Chiamjiaen"},"content":"                throw new CorruptedFileException(\"Patient\");","lastModifiedDate":"2021-04-03"},{"lineNumber":74,"author":{"gitId":"Chiamjiaen"},"content":"            }","lastModifiedDate":"2021-04-03"},{"lineNumber":75,"author":{"gitId":"Chiamjiaen"},"content":"            /*ArrayList\u003cString\u003e cleanString \u003d new ArrayList\u003c\u003e();*/","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"Chiamjiaen"},"content":"            for (int i \u003d 0; i \u003c numberOfTokens; i++) {","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"Chiamjiaen"},"content":"                taskSave[i] \u003d taskSave[i].trim().replaceAll(\"\\\\s{2,}\", \" \");","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"Chiamjiaen"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":79,"author":{"gitId":"Chiamjiaen"},"content":"            checker \u003d new PatientChecker(patients, taskSave, numberOfTokens);","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"Chiamjiaen"},"content":"            checker.checkStorage();","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"Chiamjiaen"},"content":"            Patient tempPatient \u003d new Patient(taskSave[0], taskSave[1], Integer.parseInt(taskSave[2]),","lastModifiedDate":"2021-03-11"},{"lineNumber":82,"author":{"gitId":"Chiamjiaen"},"content":"                    taskSave[3], taskSave[4], taskSave[5]);","lastModifiedDate":"2021-03-11"},{"lineNumber":83,"author":{"gitId":"Chiamjiaen"},"content":"            patients.add(tempPatient);","lastModifiedDate":"2021-03-11"},{"lineNumber":84,"author":{"gitId":"Chiamjiaen"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"Chiamjiaen"},"content":"        fileScanner.close();","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"Chiamjiaen"},"content":"        return patients;","lastModifiedDate":"2021-03-11"},{"lineNumber":87,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":88,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":89,"author":{"gitId":"Chiamjiaen"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":90,"author":{"gitId":"Chiamjiaen"},"content":"     * Saves all tasks to text file","lastModifiedDate":"2021-03-11"},{"lineNumber":91,"author":{"gitId":"Chiamjiaen"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":92,"author":{"gitId":"Chiamjiaen"},"content":"     * @param saveInput current files to be stored","lastModifiedDate":"2021-03-11"},{"lineNumber":93,"author":{"gitId":"Chiamjiaen"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":94,"author":{"gitId":"Chiamjiaen"},"content":"    public void storePatients(PatientActions saveInput) {","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"Chiamjiaen"},"content":"        fileInit();","lastModifiedDate":"2021-03-11"},{"lineNumber":96,"author":{"gitId":"Chiamjiaen"},"content":"        try {","lastModifiedDate":"2021-03-11"},{"lineNumber":97,"author":{"gitId":"Chiamjiaen"},"content":"            //creates a new file writer to write to text file","lastModifiedDate":"2021-03-11"},{"lineNumber":98,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"Chiamjiaen"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2021-03-11"},{"lineNumber":100,"author":{"gitId":"Chiamjiaen"},"content":"            for (int i \u003d 0; i \u003c saveInput.getSize(); i++) {","lastModifiedDate":"2021-03-11"},{"lineNumber":101,"author":{"gitId":"Chiamjiaen"},"content":"                fileWriter.write(saveInput.toSaveFile(i) + \"\\n\");","lastModifiedDate":"2021-03-11"},{"lineNumber":102,"author":{"gitId":"Chiamjiaen"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":103,"author":{"gitId":"Chiamjiaen"},"content":"            fileWriter.flush();","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"Chiamjiaen"},"content":"            fileWriter.close();","lastModifiedDate":"2021-03-11"},{"lineNumber":105,"author":{"gitId":"Chiamjiaen"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2021-03-11"},{"lineNumber":106,"author":{"gitId":"Chiamjiaen"},"content":"            System.out.println(\"☹ OOPS!!! The file can\u0027t be saved :-(\");","lastModifiedDate":"2021-03-11"},{"lineNumber":107,"author":{"gitId":"Chiamjiaen"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":108,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":109,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"Chiamjiaen":104,"blank-bank":5}},{"path":"src/main/java/seedu/storage/StaffStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.storage;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.*;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.patient.IllegalCharacterException;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.staff.WrongStaffIdException;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.command.StaffAggregation;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.errorchecker.StaffChecker;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"import java.io.File;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"public class StaffStorage {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"    static File saveFile;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"    static String filePath;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"    private StaffChecker staffChecker \u003d new StaffChecker();","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"    public StaffStorage(String filepath) {","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"        filePath \u003d filepath;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"        saveFile \u003d new File(filepath);","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"    public void fileHandling(StaffAggregation staffAggregation) throws","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"            ExcessInputException, InvalidIntegerException, WrongStaffIdException,","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"            InsufficientInputException, NoInputException, DuplicateIDException, IllegalCharacterException {","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":"        try {","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"            loadFile(staffAggregation);","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"            createFile();","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"    public void loadTask(StaffAggregation staffAggregation, String line) throws","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"            ExcessInputException, InvalidIntegerException, WrongStaffIdException,","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"            InsufficientInputException, NoInputException, DuplicateIDException, IllegalCharacterException {","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"        staffChecker.checkValidDataFromStorage(line, staffAggregation.getList());","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"        String[] arr \u003d staffChecker.invalidCharactersStaffCheckerForStorage(line);","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"        staffAggregation.add(arr);","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"    public void loadFile(StaffAggregation staffAggregation) throws FileNotFoundException,","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"            ExcessInputException, InvalidIntegerException, WrongStaffIdException,","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"            InsufficientInputException, NoInputException, DuplicateIDException, IllegalCharacterException {","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"        File f \u003d new File(filePath);           // create a File for the given file path","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"        Scanner s \u003d new Scanner(f);            // create a Scanner using the File as the source","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"            loadTask(staffAggregation, s.nextLine());","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":"    public void writeToFile(StaffAggregation staffAggregation) throws IOException {","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":"        createFile();","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"blank-bank"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"        for (int i \u003d 0; i \u003c StaffAggregation.getNumStaff(); i++) {","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":"            fw.write(staffAggregation.getList().get(i).formWriteData());","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":"        fw.close();","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"blank-bank"},"content":"    public static void createFile() {","lastModifiedDate":"2021-03-11"},{"lineNumber":65,"author":{"gitId":"blank-bank"},"content":"        try {","lastModifiedDate":"2021-03-11"},{"lineNumber":66,"author":{"gitId":"blank-bank"},"content":"            File myObj \u003d new File(filePath);","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"blank-bank"},"content":"            saveFile.getParentFile().mkdirs();","lastModifiedDate":"2021-04-02"},{"lineNumber":68,"author":{"gitId":"blank-bank"},"content":"            if (myObj.createNewFile()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":69,"author":{"gitId":"blank-bank"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":70,"author":{"gitId":"blank-bank"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-11"},{"lineNumber":71,"author":{"gitId":"blank-bank"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2021-03-11"},{"lineNumber":72,"author":{"gitId":"blank-bank"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-03-11"},{"lineNumber":73,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":74,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":75,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":76,"author":{"gitId":"blank-bank"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"blank-bank":76}},{"path":"src/main/java/seedu/ui/DoctorAppointmentUI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.ui;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"MingShun98"},"content":"import seedu.model.DoctorAppointment;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"MingShun98"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":"import static seedu.duke.Constants.*;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"MingShun98"},"content":"import static seedu.duke.Constants.MARK_BLANK;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"MingShun98"},"content":"public class DoctorAppointmentUI extends UI {","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"    public static void doctorAppointmentsWelcome() {","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Welcome to the Appointments\u0027 Menu!\");","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"    public static void doctorAppointmentHelp() {","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"MingShun98"},"content":"        System.out.println(\"Here is a list of Doctor Appointments Commands: \");","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"MingShun98"},"content":"        int[] lengthPara \u003d {10, 70, 50};","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"MingShun98"},"content":"        printer(new String[]{HELP_HEADER_COMMAND, HELP_HEADER_DESCRIPTION, HELP_HEADER_FORMAT}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"MingShun98"},"content":"        UI.showLongLine();","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"MingShun98"},"content":"        printer(new String[]{HELP_COMMAND, APPOINTMENTS_HELP_DESCRIPTION, MARK_BLANK}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"MingShun98"},"content":"        printer(new String[]{ADD_COMMAND, APPOINTMENTS_ADD_DESCRIPTION, APPOINTMENTS_ADD_FORMAT}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"MingShun98"},"content":"        printer(new String[]{LIST_COMMAND, APPOINTMENTS_LIST_DESCRIPTION, APPOINTMENTS_LIST_FORMAT}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"MingShun98"},"content":"        printer(new String[]{DELETE_COMMAND, APPOINTMENTS_DELETE_DESCRIPTION, APPOINTMENTS_DELETE_FORMAT}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"MingShun98"},"content":"        printer(new String[]{RETURN_COMMAND, RETURN_DESCRIPTION, MARK_BLANK}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"MingShun98"},"content":"        UI.printEmptyLine();","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"MingShun98"},"content":"    public void printAppointmentMenuPrompt() {","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"MingShun98"},"content":"        System.out.println(\"Type \u0027help\u0027 for appointment menu commands\\n\");","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"MingShun98"},"content":"    public static void invalidCommandPrompt() {","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"MingShun98"},"content":"        System.out.println(\"Sorry, I don\u0027t know what that means :(\");","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"MingShun98"},"content":"        UI.showLine();","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"MingShun98"},"content":"    public static void printAddedAppointment() {","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"MingShun98"},"content":"        System.out.println(\"Appointment Added\");","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"MingShun98"},"content":"    public static void deletedDocID(String DocID, String AptID) {","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"MingShun98"},"content":"        System.out.println(\"DoctorID / Appointment ID: \" + DocID + \"/\" + AptID + \" has been deleted!\");","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"MingShun98"},"content":"    public static void deletedAptID(String AptID) {","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"MingShun98"},"content":"        System.out.println(\"Appointment ID: \" + AptID + \" has been deleted!\");","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"MingShun98"},"content":"    public static void printList(DoctorAppointment doc, String indicator) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"MingShun98"},"content":"        if (indicator.equals(\"D\")) {","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"MingShun98"},"content":"           // System.out.print(doc.getDoctorId());","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"MingShun98"},"content":"           //printEmptyCell(doc.getDoctorId());","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"MingShun98"},"content":"        printEmptyCell(doc.getAppointmentId());","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"MingShun98"},"content":"        printEmptyCell(doc.getPatientsName());","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"MingShun98"},"content":"        printEmptyCell(doc.getGender());","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"MingShun98"},"content":"        System.out.print(doc.getDateFormat(doc.getDate()));","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"MingShun98"},"content":"        System.out.print(\"\\n\");","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"MingShun98"},"content":"    public static void AptPrintList(String indicator) {","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"MingShun98"},"content":"        if (indicator.equals(\"D\")) {","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"MingShun98"},"content":"            System.out.println(","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"MingShun98"},"content":"                    UI.prettyPrint(\"Doctor ID\", 14) + \" | \" + UI.prettyPrint(\"Appointment ID\", 14) + \" | \" + UI.prettyPrint(\"Name\", 14) + \" | \"","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"MingShun98"},"content":"                            + UI.prettyPrint(\"Gender\", 14) + \" | \" + UI.prettyPrint(\"Date\", 14));","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"MingShun98"},"content":"        } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"MingShun98"},"content":"            System.out.println(","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"MingShun98"},"content":"                    UI.prettyPrint(\"Appointment ID\", 14) + \" | \" + UI.prettyPrint(\"Name\", 14) + \" | \"","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"MingShun98"},"content":"                            + UI.prettyPrint(\"Gender\", 14) + \" | \" + UI.prettyPrint(\"Date\", 14));","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"MingShun98"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"MingShun98"},"content":"    public static void printEmptyCell(String s) {","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"MingShun98"},"content":"        System.out.print(UI.prettyPrint(s, 14) + \" | \");","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"MingShun98"},"content":"    public static void corruptedFileErrorMessage() {","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"MingShun98"},"content":"        System.out.println(\"File (data/DoctorAppointment.txt) is corrupted. Please delete the file before running the Doctor Appointment Menu.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"MingShun98"},"content":"    public static void printNewLine() {","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"MingShun98"},"content":"        System.out.print(\"\\n\");","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":85,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":86,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"blank-bank"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"MingShun98":78,"blank-bank":9}},{"path":"src/main/java/seedu/ui/InventoryUI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NoorSarrah"},"content":"package seedu.ui;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"NoorSarrah"},"content":"import static seedu.duke.Constants.*;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"NoorSarrah"},"content":"public class InventoryUI extends UI{","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"NoorSarrah"},"content":"    public static void drugAddedMessage(String name) {","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(name + \" is added into Inventory!\");","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"NoorSarrah"},"content":"    public static void emptyInventoryListMessage() {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"You do not have any Drugs in your inventory:(\");","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"NoorSarrah"},"content":"    public static void inventoryListHeader() {","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"NoorSarrah"},"content":"                UI.prettyPrint(\"DrugName\", 15) + \" | \" + UI.prettyPrint(\"Price\", 10) + \" | \"","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"NoorSarrah"},"content":"                        + UI.prettyPrint(\"Quantity\", 5)) ;","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"NoorSarrah"},"content":"    public static void printInventoryHelpMessage() {","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"NoorSarrah"},"content":"        UI.printEmptyLine();","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"Here is a list of Inventory commands: \");","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"NoorSarrah"},"content":"        UI.printEmptyLine();","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"NoorSarrah"},"content":"        int[] lengthPara \u003d {10,60,50};","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"NoorSarrah"},"content":"        printer(new String[]{HELP_HEADER_COMMAND, HELP_HEADER_DESCRIPTION, HELP_HEADER_FORMAT}, lengthPara);","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"NoorSarrah"},"content":"        UI.showLongLine();","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"NoorSarrah"},"content":"        printer(new String[]{HELP_COMMAND, INVENTORY_HELP_DESCRIPTION, MARK_BLANK}, lengthPara);","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"NoorSarrah"},"content":"        printer(new String[]{ADD_COMMAND, INVENTORY_ADD_DESCRIPTION, INVENTORY_ADD_FORMAT}, lengthPara);","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"NoorSarrah"},"content":"        printer(new String[]{LIST_COMMAND, INVENTORY_LIST_DESCRIPTION, INVENTORY_LIST_FORMAT}, lengthPara);","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"NoorSarrah"},"content":"        printer(new String[]{DELETE_COMMAND, INVENTORY_DELETE_DESCRIPTION, INVENTORY_DELETE_FORMAT}, lengthPara);","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"NoorSarrah"},"content":"        printer(new String[]{RETURN_COMMAND, RETURN_DESCRIPTION, MARK_BLANK}, lengthPara);","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"NoorSarrah"},"content":"        UI.printEmptyLine();","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"NoorSarrah"},"content":"    public static void deleteDrugMessage(String deletedDrug) {","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"Noted. I\u0027ve removed this drug: \" + deletedDrug);","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"NoorSarrah"},"content":"    public static void inventoryMenuHeader() {","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"NoorSarrah"},"content":"        System.out.print(\"Welcome to Inventory Menu!\\nType \\\"help\\\" for Inventory menu commands\\n\");","lastModifiedDate":"2021-04-03"},{"lineNumber":43,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"NoorSarrah"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"NoorSarrah"},"content":"    public void corruptedFileErrorMessage() {","lastModifiedDate":"2021-04-03"},{"lineNumber":46,"author":{"gitId":"NoorSarrah"},"content":"        System.out.println(\"The file (\" + INVENTORY_FILE_PATH + \") is corrupted!\\n\" +","lastModifiedDate":"2021-04-03"},{"lineNumber":47,"author":{"gitId":"NoorSarrah"},"content":"                \"Please exit the program and delete the corrupted file before trying to access Inventory Menu!\");","lastModifiedDate":"2021-04-03"},{"lineNumber":48,"author":{"gitId":"NoorSarrah"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"NoorSarrah"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"NoorSarrah":49}},{"path":"src/main/java/seedu/ui/NurseScheduleUI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.ui;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.parser.NurseSchedulesParser;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"import static seedu.duke.Constants.*;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"public class NurseScheduleUI extends UI {","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void printNurseScheduleWelcomeMessage() {","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"        showLine();","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"        System.out.println(\"Welcome to Nurse Schedules!\");","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":"        System.out.println(\"Type \\\"help\\\" to for nurse schedules commands\");","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"        lineBreak();","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void printNurseScheduleHelpList() {","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":"        System.out.println(\"Here is a list of Nurse Schedule commands: \");","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":"        int[] lengthPara \u003d {10,65,50};","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"Chiamjiaen"},"content":"        printer(new String[]{HELP_HEADER_COMMAND, HELP_HEADER_DESCRIPTION, HELP_HEADER_FORMAT}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"        UI.showLongLine();","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"        printer(new String[]{HELP_COMMAND, SCHEDULES_HELP_DESCRIPTION, MARK_BLANK}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"        printer(new String[]{ADD_COMMAND, SCHEDULES_ADD_DESCRIPTION, SCHEDULES_ADD_FORMAT}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"        printer(new String[]{LIST_COMMAND, SCHEDULES_LIST_DESCRIPTION, SCHEDULES_LIST_FORMAT}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"        printer(new String[]{DELETE_COMMAND, SCHEDULES_DELETE_DESCRIPTION, SCHEDULES_DELETE_FORMAT}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"        printer(new String[]{RETURN_COMMAND, RETURN_DESCRIPTION, MARK_BLANK}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"AlexanderTanJunAn"},"content":"        UI.printEmptyLine();","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public static void printDeletedSchedule(String id, String datetime) {","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"AlexanderTanJunAn"},"content":"        System.out.println(\"Trip to \" + id","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"AlexanderTanJunAn"},"content":"                + \" on \" + datetime + \" has been cancelled!\");","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public static void printAddedSchedule(String id, String datetime) throws ParseException {","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"AlexanderTanJunAn"},"content":"        System.out.println(\"Trip to \" + id + \" on \" + NurseSchedulesParser.formatDate(datetime) + \" added!\");","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":41,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void invalidInputsMessage() {","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"AlexanderTanJunAn"},"content":"        showLine();","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"AlexanderTanJunAn"},"content":"        System.out.println(\"Invalid inputs!\");","lastModifiedDate":"2021-03-20"},{"lineNumber":44,"author":{"gitId":"AlexanderTanJunAn"},"content":"        System.out.println(\"Type \\\"help\\\" to for nurse schedules commands\");","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":46,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":47,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void addHelpMessage() {","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"AlexanderTanJunAn"},"content":"        System.out.println(\"Please input with the following format: add/[NurseID]/[Patient ID]/[Date (DDMMYYYY)]\");","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":50,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":51,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void listHelpMessage() {","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"AlexanderTanJunAn"},"content":"        System.out.println(\"Please input with the following format: list/[NurseID/all]\");","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":54,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":55,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void deleteHelpMessage() {","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"AlexanderTanJunAn"},"content":"        System.out.println(\"Please input with the following format: delete/[NurseID]/[Date (DDMMYYYY)]\");","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":58,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void formatHelpMessage() {","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"AlexanderTanJunAn"},"content":"        lineBreak();","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"AlexanderTanJunAn"},"content":"        System.out.println(\"OOPS! Please check to see if your command is properly formatted!\");","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public static void nurseListHeader() {","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"AlexanderTanJunAn"},"content":"        System.out.println(","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"AlexanderTanJunAn"},"content":"                UI.prettyPrint(\"Nurse ID\", 10) + \" | \" + UI.prettyPrint(\"Patient ID\", 10) + \" | \"","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"AlexanderTanJunAn"},"content":"                        + UI.prettyPrint(\"Date\", 10));","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public static void printEmptyCell() {","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"AlexanderTanJunAn"},"content":"        System.out.print(UI.prettyPrint(\" \", 10) + \" | \");","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void corruptedFileErrorMessage() {","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"AlexanderTanJunAn"},"content":"        System.out.println(\"File (data/NurseSchedule.txt) is corrupted. Please delete the file before running the Staff Menu.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public static void corruptedStaffFile() {","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"AlexanderTanJunAn"},"content":"        System.out.println(\"Staff file is not loaded, Nurse ID cannot be validated.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"AlexanderTanJunAn"},"content":"}","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"Chiamjiaen":6,"AlexanderTanJunAn":73,"blank-bank":2}},{"path":"src/main/java/seedu/ui/PatientUI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.ui;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import static seedu.duke.Constants.*;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"Chiamjiaen"},"content":"public class PatientUI extends UI{","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"    public static void printPatientHelpList() {","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"        UI.printEmptyLine();","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Here is a list of Patient commands: \");","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"        UI.printEmptyLine();","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"        int[] lengthPara \u003d {10,60,70};","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"        printer(new String[]{HELP_HEADER_COMMAND, HELP_HEADER_DESCRIPTION, HELP_HEADER_FORMAT}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(HELPLINEBREAK);","lastModifiedDate":"2021-04-04"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"        printer(new String[]{HELP_COMMAND, PATIENT_HELP_DESCRIPTION, MARK_BLANK}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"        printer(new String[]{ADD_COMMAND, PATIENT_ADD_DESCRIPTION, PATIENT_ADD_FORMAT}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"        printer(new String[]{LIST_COMMAND, PATIENT_LIST_DESCRIPTION, MARK_BLANK}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"Chiamjiaen"},"content":"        printer(new String[]{DELETE_COMMAND, PATIENT_DELETE_DESCRIPTION, PATIENT_DELETE_FORMAT}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"Chiamjiaen"},"content":"        printer(new String[]{FIND_COMMAND, PATIENT_FIND_DESCRIPTION, PATIENT_FIND_FORMAT}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"        printer(new String[]{RETURN_COMMAND, RETURN_DESCRIPTION, MARK_BLANK}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"        UI.printEmptyLine();","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"    public static void patientListHeader() {","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"                UI.prettyPrint(\"ID\", 8) + \" | \" +","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"                        UI.prettyPrint(\"Name\", 20) + \" | \" +","lastModifiedDate":"2021-04-04"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"                        UI.prettyPrint(\"Age\", 6) + \" | \" +","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"                        UI.prettyPrint(\"Gender\", 8) + \" | \" +","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"                        UI.prettyPrint(\"Illness\", 20) + \" | \" +","lastModifiedDate":"2021-04-04"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"                        UI.prettyPrint(\"Medication Required\", 20));","lastModifiedDate":"2021-04-04"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(LISTLINEBREAK);","lastModifiedDate":"2021-04-04"},{"lineNumber":33,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"    public static void patientAddedMessage(String name) {","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"        System.out.println(name + \" is now a patient here!\");","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"Chiamjiaen"},"content":"    public static void printPatientList(String[] patientDetails) {","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"Chiamjiaen"},"content":"                UI.prettyPrint(patientDetails[0], 8) + \" | \" +","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"Chiamjiaen"},"content":"                        UI.prettyPrint(patientDetails[1], 20) + \" | \" +","lastModifiedDate":"2021-04-04"},{"lineNumber":43,"author":{"gitId":"Chiamjiaen"},"content":"                        UI.prettyPrint(patientDetails[2], 6) + \" | \" +","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"Chiamjiaen"},"content":"                        UI.prettyPrint(patientDetails[3], 8) + \" | \" +","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"Chiamjiaen"},"content":"                        UI.prettyPrint(patientDetails[4], 20) + \" | \" +","lastModifiedDate":"2021-04-04"},{"lineNumber":46,"author":{"gitId":"Chiamjiaen"},"content":"                        UI.prettyPrint(patientDetails[5], 20));","lastModifiedDate":"2021-04-04"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"    public static void emptyPatientListMessage() {","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"OOPS! It seems like you have no patients in the list now!\");","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"    public static void notEmptyPatientListMessage() {","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Here are the patients currently in the list!\");","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"blank-bank"},"content":"    public static void deletePatientMessage(String deletedPatient, int inputInt) {","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Noted. I\u0027ve removed this patient: \\n\" + deletedPatient);","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Now you have \" + inputInt + \" patients in the list\");","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"blank-bank"},"content":"    public static void patientCommandWelcome() {","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Welcome to the patient Commands section!\");","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Type \\\"help\\\" for patient menu command\");","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"Chiamjiaen"},"content":"    public void corruptedFileErrorMessage() {","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"The file (\" + PATIENT_FILE_PATH + \") is corrupted!\\n\" +","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"Chiamjiaen"},"content":"                \"Please exit the program and delete the corrupted file before trying to access Patient Menu!\");","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"Chiamjiaen"},"content":"    public static void patientNotFoundMessage() {","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"There is no patient in the list that matches your keywords!\");","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"blank-bank"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"Chiamjiaen":47,"blank-bank":28}},{"path":"src/main/java/seedu/ui/StaffUI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.ui;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import static seedu.duke.Constants.*;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"public class StaffUI extends UI {","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"    public static void staffHiredOutput(String id, String name) {","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"        if (id.charAt(0) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"            try {","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\"Doctor \" + name + \" hired :)\");","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\"Unknown Doctor hired!\");","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"            }","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"        } else if (id.charAt(0) \u003d\u003d \u0027N\u0027) {","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"            try {","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\"Nurse \" + name + \" hired :)\");","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"                System.out.println(\"Unknown Doctor hired!\");","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"            }","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"    public static void staffFiredOutput(String line) {","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"        System.out.println(line.split(\"/\")[1] + \" has been fired :(\");","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"    public static void emptyListOutput() {","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"OOPS! It seems like you have no staff in the list now!\");","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"    public static void staffDoesNotExist(String line) {","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Staff with ID: \" + line.split(\"/\")[1] + \" does not exist\");","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"    public static void staffListHeader() {","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"        System.out.println(","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"                UI.prettyPrint(\"ID\", 10) + \" | \" + UI.prettyPrint(\"Name\", 10) + \" | \"","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"                        + UI.prettyPrint(\"Age\", 5) + \" | \" + UI.prettyPrint(\"Specialisation\", 20));","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"    public static void printStaffHelpMessage() {","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"        UI.printEmptyLine();","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Here is a list of Staff commands: \");","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"        UI.printEmptyLine();","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"Chiamjiaen"},"content":"        int[] lengthPara \u003d {10,60,50};","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"Chiamjiaen"},"content":"        printer(new String[]{HELP_HEADER_COMMAND, HELP_HEADER_DESCRIPTION, HELP_HEADER_FORMAT}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"        UI.showLongLine();","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"Chiamjiaen"},"content":"        printer(new String[]{HELP_COMMAND, STAFF_HELP_DESCRIPTION, MARK_BLANK}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"Chiamjiaen"},"content":"        printer(new String[]{ADD_COMMAND, STAFF_ADD_DESCRIPTION, STAFF_ADD_FORMAT}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"Chiamjiaen"},"content":"        printer(new String[]{LIST_COMMAND, STAFF_LIST_DESCRIPTION, STAFF_LIST_FORMAT}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"Chiamjiaen"},"content":"        printer(new String[]{DELETE_COMMAND, STAFF_DELETE_DESCRIPTION, STAFF_DELETE_FORMAT}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"Chiamjiaen"},"content":"        printer(new String[]{FIND_COMMAND, STAFF_FIND_DESCRIPTION, STAFF_FIND_FORMAT}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"Chiamjiaen"},"content":"        printer(new String[]{RETURN_COMMAND, RETURN_DESCRIPTION, MARK_BLANK}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"        UI.printEmptyLine();","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"blank-bank"},"content":"    public static void corruptedFileErrorMessage() {","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"File (data/Staff.txt) is corrupted. Please delete the file before running the Staff Menu.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"blank-bank"},"content":"    public static void invalidNumericErrorMessage() {","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"The numeric input is invalid!\");","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"blank-bank"},"content":"    public static void staffMenuPrompt() {","lastModifiedDate":"2021-03-22"},{"lineNumber":71,"author":{"gitId":"blank-bank"},"content":"        System.out.print(\"Staff --\u003e \");","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"blank-bank"},"content":"    public static void staffMenuHeader() {","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"blank-bank"},"content":"        UI.showLine();","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"blank-bank"},"content":"        System.out.print(\"Welcome to Staff Menu!\\nType \\\"help\\\" for staff menu commands\\n\\n\");","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"blank-bank"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"Chiamjiaen":8,"blank-bank":70}},{"path":"src/main/java/seedu/ui/UI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.ui;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import seedu.duke.Constants;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"import static java.lang.Math.abs;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"import static java.lang.Math.max;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"import static seedu.duke.Constants.*;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"public class UI {","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"    static final int LARGE_NUMBER \u003d 100;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"    static final String UNKNOWN_COMMAND \u003d \"unknown\";","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"Chiamjiaen"},"content":"    static Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"Chiamjiaen"},"content":"    public static String scanInput() {","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Chiamjiaen"},"content":"    public String getInput(String requestMenu) {","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"MingShun98"},"content":"        System.out.print(requestMenu + \" --\u003e \");","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"Chiamjiaen"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"Chiamjiaen"},"content":"        while (input.trim().isEmpty()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"MingShun98"},"content":"            System.out.print(requestMenu + \" --\u003e \");","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"Chiamjiaen"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"Chiamjiaen"},"content":"        return input.replaceAll(\"\\\\s+\", \" \").trim();","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"    public static String smartCommandRecognition(String[] commands, String input) {","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"        int diff \u003d LARGE_NUMBER;","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"        int index \u003d -1;","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"        List\u003cString\u003e list \u003d Arrays.asList(commands);","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"        if( list.contains(input)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"            return input;","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"        if (input.length() \u003e\u003d 8 || input.length() \u003c 1) {","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"            return UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"        for (int i \u003d 0; i \u003c commands.length; i++) {","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"            int temp \u003d checkCommandDifference(commands[i], input);","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"            if (temp \u003c diff) {","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"                diff \u003d temp;","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"                index \u003d i;","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"            }","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"        if (isTypo(commands[index])) {","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"            return commands[index];","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":"        return UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"    public static boolean contains(char[] array, char input) {","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":"        for (char c : array) {","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":"            if (input \u003d\u003d c) {","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":"                return true;","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"blank-bank"},"content":"            }","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"blank-bank"},"content":"        return false;","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"blank-bank"},"content":"    public static int checkCommandDifference(String expected, String actual) {","lastModifiedDate":"2021-03-22"},{"lineNumber":68,"author":{"gitId":"blank-bank"},"content":"        char[] first \u003d expected.toLowerCase().toCharArray();","lastModifiedDate":"2021-03-22"},{"lineNumber":69,"author":{"gitId":"blank-bank"},"content":"        char[] second \u003d actual.toLowerCase().toCharArray();","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"blank-bank"},"content":"        Arrays.sort(first);","lastModifiedDate":"2021-03-22"},{"lineNumber":71,"author":{"gitId":"blank-bank"},"content":"        Arrays.sort(second);","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"blank-bank"},"content":"        int numDiff \u003d 0;","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"blank-bank"},"content":"        int lengthDiff \u003d abs(first.length -second.length);","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"blank-bank"},"content":"        if (lengthDiff \u003e 2) {","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"blank-bank"},"content":"            return LARGE_NUMBER;","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"blank-bank"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"blank-bank"},"content":"        if (second.length \u003e\u003d first.length) {","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"blank-bank"},"content":"            while (i \u003c first.length) {","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"blank-bank"},"content":"                if (!contains(first, second[i])) {","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"blank-bank"},"content":"                    numDiff++;","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"blank-bank"},"content":"                }","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"blank-bank"},"content":"                i++;","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"blank-bank"},"content":"            }","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"blank-bank"},"content":"        } else {","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"blank-bank"},"content":"            while (i \u003c second.length - 1) {","lastModifiedDate":"2021-03-22"},{"lineNumber":87,"author":{"gitId":"blank-bank"},"content":"                if (first[i] !\u003d (second[i]) \u0026\u0026 lengthDiff \u003e 0) {","lastModifiedDate":"2021-03-22"},{"lineNumber":88,"author":{"gitId":"blank-bank"},"content":"                    i++; numDiff++;","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"blank-bank"},"content":"                    lengthDiff--;","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"blank-bank"},"content":"                    continue;","lastModifiedDate":"2021-03-22"},{"lineNumber":91,"author":{"gitId":"blank-bank"},"content":"                } else if (first[i] !\u003d second[i]) {","lastModifiedDate":"2021-03-22"},{"lineNumber":92,"author":{"gitId":"blank-bank"},"content":"                    numDiff++;","lastModifiedDate":"2021-03-22"},{"lineNumber":93,"author":{"gitId":"blank-bank"},"content":"                }","lastModifiedDate":"2021-03-22"},{"lineNumber":94,"author":{"gitId":"blank-bank"},"content":"                i++;","lastModifiedDate":"2021-03-22"},{"lineNumber":95,"author":{"gitId":"blank-bank"},"content":"            }","lastModifiedDate":"2021-03-22"},{"lineNumber":96,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":97,"author":{"gitId":"blank-bank"},"content":"        return max(lengthDiff, numDiff);","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":99,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":100,"author":{"gitId":"blank-bank"},"content":"    public static String cleanseInput(String input) {","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"blank-bank"},"content":"        return  input.replaceAll(\"[^a-zA-Z0-9\\\\s]\", \"\");","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"blank-bank"},"content":"    public static void invalidCommandErrorMessage() {","lastModifiedDate":"2021-03-22"},{"lineNumber":105,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"OOPS! I cant recognize that command! \");","lastModifiedDate":"2021-03-11"},{"lineNumber":106,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":107,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":108,"author":{"gitId":"blank-bank"},"content":"    public static void noCommandErrorMessage() {","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"OOPS! There is no command entered! \");","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":112,"author":{"gitId":"blank-bank"},"content":"    public static void invalidFormatErrorMessage() {","lastModifiedDate":"2021-03-22"},{"lineNumber":113,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"OOPS! Please check to see if your command is properly formatted! \");","lastModifiedDate":"2021-03-11"},{"lineNumber":114,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":115,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":116,"author":{"gitId":"blank-bank"},"content":"    public static void showLine() {","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"blank-bank"},"content":"        System.out.println(Constants.LINEBREAK);","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"blank-bank"},"content":"    public static void showLongLine() {","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(Constants.LISTLINEBREAK);","lastModifiedDate":"2021-04-04"},{"lineNumber":121,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":122,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":123,"author":{"gitId":"blank-bank"},"content":"    public static void printEmptyLine() {","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"blank-bank"},"content":"        System.out.print(\"\\n\");","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"Chiamjiaen"},"content":"    public static void printWelcome() {","lastModifiedDate":"2021-03-11"},{"lineNumber":128,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Welcome to \\n\" + Constants.LOGO);","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"Chiamjiaen"},"content":"        showLine();","lastModifiedDate":"2021-03-18"},{"lineNumber":130,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":131,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":132,"author":{"gitId":"Chiamjiaen"},"content":"    public static void printStartMenu() {","lastModifiedDate":"2021-03-11"},{"lineNumber":133,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"blank-bank"},"content":"        UI.printEmptyLine();","lastModifiedDate":"2021-03-31"},{"lineNumber":135,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":136,"author":{"gitId":"blank-bank"},"content":"        UI.printEmptyLine();","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"blank-bank"},"content":"        int[] lengthPara \u003d {15,40,10};","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"blank-bank"},"content":"        printer(new String[]{HELP_HEADER_COMMAND, HELP_HEADER_DESCRIPTION, HELP_HEADER_FORMAT}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"blank-bank"},"content":"        UI.showLongLine();","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"blank-bank"},"content":"        printer(new String[]{TO_STAFF_INSTANCE, TO_STAFF_INSTANCE_DESCRIPTION, MARK_BLANK}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"blank-bank"},"content":"        printer(new String[]{TO_PATIENT_INSTANCE, TO_PATIENT_INSTANCE_DESCRIPTION, MARK_BLANK}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"blank-bank"},"content":"        printer(new String[]{TO_APPOINTMENTS_INSTANCE, TO_APPOINTMENTS_INSTANCE_DESCRIPTION, MARK_BLANK}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"blank-bank"},"content":"        printer(new String[]{TO_SCHEDULES_INSTANCE, TO_SCHEDULES_INSTANCE_DESCRIPTION, MARK_BLANK}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":144,"author":{"gitId":"blank-bank"},"content":"        printer(new String[]{TO_INVENTORY_INSTANCE, TO_INVENTORY_INSTANCE_DESCRIPTION, MARK_BLANK}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":145,"author":{"gitId":"blank-bank"},"content":"        printer(new String[]{HELP_COMMAND, HELP_COMMAND_DESCRIPTION, MARK_BLANK}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":146,"author":{"gitId":"blank-bank"},"content":"        printer(new String[]{EXIT_COMMAND, EXIT_COMMAND_DESCRIPTION, MARK_BLANK}, lengthPara);","lastModifiedDate":"2021-03-31"},{"lineNumber":147,"author":{"gitId":"blank-bank"},"content":"        UI.printEmptyLine();","lastModifiedDate":"2021-03-31"},{"lineNumber":148,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":149,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":150,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":151,"author":{"gitId":"blank-bank"},"content":"    public static void printGoodbye() {","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Goodbye! Have a nice day!\");","lastModifiedDate":"2021-03-11"},{"lineNumber":153,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":154,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":155,"author":{"gitId":"Chiamjiaen"},"content":"    public static void returningToStartMenuMessage() {","lastModifiedDate":"2021-03-18"},{"lineNumber":156,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"Returning to start menu!\");","lastModifiedDate":"2021-03-18"},{"lineNumber":157,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":158,"author":{"gitId":"blank-bank"},"content":"    public static void unidentifiedErrorMessage() {","lastModifiedDate":"2021-04-02"},{"lineNumber":159,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Something went wrong!\\n\");","lastModifiedDate":"2021-04-02"},{"lineNumber":160,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":161,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":162,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":163,"author":{"gitId":"Chiamjiaen"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-03-11"},{"lineNumber":164,"author":{"gitId":"Chiamjiaen"},"content":"        System.out.println(\"OOPS! There was an error loading the file!\");","lastModifiedDate":"2021-03-11"},{"lineNumber":165,"author":{"gitId":"Chiamjiaen"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":166,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"blank-bank"},"content":"    public static String prettyPrint(String string, int length) {","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"blank-bank"},"content":"        return String.format(\"%1$-\" + length + \"s\", string);","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":170,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":171,"author":{"gitId":"blank-bank"},"content":"    public static void printer(String[] string, int[] length) {","lastModifiedDate":"2021-03-30"},{"lineNumber":172,"author":{"gitId":"blank-bank"},"content":"        for (int i\u003d0; i\u003clength.length; i++) {","lastModifiedDate":"2021-03-30"},{"lineNumber":173,"author":{"gitId":"blank-bank"},"content":"            System.out.print(prettyPrint(string[i], length[i]));","lastModifiedDate":"2021-03-30"},{"lineNumber":174,"author":{"gitId":"blank-bank"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":175,"author":{"gitId":"blank-bank"},"content":"        System.out.print(\"\\n\");","lastModifiedDate":"2021-03-30"},{"lineNumber":176,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":177,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":178,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":179,"author":{"gitId":"blank-bank"},"content":"    public static boolean isTypo(String command) {","lastModifiedDate":"2021-03-22"},{"lineNumber":180,"author":{"gitId":"blank-bank"},"content":"        System.out.println(\"Do you mean \\\"\" + command +\"\\\" (y/n)\");","lastModifiedDate":"2021-03-22"},{"lineNumber":181,"author":{"gitId":"blank-bank"},"content":"        return scanInput().equals(\"y\");","lastModifiedDate":"2021-03-22"},{"lineNumber":182,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":183,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":184,"author":{"gitId":"AlexanderTanJunAn"},"content":"    public void lineBreak() {","lastModifiedDate":"2021-03-29"},{"lineNumber":185,"author":{"gitId":"AlexanderTanJunAn"},"content":"        System.out.print(System.lineSeparator());","lastModifiedDate":"2021-03-29"},{"lineNumber":186,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":187,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":188,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"MingShun98":3,"Chiamjiaen":48,"AlexanderTanJunAn":6,"blank-bank":131}},{"path":"src/test/java/seedu/doctorappointments/DoctorAppointmentCheckerParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MingShun98"},"content":"package seedu.doctorappointments;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"MingShun98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.command.AppointmentActions;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"MingShun98"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"MingShun98"},"content":"import seedu.logic.errorchecker.DoctorAppointmentChecker;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"MingShun98"},"content":"import seedu.logic.parser.DoctorAppointmentParser;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"MingShun98"},"content":"import seedu.ui.DoctorAppointmentUI;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"MingShun98"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"public class DoctorAppointmentCheckerParserTest {","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"MingShun98"},"content":"    private DoctorAppointmentParser parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"MingShun98"},"content":"    private AppointmentActions actions;","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"MingShun98"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"MingShun98"},"content":"    public void ValidGender(){","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"MingShun98"},"content":"        boolean output \u003d DoctorAppointmentChecker.isValidGender(\"M\");","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"MingShun98"},"content":"        assertTrue(output);","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"MingShun98"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"MingShun98"},"content":"    public void ValidDate() {","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"MingShun98"},"content":"        boolean output \u003d DoctorAppointmentChecker.isValidDate(\"21012021\");","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"MingShun98"},"content":"        assertTrue(output);","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"MingShun98"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"MingShun98"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"MingShun98"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"MingShun98":26,"blank-bank":2}},{"path":"src/test/java/seedu/nurseschedules/NurseScheduleActionsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package seedu.nurseschedules;","lastModifiedDate":"2021-04-02"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-02"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.nurseschedules.InvalidIDTypeException;","lastModifiedDate":"2021-04-02"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.logic.command.NurseScheduleActions;","lastModifiedDate":"2021-04-02"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.model.NurseSchedule;","lastModifiedDate":"2021-04-02"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-02"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-04-02"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"class NurseScheduleActionsTest {","lastModifiedDate":"2021-04-02"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":"    NurseScheduleActions actions \u003d new NurseScheduleActions();","lastModifiedDate":"2021-04-02"},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"    //ArrayList\u003cNurseSchedule\u003e nurseSchedules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-02"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":"    void testAddInvalidInput() {","lastModifiedDate":"2021-04-02"},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String[] details \u003d {\"N123456\", \"P12345\", \"30012020\"};","lastModifiedDate":"2021-04-02"},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":"        assertThrows(InvalidIDTypeException.class,","lastModifiedDate":"2021-04-02"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":"                () -\u003e actions.addSchedule(details));","lastModifiedDate":"2021-04-02"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"}","lastModifiedDate":"2021-04-02"}],"authorContributionMap":{"AlexanderTanJunAn":23}},{"path":"src/test/java/seedu/nurseschedules/NurseScheduleCheckerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package seedu.nurseschedules;","lastModifiedDate":"2021-04-02"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-02"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.InvalidDateException;","lastModifiedDate":"2021-04-02"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.NoInputException;","lastModifiedDate":"2021-04-02"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.nurseschedules.InvalidIDTypeException;","lastModifiedDate":"2021-04-02"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.logic.errorchecker.NurseScheduleChecker;","lastModifiedDate":"2021-04-02"},{"lineNumber":8,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-04-02"},{"lineNumber":10,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":"class NurseScheduleCheckerTest {","lastModifiedDate":"2021-04-02"},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"    NurseScheduleChecker checker \u003d new NurseScheduleChecker();","lastModifiedDate":"2021-04-02"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":"    void testValidDate() {","lastModifiedDate":"2021-04-03"},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String datetime \u003d \"30012020\";","lastModifiedDate":"2021-04-02"},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":"        assertDoesNotThrow(() -\u003e checker.isValidDate(datetime));","lastModifiedDate":"2021-04-03"},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":"    void testInvalidDate() {","lastModifiedDate":"2021-04-02"},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String datetime \u003d \"091283109823092830\";","lastModifiedDate":"2021-04-02"},{"lineNumber":24,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String message \u003d \"The date format is invalid!\";","lastModifiedDate":"2021-04-02"},{"lineNumber":25,"author":{"gitId":"AlexanderTanJunAn"},"content":"        try {","lastModifiedDate":"2021-04-02"},{"lineNumber":26,"author":{"gitId":"AlexanderTanJunAn"},"content":"            checker.isValidDate(datetime);","lastModifiedDate":"2021-04-03"},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":"            fail();","lastModifiedDate":"2021-04-02"},{"lineNumber":28,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-04-02"},{"lineNumber":29,"author":{"gitId":"AlexanderTanJunAn"},"content":"            assertEquals(message, e.getMessage());","lastModifiedDate":"2021-04-02"},{"lineNumber":30,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":31,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":32,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":33,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":34,"author":{"gitId":"AlexanderTanJunAn"},"content":"    void testCheckNonEmptyInput() {","lastModifiedDate":"2021-04-02"},{"lineNumber":35,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String input \u003d \"add/test/input\";","lastModifiedDate":"2021-04-02"},{"lineNumber":36,"author":{"gitId":"AlexanderTanJunAn"},"content":"        assertDoesNotThrow(() -\u003e NurseScheduleChecker.checkEmptyInput(input));","lastModifiedDate":"2021-04-02"},{"lineNumber":37,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":38,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":39,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":40,"author":{"gitId":"AlexanderTanJunAn"},"content":"    void testCheckEmptyInput() {","lastModifiedDate":"2021-04-02"},{"lineNumber":41,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String input \u003d \"\";","lastModifiedDate":"2021-04-02"},{"lineNumber":42,"author":{"gitId":"AlexanderTanJunAn"},"content":"        assertThrows(NoInputException.class,","lastModifiedDate":"2021-04-02"},{"lineNumber":43,"author":{"gitId":"AlexanderTanJunAn"},"content":"                () -\u003eNurseScheduleChecker.checkEmptyInput(input));","lastModifiedDate":"2021-04-02"},{"lineNumber":44,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":45,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":46,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":47,"author":{"gitId":"AlexanderTanJunAn"},"content":"    void testValidNurseID() {","lastModifiedDate":"2021-04-02"},{"lineNumber":48,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String userID \u003d \"N12345\";","lastModifiedDate":"2021-04-02"},{"lineNumber":49,"author":{"gitId":"AlexanderTanJunAn"},"content":"        assertDoesNotThrow(() -\u003e NurseScheduleChecker.checkValidNurseID(userID));","lastModifiedDate":"2021-04-02"},{"lineNumber":50,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":51,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":52,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":53,"author":{"gitId":"AlexanderTanJunAn"},"content":"    void testInvalidNurseID_WrongLength() {","lastModifiedDate":"2021-04-02"},{"lineNumber":54,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String userID \u003d \"N123456789\";","lastModifiedDate":"2021-04-02"},{"lineNumber":55,"author":{"gitId":"AlexanderTanJunAn"},"content":"        assertThrows(InvalidIDTypeException.class,","lastModifiedDate":"2021-04-02"},{"lineNumber":56,"author":{"gitId":"AlexanderTanJunAn"},"content":"                () -\u003e NurseScheduleChecker.checkValidNurseID(userID));","lastModifiedDate":"2021-04-02"},{"lineNumber":57,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":58,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":59,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":60,"author":{"gitId":"AlexanderTanJunAn"},"content":"    void testInvalidNurseID_WrongIdentifier() {","lastModifiedDate":"2021-04-02"},{"lineNumber":61,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String userID \u003d \"A12345\";","lastModifiedDate":"2021-04-02"},{"lineNumber":62,"author":{"gitId":"AlexanderTanJunAn"},"content":"        assertThrows(InvalidIDTypeException.class,","lastModifiedDate":"2021-04-02"},{"lineNumber":63,"author":{"gitId":"AlexanderTanJunAn"},"content":"                () -\u003e NurseScheduleChecker.checkValidNurseID(userID));","lastModifiedDate":"2021-04-02"},{"lineNumber":64,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":65,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":66,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":67,"author":{"gitId":"AlexanderTanJunAn"},"content":"    void testInvalidNurseID_WrongData() {","lastModifiedDate":"2021-04-02"},{"lineNumber":68,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String userID \u003d \"NABCDE\";","lastModifiedDate":"2021-04-02"},{"lineNumber":69,"author":{"gitId":"AlexanderTanJunAn"},"content":"        assertThrows(InvalidIDTypeException.class,","lastModifiedDate":"2021-04-02"},{"lineNumber":70,"author":{"gitId":"AlexanderTanJunAn"},"content":"                () -\u003e NurseScheduleChecker.checkValidNurseID(userID));","lastModifiedDate":"2021-04-02"},{"lineNumber":71,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":72,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":73,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":74,"author":{"gitId":"AlexanderTanJunAn"},"content":"    void testInvalidPatientID_WrongLength() {","lastModifiedDate":"2021-04-02"},{"lineNumber":75,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String userID \u003d \"P123456789\";","lastModifiedDate":"2021-04-02"},{"lineNumber":76,"author":{"gitId":"AlexanderTanJunAn"},"content":"        assertThrows(InvalidIDTypeException.class,","lastModifiedDate":"2021-04-02"},{"lineNumber":77,"author":{"gitId":"AlexanderTanJunAn"},"content":"                () -\u003e NurseScheduleChecker.checkValidNurseID(userID));","lastModifiedDate":"2021-04-02"},{"lineNumber":78,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":79,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":80,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":81,"author":{"gitId":"AlexanderTanJunAn"},"content":"    void testInvalidPatientID_WrongIdentifier() {","lastModifiedDate":"2021-04-02"},{"lineNumber":82,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String userID \u003d \"A12345\";","lastModifiedDate":"2021-04-02"},{"lineNumber":83,"author":{"gitId":"AlexanderTanJunAn"},"content":"        assertThrows(InvalidIDTypeException.class,","lastModifiedDate":"2021-04-02"},{"lineNumber":84,"author":{"gitId":"AlexanderTanJunAn"},"content":"                () -\u003e NurseScheduleChecker.checkValidNurseID(userID));","lastModifiedDate":"2021-04-02"},{"lineNumber":85,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":86,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":87,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":88,"author":{"gitId":"AlexanderTanJunAn"},"content":"    void testInvalidPatientID_WrongData() {","lastModifiedDate":"2021-04-02"},{"lineNumber":89,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String userID \u003d \"PABCDE\";","lastModifiedDate":"2021-04-02"},{"lineNumber":90,"author":{"gitId":"AlexanderTanJunAn"},"content":"        assertThrows(InvalidIDTypeException.class,","lastModifiedDate":"2021-04-02"},{"lineNumber":91,"author":{"gitId":"AlexanderTanJunAn"},"content":"                () -\u003e NurseScheduleChecker.checkValidNurseID(userID));","lastModifiedDate":"2021-04-02"},{"lineNumber":92,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":93,"author":{"gitId":"AlexanderTanJunAn"},"content":"}","lastModifiedDate":"2021-04-02"}],"authorContributionMap":{"AlexanderTanJunAn":93}},{"path":"src/test/java/seedu/nurseschedules/NurseSchedulesParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AlexanderTanJunAn"},"content":"package seedu.nurseschedules;","lastModifiedDate":"2021-04-02"},{"lineNumber":2,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"AlexanderTanJunAn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.ExcessInputException;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.InsufficientInputException;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.InvalidDateException;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.NoInputException;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.nurseschedules.WrongInputsException;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"AlexanderTanJunAn"},"content":"import seedu.exceptions.patient.IllegalCharacterException;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.parser.NurseSchedulesParser;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"AlexanderTanJunAn"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"AlexanderTanJunAn"},"content":"class NurseSchedulesParserTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":"    void testGetFirstWord() {","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"AlexanderTanJunAn"},"content":"        NurseSchedulesParser parser \u003d new NurseSchedulesParser();","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":"        assertEquals(\"test\", parser.getFirstWord(\"test get first word\"));","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"AlexanderTanJunAn"},"content":"    void testGetDetails() throws WrongInputsException, NoInputException, InsufficientInputException, ExcessInputException, IllegalCharacterException, InvalidDateException {","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"AlexanderTanJunAn"},"content":"        NurseSchedulesParser parser \u003d new NurseSchedulesParser();","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String[] details;","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"AlexanderTanJunAn"},"content":"        details \u003d parser.getDetails(\"add test details padding\", \"add\");","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"AlexanderTanJunAn"},"content":"        assertEquals(\"test\", details[0]);","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"AlexanderTanJunAn"},"content":"    void testGetDetails_WrongInputs() {","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"AlexanderTanJunAn"},"content":"        NurseSchedulesParser parser \u003d new NurseSchedulesParser();","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String[] details;","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"AlexanderTanJunAn"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"AlexanderTanJunAn"},"content":"            details \u003d parser.getDetails(\"wrong\", \"wrong\");","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"AlexanderTanJunAn"},"content":"            assertEquals(\"wrong\", details[0]);","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"AlexanderTanJunAn"},"content":"            fail();","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"AlexanderTanJunAn"},"content":"            assertEquals(\"OOPS! Please check to see if your command is properly formatted!\", e.getMessage());","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"AlexanderTanJunAn"},"content":"    void testFormatDate() throws ParseException {","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"AlexanderTanJunAn"},"content":"        NurseSchedulesParser parser \u003d new NurseSchedulesParser();","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String input \u003d \"20032021\";","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"AlexanderTanJunAn"},"content":"        assertEquals(\"20/03/2021\", NurseSchedulesParser.formatDate(input));","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"AlexanderTanJunAn"},"content":"    void testFormatDate_WrongDate() {","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String input \u003d \"20003020210\";","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"AlexanderTanJunAn"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"AlexanderTanJunAn"},"content":"            String datetime \u003d NurseSchedulesParser.formatDate(input);","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"AlexanderTanJunAn"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"AlexanderTanJunAn"},"content":"            assertNull(e.getMessage());","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"AlexanderTanJunAn"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"AlexanderTanJunAn"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"AlexanderTanJunAn":59,"blank-bank":2}},{"path":"src/test/java/seedu/patient/PatientParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chiamjiaen"},"content":"package seedu.patient;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"Chiamjiaen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.HealthVaultException;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"Chiamjiaen"},"content":"import seedu.logic.command.PatientActions;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.parser.PatientParser;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"Chiamjiaen"},"content":"public class PatientParserTest {","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"Chiamjiaen"},"content":"    private PatientParser parser;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"Chiamjiaen"},"content":"    private PatientActions patients;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"    public void testReturnCommand() throws HealthVaultException {","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"        Command output \u003d parser.patientParse(\"return\", patients);","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"AlexanderTanJunAn"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"AlexanderTanJunAn"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"    public void testAddPatientNegative() throws HealthVaultException {","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String input \u003d \"add X12345 Johnny 30 M Covid19 Paracetamol\";","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"AlexanderTanJunAn"},"content":"        String expected \u003d \"OOPS! Looks like your ID type is incorrect! \\n\" +","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"AlexanderTanJunAn"},"content":"                \"Please ensure that the ID starts with \\\"P\\\"!\";","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"        Command output \u003d parser.patientParse(input, patients);","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"AlexanderTanJunAn"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"Chiamjiaen"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"Chiamjiaen"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"Chiamjiaen":12,"AlexanderTanJunAn":8,"blank-bank":7}},{"path":"src/test/java/seedu/staff/StaffCheckerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.staff;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"public class StaffCheckerTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"blank-bank":5}},{"path":"src/test/java/seedu/staff/StaffParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"blank-bank"},"content":"package seedu.staff;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"blank-bank"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.*;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.patient.IllegalCharacterException;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.staff.WrongListInputException;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"blank-bank"},"content":"import seedu.exceptions.staff.WrongStaffIdException;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.command.Command;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.command.StaffAggregation;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.command.staff.*;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"blank-bank"},"content":"import seedu.logic.parser.StaffParser;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"blank-bank"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"blank-bank"},"content":"public class StaffParserTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"blank-bank"},"content":"        private StaffParser parser;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"blank-bank"},"content":"        private StaffAggregation staffAggregation;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"blank-bank"},"content":"    public StaffParserTest() {","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"blank-bank"},"content":"        this.parser \u003d new StaffParser();","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"blank-bank"},"content":"        this.staffAggregation \u003d new StaffAggregation();","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"blank-bank"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"blank-bank"},"content":"    public void ValidAddCommand() throws ExcessInputException,","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"blank-bank"},"content":"            InvalidIntegerException, WrongStaffIdException, WrongListInputException,","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"blank-bank"},"content":"            InsufficientInputException, DuplicateIDException, NoInputException,","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"blank-bank"},"content":"            IllegalCharacterException {","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"blank-bank"},"content":"        Command c;","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"blank-bank"},"content":"        c \u003d this.parser.commandHandler(\"add/D12345/Owen/20/Surgeon\", staffAggregation);","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"blank-bank"},"content":"        assertTrue(c instanceof StaffAdd);","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"blank-bank"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"blank-bank"},"content":"    public void ValidHelpCommand() throws ExcessInputException, InvalidIntegerException,","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"blank-bank"},"content":"            WrongStaffIdException, WrongListInputException,","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"blank-bank"},"content":"            InsufficientInputException, DuplicateIDException, NoInputException, IllegalCharacterException {","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"blank-bank"},"content":"        Command c;","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"blank-bank"},"content":"        c \u003d this.parser.commandHandler(\"help\", staffAggregation);","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"blank-bank"},"content":"        assertTrue(c instanceof StaffHelp);","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"blank-bank"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"blank-bank"},"content":"    public void ValidListAllCommand() throws ExcessInputException, InvalidIntegerException,","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"blank-bank"},"content":"            WrongStaffIdException, WrongListInputException,","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"blank-bank"},"content":"            InsufficientInputException, DuplicateIDException, NoInputException, IllegalCharacterException {","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"blank-bank"},"content":"        Command c;","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"blank-bank"},"content":"        c \u003d this.parser.commandHandler(\"list\", staffAggregation);","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"blank-bank"},"content":"        assertTrue(c instanceof StaffList);","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"blank-bank"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"blank-bank"},"content":"    public void ValidListNurseCommand() throws ExcessInputException, InvalidIntegerException,","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"blank-bank"},"content":"            WrongStaffIdException, WrongListInputException,","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"blank-bank"},"content":"            InsufficientInputException, DuplicateIDException, NoInputException, IllegalCharacterException {","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"blank-bank"},"content":"        Command c;","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"blank-bank"},"content":"        c \u003d this.parser.commandHandler(\"list/nurses\", staffAggregation);","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"blank-bank"},"content":"        assertTrue(c instanceof StaffList);","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"blank-bank"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"blank-bank"},"content":"    public void ValidListDoctorCommand() throws ExcessInputException, InvalidIntegerException,","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"blank-bank"},"content":"            WrongStaffIdException, WrongListInputException,","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"blank-bank"},"content":"            InsufficientInputException, DuplicateIDException, NoInputException, IllegalCharacterException {","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"blank-bank"},"content":"        Command c;","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"blank-bank"},"content":"        c \u003d this.parser.commandHandler(\"list/doctors\", staffAggregation);","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"blank-bank"},"content":"        assertTrue(c instanceof StaffList);","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"blank-bank"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"blank-bank"},"content":"    public void ValidReturnCommand() throws ExcessInputException, InvalidIntegerException,","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"blank-bank"},"content":"            WrongStaffIdException, WrongListInputException,","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"blank-bank"},"content":"            InsufficientInputException, DuplicateIDException, NoInputException, IllegalCharacterException {","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"blank-bank"},"content":"        Command c;","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"blank-bank"},"content":"        c \u003d this.parser.commandHandler(\"return\", staffAggregation);","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"blank-bank"},"content":"        assertTrue(c instanceof StaffReturn);","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"blank-bank"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"blank-bank"},"content":"    public void ValidDeleteCommand() throws ExcessInputException, InvalidIntegerException,","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"blank-bank"},"content":"            WrongStaffIdException, WrongListInputException,","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"blank-bank"},"content":"            InsufficientInputException, DuplicateIDException, NoInputException, IllegalCharacterException {","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"blank-bank"},"content":"        Command c;","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"blank-bank"},"content":"        c \u003d this.parser.commandHandler(\"add/D12345/Owen/20/Surgeon\", staffAggregation);","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"blank-bank"},"content":"        c \u003d this.parser.commandHandler(\"delete/D12345\", staffAggregation);","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"blank-bank"},"content":"        assertTrue(c instanceof StaffDelete);","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"blank-bank"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"blank-bank"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"blank-bank"},"content":"    public void ValidFindCommand() throws ExcessInputException, InvalidIntegerException,","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"blank-bank"},"content":"            WrongStaffIdException, WrongListInputException,","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"blank-bank"},"content":"            InsufficientInputException, DuplicateIDException, NoInputException, IllegalCharacterException {","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"blank-bank"},"content":"        Command c;","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"blank-bank"},"content":"        c \u003d this.parser.commandHandler(\"find/D12345\", staffAggregation);","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"blank-bank"},"content":"        assertTrue(c instanceof StaffFind);","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"blank-bank"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"blank-bank"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"blank-bank":94}}]
