[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"sarzorwyn"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"sarzorwyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"sarzorwyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"sarzorwyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"sarzorwyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"sarzorwyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"sarzorwyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"sarzorwyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"sarzorwyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"sarzorwyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"sarzorwyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"sarzorwyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"sarzorwyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"hussain1998"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sarzorwyn":15,"hussain1998":1,"-":46}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | H Mohamed Hussain | [Github](https://github.com/hussain1998) | [Portfolio](docs/team/hussain.md)","lastModifiedDate":"2021-03-04"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jonathan K | [Github](https://github.com/JonathanKhooTY) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Wen Feng | [Github](https://github.com/limwenfeng/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ivan Tan | [Github](https://github.com/sarzorwyn) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-03-04"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Akil | [Github](https://github.com/iamakilahamed) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"JonathanKhooTY":1,"iamakilahamed":1,"-":7}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{Describe the design and implementation of the product. Use UML diagrams and short code snippets where applicable.}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"### Logic component","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"1. Logic uses the `Parser` class the user input obtained from the `TextUi` class.","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"2. This results in a specific `Command` object to be returned from the `Parser\u0027.   ","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"3. Depending on the type of the `Command` object, its corresponding command execution will be called.","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"4. The result of the command execution is encapsulated as a `CommandOutput` object which is passed back to the `TextUi`.","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"5. In addition, the `CommandOutput` object can also instruct the `TextUi` to perform certain actions, such as formatting the list to the user.","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for {to be inserted when doing sequence diagram}.","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"### UI component","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"limwenfeng"},"content":"The UI consists of `TextUi` class. It acts as a middleware between users\u0027 input ","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"limwenfeng"},"content":"and `Parser` class under **Logic Component**. ","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"limwenfeng"},"content":"The `ui` component,","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"limwenfeng"},"content":"* Reads user commands using `Scanner` class. ","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"limwenfeng"},"content":"* Pass raw user commands into `Parser` class under **Logic Component**.","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"limwenfeng"},"content":"* After the **Logic Component** has executed the function, it will then return `CommandOutput` object","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"limwenfeng"},"content":"which contains the outcome of the execution, fail or succeed. ","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"hussain1998"},"content":"### Model component","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"hussain1998"},"content":"**API** : [`seedu.duke.person`](https://github.com/AY2021S2-CS2113T-T09-1/tp/tree/master/src/main/java/seedu/duke/person) package","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"hussain1998"},"content":"The Model component,","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"hussain1998"},"content":"* contains a `TrackingList` class to keep track of all the `Person` objects.","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"hussain1998"},"content":"* contains a `Person` class which represents a person who checks in or out.","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"hussain1998"},"content":"A `Person` object contains:","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"hussain1998"},"content":"* an `Id` object","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"hussain1998"},"content":"* a `Name` object","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"hussain1998"},"content":"* a `Phone` object","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"sarzorwyn"},"content":"### Storage component","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"sarzorwyn"},"content":"**API** : [`seedu.duke.storage`](https://github.com/AY2021S2-CS2113T-T09-1/tp/tree/master/src/main/java/seedu/duke/storage) package","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"sarzorwyn"},"content":"The `Storage` component,","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"sarzorwyn"},"content":"* saves and encodes `Person` objects in `Tracking List` into a `.txt` file.","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"sarzorwyn"},"content":"* reads a `.txt` file of valid encoding and populates a `TrackingList`.","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"sarzorwyn"},"content":"* defaults to `TrackingList.txt` but can be saved at a custom specified location.","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"sarzorwyn"},"content":"* loads on program startup automatically saves after each command.","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"limwenfeng"},"content":"### Common classes","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"limwenfeng"},"content":"Classes used by multiple components are in the `seedu.Duke.commons` package. ","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"limwenfeng"},"content":"## Product scope [WIP]","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"JonathanKhooTY"},"content":"* User that requires more control over crowd level management in a building.","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"JonathanKhooTY"},"content":"* Can type fast","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"JonathanKhooTY"},"content":"* Prefers a simple desktop application over the more complicated systems","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"JonathanKhooTY"},"content":"* Is reasonably comfortable with CLI apps","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"JonathanKhooTY"},"content":"* Requires real time monitoring and tracking capability of people in the building","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"JonathanKhooTY"},"content":"* Wants a cheaper alternative to crowd tracking systems","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"{Describe the target user profile}","lastModifiedDate":"2020-05-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":73,"author":{"gitId":"JonathanKhooTY"},"content":"A fast and versatile software solution that enables mall management to crowd control ","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"JonathanKhooTY"},"content":"in the most efficient way possible.","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":76,"author":{"gitId":"limwenfeng"},"content":"## User Stories [WIP]","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":78,"author":{"gitId":"JonathanKhooTY"},"content":"|Priority| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":80,"author":{"gitId":"JonathanKhooTY"},"content":"|*****|mall staff|be able to review the personal particulars of the customer|be aware of who he is|","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"JonathanKhooTY"},"content":"|*****|new user|be able to use the program without much training| use the program as soon as possible and easily implement it|","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"JonathanKhooTY"},"content":"|****|mall staff|key in personal particulars easily into the application| check in visitors quickly without holding up a line of customers|","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"JonathanKhooTY"},"content":"|****|mall staff|be able to easily key in a unique personal identifier| check in and find a visitor|","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":85,"author":{"gitId":"limwenfeng"},"content":"## Non-Functional Requirements [WIP]","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":89,"author":{"gitId":"limwenfeng"},"content":"## Glossary [WIP]","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":93,"author":{"gitId":"limwenfeng"},"content":"## Instructions for manual testing [WIP]","lastModifiedDate":"2021-03-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"iamakilahamed":8,"JonathanKhooTY":13,"limwenfeng":20,"sarzorwyn":8,"hussain1998":19,"-":27}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.commands.CommandOutput;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.commands.ExitCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidCommandException;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.exceptions.NoArgumentPassedException;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.WrongFlagException;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.location.Location;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.storage.StorageFile;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.ui.TextUi;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"    private static final String VERSION_NO \u003d \"v1.0\";","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"sarzorwyn"},"content":"    private TextUi ui;","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"sarzorwyn"},"content":"    private Parser parser;","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"sarzorwyn"},"content":"    private StorageFile storage;","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"sarzorwyn"},"content":"    private TrackingList trackingList;","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"    private Location location;","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"    private static Duke theOnlyDuke \u003d null;","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"    private Duke() {","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"    public static Duke getInstance() {","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"        if (theOnlyDuke \u003d\u003d null) {","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"            theOnlyDuke \u003d new Duke();","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"        return theOnlyDuke;","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"iamakilahamed"},"content":"        String locationName \u003d args[0];","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"        int maxCapacity \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"iamakilahamed"},"content":"        getInstance().run(locationName, maxCapacity);","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":44,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":45,"author":{"gitId":"iamakilahamed"},"content":"    public void run(String locationName, int maxCapacity) {","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"iamakilahamed"},"content":"        start(locationName, maxCapacity);","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"sarzorwyn"},"content":"        runUntilExit();","lastModifiedDate":"2021-03-20"},{"lineNumber":48,"author":{"gitId":"sarzorwyn"},"content":"        exit();","lastModifiedDate":"2021-03-20"},{"lineNumber":49,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":50,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":51,"author":{"gitId":"sarzorwyn"},"content":"    /** Prints Goodbye message then exists. */","lastModifiedDate":"2021-03-20"},{"lineNumber":52,"author":{"gitId":"sarzorwyn"},"content":"    private void exit() {","lastModifiedDate":"2021-03-20"},{"lineNumber":53,"author":{"gitId":"sarzorwyn"},"content":"        System.exit(0);","lastModifiedDate":"2021-03-20"},{"lineNumber":54,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":55,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":56,"author":{"gitId":"sarzorwyn"},"content":"    /** Main entry-point for the java.duke.Duke application. */","lastModifiedDate":"2021-03-20"},{"lineNumber":57,"author":{"gitId":"iamakilahamed"},"content":"    private void start(String locationName, int maxCapacity) {","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"iamakilahamed"},"content":"        location \u003d new Location(locationName, maxCapacity);","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"sarzorwyn"},"content":"        ui \u003d new TextUi();","lastModifiedDate":"2021-03-20"},{"lineNumber":60,"author":{"gitId":"sarzorwyn"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-03-20"},{"lineNumber":61,"author":{"gitId":"sarzorwyn"},"content":"        try {","lastModifiedDate":"2021-03-20"},{"lineNumber":62,"author":{"gitId":"sarzorwyn"},"content":"            storage \u003d new StorageFile();","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"sarzorwyn"},"content":"            trackingList \u003d storage.load();","lastModifiedDate":"2021-03-20"},{"lineNumber":64,"author":{"gitId":"iamakilahamed"},"content":"        } catch (StorageOperationException e) {","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"sarzorwyn"},"content":"            // Shut the program down as it can not be recovered","lastModifiedDate":"2021-03-20"},{"lineNumber":66,"author":{"gitId":"sarzorwyn"},"content":"            throw new RuntimeException();","lastModifiedDate":"2021-03-20"},{"lineNumber":67,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":68,"author":{"gitId":"sarzorwyn"},"content":"        ui.showWelcomeMessage(VERSION_NO);","lastModifiedDate":"2021-03-20"},{"lineNumber":69,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":71,"author":{"gitId":"sarzorwyn"},"content":"    /** Reads the user command and executes it, until the user issues the exit command. */","lastModifiedDate":"2021-03-20"},{"lineNumber":72,"author":{"gitId":"sarzorwyn"},"content":"    private void runUntilExit() {","lastModifiedDate":"2021-03-20"},{"lineNumber":73,"author":{"gitId":"hussain1998"},"content":"        Command command \u003d null;","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"hussain1998"},"content":"        String userInput;","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"hussain1998"},"content":"        do {","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"hussain1998"},"content":"            userInput \u003d ui.getUserInput();","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"hussain1998"},"content":"            try {","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"hussain1998"},"content":"                command \u003d parser.parseCommand(userInput);","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"limwenfeng"},"content":"            } catch (InvalidCommandException | NoArgumentPassedException | WrongFlagException e) {","lastModifiedDate":"2021-03-21"},{"lineNumber":80,"author":{"gitId":"limwenfeng"},"content":"                ui.notifyErrorToUser(e);","lastModifiedDate":"2021-03-21"},{"lineNumber":81,"author":{"gitId":"hussain1998"},"content":"                continue;","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"hussain1998"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"hussain1998"},"content":"            CommandOutput commandOutput \u003d null;","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"hussain1998"},"content":"            try {","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"hussain1998"},"content":"                commandOutput \u003d command.execute(trackingList);","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"sarzorwyn"},"content":"                storage.save(trackingList);","lastModifiedDate":"2021-03-20"},{"lineNumber":88,"author":{"gitId":"sarzorwyn"},"content":"                ui.printReaction(commandOutput);","lastModifiedDate":"2021-03-20"},{"lineNumber":89,"author":{"gitId":"sarzorwyn"},"content":"            } catch (PersonNotFoundException pnfe) {","lastModifiedDate":"2021-03-20"},{"lineNumber":90,"author":{"gitId":"hussain1998"},"content":"                System.out.println(\"Person not found!\");","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"iamakilahamed"},"content":"                continue;","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"sarzorwyn"},"content":"            } catch (StorageOperationException soe) {","lastModifiedDate":"2021-03-20"},{"lineNumber":93,"author":{"gitId":"sarzorwyn"},"content":"                System.out.println(soe.getMessage());","lastModifiedDate":"2021-03-20"},{"lineNumber":94,"author":{"gitId":"JonathanKhooTY"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":96,"author":{"gitId":"hussain1998"},"content":"        } while (!(command instanceof ExitCommand));","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":99,"author":{"gitId":"iamakilahamed"},"content":"    public Location getLocation() {","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"iamakilahamed"},"content":"        return location;","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"JonathanKhooTY":4,"iamakilahamed":29,"limwenfeng":2,"sarzorwyn":34,"hussain1998":25,"-":9}},{"path":"src/main/java/seedu/duke/commands/CheckInCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.person.Id;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.person.Name;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.person.Person;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.person.Phone;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":" * Check-in a person.","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"public class CheckInCommand extends Command {","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"    public static final String COMMAND \u003d \"checkin\";","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"    public static final String CHECKIN_MESSAGE \u003d \"%s has been successfully checked-in!\";","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    private final Person toCheckin;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    // For v2.0","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"    //    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"    //     * Checkin using raw values (first time).","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"    //     * If already checkin, update the location list.","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"    //     */","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"    //    public CheckinCommand(String id,","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"    //                          String name,","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"    //                          String phone,","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"    //                          Location location) {","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"    //        if (trackingList.findPerson(id)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"    //            toCheckin \u003d trackinglist.findPerson(id);","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"    //            toCheckin.addLocation(location);","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"    //        }","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"    //        toCheckin \u003d new Person(","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"    //                new Id(id),","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"    //                new Name(name),","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"    //                new Phone(phone),","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"    //                new Locations(visitedPlaces));","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"    //  }","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"JonathanKhooTY"},"content":"    public CheckInCommand(String id,","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":"                          String name,","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"iamakilahamed"},"content":"                          String phone) {","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"        toCheckin \u003d new Person(","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"iamakilahamed"},"content":"                new Id(id),","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"iamakilahamed"},"content":"                new Name(name),","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"iamakilahamed"},"content":"                new Phone(phone));","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"hussain1998"},"content":"    public Person getToCheckIn() {","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"iamakilahamed"},"content":"        return toCheckin;","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"iamakilahamed"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"hussain1998"},"content":"    public CommandOutput execute(TrackingList trackingList) {","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"hussain1998"},"content":"        toCheckin.setCheckedIn(true);","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"iamakilahamed"},"content":"        trackingList.add(toCheckin);","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"JonathanKhooTY"},"content":"        return new CommandOutput(String.format(CHECKIN_MESSAGE, toCheckin.getName()), COMMAND);","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"iamakilahamed":51,"JonathanKhooTY":3,"hussain1998":4}},{"path":"src/main/java/seedu/duke/commands/CheckoutCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.person.Id;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.person.Name;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.person.Person;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":" * Check-out a person.","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"public class CheckoutCommand extends Command {","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    public static final String COMMAND \u003d \"checkout\";","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"    public static final String CHECKOUT_MESSAGE \u003d \"%s has been successfully checked-out!\";","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"    private final Id id;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"    private String nameString;","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"    private Person toCheckout;","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"    private static final Logger logger \u003d Logger.getLogger(CheckoutCommand.class.getName());","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"    public CheckoutCommand(String idString,String nameString) {","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"        this.id \u003d new Id(idString);","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"        if (nameString \u003d\u003d null) {","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"            this.nameString \u003d null;","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"        this.nameString \u003d nameString;","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"    public Person getToCheckout() {","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"        return toCheckout;","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"JonathanKhooTY"},"content":"    public CommandOutput execute(TrackingList trackingList) throws PersonNotFoundException {","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"JonathanKhooTY"},"content":"        toCheckout \u003d trackingList.findExactPerson(id);","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"        Name toCheckoutName \u003d toCheckout.getName();","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"iamakilahamed"},"content":"        if (nameString !\u003d null) {","lastModifiedDate":"2021-03-20"},{"lineNumber":43,"author":{"gitId":"iamakilahamed"},"content":"            boolean isSamePerson \u003d toCheckoutName.getNameString().equals(nameString);","lastModifiedDate":"2021-03-20"},{"lineNumber":44,"author":{"gitId":"iamakilahamed"},"content":"            if (!isSamePerson) {","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"iamakilahamed"},"content":"                logger.warning(\"ID entered does not match the name from the list.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"iamakilahamed"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"iamakilahamed"},"content":"            assert isSamePerson : \"ID does not match name.\";","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"iamakilahamed"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":49,"author":{"gitId":"JonathanKhooTY"},"content":"        if (toCheckout \u003d\u003d null) {","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"iamakilahamed"},"content":"            throw new PersonNotFoundException(Messages.PERSON_NOT_FOUND);","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"JonathanKhooTY"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"iamakilahamed"},"content":"        toCheckout.setCheckedIn(false);","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"iamakilahamed"},"content":"        return new CommandOutput(String.format(CHECKOUT_MESSAGE, toCheckoutName), COMMAND);","lastModifiedDate":"2021-03-20"},{"lineNumber":54,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"iamakilahamed":45,"JonathanKhooTY":9,"hussain1998":2}},{"path":"src/main/java/seedu/duke/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":" * Clears all the entries in tracking list.","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"    public static final String COMMAND \u003d \"clear\";","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"    public static final String CLEAR_MESSAGE \u003d \"Cleared %d entries\";","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"    public CommandOutput execute(TrackingList trackingList) {","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"        int entriesCleared \u003d trackingList.getSize();","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"        trackingList.clear();","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"        return new CommandOutput(String.format(CLEAR_MESSAGE, entriesCleared), COMMAND);","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"iamakilahamed":17,"hussain1998":3}},{"path":"src/main/java/seedu/duke/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":" * Represents an executable command.","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"public abstract class Command {","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"    protected Command() {","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"     * Executes the command.","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"    public abstract CommandOutput execute(TrackingList trackingList) throws PersonNotFoundException;","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"iamakilahamed":16,"JonathanKhooTY":1,"hussain1998":2}},{"path":"src/main/java/seedu/duke/commands/CommandOutput.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"import java.util.List;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":" * Represents the output of a command execution.","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"public class CommandOutput {","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    public final String messageToUser;","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"    public final List\u003cPerson\u003e persons;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"    public final Person person;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"    public final String command;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"    public CommandOutput(String messageToUser, String command) {","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"        this.messageToUser \u003d messageToUser;","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"        persons \u003d null;","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"        person \u003d null;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"    public CommandOutput(List\u003cPerson\u003e persons, String command) {","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"        messageToUser \u003d null;","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"        this.persons \u003d persons;","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"        person \u003d null;","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"hussain1998"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"    public CommandOutput(Person person, String command) {","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"        this.messageToUser \u003d null;","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"hussain1998"},"content":"        persons \u003d null;","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"hussain1998"},"content":"        this.person \u003d person;","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"hussain1998"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"iamakilahamed":21,"hussain1998":17}},{"path":"src/main/java/seedu/duke/commands/EditMaxCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.location.Location;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":" * Set a new maximum capacity of the location.","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"public class EditMaxCommand extends Command {","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"    public static final String COMMAND \u003d \"editmax\";","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    public static final String EDIT_MAX_MESSAGE \u003d \"Max capacity: %d\";","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"    private final int newMaxCapacity;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"    private final Location location;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"    public EditMaxCommand(String newMaxCapacity, Location location) {","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"        this.newMaxCapacity \u003d Integer.parseInt(newMaxCapacity);","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"    public CommandOutput execute(TrackingList trackingList) {","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"        location.setMaxCapacity(newMaxCapacity);","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"        return new CommandOutput(String.format(EDIT_MAX_MESSAGE, newMaxCapacity), COMMAND);","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"iamakilahamed":28}},{"path":"src/main/java/seedu/duke/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":" * Terminates SET program.","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"    public static final String COMMAND \u003d \"exit\";","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    public static final String EXIT_MESSAGE \u003d \"Exiting Safest Entry Tracker...\";","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"    public CommandOutput execute(TrackingList trackingList) {","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"        return new CommandOutput(EXIT_MESSAGE, COMMAND);","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"iamakilahamed":14,"hussain1998":5}},{"path":"src/main/java/seedu/duke/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.Id;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":" * Finds the person in tracking list using id.","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":" * Returns if the person has checked-in or not.","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"    public static final String COMMAND \u003d \"find\";","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"    private final Id idKeyword;","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"    public FindCommand(String idKeyword) {","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"        this.idKeyword \u003d new Id(idKeyword);","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"    public CommandOutput execute(TrackingList trackingList) throws PersonNotFoundException {","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"sarzorwyn"},"content":"        Person person \u003d trackingList.findExactPerson(idKeyword);","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"        return new CommandOutput(person, COMMAND);","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"iamakilahamed":22,"sarzorwyn":1,"hussain1998":4}},{"path":"src/main/java/seedu/duke/commands/ListCheckedInCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-19"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"public class ListCheckedInCommand extends Command {","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"    public static final String COMMAND \u003d \"list\";","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"    @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"    public CommandOutput execute(TrackingList trackingList) {","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"        TrackingList checkedInList \u003d new TrackingList();","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"        for (int i \u003d 0; i \u003c trackingList.getSize(); i++) {","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"            if (trackingList.getPerson(i).getCheckedIn()) {","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"                checkedInList.add(trackingList.getPerson(i));","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":"            }","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"        return new CommandOutput(checkedInList.listPerson(), COMMAND);","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"JonathanKhooTY":12,"iamakilahamed":8}},{"path":"src/main/java/seedu/duke/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":" * Lists all the person in the tracking list to the user.","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"    public static final String COMMAND \u003d \"listall\";","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"    public CommandOutput execute(TrackingList trackingList) {","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"        return new CommandOutput(trackingList.listPerson(), COMMAND);","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"iamakilahamed":11,"JonathanKhooTY":2,"hussain1998":4}},{"path":"src/main/java/seedu/duke/common/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.common;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"public class Messages {","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"    public static final String PERSON_NOT_FOUND \u003d \"Person not found!\";","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"    public static final String INVALID_COMMAND \u003d \"Invalid command detected! Try again!\";","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"    public static final String NO_ARGUMENT \u003d \"No argument passed! Try again!\";","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"    public static final String WRONG_FLAG \u003d \"Wrong flags used!\";","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"JonathanKhooTY":4,"iamakilahamed":6}},{"path":"src/main/java/seedu/duke/exceptions/InvalidCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"    public InvalidCommandException(String errorMessage) {","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"        super(errorMessage);","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"JonathanKhooTY":4,"iamakilahamed":5}},{"path":"src/main/java/seedu/duke/exceptions/NoArgumentPassedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"public class NoArgumentPassedException extends Exception {","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"    public NoArgumentPassedException(String errorMessage) {","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"        super(errorMessage);","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"JonathanKhooTY":4,"iamakilahamed":5}},{"path":"src/main/java/seedu/duke/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"public class PersonNotFoundException extends Exception {","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"    public PersonNotFoundException(String errorMessage) {","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"        super(errorMessage);","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"JonathanKhooTY":4,"iamakilahamed":5}},{"path":"src/main/java/seedu/duke/exceptions/StorageOperationException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"/**","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":" * Indicates that there has been an error when converting data or read/write between the application","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":" * and the storage file.","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":" */","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"public class StorageOperationException extends Exception {","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"    public StorageOperationException(String message) {","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"        super(message);","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"iamakilahamed":13}},{"path":"src/main/java/seedu/duke/exceptions/WrongFlagException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"public class WrongFlagException extends Exception {","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"    public WrongFlagException(String errorMessage) {","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"        super(errorMessage);","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"JonathanKhooTY":4,"iamakilahamed":5}},{"path":"src/main/java/seedu/duke/location/Location.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.location;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"public class Location {","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"    // enter locationName and set maxCapacity as arguments when running the jar file","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"    private String locationName;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"    private int maxCapacity;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"    public Location(String locationName, int maxCapacity) {","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"        this.locationName \u003d locationName;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"        this.maxCapacity \u003d maxCapacity;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"    public String getLocationName() {","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"        return locationName;","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    public void setLocationName(String locationName) {","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"        this.locationName \u003d locationName;","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"    public int getMaxCapacity() {","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"        return maxCapacity;","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"    public void setMaxCapacity(int maxCapacity) {","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"        this.maxCapacity \u003d maxCapacity;","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"iamakilahamed":30}},{"path":"src/main/java/seedu/duke/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.CheckInCommand;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.CheckoutCommand;","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.commands.ClearCommand;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.ExitCommand;","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.FindCommand;","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.ListCheckedInCommand;","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.ListCommand;","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidCommandException;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.NoArgumentPassedException;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.WrongFlagException;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"public class Parser {","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"     * Method that splits user input into 2 sections.","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"     * First section contains desired command","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":"     * Second section contains the description of the task","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"     *","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":"     * @param text This is the user input. It is a string","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"     * @return String[] This returns an array, containing 2 fields","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"JonathanKhooTY"},"content":"    public static String[] splitTextIntoTwoFields(String text) {","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"        String[] textArray \u003d text.split(\" \", 2);","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"JonathanKhooTY"},"content":"        textArray[0] \u003d textArray[0].toLowerCase();","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"JonathanKhooTY"},"content":"        return textArray;","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"JonathanKhooTY"},"content":"    public static Command parseCommand(String userInput) throws","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"hussain1998"},"content":"            InvalidCommandException, NoArgumentPassedException, WrongFlagException {","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"hussain1998"},"content":"        String[] inputArray;","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"hussain1998"},"content":"        String argument \u003d null;","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"JonathanKhooTY"},"content":"        assert userInput !\u003d null : \"User input cannot be null\";","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"hussain1998"},"content":"        userInput \u003d userInput.trim();","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"JonathanKhooTY"},"content":"        inputArray \u003d splitTextIntoTwoFields(userInput);   //inputArray may be of size 1 or size 2","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"JonathanKhooTY"},"content":"        String command;","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"hussain1998"},"content":"        command \u003d inputArray[0];","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"JonathanKhooTY"},"content":"        if (inputArray.length !\u003d 1) {","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"JonathanKhooTY"},"content":"            argument \u003d inputArray[1].trim();","lastModifiedDate":"2021-03-19"},{"lineNumber":43,"author":{"gitId":"iamakilahamed"},"content":"        } else if (!command.equals(\"list\")","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"iamakilahamed"},"content":"                \u0026\u0026 !command.equals(\"exit\")","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"iamakilahamed"},"content":"                \u0026\u0026 !command.equals(\"listall\")","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"iamakilahamed"},"content":"                \u0026\u0026 !command.equals(\"clear\")) {","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"iamakilahamed"},"content":"            throw new InvalidCommandException(Messages.INVALID_COMMAND);","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"hussain1998"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"JonathanKhooTY"},"content":"        switch (command) {","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"JonathanKhooTY"},"content":"        case CheckInCommand.COMMAND:","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"JonathanKhooTY"},"content":"            return parseCheckIn(argument);","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"hussain1998"},"content":"        case CheckoutCommand.COMMAND:","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"JonathanKhooTY"},"content":"            return parseCheckOut(argument);","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"hussain1998"},"content":"        case FindCommand.COMMAND:","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"JonathanKhooTY"},"content":"            return parseFind(argument);","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"hussain1998"},"content":"        case ListCommand.COMMAND:","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"hussain1998"},"content":"            return parseList();","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"JonathanKhooTY"},"content":"        case ListCheckedInCommand.COMMAND:","lastModifiedDate":"2021-03-19"},{"lineNumber":59,"author":{"gitId":"JonathanKhooTY"},"content":"            return parseCheckedInList();","lastModifiedDate":"2021-03-19"},{"lineNumber":60,"author":{"gitId":"hussain1998"},"content":"        case ExitCommand.COMMAND:","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"hussain1998"},"content":"            return parseExit();","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"iamakilahamed"},"content":"        case ClearCommand.COMMAND:","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"iamakilahamed"},"content":"            return parseClear();","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"hussain1998"},"content":"        default:","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"iamakilahamed"},"content":"            throw new InvalidCommandException(Messages.INVALID_COMMAND);","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"hussain1998"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"JonathanKhooTY"},"content":"    private static Command parseClear() {","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"iamakilahamed"},"content":"        return new ClearCommand();","lastModifiedDate":"2021-03-21"},{"lineNumber":71,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":72,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"JonathanKhooTY"},"content":"    private static Command parseExit() {","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"iamakilahamed"},"content":"        return new ExitCommand();","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":76,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":77,"author":{"gitId":"JonathanKhooTY"},"content":"    private static Command parseList() {","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"hussain1998"},"content":"        return new ListCommand();","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":80,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"JonathanKhooTY"},"content":"    private static Command parseCheckedInList() {","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"JonathanKhooTY"},"content":"        return new ListCheckedInCommand();","lastModifiedDate":"2021-03-19"},{"lineNumber":83,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":84,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":85,"author":{"gitId":"JonathanKhooTY"},"content":"    private static Command parseFind(String argument) throws WrongFlagException {","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"JonathanKhooTY"},"content":"        String id;","lastModifiedDate":"2021-03-19"},{"lineNumber":87,"author":{"gitId":"JonathanKhooTY"},"content":"        if (argument.startsWith(\"i/\")) {","lastModifiedDate":"2021-03-19"},{"lineNumber":88,"author":{"gitId":"JonathanKhooTY"},"content":"            id \u003d argument.substring(2);","lastModifiedDate":"2021-03-19"},{"lineNumber":89,"author":{"gitId":"JonathanKhooTY"},"content":"        } else {","lastModifiedDate":"2021-03-19"},{"lineNumber":90,"author":{"gitId":"iamakilahamed"},"content":"            throw new WrongFlagException(Messages.WRONG_FLAG);","lastModifiedDate":"2021-03-21"},{"lineNumber":91,"author":{"gitId":"JonathanKhooTY"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":92,"author":{"gitId":"hussain1998"},"content":"        return new FindCommand(id);","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":94,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":95,"author":{"gitId":"JonathanKhooTY"},"content":"    public static Command parseCheckOut(String argument) throws NoArgumentPassedException, WrongFlagException {","lastModifiedDate":"2021-03-22"},{"lineNumber":96,"author":{"gitId":"JonathanKhooTY"},"content":"        String [] checkoutDetails;","lastModifiedDate":"2021-03-22"},{"lineNumber":97,"author":{"gitId":"JonathanKhooTY"},"content":"        String id;","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"JonathanKhooTY"},"content":"        String name \u003d null;","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"hussain1998"},"content":"        if (argument.isBlank()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":100,"author":{"gitId":"iamakilahamed"},"content":"            throw new NoArgumentPassedException(Messages.NO_ARGUMENT);","lastModifiedDate":"2021-03-21"},{"lineNumber":101,"author":{"gitId":"JonathanKhooTY"},"content":"        } else if (idChecker(argument) \u003d\u003d -1) {","lastModifiedDate":"2021-03-22"},{"lineNumber":102,"author":{"gitId":"iamakilahamed"},"content":"            throw new WrongFlagException(Messages.WRONG_FLAG);","lastModifiedDate":"2021-03-21"},{"lineNumber":103,"author":{"gitId":"JonathanKhooTY"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":105,"author":{"gitId":"JonathanKhooTY"},"content":"        if (nameChecker(argument) \u003d\u003d -1) {","lastModifiedDate":"2021-03-22"},{"lineNumber":106,"author":{"gitId":"JonathanKhooTY"},"content":"            checkoutDetails \u003d argument.split(\"i/\",2);","lastModifiedDate":"2021-03-22"},{"lineNumber":107,"author":{"gitId":"JonathanKhooTY"},"content":"        } else {","lastModifiedDate":"2021-03-22"},{"lineNumber":108,"author":{"gitId":"JonathanKhooTY"},"content":"            checkoutDetails \u003d argument.split(\"i/|n/\",3);","lastModifiedDate":"2021-03-22"},{"lineNumber":109,"author":{"gitId":"JonathanKhooTY"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":110,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":111,"author":{"gitId":"JonathanKhooTY"},"content":"        if (checkoutDetails[1].isBlank()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":112,"author":{"gitId":"JonathanKhooTY"},"content":"            throw new NoArgumentPassedException(Messages.NO_ARGUMENT);","lastModifiedDate":"2021-03-22"},{"lineNumber":113,"author":{"gitId":"JonathanKhooTY"},"content":"        } else {","lastModifiedDate":"2021-03-22"},{"lineNumber":114,"author":{"gitId":"JonathanKhooTY"},"content":"            id \u003d checkoutDetails[1].trim();","lastModifiedDate":"2021-03-22"},{"lineNumber":115,"author":{"gitId":"JonathanKhooTY"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":116,"author":{"gitId":"JonathanKhooTY"},"content":"        if (checkoutDetails.length \u003d\u003d 3) {","lastModifiedDate":"2021-03-22"},{"lineNumber":117,"author":{"gitId":"JonathanKhooTY"},"content":"            name \u003d checkoutDetails[1].trim();","lastModifiedDate":"2021-03-22"},{"lineNumber":118,"author":{"gitId":"JonathanKhooTY"},"content":"            id \u003d checkoutDetails[2].trim();","lastModifiedDate":"2021-03-22"},{"lineNumber":119,"author":{"gitId":"JonathanKhooTY"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":120,"author":{"gitId":"JonathanKhooTY"},"content":"        return new CheckoutCommand(id,name);","lastModifiedDate":"2021-03-13"},{"lineNumber":121,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":122,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":123,"author":{"gitId":"JonathanKhooTY"},"content":"    public static int idChecker(String argument) {","lastModifiedDate":"2021-03-22"},{"lineNumber":124,"author":{"gitId":"JonathanKhooTY"},"content":"        return argument.indexOf(\"i/\");","lastModifiedDate":"2021-03-22"},{"lineNumber":125,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":126,"author":{"gitId":"JonathanKhooTY"},"content":"    ","lastModifiedDate":"2021-03-22"},{"lineNumber":127,"author":{"gitId":"JonathanKhooTY"},"content":"    private static int nameChecker(String argument) {","lastModifiedDate":"2021-03-22"},{"lineNumber":128,"author":{"gitId":"JonathanKhooTY"},"content":"        return argument.indexOf(\"n/\");","lastModifiedDate":"2021-03-22"},{"lineNumber":129,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":130,"author":{"gitId":"JonathanKhooTY"},"content":"    ","lastModifiedDate":"2021-03-22"},{"lineNumber":131,"author":{"gitId":"JonathanKhooTY"},"content":"    private static int phoneChecker(String argument) {","lastModifiedDate":"2021-03-22"},{"lineNumber":132,"author":{"gitId":"JonathanKhooTY"},"content":"        return argument.indexOf(\"p/\");","lastModifiedDate":"2021-03-22"},{"lineNumber":133,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":134,"author":{"gitId":"JonathanKhooTY"},"content":"    ","lastModifiedDate":"2021-03-22"},{"lineNumber":135,"author":{"gitId":"JonathanKhooTY"},"content":"    static Command parseCheckIn(String argument) throws NoArgumentPassedException, WrongFlagException {","lastModifiedDate":"2021-03-22"},{"lineNumber":136,"author":{"gitId":"JonathanKhooTY"},"content":"        String[] checkInDetails;","lastModifiedDate":"2021-03-22"},{"lineNumber":137,"author":{"gitId":"JonathanKhooTY"},"content":"                ","lastModifiedDate":"2021-03-22"},{"lineNumber":138,"author":{"gitId":"hussain1998"},"content":"        if (argument.isBlank()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":139,"author":{"gitId":"iamakilahamed"},"content":"            throw new NoArgumentPassedException(Messages.NO_ARGUMENT);","lastModifiedDate":"2021-03-21"},{"lineNumber":140,"author":{"gitId":"JonathanKhooTY"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":141,"author":{"gitId":"JonathanKhooTY"},"content":"        assert !argument.isBlank() : \"Argument cannot be blank.\";","lastModifiedDate":"2021-03-19"},{"lineNumber":142,"author":{"gitId":"JonathanKhooTY"},"content":"        if (idChecker(argument) \u003d\u003d -1 || nameChecker(argument) \u003d\u003d -1) {","lastModifiedDate":"2021-03-22"},{"lineNumber":143,"author":{"gitId":"iamakilahamed"},"content":"            throw new WrongFlagException(Messages.WRONG_FLAG);","lastModifiedDate":"2021-03-21"},{"lineNumber":144,"author":{"gitId":"JonathanKhooTY"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":145,"author":{"gitId":"JonathanKhooTY"},"content":"        if (phoneChecker(argument) \u003d\u003d -1) {","lastModifiedDate":"2021-03-22"},{"lineNumber":146,"author":{"gitId":"JonathanKhooTY"},"content":"            checkInDetails \u003d argument.split(\"n/|i/\",3);","lastModifiedDate":"2021-03-22"},{"lineNumber":147,"author":{"gitId":"JonathanKhooTY"},"content":"        } else {","lastModifiedDate":"2021-03-22"},{"lineNumber":148,"author":{"gitId":"JonathanKhooTY"},"content":"            checkInDetails \u003d argument.split(\"n/|i/|p/\",4);","lastModifiedDate":"2021-03-22"},{"lineNumber":149,"author":{"gitId":"JonathanKhooTY"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":150,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":151,"author":{"gitId":"JonathanKhooTY"},"content":"        String id;","lastModifiedDate":"2021-03-22"},{"lineNumber":152,"author":{"gitId":"JonathanKhooTY"},"content":"        String name;","lastModifiedDate":"2021-03-19"},{"lineNumber":153,"author":{"gitId":"JonathanKhooTY"},"content":"        String phoneNumber \u003d null;","lastModifiedDate":"2021-03-22"},{"lineNumber":154,"author":{"gitId":"JonathanKhooTY"},"content":"        if (checkInDetails[1].isBlank() || checkInDetails[2].isBlank()) {     //checks if n/ and i/ is provided","lastModifiedDate":"2021-03-22"},{"lineNumber":155,"author":{"gitId":"iamakilahamed"},"content":"            throw new NoArgumentPassedException(Messages.NO_ARGUMENT);","lastModifiedDate":"2021-03-21"},{"lineNumber":156,"author":{"gitId":"JonathanKhooTY"},"content":"        } else {","lastModifiedDate":"2021-03-19"},{"lineNumber":157,"author":{"gitId":"JonathanKhooTY"},"content":"            name \u003d checkInDetails[1].trim();","lastModifiedDate":"2021-03-22"},{"lineNumber":158,"author":{"gitId":"JonathanKhooTY"},"content":"            id \u003d checkInDetails[2].trim();","lastModifiedDate":"2021-03-22"},{"lineNumber":159,"author":{"gitId":"JonathanKhooTY"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":160,"author":{"gitId":"JonathanKhooTY"},"content":"        if (checkInDetails.length \u003d\u003d 4) {","lastModifiedDate":"2021-03-22"},{"lineNumber":161,"author":{"gitId":"JonathanKhooTY"},"content":"            phoneNumber \u003d checkInDetails[3].trim();","lastModifiedDate":"2021-03-22"},{"lineNumber":162,"author":{"gitId":"JonathanKhooTY"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":163,"author":{"gitId":"JonathanKhooTY"},"content":"        return new CheckInCommand(id, name, phoneNumber);","lastModifiedDate":"2021-03-22"},{"lineNumber":164,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":165,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":166,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"JonathanKhooTY":127,"iamakilahamed":18,"hussain1998":21}},{"path":"src/main/java/seedu/duke/person/Id.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package seedu.duke.person;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"public class Id {","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"    public final String idString;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"    public static final String ID_REGEX \u003d \"\\\\d{3}[A-Z]\";","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"    public static final String ID_ERROR \u003d \"ID should be 3 digits followed by a uppercase letter\";","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"    public Id(String idString) {","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"        assert isValidId(idString) : ID_ERROR;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"        this.idString \u003d idString.trim();","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"    public String getIdString() {","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"        return idString;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"    public String toString() {","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"        return idString;","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"    public static boolean isValidId(String idString) {","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"        return idString.matches(ID_REGEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"hussain1998"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"hussain1998"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"hussain1998"},"content":"            return true;","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"hussain1998"},"content":"        } else if (other instanceof Id) {","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"hussain1998"},"content":"            return idString.equals(((Id) other).getIdString());","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"hussain1998"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"hussain1998"},"content":"        return false;","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"hussain1998"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"hussain1998":35}},{"path":"src/main/java/seedu/duke/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package seedu.duke.person;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"public class Name {","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"    public final String nameString;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"    public static final String NAME_REGEX \u003d \"[a-zA-Z][a-zA-Z( )*]{0,99}\";","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"    public static final String NAME_ERROR \u003d \"Name should consist of alphabets (or spaces) only. (100 characters limit)\";","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"    public Name(String nameString) {","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"        assert isValidName(nameString) : NAME_ERROR;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"        this.nameString \u003d nameString.trim();","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"    public static boolean isValidName(String nameString) {","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"        return nameString.matches(NAME_REGEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"    public String getNameString() {","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"        return nameString;","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"    public String toString() {","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"        return nameString;","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"hussain1998":25}},{"path":"src/main/java/seedu/duke/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package seedu.duke.person;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":" * Represents a Person.","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":" * Assumption: values are validated and not null.","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"public class Person {","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"    private Id id;","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"    private Name name;","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"    private Phone phone;","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"    private Boolean isCheckedIn;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"    public Person(Id id, Name name, Phone phone) {","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"        assert id !\u003d null : \"ID cannot be null\";","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"        assert phone !\u003d null : \"Phone cannot be null\";","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"        assert name !\u003d null : \"Name cannot be null\";","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"hussain1998"},"content":"            return true;","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"        } else if (other instanceof Person) {","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"hussain1998"},"content":"            return id.equals(((Person) other).id);","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"hussain1998"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"hussain1998"},"content":"        return false;","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"hussain1998"},"content":"    public Id getId() {","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"hussain1998"},"content":"        return id;","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"hussain1998"},"content":"    public Name getName() {","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"hussain1998"},"content":"        return name;","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"hussain1998"},"content":"    public Phone getPhone() {","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"hussain1998"},"content":"        return phone;","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"hussain1998"},"content":"    public Boolean getCheckedIn() {","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"hussain1998"},"content":"        return isCheckedIn;","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"hussain1998"},"content":"    public void setCheckedIn(Boolean checkedIn) {","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"hussain1998"},"content":"        isCheckedIn \u003d checkedIn;","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"hussain1998"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"hussain1998":52}},{"path":"src/main/java/seedu/duke/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package seedu.duke.person;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":" * Represents the phone number of a person.","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":" * If a person does not have a phone, isAvailable will be false.","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"public class Phone {","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"    public String phoneNo;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"    public boolean isAvailable;","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"    public static final String PHONE_REGEX \u003d \"\\\\d{8}\";","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"    public static final String PHONE_ERROR \u003d \"Phone number should consist of only 8 digits\";","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"     * Constructs a phone object.","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"     * @param phoneNo Phone number string. Null if Person has no phone.","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"    public Phone(String phoneNo) {","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"        assert phoneNo \u003d\u003d null || isValidPhone(phoneNo) : PHONE_ERROR;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"        this.isAvailable \u003d phoneNo !\u003d null;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"        this.phoneNo \u003d phoneNo;","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"    public static boolean isValidPhone(String phoneNo) {","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"        return phoneNo.matches(PHONE_REGEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"hussain1998"},"content":"    public String getPhoneNo() {","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"hussain1998"},"content":"        return phoneNo;","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"hussain1998"},"content":"    public void setPhoneNo(String phoneNo) {","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"hussain1998"},"content":"        assert phoneNo \u003d\u003d null || isValidPhone(phoneNo) : PHONE_ERROR;","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"hussain1998"},"content":"        this.isAvailable \u003d phoneNo !\u003d null;","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"hussain1998"},"content":"        this.phoneNo \u003d phoneNo;","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"hussain1998"},"content":"    public boolean isAvailable() {","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"hussain1998"},"content":"        return isAvailable;","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"hussain1998"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"hussain1998"},"content":"    public String toString() {","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"hussain1998"},"content":"        return phoneNo;","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"hussain1998"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"hussain1998":46}},{"path":"src/main/java/seedu/duke/person/TrackingList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sarzorwyn"},"content":"package seedu.duke.person;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"sarzorwyn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"sarzorwyn"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"sarzorwyn"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"sarzorwyn"},"content":"import java.util.List;","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"sarzorwyn"},"content":" * A list of persons. Does not allow null elements or duplicates.","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"sarzorwyn"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"sarzorwyn"},"content":"public class TrackingList {","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"sarzorwyn"},"content":"    private final List\u003cPerson\u003e personList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"     * Constructs a empty Person List.","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"sarzorwyn"},"content":"    public TrackingList() {","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"sarzorwyn"},"content":"     * Constructs a person list with given persons in varargs.","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"sarzorwyn"},"content":"    public TrackingList(Person... persons) {","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"sarzorwyn"},"content":"        final List\u003cPerson\u003e initialPersons \u003d Arrays.asList(persons);","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"sarzorwyn"},"content":"        personList.addAll(initialPersons);","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"sarzorwyn"},"content":"     * Constructs a person list with given persons in a collection.","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"sarzorwyn"},"content":"     * @param persons a collection of persons","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"sarzorwyn"},"content":"    public TrackingList(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"sarzorwyn"},"content":"        personList.addAll(persons);","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":39,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"sarzorwyn"},"content":"     * Checks if a list contains the person in given argument.","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"sarzorwyn"},"content":"     * @param personToCheck Person to check if contained in personList","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"sarzorwyn"},"content":"     * @return True if personList contains Person, False if personList does not contains Person","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"sarzorwyn"},"content":"    public boolean contains(Person personToCheck) {","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"sarzorwyn"},"content":"        for (Person p : personList) {","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"sarzorwyn"},"content":"            if (p.equals(personToCheck)) {","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"sarzorwyn"},"content":"                return true;","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"sarzorwyn"},"content":"            }","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"sarzorwyn"},"content":"        return false;","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"sarzorwyn"},"content":"    public void add(Person person) {","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"sarzorwyn"},"content":"        personList.add(person);","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"sarzorwyn"},"content":"        assert personList.contains(person) : \"Person not added to list\";","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"sarzorwyn"},"content":"    public void delete(Person person) {","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"sarzorwyn"},"content":"        personList.remove(person);","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"sarzorwyn"},"content":"        assert !personList.contains(person) : \"Person not removed from list\";","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":63,"author":{"gitId":"sarzorwyn"},"content":"    public void delete(int index) {","lastModifiedDate":"2021-03-07"},{"lineNumber":64,"author":{"gitId":"sarzorwyn"},"content":"        personList.remove(index);","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":66,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"sarzorwyn"},"content":"    public Person getPerson(int index) {","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"sarzorwyn"},"content":"        return personList.get(index);","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":70,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"sarzorwyn"},"content":"    public int getSize() {","lastModifiedDate":"2021-03-07"},{"lineNumber":72,"author":{"gitId":"sarzorwyn"},"content":"        return personList.size();","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":74,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":75,"author":{"gitId":"sarzorwyn"},"content":"    public List\u003cPerson\u003e listPerson() {","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"sarzorwyn"},"content":"        final List\u003cPerson\u003e returnedList \u003d new ArrayList\u003c\u003e(personList);","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"sarzorwyn"},"content":"        assert returnedList.size() \u003d\u003d personList.size() : \"returnedList does not match listPerson size\";","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"sarzorwyn"},"content":"        return returnedList;","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"sarzorwyn"},"content":"    public void clear() {","lastModifiedDate":"2021-03-11"},{"lineNumber":82,"author":{"gitId":"sarzorwyn"},"content":"        personList.clear();","lastModifiedDate":"2021-03-11"},{"lineNumber":83,"author":{"gitId":"sarzorwyn"},"content":"        assert personList.isEmpty() : \"List not empty after clear\";","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":86,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":87,"author":{"gitId":"iamakilahamed"},"content":"     * Finds Person with exact match as id queried.","lastModifiedDate":"2021-03-11"},{"lineNumber":88,"author":{"gitId":"sarzorwyn"},"content":"     * @param id id being queried","lastModifiedDate":"2021-03-07"},{"lineNumber":89,"author":{"gitId":"sarzorwyn"},"content":"     * @return Person that exactly matches id","lastModifiedDate":"2021-03-11"},{"lineNumber":90,"author":{"gitId":"sarzorwyn"},"content":"     * @throws PersonNotFoundException if no person has queried id","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":92,"author":{"gitId":"sarzorwyn"},"content":"    public Person findExactPerson(Id id) throws PersonNotFoundException {","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"hussain1998"},"content":"        Person matchingPerson \u003d null;","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"sarzorwyn"},"content":"        for (Person p : personList) {","lastModifiedDate":"2021-03-07"},{"lineNumber":95,"author":{"gitId":"iamakilahamed"},"content":"            if (p.getId().getIdString().equals(id.getIdString())) {","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"hussain1998"},"content":"                matchingPerson \u003d p;","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"sarzorwyn"},"content":"            }","lastModifiedDate":"2021-03-07"},{"lineNumber":98,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":99,"author":{"gitId":"sarzorwyn"},"content":"        if (matchingPerson \u003d\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"iamakilahamed"},"content":"            throw new PersonNotFoundException(Messages.PERSON_NOT_FOUND);","lastModifiedDate":"2021-03-21"},{"lineNumber":101,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"sarzorwyn"},"content":"        assert matchingPerson.getId().equals(id) : \"Result id does not match return id\";","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"hussain1998"},"content":"        return matchingPerson;","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":106,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":107,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":108,"author":{"gitId":"iamakilahamed"},"content":"     * Finds Person with partial match as phone queried.","lastModifiedDate":"2021-03-11"},{"lineNumber":109,"author":{"gitId":"sarzorwyn"},"content":"     * @param phone Phone being queried","lastModifiedDate":"2021-03-07"},{"lineNumber":110,"author":{"gitId":"sarzorwyn"},"content":"     * @return Person that partially matches phone","lastModifiedDate":"2021-03-07"},{"lineNumber":111,"author":{"gitId":"sarzorwyn"},"content":"     * @throws PersonNotFoundException if no person has queried id","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":113,"author":{"gitId":"sarzorwyn"},"content":"    public List\u003cPerson\u003e findPerson(Phone phone) throws PersonNotFoundException {","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"sarzorwyn"},"content":"        final List\u003cPerson\u003e matchingPersons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-07"},{"lineNumber":115,"author":{"gitId":"sarzorwyn"},"content":"        for (Person p : personList) {","lastModifiedDate":"2021-03-07"},{"lineNumber":116,"author":{"gitId":"sarzorwyn"},"content":"            if (p.getPhone().getPhoneNo().contains(phone.getPhoneNo())) {","lastModifiedDate":"2021-03-09"},{"lineNumber":117,"author":{"gitId":"sarzorwyn"},"content":"                matchingPersons.add(p);","lastModifiedDate":"2021-03-07"},{"lineNumber":118,"author":{"gitId":"sarzorwyn"},"content":"            }","lastModifiedDate":"2021-03-07"},{"lineNumber":119,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":120,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"sarzorwyn"},"content":"        if (matchingPersons.isEmpty()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"iamakilahamed"},"content":"            throw new PersonNotFoundException(Messages.PERSON_NOT_FOUND);","lastModifiedDate":"2021-03-21"},{"lineNumber":123,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"sarzorwyn"},"content":"        return matchingPersons;","lastModifiedDate":"2021-03-07"},{"lineNumber":125,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":126,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":127,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":128,"author":{"gitId":"iamakilahamed"},"content":"     * Finds Person with partial match as name queried.","lastModifiedDate":"2021-03-11"},{"lineNumber":129,"author":{"gitId":"sarzorwyn"},"content":"     * @param name Name being queried","lastModifiedDate":"2021-03-07"},{"lineNumber":130,"author":{"gitId":"sarzorwyn"},"content":"     * @return Person that partially matches name","lastModifiedDate":"2021-03-07"},{"lineNumber":131,"author":{"gitId":"sarzorwyn"},"content":"     * @throws PersonNotFoundException if no person has queried id","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":133,"author":{"gitId":"sarzorwyn"},"content":"    public List\u003cPerson\u003e findPerson(Name name) throws PersonNotFoundException {","lastModifiedDate":"2021-03-14"},{"lineNumber":134,"author":{"gitId":"sarzorwyn"},"content":"        final List\u003cPerson\u003e matchingPersons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-07"},{"lineNumber":135,"author":{"gitId":"sarzorwyn"},"content":"        for (Person p : personList) {","lastModifiedDate":"2021-03-07"},{"lineNumber":136,"author":{"gitId":"sarzorwyn"},"content":"            if (p.getName().getNameString().contains(name.getNameString())) {","lastModifiedDate":"2021-03-09"},{"lineNumber":137,"author":{"gitId":"sarzorwyn"},"content":"                matchingPersons.add(p);","lastModifiedDate":"2021-03-07"},{"lineNumber":138,"author":{"gitId":"sarzorwyn"},"content":"            }","lastModifiedDate":"2021-03-07"},{"lineNumber":139,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":140,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":141,"author":{"gitId":"sarzorwyn"},"content":"        if (matchingPersons.isEmpty()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"iamakilahamed"},"content":"            throw new PersonNotFoundException(Messages.PERSON_NOT_FOUND);","lastModifiedDate":"2021-03-21"},{"lineNumber":143,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":144,"author":{"gitId":"sarzorwyn"},"content":"        return matchingPersons;","lastModifiedDate":"2021-03-07"},{"lineNumber":145,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":146,"author":{"gitId":"sarzorwyn"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"iamakilahamed":9,"sarzorwyn":134,"hussain1998":3}},{"path":"src/main/java/seedu/duke/storage/StorageFile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sarzorwyn"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"sarzorwyn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"sarzorwyn"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"sarzorwyn"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"sarzorwyn"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"sarzorwyn"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"sarzorwyn"},"content":"import java.util.List;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"sarzorwyn"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"sarzorwyn"},"content":"/**","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"sarzorwyn"},"content":" * Manages the storing of tracking list data into a file.","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"sarzorwyn"},"content":" */","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"sarzorwyn"},"content":"public class StorageFile {","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"sarzorwyn"},"content":"    public static final String DEFAULT_STORAGE_FILEPATH \u003d \"TrackingList\";","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"sarzorwyn"},"content":"    public static final String TXT_FILE_FORMAT \u003d \".txt\";","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"sarzorwyn"},"content":"    public static final String DIRECTORY_HOME \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"sarzorwyn"},"content":"    public static final String ID_DELIMITER \u003d \"i/\";","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"sarzorwyn"},"content":"    public static final String PHONE_ENCODED_MARKER \u003d \"p/\";","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"sarzorwyn"},"content":"    public static final String CHECKED_IN_ENCODED_MARKER \u003d \"c/\";","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"sarzorwyn"},"content":"    public static final Pattern PERSON_ENCODED_FORMAT \u003d","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"sarzorwyn"},"content":"            Pattern.compile(\"(?\u003cname\u003e[^/]+)\"","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"sarzorwyn"},"content":"                    + ID_DELIMITER + \"(?\u003cid\u003e[^/]+)\"","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"sarzorwyn"},"content":"                    + PHONE_ENCODED_MARKER + \"(?\u003cphone\u003e[^/]+)\"","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"sarzorwyn"},"content":"                    + CHECKED_IN_ENCODED_MARKER + \"(?\u003ccheckedIn\u003e[^/])\");","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"sarzorwyn"},"content":"    public Path path;","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"sarzorwyn"},"content":"     * Creates Storage file with default path.","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":39,"author":{"gitId":"sarzorwyn"},"content":"    public StorageFile() throws InvalidPathException {","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"sarzorwyn"},"content":"        this(DEFAULT_STORAGE_FILEPATH);","lastModifiedDate":"2021-03-20"},{"lineNumber":41,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":42,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":43,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":44,"author":{"gitId":"sarzorwyn"},"content":"     * Creates Storage file with given file path.","lastModifiedDate":"2021-03-20"},{"lineNumber":45,"author":{"gitId":"sarzorwyn"},"content":"     * @param path The path that will be used for storage","lastModifiedDate":"2021-03-20"},{"lineNumber":46,"author":{"gitId":"sarzorwyn"},"content":"     * @throws InvalidPathException If the path specified is invalid","lastModifiedDate":"2021-03-20"},{"lineNumber":47,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":48,"author":{"gitId":"sarzorwyn"},"content":"    public StorageFile(String path) throws InvalidPathException {","lastModifiedDate":"2021-03-20"},{"lineNumber":49,"author":{"gitId":"sarzorwyn"},"content":"        this.path \u003d Paths.get(DIRECTORY_HOME,path + TXT_FILE_FORMAT);","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":51,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":52,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":53,"author":{"gitId":"sarzorwyn"},"content":"     * Loads {@code TrackingList} data from this storage file and returns it.","lastModifiedDate":"2021-03-20"},{"lineNumber":54,"author":{"gitId":"sarzorwyn"},"content":"     * @throws StorageOperationException if there were errors reading the file","lastModifiedDate":"2021-03-20"},{"lineNumber":55,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":56,"author":{"gitId":"sarzorwyn"},"content":"    public TrackingList load() throws StorageOperationException {","lastModifiedDate":"2021-03-20"},{"lineNumber":57,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":58,"author":{"gitId":"sarzorwyn"},"content":"        // If the file does not exist, return a empty Tracking List","lastModifiedDate":"2021-03-20"},{"lineNumber":59,"author":{"gitId":"sarzorwyn"},"content":"        if (!Files.exists(path) || !Files.isRegularFile(path)) {","lastModifiedDate":"2021-03-20"},{"lineNumber":60,"author":{"gitId":"sarzorwyn"},"content":"            return new TrackingList();","lastModifiedDate":"2021-03-20"},{"lineNumber":61,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":62,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":63,"author":{"gitId":"sarzorwyn"},"content":"        try {","lastModifiedDate":"2021-03-20"},{"lineNumber":64,"author":{"gitId":"sarzorwyn"},"content":"            return TrackingListDecoder.decodeTrackingList(Files.readAllLines(path));","lastModifiedDate":"2021-03-20"},{"lineNumber":65,"author":{"gitId":"sarzorwyn"},"content":"        } catch (FileNotFoundException fnfe) {","lastModifiedDate":"2021-03-20"},{"lineNumber":66,"author":{"gitId":"sarzorwyn"},"content":"            throw new AssertionError(\"A file non found scenario should have been handled before this\");","lastModifiedDate":"2021-03-20"},{"lineNumber":67,"author":{"gitId":"sarzorwyn"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-03-20"},{"lineNumber":68,"author":{"gitId":"sarzorwyn"},"content":"            throw new StorageOperationException(\"Error writing to file: \" + path);","lastModifiedDate":"2021-03-20"},{"lineNumber":69,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":70,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":71,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":72,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":73,"author":{"gitId":"sarzorwyn"},"content":"     * Loads {@code TrackingList} data to this storage file.","lastModifiedDate":"2021-03-20"},{"lineNumber":74,"author":{"gitId":"sarzorwyn"},"content":"     * @param trackingList The tracking list being saved to storage","lastModifiedDate":"2021-03-20"},{"lineNumber":75,"author":{"gitId":"sarzorwyn"},"content":"     * @throws StorageOperationException If there is errors storing into file.","lastModifiedDate":"2021-03-20"},{"lineNumber":76,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":77,"author":{"gitId":"sarzorwyn"},"content":"    public void save(TrackingList trackingList) throws StorageOperationException {","lastModifiedDate":"2021-03-20"},{"lineNumber":78,"author":{"gitId":"sarzorwyn"},"content":"        try {","lastModifiedDate":"2021-03-20"},{"lineNumber":79,"author":{"gitId":"sarzorwyn"},"content":"            List\u003cString\u003e encodedTrackingList \u003d TrackingListEncoder.encodeTrackingList(trackingList);","lastModifiedDate":"2021-03-20"},{"lineNumber":80,"author":{"gitId":"sarzorwyn"},"content":"            Files.write(path, encodedTrackingList);","lastModifiedDate":"2021-03-20"},{"lineNumber":81,"author":{"gitId":"sarzorwyn"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-03-20"},{"lineNumber":82,"author":{"gitId":"sarzorwyn"},"content":"            throw new StorageOperationException(\"Error writing to file: \" + path);","lastModifiedDate":"2021-03-20"},{"lineNumber":83,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":84,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":85,"author":{"gitId":"sarzorwyn"},"content":"}","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"iamakilahamed":1,"sarzorwyn":84}},{"path":"src/main/java/seedu/duke/storage/TrackingListDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sarzorwyn"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.person.Id;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.person.Name;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.person.Person;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.person.Phone;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"sarzorwyn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"import java.util.List;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"sarzorwyn"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"sarzorwyn"},"content":"import static seedu.duke.storage.StorageFile.PERSON_ENCODED_FORMAT;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"sarzorwyn"},"content":"/**","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"sarzorwyn"},"content":" * Decodes the storage data file into a {@code TrackingList} object.","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"sarzorwyn"},"content":" */","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"sarzorwyn"},"content":"public class TrackingListDecoder {","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"sarzorwyn"},"content":"     * Decodes {@code encodedTrackingList} into a {@code trackingList} containing the decoded persons.","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"sarzorwyn"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"sarzorwyn"},"content":"     * @throws StorageOperationException if the {@code encodedTrackingList} is in an invalid format.","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"sarzorwyn"},"content":"    public static TrackingList decodeTrackingList(List\u003cString\u003e encodedTrackingList) throws StorageOperationException {","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"sarzorwyn"},"content":"        final List\u003cPerson\u003e decodedPersons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"sarzorwyn"},"content":"        for (String encodedPerson : encodedTrackingList) {","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"sarzorwyn"},"content":"            decodedPersons.add(decodePerson(encodedPerson));","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"sarzorwyn"},"content":"        return new TrackingList(decodedPersons);","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"sarzorwyn"},"content":"     * Decodes {@code encodedPerson} to a {@code Person}.","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"sarzorwyn"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"sarzorwyn"},"content":"     * @throws StorageOperationException if the {@code encodedPerson} is in an invalid format.","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"sarzorwyn"},"content":"    private static Person decodePerson(String encodedPerson) throws StorageOperationException {","lastModifiedDate":"2021-03-20"},{"lineNumber":39,"author":{"gitId":"sarzorwyn"},"content":"        final Matcher matcher \u003d PERSON_ENCODED_FORMAT.matcher(encodedPerson);","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"sarzorwyn"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-03-20"},{"lineNumber":41,"author":{"gitId":"sarzorwyn"},"content":"            throw new StorageOperationException(\"Failed to decode encoded file!\");","lastModifiedDate":"2021-03-20"},{"lineNumber":42,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":43,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":44,"author":{"gitId":"sarzorwyn"},"content":"        Person decodedPerson \u003d new Person(","lastModifiedDate":"2021-03-20"},{"lineNumber":45,"author":{"gitId":"sarzorwyn"},"content":"                new Id(matcher.group(\"id\")),","lastModifiedDate":"2021-03-20"},{"lineNumber":46,"author":{"gitId":"sarzorwyn"},"content":"                new Name(matcher.group(\"name\")),","lastModifiedDate":"2021-03-20"},{"lineNumber":47,"author":{"gitId":"sarzorwyn"},"content":"                new Phone(matcher.group(\"phone\"))","lastModifiedDate":"2021-03-20"},{"lineNumber":48,"author":{"gitId":"sarzorwyn"},"content":"        );","lastModifiedDate":"2021-03-20"},{"lineNumber":49,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":50,"author":{"gitId":"sarzorwyn"},"content":"        // Parse the check in status of the file which is stored as int","lastModifiedDate":"2021-03-20"},{"lineNumber":51,"author":{"gitId":"sarzorwyn"},"content":"        try {","lastModifiedDate":"2021-03-20"},{"lineNumber":52,"author":{"gitId":"sarzorwyn"},"content":"            decodedPerson.setCheckedIn(Integer.parseInt(matcher.group(\"checkedIn\")) \u003d\u003d 1);","lastModifiedDate":"2021-03-20"},{"lineNumber":53,"author":{"gitId":"sarzorwyn"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-03-20"},{"lineNumber":54,"author":{"gitId":"sarzorwyn"},"content":"            throw new StorageOperationException(\"Failed to parse check in status in file!\");","lastModifiedDate":"2021-03-20"},{"lineNumber":55,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":56,"author":{"gitId":"sarzorwyn"},"content":"        return decodedPerson;","lastModifiedDate":"2021-03-20"},{"lineNumber":57,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":58,"author":{"gitId":"sarzorwyn"},"content":"}","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"iamakilahamed":1,"sarzorwyn":57}},{"path":"src/main/java/seedu/duke/storage/TrackingListEncoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sarzorwyn"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.person.Person;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"sarzorwyn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"sarzorwyn"},"content":"import java.util.List;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"sarzorwyn"},"content":"import static seedu.duke.storage.StorageFile.CHECKED_IN_ENCODED_MARKER;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"sarzorwyn"},"content":"import static seedu.duke.storage.StorageFile.ID_DELIMITER;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"import static seedu.duke.storage.StorageFile.PHONE_ENCODED_MARKER;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"sarzorwyn"},"content":"/**","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"sarzorwyn"},"content":" * Encodes the {@code TrackingList} object for storage.","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"sarzorwyn"},"content":" */","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"sarzorwyn"},"content":"public class TrackingListEncoder {","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"sarzorwyn"},"content":"     * Encodes all Person in given trackingList to a list of encoded string for storage.","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"sarzorwyn"},"content":"     * @param trackingList List of Persons to be encoded","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"sarzorwyn"},"content":"     * @return Encoded list of Persons","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"sarzorwyn"},"content":"    public static List\u003cString\u003e encodeTrackingList(TrackingList trackingList) {","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"sarzorwyn"},"content":"        final List\u003cString\u003e encodedPersons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.listPerson().forEach(person -\u003e encodedPersons.add(encodePersonToString(person)));","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"sarzorwyn"},"content":"        return encodedPersons;","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"sarzorwyn"},"content":"     * Encodes Person into a storage string representation.","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"sarzorwyn"},"content":"    private static String encodePersonToString(Person person) {","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"sarzorwyn"},"content":"        String encodedPerson \u003d person.getName()","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"sarzorwyn"},"content":"                + ID_DELIMITER","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"sarzorwyn"},"content":"                + person.getId()","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"sarzorwyn"},"content":"                + PHONE_ENCODED_MARKER","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"sarzorwyn"},"content":"                + person.getPhone()","lastModifiedDate":"2021-03-20"},{"lineNumber":39,"author":{"gitId":"sarzorwyn"},"content":"                + CHECKED_IN_ENCODED_MARKER","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"sarzorwyn"},"content":"                + (person.getCheckedIn() ? 1 : 0);","lastModifiedDate":"2021-03-20"},{"lineNumber":41,"author":{"gitId":"sarzorwyn"},"content":"        return encodedPerson;","lastModifiedDate":"2021-03-20"},{"lineNumber":42,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":43,"author":{"gitId":"sarzorwyn"},"content":"}","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"sarzorwyn":43}},{"path":"src/main/java/seedu/duke/ui/TextUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.commands.CommandOutput;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"limwenfeng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"limwenfeng"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"limwenfeng"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"import java.util.List;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"limwenfeng"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"limwenfeng"},"content":"public class TextUi {","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"limwenfeng"},"content":"    public static final String PRINT_LISTALL_FORMAT \u003d \"|%-3s||%-15s||%-8s||%-10s||%-10s|\";","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"limwenfeng"},"content":"    public static final String PRINT_LIST_FORMAT \u003d  \"|%-3s||%-16s||%-12s||%-17s|\";","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"limwenfeng"},"content":"    private final PrintStream out;","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"limwenfeng"},"content":"    private final Scanner in;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"limwenfeng"},"content":"    private static final Logger logger \u003d Logger.getLogger(TextUi.class.getSimpleName());","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"limwenfeng"},"content":"    private static final String DIVIDER \u003d \"\u003d\".repeat(57);","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"limwenfeng"},"content":"    private static final String SINGLE_DIVIDER \u003d \"-\".repeat(57);","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"    public TextUi() {","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"        this(System.in, System.out);","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"limwenfeng"},"content":"    public TextUi(InputStream in, PrintStream out) {","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"limwenfeng"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"limwenfeng"},"content":"        this.out \u003d out;","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"limwenfeng"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"limwenfeng"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"limwenfeng"},"content":"     * Does not return any object.","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"limwenfeng"},"content":"     * Output text to UI based on the type of commandOutput object passed in.","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"limwenfeng"},"content":"     * listall command and list command prints out a list of persons object.","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"limwenfeng"},"content":"     * find command prints out a person object.","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"limwenfeng"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"limwenfeng"},"content":"     * @param commandOutput command object containing data queried by user","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"limwenfeng"},"content":"     *                      and feedback to user.","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"limwenfeng"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"hussain1998"},"content":"    public void printReaction(CommandOutput commandOutput) {","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"JonathanKhooTY"},"content":"        String command \u003d commandOutput.command;","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"JonathanKhooTY"},"content":"        switch (command) {","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"JonathanKhooTY"},"content":"        case \"listall\":","lastModifiedDate":"2021-03-19"},{"lineNumber":46,"author":{"gitId":"limwenfeng"},"content":"            assert commandOutput.persons !\u003d null : \"Expect NoPersonFound Exception,\";","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"hussain1998"},"content":"            printList(commandOutput.persons);","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"JonathanKhooTY"},"content":"            break;","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"JonathanKhooTY"},"content":"        case \"list\":","lastModifiedDate":"2021-03-19"},{"lineNumber":50,"author":{"gitId":"limwenfeng"},"content":"            assert commandOutput.persons !\u003d null : \"Expect NoPersonFound Exception.\";","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"JonathanKhooTY"},"content":"            printCheckedInList(commandOutput.persons);","lastModifiedDate":"2021-03-19"},{"lineNumber":52,"author":{"gitId":"JonathanKhooTY"},"content":"            break;","lastModifiedDate":"2021-03-19"},{"lineNumber":53,"author":{"gitId":"limwenfeng"},"content":"        case \"find\":","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"limwenfeng"},"content":"            assert commandOutput.person !\u003d null : \"Expect NoPersonFound Exception.\";","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"limwenfeng"},"content":"            printFindList(commandOutput.person);","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"limwenfeng"},"content":"            break;","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"JonathanKhooTY"},"content":"        default:","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"hussain1998"},"content":"            printDivider();","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"limwenfeng"},"content":"            out.println(commandOutput.messageToUser);","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"hussain1998"},"content":"            printDivider();","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"hussain1998"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"limwenfeng"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"limwenfeng"},"content":"     * Prints out a list of person objects with respective attributes such as","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"limwenfeng"},"content":"     * Name, Id, Phone and Checked In status.","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"limwenfeng"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"limwenfeng"},"content":"     * @param persons person object encapsulated in CommandOutput object.","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"limwenfeng"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"hussain1998"},"content":"    private void printList(List\u003cPerson\u003e persons) {","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"limwenfeng"},"content":"        assert persons !\u003d null : \"Does not print null\";","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"limwenfeng"},"content":"        out.printf((PRINT_LISTALL_FORMAT) + \"%n\", \" \", \"Name\", \"Id\", \"Phone\", \"Checked In\");","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"limwenfeng"},"content":"        printDivider();","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"limwenfeng"},"content":"        printPersonsInListWithStatus(persons);","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":77,"author":{"gitId":"limwenfeng"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"limwenfeng"},"content":"     * Prints out a list of person objects with respective attributes such as","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"limwenfeng"},"content":"     * Name, Id and Phone.","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"limwenfeng"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"limwenfeng"},"content":"     * @param persons person object encapsulated in CommandOutput object.","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"limwenfeng"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"JonathanKhooTY"},"content":"    private void printCheckedInList(List\u003cPerson\u003e persons) {","lastModifiedDate":"2021-03-19"},{"lineNumber":84,"author":{"gitId":"limwenfeng"},"content":"        assert persons !\u003d null : \"Does not print null\";","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"limwenfeng"},"content":"        out.printf((PRINT_LIST_FORMAT) + \"%n\", \" \", \"Name\", \"Id\", \"Phone\");","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"limwenfeng"},"content":"        printDivider();","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"limwenfeng"},"content":"        printPersonsInListWithoutStatus(persons);","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"limwenfeng"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"limwenfeng"},"content":"    private void printPersonsInListWithoutStatus(List\u003cPerson\u003e persons) {","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"JonathanKhooTY"},"content":"        for (int i \u003d 0; i \u003c persons.size(); ++i) {","lastModifiedDate":"2021-03-19"},{"lineNumber":92,"author":{"gitId":"limwenfeng"},"content":"            Person peronSelected \u003d persons.get(i);","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"limwenfeng"},"content":"            String name \u003d peronSelected.getName().getNameString();","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"limwenfeng"},"content":"            String idString \u003d peronSelected.getId().getIdString();","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"limwenfeng"},"content":"            String phoneString \u003d (!peronSelected.getPhone().getPhoneNo().equals(\"null\"))","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"limwenfeng"},"content":"                    ? \"--\" : peronSelected.getPhone().getPhoneNo();","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"limwenfeng"},"content":"            out.printf((PRINT_LIST_FORMAT) + \"%n\", i + 1, name, idString, phoneString);","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"limwenfeng"},"content":"            printSingleDivider();","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"hussain1998"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"limwenfeng"},"content":"    private void printFindList(Person person) {","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"limwenfeng"},"content":"        assert person !\u003d null : \"Only prints Person\";","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"limwenfeng"},"content":"        out.printf((PRINT_LISTALL_FORMAT) + \"%n\", \" \", \"Name\", \"Id\", \"Phone\", \"Checked In\");","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"limwenfeng"},"content":"        printDivider();","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"limwenfeng"},"content":"        String name \u003d person.getName().getNameString();","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"limwenfeng"},"content":"        String idString \u003d person.getId().getIdString();","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"limwenfeng"},"content":"        String phoneString \u003d (!person.getPhone().getPhoneNo().equals(\"null\"))","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"limwenfeng"},"content":"                ? \"--\" : person.getPhone().getPhoneNo();","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"limwenfeng"},"content":"        String statusString \u003d (person.getCheckedIn()) ? \"Yes\" : \"No\";","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"limwenfeng"},"content":"        out.printf((PRINT_LISTALL_FORMAT) + \"%n\", 1, name, idString, phoneString, statusString);","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"limwenfeng"},"content":"        printSingleDivider();","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"limwenfeng"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"limwenfeng"},"content":"    private void printPersonsInListWithStatus(List\u003cPerson\u003e persons) {","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"limwenfeng"},"content":"        for (int i \u003d 0; i \u003c persons.size(); ++i) {","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"limwenfeng"},"content":"            Person personSelected \u003d persons.get(i);","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"limwenfeng"},"content":"            String name \u003d personSelected.getName().getNameString();","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"limwenfeng"},"content":"            String idString \u003d personSelected.getId().getIdString();","lastModifiedDate":"2021-03-24"},{"lineNumber":121,"author":{"gitId":"limwenfeng"},"content":"            String phoneString \u003d (!personSelected.getPhone().getPhoneNo().equals(\"null\"))","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"limwenfeng"},"content":"                    ? \"--\" : personSelected.getPhone().getPhoneNo();","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"limwenfeng"},"content":"            String statusString \u003d (personSelected.getCheckedIn()) ? \"Yes\" : \"No\";","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"limwenfeng"},"content":"            out.printf((PRINT_LISTALL_FORMAT) + \"%n\", i + 1, name, idString, phoneString, statusString);","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"limwenfeng"},"content":"            printSingleDivider();","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"limwenfeng"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"limwenfeng"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"hussain1998"},"content":"    public void showWelcomeMessage(String version) {","lastModifiedDate":"2021-03-10"},{"lineNumber":130,"author":{"gitId":"limwenfeng"},"content":"        printDivider();","lastModifiedDate":"2021-03-09"},{"lineNumber":131,"author":{"gitId":"limwenfeng"},"content":"        assert version instanceof String : \"Version has to be a string\";","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"hussain1998"},"content":"        out.println(\"Welcome to Safest Entry Tracker - Version \" + version);","lastModifiedDate":"2021-03-13"},{"lineNumber":133,"author":{"gitId":"limwenfeng"},"content":"        // for next patch update - Storage class - dataStorageSuccessful()","lastModifiedDate":"2021-03-09"},{"lineNumber":134,"author":{"gitId":"limwenfeng"},"content":"        out.println(\"Data successfully loaded from storage file path.\");","lastModifiedDate":"2021-03-09"},{"lineNumber":135,"author":{"gitId":"limwenfeng"},"content":"        printDivider();","lastModifiedDate":"2021-03-09"},{"lineNumber":136,"author":{"gitId":"limwenfeng"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":137,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":138,"author":{"gitId":"hussain1998"},"content":"    private void printDivider() {","lastModifiedDate":"2021-03-10"},{"lineNumber":139,"author":{"gitId":"limwenfeng"},"content":"        out.println(DIVIDER);","lastModifiedDate":"2021-03-09"},{"lineNumber":140,"author":{"gitId":"limwenfeng"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":141,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":142,"author":{"gitId":"limwenfeng"},"content":"    private void printSingleDivider() {","lastModifiedDate":"2021-03-23"},{"lineNumber":143,"author":{"gitId":"limwenfeng"},"content":"        out.println(SINGLE_DIVIDER);","lastModifiedDate":"2021-03-23"},{"lineNumber":144,"author":{"gitId":"limwenfeng"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":145,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":146,"author":{"gitId":"limwenfeng"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":147,"author":{"gitId":"limwenfeng"},"content":"     * Takes in user input from Scanner Object.","lastModifiedDate":"2021-03-23"},{"lineNumber":148,"author":{"gitId":"limwenfeng"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":149,"author":{"gitId":"limwenfeng"},"content":"     * @return String type of user input.","lastModifiedDate":"2021-03-23"},{"lineNumber":150,"author":{"gitId":"limwenfeng"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":151,"author":{"gitId":"hussain1998"},"content":"    public String getUserInput() {","lastModifiedDate":"2021-03-10"},{"lineNumber":152,"author":{"gitId":"limwenfeng"},"content":"        String rawInput \u003d in.nextLine();","lastModifiedDate":"2021-03-09"},{"lineNumber":153,"author":{"gitId":"limwenfeng"},"content":"        echoInput(rawInput);","lastModifiedDate":"2021-03-09"},{"lineNumber":154,"author":{"gitId":"limwenfeng"},"content":"        return rawInput;","lastModifiedDate":"2021-03-09"},{"lineNumber":155,"author":{"gitId":"limwenfeng"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":156,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":157,"author":{"gitId":"limwenfeng"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":158,"author":{"gitId":"limwenfeng"},"content":"     * Allow users to verify input or commands.","lastModifiedDate":"2021-03-23"},{"lineNumber":159,"author":{"gitId":"limwenfeng"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":160,"author":{"gitId":"limwenfeng"},"content":"     * @param rawInput Input from user.","lastModifiedDate":"2021-03-23"},{"lineNumber":161,"author":{"gitId":"limwenfeng"},"content":"     * @return Input from user.","lastModifiedDate":"2021-03-23"},{"lineNumber":162,"author":{"gitId":"limwenfeng"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":163,"author":{"gitId":"limwenfeng"},"content":"    public String echoInput(String rawInput) {","lastModifiedDate":"2021-03-11"},{"lineNumber":164,"author":{"gitId":"limwenfeng"},"content":"        out.println(\"Command Entered: \" + rawInput);","lastModifiedDate":"2021-03-09"},{"lineNumber":165,"author":{"gitId":"limwenfeng"},"content":"        return rawInput;","lastModifiedDate":"2021-03-11"},{"lineNumber":166,"author":{"gitId":"limwenfeng"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":167,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":168,"author":{"gitId":"limwenfeng"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":169,"author":{"gitId":"limwenfeng"},"content":"     * Takes in exception and print error message on UI.","lastModifiedDate":"2021-03-23"},{"lineNumber":170,"author":{"gitId":"limwenfeng"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":171,"author":{"gitId":"limwenfeng"},"content":"     * @param error Exception thrown from respective command.","lastModifiedDate":"2021-03-23"},{"lineNumber":172,"author":{"gitId":"limwenfeng"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":173,"author":{"gitId":"limwenfeng"},"content":"    public void notifyErrorToUser(Exception error) {","lastModifiedDate":"2021-03-23"},{"lineNumber":174,"author":{"gitId":"limwenfeng"},"content":"        out.println(error.getMessage());","lastModifiedDate":"2021-03-21"},{"lineNumber":175,"author":{"gitId":"limwenfeng"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":176,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":177,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":178,"author":{"gitId":"limwenfeng"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"JonathanKhooTY":11,"limwenfeng":142,"hussain1998":25}},{"path":"src/test/java/seedu/duke/commands/CheckInCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SamplePersons.JOHN;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SamplePersons.JOHN_DIFF_ID;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SamplePersons.JACK_NO_PHONE;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SampleTrackingList.SAMPLE_TRACKING_LIST;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"public class CheckInCommandTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"    public void testCheckInWithNameIdPhone() {","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"        CheckInCommand checkin \u003d new CheckInCommand(JOHN.getId().toString(), JOHN.getName().toString(),","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"                JOHN.getPhone().toString());","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"        checkin.execute(SAMPLE_TRACKING_LIST);","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"        assertTrue(checkin.getToCheckIn().getCheckedIn());","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"    public void testCheckInWithNoPhone() {","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"        CheckInCommand checkin \u003d new CheckInCommand(JACK_NO_PHONE.getId().toString(),","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"                JACK_NO_PHONE.getName().toString(), JACK_NO_PHONE.getPhone().toString());","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"        checkin.execute(SAMPLE_TRACKING_LIST);","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"        assertTrue(checkin.getToCheckIn().getCheckedIn());","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"    public void testCheckInWithSameNameDifferentId() {","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"        CheckInCommand checkin \u003d new CheckInCommand(JOHN_DIFF_ID.getId().toString(),","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"                JOHN_DIFF_ID.getName().toString(), JOHN_DIFF_ID.getPhone().toString());","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"        checkin.execute(SAMPLE_TRACKING_LIST);","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"        assertTrue(checkin.getToCheckIn().getCheckedIn());","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"JonathanKhooTY":12,"iamakilahamed":25}},{"path":"src/test/java/seedu/duke/commands/CheckoutCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SampleTrackingList.SAMPLE_TRACKING_LIST;","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"public class CheckoutCommandTest {","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    public void testCheckoutWithNameAndId() throws PersonNotFoundException {","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"        CheckoutCommand checkout \u003d new CheckoutCommand(\"665B\",\"Alice\");","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"        checkout.execute(SAMPLE_TRACKING_LIST);","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"        assertFalse(checkout.getToCheckout().getCheckedIn());","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"    public void testCheckoutWithId() throws PersonNotFoundException {","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"        CheckoutCommand checkout \u003d new CheckoutCommand(\"126C\", null);","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"        checkout.execute(SAMPLE_TRACKING_LIST);","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"        assertFalse(checkout.getToCheckout().getCheckedIn());","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"    public void testCheckoutPersonNotFound() {","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"        CheckoutCommand checkout \u003d new CheckoutCommand(\"230C\", \"Mary\");","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"        Throwable exception \u003d assertThrows(PersonNotFoundException.class, () -\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"                checkout.execute(SAMPLE_TRACKING_LIST));","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"        assertEquals(Messages.PERSON_NOT_FOUND, exception.getMessage());","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"iamakilahamed":37}},{"path":"src/test/java/seedu/duke/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SamplePersons.ALICE;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SamplePersons.JOHN;","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SamplePersons.MARY;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"public class ClearCommandTest {","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"    private final TrackingList trackingList \u003d new TrackingList(ALICE, JOHN, MARY);","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    public void testClear() {","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"        ClearCommand clear \u003d new ClearCommand();","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"        clear.execute(trackingList);","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"        assertEquals(0, trackingList.getSize());","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"iamakilahamed":22}},{"path":"src/test/java/seedu/duke/commands/EditMaxCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.location.Location;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.testutil.LocationBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SampleTrackingList.SAMPLE_TRACKING_LIST;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"public class EditMaxCommandTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    private static final Location THEME_PARK \u003d new LocationBuilder().withLocationName(\"Universal Studios Singapore\")","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"            .withMaxCapacity(500).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    public void testEditMax() {","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"        int currentMaxCapacity \u003d THEME_PARK.getMaxCapacity();","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"        EditMaxCommand editMax \u003d new EditMaxCommand(\"1000\", THEME_PARK);","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"        editMax.execute(SAMPLE_TRACKING_LIST);","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"        int newMaxCapacity \u003d THEME_PARK.getMaxCapacity();","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"        assertNotEquals(currentMaxCapacity, newMaxCapacity);","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"iamakilahamed":24}},{"path":"src/test/java/seedu/duke/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SampleTrackingList.SAMPLE_TRACKING_LIST;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"public class ExitCommandTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    public void testExit() {","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"        ExitCommand exit \u003d new ExitCommand();","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"        String exitMessage \u003d exit.execute(SAMPLE_TRACKING_LIST).messageToUser;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"        assertEquals(\"Exiting Safest Entry Tracker...\", exitMessage);","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"iamakilahamed":18}},{"path":"src/test/java/seedu/duke/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SamplePersons.ALICE;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SamplePersons.BOB;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SampleTrackingList.SAMPLE_TRACKING_LIST;","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"public class FindCommandTest {","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    public void testFindNotCheckedIn() throws PersonNotFoundException {","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"        ALICE.setCheckedIn(false);","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"        FindCommand find \u003d new FindCommand(\"665B\");","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"        boolean foundPersonCheckedInStatus \u003d find.execute(SAMPLE_TRACKING_LIST).person.getCheckedIn();","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"        assertFalse(foundPersonCheckedInStatus);","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"    public void testFindCheckedIn() throws PersonNotFoundException {","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"        BOB.setCheckedIn(true);","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"        FindCommand find \u003d new FindCommand(\"126C\");","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"        boolean foundPersonCheckedInStatus \u003d find.execute(SAMPLE_TRACKING_LIST).person.getCheckedIn();","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"        assertTrue(foundPersonCheckedInStatus);","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"    public void testFindPersonNotFound() {","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"        FindCommand find \u003d new FindCommand(\"230C\");","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"        Throwable exception \u003d assertThrows(PersonNotFoundException.class, () -\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":"                find.execute(SAMPLE_TRACKING_LIST));","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"        assertEquals(Messages.PERSON_NOT_FOUND, exception.getMessage());","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"iamakilahamed":41}},{"path":"src/test/java/seedu/duke/commands/ListCheckedInCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.person.Person;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import java.util.List;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SampleTrackingList.SAMPLE_TRACKING_LIST;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"public class ListCheckedInCommandTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"    public void testListCheckedIn() {","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"        ListCheckedInCommand listCheckedIn \u003d new ListCheckedInCommand();","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"        List\u003cPerson\u003e checkedInList \u003d listCheckedIn.execute(SAMPLE_TRACKING_LIST).persons;","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"        int checkedInCount \u003d 0;","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"        for (Person person : SAMPLE_TRACKING_LIST.listPerson()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"            if (person.getCheckedIn()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"                checkedInCount++;","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"            }","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"        assertEquals(checkedInCount, checkedInList.size());","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"iamakilahamed":26}},{"path":"src/test/java/seedu/duke/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.person.Person;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import java.util.List;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SampleTrackingList.SAMPLE_TRACKING_LIST;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"public class ListCommandTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"    public void testList() {","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"        ListCommand listCommand \u003d new ListCommand();","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"        List\u003cPerson\u003e list \u003d listCommand.execute(SAMPLE_TRACKING_LIST).persons;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"        assertEquals(SAMPLE_TRACKING_LIST.getSize(), list.size());","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"iamakilahamed":19}},{"path":"src/test/java/seedu/duke/location/LocationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.location;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SampleLocations.BIG_MALL;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SampleLocations.CINEMA;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SampleLocations.EVENT;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SampleLocations.FOOD_COURT;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SampleLocations.SCHOOL;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SampleLocations.SMALL_SHOP;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"public class LocationTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"    public void testGetLocationName() {","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"        assertEquals(\"National University of Singapore\", SCHOOL.getLocationName());","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"        assertNotEquals(\"Daiso\", SMALL_SHOP.getLocationName());","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"    public void testSetLocationName() {","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"        String newLocationName \u003d \"Golden Village\";","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"        CINEMA.setLocationName(newLocationName);","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"        assertEquals(newLocationName, CINEMA.getLocationName());","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"    public void testGetMaxCapacity() {","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"        assertEquals(250, EVENT.getMaxCapacity());","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"        assertNotEquals(1, BIG_MALL.getMaxCapacity());","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"    public void testSetMaxCapacity() {","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":"        int newMaxCapacity \u003d 30;","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"        FOOD_COURT.setMaxCapacity(newMaxCapacity);","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":"        assertEquals(newMaxCapacity, FOOD_COURT.getMaxCapacity());","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"iamakilahamed":42}},{"path":"src/test/java/seedu/duke/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.CheckInCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.CheckoutCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidCommandException;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.NoArgumentPassedException;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.WrongFlagException;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.person.Id;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.person.Name;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.person.Phone;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"import java.util.Locale;","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":"import static seedu.duke.testutil.SamplePersons.JOHN;","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"import static seedu.duke.testutil.SamplePersons.JOHN_DIFF_ID;","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":"import static seedu.duke.testutil.SamplePersons.JOHN_NO_PHONE;","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"JonathanKhooTY"},"content":"import static seedu.duke.testutil.SampleTrackingList.SAMPLE_TRACKING_LIST;","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"JonathanKhooTY"},"content":"public class ParserTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"JonathanKhooTY"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"JonathanKhooTY"},"content":"    public void checkInParser_parsedCorrectly() {","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"JonathanKhooTY"},"content":"        String name \u003d JOHN.getName().getNameString().toLowerCase();","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"JonathanKhooTY"},"content":"        String id \u003d JOHN.getId().getIdString();","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"JonathanKhooTY"},"content":"        String[] result \u003d {name,id};","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"JonathanKhooTY"},"content":"        assertArrayEquals(Parser.splitTextIntoTwoFields(\"John 123A\"), result);","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"JonathanKhooTY"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"JonathanKhooTY"},"content":"    public void parseCheckIn_noName() throws WrongFlagException, NoArgumentPassedException {","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"JonathanKhooTY"},"content":"        Throwable exception \u003d assertThrows(NoArgumentPassedException.class, () -\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"JonathanKhooTY"},"content":"                Parser.parseCheckIn(\"\"));","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(exception.getMessage(), Messages.NO_ARGUMENT);","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"JonathanKhooTY"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"JonathanKhooTY"},"content":"    public void parseCheckIn_missingFlags() {","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"JonathanKhooTY"},"content":"        Throwable exception \u003d assertThrows(WrongFlagException.class, () -\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"JonathanKhooTY"},"content":"                Parser.parseCheckIn(\"n/Jon 123\"));","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(exception.getMessage(), Messages.WRONG_FLAG);","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"JonathanKhooTY"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"JonathanKhooTY"},"content":"    public void parseCheckIn_testCommand() throws NoArgumentPassedException,","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"JonathanKhooTY"},"content":"            WrongFlagException, InvalidCommandException {","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"JonathanKhooTY"},"content":"        CheckInCommand checkInCommand \u003d (CheckInCommand) Parser.parseCommand(\"checkin n/John i/123A\");","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(\"checkin\", checkInCommand.COMMAND);","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"JonathanKhooTY"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"JonathanKhooTY"},"content":"    public void parseCheckOut_missingFlags() {","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"JonathanKhooTY"},"content":"        Throwable exception \u003d assertThrows(NoArgumentPassedException.class, () -\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"JonathanKhooTY"},"content":"                Parser.parseCheckOut(\"\"));","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(exception.getMessage(), Messages.NO_ARGUMENT);","lastModifiedDate":"2021-03-22"},{"lineNumber":68,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":69,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"JonathanKhooTY"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":71,"author":{"gitId":"JonathanKhooTY"},"content":"    public void parseCheckOut_testCommand() throws NoArgumentPassedException,","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"JonathanKhooTY"},"content":"            WrongFlagException, InvalidCommandException {","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"JonathanKhooTY"},"content":"        CheckoutCommand checkoutCommand \u003d (CheckoutCommand) Parser.parseCommand(\"checkout n/John i/123A\");","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(\"checkout\", checkoutCommand.COMMAND);","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"JonathanKhooTY":78}},{"path":"src/test/java/seedu/duke/person/IdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package seedu.duke.person;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"class IdTest {","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"    void testEquals() {","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"        Id id1 \u003d new Id(\"123A\");","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"        Id id2 \u003d new Id(\"123A\");","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"        Id id3 \u003d new Id(\"456B\");","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"        assertTrue(id1.equals(id1));","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"        assertTrue(id1.equals(id2));","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"        assertFalse(id1.equals(id3));","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"        assertFalse(id1.equals(\"test string\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"hussain1998":22}},{"path":"src/test/java/seedu/duke/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package seedu.duke.person;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"import static seedu.duke.testutil.SamplePersons.JOHN;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"import static seedu.duke.testutil.SamplePersons.JOHN_DIFF_ID;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"import static seedu.duke.testutil.SamplePersons.JOHN_NO_PHONE;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"public class PersonTest {","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"    void testEquals() {","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"        assertTrue(JOHN.equals(JOHN));","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"        assertTrue(JOHN.equals(JOHN_NO_PHONE));","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"        assertFalse(JOHN.equals(JOHN_DIFF_ID));","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"        assertFalse(JOHN.equals(\"test string\"));","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"sarzorwyn":1,"hussain1998":19}},{"path":"src/test/java/seedu/duke/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package seedu.duke.person;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"import static seedu.duke.person.Phone.isValidPhone;","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"import static seedu.duke.testutil.SamplePersons.JOHN;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"import static seedu.duke.testutil.SamplePersons.JOHN_DIFF_ID;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"import static seedu.duke.testutil.SamplePersons.JOHN_NO_PHONE;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"class PhoneTest {","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"    static final String CORRECT_PHONE \u003d \"91234567\";","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"    static final String WRONG_LEN_PHONE \u003d \"9123456\";","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"    static final String NON_DIGITS_PHONE \u003d \"9123456a\";","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"    static final Phone JOHN_PHONE \u003d JOHN.getPhone();","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"    static final Phone JOHN_DIFF_ID_PHONE \u003d JOHN_DIFF_ID.getPhone();","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"    static final Phone NO_PHONE_JOHN_PHONE \u003d JOHN_NO_PHONE.getPhone();","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"    void testValidPhone() {","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"hussain1998"},"content":"        assertTrue(isValidPhone(CORRECT_PHONE));","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"        assertFalse(isValidPhone(WRONG_LEN_PHONE));","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"hussain1998"},"content":"        assertFalse(isValidPhone(NON_DIGITS_PHONE));","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"hussain1998"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"hussain1998"},"content":"    void getPhoneNo() {","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"hussain1998"},"content":"        assertEquals(JOHN_PHONE.getPhoneNo(), JOHN_DIFF_ID_PHONE.getPhoneNo());","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"hussain1998"},"content":"        assertNotEquals(JOHN_PHONE.getPhoneNo(), NO_PHONE_JOHN_PHONE.getPhoneNo());","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"hussain1998"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"hussain1998"},"content":"    void setPhoneNo() {","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"hussain1998"},"content":"        NO_PHONE_JOHN_PHONE.setPhoneNo(CORRECT_PHONE);","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"hussain1998"},"content":"        assertEquals(NO_PHONE_JOHN_PHONE.getPhoneNo(), CORRECT_PHONE);","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"hussain1998"},"content":"        NO_PHONE_JOHN_PHONE.setPhoneNo(null);","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"hussain1998"},"content":"        assertNull(NO_PHONE_JOHN_PHONE.getPhoneNo());","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"hussain1998"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"hussain1998"},"content":"    void isAvailable() {","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"hussain1998"},"content":"        assertFalse(NO_PHONE_JOHN_PHONE.isAvailable());","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"hussain1998"},"content":"        assertTrue(JOHN_PHONE.isAvailable());","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"hussain1998"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"hussain1998"},"content":"    void testToString() {","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"hussain1998"},"content":"        assertEquals(JOHN_PHONE.getPhoneNo(), JOHN_PHONE.toString());","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"hussain1998"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"hussain1998":56}},{"path":"src/test/java/seedu/duke/person/TrackingListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sarzorwyn"},"content":"package seedu.duke.person;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"sarzorwyn"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"sarzorwyn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"sarzorwyn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"sarzorwyn"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"sarzorwyn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"sarzorwyn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"sarzorwyn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"sarzorwyn"},"content":"import static seedu.duke.testutil.SamplePersons.JOHN;","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"sarzorwyn"},"content":"import static seedu.duke.testutil.SamplePersons.ALICE;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"sarzorwyn"},"content":"import static seedu.duke.testutil.SamplePersons.BOB;","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"sarzorwyn"},"content":"import static seedu.duke.testutil.SamplePersons.MARY;","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"sarzorwyn"},"content":"public class TrackingListTest {","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"sarzorwyn"},"content":"    private TrackingList trackingList;","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"sarzorwyn"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"sarzorwyn"},"content":"    public void initTrackingList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"sarzorwyn"},"content":"        trackingList \u003d new TrackingList();","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"sarzorwyn"},"content":"    public void testConstructor() {","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"sarzorwyn"},"content":"        TrackingList constructedList \u003d new TrackingList(JOHN, MARY, ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"sarzorwyn"},"content":"        assertTrue(constructedList.contains(JOHN));","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"sarzorwyn"},"content":"        assertTrue(constructedList.contains(MARY));","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"sarzorwyn"},"content":"        assertTrue(constructedList.contains(ALICE));","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"sarzorwyn"},"content":"        assertFalse(constructedList.contains(BOB));","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"sarzorwyn"},"content":"    public void testContains() {","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(BOB);","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"sarzorwyn"},"content":"        assertTrue(trackingList.contains(ALICE));","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"sarzorwyn"},"content":"        assertFalse(trackingList.contains(JOHN));","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"sarzorwyn"},"content":"        assertTrue(trackingList.contains(BOB));","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"sarzorwyn"},"content":"    public void testDelete() {","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(BOB);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(MARY);","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.delete(ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"sarzorwyn"},"content":"        int expectedBobIndex \u003d 0;","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.delete(expectedBobIndex);","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"sarzorwyn"},"content":"        assertFalse(trackingList.contains(ALICE));","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"sarzorwyn"},"content":"        assertFalse(trackingList.contains(BOB));","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"sarzorwyn"},"content":"        assertTrue(trackingList.contains(MARY));","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"sarzorwyn"},"content":"    public void testGetPerson() {","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(JOHN);","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(MARY);","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"sarzorwyn"},"content":"        int expectedJohnIndex \u003d 0;","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"sarzorwyn"},"content":"        assertEquals(JOHN,trackingList.getPerson(expectedJohnIndex));","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"sarzorwyn"},"content":"    public void testListPerson() {","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(BOB);","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(MARY);","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"sarzorwyn"},"content":"        List\u003cPerson\u003e returnedList \u003d trackingList.listPerson();","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"sarzorwyn"},"content":"        assertTrue(returnedList.contains(ALICE));","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"sarzorwyn"},"content":"        assertTrue(returnedList.contains(BOB));","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"sarzorwyn"},"content":"        assertTrue(returnedList.contains(MARY));","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"sarzorwyn"},"content":"    public void testGetSize() {","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"sarzorwyn"},"content":"        int expectedSize \u003d 0;","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"sarzorwyn"},"content":"        assertEquals(trackingList.getSize(), expectedSize);","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"sarzorwyn"},"content":"        expectedSize +\u003d 1;","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"sarzorwyn"},"content":"        assertEquals(trackingList.getSize(), expectedSize);","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(BOB);","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"sarzorwyn"},"content":"        expectedSize +\u003d 1;","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"sarzorwyn"},"content":"        assertEquals(trackingList.getSize(), expectedSize);","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"sarzorwyn"},"content":"    public void testClear() {","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(BOB);","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(MARY);","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.clear();","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"sarzorwyn"},"content":"        assertFalse(trackingList.contains(ALICE));","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"sarzorwyn"},"content":"        assertFalse(trackingList.contains(BOB));","lastModifiedDate":"2021-03-11"},{"lineNumber":105,"author":{"gitId":"sarzorwyn"},"content":"        assertFalse(trackingList.contains(MARY));","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"sarzorwyn"},"content":"        int expectedSize \u003d 0;","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"sarzorwyn"},"content":"        assertEquals(trackingList.getSize(), expectedSize);","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"sarzorwyn"},"content":"    public void findExactPerson_idInTrackingList_success() throws Exception {","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(BOB);","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"sarzorwyn"},"content":"        assertEquals(trackingList.findExactPerson(BOB.getId()), BOB);","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"sarzorwyn"},"content":"    public void findExactPerson_idNotInTrackingList_exceptionThrown() {","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(BOB);","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"sarzorwyn"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e trackingList.findExactPerson(MARY.getId()));","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"sarzorwyn"},"content":"    public void findExactPerson_phoneInTrackingList_success() throws Exception {","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(BOB);","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"sarzorwyn"},"content":"        assertTrue(trackingList.findPerson(BOB.getPhone()).contains(BOB));","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":136,"author":{"gitId":"sarzorwyn"},"content":"    public void findPerson_phoneNotInTrackingList_exceptionThrown() {","lastModifiedDate":"2021-03-23"},{"lineNumber":137,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(BOB);","lastModifiedDate":"2021-03-23"},{"lineNumber":139,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":140,"author":{"gitId":"sarzorwyn"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e trackingList.findPerson(MARY.getPhone()));","lastModifiedDate":"2021-03-23"},{"lineNumber":141,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":142,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":143,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":144,"author":{"gitId":"sarzorwyn"},"content":"    public void findExactPerson_nameInTrackingList_success() throws Exception {","lastModifiedDate":"2021-03-23"},{"lineNumber":145,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":146,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(BOB);","lastModifiedDate":"2021-03-23"},{"lineNumber":147,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":148,"author":{"gitId":"sarzorwyn"},"content":"        assertTrue(trackingList.findPerson(BOB.getName()).contains(BOB));","lastModifiedDate":"2021-03-23"},{"lineNumber":149,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":150,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":151,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":152,"author":{"gitId":"sarzorwyn"},"content":"    public void findPerson_nameNotInTrackingList_exceptionThrown() {","lastModifiedDate":"2021-03-23"},{"lineNumber":153,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":154,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(BOB);","lastModifiedDate":"2021-03-23"},{"lineNumber":155,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":156,"author":{"gitId":"sarzorwyn"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e trackingList.findPerson(MARY.getName()));","lastModifiedDate":"2021-03-23"},{"lineNumber":157,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":158,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":159,"author":{"gitId":"sarzorwyn"},"content":"    @AfterEach","lastModifiedDate":"2021-03-16"},{"lineNumber":160,"author":{"gitId":"sarzorwyn"},"content":"    public void clearTrackingList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":161,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.clear();","lastModifiedDate":"2021-03-16"},{"lineNumber":162,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":163,"author":{"gitId":"sarzorwyn"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"sarzorwyn":163}},{"path":"src/test/java/seedu/duke/storage/StorageFileTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sarzorwyn"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"sarzorwyn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"sarzorwyn"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"sarzorwyn"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"sarzorwyn"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"sarzorwyn"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"sarzorwyn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"sarzorwyn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"sarzorwyn"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"sarzorwyn"},"content":"import static seedu.duke.storage.StorageFile.TXT_FILE_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"sarzorwyn"},"content":"import static seedu.duke.testutil.SampleTrackingList.SAMPLE_STORAGE_TRACKING_LIST;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"sarzorwyn"},"content":"public class StorageFileTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"sarzorwyn"},"content":"    private static final String TEST_DATA_PATH \u003d \"src/test/data/StorageFileTest/\";","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"sarzorwyn"},"content":"    private static final String VALID_DATA_FILE \u003d \"ValidData\";","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"sarzorwyn"},"content":"    private static final String INVALID_DATA_FILE \u003d \"InvalidData\";","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"sarzorwyn"},"content":"    private static final String NON_EXISTENT_FILE \u003d \"NotExistent\";","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"sarzorwyn"},"content":"    private static final String NEW_FILE \u003d \"NewFile\";","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"sarzorwyn"},"content":"    public void constructor_invalidFilePath_InvalidPathExceptionThrown() {","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"sarzorwyn"},"content":"        String invalidPath \u003d \":-?;\\0\";","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"sarzorwyn"},"content":"        assertThrows(InvalidPathException.class, () -\u003e new StorageFile(invalidPath));","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"sarzorwyn"},"content":"    public void constructor_defaultConstructor_success() throws Exception {","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"sarzorwyn"},"content":"        try {","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"sarzorwyn"},"content":"            new StorageFile();","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"sarzorwyn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"sarzorwyn"},"content":"            fail();","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"sarzorwyn"},"content":"    public void load_invalidFormat_StorageOperationExceptionThrown() {","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"sarzorwyn"},"content":"        StorageFile storage \u003d new StorageFile(TEST_DATA_PATH + INVALID_DATA_FILE);","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"sarzorwyn"},"content":"        assertThrows(StorageOperationException.class, storage::load);","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"sarzorwyn"},"content":"    public void load_validFormat_success() throws Exception {","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"sarzorwyn"},"content":"        StorageFile storage \u003d new StorageFile(TEST_DATA_PATH + VALID_DATA_FILE);","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"sarzorwyn"},"content":"        TrackingList actualTrackingList \u003d storage.load();","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"sarzorwyn"},"content":"        TrackingList expectedTrackingList \u003d SAMPLE_STORAGE_TRACKING_LIST;","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"sarzorwyn"},"content":"        assertEquals(actualTrackingList.listPerson(), expectedTrackingList.listPerson());","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"sarzorwyn"},"content":"    public void load_nonExistentFile_returnsEmptyTrackingList() throws Exception {","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"sarzorwyn"},"content":"        StorageFile storage \u003d new StorageFile(TEST_DATA_PATH + NON_EXISTENT_FILE);","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"sarzorwyn"},"content":"        TrackingList actualTrackingList \u003d storage.load();","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"sarzorwyn"},"content":"        TrackingList expectedTrackingList \u003d new TrackingList();","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"sarzorwyn"},"content":"        assertEquals(actualTrackingList.listPerson(), expectedTrackingList.listPerson());","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"sarzorwyn"},"content":"    public void testSave() throws Exception {","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"sarzorwyn"},"content":"        StorageFile storage \u003d new StorageFile(TEST_DATA_PATH + NEW_FILE);","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"sarzorwyn"},"content":"        TrackingList savedTrackingList \u003d SAMPLE_STORAGE_TRACKING_LIST;","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"sarzorwyn"},"content":"        storage.save(savedTrackingList);","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"sarzorwyn"},"content":"        Path savedFilePath \u003d Paths.get(TEST_DATA_PATH + NEW_FILE + TXT_FILE_FORMAT);","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"sarzorwyn"},"content":"        Path validFilePath \u003d Paths.get(TEST_DATA_PATH + VALID_DATA_FILE + TXT_FILE_FORMAT);","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"sarzorwyn"},"content":"        List\u003cString\u003e savedFile \u003d Files.readAllLines(savedFilePath);","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"sarzorwyn"},"content":"        List\u003cString\u003e validFile \u003d Files.readAllLines(validFilePath);","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"sarzorwyn"},"content":"        assertEquals(savedFile, validFile);","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"sarzorwyn"},"content":"        // Clean up","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"sarzorwyn"},"content":"        Files.deleteIfExists(savedFilePath);","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"sarzorwyn"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"sarzorwyn":81}},{"path":"src/test/java/seedu/duke/testutil/LocationBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.testutil;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.location.Location;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"public class LocationBuilder {","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"    private String locationName;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"    private int maxCapacity;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"    public LocationBuilder withLocationName(String locationName) {","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"        this.locationName \u003d locationName;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"        return this;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"    public LocationBuilder withMaxCapacity(int maxCapacity) {","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"        this.maxCapacity \u003d maxCapacity;","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"        return this;","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"    public Location build() {","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"        return new Location(locationName, maxCapacity);","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"iamakilahamed":23}},{"path":"src/test/java/seedu/duke/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package seedu.duke.testutil;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.Id;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.Name;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.Phone;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"public class PersonBuilder {","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"    private Id id;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"    private Name name;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"    private Phone phone;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"    private Boolean isCheckedIn;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"    public PersonBuilder withId(String id) {","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"        this.id \u003d new Id(id);","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"        return this;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"        return this;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"hussain1998"},"content":"        return this;","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"hussain1998"},"content":"    public PersonBuilder withCheckedInStatus(boolean isCheckedIn) {","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"hussain1998"},"content":"        this.isCheckedIn \u003d isCheckedIn;","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"hussain1998"},"content":"        return this;","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"hussain1998"},"content":"    public Person build() {","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"hussain1998"},"content":"        Person person \u003d new Person(id,name,phone);","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"hussain1998"},"content":"        person.setCheckedIn(isCheckedIn);","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"hussain1998"},"content":"        return person;","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"hussain1998"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"hussain1998":39}},{"path":"src/test/java/seedu/duke/testutil/SampleLocations.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.testutil;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.location.Location;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"public class SampleLocations {","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"    public static final Location SCHOOL \u003d new LocationBuilder().withLocationName(\"National University of Singapore\")","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"            .withMaxCapacity(500).build();","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"    public static final Location SMALL_SHOP \u003d new LocationBuilder().withLocationName(\"ValueDollar\")","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"            .withMaxCapacity(25).build();","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"    public static final Location BIG_MALL \u003d new LocationBuilder().withLocationName(\"VivoCity\")","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"            .withMaxCapacity(1000).build();","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    public static final Location FOOD_COURT \u003d new LocationBuilder().withLocationName(\"Kopitiam\")","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"            .withMaxCapacity(50).build();","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"    public static final Location CINEMA \u003d new LocationBuilder().withLocationName(\"Cathay Cineplex\")","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"            .withMaxCapacity(100).build();","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    public static final Location EVENT \u003d new LocationBuilder().withLocationName(\"Wedding\")","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"            .withMaxCapacity(250).build();","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"iamakilahamed":18}},{"path":"src/test/java/seedu/duke/testutil/SamplePersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package seedu.duke.testutil;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"public class SamplePersons {","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"sarzorwyn"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withId(\"665B\")","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"sarzorwyn"},"content":"            .withName(\"Alice\").withPhone(\"86862540\")","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"sarzorwyn"},"content":"            .withCheckedInStatus(true).build();","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"sarzorwyn"},"content":"    public static final Person BOB \u003d new PersonBuilder().withId(\"126C\")","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"sarzorwyn"},"content":"            .withName(\"Bob\").withPhone(\"90904040\")","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"            .withCheckedInStatus(true).build();","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"    public static final Person JOHN \u003d new PersonBuilder().withId(\"123A\")","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"            .withName(\"John\").withPhone(\"12345678\")","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"            .withCheckedInStatus(true).build();","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"    public static final Person JOHN_NO_PHONE \u003d new PersonBuilder().withId(\"123A\")","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"            .withName(\"John\").withPhone(null)","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"            .withCheckedInStatus(true).build();","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    public static final Person JACK_NO_PHONE \u003d new PersonBuilder().withId(\"375F\")","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"            .withName(\"Jack\").withPhone(null)","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"            .withCheckedInStatus(true).build();","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"    public static final Person JOHN_DIFF_ID \u003d new PersonBuilder().withId(\"456B\")","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"            .withName(\"John\").withPhone(\"12345678\")","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"            .withCheckedInStatus(true).build();","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"sarzorwyn"},"content":"    public static final Person MARY \u003d new PersonBuilder().withId(\"230C\")","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"            .withName(\"Mary\").withPhone(\"95001501\")","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"sarzorwyn"},"content":"            .withCheckedInStatus(true).build();","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"iamakilahamed":3,"sarzorwyn":8,"hussain1998":16}},{"path":"src/test/java/seedu/duke/testutil/SampleTrackingList.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.testutil;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SamplePersons.ALICE;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SamplePersons.BOB;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"sarzorwyn"},"content":"import static seedu.duke.testutil.SamplePersons.JOHN;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"sarzorwyn"},"content":"import static seedu.duke.testutil.SamplePersons.MARY;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"public class SampleTrackingList {","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"    public static TrackingList SAMPLE_TRACKING_LIST \u003d new TrackingList(ALICE, BOB);","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"    public static TrackingList SAMPLE_STORAGE_TRACKING_LIST \u003d new TrackingList(MARY, JOHN);","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"iamakilahamed":9,"sarzorwyn":3}},{"path":"src/test/java/seedu/duke/ui/UiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"limwenfeng"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"limwenfeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"limwenfeng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"limwenfeng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"limwenfeng"},"content":"public class UiTest {","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"limwenfeng"},"content":"    private TextUi ui;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"limwenfeng"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"limwenfeng"},"content":"    public void testEchoEqual() {","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"limwenfeng"},"content":"        this.ui \u003d new TextUi();","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"limwenfeng"},"content":"        String input \u003d \"checkin n/John i/123a\";","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"limwenfeng"},"content":"        assertTrue(input.equals(ui.echoInput(input)));","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"limwenfeng"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"limwenfeng"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"limwenfeng":18}},{"path":"text-ui-test/runtest.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@echo off","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"setlocal enableextensions","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"pushd %~dp0","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"call gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"cd build\\libs","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"for /f \"tokens\u003d*\" %%a in (","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u0027dir /b *.jar\u0027","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":") do (","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    set jarloc\u003d%%a","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"java -jar %jarloc% \"Control Your Crowd Launch Day\" \"500\"\u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"cd ..\\..\\text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"iamakilahamed":1,"-":18}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \"Control Your Crowd Launch Day\" \"500\"\u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"diff EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"iamakilahamed":1,"-":22}}]
