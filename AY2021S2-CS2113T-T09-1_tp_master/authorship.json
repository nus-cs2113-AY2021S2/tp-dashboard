[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"sarzorwyn"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"sarzorwyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"sarzorwyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"sarzorwyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"sarzorwyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"sarzorwyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"sarzorwyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"sarzorwyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"sarzorwyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"sarzorwyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"sarzorwyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"sarzorwyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"sarzorwyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"hussain1998"},"content":"    implementation \u0027com.google.code.gson:gson:2.8.6\u0027","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"hussain1998"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sarzorwyn":15,"hussain1998":2,"-":46}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | H Mohamed Hussain | [Github](https://github.com/hussain1998) | [Portfolio](docs/team/hussain.md)","lastModifiedDate":"2021-03-04"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jonathan K | [Github](https://github.com/JonathanKhooTY) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Wen Feng | [Github](https://github.com/limwenfeng/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ivan Tan | [Github](https://github.com/sarzorwyn) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-03-04"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Akil | [Github](https://github.com/iamakilahamed) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"JonathanKhooTY":1,"iamakilahamed":1,"-":7}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"# Control Your Crowd - Developer Guide","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"* [Setting up](DeveloperGuide.md#setting-up)","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"* [Design](DeveloperGuide.md#design)","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"  * [Architecture](DeveloperGuide.md#architecture)","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"  * [UI component](DeveloperGuide.md#ui-component)","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"  * [Logic component](DeveloperGuide.md#logic-component)","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"  * [Model component](DeveloperGuide.md#model-component)","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"  * [Storage component](DeveloperGuide.md#storage-component)","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"  * [Common classes](DeveloperGuide.md#common-classes)","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"* [Implementation](DeveloperGuide.md#implementation)","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"* [Documentation](DeveloperGuide.md#documentation)","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"* [Testing](DeveloperGuide.md#testing)","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"* [Dev Ops](DeveloperGuide.md#dev-ops)","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"* [Appendix](DeveloperGuide.md#appendix)","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"  * [Appendix A: Product Scope](DeveloperGuide.md#appendix-a-product-scope)","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"    * [Target user profile](DeveloperGuide.md#target-user-profile)","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    * [Value proposition](DeveloperGuide.md#value-proposition)","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"  * [Appendix B: User Stories](DeveloperGuide.md#appendix-b-user-stories)","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"  * [Appendix C: Use Cases](DeveloperGuide.md#appendix-c-use-cases)","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"  * [Appendix D: Non Functional Requirements](DeveloperGuide.md#appendix-d-non-functional-requirements)","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"  * [Appendix E: Glossary](DeveloperGuide.md#appendix-e-glossary)","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"  * [Appendix F: Instructions for Manual Testing](DeveloperGuide.md#appendix-f-instructions-for-manual-testing)","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"    * [Launch and Shutdown](DeveloperGuide.md#launch-and-shutdown)","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"    * [Clearing the list](DeveloperGuide.md#clearing-the-list)","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"    * [Saving data](DeveloperGuide.md#saving-data)","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"## Setting up","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"## Design","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"### Architecture","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"hussain1998"},"content":"### UI component","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"limwenfeng"},"content":"The UI consists of `TextUi` class. It acts as a middleware between users\u0027 input","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"limwenfeng"},"content":"and `Parser` class under **Logic Component**.","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":"The `UI` component,","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"limwenfeng"},"content":"* Reads user commands using `Scanner` class.","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"limwenfeng"},"content":"* Pass raw user commands into `Parser` class under **Logic Component**.","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"limwenfeng"},"content":"* After the **Logic Component** has executed the function, it will then return `CommandOutput` object","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"limwenfeng"},"content":"  which contains the outcome of the execution, fail or succeed.","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"iamakilahamed"},"content":"### Logic component","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"iamakilahamed"},"content":"![](images/LogicComponentStructure.png?raw\u003dtrue \"Structure of Logic Component\")","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"iamakilahamed"},"content":"*Figure #. Structure of the Logic Component*","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"iamakilahamed"},"content":"**API** : [`seedu.duke.logic`](https://github.com/AY2021S2-CS2113T-T09-1/tp/tree/master/src/main/java/seedu/duke/logic) package (*TO BE CREATED LATER*)","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"iamakilahamed"},"content":"The Logic component,","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"iamakilahamed"},"content":"1. uses the `Parser` class to parse the user input obtained by the `TextUi` class of `UI`.","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"iamakilahamed"},"content":"2. This results in a specific `Command` object to be returned from the `Parser` class.","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"iamakilahamed"},"content":"3. Depending on the type of the `Command` object, its corresponding command execution will be called by `Duke` of `UI`.","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"iamakilahamed"},"content":"4. The command execution can affect the `Model` (e.g. clearing the list). ","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"iamakilahamed"},"content":"5. The result of the command execution is encapsulated as a `CommandOutput` object which is passed back to the `TextUi`.","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"iamakilahamed"},"content":"6. In addition, the `CommandOutput` object can also instruct the `TextUi` to perform certain actions, such as displaying the list to the user.","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"iamakilahamed"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `parseCommand(\"clear)\"` API call.","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"iamakilahamed"},"content":"![](images/LogicComponentSequenceDiagram.png?raw\u003dtrue \"Logic component Sequence Diagram for clear\")","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"iamakilahamed"},"content":"*Figure #. Interactions Inside the Logic Component for the `clear` Command*","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"hussain1998"},"content":"### Model component","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"hussain1998"},"content":"**API** : [`seedu.duke.person`](https://github.com/AY2021S2-CS2113T-T09-1/tp/tree/master/src/main/java/seedu/duke/person) package","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"hussain1998"},"content":"\u003cimg src\u003d\"images/ModelComponentStructure.png\" width\u003d\"600\" height\u003d\"600\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"hussain1998"},"content":"*Figure #. Structure of the Model Component*","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"hussain1998"},"content":"The Model component,","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"hussain1998"},"content":"* contains a `Person` class which represents a person who checks in/out.","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"hussain1998"},"content":"* contains a `TrackingList` class which uses an ArrayList to keep track of all the `Person` objects who have currently checked in/out.","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"hussain1998"},"content":"* contains a `PersonLog` class which uses a HashMap to permanently store all the `Person` objects who have checked in before.","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"hussain1998"},"content":"A `Person` object contains:","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"hussain1998"},"content":"* an `Id` object","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"hussain1998"},"content":"* a `Name` object","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"hussain1998"},"content":"* a `Phone` object","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"sarzorwyn"},"content":"### Storage component","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"sarzorwyn"},"content":"**API** : [`seedu.duke.storage`](https://github.com/AY2021S2-CS2113T-T09-1/tp/tree/master/src/main/java/seedu/duke/storage) package","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"sarzorwyn"},"content":"![](images/storage_module.png?raw\u003dtrue \"Storage Module diagram\")","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"sarzorwyn"},"content":"The `Storage` component,","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"sarzorwyn"},"content":"* saves and encodes `Person` objects in `Tracking List` into a `.txt` file.","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"sarzorwyn"},"content":"* reads a `.txt` file of valid encoding and populates a `TrackingList`","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"sarzorwyn"},"content":"* records a log of all historical states of `TrackingList`","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"sarzorwyn"},"content":"* keeps a list of user setting in a `Config.properties` file which is read on launch","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"sarzorwyn"},"content":"* defaults to `TrackingList.txt` but can be saved at a custom specified location","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"sarzorwyn"},"content":"* loads on program startup automatically saves after each command","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"sarzorwyn"},"content":"The storage module uses the `StorageFile` class to store the `TrackingList` class from Model. ","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"sarzorwyn"},"content":"`StorageFile` achieves this by using two helper classes, `TrackingListEncoder` and `TrackingListDecoder`.","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"sarzorwyn"},"content":"`TrackingListEncoder` takes the currently stored `TrackingList` and converts it to a more storage friendly String.","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"sarzorwyn"},"content":"This String is then written to a file on the disk, known on the diagram as `StoredTrackingList`.","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"sarzorwyn"},"content":"As the name suggests, `TrackingListDecoder` achieves the reverse by taking the file on drive, `StoredTrackingList`,","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"sarzorwyn"},"content":"and interprets the file to be loaded into the memory as a `TrackingList`.","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"sarzorwyn"},"content":"`StoredTrackingList` is the `.txt` file stored in the same directory as the program.","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"sarzorwyn"},"content":"The location is determined by the `ConfigFile` class. ","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"sarzorwyn"},"content":"`LogFile` takes the `TrackingList` every time the storage is updated","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"sarzorwyn"},"content":"and packages it into `json` formatted string.","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"sarzorwyn"},"content":"`LogFile` communicates with the disk by calling the methods","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"sarzorwyn"},"content":"`loadLogFile` and `saveLogFile` in the `StorageFile` class.","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":116,"author":{"gitId":"sarzorwyn"},"content":"The program settings for the user is manged by the `ConfigFile` class. ","lastModifiedDate":"2021-03-28"},{"lineNumber":117,"author":{"gitId":"sarzorwyn"},"content":"Another file, `settingsFile` is read by `ConfigFile` when the program is started, ","lastModifiedDate":"2021-03-28"},{"lineNumber":118,"author":{"gitId":"sarzorwyn"},"content":"to load the settings into the program memory. ","lastModifiedDate":"2021-03-28"},{"lineNumber":119,"author":{"gitId":"sarzorwyn"},"content":"When a change is made by the user, `ConfigFile` will update the `settingsFile` through a save function.","lastModifiedDate":"2021-03-28"},{"lineNumber":120,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"limwenfeng"},"content":"### Common classes","lastModifiedDate":"2021-03-22"},{"lineNumber":122,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":123,"author":{"gitId":"limwenfeng"},"content":"Classes used by multiple components are in the `seedu.Duke.commons` package. ","lastModifiedDate":"2021-03-22"},{"lineNumber":124,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":125,"author":{"gitId":"iamakilahamed"},"content":"## Implementation","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"iamakilahamed"},"content":"## Documentation","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"iamakilahamed"},"content":"## Testing","lastModifiedDate":"2021-03-30"},{"lineNumber":130,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"iamakilahamed"},"content":"## Dev Ops","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":133,"author":{"gitId":"iamakilahamed"},"content":"## Appendix","lastModifiedDate":"2021-03-30"},{"lineNumber":134,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"iamakilahamed"},"content":"### Appendix A: Product scope","lastModifiedDate":"2021-03-30"},{"lineNumber":136,"author":{"gitId":"iamakilahamed"},"content":"[WIP]","lastModifiedDate":"2021-03-30"},{"lineNumber":137,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":138,"author":{"gitId":"iamakilahamed"},"content":"#### Target user profile","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"JonathanKhooTY"},"content":"* User that requires more control over crowd level management in a building.","lastModifiedDate":"2021-03-23"},{"lineNumber":140,"author":{"gitId":"JonathanKhooTY"},"content":"* Can type fast","lastModifiedDate":"2021-03-23"},{"lineNumber":141,"author":{"gitId":"JonathanKhooTY"},"content":"* Prefers a simple desktop application over the more complicated systems","lastModifiedDate":"2021-03-23"},{"lineNumber":142,"author":{"gitId":"JonathanKhooTY"},"content":"* Is reasonably comfortable with CLI apps","lastModifiedDate":"2021-03-23"},{"lineNumber":143,"author":{"gitId":"JonathanKhooTY"},"content":"* Requires real time monitoring and tracking capability of people in the building","lastModifiedDate":"2021-03-23"},{"lineNumber":144,"author":{"gitId":"JonathanKhooTY"},"content":"* Wants a cheaper alternative to crowd tracking systems","lastModifiedDate":"2021-03-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"{Describe the target user profile}","lastModifiedDate":"2020-05-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":148,"author":{"gitId":"iamakilahamed"},"content":"#### Value proposition","lastModifiedDate":"2021-03-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":150,"author":{"gitId":"JonathanKhooTY"},"content":"A fast and versatile software solution that enables mall management to crowd control ","lastModifiedDate":"2021-03-23"},{"lineNumber":151,"author":{"gitId":"JonathanKhooTY"},"content":"in the most efficient way possible.","lastModifiedDate":"2021-03-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":153,"author":{"gitId":"iamakilahamed"},"content":"### Appendix B: User Stories ","lastModifiedDate":"2021-03-30"},{"lineNumber":154,"author":{"gitId":"iamakilahamed"},"content":"[WIP]","lastModifiedDate":"2021-03-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":156,"author":{"gitId":"JonathanKhooTY"},"content":"|Priority| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2021-03-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":158,"author":{"gitId":"JonathanKhooTY"},"content":"|*****|mall staff|be able to review the personal particulars of the customer|be aware of who he is|","lastModifiedDate":"2021-03-23"},{"lineNumber":159,"author":{"gitId":"JonathanKhooTY"},"content":"|*****|new user|be able to use the program without much training| use the program as soon as possible and easily implement it|","lastModifiedDate":"2021-03-23"},{"lineNumber":160,"author":{"gitId":"JonathanKhooTY"},"content":"|****|mall staff|key in personal particulars easily into the application| check in visitors quickly without holding up a line of customers|","lastModifiedDate":"2021-03-23"},{"lineNumber":161,"author":{"gitId":"JonathanKhooTY"},"content":"|****|mall staff|be able to easily key in a unique personal identifier| check in and find a visitor|","lastModifiedDate":"2021-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":163,"author":{"gitId":"iamakilahamed"},"content":"### Appendix C: Use Cases","lastModifiedDate":"2021-03-30"},{"lineNumber":164,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":165,"author":{"gitId":"iamakilahamed"},"content":"### Appendix D: Non-Functional Requirements","lastModifiedDate":"2021-03-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":167,"author":{"gitId":"iamakilahamed"},"content":"[WIP]","lastModifiedDate":"2021-03-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":169,"author":{"gitId":"sarzorwyn"},"content":"The program works on all major modern operating systems (Windows, macOS, Linux) without any effort by the user.","lastModifiedDate":"2021-03-28"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":171,"author":{"gitId":"iamakilahamed"},"content":"### Appendix E: Glossary ","lastModifiedDate":"2021-03-30"},{"lineNumber":172,"author":{"gitId":"iamakilahamed"},"content":"[WIP]","lastModifiedDate":"2021-03-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":176,"author":{"gitId":"iamakilahamed"},"content":"### Appendix F: Instructions for manual testing ","lastModifiedDate":"2021-03-30"},{"lineNumber":177,"author":{"gitId":"iamakilahamed"},"content":"[WIP]","lastModifiedDate":"2021-03-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"},{"lineNumber":180,"author":{"gitId":"iamakilahamed"},"content":"#### Launch and Shutdown","lastModifiedDate":"2021-03-30"},{"lineNumber":181,"author":{"gitId":"iamakilahamed"},"content":"#### Clearing the list","lastModifiedDate":"2021-03-30"},{"lineNumber":182,"author":{"gitId":"iamakilahamed"},"content":"#### Saving data","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"iamakilahamed":76,"JonathanKhooTY":14,"limwenfeng":14,"sarzorwyn":34,"hussain1998":24,"-":20}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"limwenfeng"},"content":"![Banner](images/github_ug_photo.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"# User Guide for Control Your Crowd (CYC)","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"* [Introduction](UserGuide.md#introduction)","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"* [Quick Start](UserGuide.md#quick-start)","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"* [Features](UserGuide.md#features)","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"    * [Viewing help](UserGuide.md#viewing-help-help): `help`","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"    * [Check-in a person](UserGuide.md#check-in-a-person-checkin): `checkin`","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"    * [Listing all persons](UserGuide.md#listing-all-persons-listall): `listall`","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"    * [Listing checked-in persons only](UserGuide.md#listing-checked-in-persons-only-list): `list`","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    * [Finding a person by ID](UserGuide.md#finding-a-person-by-id-number-find): `find`","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"    * [Checkout a person](UserGuide.md#check-out-a-person-checkout): `checkout`","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"    * [Clearing all entries](UserGuide.md#clearing-all-entries-clear): `clear`","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"    * [Edit venue capacity](UserGuide.md#edit-venue-capacity-editmax): `editmax`","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    * [Move Storage](UserGuide.md#change-storage-location-movestorage): `movestorage`","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"    * [Exiting the program](UserGuide.md#exiting-cyc-exit): `exit`","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    * [Visitor Log](UserGuide.md#visitor-log)","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"    * [Saving data](UserGuide.md#auto-save)","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"    * [Changing save location](UserGuide.md#changing-save-location)","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"    * [History](UserGuide.md#history)","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"* [FAQ](UserGuide.md#faq)","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"* [Command summary](UserGuide.md#command-summary)","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"Welcome to the User Guide of **Control Your Crowd**!","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"limwenfeng"},"content":"Our application, Control Your Crowd (CYC), will allow you to manage your crowds in real-time. It allows efficient ","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"limwenfeng"},"content":"tracking and accessing of visitors\u0027 profiles. You can also easily check-in and check out a visitor, get the current ","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"limwenfeng"},"content":"crowd level, limit the venue capacity, save the visitor log for future references, and much more! ","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"limwenfeng"},"content":"CYC is an all-in-one application to help event management team, event organizers for events such as Ultra Music","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"limwenfeng"},"content":"Festival manage crowd level with ease. It also works very well for small enterprises and mall management team that","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"limwenfeng"},"content":"needs to monitor influx of visitors. ","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"limwenfeng"},"content":"The application uses a Command Line Interface (CLI); this means that you operate the ","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"limwenfeng"},"content":"application by typing commands into a command window. With simple and easy-to-use commands, ","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"limwenfeng"},"content":"CYC provides you with efficient crowd management which is faster than traditional ","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"limwenfeng"},"content":"Graphical User Interface (GUI) applications can offer. GUI applications ","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"limwenfeng"},"content":"allow the user to interact with the application through graphical icons such as buttons and clickable.","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"limwenfeng"},"content":"Jump to [Quick Start](UserGuide.md#quick-start) to learn how to manage your crowd efficiently","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"limwenfeng"},"content":"with CYC.","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"iamakilahamed"},"content":"\u003e Prerequisites:","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"iamakilahamed"},"content":"\u003e * Ensure that you have **Java 11** or above installed in your Computer. If you do not have, you can get it from","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"iamakilahamed"},"content":"\u003e   [here](https://www.oracle.com/sg/java/technologies/javase-jdk11-downloads.html).","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"iamakilahamed"},"content":"1. Download the latest version of `CYC.jar` from [here](https://github.com/AY2021S2-CS2113T-T09-1/tp/releases).","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"iamakilahamed"},"content":"2. Copy the file to the folder you want to use as the home folder for your CYC.","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"iamakilahamed"},"content":"3. Open up a command window to the location where your `CYC.jar` is located.","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"iamakilahamed"},"content":"4. Run the command `java -jar CYC.jar [venue name] [venue maximum capacity]`. For example, ","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"iamakilahamed"},"content":"   `java -jar CYC.jar NUS 500`.","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"iamakilahamed"},"content":"   * Ensure that the venue maximum capacity entered is a positive integer that does not exceed 6 digits.","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"iamakilahamed"},"content":"   * When you are running the `CYC.jar` again, ensure that the `[venue maximum capacity]` is more than the current","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"iamakilahamed"},"content":"     number of visitors checked in. Failure to do so will lead to negative maximum venue capacity.     ","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"iamakilahamed"},"content":"5. If the setup is correct, you should see CYC being loaded as shown below (note: your version of CYC would be the ","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"iamakilahamed"},"content":"   latest version).","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"iamakilahamed"},"content":"   ","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"limwenfeng"},"content":"   ![QuickStart](images/welcomemessage.png)","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"iamakilahamed"},"content":"   ","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"iamakilahamed"},"content":"6. Input the command in the command window and press Enter to execute it. Refer to [Features](UserGuide.md#features)","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"iamakilahamed"},"content":"   for details of each command.","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":68,"author":{"gitId":"limwenfeng"},"content":"- tips: Maximize the command line window to ensure that you get to make use of the visuals of CYC CLI.","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2020-05-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":72,"author":{"gitId":"iamakilahamed"},"content":"\u003e Notes about the command format:","lastModifiedDate":"2021-03-26"},{"lineNumber":73,"author":{"gitId":"iamakilahamed"},"content":"\u003e * Commands are in `lower_case`.","lastModifiedDate":"2021-03-26"},{"lineNumber":74,"author":{"gitId":"iamakilahamed"},"content":"\u003e * Items in square brackets `[ ]` are optional.","lastModifiedDate":"2021-03-26"},{"lineNumber":75,"author":{"gitId":"iamakilahamed"},"content":"\u003e * Words in `UPPER_CASE` are the parameters to be supplied by user.","lastModifiedDate":"2021-03-26"},{"lineNumber":76,"author":{"gitId":"iamakilahamed"},"content":"\u003e    * E.g. in `checkin n/NAME i/LAST_4_CHARS_OF_ID`, `NAME` is a parameter that has to be supplied by user. So e.g. `checkin n/John i/123A`.","lastModifiedDate":"2021-03-26"},{"lineNumber":77,"author":{"gitId":"iamakilahamed"},"content":"\u003e * Additional parameters for commands that do not take in parameters (such as `help`, `list`, `exit`, `clear`) will be ignored.","lastModifiedDate":"2021-03-26"},{"lineNumber":78,"author":{"gitId":"iamakilahamed"},"content":"\u003e   * e.g. if the user types `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-03-26"},{"lineNumber":79,"author":{"gitId":"iamakilahamed"},"content":"\u003e * `i/LAST_4_CHARS_OF_ID` is unique. (i.e. no two persons will have the same ID)","lastModifiedDate":"2021-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":81,"author":{"gitId":"JonathanKhooTY"},"content":"### Viewing help: `help`","lastModifiedDate":"2021-03-26"},{"lineNumber":82,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":83,"author":{"gitId":"limwenfeng"},"content":"This command will provide you a summary of the all the commands with its corresponding format.","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"limwenfeng"},"content":"This command will help you in situations when you forget the available commands, or their format while on duty.","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":86,"author":{"gitId":"iamakilahamed"},"content":"#### Format: `help`","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":88,"author":{"gitId":"iamakilahamed"},"content":"#### Example Input: `help`","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"iamakilahamed"},"content":"#### Example Output:","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"limwenfeng"},"content":"![help](images/help.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":94,"author":{"gitId":"iamakilahamed"},"content":"### Check-in a person: `checkin`","lastModifiedDate":"2021-03-26"},{"lineNumber":95,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":96,"author":{"gitId":"limwenfeng"},"content":"Supposed there is a visitor,","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"limwenfeng"},"content":"you can check in a person to CYC via `checkin` command. After a successful check-in, CYC will also notify you on the","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"limwenfeng"},"content":"current venue capacity.","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":100,"author":{"gitId":"iamakilahamed"},"content":"#### Format: ","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"iamakilahamed"},"content":"`checkin i/LAST_4_CHARS_OF_ID [n/NAME] [p/PHONE_NUMBER]`","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"JonathanKhooTY"},"content":"* First 3 characters of `LAST_4_CHARS_OF_ID` should be integers.  Last character of `LAST_4_CHARS_OF_ID` must be in `CAPS`.","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"JonathanKhooTY"},"content":"* `NAME` is optional. If the user has checked in before, entering the `LAST_4_CHARS_OF_ID` is sufficient to retrieve the user\u0027s `NAME` and `PHONE_NUMBER` ","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"JonathanKhooTY"},"content":"  from previous check in. **If the user has not checked in before, `NAME` must be entered.**","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"hussain1998"},"content":"* `NAME` must only contain english alphabet letters and empty spaces with a maximum character limit of 30. Any other characters will not be accepted.","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"JonathanKhooTY"},"content":"* `PHONE_NUMBER` is optional. `PHONE_NUMBER` must consist of 8 integers, as per local (Singapore) phone number format.","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"limwenfeng"},"content":"Supposedly John is a new visitor and he wants to check in. Since it is his first time visiting, you should check in John using his","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"iamakilahamed"},"content":"`i/LAST_4_CHARS_OF_ID`, `n/NAME` and `[p/PHONE_NUMBER]` as shown below.","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"limwenfeng"},"content":"#### Example Input:","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"iamakilahamed"},"content":"`checkin i/123A n/John p/91231112`","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"limwenfeng"},"content":"When John visits again in the future, you would only need to check in ","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"limwenfeng"},"content":"using his `i/LAST_4_CHARS_OF_ID` as shown below.","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"iamakilahamed"},"content":"`checkin i/123A`","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"iamakilahamed"},"content":"#### Example Output:","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"iamakilahamed"},"content":"For both new visitor and returning visitor, you should observe the following output.","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"limwenfeng"},"content":"![checkin_success](images/checkin_success.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":124,"author":{"gitId":"iamakilahamed"},"content":"However, you should expect the following output when the maximum capacity is reached.","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"limwenfeng"},"content":"![checkin_fail](images/checkinFail.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":128,"author":{"gitId":"iamakilahamed"},"content":"### Listing all persons: listall","lastModifiedDate":"2021-03-26"},{"lineNumber":129,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":130,"author":{"gitId":"limwenfeng"},"content":"Supposed you want to find out all the visitors that had entered the venue,","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"limwenfeng"},"content":"it can be done with `listall`. This command shows a list of all persons","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"limwenfeng"},"content":"who have checked-in and checked out. The ID and phone numbers are also ","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"limwenfeng"},"content":"shown in case you need to contact any of these visitors. However,","lastModifiedDate":"2021-03-30"},{"lineNumber":134,"author":{"gitId":"limwenfeng"},"content":"if the visitor\u0027s phone number has not been registered with CYC, it will","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"limwenfeng"},"content":"be shown as `--`.","lastModifiedDate":"2021-03-30"},{"lineNumber":136,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":137,"author":{"gitId":"iamakilahamed"},"content":"Format: `listall`","lastModifiedDate":"2021-03-26"},{"lineNumber":138,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":139,"author":{"gitId":"iamakilahamed"},"content":"Example Input: `listall`","lastModifiedDate":"2021-03-26"},{"lineNumber":140,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":141,"author":{"gitId":"iamakilahamed"},"content":"Example Output:","lastModifiedDate":"2021-03-26"},{"lineNumber":142,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"limwenfeng"},"content":"![listall_success](images/listall_success.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":145,"author":{"gitId":"iamakilahamed"},"content":"### Listing checked-in persons only: `list`","lastModifiedDate":"2021-03-26"},{"lineNumber":146,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":147,"author":{"gitId":"limwenfeng"},"content":"`list` command is similar to `listall`, the only difference is that `list` only","lastModifiedDate":"2021-03-30"},{"lineNumber":148,"author":{"gitId":"limwenfeng"},"content":"returns the list of visitors that are still in the venue or have not check out.","lastModifiedDate":"2021-03-30"},{"lineNumber":149,"author":{"gitId":"limwenfeng"},"content":"Shows a list of all persons with their details currently checked in. It also shows the number of people ","lastModifiedDate":"2021-03-30"},{"lineNumber":150,"author":{"gitId":"iamakilahamed"},"content":"remaining to reach the maximum capacity for that venue.","lastModifiedDate":"2021-03-26"},{"lineNumber":151,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":152,"author":{"gitId":"iamakilahamed"},"content":"#### Format: `list`","lastModifiedDate":"2021-03-29"},{"lineNumber":153,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":154,"author":{"gitId":"iamakilahamed"},"content":"#### Example Input: `list`","lastModifiedDate":"2021-03-29"},{"lineNumber":155,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":156,"author":{"gitId":"iamakilahamed"},"content":"#### Example Output:","lastModifiedDate":"2021-03-29"},{"lineNumber":157,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":158,"author":{"gitId":"limwenfeng"},"content":"![list_success](images/list_success.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":159,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":160,"author":{"gitId":"iamakilahamed"},"content":"### Finding a person by ID number: `find`","lastModifiedDate":"2021-03-26"},{"lineNumber":161,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":162,"author":{"gitId":"limwenfeng"},"content":"You can use `find` command if you need to check whether a particular visitor","lastModifiedDate":"2021-03-30"},{"lineNumber":163,"author":{"gitId":"limwenfeng"},"content":"is still in the venue or check for his/her particulars.","lastModifiedDate":"2021-03-30"},{"lineNumber":164,"author":{"gitId":"iamakilahamed"},"content":"Given the person\u0027s last 4 characters of ID, we can find the details of the person and status (Checked in, or checked out)","lastModifiedDate":"2021-03-26"},{"lineNumber":165,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":166,"author":{"gitId":"iamakilahamed"},"content":"#### Format: `find i/LAST_4_CHARS_OF_ID`","lastModifiedDate":"2021-03-29"},{"lineNumber":167,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":168,"author":{"gitId":"JonathanKhooTY"},"content":"* First 3 characters of `LAST_4_CHARS_OF_ID` should be integers.  Last character of `LAST_4_CHARS_OF_ID` must be in `CAPS`.","lastModifiedDate":"2021-03-27"},{"lineNumber":169,"author":{"gitId":"JonathanKhooTY"},"content":"    ","lastModifiedDate":"2021-03-27"},{"lineNumber":170,"author":{"gitId":"iamakilahamed"},"content":"#### Example input: `find i/123A`","lastModifiedDate":"2021-03-29"},{"lineNumber":171,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":172,"author":{"gitId":"iamakilahamed"},"content":"#### Example Output:","lastModifiedDate":"2021-03-29"},{"lineNumber":173,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":174,"author":{"gitId":"limwenfeng"},"content":"![find_success](images/find_success.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":176,"author":{"gitId":"iamakilahamed"},"content":"### Check out a person: `checkout`","lastModifiedDate":"2021-03-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":178,"author":{"gitId":"limwenfeng"},"content":"You can check out a visitor from CYC, when he/she is leaving from the venue via","lastModifiedDate":"2021-03-30"},{"lineNumber":179,"author":{"gitId":"limwenfeng"},"content":"`checkout` command. By doing so, you will be removing the visitor from checked in","lastModifiedDate":"2021-03-30"},{"lineNumber":180,"author":{"gitId":"limwenfeng"},"content":"list in CYC. However, person\u0027s particulars will be retained for a faster ","lastModifiedDate":"2021-03-30"},{"lineNumber":181,"author":{"gitId":"limwenfeng"},"content":"check in the following visit.","lastModifiedDate":"2021-03-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":183,"author":{"gitId":"iamakilahamed"},"content":"#### Format: `checkout [n/NAME] i/LAST_4_CHARS_OF_ID`","lastModifiedDate":"2021-03-29"},{"lineNumber":184,"author":{"gitId":"JonathanKhooTY"},"content":"* First 3 characters of `LAST_4_CHARS_OF_ID` should be integers.  Last character of `LAST_4_CHARS_OF_ID` must be in `CAPS`.","lastModifiedDate":"2021-03-27"},{"lineNumber":185,"author":{"gitId":"JonathanKhooTY"},"content":"* `NAME` is optional. `NAME` must be a string. Integers will not be accepted.","lastModifiedDate":"2021-03-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":187,"author":{"gitId":"iamakilahamed"},"content":"#### Example input: `checkout n/John i/123A`","lastModifiedDate":"2021-03-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":189,"author":{"gitId":"iamakilahamed"},"content":"#### Example output:","lastModifiedDate":"2021-03-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":191,"author":{"gitId":"limwenfeng"},"content":"![checkout_success](images/checkout_success.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":192,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":193,"author":{"gitId":"JonathanKhooTY"},"content":"### Clearing all entries: `clear`","lastModifiedDate":"2021-03-26"},{"lineNumber":194,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":195,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":196,"author":{"gitId":"limwenfeng"},"content":"`clear` command clears all entries stored by the program. It could be useful","lastModifiedDate":"2021-03-30"},{"lineNumber":197,"author":{"gitId":"limwenfeng"},"content":"to clear CYC data at the end of the day, or when required. However, this is ","lastModifiedDate":"2021-03-30"},{"lineNumber":198,"author":{"gitId":"limwenfeng"},"content":"not recommended as you will lose track of the visitors who have not check out.","lastModifiedDate":"2021-03-30"},{"lineNumber":199,"author":{"gitId":"limwenfeng"},"content":"Therefore, use `clear` command with caution.","lastModifiedDate":"2021-03-31"},{"lineNumber":200,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":201,"author":{"gitId":"iamakilahamed"},"content":"#### Format: `clear`","lastModifiedDate":"2021-03-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":203,"author":{"gitId":"iamakilahamed"},"content":"#### Example Input: `clear`","lastModifiedDate":"2021-03-29"},{"lineNumber":204,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":205,"author":{"gitId":"iamakilahamed"},"content":"#### Example Output:","lastModifiedDate":"2021-03-29"},{"lineNumber":206,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":207,"author":{"gitId":"limwenfeng"},"content":"![clear_success](images/clear_4_entries.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":208,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":209,"author":{"gitId":"JonathanKhooTY"},"content":"### Edit venue capacity: `editmax`","lastModifiedDate":"2021-03-26"},{"lineNumber":210,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":211,"author":{"gitId":"limwenfeng"},"content":"In the event that requires the venue capacity to change, you ","lastModifiedDate":"2021-03-31"},{"lineNumber":212,"author":{"gitId":"limwenfeng"},"content":"can update the new venue capacity in CYC using `editmax` command.","lastModifiedDate":"2021-03-31"},{"lineNumber":213,"author":{"gitId":"JonathanKhooTY"},"content":"Edits the max capacity of the venue.","lastModifiedDate":"2021-03-26"},{"lineNumber":214,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":215,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":216,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":217,"author":{"gitId":"iamakilahamed"},"content":"#### Format: `editmax NEW_CAPACITY`","lastModifiedDate":"2021-03-29"},{"lineNumber":218,"author":{"gitId":"iamakilahamed"},"content":"* `NEW_CAPACITY` must be a positive integer and not more than six digits.","lastModifiedDate":"2021-03-31"},{"lineNumber":219,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":220,"author":{"gitId":"limwenfeng"},"content":"#### Example Input: `editmax 150`","lastModifiedDate":"2021-03-30"},{"lineNumber":221,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":222,"author":{"gitId":"iamakilahamed"},"content":"#### Example Output:","lastModifiedDate":"2021-03-29"},{"lineNumber":223,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":224,"author":{"gitId":"limwenfeng"},"content":"![editmax_success](images/editmax_success.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":225,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":226,"author":{"gitId":"sarzorwyn"},"content":"### Change storage location: `movestorage`","lastModifiedDate":"2021-03-27"},{"lineNumber":227,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":228,"author":{"gitId":"sarzorwyn"},"content":"This command allows you to move the location of the saved file, if you desire a different location ","lastModifiedDate":"2021-03-30"},{"lineNumber":229,"author":{"gitId":"sarzorwyn"},"content":"from the default setting. A suggested use would be to set it to the current date, so that you can easily refer to","lastModifiedDate":"2021-03-30"},{"lineNumber":230,"author":{"gitId":"sarzorwyn"},"content":"the records if needed.","lastModifiedDate":"2021-03-30"},{"lineNumber":231,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":232,"author":{"gitId":"iamakilahamed"},"content":"#### Format: `movestorage NEW_DESTINATION`","lastModifiedDate":"2021-03-29"},{"lineNumber":233,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":234,"author":{"gitId":"iamakilahamed"},"content":"#### Example Input: `movestorage /new/test`","lastModifiedDate":"2021-03-29"},{"lineNumber":235,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":236,"author":{"gitId":"iamakilahamed"},"content":"#### Example Output:","lastModifiedDate":"2021-03-29"},{"lineNumber":237,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":238,"author":{"gitId":"limwenfeng"},"content":"![movestorage_success](images/moveStorage_success.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":239,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":240,"author":{"gitId":"iamakilahamed"},"content":"### Exiting CYC: `exit`","lastModifiedDate":"2021-03-26"},{"lineNumber":241,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":242,"author":{"gitId":"limwenfeng"},"content":"`exit` command will save the current state of CYC before exiting the programme. ","lastModifiedDate":"2021-03-31"},{"lineNumber":243,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":244,"author":{"gitId":"iamakilahamed"},"content":"#### Format: `exit`","lastModifiedDate":"2021-03-29"},{"lineNumber":245,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":246,"author":{"gitId":"iamakilahamed"},"content":"#### Example Input: `exit`","lastModifiedDate":"2021-03-29"},{"lineNumber":247,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":248,"author":{"gitId":"iamakilahamed"},"content":"#### Example Output: ","lastModifiedDate":"2021-03-29"},{"lineNumber":249,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":250,"author":{"gitId":"limwenfeng"},"content":"![exit](images/exit_success.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":252,"author":{"gitId":"iamakilahamed"},"content":"### Visitor Log","lastModifiedDate":"2021-03-27"},{"lineNumber":253,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":254,"author":{"gitId":"limwenfeng"},"content":"CYC automatically saves the details of previous persons therefore providing the users with a","lastModifiedDate":"2021-03-31"},{"lineNumber":255,"author":{"gitId":"limwenfeng"},"content":"convenient location to retrieve all particulars and details of visitors. ","lastModifiedDate":"2021-03-31"},{"lineNumber":256,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":257,"author":{"gitId":"limwenfeng"},"content":"With Visitor log,","lastModifiedDate":"2021-03-31"},{"lineNumber":258,"author":{"gitId":"limwenfeng"},"content":"a person who have checked in before, does not have to input all his details ","lastModifiedDate":"2021-03-31"},{"lineNumber":259,"author":{"gitId":"limwenfeng"},"content":"again when using the `checkin` command.","lastModifiedDate":"2021-03-31"},{"lineNumber":260,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":261,"author":{"gitId":"hussain1998"},"content":"The person details are stored in `/LogFile.txt` in the same folder as the program.","lastModifiedDate":"2021-03-27"},{"lineNumber":262,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":263,"author":{"gitId":"limwenfeng"},"content":"### Auto Save","lastModifiedDate":"2021-03-31"},{"lineNumber":264,"author":{"gitId":"sarzorwyn"},"content":"The program automatically saves data to a `.txt` file after each command you input.","lastModifiedDate":"2021-03-27"},{"lineNumber":265,"author":{"gitId":"sarzorwyn"},"content":"The program defaults to saving to `/TrackingList.txt` in the same folder as the program.","lastModifiedDate":"2021-03-27"},{"lineNumber":266,"author":{"gitId":"limwenfeng"},"content":"As such, you do not have to worry about saving the data or memory loss in case of","lastModifiedDate":"2021-03-31"},{"lineNumber":267,"author":{"gitId":"limwenfeng"},"content":"programme crash. ","lastModifiedDate":"2021-03-31"},{"lineNumber":268,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":269,"author":{"gitId":"iamakilahamed"},"content":"### Changing save location","lastModifiedDate":"2021-03-29"},{"lineNumber":270,"author":{"gitId":"limwenfeng"},"content":"To change the save location, you can use the command `movestorage`. The command format for move storage","lastModifiedDate":"2021-03-31"},{"lineNumber":271,"author":{"gitId":"limwenfeng"},"content":"is stated above. ","lastModifiedDate":"2021-03-31"},{"lineNumber":272,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":273,"author":{"gitId":"iamakilahamed"},"content":"### History","lastModifiedDate":"2021-03-27"},{"lineNumber":274,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":275,"author":{"gitId":"limwenfeng"},"content":"CYC automatically keeps a back up of the checkin and checkout history in `history.txt` file after","lastModifiedDate":"2021-03-31"},{"lineNumber":276,"author":{"gitId":"limwenfeng"},"content":"each check in and check out operation.","lastModifiedDate":"2021-03-31"},{"lineNumber":277,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":278,"author":{"gitId":"limwenfeng"},"content":"Users, such as event organiser or mall owners, could therefore study these data for future planning and necessary","lastModifiedDate":"2021-03-28"},{"lineNumber":279,"author":{"gitId":"limwenfeng"},"content":"upgrade of facilities. History data is also stored in CSV format, comma separated values such that it can be ","lastModifiedDate":"2021-03-31"},{"lineNumber":280,"author":{"gitId":"limwenfeng"},"content":"extracted and cleaned to use for automatic data analytics.","lastModifiedDate":"2021-03-31"},{"lineNumber":281,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":282,"author":{"gitId":"iamakilahamed"},"content":"### Saving history","lastModifiedDate":"2021-03-29"},{"lineNumber":283,"author":{"gitId":"limwenfeng"},"content":"The program automatically saves the history to \u0027history.txt\u0027 file after each checkin and checkout operation.","lastModifiedDate":"2021-03-28"},{"lineNumber":284,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":285,"author":{"gitId":"iamakilahamed"},"content":"### Clearing history","lastModifiedDate":"2021-03-29"},{"lineNumber":286,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":287,"author":{"gitId":"limwenfeng"},"content":"In the unlikely event that, your machine runs our of storage space or you want to reset","lastModifiedDate":"2021-03-31"},{"lineNumber":288,"author":{"gitId":"limwenfeng"},"content":"the history. You can follow these steps, to clear history.","lastModifiedDate":"2021-03-31"},{"lineNumber":289,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":290,"author":{"gitId":"limwenfeng"},"content":"To clear history, please follow the following steps:","lastModifiedDate":"2021-03-28"},{"lineNumber":291,"author":{"gitId":"limwenfeng"},"content":"1. Exit CYC.","lastModifiedDate":"2021-03-28"},{"lineNumber":292,"author":{"gitId":"limwenfeng"},"content":"2. Locate the directory of CYC on the computer.","lastModifiedDate":"2021-03-28"},{"lineNumber":293,"author":{"gitId":"limwenfeng"},"content":"3. Locate `/History.txt` and delete the file directly. ","lastModifiedDate":"2021-03-28"},{"lineNumber":294,"author":{"gitId":"limwenfeng"},"content":"   (CYC will create a new History file upon a restart.)","lastModifiedDate":"2021-03-31"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":296,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":298,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":300,"author":{"gitId":"hussain1998"},"content":"**A**: Please follow these steps:","lastModifiedDate":"2021-03-27"},{"lineNumber":301,"author":{"gitId":"hussain1998"},"content":"1. Follow the [Quick Start](UserGuide.md#quick-start) guide and install CYC on the computer","lastModifiedDate":"2021-03-27"},{"lineNumber":302,"author":{"gitId":"limwenfeng"},"content":"2. Transfer the `/History.txt`,`/LogFile.txt` and `/TrackingList.txt` to the target computer\u0027s main CYC folder.","lastModifiedDate":"2021-03-28"},{"lineNumber":303,"author":{"gitId":"hussain1998"},"content":"3. Start CYC and it will automatically load the data.","lastModifiedDate":"2021-03-27"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":307,"author":{"gitId":"iamakilahamed"},"content":"Action | Format | Examples","lastModifiedDate":"2021-03-26"},{"lineNumber":308,"author":{"gitId":"iamakilahamed"},"content":"--- | --- | ---","lastModifiedDate":"2021-03-26"},{"lineNumber":309,"author":{"gitId":"iamakilahamed"},"content":"Help | `help` | `help`","lastModifiedDate":"2021-03-26"},{"lineNumber":310,"author":{"gitId":"limwenfeng"},"content":"Check-in a person | `checkin i/LAST_4_CHARS_OF_ID n/NAME [p/PHONE_NUMBER]` | `checkin  i/123A n/John p/91231112`","lastModifiedDate":"2021-03-28"},{"lineNumber":311,"author":{"gitId":"iamakilahamed"},"content":"List all person | `listall` | `listall`","lastModifiedDate":"2021-03-26"},{"lineNumber":312,"author":{"gitId":"iamakilahamed"},"content":"List checked-in persons only | `list` | `list`","lastModifiedDate":"2021-03-26"},{"lineNumber":313,"author":{"gitId":"iamakilahamed"},"content":"Find person by ID | `find i/LAST_4_CHARS_OF_ID` | `find i/123A`","lastModifiedDate":"2021-03-26"},{"lineNumber":314,"author":{"gitId":"iamakilahamed"},"content":"Checkout a person | `checkout [n/NAME] i/LAST_4_CHARS_OF_ID` | `checkout n/John i/123A`","lastModifiedDate":"2021-03-26"},{"lineNumber":315,"author":{"gitId":"iamakilahamed"},"content":"Clear all entries | `clear` | `clear`","lastModifiedDate":"2021-03-26"},{"lineNumber":316,"author":{"gitId":"iamakilahamed"},"content":"Edit venue capacity | `editmax NEW_CAPACITY` | `editmax 100`","lastModifiedDate":"2021-03-26"},{"lineNumber":317,"author":{"gitId":"iamakilahamed"},"content":"Move storage | `movestorage PATH` | `movestorage data/storage`","lastModifiedDate":"2021-03-27"},{"lineNumber":318,"author":{"gitId":"iamakilahamed"},"content":"Exit | `exit` | `exit`","lastModifiedDate":"2021-03-26"},{"lineNumber":319,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"JonathanKhooTY":38,"iamakilahamed":128,"limwenfeng":104,"sarzorwyn":11,"hussain1998":8,"-":31}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.commands.CommandOutput;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.commands.ExitCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"limwenfeng"},"content":"import seedu.duke.exceptions.HistoryStorageException;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"limwenfeng"},"content":"import seedu.duke.exceptions.InvalidCommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"limwenfeng"},"content":"import seedu.duke.exceptions.InvalidIdException;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"limwenfeng"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"limwenfeng"},"content":"import seedu.duke.exceptions.InvalidMaxCapacityException;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"limwenfeng"},"content":"import seedu.duke.exceptions.InvalidArgumentSizeException;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"limwenfeng"},"content":"import seedu.duke.exceptions.NoArgumentPassedException;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"limwenfeng"},"content":"import seedu.duke.exceptions.WrongFlagException;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"limwenfeng"},"content":"import seedu.duke.exceptions.InvalidNameFormatException;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"limwenfeng"},"content":"import seedu.duke.exceptions.InvalidPhoneNumberException;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"limwenfeng"},"content":"import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"limwenfeng"},"content":"import seedu.duke.exceptions.InvalidIntegerException;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"limwenfeng"},"content":"import seedu.duke.history.HistoryFile;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.location.Location;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.PersonLog;","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.storage.ConfigFile;","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.storage.StorageFile;","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.ui.TextUi;","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"limwenfeng"},"content":"    private static final String VERSION_NO \u003d \"v2.0\";","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"sarzorwyn"},"content":"    private TextUi ui;","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"sarzorwyn"},"content":"    private Parser parser;","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"sarzorwyn"},"content":"    private StorageFile storage;","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"sarzorwyn"},"content":"    private TrackingList trackingList;","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"    private Location location;","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"hussain1998"},"content":"    private PersonLog personLog;","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"sarzorwyn"},"content":"    private ConfigFile configFile;","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"limwenfeng"},"content":"    private HistoryFile historyFile;","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":"    private static Duke theOnlyDuke \u003d null;","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"    private Duke() {","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"iamakilahamed"},"content":"    public static Duke getInstance() {","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"iamakilahamed"},"content":"        if (theOnlyDuke \u003d\u003d null) {","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"iamakilahamed"},"content":"            theOnlyDuke \u003d new Duke();","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"iamakilahamed"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"iamakilahamed"},"content":"        return theOnlyDuke;","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"limwenfeng"},"content":"    public static void main(String[] args) throws HistoryStorageException {","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"iamakilahamed"},"content":"        getInstance().run(args);","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":54,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":55,"author":{"gitId":"limwenfeng"},"content":"    public void run(String[] args) throws HistoryStorageException {","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"iamakilahamed"},"content":"        start(args);","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"sarzorwyn"},"content":"        runUntilExit();","lastModifiedDate":"2021-03-20"},{"lineNumber":58,"author":{"gitId":"sarzorwyn"},"content":"        exit();","lastModifiedDate":"2021-03-20"},{"lineNumber":59,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":60,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":61,"author":{"gitId":"sarzorwyn"},"content":"    /** Prints Goodbye message then exists. */","lastModifiedDate":"2021-03-20"},{"lineNumber":62,"author":{"gitId":"limwenfeng"},"content":"    private void exit() throws HistoryStorageException {","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"limwenfeng"},"content":"        historyFile.endHistory();","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"sarzorwyn"},"content":"        System.exit(0);","lastModifiedDate":"2021-03-20"},{"lineNumber":65,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":66,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":67,"author":{"gitId":"sarzorwyn"},"content":"    /** Main entry-point for the java.duke.Duke application. */","lastModifiedDate":"2021-03-20"},{"lineNumber":68,"author":{"gitId":"iamakilahamed"},"content":"    private void start(String[] args) {","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"sarzorwyn"},"content":"        ui \u003d new TextUi();","lastModifiedDate":"2021-03-20"},{"lineNumber":70,"author":{"gitId":"sarzorwyn"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-03-20"},{"lineNumber":71,"author":{"gitId":"hussain1998"},"content":"        personLog \u003d PersonLog.getInstance();","lastModifiedDate":"2021-03-26"},{"lineNumber":72,"author":{"gitId":"sarzorwyn"},"content":"        try {","lastModifiedDate":"2021-03-20"},{"lineNumber":73,"author":{"gitId":"iamakilahamed"},"content":"            location \u003d new Location(args);","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"limwenfeng"},"content":"            historyFile \u003d new HistoryFile();","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"sarzorwyn"},"content":"            configFile \u003d new ConfigFile();","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"sarzorwyn"},"content":"            storage \u003d new StorageFile(configFile.getStorageFilePath());","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"sarzorwyn"},"content":"            trackingList \u003d storage.load();","lastModifiedDate":"2021-03-20"},{"lineNumber":78,"author":{"gitId":"hussain1998"},"content":"            personLog.loadAllPersons();","lastModifiedDate":"2021-03-26"},{"lineNumber":79,"author":{"gitId":"limwenfeng"},"content":"            historyFile.startHistory();","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"iamakilahamed"},"content":"        } catch (StorageOperationException | HistoryStorageException e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"sarzorwyn"},"content":"            // Shut the program down as it can not be recovered","lastModifiedDate":"2021-03-20"},{"lineNumber":82,"author":{"gitId":"hussain1998"},"content":"            // throw new RuntimeException();","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"hussain1998"},"content":"            ui.notifyErrorToUser(e);","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"iamakilahamed"},"content":"        } catch (InvalidMaxCapacityException | InvalidArgumentSizeException e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"iamakilahamed"},"content":"            ui.notifyErrorToUser(e);","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"iamakilahamed"},"content":"            System.exit(0);","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":88,"author":{"gitId":"sarzorwyn"},"content":"        ui.showWelcomeMessage(VERSION_NO);","lastModifiedDate":"2021-03-20"},{"lineNumber":89,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":90,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":91,"author":{"gitId":"sarzorwyn"},"content":"    /** Reads the user command and executes it, until the user issues the exit command. */","lastModifiedDate":"2021-03-20"},{"lineNumber":92,"author":{"gitId":"sarzorwyn"},"content":"    private void runUntilExit() {","lastModifiedDate":"2021-03-20"},{"lineNumber":93,"author":{"gitId":"hussain1998"},"content":"        Command command \u003d null;","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"hussain1998"},"content":"        String userInput;","lastModifiedDate":"2021-03-10"},{"lineNumber":95,"author":{"gitId":"hussain1998"},"content":"        do {","lastModifiedDate":"2021-03-10"},{"lineNumber":96,"author":{"gitId":"hussain1998"},"content":"            userInput \u003d ui.getUserInput();","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"hussain1998"},"content":"            try {","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"hussain1998"},"content":"                command \u003d parser.parseCommand(userInput);","lastModifiedDate":"2021-03-10"},{"lineNumber":99,"author":{"gitId":"iamakilahamed"},"content":"            } catch (InvalidCommandException | NoArgumentPassedException | WrongFlagException | InvalidIdException","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"iamakilahamed"},"content":"                    | InvalidNameFormatException | InvalidPhoneNumberException | StorageOperationException","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"iamakilahamed"},"content":"                    | InvalidIntegerException | PersonNotFoundException | InvalidMaxCapacityException e) {","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"limwenfeng"},"content":"                ui.notifyErrorToUser(e);","lastModifiedDate":"2021-03-21"},{"lineNumber":103,"author":{"gitId":"hussain1998"},"content":"                continue;","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"hussain1998"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"hussain1998"},"content":"            CommandOutput commandOutput \u003d null;","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"hussain1998"},"content":"            try {","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"hussain1998"},"content":"                commandOutput \u003d command.execute(trackingList);","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"sarzorwyn"},"content":"                storage.save(trackingList);","lastModifiedDate":"2021-03-20"},{"lineNumber":110,"author":{"gitId":"hussain1998"},"content":"                personLog.saveAllPersons();","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"sarzorwyn"},"content":"                ui.printReaction(commandOutput);","lastModifiedDate":"2021-03-20"},{"lineNumber":112,"author":{"gitId":"limwenfeng"},"content":"            } catch (PersonNotFoundException | StorageOperationException","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"limwenfeng"},"content":"                    | HistoryStorageException e) {","lastModifiedDate":"2021-03-28"},{"lineNumber":114,"author":{"gitId":"hussain1998"},"content":"                //System.out.println(\"Person not found!\");","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"limwenfeng"},"content":"                ui.notifyErrorToUser(e);","lastModifiedDate":"2021-03-28"},{"lineNumber":116,"author":{"gitId":"JonathanKhooTY"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":118,"author":{"gitId":"hussain1998"},"content":"        } while (!(command instanceof ExitCommand));","lastModifiedDate":"2021-03-10"},{"lineNumber":119,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":120,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":121,"author":{"gitId":"iamakilahamed"},"content":"    public Location getLocation() {","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"iamakilahamed"},"content":"        return location;","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"sarzorwyn"},"content":"    public StorageFile getStorage() {","lastModifiedDate":"2021-03-27"},{"lineNumber":126,"author":{"gitId":"sarzorwyn"},"content":"        return storage;","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"sarzorwyn"},"content":"    public void setStorage(StorageFile storage) {","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"sarzorwyn"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":133,"author":{"gitId":"sarzorwyn"},"content":"    public ConfigFile getConfigFile() {","lastModifiedDate":"2021-03-27"},{"lineNumber":134,"author":{"gitId":"sarzorwyn"},"content":"        return configFile;","lastModifiedDate":"2021-03-27"},{"lineNumber":135,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":136,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":137,"author":{"gitId":"limwenfeng"},"content":"    public HistoryFile getHistoryFile() {","lastModifiedDate":"2021-03-28"},{"lineNumber":138,"author":{"gitId":"limwenfeng"},"content":"        return historyFile;","lastModifiedDate":"2021-03-28"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"iamakilahamed":30,"JonathanKhooTY":2,"limwenfeng":28,"sarzorwyn":44,"hussain1998":29,"-":7}},{"path":"src/main/java/seedu/duke/commands/CheckInCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"limwenfeng"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"limwenfeng"},"content":"import seedu.duke.exceptions.HistoryStorageException;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"limwenfeng"},"content":"import seedu.duke.history.HistoryFile;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.location.Location;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.person.Id;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.person.Name;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.person.Person;","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.person.PersonLog;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.person.Phone;","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":" * Check in a visitor.","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":" * Adds a new visitor to the trackingList and personLog.","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":"public class CheckInCommand extends Command {","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"    public static final String COMMAND \u003d \"checkin\";","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"    private final Location location \u003d Duke.getInstance().getLocation();","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"    private static int CURRENT_CAPACITY;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"    private static int MAXIMUM_CAPACITY;","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"    public static final String CHECKIN_SUCCESS_MESSAGE \u003d \"%s has been successfully checked-in!\"","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"            + System.lineSeparator();","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"limwenfeng"},"content":"    public static final String CURRENT_AND_MAX_CAPACITY_MESSAGE \u003d \"Current capacity: %d out of %d.\";","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"    public static final String CHECKIN_FAIL_MESSAGE \u003d \"Unable to check in! Maximum capacity of %d reached!\";","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"    private final Person toCheckin;","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"    private final HistoryFile historyFile;","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"     * Creates a CheckInCommand to checkin a visitor.","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"     * New visitor is added to the personLog.","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"     * @param idString ID of the visitor","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":"     * @param nameString name of the visitor","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"iamakilahamed"},"content":"     * @param phoneString phone number of the visitor","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"     * @throws StorageOperationException if there are errors reading the file","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"iamakilahamed"},"content":"     * @throws PersonNotFoundException if the visitor cannot be found in the personLog","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"iamakilahamed"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"iamakilahamed"},"content":"    public CheckInCommand(String idString,","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"iamakilahamed"},"content":"                          String nameString,","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"iamakilahamed"},"content":"                          String phoneString) throws StorageOperationException, PersonNotFoundException {","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"iamakilahamed"},"content":"        Id id \u003d new Id(idString);","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"limwenfeng"},"content":"        historyFile \u003d Duke.getInstance().getHistoryFile();","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"iamakilahamed"},"content":"        PersonLog personLog \u003d PersonLog.getInstance();","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"iamakilahamed"},"content":"        if (personLog.isFound(id)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"iamakilahamed"},"content":"            toCheckin \u003d personLog.findPerson(id);","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"hussain1998"},"content":"            checkSameName(nameString);","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"iamakilahamed"},"content":"        } else if (nameString \u003d\u003d null) {","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"iamakilahamed"},"content":"            throw new PersonNotFoundException(Messages.PERSON_NOT_FOUND);","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"iamakilahamed"},"content":"        } else {","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"iamakilahamed"},"content":"            toCheckin \u003d new Person(id, new Name(nameString), new Phone(phoneString));","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"iamakilahamed"},"content":"            personLog.addPerson(toCheckin);","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"iamakilahamed"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"iamakilahamed"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"iamakilahamed"},"content":"     * Checks if the visitor checking in has the same ID as someone else in the personLog.","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"iamakilahamed"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"iamakilahamed"},"content":"     * @param nameString name of the visitor","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"iamakilahamed"},"content":"     * @throws PersonNotFoundException if another person with the same ID is found in the personLog","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"iamakilahamed"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"hussain1998"},"content":"    private void checkSameName(String nameString) throws PersonNotFoundException {","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"hussain1998"},"content":"        if (nameString \u003d\u003d null) {","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"hussain1998"},"content":"            return;","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"hussain1998"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"hussain1998"},"content":"        if (!toCheckin.getName().toString().equals(nameString)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"hussain1998"},"content":"            throw new PersonNotFoundException(Messages.DIFF_NAME_SAME_ID);","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"hussain1998"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"hussain1998"},"content":"    public Person getToCheckIn() {","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"iamakilahamed"},"content":"        return toCheckin;","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":79,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":80,"author":{"gitId":"iamakilahamed"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"iamakilahamed"},"content":"     * Executes the CheckinCommand.","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"iamakilahamed"},"content":"     * Restricts visitors from checking in if maximum capacity reached.","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"iamakilahamed"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"iamakilahamed"},"content":"     * @param trackingList list of visitors","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"iamakilahamed"},"content":"     * @return check in success message or check in failure message depending on the current capacity","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"iamakilahamed"},"content":"     * @throws HistoryStorageException if there are problems saving into the file","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"iamakilahamed"},"content":"     * @throws PersonNotFoundException if visitor cannot be found in the trackingList with the ID","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"iamakilahamed"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"iamakilahamed"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":90,"author":{"gitId":"iamakilahamed"},"content":"    public CommandOutput execute(TrackingList trackingList) throws HistoryStorageException, PersonNotFoundException {","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"iamakilahamed"},"content":"        // historyFile \u003d new HistoryFile();","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"iamakilahamed"},"content":"        MAXIMUM_CAPACITY \u003d location.getMaxCapacity();","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"iamakilahamed"},"content":"        if (trackingList.getCurrentCapacity() \u003e\u003d MAXIMUM_CAPACITY) {","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"iamakilahamed"},"content":"            return new CommandOutput(String.format(CHECKIN_FAIL_MESSAGE, MAXIMUM_CAPACITY), COMMAND);","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"iamakilahamed"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"iamakilahamed"},"content":"        if (!trackingList.contains(toCheckin)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"hussain1998"},"content":"            toCheckin.setCheckedIn(true);","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"iamakilahamed"},"content":"            trackingList.add(toCheckin);","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"iamakilahamed"},"content":"        } else {","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"iamakilahamed"},"content":"            trackingList.findExactPerson(toCheckin.getId()).setCheckedIn(true);","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"hussain1998"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"iamakilahamed"},"content":"        historyFile.saveToHistory(toCheckin, \" checked in at \");","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"iamakilahamed"},"content":"        CURRENT_CAPACITY \u003d trackingList.getCurrentCapacity();","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"iamakilahamed"},"content":"        return new CommandOutput(String.format(CHECKIN_SUCCESS_MESSAGE, toCheckin.getName())","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"limwenfeng"},"content":"                + String.format(CURRENT_AND_MAX_CAPACITY_MESSAGE, CURRENT_CAPACITY, MAXIMUM_CAPACITY), COMMAND);","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":107,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":108,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"iamakilahamed":87,"JonathanKhooTY":1,"limwenfeng":6,"hussain1998":14}},{"path":"src/main/java/seedu/duke/commands/CheckoutCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"limwenfeng"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"limwenfeng"},"content":"import seedu.duke.exceptions.HistoryStorageException;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.location.Location;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.person.Id;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.person.Name;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.person.Person;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"limwenfeng"},"content":"import seedu.duke.history.HistoryFile;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":" * Check out a visitor.","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"public class CheckoutCommand extends Command {","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"    public static final String COMMAND \u003d \"checkout\";","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"    private final Location location \u003d Duke.getInstance().getLocation();","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"    private static int CURRENT_CAPACITY;","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"    private static int MAXIMUM_CAPACITY;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"limwenfeng"},"content":"    public static final String CURRENT_AND_MAXIMUM_MESSAGE \u003d \"Current capacity: %d out of %d\";","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"    public static final String CHECKOUT_MESSAGE \u003d \"%s has been successfully checked-out!\" + System.lineSeparator();","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"    private final Id id;","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"    private String nameString;","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"hussain1998"},"content":"    private Person toCheckout;","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"    private static final Logger logger \u003d Logger.getLogger(CheckoutCommand.class.getName());","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"limwenfeng"},"content":"    private HistoryFile historyFile;","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"     * Creates a CheckoutCommand to checkout a visitor.","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":"     * @param idString ID of the visitor who wants to check out","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"     * @param nameString name of the visitor who wants ti check out","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"iamakilahamed"},"content":"    public CheckoutCommand(String idString,String nameString) {","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"        this.id \u003d new Id(idString);","lastModifiedDate":"2021-03-20"},{"lineNumber":42,"author":{"gitId":"limwenfeng"},"content":"        historyFile \u003d Duke.getInstance().getHistoryFile();","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"iamakilahamed"},"content":"        if (nameString \u003d\u003d null) {","lastModifiedDate":"2021-03-20"},{"lineNumber":44,"author":{"gitId":"iamakilahamed"},"content":"            this.nameString \u003d null;","lastModifiedDate":"2021-03-20"},{"lineNumber":45,"author":{"gitId":"iamakilahamed"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":46,"author":{"gitId":"iamakilahamed"},"content":"        this.nameString \u003d nameString;","lastModifiedDate":"2021-03-20"},{"lineNumber":47,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"iamakilahamed"},"content":"    public Person getToCheckout() {","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"iamakilahamed"},"content":"        return toCheckout;","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"iamakilahamed"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"iamakilahamed"},"content":"     * Executes the CheckoutCommand.","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"iamakilahamed"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"iamakilahamed"},"content":"     * @param trackingList list of visitors","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"iamakilahamed"},"content":"     * @return checkout message with the information about the current capacity in the venue","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"iamakilahamed"},"content":"     * @throws PersonNotFoundException if the visitor cannot be found in the trackingList with the ID","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"iamakilahamed"},"content":"     * @throws HistoryStorageException if there are problems saving into the file","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"iamakilahamed"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"iamakilahamed"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"limwenfeng"},"content":"    public CommandOutput execute(TrackingList trackingList) throws PersonNotFoundException, HistoryStorageException {","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"iamakilahamed"},"content":"        // historyFile \u003d new HistoryFile();","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"JonathanKhooTY"},"content":"        toCheckout \u003d trackingList.findExactPerson(id);","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"iamakilahamed"},"content":"        Name toCheckoutName \u003d toCheckout.getName();","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"iamakilahamed"},"content":"        if (nameString !\u003d null) {","lastModifiedDate":"2021-03-20"},{"lineNumber":67,"author":{"gitId":"iamakilahamed"},"content":"            boolean isSamePerson \u003d toCheckoutName.getNameString().equals(nameString);","lastModifiedDate":"2021-03-20"},{"lineNumber":68,"author":{"gitId":"iamakilahamed"},"content":"            if (!isSamePerson) {","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"iamakilahamed"},"content":"                logger.warning(\"ID entered does not match the name from the list.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"iamakilahamed"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"iamakilahamed"},"content":"            assert isSamePerson : \"ID does not match name.\";","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"iamakilahamed"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":73,"author":{"gitId":"JonathanKhooTY"},"content":"        if (toCheckout \u003d\u003d null) {","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"iamakilahamed"},"content":"            throw new PersonNotFoundException(Messages.PERSON_NOT_FOUND);","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"JonathanKhooTY"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"iamakilahamed"},"content":"        toCheckout.setCheckedIn(false);","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"limwenfeng"},"content":"        historyFile.saveToHistory(toCheckout, \" checked out at \");","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"iamakilahamed"},"content":"        MAXIMUM_CAPACITY \u003d location.getMaxCapacity();","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"iamakilahamed"},"content":"        CURRENT_CAPACITY \u003d trackingList.getCurrentCapacity();","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"iamakilahamed"},"content":"        return new CommandOutput(String.format(CHECKOUT_MESSAGE, toCheckoutName)","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"limwenfeng"},"content":"                + String.format(CURRENT_AND_MAXIMUM_MESSAGE, CURRENT_CAPACITY, MAXIMUM_CAPACITY), COMMAND);","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":83,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":84,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"iamakilahamed":65,"JonathanKhooTY":8,"limwenfeng":9,"hussain1998":2}},{"path":"src/main/java/seedu/duke/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":" * Clears all the entries in trackingList.","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"    public static final String COMMAND \u003d \"clear\";","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"    public static final String CLEAR_MESSAGE \u003d \"Cleared %d entries\";","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"     * Executes the ClearCommand.","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"     * @param trackingList the list of visitors","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"     * @return a message to user indicating the number of entries cleared","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"    public CommandOutput execute(TrackingList trackingList) {","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"        int entriesCleared \u003d trackingList.getSize();","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"        trackingList.clear();","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"        return new CommandOutput(String.format(CLEAR_MESSAGE, entriesCleared), COMMAND);","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"iamakilahamed":23,"hussain1998":3}},{"path":"src/main/java/seedu/duke/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"limwenfeng"},"content":"import seedu.duke.exceptions.HistoryStorageException;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":" * Represents an executable command.","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"public abstract class Command {","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"    protected Command() {","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"     * Executes the command.","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"sarzorwyn"},"content":"    public abstract CommandOutput execute(TrackingList trackingList) throws","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"limwenfeng"},"content":"            PersonNotFoundException, StorageOperationException, HistoryStorageException;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"iamakilahamed":15,"JonathanKhooTY":1,"limwenfeng":2,"sarzorwyn":2,"hussain1998":2}},{"path":"src/main/java/seedu/duke/commands/CommandOutput.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"import java.util.List;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":" * Represents the output of a command execution.","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"public class CommandOutput {","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    public final String messageToUser;","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"    public final List\u003cPerson\u003e persons;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"    public final Person person;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"    public final String command;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"     * Creates a CommandOutput that returns a message to the user.","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"     * @param messageToUser message directly displayed to user","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"     * @param command command that the user had provided","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"    public CommandOutput(String messageToUser, String command) {","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"        this.messageToUser \u003d messageToUser;","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"        persons \u003d null;","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"hussain1998"},"content":"        person \u003d null;","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"     * Creates a CommandOutput that returns a list of visitors.","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"     * The list will be formatted properly in the TextUi before displaying it to the user.","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"     * @param persons required list of visitors","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"     * @param command command that the user had provided","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"hussain1998"},"content":"    public CommandOutput(List\u003cPerson\u003e persons, String command) {","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"        messageToUser \u003d null;","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":"        this.persons \u003d persons;","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"hussain1998"},"content":"        person \u003d null;","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"hussain1998"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"iamakilahamed"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"iamakilahamed"},"content":"     * Creates a CommandOutput that returns a visitor.","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"iamakilahamed"},"content":"     * The details of the visitor will be used by the TextUi before displaying it to the user.","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"iamakilahamed"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"iamakilahamed"},"content":"     * @param person required visitor","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"iamakilahamed"},"content":"     * @param command command that the user had provided","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"iamakilahamed"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"iamakilahamed"},"content":"    public CommandOutput(Person person, String command) {","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"iamakilahamed"},"content":"        this.messageToUser \u003d null;","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"hussain1998"},"content":"        persons \u003d null;","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"hussain1998"},"content":"        this.person \u003d person;","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"hussain1998"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"iamakilahamed":41,"hussain1998":17}},{"path":"src/main/java/seedu/duke/commands/EditMaxCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.InvalidMaxCapacityException;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.location.Location;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.common.Messages.INVALID_MAX_CAPACITY;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":" * Set a new maximum capacity for the venue.","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"public class EditMaxCommand extends Command {","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"    public static final String COMMAND \u003d \"editmax\";","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    private static final String NEW_CAPACITY_REGEX \u003d \"^[0-9]{1,6}$\";","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"    public static final String EDIT_MAX_MESSAGE \u003d \"New max capacity: %d\";","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    private final int newMaxCapacity;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"    private final Location location;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"     * Creates a EditMax Command to edit the maximum capacity of the venue.","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"     * @param newMaxCapacity new capacity limit provided by user","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"     * @throws InvalidMaxCapacityException if the new capacity provided does not match the requirements","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"    public EditMaxCommand(String newMaxCapacity) throws InvalidMaxCapacityException {","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"        checkCapacityValidity(newMaxCapacity);","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"        this.newMaxCapacity \u003d Integer.parseInt(newMaxCapacity);","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"        location \u003d Duke.getInstance().getLocation();","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"     * Checks if the new maximum capacity matches the requirements.","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"     * @param newMaxCapacity new capacity limit provided by user","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":"     * @throws InvalidMaxCapacityException if the new capacity provided does not match the requirements","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":"    private void checkCapacityValidity(String newMaxCapacity) throws InvalidMaxCapacityException {","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"iamakilahamed"},"content":"        if (!newMaxCapacity.matches(NEW_CAPACITY_REGEX) || Integer.parseInt(newMaxCapacity) \u003c 0) {","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"            throw new InvalidMaxCapacityException(INVALID_MAX_CAPACITY);","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"iamakilahamed"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"iamakilahamed"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"iamakilahamed"},"content":"     * Executes the EditMaxCommand.","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"iamakilahamed"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"iamakilahamed"},"content":"     * @param trackingList list of visitors","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"iamakilahamed"},"content":"     * @return a success message to user","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"iamakilahamed"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"iamakilahamed"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"iamakilahamed"},"content":"    public CommandOutput execute(TrackingList trackingList) {","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"iamakilahamed"},"content":"        location.setMaxCapacity(newMaxCapacity);","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"iamakilahamed"},"content":"        return new CommandOutput(String.format(EDIT_MAX_MESSAGE, newMaxCapacity), COMMAND);","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"iamakilahamed":57}},{"path":"src/main/java/seedu/duke/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":" * Terminates Control Your Crowd.","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"    public static final String COMMAND \u003d \"exit\";","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"    public static final String EXIT_MESSAGE \u003d \"Exiting Control Your Crowd...\";","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"     * Executes the ExitCommand.","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"     * @param trackingList list of visitors","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"     * @return displays the exit message to the user","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"    public CommandOutput execute(TrackingList trackingList) {","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"        return new CommandOutput(EXIT_MESSAGE, COMMAND);","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"iamakilahamed":20,"hussain1998":4}},{"path":"src/main/java/seedu/duke/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.Id;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":" * Finds the person in tracking list using id.","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"    public static final String COMMAND \u003d \"find\";","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"    private final Id idKeyword;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"     * Creates a FindCommand that finds the visitor using ID as the keyword.","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"     * @param idKeyword ID of the visitor to be found","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"    public FindCommand(String idKeyword) {","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"        this.idKeyword \u003d new Id(idKeyword);","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"     * Executes the FindCommand.","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"     * @param trackingList list of visitors","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"     * @return the visitor as an Object","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"     * @throws PersonNotFoundException if a visitor of the ID provided cannot be found","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"    public CommandOutput execute(TrackingList trackingList) throws PersonNotFoundException {","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"sarzorwyn"},"content":"        Person person \u003d trackingList.findExactPerson(idKeyword);","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"        return new CommandOutput(person, COMMAND);","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"iamakilahamed":33,"sarzorwyn":1,"hussain1998":4}},{"path":"src/main/java/seedu/duke/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.common.Messages.CHECKIN_HELP;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.common.Messages.CHECKOUT_HELP;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.common.Messages.CLEAR_HELP;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.common.Messages.EDIT_CAPACITY_HELP;","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.common.Messages.EXIT_HELP;","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.common.Messages.FIND_BY_ID_HELP;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.common.Messages.LIST_ALL_HELP;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.common.Messages.LIST_CHECKED_IN_HELP;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.common.Messages.MOVE_STORAGE_HELP;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.common.Messages.USER_GUIDE_LINK_HELP;","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"    public static final String COMMAND \u003d \"help\";","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"    public static final String HELP_MESSAGE \u003d \"COMMAND SUMMARY:\\n\" + CHECKIN_HELP + System.lineSeparator()","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"            + LIST_ALL_HELP + System.lineSeparator() + LIST_CHECKED_IN_HELP + System.lineSeparator()","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"            + FIND_BY_ID_HELP + System.lineSeparator() + CHECKOUT_HELP + System.lineSeparator()","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"            + CLEAR_HELP + System.lineSeparator() + EDIT_CAPACITY_HELP + System.lineSeparator()","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"            + MOVE_STORAGE_HELP + System.lineSeparator() + EXIT_HELP + System.lineSeparator() + USER_GUIDE_LINK_HELP;","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"     * Executes the HelpCommand.","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"     * @param trackingList list of visitors","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"     * @return the command summary of all the commands","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"    public CommandOutput execute(TrackingList trackingList) {","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"        return new CommandOutput(HELP_MESSAGE, COMMAND);","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"iamakilahamed":39}},{"path":"src/main/java/seedu/duke/commands/ListCheckedInCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-19"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":" * Displays a list of visitors currently in the venue.","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"public class ListCheckedInCommand extends Command {","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"    public static final String COMMAND \u003d \"list\";","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"     * Executes the ListCheckedInCommand.","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"     * @param trackingList list of visitors","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"     * @return list of visitors who are currently in the venue","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"    @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"    public CommandOutput execute(TrackingList trackingList) {","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"        TrackingList checkedInList \u003d new TrackingList();","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"        for (int i \u003d 0; i \u003c trackingList.getSize(); i++) {","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"            if (trackingList.getPerson(i).getCheckedIn()) {","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"                checkedInList.add(trackingList.getPerson(i));","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"            }","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"        return new CommandOutput(checkedInList.listPerson(), COMMAND);","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"JonathanKhooTY":12,"iamakilahamed":17}},{"path":"src/main/java/seedu/duke/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":" * Lists all the person in the tracking list to the user.","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"    public static final String COMMAND \u003d \"listall\";","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"     * Executes the ListCommand.","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"     * @param trackingList list of visitors","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"     * @return the list of visitors who have checked in and checked out","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"    public CommandOutput execute(TrackingList trackingList) {","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"        return new CommandOutput(trackingList.listPerson(), COMMAND);","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"iamakilahamed":17,"JonathanKhooTY":2,"hussain1998":4}},{"path":"src/main/java/seedu/duke/commands/MoveStorageCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sarzorwyn"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.storage.StorageFile;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":" * Moves the storage file to another location in the user\u0027s computer.","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"public class MoveStorageCommand extends Command {","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"sarzorwyn"},"content":"    public static final String COMMAND \u003d \"movestorage\";","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"sarzorwyn"},"content":"    private final String newPath;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"sarzorwyn"},"content":"    public static final String MOVE_MESSAGE \u003d \"Moved storage file to %s.txt\";","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"     * Creates a MoveStorageCommand to move the storage file to another location.","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"     * @param path new location to store the storage file","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"sarzorwyn"},"content":"    public MoveStorageCommand(String path) {","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"sarzorwyn"},"content":"        this.newPath \u003d path;","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"     * Executes the MoveStorageCommand.","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"     * @param trackingList list of visitors","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"     * @return a success message to user","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"     * @throws StorageOperationException if there are problems saving into the file","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"sarzorwyn"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"sarzorwyn"},"content":"    public CommandOutput execute(TrackingList trackingList) throws StorageOperationException {","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"sarzorwyn"},"content":"        Duke duke \u003d Duke.getInstance();","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"sarzorwyn"},"content":"        StorageFile newStorage \u003d new StorageFile(newPath);","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"sarzorwyn"},"content":"        // Create the directory by using load","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"sarzorwyn"},"content":"        newStorage.load();","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"sarzorwyn"},"content":"        newStorage.save(trackingList);","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"sarzorwyn"},"content":"        duke.setStorage(newStorage);","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"sarzorwyn"},"content":"        if (duke.getConfigFile() !\u003d null) {","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"sarzorwyn"},"content":"            duke.getConfigFile().setStorageFilePath(newPath);","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"sarzorwyn"},"content":"        return new CommandOutput(String.format(MOVE_MESSAGE, newPath), COMMAND);","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"sarzorwyn"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"iamakilahamed":16,"sarzorwyn":30}},{"path":"src/main/java/seedu/duke/common/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.common;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"public class Messages {","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"    private static final String USER_GUIDE_LINK \u003d \"https://ay2021s2-cs2113t-t09-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"    public static final String PERSON_NOT_FOUND \u003d \"Person not found!\";","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"    public static final String DIFF_NAME_SAME_ID \u003d \"Person with the same Id already exist!\";","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"    public static final String INVALID_COMMAND \u003d \"Invalid command detected! Try again!\";","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"    public static final String NO_ARGUMENT \u003d \"No argument passed! Try again!\";","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"    public static final String WRONG_FLAG \u003d \"Wrong flags used!\";","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    public static final String INVALID_MAX_CAPACITY \u003d \"Invalid argument for max capacity! Try again!\"","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"            + System.lineSeparator() + \"E.g. java -jar CYC.jar NUS 1000\";","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"    public static final String INVALID_ARGUMENT_SIZE \u003d \"There should be exactly 2 arguments! Try again!\"","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"            + System.lineSeparator() + \"E.g. java -jar CYC.jar NUS 1000\";","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    public static final String ID_ERROR \u003d \"ID should be 3 digits followed by a uppercase letter\";","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"    public static final String NAME_ERROR \u003d \"Name should consist of alphabets (or spaces) only. (30 characters limit)\";","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    public static final String PHONE_ERROR \u003d \"Phone number should consist of only 8 digits\";","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"    public static final String INVALID_INTEGER \u003d \"Argument should only consist of positive integers!\";","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"    public static final String CHECKIN_HELP \u003d \"Check-in visitor: checkin n/NAME i/LAST_4_CHARS_OF_ID [p/PHONE_NUMBER]\";","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"    public static final String LIST_ALL_HELP \u003d \"List all visitors: listall\";","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"    public static final String LIST_CHECKED_IN_HELP \u003d \"List checked-in visitors only: list\";","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"    public static final String FIND_BY_ID_HELP \u003d \"Find visitor by ID: find i/LAST_4_CHARS_OF_ID\";","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"    public static final String CHECKOUT_HELP \u003d \"Checkout visitor: checkout [n/NAME] i/LAST_4_CHARS_OF_ID\";","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"    public static final String CLEAR_HELP \u003d \"Clear all visitor entries: clear\";","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"    public static final String EDIT_CAPACITY_HELP \u003d \"Edit venue capacity: editmax NEW_CAPACITY\";","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"    public static final String MOVE_STORAGE_HELP \u003d \"Move location of storage file: movestorage PATH\";","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"    public static final String EXIT_HELP \u003d \"Exit Control Your Crowd: exit\";","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"    public static final String USER_GUIDE_LINK_HELP \u003d \"Refer to the user guide: \" + USER_GUIDE_LINK;","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"JonathanKhooTY":4,"iamakilahamed":26,"hussain1998":1}},{"path":"src/main/java/seedu/duke/datetime/DateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limwenfeng"},"content":"package seedu.duke.datetime;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"limwenfeng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"limwenfeng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"limwenfeng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"limwenfeng"},"content":"public class DateTime {","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"limwenfeng"},"content":"    DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm:ss\");","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"limwenfeng"},"content":"    DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"limwenfeng"},"content":"    LocalDateTime dateAndTime \u003d LocalDateTime.now();","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"limwenfeng"},"content":"    LocalDate dateOnly \u003d LocalDate.now();","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"limwenfeng"},"content":"    public String getDateAndTimeInString() {","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"limwenfeng"},"content":"        return dtf.format(dateAndTime);","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"limwenfeng"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"limwenfeng"},"content":"    public String getDateInString() {","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"limwenfeng"},"content":"        return df.format(dateOnly);","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"limwenfeng"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"limwenfeng"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"limwenfeng":20}},{"path":"src/main/java/seedu/duke/exceptions/HistoryStorageException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limwenfeng"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"limwenfeng"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"limwenfeng"},"content":" * Indicates that there has been an error when converting data or read/write between the application","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"limwenfeng"},"content":" * and the history file.","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"limwenfeng"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"limwenfeng"},"content":"public class HistoryStorageException extends Exception {","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"limwenfeng"},"content":"    public HistoryStorageException(String message) {","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"limwenfeng"},"content":"        super(message);","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"limwenfeng"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"limwenfeng"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"limwenfeng":13}},{"path":"src/main/java/seedu/duke/exceptions/InvalidArgumentSizeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"public class InvalidArgumentSizeException extends Exception {","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"    public InvalidArgumentSizeException(String errorMessage) {","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"        super(errorMessage);","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"iamakilahamed":9}},{"path":"src/main/java/seedu/duke/exceptions/InvalidCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"    public InvalidCommandException(String errorMessage) {","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"        super(errorMessage);","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"JonathanKhooTY":4,"iamakilahamed":5}},{"path":"src/main/java/seedu/duke/exceptions/InvalidIdException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"public class InvalidIdException extends Exception {","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"    public InvalidIdException(String errorMessage) {","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"        super(errorMessage);","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"JonathanKhooTY":7}},{"path":"src/main/java/seedu/duke/exceptions/InvalidIntegerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"public class InvalidIntegerException extends Exception {","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"    public InvalidIntegerException(String errorMessage) {","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"        super(errorMessage);","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"JonathanKhooTY":7}},{"path":"src/main/java/seedu/duke/exceptions/InvalidMaxCapacityException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"public class InvalidMaxCapacityException extends Exception {","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"    public InvalidMaxCapacityException(String errorMessage) {","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"        super(errorMessage);","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"iamakilahamed":9}},{"path":"src/main/java/seedu/duke/exceptions/InvalidNameFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"public class InvalidNameFormatException extends Exception {","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"    public InvalidNameFormatException(String errorMessage) {","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"        super(errorMessage);","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"JonathanKhooTY":7}},{"path":"src/main/java/seedu/duke/exceptions/InvalidPhoneNumberException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"public class InvalidPhoneNumberException extends Exception {","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"    public InvalidPhoneNumberException(String errorMessage) {","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"        super(errorMessage);","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"JonathanKhooTY":7}},{"path":"src/main/java/seedu/duke/exceptions/NoArgumentPassedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"public class NoArgumentPassedException extends Exception {","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"    public NoArgumentPassedException(String errorMessage) {","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"        super(errorMessage);","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"JonathanKhooTY":4,"iamakilahamed":5}},{"path":"src/main/java/seedu/duke/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"public class PersonNotFoundException extends Exception {","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"    public PersonNotFoundException(String errorMessage) {","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"        super(errorMessage);","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"JonathanKhooTY":4,"iamakilahamed":5}},{"path":"src/main/java/seedu/duke/exceptions/StorageOperationException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"/**","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":" * Indicates that there has been an error when converting data or read/write between the application","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":" * and the storage file.","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":" */","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"public class StorageOperationException extends Exception {","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"    public StorageOperationException(String message) {","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"        super(message);","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"iamakilahamed":13}},{"path":"src/main/java/seedu/duke/exceptions/WrongFlagException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"public class WrongFlagException extends Exception {","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"    public WrongFlagException(String errorMessage) {","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"        super(errorMessage);","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"JonathanKhooTY":4,"iamakilahamed":5}},{"path":"src/main/java/seedu/duke/history/HistoryFile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limwenfeng"},"content":"package seedu.duke.history;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"limwenfeng"},"content":"import seedu.duke.datetime.DateTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"limwenfeng"},"content":"import seedu.duke.exceptions.HistoryStorageException;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"limwenfeng"},"content":"import seedu.duke.person.Person;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"limwenfeng"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"limwenfeng"},"content":"import java.io.File;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"limwenfeng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"limwenfeng"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"limwenfeng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"limwenfeng"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"limwenfeng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"limwenfeng"},"content":"public class HistoryFile {","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"limwenfeng"},"content":"    public static final String DEFAULT_HISTORY_FILEPATH \u003d \"History\";","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"limwenfeng"},"content":"    public static final String FILE_FORMAT \u003d \".txt\";","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"limwenfeng"},"content":"    public static final String DIRECTORY_HOME \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"limwenfeng"},"content":"    public Path path;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"limwenfeng"},"content":"    public HistoryFile() throws InvalidPathException {","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"limwenfeng"},"content":"        this(DEFAULT_HISTORY_FILEPATH);","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"limwenfeng"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"limwenfeng"},"content":"    public HistoryFile(String path) throws InvalidPathException {","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"limwenfeng"},"content":"        if (path \u003d\u003d null) {","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"limwenfeng"},"content":"            path \u003d DEFAULT_HISTORY_FILEPATH;","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"limwenfeng"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"limwenfeng"},"content":"        this.path \u003d Paths.get(DIRECTORY_HOME,path + FILE_FORMAT);","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"limwenfeng"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"limwenfeng"},"content":"    public void saveToHistory(Person person, String movement) throws HistoryStorageException {","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"limwenfeng"},"content":"        String name \u003d person.getName().getNameString();","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"limwenfeng"},"content":"        String id \u003d person.getId().getIdString();","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"limwenfeng"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"limwenfeng"},"content":"            DateTime datetime \u003d new DateTime();","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"limwenfeng"},"content":"            File file \u003d new File(DEFAULT_HISTORY_FILEPATH + FILE_FORMAT);","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"limwenfeng"},"content":"            FileWriter fr \u003d new FileWriter(file, true);","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"limwenfeng"},"content":"            BufferedWriter br \u003d new BufferedWriter(fr);","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"limwenfeng"},"content":"            br.newLine();","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"limwenfeng"},"content":"            br.write(name + \" , \" + id + \" , \" + movement + \", \" + datetime.getDateAndTimeInString() + \" ,\");","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"limwenfeng"},"content":"            br.close();","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"limwenfeng"},"content":"            fr.close();","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"limwenfeng"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"limwenfeng"},"content":"            throw new HistoryStorageException(\"Error writing to history file: \" + path);","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"limwenfeng"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"limwenfeng"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"limwenfeng"},"content":"    public void startHistory() throws HistoryStorageException {","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"limwenfeng"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"limwenfeng"},"content":"            DateTime datetime \u003d new DateTime();","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"limwenfeng"},"content":"            File file \u003d new File(DEFAULT_HISTORY_FILEPATH + FILE_FORMAT);","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"limwenfeng"},"content":"            FileWriter fr \u003d new FileWriter(file, true);","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"limwenfeng"},"content":"            BufferedWriter br \u003d new BufferedWriter(fr);","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"limwenfeng"},"content":"            br.newLine();","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"limwenfeng"},"content":"            br.write(\",\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + datetime.getDateInString() + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d,\");","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"limwenfeng"},"content":"            br.close();","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"limwenfeng"},"content":"            fr.close();","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"limwenfeng"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"limwenfeng"},"content":"            throw new HistoryStorageException(\"Error writing to  history file: \" + path);","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"limwenfeng"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"limwenfeng"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"limwenfeng"},"content":"    public void endHistory() throws HistoryStorageException {","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"limwenfeng"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"limwenfeng"},"content":"            DateTime datetime \u003d new DateTime();","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"limwenfeng"},"content":"            File file \u003d new File(DEFAULT_HISTORY_FILEPATH + FILE_FORMAT);","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"limwenfeng"},"content":"            FileWriter fr \u003d new FileWriter(file, true);","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"limwenfeng"},"content":"            BufferedWriter br \u003d new BufferedWriter(fr);","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"limwenfeng"},"content":"            br.newLine();","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"limwenfeng"},"content":"            br.write(\",\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + datetime.getDateInString() + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d,\");","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"limwenfeng"},"content":"            br.close();","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"limwenfeng"},"content":"            fr.close();","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"limwenfeng"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"limwenfeng"},"content":"            throw new HistoryStorageException(\"Error writing to  history file: \" + path);","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"limwenfeng"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"limwenfeng"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"limwenfeng"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"limwenfeng":83}},{"path":"src/main/java/seedu/duke/location/Location.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.location;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.InvalidArgumentSizeException;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.InvalidMaxCapacityException;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":" * Details of the venue for managing the crowd levels.","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"public class Location {","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    private String locationName;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"    private int maxCapacity;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"    private static final String MAX_CAPACITY_REGEX \u003d \"^[0-9]{1,6}$\";","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"     * Creates a Location using the arguments the user had provided when running the jar file.","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"     * @param args provided by the user when running the jar file. Contains the venue name and maximum capacity.","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"     * @throws InvalidMaxCapacityException if the maximum capacity provided does not meet the requirements","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"     * @throws InvalidArgumentSizeException if the user did not provide exactly 2 arguments","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"    public Location(String[] args) throws InvalidMaxCapacityException, InvalidArgumentSizeException {","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"        checkArgumentValidity(args);","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"        this.locationName \u003d args[0];","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"        this.maxCapacity \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"    public String getLocationName() {","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"        return locationName;","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"    public void setLocationName(String locationName) {","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"        this.locationName \u003d locationName;","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":"    public int getMaxCapacity() {","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"        return maxCapacity;","lastModifiedDate":"2021-03-20"},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"    public void setMaxCapacity(int maxCapacity) {","lastModifiedDate":"2021-03-20"},{"lineNumber":42,"author":{"gitId":"iamakilahamed"},"content":"        this.maxCapacity \u003d maxCapacity;","lastModifiedDate":"2021-03-20"},{"lineNumber":43,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":44,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":45,"author":{"gitId":"iamakilahamed"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"iamakilahamed"},"content":"     * Checks if the arguments entered by the user is valid and meets the requirements specified.","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"iamakilahamed"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"iamakilahamed"},"content":"     * @param args provided by the user when running the jar file. Contains the venue name and maximum capacity.","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"iamakilahamed"},"content":"     * @throws InvalidArgumentSizeException if the user did not provide exactly 2 arguments","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"iamakilahamed"},"content":"     * @throws InvalidMaxCapacityException if the maximum capacity provided does not meet the requirements","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"iamakilahamed"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"iamakilahamed"},"content":"    private void checkArgumentValidity(String[] args) throws InvalidArgumentSizeException, InvalidMaxCapacityException {","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"iamakilahamed"},"content":"        if (args.length !\u003d 2) {","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"iamakilahamed"},"content":"            throw new InvalidArgumentSizeException(Messages.INVALID_ARGUMENT_SIZE);","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"iamakilahamed"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"iamakilahamed"},"content":"        if (!args[1].matches(MAX_CAPACITY_REGEX) || Integer.parseInt(args[1]) \u003c 0) {","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"iamakilahamed"},"content":"            throw new InvalidMaxCapacityException(Messages.INVALID_MAX_CAPACITY);","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"iamakilahamed"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"iamakilahamed":61}},{"path":"src/main/java/seedu/duke/parser/CheckInParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.CheckInCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidIdException;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidNameFormatException;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidPhoneNumberException;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.NoArgumentPassedException;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.WrongFlagException;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.person.Id;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.person.Name;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.person.Phone;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"public class CheckInParser extends Parser {","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"    protected static Command parseCheckIn(String argument) throws","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"            NoArgumentPassedException, WrongFlagException, InvalidIdException,","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"            InvalidNameFormatException, InvalidPhoneNumberException,","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":"            StorageOperationException, PersonNotFoundException {","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":"        if (argument.isBlank()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"            throw new NoArgumentPassedException(Messages.NO_ARGUMENT);","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"JonathanKhooTY"},"content":"        assert !argument.isBlank() : \"Argument cannot be blank.\";","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"JonathanKhooTY"},"content":"        if (idFlagChecker(argument) \u003d\u003d -1 || !argument.startsWith(\"i/\")) {","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"JonathanKhooTY"},"content":"            throw new WrongFlagException(Messages.WRONG_FLAG);","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"JonathanKhooTY"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"JonathanKhooTY"},"content":"        String id;","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"JonathanKhooTY"},"content":"        String name \u003d null;","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"JonathanKhooTY"},"content":"        String phoneNumber \u003d null;","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"JonathanKhooTY"},"content":"        String[] checkInDetails;","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"JonathanKhooTY"},"content":"        if (nameFlagChecker(argument) \u003d\u003d -1 \u0026\u0026 phoneFlagChecker(argument) \u003d\u003d -1) {","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"JonathanKhooTY"},"content":"            checkInDetails \u003d argument.split(\"i/\",2);","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"JonathanKhooTY"},"content":"        } else if (nameFlagChecker(argument) \u003d\u003d -1 \u0026\u0026 phoneFlagChecker(argument) !\u003d -1) {","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"JonathanKhooTY"},"content":"            throw new WrongFlagException(Messages.WRONG_FLAG);","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"JonathanKhooTY"},"content":"        } else {","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"JonathanKhooTY"},"content":"            checkInDetails \u003d argument.split(\"i/|n/|p/\",4);","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"JonathanKhooTY"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"JonathanKhooTY"},"content":"        if (checkInDetails[1].isBlank()) {     //checks if n/ and i/ is provided","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"JonathanKhooTY"},"content":"            throw new NoArgumentPassedException(Messages.NO_ARGUMENT);","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"JonathanKhooTY"},"content":"        } else {","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"JonathanKhooTY"},"content":"            id \u003d checkInDetails[1].trim();","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"JonathanKhooTY"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"JonathanKhooTY"},"content":"        if (checkInDetails.length \u003d\u003d 4) {","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"JonathanKhooTY"},"content":"            name \u003d checkInDetails[2].trim();","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"JonathanKhooTY"},"content":"            phoneNumber \u003d checkInDetails[3].trim();","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"JonathanKhooTY"},"content":"        } else if (checkInDetails.length \u003d\u003d 3) {","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"JonathanKhooTY"},"content":"            name \u003d checkInDetails[2].trim();","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"JonathanKhooTY"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"JonathanKhooTY"},"content":"        if (!Id.isValidId(id)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"JonathanKhooTY"},"content":"            throw new InvalidIdException(Messages.ID_ERROR);","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"JonathanKhooTY"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"JonathanKhooTY"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"JonathanKhooTY"},"content":"            throw new InvalidNameFormatException(Messages.NAME_ERROR);","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"JonathanKhooTY"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"JonathanKhooTY"},"content":"        if (!Phone.isValidPhone(phoneNumber)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"JonathanKhooTY"},"content":"            throw new InvalidPhoneNumberException(Messages.PHONE_ERROR);","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"JonathanKhooTY"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"JonathanKhooTY"},"content":"        return new CheckInCommand(id, name, phoneNumber);","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"JonathanKhooTY":68}},{"path":"src/main/java/seedu/duke/parser/CheckoutParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.CheckoutCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidIdException;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidNameFormatException;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.NoArgumentPassedException;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.WrongFlagException;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.person.Id;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.person.Name;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":"public class CheckoutParser extends Parser {","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":"    public static Command parseCheckOut(String argument) throws NoArgumentPassedException,","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"            WrongFlagException, InvalidIdException {","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"        String [] checkoutDetails;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"        String id;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"        if (argument.isBlank()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":"            throw new NoArgumentPassedException(Messages.NO_ARGUMENT);","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"        } else if (idFlagChecker(argument) \u003d\u003d -1) {","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":"            throw new WrongFlagException(Messages.WRONG_FLAG);","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"JonathanKhooTY"},"content":"        checkoutDetails \u003d argument.split(\"i/\",2);","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"JonathanKhooTY"},"content":"        String name \u003d null;","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"JonathanKhooTY"},"content":"        if (checkoutDetails[1].isBlank()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"JonathanKhooTY"},"content":"            throw new NoArgumentPassedException(Messages.NO_ARGUMENT);","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"JonathanKhooTY"},"content":"        } else {","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"JonathanKhooTY"},"content":"            id \u003d checkoutDetails[1].trim();","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"JonathanKhooTY"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"JonathanKhooTY"},"content":"        if (!Id.isValidId(id)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"JonathanKhooTY"},"content":"            throw new InvalidIdException(Messages.ID_ERROR);","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"JonathanKhooTY"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"JonathanKhooTY"},"content":"        return new CheckoutCommand(id,name);","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"JonathanKhooTY":43}},{"path":"src/main/java/seedu/duke/parser/ClearParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.ClearCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"public class ClearParser extends Parser {","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"    protected static Command parseClear() {","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"        return new ClearCommand();","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"JonathanKhooTY":10}},{"path":"src/main/java/seedu/duke/parser/EditMaxParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.EditMaxCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidIntegerException;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.InvalidMaxCapacityException;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"public class EditMaxParser extends Parser {","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"    public static Command parseEditMax(String argument) throws InvalidIntegerException, InvalidMaxCapacityException {","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"        if (!isValidInteger(argument)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":"            throw new InvalidIntegerException(Messages.INVALID_INTEGER);","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":"        return new EditMaxCommand(argument);","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"JonathanKhooTY":16,"iamakilahamed":2}},{"path":"src/main/java/seedu/duke/parser/ExitParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.ExitCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"public class ExitParser extends Parser {","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"    protected static Command parseExit() {","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"        return new ExitCommand();","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"JonathanKhooTY":10}},{"path":"src/main/java/seedu/duke/parser/FindParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.FindCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.WrongFlagException;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"public class FindParser extends Parser {","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"    protected static Command parseFind(String argument) throws WrongFlagException {","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"        String id;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"        if (argument.startsWith(\"i/\")) {","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"            id \u003d argument.substring(2);","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":"        } else {","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":"            throw new WrongFlagException(Messages.WRONG_FLAG);","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"        return new FindCommand(id);","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"JonathanKhooTY":18}},{"path":"src/main/java/seedu/duke/parser/HelpParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.HelpCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"public class HelpParser {","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"    protected static Command parseHelp() {","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"        return new HelpCommand();","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"JonathanKhooTY":11}},{"path":"src/main/java/seedu/duke/parser/ListAllParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.ListCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"public class ListAllParser extends Parser {","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"    protected static Command parseList() {","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"        return new ListCommand();","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"JonathanKhooTY":10}},{"path":"src/main/java/seedu/duke/parser/ListCheckedInParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.ListCheckedInCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"public class ListCheckedInParser extends Parser {","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"    protected static Command parseCheckedInList() {","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"        return new ListCheckedInCommand();","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"JonathanKhooTY":10}},{"path":"src/main/java/seedu/duke/parser/MoveStorageParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.MoveStorageCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"public class MoveStorageParser extends Parser {","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"    protected static Command parseMoveStorage(String argument) {","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"        return new MoveStorageCommand(argument);","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"JonathanKhooTY":11}},{"path":"src/main/java/seedu/duke/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.CheckInCommand;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.CheckoutCommand;","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.commands.ClearCommand;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.EditMaxCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.ExitCommand;","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.FindCommand;","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.HelpCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.ListCheckedInCommand;","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.ListCommand;","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.commands.MoveStorageCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidCommandException;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidIdException;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidIntegerException;","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.InvalidMaxCapacityException;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidNameFormatException;","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidPhoneNumberException;","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.NoArgumentPassedException;","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.WrongFlagException;","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"JonathanKhooTY"},"content":"public class Parser {","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"JonathanKhooTY"},"content":"    public static final String MAX_REGEX \u003d \"[0-9]+\";","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"JonathanKhooTY"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"JonathanKhooTY"},"content":"     * Method that splits user input into 2 sections.","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"JonathanKhooTY"},"content":"     * First section contains desired command","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"JonathanKhooTY"},"content":"     * Second section contains the description of the task","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"JonathanKhooTY"},"content":"     *","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"JonathanKhooTY"},"content":"     * @param text This is the user input. It is a string","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"JonathanKhooTY"},"content":"     * @return String[] This returns an array, containing 2 fields","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"JonathanKhooTY"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"JonathanKhooTY"},"content":"    public String[] splitTextIntoTwoFields(String text) {","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"hussain1998"},"content":"        String[] textArray \u003d text.split(\" \", 2);","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"JonathanKhooTY"},"content":"        textArray[0] \u003d textArray[0].toLowerCase();","lastModifiedDate":"2021-03-19"},{"lineNumber":40,"author":{"gitId":"JonathanKhooTY"},"content":"        return textArray;","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"JonathanKhooTY"},"content":"    public Command parseCommand(String userInput) throws","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"JonathanKhooTY"},"content":"            InvalidCommandException, NoArgumentPassedException,","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"JonathanKhooTY"},"content":"            WrongFlagException, InvalidIdException,","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"JonathanKhooTY"},"content":"            InvalidNameFormatException, InvalidPhoneNumberException,","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"iamakilahamed"},"content":"            StorageOperationException, InvalidIntegerException, PersonNotFoundException, InvalidMaxCapacityException {","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"hussain1998"},"content":"        String[] inputArray;","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"hussain1998"},"content":"        String argument \u003d null;","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"JonathanKhooTY"},"content":"        assert userInput !\u003d null : \"User input cannot be null\";","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"hussain1998"},"content":"        userInput \u003d userInput.trim();","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"JonathanKhooTY"},"content":"        inputArray \u003d splitTextIntoTwoFields(userInput);   //inputArray may be of size 1 or size 2","lastModifiedDate":"2021-03-19"},{"lineNumber":55,"author":{"gitId":"JonathanKhooTY"},"content":"        String command;","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"hussain1998"},"content":"        command \u003d inputArray[0];","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"JonathanKhooTY"},"content":"        if (inputArray.length !\u003d 1) {","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"JonathanKhooTY"},"content":"            argument \u003d inputArray[1].trim();","lastModifiedDate":"2021-03-19"},{"lineNumber":59,"author":{"gitId":"iamakilahamed"},"content":"        } else if (!command.equals(\"list\")","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"iamakilahamed"},"content":"                \u0026\u0026 !command.equals(\"exit\")","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"iamakilahamed"},"content":"                \u0026\u0026 !command.equals(\"listall\")","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"JonathanKhooTY"},"content":"                \u0026\u0026 !command.equals(\"clear\")","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"JonathanKhooTY"},"content":"                \u0026\u0026 !command.equals(\"help\")","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"JonathanKhooTY"},"content":"                \u0026\u0026 !command.equals(\"editmax\")) {","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"iamakilahamed"},"content":"            throw new InvalidCommandException(Messages.INVALID_COMMAND);","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"hussain1998"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"JonathanKhooTY"},"content":"        switch (command) {","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"JonathanKhooTY"},"content":"        case CheckInCommand.COMMAND:","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"JonathanKhooTY"},"content":"            return CheckInParser.parseCheckIn(argument);","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"hussain1998"},"content":"        case CheckoutCommand.COMMAND:","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"JonathanKhooTY"},"content":"            return CheckoutParser.parseCheckOut(argument);","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"hussain1998"},"content":"        case FindCommand.COMMAND:","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"JonathanKhooTY"},"content":"            return FindParser.parseFind(argument);","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"hussain1998"},"content":"        case ListCommand.COMMAND:","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"JonathanKhooTY"},"content":"            return ListAllParser.parseList();","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"JonathanKhooTY"},"content":"        case ListCheckedInCommand.COMMAND:","lastModifiedDate":"2021-03-19"},{"lineNumber":77,"author":{"gitId":"JonathanKhooTY"},"content":"            return ListCheckedInParser.parseCheckedInList();","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"hussain1998"},"content":"        case ExitCommand.COMMAND:","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"JonathanKhooTY"},"content":"            return ExitParser.parseExit();","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"iamakilahamed"},"content":"        case ClearCommand.COMMAND:","lastModifiedDate":"2021-03-21"},{"lineNumber":81,"author":{"gitId":"JonathanKhooTY"},"content":"            return ClearParser.parseClear();","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"JonathanKhooTY"},"content":"        case HelpCommand.COMMAND:","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"JonathanKhooTY"},"content":"            return HelpParser.parseHelp();","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"JonathanKhooTY"},"content":"        case EditMaxCommand.COMMAND:","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"JonathanKhooTY"},"content":"            return EditMaxParser.parseEditMax(argument);","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"sarzorwyn"},"content":"        case MoveStorageCommand.COMMAND:","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"JonathanKhooTY"},"content":"            return MoveStorageParser.parseMoveStorage(argument);","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"hussain1998"},"content":"        default:","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"iamakilahamed"},"content":"            throw new InvalidCommandException(Messages.INVALID_COMMAND);","lastModifiedDate":"2021-03-21"},{"lineNumber":92,"author":{"gitId":"hussain1998"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":94,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":95,"author":{"gitId":"JonathanKhooTY"},"content":"    static boolean isValidInteger(String argument) {","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"JonathanKhooTY"},"content":"        return (argument.matches(MAX_REGEX));","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"JonathanKhooTY"},"content":"    public static int idFlagChecker(String argument) {","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"JonathanKhooTY"},"content":"        return argument.indexOf(\"i/\");","lastModifiedDate":"2021-03-22"},{"lineNumber":101,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":102,"author":{"gitId":"JonathanKhooTY"},"content":"    ","lastModifiedDate":"2021-03-22"},{"lineNumber":103,"author":{"gitId":"JonathanKhooTY"},"content":"    protected static int nameFlagChecker(String argument) {","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"JonathanKhooTY"},"content":"        return argument.indexOf(\"n/\");","lastModifiedDate":"2021-03-22"},{"lineNumber":105,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":106,"author":{"gitId":"JonathanKhooTY"},"content":"    ","lastModifiedDate":"2021-03-22"},{"lineNumber":107,"author":{"gitId":"JonathanKhooTY"},"content":"    protected static int phoneFlagChecker(String argument) {","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"JonathanKhooTY"},"content":"        return argument.indexOf(\"p/\");","lastModifiedDate":"2021-03-22"},{"lineNumber":109,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":110,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":111,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"JonathanKhooTY":84,"iamakilahamed":12,"sarzorwyn":2,"hussain1998":13}},{"path":"src/main/java/seedu/duke/person/Id.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package seedu.duke.person;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"import static seedu.duke.common.Messages.ID_ERROR;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"public class Id implements Serializable {","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"    private static final long serialVersionUID \u003d 2L;","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"    public final String idString;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"    public static final String ID_REGEX \u003d \"\\\\d{3}[A-Z]\";","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"    public Id(String idString) {","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"        assert isValidId(idString) : ID_ERROR;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"        this.idString \u003d idString.trim();","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"    public String getIdString() {","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"        return idString;","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"    public String toString() {","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"        return idString;","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"    public static boolean isValidId(String idString) {","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"hussain1998"},"content":"        return idString.matches(ID_REGEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"hussain1998"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"hussain1998"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"hussain1998"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"hussain1998"},"content":"            return true;","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"hussain1998"},"content":"        } else if (other instanceof Id) {","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"hussain1998"},"content":"            return idString.equals(((Id) other).getIdString());","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"hussain1998"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"hussain1998"},"content":"        return false;","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"iamakilahamed"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"iamakilahamed"},"content":"        return Objects.hash(idString);","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"hussain1998"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"iamakilahamed":6,"hussain1998":39}},{"path":"src/main/java/seedu/duke/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package seedu.duke.person;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"import static seedu.duke.common.Messages.NAME_ERROR;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"public class Name implements Serializable {","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"    private static final long serialVersionUID \u003d 3L;","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"    public final String nameString;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"    public static final String NAME_REGEX \u003d \"[a-zA-Z][a-zA-Z( )*]{0,29}\";","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"    public Name(String nameString) {","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"        assert isValidName(nameString) : NAME_ERROR;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"        this.nameString \u003d nameString.trim();","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"    public static boolean isValidName(String nameString) {","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"        if (nameString \u003d\u003d null) {","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"            return true;","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"        return nameString.matches(NAME_REGEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"    public String getNameString() {","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"        return nameString;","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"hussain1998"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"hussain1998"},"content":"    public String toString() {","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"hussain1998"},"content":"        return nameString;","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"hussain1998"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"hussain1998":32}},{"path":"src/main/java/seedu/duke/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package seedu.duke.person;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":" * Represents a Person.","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":" * Assumption: values are validated and not null.","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"public class Person implements Serializable {","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"    private static final long serialVersionUID \u003d 1L;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"    private Id id;","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"    private Name name;","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"    private Phone phone;","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"    private Boolean isCheckedIn;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"    public Person(Id id, Name name, Phone phone) {","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"        assert id !\u003d null : \"ID cannot be null\";","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"        assert phone !\u003d null : \"Phone cannot be null\";","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"        assert name !\u003d null : \"Name cannot be null\";","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"hussain1998"},"content":"    public Person(Person another) {","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"        this.id \u003d another.getId();","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"hussain1998"},"content":"        this.name \u003d  another.getName();","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"hussain1998"},"content":"        this.phone \u003d another.getPhone();","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"hussain1998"},"content":"        this.isCheckedIn \u003d another.getCheckedIn();","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"hussain1998"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"hussain1998"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"hussain1998"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"hussain1998"},"content":"            return true;","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"hussain1998"},"content":"        } else if (other instanceof Person) {","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"hussain1998"},"content":"            return id.equals(((Person) other).id);","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"hussain1998"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"hussain1998"},"content":"        return false;","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"hussain1998"},"content":"    public Id getId() {","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"hussain1998"},"content":"        return id;","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"hussain1998"},"content":"    public Name getName() {","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"hussain1998"},"content":"        return name;","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"hussain1998"},"content":"    public Phone getPhone() {","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"hussain1998"},"content":"        return phone;","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"hussain1998"},"content":"    public Boolean getCheckedIn() {","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"hussain1998"},"content":"        return isCheckedIn;","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"hussain1998"},"content":"    public void setCheckedIn(Boolean checkedIn) {","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"hussain1998"},"content":"        isCheckedIn \u003d checkedIn;","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"hussain1998"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"hussain1998":62}},{"path":"src/main/java/seedu/duke/person/PersonLog.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package seedu.duke.person;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.storage.LogFile;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"public class PersonLog {","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"    private static PersonLog theOnlyPersonLog \u003d null;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"    private HashMap\u003cId, Person\u003e personLog;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"    private LogFile logFile;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"     * Using Singleton design pattern.","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"    private PersonLog() {","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"        personLog \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"        logFile \u003d new LogFile();","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"    public static PersonLog getInstance() {","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"        if (theOnlyPersonLog \u003d\u003d null) {","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"            theOnlyPersonLog \u003d new PersonLog();","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"hussain1998"},"content":"        return theOnlyPersonLog;","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"hussain1998"},"content":"    public void addPerson(Person person) throws StorageOperationException {","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"hussain1998"},"content":"        if (isFound(person.getId())) {","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"hussain1998"},"content":"            return;","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"hussain1998"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"hussain1998"},"content":"        personLog.put(person.getId(), person);","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"hussain1998"},"content":"        saveAllPersons();","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"hussain1998"},"content":"    public boolean isFound(Id id) {","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"hussain1998"},"content":"        return personLog.containsKey(id);","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"hussain1998"},"content":"    public Person findPerson(Id id) {","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"hussain1998"},"content":"        return isFound(id) ? new Person(personLog.get(id)) : null;","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"hussain1998"},"content":"    public void modifyPerson(Person person) throws StorageOperationException {","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"hussain1998"},"content":"        personLog.replace(person.getId(), person);","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"hussain1998"},"content":"        saveAllPersons();","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"hussain1998"},"content":"    public void saveAllPersons() throws StorageOperationException {","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"hussain1998"},"content":"        ArrayList\u003cPerson\u003e persons \u003d new ArrayList\u003c\u003e(personLog.values());","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"hussain1998"},"content":"        logFile.saveAllPersons(persons);","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"hussain1998"},"content":"    public void loadAllPersons() throws StorageOperationException {","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"hussain1998"},"content":"        logFile.loadAllPersons();","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"hussain1998"},"content":"    public void changePath(String path) {","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"hussain1998"},"content":"        logFile.setPath(path);","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"hussain1998"},"content":"    public void clearAllPersons() throws StorageOperationException {","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"hussain1998"},"content":"        ArrayList\u003cPerson\u003e persons \u003d new ArrayList\u003c\u003e(personLog.values());","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"hussain1998"},"content":"        logFile.saveAllPersons(persons);","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"hussain1998"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"hussain1998":67}},{"path":"src/main/java/seedu/duke/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package seedu.duke.person;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"import static seedu.duke.common.Messages.PHONE_ERROR;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":" * Represents the phone number of a person.","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":" * If a person does not have a phone, isAvailable will be false.","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"public class Phone implements Serializable {","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"    private static final long serialVersionUID \u003d 4L;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"    public String phoneNo;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"    public boolean isAvailable;","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"    public static final String PHONE_REGEX \u003d \"\\\\d{8}\";","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"     * Constructs a phone object.","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"     * @param phoneNo Phone number string. Null if Person has no phone.","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"    public Phone(String phoneNo) {","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"        assert phoneNo \u003d\u003d null || isValidPhone(phoneNo) : PHONE_ERROR;","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"        this.isAvailable \u003d phoneNo !\u003d null;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"        this.phoneNo \u003d phoneNo;","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"hussain1998"},"content":"    public static boolean isValidPhone(String phoneNo) {","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"hussain1998"},"content":"        if (phoneNo \u003d\u003d null) {","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"hussain1998"},"content":"            return true;","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"hussain1998"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"hussain1998"},"content":"        return phoneNo.matches(PHONE_REGEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"hussain1998"},"content":"    public String getPhoneNo() {","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"hussain1998"},"content":"        return phoneNo;","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"hussain1998"},"content":"    public void setPhoneNo(String phoneNo) {","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"hussain1998"},"content":"        assert phoneNo \u003d\u003d null || isValidPhone(phoneNo) : PHONE_ERROR;","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"hussain1998"},"content":"        this.isAvailable \u003d phoneNo !\u003d null;","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"hussain1998"},"content":"        this.phoneNo \u003d phoneNo;","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"hussain1998"},"content":"    public boolean isAvailable() {","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"hussain1998"},"content":"        return isAvailable;","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"hussain1998"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"hussain1998"},"content":"    public String toString() {","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"hussain1998"},"content":"        return phoneNo;","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"hussain1998"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"hussain1998":53}},{"path":"src/main/java/seedu/duke/person/TrackingList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sarzorwyn"},"content":"package seedu.duke.person;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"sarzorwyn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"sarzorwyn"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"sarzorwyn"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"sarzorwyn"},"content":"import java.util.List;","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"sarzorwyn"},"content":" * A list of persons. Does not allow null elements or duplicates.","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"sarzorwyn"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"sarzorwyn"},"content":"public class TrackingList {","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"sarzorwyn"},"content":"    private final List\u003cPerson\u003e personList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"     * Constructs a empty Person List.","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"sarzorwyn"},"content":"    public TrackingList() {","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"sarzorwyn"},"content":"     * Constructs a person list with given persons in varargs.","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"sarzorwyn"},"content":"    public TrackingList(Person... persons) {","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"sarzorwyn"},"content":"        final List\u003cPerson\u003e initialPersons \u003d Arrays.asList(persons);","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"sarzorwyn"},"content":"        personList.addAll(initialPersons);","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"sarzorwyn"},"content":"     * Constructs a person list with given persons in a collection.","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"sarzorwyn"},"content":"     * @param persons a collection of persons","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"sarzorwyn"},"content":"    public TrackingList(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"sarzorwyn"},"content":"        personList.addAll(persons);","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":39,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"sarzorwyn"},"content":"     * Checks if a list contains the person in given argument.","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"sarzorwyn"},"content":"     * @param personToCheck Person to check if contained in personList","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"sarzorwyn"},"content":"     * @return True if personList contains Person, False if personList does not contains Person","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"sarzorwyn"},"content":"    public boolean contains(Person personToCheck) {","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"sarzorwyn"},"content":"        for (Person p : personList) {","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"sarzorwyn"},"content":"            if (p.equals(personToCheck)) {","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"sarzorwyn"},"content":"                return true;","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"sarzorwyn"},"content":"            }","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"sarzorwyn"},"content":"        return false;","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"sarzorwyn"},"content":"    public void add(Person person) {","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"sarzorwyn"},"content":"        personList.add(person);","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"sarzorwyn"},"content":"        assert personList.contains(person) : \"Person not added to list\";","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"sarzorwyn"},"content":"    public void delete(Person person) {","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"sarzorwyn"},"content":"        personList.remove(person);","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"sarzorwyn"},"content":"        assert !personList.contains(person) : \"Person not removed from list\";","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":63,"author":{"gitId":"sarzorwyn"},"content":"    public void delete(int index) {","lastModifiedDate":"2021-03-07"},{"lineNumber":64,"author":{"gitId":"sarzorwyn"},"content":"        personList.remove(index);","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":66,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"sarzorwyn"},"content":"    public Person getPerson(int index) {","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"sarzorwyn"},"content":"        return personList.get(index);","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":70,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"sarzorwyn"},"content":"    public int getSize() {","lastModifiedDate":"2021-03-07"},{"lineNumber":72,"author":{"gitId":"sarzorwyn"},"content":"        return personList.size();","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":74,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":75,"author":{"gitId":"sarzorwyn"},"content":"    public List\u003cPerson\u003e listPerson() {","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"sarzorwyn"},"content":"        final List\u003cPerson\u003e returnedList \u003d new ArrayList\u003c\u003e(personList);","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"sarzorwyn"},"content":"        assert returnedList.size() \u003d\u003d personList.size() : \"returnedList does not match listPerson size\";","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"sarzorwyn"},"content":"        return returnedList;","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"sarzorwyn"},"content":"    public void clear() {","lastModifiedDate":"2021-03-11"},{"lineNumber":82,"author":{"gitId":"sarzorwyn"},"content":"        personList.clear();","lastModifiedDate":"2021-03-11"},{"lineNumber":83,"author":{"gitId":"sarzorwyn"},"content":"        assert personList.isEmpty() : \"List not empty after clear\";","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":86,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":87,"author":{"gitId":"iamakilahamed"},"content":"     * Finds Person with exact match as id queried.","lastModifiedDate":"2021-03-11"},{"lineNumber":88,"author":{"gitId":"sarzorwyn"},"content":"     * @param id id being queried","lastModifiedDate":"2021-03-07"},{"lineNumber":89,"author":{"gitId":"sarzorwyn"},"content":"     * @return Person that exactly matches id","lastModifiedDate":"2021-03-11"},{"lineNumber":90,"author":{"gitId":"sarzorwyn"},"content":"     * @throws PersonNotFoundException if no person has queried id","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":92,"author":{"gitId":"sarzorwyn"},"content":"    public Person findExactPerson(Id id) throws PersonNotFoundException {","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"hussain1998"},"content":"        Person matchingPerson \u003d null;","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"sarzorwyn"},"content":"        for (Person p : personList) {","lastModifiedDate":"2021-03-07"},{"lineNumber":95,"author":{"gitId":"iamakilahamed"},"content":"            if (p.getId().getIdString().equals(id.getIdString())) {","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"hussain1998"},"content":"                matchingPerson \u003d p;","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"sarzorwyn"},"content":"            }","lastModifiedDate":"2021-03-07"},{"lineNumber":98,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":99,"author":{"gitId":"sarzorwyn"},"content":"        if (matchingPerson \u003d\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"iamakilahamed"},"content":"            throw new PersonNotFoundException(Messages.PERSON_NOT_FOUND);","lastModifiedDate":"2021-03-21"},{"lineNumber":101,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"sarzorwyn"},"content":"        assert matchingPerson.getId().equals(id) : \"Result id does not match return id\";","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"hussain1998"},"content":"        return matchingPerson;","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":106,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":107,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":108,"author":{"gitId":"iamakilahamed"},"content":"     * Finds Person with partial match as phone queried.","lastModifiedDate":"2021-03-11"},{"lineNumber":109,"author":{"gitId":"sarzorwyn"},"content":"     * @param phone Phone being queried","lastModifiedDate":"2021-03-07"},{"lineNumber":110,"author":{"gitId":"sarzorwyn"},"content":"     * @return Person that partially matches phone","lastModifiedDate":"2021-03-07"},{"lineNumber":111,"author":{"gitId":"sarzorwyn"},"content":"     * @throws PersonNotFoundException if no person has queried id","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":113,"author":{"gitId":"sarzorwyn"},"content":"    public List\u003cPerson\u003e findPerson(Phone phone) throws PersonNotFoundException {","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"sarzorwyn"},"content":"        final List\u003cPerson\u003e matchingPersons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-07"},{"lineNumber":115,"author":{"gitId":"sarzorwyn"},"content":"        for (Person p : personList) {","lastModifiedDate":"2021-03-07"},{"lineNumber":116,"author":{"gitId":"sarzorwyn"},"content":"            if (p.getPhone().getPhoneNo().contains(phone.getPhoneNo())) {","lastModifiedDate":"2021-03-09"},{"lineNumber":117,"author":{"gitId":"sarzorwyn"},"content":"                matchingPersons.add(p);","lastModifiedDate":"2021-03-07"},{"lineNumber":118,"author":{"gitId":"sarzorwyn"},"content":"            }","lastModifiedDate":"2021-03-07"},{"lineNumber":119,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":120,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"sarzorwyn"},"content":"        if (matchingPersons.isEmpty()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"iamakilahamed"},"content":"            throw new PersonNotFoundException(Messages.PERSON_NOT_FOUND);","lastModifiedDate":"2021-03-21"},{"lineNumber":123,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"sarzorwyn"},"content":"        return matchingPersons;","lastModifiedDate":"2021-03-07"},{"lineNumber":125,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":126,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":127,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":128,"author":{"gitId":"iamakilahamed"},"content":"     * Finds Person with partial match as name queried.","lastModifiedDate":"2021-03-11"},{"lineNumber":129,"author":{"gitId":"sarzorwyn"},"content":"     * @param name Name being queried","lastModifiedDate":"2021-03-07"},{"lineNumber":130,"author":{"gitId":"sarzorwyn"},"content":"     * @return Person that partially matches name","lastModifiedDate":"2021-03-07"},{"lineNumber":131,"author":{"gitId":"sarzorwyn"},"content":"     * @throws PersonNotFoundException if no person has queried id","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":133,"author":{"gitId":"sarzorwyn"},"content":"    public List\u003cPerson\u003e findPerson(Name name) throws PersonNotFoundException {","lastModifiedDate":"2021-03-14"},{"lineNumber":134,"author":{"gitId":"sarzorwyn"},"content":"        final List\u003cPerson\u003e matchingPersons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-07"},{"lineNumber":135,"author":{"gitId":"sarzorwyn"},"content":"        for (Person p : personList) {","lastModifiedDate":"2021-03-07"},{"lineNumber":136,"author":{"gitId":"sarzorwyn"},"content":"            if (p.getName().getNameString().contains(name.getNameString())) {","lastModifiedDate":"2021-03-09"},{"lineNumber":137,"author":{"gitId":"sarzorwyn"},"content":"                matchingPersons.add(p);","lastModifiedDate":"2021-03-07"},{"lineNumber":138,"author":{"gitId":"sarzorwyn"},"content":"            }","lastModifiedDate":"2021-03-07"},{"lineNumber":139,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":140,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":141,"author":{"gitId":"sarzorwyn"},"content":"        if (matchingPersons.isEmpty()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"iamakilahamed"},"content":"            throw new PersonNotFoundException(Messages.PERSON_NOT_FOUND);","lastModifiedDate":"2021-03-21"},{"lineNumber":143,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":144,"author":{"gitId":"sarzorwyn"},"content":"        return matchingPersons;","lastModifiedDate":"2021-03-07"},{"lineNumber":145,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":146,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":147,"author":{"gitId":"iamakilahamed"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":148,"author":{"gitId":"iamakilahamed"},"content":"     * Finds the current capacity at the venue.","lastModifiedDate":"2021-03-28"},{"lineNumber":149,"author":{"gitId":"iamakilahamed"},"content":"     * @return current capacity","lastModifiedDate":"2021-03-28"},{"lineNumber":150,"author":{"gitId":"iamakilahamed"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":151,"author":{"gitId":"iamakilahamed"},"content":"    public int getCurrentCapacity() {","lastModifiedDate":"2021-03-28"},{"lineNumber":152,"author":{"gitId":"iamakilahamed"},"content":"        int currentCapacity \u003d 0;","lastModifiedDate":"2021-03-28"},{"lineNumber":153,"author":{"gitId":"iamakilahamed"},"content":"        for (Person p: personList) {","lastModifiedDate":"2021-03-28"},{"lineNumber":154,"author":{"gitId":"iamakilahamed"},"content":"            if (p.getCheckedIn()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":155,"author":{"gitId":"iamakilahamed"},"content":"                currentCapacity++;","lastModifiedDate":"2021-03-28"},{"lineNumber":156,"author":{"gitId":"iamakilahamed"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":157,"author":{"gitId":"iamakilahamed"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":158,"author":{"gitId":"iamakilahamed"},"content":"        return currentCapacity;","lastModifiedDate":"2021-03-28"},{"lineNumber":159,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":160,"author":{"gitId":"sarzorwyn"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"iamakilahamed":23,"sarzorwyn":134,"hussain1998":3}},{"path":"src/main/java/seedu/duke/storage/ConfigFile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sarzorwyn"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"sarzorwyn"},"content":"import java.io.File;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"sarzorwyn"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"sarzorwyn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"sarzorwyn"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"sarzorwyn"},"content":"import java.util.Properties;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"public class ConfigFile {","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"sarzorwyn"},"content":"    private static final String DEFAULT_FILE \u003d \"settings.properties\";","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"sarzorwyn"},"content":"    private final Properties prop;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"sarzorwyn"},"content":"    private String configPath;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"sarzorwyn"},"content":"    private String storageFilePath;","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"sarzorwyn"},"content":"    public ConfigFile() {","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"sarzorwyn"},"content":"        this(DEFAULT_FILE);","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"sarzorwyn"},"content":"    /** Runs load when initialized. */","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"sarzorwyn"},"content":"    public ConfigFile(String path) {","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"sarzorwyn"},"content":"        prop \u003d new Properties();","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"sarzorwyn"},"content":"        configPath \u003d path;","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"sarzorwyn"},"content":"        this.load();","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"sarzorwyn"},"content":"     * Loads the config file using the properties class.","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"sarzorwyn"},"content":"    public void load() {","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"sarzorwyn"},"content":"        try {","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"sarzorwyn"},"content":"            File file \u003d new File(configPath);","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"sarzorwyn"},"content":"            FileInputStream inputStream \u003d new FileInputStream(file);","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"sarzorwyn"},"content":"            prop.load(inputStream);","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"sarzorwyn"},"content":"            storageFilePath \u003d prop.getProperty(\"StorageFilePath\");","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"sarzorwyn"},"content":"            inputStream.close();","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"sarzorwyn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"sarzorwyn"},"content":"            // If the file does not exist, return a null Storage file path","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"sarzorwyn"},"content":"            storageFilePath \u003d null;","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"sarzorwyn"},"content":"    private void save() throws StorageOperationException {","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"sarzorwyn"},"content":"        File file \u003d new File(configPath);","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"sarzorwyn"},"content":"        try {","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"sarzorwyn"},"content":"            file.createNewFile();","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"sarzorwyn"},"content":"            FileWriter fileWriter \u003d new FileWriter(configPath);","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"sarzorwyn"},"content":"            prop.store(fileWriter, \"Config file\");","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"sarzorwyn"},"content":"            fileWriter.close();","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"sarzorwyn"},"content":"        } catch (IOException soe) {","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"sarzorwyn"},"content":"            throw new StorageOperationException(\"Error writing to file: \" + configPath);","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"sarzorwyn"},"content":"    public String getStorageFilePath() {","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"sarzorwyn"},"content":"        return storageFilePath;","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"sarzorwyn"},"content":"     * Sets the storage file path and saves it into the config file.","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"sarzorwyn"},"content":"     * @param storageFilePath The new path which the storage file will be saved at","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"sarzorwyn"},"content":"     * @throws StorageOperationException If there is an error writing to config file","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"sarzorwyn"},"content":"    public void setStorageFilePath(String storageFilePath) throws StorageOperationException {","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"sarzorwyn"},"content":"        this.storageFilePath \u003d storageFilePath;","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"sarzorwyn"},"content":"        prop.setProperty(\"StorageFilePath\", storageFilePath);","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"sarzorwyn"},"content":"        this.save();","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"sarzorwyn"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"sarzorwyn":73}},{"path":"src/main/java/seedu/duke/storage/LogFile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.Person;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.PersonLog;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"import java.util.List;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"public class LogFile {","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"    private static final String DEFAULT_STORAGE_FILEPATH \u003d \"LogFile\";","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"    private String path;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"     * Creates LogFile file with default path.","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"    public LogFile() {","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"        this(DEFAULT_STORAGE_FILEPATH);","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"     * Creates LogFile file with given file path.","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"hussain1998"},"content":"     * @param path The path that will be used for storage","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"hussain1998"},"content":"    public LogFile(String path) {","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"hussain1998"},"content":"        this.path \u003d path;","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"hussain1998"},"content":"    public void savePerson(Person person) throws StorageOperationException {","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"hussain1998"},"content":"        Gson gson \u003d new Gson();","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"hussain1998"},"content":"        gson.toJson(person);","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"hussain1998"},"content":"        StorageFile storage \u003d new StorageFile(path);","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"hussain1998"},"content":"        storage.saveLogFile(Collections.singletonList(gson.toJson(person)));","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"hussain1998"},"content":"    public void saveAllPersons(ArrayList\u003cPerson\u003e persons) throws StorageOperationException {","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"hussain1998"},"content":"        Gson gson \u003d new Gson();","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"hussain1998"},"content":"        final List\u003cString\u003e gsonPersons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"hussain1998"},"content":"        persons.forEach(person -\u003e gsonPersons.add(gson.toJson(person)));","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"hussain1998"},"content":"        StorageFile storage \u003d new StorageFile(path);","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"hussain1998"},"content":"        storage.saveLogFile(gsonPersons);","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"hussain1998"},"content":"    public void loadAllPersons() throws StorageOperationException {","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"hussain1998"},"content":"        StorageFile storage \u003d new StorageFile(path);","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"hussain1998"},"content":"        List\u003cString\u003e jsonLogs \u003d storage.loadLogFile();","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"hussain1998"},"content":"        if (jsonLogs \u003d\u003d null) {","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"hussain1998"},"content":"            return;","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"hussain1998"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"hussain1998"},"content":"        Person person;","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"hussain1998"},"content":"        Gson gson \u003d new Gson();","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"hussain1998"},"content":"        for (String eachLog : jsonLogs) {","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"hussain1998"},"content":"            person \u003d gson.fromJson(eachLog, Person.class);","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"hussain1998"},"content":"            PersonLog.getInstance().addPerson(person);","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"hussain1998"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"hussain1998"},"content":"    public void setPath(String path) {","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"hussain1998"},"content":"        this.path \u003d path;","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"hussain1998"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"hussain1998":68}},{"path":"src/main/java/seedu/duke/storage/StorageFile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sarzorwyn"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"sarzorwyn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"sarzorwyn"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"sarzorwyn"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"sarzorwyn"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"sarzorwyn"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"sarzorwyn"},"content":"import java.util.List;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"sarzorwyn"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"sarzorwyn"},"content":"/**","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"sarzorwyn"},"content":" * Manages the storing of tracking list data into a file.","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"sarzorwyn"},"content":" */","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"sarzorwyn"},"content":"public class StorageFile {","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"sarzorwyn"},"content":"    public static final String DEFAULT_STORAGE_FILEPATH \u003d \"TrackingList\";","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"sarzorwyn"},"content":"    public static final String TXT_FILE_FORMAT \u003d \".txt\";","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"sarzorwyn"},"content":"    public static final String DIRECTORY_HOME \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"sarzorwyn"},"content":"    public static final String ID_DELIMITER \u003d \"i/\";","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"sarzorwyn"},"content":"    public static final String PHONE_ENCODED_MARKER \u003d \"p/\";","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"sarzorwyn"},"content":"    public static final String CHECKED_IN_ENCODED_MARKER \u003d \"c/\";","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"sarzorwyn"},"content":"    public static final Pattern PERSON_ENCODED_FORMAT \u003d","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"sarzorwyn"},"content":"            Pattern.compile(\"(?\u003cname\u003e[^/]+)\"","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"sarzorwyn"},"content":"                    + ID_DELIMITER + \"(?\u003cid\u003e[^/]+)\"","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"sarzorwyn"},"content":"                    + PHONE_ENCODED_MARKER + \"(?\u003cphone\u003e[^/]+)\"","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"sarzorwyn"},"content":"                    + CHECKED_IN_ENCODED_MARKER + \"(?\u003ccheckedIn\u003e[^/])\");","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"sarzorwyn"},"content":"    public Path path;","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"sarzorwyn"},"content":"     * Creates Storage file with default path.","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":39,"author":{"gitId":"sarzorwyn"},"content":"    public StorageFile() throws StorageOperationException {","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"sarzorwyn"},"content":"        this(DEFAULT_STORAGE_FILEPATH);","lastModifiedDate":"2021-03-20"},{"lineNumber":41,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":42,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":43,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":44,"author":{"gitId":"sarzorwyn"},"content":"     * Creates Storage file with given file path.","lastModifiedDate":"2021-03-20"},{"lineNumber":45,"author":{"gitId":"sarzorwyn"},"content":"     * @param path The path that will be used for storage","lastModifiedDate":"2021-03-20"},{"lineNumber":46,"author":{"gitId":"sarzorwyn"},"content":"     * @throws InvalidPathException If the path specified is invalid","lastModifiedDate":"2021-03-20"},{"lineNumber":47,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":48,"author":{"gitId":"sarzorwyn"},"content":"    public StorageFile(String path) throws StorageOperationException {","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"sarzorwyn"},"content":"        if (path \u003d\u003d null) {","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"sarzorwyn"},"content":"            path \u003d DEFAULT_STORAGE_FILEPATH;","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"sarzorwyn"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"sarzorwyn"},"content":"            this.path \u003d Paths.get(DIRECTORY_HOME, path + TXT_FILE_FORMAT);","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"sarzorwyn"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"sarzorwyn"},"content":"            throw new StorageOperationException(\"Invalid path: \" + path);","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":58,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":59,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"sarzorwyn"},"content":"     * Creates the save file directory if it does not exist.","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"sarzorwyn"},"content":"    private void createDataDirectory() throws StorageOperationException {","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"sarzorwyn"},"content":"        try {","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"sarzorwyn"},"content":"            Files.createDirectories(path.getParent());","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"sarzorwyn"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"sarzorwyn"},"content":"            throw new StorageOperationException(\"Error writing into file: \" + path);","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":71,"author":{"gitId":"sarzorwyn"},"content":"     * Loads {@code TrackingList} data from this storage file and returns it.","lastModifiedDate":"2021-03-20"},{"lineNumber":72,"author":{"gitId":"sarzorwyn"},"content":"     * @throws StorageOperationException If there were errors reading the file","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":74,"author":{"gitId":"sarzorwyn"},"content":"    public TrackingList load() throws StorageOperationException {","lastModifiedDate":"2021-03-20"},{"lineNumber":75,"author":{"gitId":"sarzorwyn"},"content":"        createDataDirectory();","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":77,"author":{"gitId":"sarzorwyn"},"content":"        // If the file does not exist, return a empty Tracking List","lastModifiedDate":"2021-03-20"},{"lineNumber":78,"author":{"gitId":"sarzorwyn"},"content":"        if (!Files.exists(path) || !Files.isRegularFile(path)) {","lastModifiedDate":"2021-03-20"},{"lineNumber":79,"author":{"gitId":"sarzorwyn"},"content":"            return new TrackingList();","lastModifiedDate":"2021-03-20"},{"lineNumber":80,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":81,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":82,"author":{"gitId":"sarzorwyn"},"content":"        try {","lastModifiedDate":"2021-03-20"},{"lineNumber":83,"author":{"gitId":"sarzorwyn"},"content":"            return TrackingListDecoder.decodeTrackingList(Files.readAllLines(path));","lastModifiedDate":"2021-03-20"},{"lineNumber":84,"author":{"gitId":"sarzorwyn"},"content":"        } catch (FileNotFoundException fnfe) {","lastModifiedDate":"2021-03-20"},{"lineNumber":85,"author":{"gitId":"sarzorwyn"},"content":"            throw new AssertionError(\"A file non found scenario should have been handled before this\");","lastModifiedDate":"2021-03-20"},{"lineNumber":86,"author":{"gitId":"sarzorwyn"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-03-20"},{"lineNumber":87,"author":{"gitId":"hussain1998"},"content":"            throw new StorageOperationException(\"Error loading from file: \" + path);","lastModifiedDate":"2021-03-26"},{"lineNumber":88,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":89,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":90,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":91,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":92,"author":{"gitId":"sarzorwyn"},"content":"     * Loads {@code TrackingList} data to this storage file.","lastModifiedDate":"2021-03-20"},{"lineNumber":93,"author":{"gitId":"sarzorwyn"},"content":"     * @param trackingList The tracking list being saved to storage","lastModifiedDate":"2021-03-20"},{"lineNumber":94,"author":{"gitId":"sarzorwyn"},"content":"     * @throws StorageOperationException If there is errors storing into file.","lastModifiedDate":"2021-03-20"},{"lineNumber":95,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":96,"author":{"gitId":"sarzorwyn"},"content":"    public void save(TrackingList trackingList) throws StorageOperationException {","lastModifiedDate":"2021-03-20"},{"lineNumber":97,"author":{"gitId":"sarzorwyn"},"content":"        try {","lastModifiedDate":"2021-03-20"},{"lineNumber":98,"author":{"gitId":"sarzorwyn"},"content":"            List\u003cString\u003e encodedTrackingList \u003d TrackingListEncoder.encodeTrackingList(trackingList);","lastModifiedDate":"2021-03-20"},{"lineNumber":99,"author":{"gitId":"sarzorwyn"},"content":"            Files.write(path, encodedTrackingList);","lastModifiedDate":"2021-03-20"},{"lineNumber":100,"author":{"gitId":"sarzorwyn"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-03-20"},{"lineNumber":101,"author":{"gitId":"sarzorwyn"},"content":"            throw new StorageOperationException(\"Error writing to file: \" + path);","lastModifiedDate":"2021-03-20"},{"lineNumber":102,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":103,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":104,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"sarzorwyn"},"content":"     * Writes the log details into the log file.","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"sarzorwyn"},"content":"     * @param jsonLog json formatted log strings to be written","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"sarzorwyn"},"content":"     * @throws StorageOperationException If there is error writing to the log file","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"hussain1998"},"content":"    public void saveLogFile(List\u003cString\u003e jsonLog) throws StorageOperationException {","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"hussain1998"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"hussain1998"},"content":"            Files.write(path, jsonLog);","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"hussain1998"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-03-28"},{"lineNumber":114,"author":{"gitId":"hussain1998"},"content":"            throw new StorageOperationException(\"Error writing to file: \" + path);","lastModifiedDate":"2021-03-28"},{"lineNumber":115,"author":{"gitId":"hussain1998"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":116,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":117,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":118,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"sarzorwyn"},"content":"     * Reads from the log file, creates it if it does not exist.","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"sarzorwyn"},"content":"     * @return A list of strings read from the log file","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"sarzorwyn"},"content":"     * @throws StorageOperationException If there is error reading from the log file","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"hussain1998"},"content":"    public List\u003cString\u003e loadLogFile() throws StorageOperationException {","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"hussain1998"},"content":"        createDataDirectory();","lastModifiedDate":"2021-03-28"},{"lineNumber":125,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"hussain1998"},"content":"        // If the file does not exist, return null","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"hussain1998"},"content":"        if (!Files.exists(path) || !Files.isRegularFile(path)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"hussain1998"},"content":"            return null;","lastModifiedDate":"2021-03-28"},{"lineNumber":129,"author":{"gitId":"hussain1998"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":130,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":131,"author":{"gitId":"hussain1998"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":132,"author":{"gitId":"hussain1998"},"content":"            return Files.readAllLines(path);","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"hussain1998"},"content":"        } catch (FileNotFoundException fnfe) {","lastModifiedDate":"2021-03-28"},{"lineNumber":134,"author":{"gitId":"hussain1998"},"content":"            throw new AssertionError(\"A file non found scenario should have been handled before this\");","lastModifiedDate":"2021-03-28"},{"lineNumber":135,"author":{"gitId":"hussain1998"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-03-28"},{"lineNumber":136,"author":{"gitId":"hussain1998"},"content":"            throw new StorageOperationException(\"Error loading from file: \" + path);","lastModifiedDate":"2021-03-28"},{"lineNumber":137,"author":{"gitId":"hussain1998"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":138,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":139,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"sarzorwyn"},"content":"}","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"iamakilahamed":1,"sarzorwyn":112,"hussain1998":27}},{"path":"src/main/java/seedu/duke/storage/TrackingListDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sarzorwyn"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.person.Id;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.person.Name;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.person.Person;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.person.Phone;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"sarzorwyn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"import java.util.List;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"sarzorwyn"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"sarzorwyn"},"content":"import static seedu.duke.storage.StorageFile.PERSON_ENCODED_FORMAT;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"sarzorwyn"},"content":"/**","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"sarzorwyn"},"content":" * Decodes the storage data file into a {@code TrackingList} object.","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"sarzorwyn"},"content":" */","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"sarzorwyn"},"content":"public class TrackingListDecoder {","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"sarzorwyn"},"content":"     * Decodes {@code encodedTrackingList} into a {@code trackingList} containing the decoded persons.","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"sarzorwyn"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"sarzorwyn"},"content":"     * @throws StorageOperationException if the {@code encodedTrackingList} is in an invalid format.","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"sarzorwyn"},"content":"    public static TrackingList decodeTrackingList(List\u003cString\u003e encodedTrackingList) throws StorageOperationException {","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"sarzorwyn"},"content":"        final List\u003cPerson\u003e decodedPersons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"sarzorwyn"},"content":"        for (String encodedPerson : encodedTrackingList) {","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"sarzorwyn"},"content":"            decodedPersons.add(decodePerson(encodedPerson));","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"sarzorwyn"},"content":"        return new TrackingList(decodedPersons);","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"sarzorwyn"},"content":"     * Decodes {@code encodedPerson} to a {@code Person}.","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"sarzorwyn"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"sarzorwyn"},"content":"     * @throws StorageOperationException if the {@code encodedPerson} is in an invalid format.","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"sarzorwyn"},"content":"    private static Person decodePerson(String encodedPerson) throws StorageOperationException {","lastModifiedDate":"2021-03-20"},{"lineNumber":39,"author":{"gitId":"sarzorwyn"},"content":"        final Matcher matcher \u003d PERSON_ENCODED_FORMAT.matcher(encodedPerson);","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"sarzorwyn"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-03-20"},{"lineNumber":41,"author":{"gitId":"sarzorwyn"},"content":"            throw new StorageOperationException(\"Failed to decode encoded file!\");","lastModifiedDate":"2021-03-20"},{"lineNumber":42,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":43,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":44,"author":{"gitId":"sarzorwyn"},"content":"        // Check if Phone is stored as string null","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"sarzorwyn"},"content":"        Phone phone;","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"sarzorwyn"},"content":"        if (matcher.group(\"phone\").equals(\"null\")) {","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"sarzorwyn"},"content":"            phone \u003d new Phone(null);","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"sarzorwyn"},"content":"        } else {","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"sarzorwyn"},"content":"            phone \u003d new Phone(matcher.group(\"phone\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"sarzorwyn"},"content":"        Person decodedPerson \u003d new Person(","lastModifiedDate":"2021-03-20"},{"lineNumber":53,"author":{"gitId":"sarzorwyn"},"content":"                new Id(matcher.group(\"id\")),","lastModifiedDate":"2021-03-20"},{"lineNumber":54,"author":{"gitId":"sarzorwyn"},"content":"                new Name(matcher.group(\"name\")),","lastModifiedDate":"2021-03-20"},{"lineNumber":55,"author":{"gitId":"sarzorwyn"},"content":"                phone","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"sarzorwyn"},"content":"        );","lastModifiedDate":"2021-03-20"},{"lineNumber":57,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":58,"author":{"gitId":"sarzorwyn"},"content":"        // Parse the check in status of the file which is stored as int","lastModifiedDate":"2021-03-20"},{"lineNumber":59,"author":{"gitId":"sarzorwyn"},"content":"        try {","lastModifiedDate":"2021-03-20"},{"lineNumber":60,"author":{"gitId":"sarzorwyn"},"content":"            decodedPerson.setCheckedIn(Integer.parseInt(matcher.group(\"checkedIn\")) \u003d\u003d 1);","lastModifiedDate":"2021-03-20"},{"lineNumber":61,"author":{"gitId":"sarzorwyn"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-03-20"},{"lineNumber":62,"author":{"gitId":"sarzorwyn"},"content":"            throw new StorageOperationException(\"Failed to parse check in status in file!\");","lastModifiedDate":"2021-03-20"},{"lineNumber":63,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":64,"author":{"gitId":"sarzorwyn"},"content":"        return decodedPerson;","lastModifiedDate":"2021-03-20"},{"lineNumber":65,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":66,"author":{"gitId":"sarzorwyn"},"content":"}","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"iamakilahamed":1,"sarzorwyn":65}},{"path":"src/main/java/seedu/duke/storage/TrackingListEncoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sarzorwyn"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.person.Person;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"sarzorwyn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"sarzorwyn"},"content":"import java.util.List;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"sarzorwyn"},"content":"import static seedu.duke.storage.StorageFile.CHECKED_IN_ENCODED_MARKER;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"sarzorwyn"},"content":"import static seedu.duke.storage.StorageFile.ID_DELIMITER;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"import static seedu.duke.storage.StorageFile.PHONE_ENCODED_MARKER;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"sarzorwyn"},"content":"/**","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"sarzorwyn"},"content":" * Encodes the {@code TrackingList} object for storage.","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"sarzorwyn"},"content":" */","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"sarzorwyn"},"content":"public class TrackingListEncoder {","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"sarzorwyn"},"content":"     * Encodes all Person in given trackingList to a list of encoded string for storage.","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"sarzorwyn"},"content":"     * @param trackingList List of Persons to be encoded","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"sarzorwyn"},"content":"     * @return Encoded list of Persons","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"sarzorwyn"},"content":"    public static List\u003cString\u003e encodeTrackingList(TrackingList trackingList) {","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"sarzorwyn"},"content":"        final List\u003cString\u003e encodedPersons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.listPerson().forEach(person -\u003e encodedPersons.add(encodePersonToString(person)));","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"sarzorwyn"},"content":"        return encodedPersons;","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"sarzorwyn"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"sarzorwyn"},"content":"     * Encodes Person into a storage string representation.","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"sarzorwyn"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"sarzorwyn"},"content":"    private static String encodePersonToString(Person person) {","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"sarzorwyn"},"content":"        String encodedPerson \u003d person.getName()","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"sarzorwyn"},"content":"                + ID_DELIMITER","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"sarzorwyn"},"content":"                + person.getId()","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"sarzorwyn"},"content":"                + PHONE_ENCODED_MARKER","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"sarzorwyn"},"content":"                + person.getPhone()","lastModifiedDate":"2021-03-20"},{"lineNumber":39,"author":{"gitId":"sarzorwyn"},"content":"                + CHECKED_IN_ENCODED_MARKER","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"sarzorwyn"},"content":"                + (person.getCheckedIn() ? 1 : 0);","lastModifiedDate":"2021-03-20"},{"lineNumber":41,"author":{"gitId":"sarzorwyn"},"content":"        return encodedPerson;","lastModifiedDate":"2021-03-20"},{"lineNumber":42,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":43,"author":{"gitId":"sarzorwyn"},"content":"}","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"sarzorwyn":43}},{"path":"src/main/java/seedu/duke/ui/TextUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.commands.CommandOutput;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"limwenfeng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"limwenfeng"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"limwenfeng"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"import java.util.List;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"limwenfeng"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"limwenfeng"},"content":"public class TextUi {","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"limwenfeng"},"content":"    public static final String PRINT_LISTALL_FORMAT \u003d \"|%-3s||%-35s||%-8s||%-10s||%-10s|\";","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"limwenfeng"},"content":"    public static final String PRINT_LIST_FORMAT \u003d  \"|%-3s||%-36s||%-12s||%-17s|\";","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"limwenfeng"},"content":"    public static final String PHONE_NUMBER_FILLER \u003d \"--\";","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"limwenfeng"},"content":"    public static final int DIVIDER_LENGTH \u003d 76;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"limwenfeng"},"content":"    private final PrintStream out;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"limwenfeng"},"content":"    private final Scanner in;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"limwenfeng"},"content":"    private static final Logger logger \u003d Logger.getLogger(TextUi.class.getSimpleName());","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"limwenfeng"},"content":"    private static final String DIVIDER \u003d \"\u003d\".repeat(DIVIDER_LENGTH);","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"limwenfeng"},"content":"    private static final String SINGLE_DIVIDER \u003d \"-\".repeat(DIVIDER_LENGTH);","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"    public TextUi() {","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"hussain1998"},"content":"        this(System.in, System.out);","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"limwenfeng"},"content":"    public TextUi(InputStream in, PrintStream out) {","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"limwenfeng"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"limwenfeng"},"content":"        this.out \u003d out;","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"limwenfeng"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"limwenfeng"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"limwenfeng"},"content":"     * Does not return any object.","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"limwenfeng"},"content":"     * Output text to UI based on the type of commandOutput object passed in.","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"limwenfeng"},"content":"     * listall command and list command prints out a list of persons object.","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"limwenfeng"},"content":"     * find command prints out a person object.","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"limwenfeng"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"limwenfeng"},"content":"     * @param commandOutput command object containing data queried by user","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"limwenfeng"},"content":"     *                      and feedback to user.","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"limwenfeng"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"hussain1998"},"content":"    public void printReaction(CommandOutput commandOutput) {","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"JonathanKhooTY"},"content":"        String command \u003d commandOutput.command;","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"JonathanKhooTY"},"content":"        switch (command) {","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"JonathanKhooTY"},"content":"        case \"listall\":","lastModifiedDate":"2021-03-19"},{"lineNumber":49,"author":{"gitId":"limwenfeng"},"content":"            assert commandOutput.persons !\u003d null : \"Expect NoPersonFound Exception,\";","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"hussain1998"},"content":"            printList(commandOutput.persons);","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"JonathanKhooTY"},"content":"            break;","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"JonathanKhooTY"},"content":"        case \"list\":","lastModifiedDate":"2021-03-19"},{"lineNumber":53,"author":{"gitId":"limwenfeng"},"content":"            assert commandOutput.persons !\u003d null : \"Expect NoPersonFound Exception.\";","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"JonathanKhooTY"},"content":"            printCheckedInList(commandOutput.persons);","lastModifiedDate":"2021-03-19"},{"lineNumber":55,"author":{"gitId":"JonathanKhooTY"},"content":"            break;","lastModifiedDate":"2021-03-19"},{"lineNumber":56,"author":{"gitId":"limwenfeng"},"content":"        case \"find\":","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"limwenfeng"},"content":"            assert commandOutput.person !\u003d null : \"Expect NoPersonFound Exception.\";","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"limwenfeng"},"content":"            printFindList(commandOutput.person);","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"limwenfeng"},"content":"            break;","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"JonathanKhooTY"},"content":"        default:","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"hussain1998"},"content":"            printDivider();","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"limwenfeng"},"content":"            out.println(commandOutput.messageToUser);","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"hussain1998"},"content":"            printDivider();","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"hussain1998"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"limwenfeng"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"limwenfeng"},"content":"     * Prints out a list of person objects with respective attributes such as","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"limwenfeng"},"content":"     * Name, Id, Phone and Checked In status.","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"limwenfeng"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"limwenfeng"},"content":"     * @param persons person object encapsulated in CommandOutput object.","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"limwenfeng"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"hussain1998"},"content":"    private void printList(List\u003cPerson\u003e persons) {","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"limwenfeng"},"content":"        assert persons !\u003d null : \"Does not print null\";","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"limwenfeng"},"content":"        printDivider();","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"limwenfeng"},"content":"        out.printf((PRINT_LISTALL_FORMAT) + \"%n\", \" \", \"Name\", \"Id\", \"Phone\", \"Checked In\");","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"limwenfeng"},"content":"        printDivider();","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"limwenfeng"},"content":"        printPersonsInListWithStatus(persons);","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"limwenfeng"},"content":"        printDivider();","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":82,"author":{"gitId":"limwenfeng"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"limwenfeng"},"content":"     * Prints out a list of person objects with respective attributes such as","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"limwenfeng"},"content":"     * Name, Id and Phone.","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"limwenfeng"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"limwenfeng"},"content":"     * @param persons person object encapsulated in CommandOutput object.","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"limwenfeng"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"JonathanKhooTY"},"content":"    private void printCheckedInList(List\u003cPerson\u003e persons) {","lastModifiedDate":"2021-03-19"},{"lineNumber":89,"author":{"gitId":"limwenfeng"},"content":"        assert persons !\u003d null : \"Does not print null\";","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"limwenfeng"},"content":"        printDivider();","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"limwenfeng"},"content":"        out.printf((PRINT_LIST_FORMAT) + \"%n\", \" \", \"Name\", \"Id\", \"Phone\");","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"limwenfeng"},"content":"        printDivider();","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"limwenfeng"},"content":"        printPersonsInListWithoutStatus(persons);","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"iamakilahamed"},"content":"        int currentCapacity \u003d getCurrentCapacity(persons);","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"iamakilahamed"},"content":"        int maximumCapacity \u003d getMaximumCapacity();","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"iamakilahamed"},"content":"        int amountLeftToMaxCapacity \u003d maximumCapacity - currentCapacity;","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"iamakilahamed"},"content":"        System.out.println(\"Number of people left for max capacity: \" + amountLeftToMaxCapacity);","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"limwenfeng"},"content":"        printDivider();","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"limwenfeng"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"iamakilahamed"},"content":"    private int getMaximumCapacity() {","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"iamakilahamed"},"content":"        return Duke.getInstance().getLocation().getMaxCapacity();","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"iamakilahamed"},"content":"    private int getCurrentCapacity(List\u003cPerson\u003e persons) {","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"iamakilahamed"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"iamakilahamed"},"content":"        for (Person p : persons) {","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"iamakilahamed"},"content":"            if (p.getCheckedIn()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"iamakilahamed"},"content":"                count++;","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"iamakilahamed"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"iamakilahamed"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"iamakilahamed"},"content":"        return count;","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":114,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":115,"author":{"gitId":"limwenfeng"},"content":"    private void printPersonsInListWithoutStatus(List\u003cPerson\u003e persons) {","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"JonathanKhooTY"},"content":"        for (int i \u003d 0; i \u003c persons.size(); ++i) {","lastModifiedDate":"2021-03-19"},{"lineNumber":117,"author":{"gitId":"limwenfeng"},"content":"            Person peronSelected \u003d persons.get(i);","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"limwenfeng"},"content":"            String name \u003d peronSelected.getName().getNameString();","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"limwenfeng"},"content":"            String truncatedName \u003d nameTruncator(name);","lastModifiedDate":"2021-03-28"},{"lineNumber":120,"author":{"gitId":"limwenfeng"},"content":"            String idString \u003d peronSelected.getId().getIdString();","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"limwenfeng"},"content":"            String phoneString \u003d (peronSelected.getPhone().isAvailable())","lastModifiedDate":"2021-03-26"},{"lineNumber":122,"author":{"gitId":"limwenfeng"},"content":"                    ? peronSelected.getPhone().getPhoneNo() : PHONE_NUMBER_FILLER;","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"limwenfeng"},"content":"            out.printf((PRINT_LIST_FORMAT) + \"%n\", i + 1, truncatedName, idString, phoneString);","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"limwenfeng"},"content":"            printSingleDivider();","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"hussain1998"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":126,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":127,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":128,"author":{"gitId":"limwenfeng"},"content":"    private void printFindList(Person person) {","lastModifiedDate":"2021-03-24"},{"lineNumber":129,"author":{"gitId":"limwenfeng"},"content":"        assert person !\u003d null : \"Only prints Person\";","lastModifiedDate":"2021-03-24"},{"lineNumber":130,"author":{"gitId":"limwenfeng"},"content":"        printDivider();","lastModifiedDate":"2021-03-28"},{"lineNumber":131,"author":{"gitId":"limwenfeng"},"content":"        out.printf((PRINT_LISTALL_FORMAT) + \"%n\", \" \", \"Name\", \"Id\", \"Phone\", \"Checked In\");","lastModifiedDate":"2021-03-24"},{"lineNumber":132,"author":{"gitId":"limwenfeng"},"content":"        printDivider();","lastModifiedDate":"2021-03-24"},{"lineNumber":133,"author":{"gitId":"limwenfeng"},"content":"        String name \u003d person.getName().getNameString();","lastModifiedDate":"2021-03-24"},{"lineNumber":134,"author":{"gitId":"limwenfeng"},"content":"        String truncatedName \u003d nameTruncator(name);","lastModifiedDate":"2021-03-28"},{"lineNumber":135,"author":{"gitId":"limwenfeng"},"content":"        String idString \u003d person.getId().getIdString();","lastModifiedDate":"2021-03-24"},{"lineNumber":136,"author":{"gitId":"limwenfeng"},"content":"        String phoneString \u003d (person.getPhone().isAvailable())","lastModifiedDate":"2021-03-26"},{"lineNumber":137,"author":{"gitId":"limwenfeng"},"content":"                ? person.getPhone().getPhoneNo() : PHONE_NUMBER_FILLER;","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"limwenfeng"},"content":"        String statusString \u003d (person.getCheckedIn()) ? \"Yes\" : \"No\";","lastModifiedDate":"2021-03-24"},{"lineNumber":139,"author":{"gitId":"limwenfeng"},"content":"        out.printf((PRINT_LISTALL_FORMAT) + \"%n\", 1, truncatedName, idString, phoneString, statusString);","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"limwenfeng"},"content":"        printDivider();","lastModifiedDate":"2021-03-28"},{"lineNumber":141,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":142,"author":{"gitId":"limwenfeng"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":143,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":144,"author":{"gitId":"limwenfeng"},"content":"    private void printPersonsInListWithStatus(List\u003cPerson\u003e persons) {","lastModifiedDate":"2021-03-24"},{"lineNumber":145,"author":{"gitId":"limwenfeng"},"content":"        for (int i \u003d 0; i \u003c persons.size(); ++i) {","lastModifiedDate":"2021-03-24"},{"lineNumber":146,"author":{"gitId":"limwenfeng"},"content":"            Person personSelected \u003d persons.get(i);","lastModifiedDate":"2021-03-24"},{"lineNumber":147,"author":{"gitId":"limwenfeng"},"content":"            String name \u003d personSelected.getName().getNameString();","lastModifiedDate":"2021-03-24"},{"lineNumber":148,"author":{"gitId":"limwenfeng"},"content":"            String truncatedName \u003d nameTruncator(name);","lastModifiedDate":"2021-03-28"},{"lineNumber":149,"author":{"gitId":"limwenfeng"},"content":"            String idString \u003d personSelected.getId().getIdString();","lastModifiedDate":"2021-03-24"},{"lineNumber":150,"author":{"gitId":"limwenfeng"},"content":"            String phoneString \u003d (personSelected.getPhone().isAvailable())","lastModifiedDate":"2021-03-26"},{"lineNumber":151,"author":{"gitId":"limwenfeng"},"content":"                    ? personSelected.getPhone().getPhoneNo() : PHONE_NUMBER_FILLER;","lastModifiedDate":"2021-03-29"},{"lineNumber":152,"author":{"gitId":"limwenfeng"},"content":"            String statusString \u003d (personSelected.getCheckedIn()) ? \"Yes\" : \"No\";","lastModifiedDate":"2021-03-24"},{"lineNumber":153,"author":{"gitId":"limwenfeng"},"content":"            out.printf((PRINT_LISTALL_FORMAT) + \"%n\", i + 1, truncatedName, idString, phoneString, statusString);","lastModifiedDate":"2021-03-28"},{"lineNumber":154,"author":{"gitId":"limwenfeng"},"content":"            printSingleDivider();","lastModifiedDate":"2021-03-24"},{"lineNumber":155,"author":{"gitId":"limwenfeng"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":156,"author":{"gitId":"limwenfeng"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":157,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":158,"author":{"gitId":"hussain1998"},"content":"    public void showWelcomeMessage(String version) {","lastModifiedDate":"2021-03-10"},{"lineNumber":159,"author":{"gitId":"limwenfeng"},"content":"        printDivider();","lastModifiedDate":"2021-03-09"},{"lineNumber":160,"author":{"gitId":"limwenfeng"},"content":"        assert version instanceof String : \"Version has to be a string\";","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"limwenfeng"},"content":"        out.println(\"Welcome to Control Your Crowd - Version \" + version);","lastModifiedDate":"2021-03-28"},{"lineNumber":162,"author":{"gitId":"limwenfeng"},"content":"        // for next patch update - Storage class - dataStorageSuccessful()","lastModifiedDate":"2021-03-09"},{"lineNumber":163,"author":{"gitId":"limwenfeng"},"content":"        out.println(\"Data successfully loaded from storage file path.\");","lastModifiedDate":"2021-03-09"},{"lineNumber":164,"author":{"gitId":"limwenfeng"},"content":"        printDivider();","lastModifiedDate":"2021-03-09"},{"lineNumber":165,"author":{"gitId":"limwenfeng"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":166,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":167,"author":{"gitId":"hussain1998"},"content":"    private void printDivider() {","lastModifiedDate":"2021-03-10"},{"lineNumber":168,"author":{"gitId":"limwenfeng"},"content":"        out.println(DIVIDER);","lastModifiedDate":"2021-03-09"},{"lineNumber":169,"author":{"gitId":"limwenfeng"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":170,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":171,"author":{"gitId":"limwenfeng"},"content":"    private void printSingleDivider() {","lastModifiedDate":"2021-03-23"},{"lineNumber":172,"author":{"gitId":"limwenfeng"},"content":"        out.println(SINGLE_DIVIDER);","lastModifiedDate":"2021-03-23"},{"lineNumber":173,"author":{"gitId":"limwenfeng"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":174,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":175,"author":{"gitId":"limwenfeng"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":176,"author":{"gitId":"limwenfeng"},"content":"     * Takes in user input from Scanner Object.","lastModifiedDate":"2021-03-23"},{"lineNumber":177,"author":{"gitId":"limwenfeng"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":178,"author":{"gitId":"limwenfeng"},"content":"     * @return String type of user input.","lastModifiedDate":"2021-03-23"},{"lineNumber":179,"author":{"gitId":"limwenfeng"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":180,"author":{"gitId":"hussain1998"},"content":"    public String getUserInput() {","lastModifiedDate":"2021-03-10"},{"lineNumber":181,"author":{"gitId":"limwenfeng"},"content":"        String rawInput \u003d in.nextLine();","lastModifiedDate":"2021-03-09"},{"lineNumber":182,"author":{"gitId":"limwenfeng"},"content":"        return rawInput;","lastModifiedDate":"2021-03-11"},{"lineNumber":183,"author":{"gitId":"limwenfeng"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":184,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":185,"author":{"gitId":"limwenfeng"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":186,"author":{"gitId":"limwenfeng"},"content":"     * Takes in exception and print error message on UI.","lastModifiedDate":"2021-03-23"},{"lineNumber":187,"author":{"gitId":"limwenfeng"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":188,"author":{"gitId":"limwenfeng"},"content":"     * @param error Exception thrown from respective command.","lastModifiedDate":"2021-03-23"},{"lineNumber":189,"author":{"gitId":"limwenfeng"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":190,"author":{"gitId":"limwenfeng"},"content":"    public void notifyErrorToUser(Exception error) {","lastModifiedDate":"2021-03-23"},{"lineNumber":191,"author":{"gitId":"limwenfeng"},"content":"        out.println(error.getMessage());","lastModifiedDate":"2021-03-21"},{"lineNumber":192,"author":{"gitId":"limwenfeng"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":193,"author":{"gitId":"limwenfeng"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":194,"author":{"gitId":"limwenfeng"},"content":"    private String nameTruncator(String longName) {","lastModifiedDate":"2021-03-28"},{"lineNumber":195,"author":{"gitId":"limwenfeng"},"content":"        if (longName.length() \u003e 30) {","lastModifiedDate":"2021-03-28"},{"lineNumber":196,"author":{"gitId":"limwenfeng"},"content":"            return longName.substring(0,30);","lastModifiedDate":"2021-03-28"},{"lineNumber":197,"author":{"gitId":"limwenfeng"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":198,"author":{"gitId":"limwenfeng"},"content":"        return longName;","lastModifiedDate":"2021-03-28"},{"lineNumber":199,"author":{"gitId":"limwenfeng"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":200,"author":{"gitId":"limwenfeng"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"iamakilahamed":19,"JonathanKhooTY":11,"limwenfeng":146,"hussain1998":24}},{"path":"src/test/java/seedu/duke/commands/CheckInCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"//package seedu.duke.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"//","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"//import seedu.duke.exceptions.HistoryStorageException;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"//import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"//import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"//import seedu.duke.person.PersonLog;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"//","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"//import static seedu.duke.testutil.SamplePersons.ALICE;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"//import static seedu.duke.testutil.SamplePersons.JACK_NO_PHONE;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"//import static seedu.duke.testutil.SamplePersons.JOHN;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"//import static seedu.duke.testutil.SamplePersons.JOHN_DIFF_ID;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"//import static seedu.duke.testutil.SampleTrackingList.SAMPLE_TRACKING_LIST;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"//","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"//public class CheckInCommandTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"//","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"//    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"//    public void testCheckInWithNameIdPhone() throws StorageOperationException,","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"//            PersonNotFoundException, HistoryStorageException {","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"//        CheckInCommand checkin \u003d new CheckInCommand(JOHN.getId().toString(), JOHN.getName().toString(),","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"//                JOHN.getPhone().toString());","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"//        checkin.execute(SAMPLE_TRACKING_LIST);","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"//        assertTrue(checkin.getToCheckIn().getCheckedIn());","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"//    }","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"//","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"//    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"//    public void testCheckInWithNoPhone() throws StorageOperationException,","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"//            PersonNotFoundException, HistoryStorageException {","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"//        CheckInCommand checkin \u003d new CheckInCommand(JACK_NO_PHONE.getId().toString(),","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"//                JACK_NO_PHONE.getName().toString(), JACK_NO_PHONE.getPhone().toString());","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"//        checkin.execute(SAMPLE_TRACKING_LIST);","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"//        assertTrue(checkin.getToCheckIn().getCheckedIn());","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"//    }","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"//","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"//    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":"//    public void testCheckInWithSameNameDifferentId() throws StorageOperationException,","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"//            PersonNotFoundException, HistoryStorageException {","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":"//        CheckInCommand checkin \u003d new CheckInCommand(JOHN_DIFF_ID.getId().toString(),","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"iamakilahamed"},"content":"//                JOHN_DIFF_ID.getName().toString(), JOHN_DIFF_ID.getPhone().toString());","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"//        checkin.execute(SAMPLE_TRACKING_LIST);","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"iamakilahamed"},"content":"//        assertTrue(checkin.getToCheckIn().getCheckedIn());","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"iamakilahamed"},"content":"//    }","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"iamakilahamed"},"content":"//","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"iamakilahamed"},"content":"//    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"iamakilahamed"},"content":"//    public void testCheckInForReturningVisitor() throws StorageOperationException,","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"iamakilahamed"},"content":"//            PersonNotFoundException, HistoryStorageException {","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"iamakilahamed"},"content":"//        PersonLog personLogTest \u003d PersonLog.getInstance();","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"iamakilahamed"},"content":"//        personLogTest.addPerson(ALICE);","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"iamakilahamed"},"content":"//        CheckInCommand checkin \u003d new CheckInCommand(ALICE.getId().getIdString(), null, null);","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"iamakilahamed"},"content":"//        ALICE.setCheckedIn(false);","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"iamakilahamed"},"content":"//        checkin.execute(SAMPLE_TRACKING_LIST);","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"iamakilahamed"},"content":"//        assertTrue(checkin.getToCheckIn().getCheckedIn());","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"iamakilahamed"},"content":"//    }","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"iamakilahamed"},"content":"//","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"iamakilahamed"},"content":"//}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"iamakilahamed":56}},{"path":"src/test/java/seedu/duke/commands/CheckoutCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"//package seedu.duke.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"//","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"//import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"//import seedu.duke.exceptions.HistoryStorageException;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"//import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"//","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"//import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"//import static seedu.duke.testutil.SampleTrackingList.SAMPLE_TRACKING_LIST;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"//","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"//public class CheckoutCommandTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"//","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"//    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"//    public void testCheckoutWithId() throws PersonNotFoundException, HistoryStorageException {","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"//        CheckoutCommand checkout \u003d new CheckoutCommand(\"126C\", null);","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"//        checkout.execute(SAMPLE_TRACKING_LIST);","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"//        assertFalse(checkout.getToCheckout().getCheckedIn());","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"//    }","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"//","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"//    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"//    public void testCheckoutPersonNotFound() {","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"//        CheckoutCommand checkout \u003d new CheckoutCommand(\"230C\", \"Mary\");","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"//        Throwable exception \u003d assertThrows(PersonNotFoundException.class, () -\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"//                checkout.execute(SAMPLE_TRACKING_LIST));","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"//        assertEquals(Messages.PERSON_NOT_FOUND, exception.getMessage());","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"//    }","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"//","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"//}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"iamakilahamed":30}},{"path":"src/test/java/seedu/duke/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SamplePersons.ALICE;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SamplePersons.JOHN;","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SamplePersons.MARY;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"public class ClearCommandTest {","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"    private final TrackingList trackingList \u003d new TrackingList(ALICE, JOHN, MARY);","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    public void testClear() {","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"        ClearCommand clear \u003d new ClearCommand();","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"        clear.execute(trackingList);","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"        assertEquals(0, trackingList.getSize());","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"iamakilahamed":22}},{"path":"src/test/java/seedu/duke/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.commands.ExitCommand.EXIT_MESSAGE;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SampleTrackingList.SAMPLE_TRACKING_LIST;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"public class ExitCommandTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"    public void testExit() {","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"        ExitCommand exit \u003d new ExitCommand();","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"        String exitMessage \u003d exit.execute(SAMPLE_TRACKING_LIST).messageToUser;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"        assertEquals(EXIT_MESSAGE, exitMessage);","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"iamakilahamed":19}},{"path":"src/test/java/seedu/duke/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SamplePersons.ALICE;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SamplePersons.BOB;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SampleTrackingList.SAMPLE_TRACKING_LIST;","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"public class FindCommandTest {","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    public void testFindNotCheckedIn() throws PersonNotFoundException {","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"        ALICE.setCheckedIn(false);","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"        FindCommand find \u003d new FindCommand(\"665B\");","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"        boolean foundPersonCheckedInStatus \u003d find.execute(SAMPLE_TRACKING_LIST).person.getCheckedIn();","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"        assertFalse(foundPersonCheckedInStatus);","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"    public void testFindCheckedIn() throws PersonNotFoundException {","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"        BOB.setCheckedIn(true);","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"        FindCommand find \u003d new FindCommand(\"126C\");","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"        boolean foundPersonCheckedInStatus \u003d find.execute(SAMPLE_TRACKING_LIST).person.getCheckedIn();","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"        assertTrue(foundPersonCheckedInStatus);","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"    public void testFindPersonNotFound() {","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"        FindCommand find \u003d new FindCommand(\"230C\");","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"        Throwable exception \u003d assertThrows(PersonNotFoundException.class, () -\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":"                find.execute(SAMPLE_TRACKING_LIST));","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"        assertEquals(Messages.PERSON_NOT_FOUND, exception.getMessage());","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"iamakilahamed":41}},{"path":"src/test/java/seedu/duke/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.commands.HelpCommand.HELP_MESSAGE;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SampleTrackingList.SAMPLE_TRACKING_LIST;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"public class HelpCommandTest {","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    public void testHelp() {","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"        HelpCommand help \u003d new HelpCommand();","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"        String helpMessage  \u003d help.execute(SAMPLE_TRACKING_LIST).messageToUser;","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"        assertEquals(HELP_MESSAGE, helpMessage);","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"iamakilahamed":18}},{"path":"src/test/java/seedu/duke/commands/ListCheckedInCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.person.Person;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import java.util.List;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SampleTrackingList.SAMPLE_TRACKING_LIST;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"public class ListCheckedInCommandTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"    public void testListCheckedIn() {","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"        ListCheckedInCommand listCheckedIn \u003d new ListCheckedInCommand();","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"        List\u003cPerson\u003e checkedInList \u003d listCheckedIn.execute(SAMPLE_TRACKING_LIST).persons;","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"        int checkedInCount \u003d 0;","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"        for (Person person : SAMPLE_TRACKING_LIST.listPerson()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"            if (person.getCheckedIn()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"                checkedInCount++;","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"            }","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"        assertEquals(checkedInCount, checkedInList.size());","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"iamakilahamed":26}},{"path":"src/test/java/seedu/duke/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.person.Person;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import java.util.List;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SampleTrackingList.SAMPLE_TRACKING_LIST;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"public class ListCommandTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"    public void testList() {","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"        ListCommand listCommand \u003d new ListCommand();","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"        List\u003cPerson\u003e list \u003d listCommand.execute(SAMPLE_TRACKING_LIST).persons;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"        assertEquals(SAMPLE_TRACKING_LIST.getSize(), list.size());","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"iamakilahamed":19}},{"path":"src/test/java/seedu/duke/commands/MoveStorageCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sarzorwyn"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"sarzorwyn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"sarzorwyn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"sarzorwyn"},"content":"import static seedu.duke.testutil.SampleTrackingList.SAMPLE_TRACKING_LIST;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"sarzorwyn"},"content":"public class MoveStorageCommandTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"    public void testMoveStorage_invalidPath_StorageOperationException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"sarzorwyn"},"content":"        String invalidPath \u003d \":-?;\\0\";","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"sarzorwyn"},"content":"        MoveStorageCommand moveStorage \u003d new MoveStorageCommand(invalidPath);","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"sarzorwyn"},"content":"        assertThrows(StorageOperationException.class, () -\u003e moveStorage.execute(SAMPLE_TRACKING_LIST));","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"sarzorwyn"},"content":"    public void testMoveStorage_validPath_success() throws StorageOperationException {","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"sarzorwyn"},"content":"        String validPath \u003d \"test/validPath\";","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"sarzorwyn"},"content":"        MoveStorageCommand moveStorage \u003d new MoveStorageCommand(validPath);","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"sarzorwyn"},"content":"        moveStorage.execute(SAMPLE_TRACKING_LIST);","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"sarzorwyn"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"sarzorwyn":23}},{"path":"src/test/java/seedu/duke/location/LocationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.location;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.InvalidArgumentSizeException;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.InvalidMaxCapacityException;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SampleLocations.BIG_MALL;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SampleLocations.CINEMA;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SampleLocations.EVENT;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SampleLocations.FOOD_COURT;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SampleLocations.SCHOOL;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SampleLocations.SMALL_SHOP;","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"public class LocationTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"    public void testInvalidArgumentSize() {","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"        Throwable exception \u003d assertThrows(InvalidArgumentSizeException.class, () -\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"                new Location(new String[]{\"Location1\"}));","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"        assertEquals(Messages.INVALID_ARGUMENT_SIZE, exception.getMessage());","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"    public void testInvalidMaxCapacity() {","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"        Throwable exception \u003d assertThrows(InvalidMaxCapacityException.class, () -\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"iamakilahamed"},"content":"                new Location(new String[]{\"Location2\", \"aaa123\"}));","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"iamakilahamed"},"content":"        assertEquals(Messages.INVALID_MAX_CAPACITY, exception.getMessage());","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"iamakilahamed"},"content":"    public void testGetLocationName() {","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"iamakilahamed"},"content":"        assertEquals(\"National University of Singapore\", SCHOOL.getLocationName());","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"iamakilahamed"},"content":"        assertNotEquals(\"Daiso\", SMALL_SHOP.getLocationName());","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"iamakilahamed"},"content":"    public void testSetLocationName() {","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"iamakilahamed"},"content":"        String newLocationName \u003d \"Golden Village\";","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"iamakilahamed"},"content":"        CINEMA.setLocationName(newLocationName);","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"iamakilahamed"},"content":"        assertEquals(newLocationName, CINEMA.getLocationName());","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"iamakilahamed"},"content":"    public void testGetMaxCapacity() {","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"iamakilahamed"},"content":"        assertEquals(250, EVENT.getMaxCapacity());","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"iamakilahamed"},"content":"        assertNotEquals(1, BIG_MALL.getMaxCapacity());","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"iamakilahamed"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"iamakilahamed"},"content":"    public void testSetMaxCapacity() {","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"iamakilahamed"},"content":"        int newMaxCapacity \u003d 30;","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"iamakilahamed"},"content":"        FOOD_COURT.setMaxCapacity(newMaxCapacity);","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"iamakilahamed"},"content":"        assertEquals(newMaxCapacity, FOOD_COURT.getMaxCapacity());","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"iamakilahamed":60}},{"path":"src/test/java/seedu/duke/parser/CheckInParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.CheckInCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidCommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidIdException;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidIntegerException;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.InvalidMaxCapacityException;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidNameFormatException;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidPhoneNumberException;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.NoArgumentPassedException;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.WrongFlagException;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"public class CheckInParserTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"    Parser parser \u003d new Parser();","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":"    public void parseCheckIn_testCommand() throws NoArgumentPassedException,","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"JonathanKhooTY"},"content":"            WrongFlagException, InvalidCommandException,","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"JonathanKhooTY"},"content":"            InvalidIdException, InvalidPhoneNumberException, InvalidNameFormatException,","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"            StorageOperationException, InvalidIntegerException, PersonNotFoundException, InvalidMaxCapacityException {","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"JonathanKhooTY"},"content":"        CheckInCommand checkInCommand \u003d (CheckInCommand) parser.parseCommand(","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"JonathanKhooTY"},"content":"                \"checkin i/ 123A n/ John\");","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(\"checkin\", checkInCommand.COMMAND);","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"JonathanKhooTY"},"content":"        checkInCommand \u003d (CheckInCommand) parser.parseCommand(","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"JonathanKhooTY"},"content":"                \"checkin i/123A n/John p/12345678\");","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(\"checkin\", checkInCommand.COMMAND);","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"JonathanKhooTY"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"JonathanKhooTY"},"content":"    public void parseCheckIn_Exceptions() {","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"JonathanKhooTY"},"content":"        Throwable exception \u003d assertThrows(NoArgumentPassedException.class, () -\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"JonathanKhooTY"},"content":"                CheckInParser.parseCheckIn(\"\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(exception.getMessage(), Messages.NO_ARGUMENT);","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"JonathanKhooTY"},"content":"        exception \u003d assertThrows(InvalidIdException.class, () -\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"JonathanKhooTY"},"content":"                CheckInParser.parseCheckIn(\"i/John 123\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(exception.getMessage(), Messages.ID_ERROR);","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"JonathanKhooTY"},"content":"        exception \u003d assertThrows(NoArgumentPassedException.class, () -\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"JonathanKhooTY"},"content":"                CheckInParser.parseCheckIn(\"\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(exception.getMessage(), Messages.NO_ARGUMENT);","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"JonathanKhooTY"},"content":"        exception \u003d assertThrows(WrongFlagException.class, () -\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"JonathanKhooTY"},"content":"                CheckInParser.parseCheckIn(\"n/\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(exception.getMessage(), Messages.WRONG_FLAG);","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"JonathanKhooTY"},"content":"        exception \u003d assertThrows(WrongFlagException.class, () -\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"JonathanKhooTY"},"content":"                CheckInParser.parseCheckIn(\"i/123A p/12345678\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(exception.getMessage(), Messages.WRONG_FLAG);","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"JonathanKhooTY"},"content":"        exception \u003d assertThrows(NoArgumentPassedException.class, () -\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"JonathanKhooTY"},"content":"                CheckInParser.parseCheckIn(\"i/\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(exception.getMessage(), Messages.NO_ARGUMENT);","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"JonathanKhooTY"},"content":"        exception \u003d assertThrows(InvalidNameFormatException.class, () -\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"JonathanKhooTY"},"content":"                CheckInParser.parseCheckIn(\"i/123A n/123\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(exception.getMessage(), Messages.NAME_ERROR);","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"JonathanKhooTY"},"content":"        exception \u003d assertThrows(InvalidPhoneNumberException.class, () -\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"JonathanKhooTY"},"content":"                CheckInParser.parseCheckIn(\"i/123A n/John p/123456\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(exception.getMessage(), Messages.PHONE_ERROR);","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"JonathanKhooTY":75,"iamakilahamed":2}},{"path":"src/test/java/seedu/duke/parser/CheckOutParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.CheckoutCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidCommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidIdException;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidIntegerException;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.InvalidMaxCapacityException;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidNameFormatException;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidPhoneNumberException;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.NoArgumentPassedException;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.WrongFlagException;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"public class CheckOutParserTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"    Parser parser \u003d new Parser();","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":"    public void parseCheckOut_testCommand() throws NoArgumentPassedException,","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"JonathanKhooTY"},"content":"            WrongFlagException, InvalidCommandException,","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"JonathanKhooTY"},"content":"            InvalidIdException, InvalidPhoneNumberException, InvalidNameFormatException,","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"            StorageOperationException, InvalidIntegerException, PersonNotFoundException, InvalidMaxCapacityException {","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"JonathanKhooTY"},"content":"        CheckoutCommand checkoutCommand \u003d (CheckoutCommand) parser.parseCommand(","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"JonathanKhooTY"},"content":"                \"checkout n/John i/123A\");","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(\"checkout\", checkoutCommand.COMMAND);","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"JonathanKhooTY"},"content":"        checkoutCommand \u003d (CheckoutCommand) parser.parseCommand(","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"JonathanKhooTY"},"content":"                \"checkout i/123A\");","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(\"checkout\", checkoutCommand.COMMAND);","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"JonathanKhooTY"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"JonathanKhooTY"},"content":"    public void parseCheckOut_Exceptions() {","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"JonathanKhooTY"},"content":"        Throwable exception \u003d assertThrows(NoArgumentPassedException.class, () -\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"JonathanKhooTY"},"content":"                CheckoutParser.parseCheckOut(\"\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(exception.getMessage(), Messages.NO_ARGUMENT);","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"JonathanKhooTY"},"content":"        exception \u003d assertThrows(WrongFlagException.class, () -\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"JonathanKhooTY"},"content":"                CheckoutParser.parseCheckOut(\"j/ 123A\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(exception.getMessage(), Messages.WRONG_FLAG);","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"JonathanKhooTY"},"content":"        exception \u003d assertThrows(InvalidIdException.class, () -\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"JonathanKhooTY"},"content":"                CheckoutParser.parseCheckOut(\"i/a23A\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(exception.getMessage(), Messages.ID_ERROR);","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"JonathanKhooTY"},"content":"        exception \u003d assertThrows(NoArgumentPassedException.class, () -\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"JonathanKhooTY"},"content":"                CheckoutParser.parseCheckOut(\"i/\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(exception.getMessage(), Messages.NO_ARGUMENT);","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"JonathanKhooTY":57,"iamakilahamed":2}},{"path":"src/test/java/seedu/duke/parser/ClearParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.ClearCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidCommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidIdException;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidIntegerException;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.InvalidMaxCapacityException;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidNameFormatException;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidPhoneNumberException;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.NoArgumentPassedException;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.WrongFlagException;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"public class ClearParserTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"    Parser parser \u003d new Parser();","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":"    public void parseClear_testCommand() throws NoArgumentPassedException,","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":"            WrongFlagException, InvalidCommandException, InvalidIdException,","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"JonathanKhooTY"},"content":"            InvalidPhoneNumberException, InvalidNameFormatException,","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"            StorageOperationException, InvalidIntegerException, PersonNotFoundException, InvalidMaxCapacityException {","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"JonathanKhooTY"},"content":"        ClearCommand clearCommand \u003d (ClearCommand) parser.parseCommand(\"clear\");","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(\"clear\", ClearCommand.COMMAND);","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"JonathanKhooTY":30,"iamakilahamed":2}},{"path":"src/test/java/seedu/duke/parser/EditMaxParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.EditMaxCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidCommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidIdException;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidIntegerException;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.InvalidMaxCapacityException;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidNameFormatException;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidPhoneNumberException;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.NoArgumentPassedException;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.WrongFlagException;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"public class EditMaxParserTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"    Parser parser \u003d new Parser();","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":"    public void parseEditMax_testCommand() throws StorageOperationException, InvalidIntegerException,","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"JonathanKhooTY"},"content":"            InvalidIdException, InvalidCommandException, InvalidPhoneNumberException,","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"JonathanKhooTY"},"content":"            PersonNotFoundException, NoArgumentPassedException, WrongFlagException,","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"            InvalidNameFormatException, InvalidMaxCapacityException {","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"JonathanKhooTY"},"content":"        EditMaxCommand editMaxCommand \u003d (EditMaxCommand) parser.parseCommand(\"editmax 1000\");","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(\"editmax\",editMaxCommand.COMMAND);","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"JonathanKhooTY"},"content":"        Throwable exception \u003d assertThrows(InvalidIntegerException.class, () -\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"JonathanKhooTY"},"content":"                parser.parseCommand(\"editmax abc\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(exception.getMessage(), Messages.INVALID_INTEGER);","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"JonathanKhooTY":34,"iamakilahamed":2}},{"path":"src/test/java/seedu/duke/parser/ExitParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.ExitCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidCommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidIdException;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidIntegerException;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.InvalidMaxCapacityException;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidNameFormatException;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidPhoneNumberException;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.NoArgumentPassedException;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.WrongFlagException;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"public class ExitParserTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"    Parser parser \u003d new Parser();","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":"    public void parseExit_testCommand() throws NoArgumentPassedException,","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"            WrongFlagException, InvalidCommandException, InvalidIdException,","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":"            InvalidPhoneNumberException, InvalidNameFormatException,","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"            StorageOperationException, InvalidIntegerException, PersonNotFoundException, InvalidMaxCapacityException {","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"JonathanKhooTY"},"content":"        ExitCommand exitCommand \u003d (ExitCommand) parser.parseCommand(\"exit\");","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(\"exit\", exitCommand.COMMAND);","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"JonathanKhooTY":29,"iamakilahamed":2}},{"path":"src/test/java/seedu/duke/parser/FindParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.FindCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidCommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidIdException;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidIntegerException;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.InvalidMaxCapacityException;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidNameFormatException;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidPhoneNumberException;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.NoArgumentPassedException;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.WrongFlagException;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"public class FindParserTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"    Parser parser \u003d new Parser();","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":"    public void parseFind_testCommand() throws NoArgumentPassedException,","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"JonathanKhooTY"},"content":"            WrongFlagException, InvalidCommandException, InvalidIdException,","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"JonathanKhooTY"},"content":"            InvalidPhoneNumberException, InvalidNameFormatException,","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"            StorageOperationException, InvalidIntegerException, PersonNotFoundException, InvalidMaxCapacityException {","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"JonathanKhooTY"},"content":"        parser.parseCommand(\"checkin i/123A n/John\");","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"JonathanKhooTY"},"content":"        FindCommand findCommand \u003d (FindCommand) parser.parseCommand(\"find i/123A\");","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(\"find\", findCommand.COMMAND);","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"JonathanKhooTY"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"JonathanKhooTY"},"content":"    public void parseFindException_checker() {","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"JonathanKhooTY"},"content":"        Throwable exception \u003d assertThrows(WrongFlagException.class, () -\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"JonathanKhooTY"},"content":"                FindParser.parseFind(\"\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(exception.getMessage(), Messages.WRONG_FLAG);","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"JonathanKhooTY":40,"iamakilahamed":2}},{"path":"src/test/java/seedu/duke/parser/HelpParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.HelpCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidCommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidIdException;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidIntegerException;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.InvalidMaxCapacityException;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidNameFormatException;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidPhoneNumberException;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.NoArgumentPassedException;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.WrongFlagException;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"public class HelpParserTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"    Parser parser \u003d new Parser();","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":"    public void parseHelp_testCommand() throws StorageOperationException, InvalidIntegerException,","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"            InvalidIdException, InvalidCommandException, InvalidPhoneNumberException, PersonNotFoundException,","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"            NoArgumentPassedException, WrongFlagException, InvalidNameFormatException, InvalidMaxCapacityException {","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"JonathanKhooTY"},"content":"        HelpCommand helpCommand \u003d (HelpCommand) parser.parseCommand(\"help\");","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(\"help\",helpCommand.COMMAND);","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"JonathanKhooTY":27,"iamakilahamed":2}},{"path":"src/test/java/seedu/duke/parser/ListAllParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.ListCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidCommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidIdException;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidIntegerException;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.InvalidMaxCapacityException;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidNameFormatException;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidPhoneNumberException;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.NoArgumentPassedException;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.WrongFlagException;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"public class ListAllParserTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"    Parser parser \u003d new Parser();","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":"    public void parseList_testCommand() throws NoArgumentPassedException,","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":"            WrongFlagException, InvalidCommandException, InvalidIdException,","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"JonathanKhooTY"},"content":"            InvalidPhoneNumberException, InvalidNameFormatException,","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"            StorageOperationException, InvalidIntegerException, PersonNotFoundException, InvalidMaxCapacityException {","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"JonathanKhooTY"},"content":"        ListCommand listCommand \u003d (ListCommand) parser.parseCommand(\"listall\");","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(\"listall\", listCommand.COMMAND);","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"JonathanKhooTY":30,"iamakilahamed":2}},{"path":"src/test/java/seedu/duke/parser/ListCheckedInParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.ListCheckedInCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidCommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidIdException;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidIntegerException;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.InvalidMaxCapacityException;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidNameFormatException;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidPhoneNumberException;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.NoArgumentPassedException;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.WrongFlagException;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"public class ListCheckedInParserTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"    Parser parser \u003d new Parser();","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":"    public void parseListCheckedIn_testCommand() throws NoArgumentPassedException,","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":"            WrongFlagException, InvalidCommandException, InvalidIdException,","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"JonathanKhooTY"},"content":"            InvalidPhoneNumberException, InvalidNameFormatException,","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"            StorageOperationException, InvalidIntegerException, PersonNotFoundException, InvalidMaxCapacityException {","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"JonathanKhooTY"},"content":"        ListCheckedInCommand listCheckedInCommand \u003d (ListCheckedInCommand) parser.parseCommand(","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"JonathanKhooTY"},"content":"                \"list\");","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(\"list\", listCheckedInCommand.COMMAND);","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"JonathanKhooTY":31,"iamakilahamed":2}},{"path":"src/test/java/seedu/duke/parser/MoveStorageParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.MoveStorageCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidCommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidIdException;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidIntegerException;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.InvalidMaxCapacityException;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidNameFormatException;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidPhoneNumberException;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.NoArgumentPassedException;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.WrongFlagException;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"public class MoveStorageParserTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"    Parser parser \u003d new Parser();","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"JonathanKhooTY"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":"    public void parseMoveStorageCommand_testCommand() throws StorageOperationException, InvalidIntegerException,","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"            InvalidIdException, InvalidCommandException, InvalidPhoneNumberException,","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"            PersonNotFoundException, NoArgumentPassedException, WrongFlagException, InvalidNameFormatException,","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"            InvalidMaxCapacityException {","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"JonathanKhooTY"},"content":"        MoveStorageCommand moveStorageCommand \u003d (MoveStorageCommand) parser.parseCommand(\"movestorage abc\");","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(\"movestorage\",moveStorageCommand.COMMAND);","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"JonathanKhooTY":27,"iamakilahamed":3}},{"path":"src/test/java/seedu/duke/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JonathanKhooTY"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"JonathanKhooTY"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.CheckInCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.CheckoutCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.ClearCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.EditMaxCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.ExitCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.FindCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.HelpCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.ListCheckedInCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.ListCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.commands.MoveStorageCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidCommandException;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidIdException;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidIntegerException;","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidNameFormatException;","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.InvalidPhoneNumberException;","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.NoArgumentPassedException;","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"JonathanKhooTY"},"content":"import seedu.duke.exceptions.WrongFlagException;","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"JonathanKhooTY"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"JonathanKhooTY"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"JonathanKhooTY"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"JonathanKhooTY"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"JonathanKhooTY"},"content":"import static seedu.duke.testutil.SamplePersons.JOHN;","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"JonathanKhooTY"},"content":"public class ParserTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"JonathanKhooTY"},"content":"    Parser parser \u003d new Parser();","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"JonathanKhooTY"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"JonathanKhooTY"},"content":"    public void checkInParser_parsedCorrectly() {","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"JonathanKhooTY"},"content":"        String name \u003d JOHN.getName().getNameString().toLowerCase();","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"JonathanKhooTY"},"content":"        String id \u003d JOHN.getId().getIdString();","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"JonathanKhooTY"},"content":"        String[] result \u003d {name,id};","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"JonathanKhooTY"},"content":"        assertArrayEquals(parser.splitTextIntoTwoFields(\"John 123A\"), result);","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"JonathanKhooTY"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"JonathanKhooTY"},"content":"    public void parseCommand_checker() {","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"JonathanKhooTY"},"content":"        Throwable exception \u003d assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"JonathanKhooTY"},"content":"                parser.parseCommand(\"checkin\"));","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(exception.getMessage(), Messages.INVALID_COMMAND);","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"JonathanKhooTY"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"JonathanKhooTY"},"content":"    public void parseWrongCommand_Exception() {","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"JonathanKhooTY"},"content":"        Throwable exception \u003d assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"JonathanKhooTY"},"content":"                parser.parseCommand(\"\"));","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(exception.getMessage(), Messages.INVALID_COMMAND);","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"JonathanKhooTY"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"JonathanKhooTY"},"content":"    public void parseInvalidCommand_Exception() {","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"JonathanKhooTY"},"content":"        Throwable exception \u003d assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"JonathanKhooTY"},"content":"                parser.parseCommand(\"abc abc\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"JonathanKhooTY"},"content":"        assertEquals(exception.getMessage(), Messages.INVALID_COMMAND);","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"JonathanKhooTY"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"JonathanKhooTY"},"content":"    public void parseInvalidInteger_Exception() {","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"JonathanKhooTY"},"content":"        assertFalse(parser.isValidInteger(\"abc\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"JonathanKhooTY"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"JonathanKhooTY"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"JonathanKhooTY"},"content":"    ","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"JonathanKhooTY"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"JonathanKhooTY":71,"iamakilahamed":2}},{"path":"src/test/java/seedu/duke/person/IdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package seedu.duke.person;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"class IdTest {","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"    void testEquals() {","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"        Id id1 \u003d new Id(\"123A\");","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"        Id id2 \u003d new Id(\"123A\");","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"        Id id3 \u003d new Id(\"456B\");","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"        assertTrue(id1.equals(id1));","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"        assertTrue(id1.equals(id2));","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"        assertFalse(id1.equals(id3));","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"        assertFalse(id1.equals(\"test string\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"hussain1998":22}},{"path":"src/test/java/seedu/duke/person/PersonLogTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package seedu.duke.person;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"import static seedu.duke.testutil.SamplePersons.ALICE;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"import static seedu.duke.testutil.SamplePersons.BOB;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"import static seedu.duke.testutil.SamplePersons.JACK_NO_PHONE;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"import static seedu.duke.testutil.SamplePersons.JOHN;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"import static seedu.duke.testutil.SamplePersons.MARY;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"import static seedu.duke.testutil.SamplePersons.NON_EXISTENT_PERSON;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"class PersonLogTest {","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"    PersonLog personLog \u003d PersonLog.getInstance();","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"    public void personLogTest() {","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"        personLog.changePath(\"test/LogFile\");","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"        try {","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"            personLog.clearAllPersons();","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"            personLog.addPerson(ALICE);","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"hussain1998"},"content":"            personLog.addPerson(BOB);","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"            personLog.addPerson(JOHN);","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"hussain1998"},"content":"            personLog.addPerson(MARY);","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"hussain1998"},"content":"            personLog.addPerson(JACK_NO_PHONE);","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"hussain1998"},"content":"            personLog.saveAllPersons();","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"hussain1998"},"content":"            personLog.loadAllPersons();","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"hussain1998"},"content":"        } catch (StorageOperationException e) {","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"hussain1998"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"hussain1998"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"hussain1998"},"content":"        testIsFound();","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"hussain1998"},"content":"        testFindPerson();","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"hussain1998"},"content":"        testModifyPerson();","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"hussain1998"},"content":"    void testIsFound() {","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"hussain1998"},"content":"        assertTrue(personLog.isFound(ALICE.getId()));","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"hussain1998"},"content":"        assertTrue(personLog.isFound(JACK_NO_PHONE.getId()));","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"hussain1998"},"content":"        assertFalse(personLog.isFound(NON_EXISTENT_PERSON.getId()));","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"hussain1998"},"content":"    void testFindPerson() {","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"hussain1998"},"content":"        assertEquals(JOHN, personLog.findPerson(JOHN.getId()));","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"hussain1998"},"content":"        assertNull(personLog.findPerson(NON_EXISTENT_PERSON.getId()));","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"hussain1998"},"content":"    void testModifyPerson() {","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"hussain1998"},"content":"        String jackNewPhone \u003d \"12345678\";","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"hussain1998"},"content":"        JACK_NO_PHONE.getPhone().setPhoneNo(jackNewPhone);","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"hussain1998"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"hussain1998"},"content":"            personLog.modifyPerson(JACK_NO_PHONE);","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"hussain1998"},"content":"        } catch (StorageOperationException e) {","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"hussain1998"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"hussain1998"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"hussain1998"},"content":"        Person newJack \u003d personLog.findPerson(JACK_NO_PHONE.getId());","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"hussain1998"},"content":"        assertEquals(jackNewPhone, newJack.getPhone().getPhoneNo());","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"hussain1998"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"hussain1998":64}},{"path":"src/test/java/seedu/duke/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package seedu.duke.person;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"import static seedu.duke.testutil.SamplePersons.JOHN;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"import static seedu.duke.testutil.SamplePersons.JOHN_DIFF_ID;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"import static seedu.duke.testutil.SamplePersons.JOHN_NO_PHONE;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"public class PersonTest {","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"    void testEquals() {","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"        assertTrue(JOHN.equals(JOHN));","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"        assertTrue(JOHN.equals(JOHN_NO_PHONE));","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"        assertFalse(JOHN.equals(JOHN_DIFF_ID));","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"        assertFalse(JOHN.equals(\"test string\"));","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"sarzorwyn":1,"hussain1998":19}},{"path":"src/test/java/seedu/duke/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package seedu.duke.person;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"import static seedu.duke.person.Phone.isValidPhone;","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"import static seedu.duke.testutil.SamplePersons.JOHN;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"import static seedu.duke.testutil.SamplePersons.JOHN_DIFF_ID;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"import static seedu.duke.testutil.SamplePersons.JOHN_NO_PHONE;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"class PhoneTest {","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"    static final String CORRECT_PHONE \u003d \"91234567\";","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"    static final String WRONG_LEN_PHONE \u003d \"9123456\";","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"    static final String NON_DIGITS_PHONE \u003d \"9123456a\";","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"    static final Phone JOHN_PHONE \u003d JOHN.getPhone();","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"    static final Phone JOHN_DIFF_ID_PHONE \u003d JOHN_DIFF_ID.getPhone();","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"    static final Phone NO_PHONE_JOHN_PHONE \u003d JOHN_NO_PHONE.getPhone();","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"    void testValidPhone() {","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"hussain1998"},"content":"        assertTrue(isValidPhone(CORRECT_PHONE));","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"        assertFalse(isValidPhone(WRONG_LEN_PHONE));","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"hussain1998"},"content":"        assertFalse(isValidPhone(NON_DIGITS_PHONE));","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"hussain1998"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"hussain1998"},"content":"    void getPhoneNo() {","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"hussain1998"},"content":"        assertEquals(JOHN_PHONE.getPhoneNo(), JOHN_DIFF_ID_PHONE.getPhoneNo());","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"hussain1998"},"content":"        assertNotEquals(JOHN_PHONE.getPhoneNo(), NO_PHONE_JOHN_PHONE.getPhoneNo());","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"hussain1998"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"hussain1998"},"content":"    void setPhoneNo() {","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"hussain1998"},"content":"        NO_PHONE_JOHN_PHONE.setPhoneNo(CORRECT_PHONE);","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"hussain1998"},"content":"        assertEquals(NO_PHONE_JOHN_PHONE.getPhoneNo(), CORRECT_PHONE);","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"hussain1998"},"content":"        NO_PHONE_JOHN_PHONE.setPhoneNo(null);","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"hussain1998"},"content":"        assertNull(NO_PHONE_JOHN_PHONE.getPhoneNo());","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"hussain1998"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"hussain1998"},"content":"    void isAvailable() {","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"hussain1998"},"content":"        assertFalse(NO_PHONE_JOHN_PHONE.isAvailable());","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"hussain1998"},"content":"        assertTrue(JOHN_PHONE.isAvailable());","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"hussain1998"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"hussain1998"},"content":"    void testToString() {","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"hussain1998"},"content":"        assertEquals(JOHN_PHONE.getPhoneNo(), JOHN_PHONE.toString());","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"hussain1998"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"hussain1998":56}},{"path":"src/test/java/seedu/duke/person/TrackingListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sarzorwyn"},"content":"package seedu.duke.person;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"sarzorwyn"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"sarzorwyn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"sarzorwyn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"sarzorwyn"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"sarzorwyn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"sarzorwyn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"sarzorwyn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"sarzorwyn"},"content":"import static seedu.duke.testutil.SamplePersons.JOHN;","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"sarzorwyn"},"content":"import static seedu.duke.testutil.SamplePersons.ALICE;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"sarzorwyn"},"content":"import static seedu.duke.testutil.SamplePersons.BOB;","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"sarzorwyn"},"content":"import static seedu.duke.testutil.SamplePersons.MARY;","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"sarzorwyn"},"content":"public class TrackingListTest {","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"sarzorwyn"},"content":"    private TrackingList trackingList;","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"sarzorwyn"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"sarzorwyn"},"content":"    public void initTrackingList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"sarzorwyn"},"content":"        trackingList \u003d new TrackingList();","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"sarzorwyn"},"content":"    public void testConstructor() {","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"sarzorwyn"},"content":"        TrackingList constructedList \u003d new TrackingList(JOHN, MARY, ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"sarzorwyn"},"content":"        assertTrue(constructedList.contains(JOHN));","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"sarzorwyn"},"content":"        assertTrue(constructedList.contains(MARY));","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"sarzorwyn"},"content":"        assertTrue(constructedList.contains(ALICE));","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"sarzorwyn"},"content":"        assertFalse(constructedList.contains(BOB));","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"sarzorwyn"},"content":"    public void testContains() {","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(BOB);","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"sarzorwyn"},"content":"        assertTrue(trackingList.contains(ALICE));","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"sarzorwyn"},"content":"        assertFalse(trackingList.contains(JOHN));","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"sarzorwyn"},"content":"        assertTrue(trackingList.contains(BOB));","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"sarzorwyn"},"content":"    public void testDelete() {","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(BOB);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(MARY);","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.delete(ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"sarzorwyn"},"content":"        int expectedBobIndex \u003d 0;","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.delete(expectedBobIndex);","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"sarzorwyn"},"content":"        assertFalse(trackingList.contains(ALICE));","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"sarzorwyn"},"content":"        assertFalse(trackingList.contains(BOB));","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"sarzorwyn"},"content":"        assertTrue(trackingList.contains(MARY));","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"sarzorwyn"},"content":"    public void testGetPerson() {","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(JOHN);","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(MARY);","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"sarzorwyn"},"content":"        int expectedJohnIndex \u003d 0;","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"sarzorwyn"},"content":"        assertEquals(JOHN,trackingList.getPerson(expectedJohnIndex));","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"sarzorwyn"},"content":"    public void testListPerson() {","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(BOB);","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(MARY);","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"sarzorwyn"},"content":"        List\u003cPerson\u003e returnedList \u003d trackingList.listPerson();","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"sarzorwyn"},"content":"        assertTrue(returnedList.contains(ALICE));","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"sarzorwyn"},"content":"        assertTrue(returnedList.contains(BOB));","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"sarzorwyn"},"content":"        assertTrue(returnedList.contains(MARY));","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"sarzorwyn"},"content":"    public void testGetSize() {","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"sarzorwyn"},"content":"        int expectedSize \u003d 0;","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"sarzorwyn"},"content":"        assertEquals(trackingList.getSize(), expectedSize);","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"sarzorwyn"},"content":"        expectedSize +\u003d 1;","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"sarzorwyn"},"content":"        assertEquals(trackingList.getSize(), expectedSize);","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(BOB);","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"sarzorwyn"},"content":"        expectedSize +\u003d 1;","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"sarzorwyn"},"content":"        assertEquals(trackingList.getSize(), expectedSize);","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"sarzorwyn"},"content":"    public void testClear() {","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(BOB);","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(MARY);","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.clear();","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"sarzorwyn"},"content":"        assertFalse(trackingList.contains(ALICE));","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"sarzorwyn"},"content":"        assertFalse(trackingList.contains(BOB));","lastModifiedDate":"2021-03-11"},{"lineNumber":105,"author":{"gitId":"sarzorwyn"},"content":"        assertFalse(trackingList.contains(MARY));","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"sarzorwyn"},"content":"        int expectedSize \u003d 0;","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"sarzorwyn"},"content":"        assertEquals(trackingList.getSize(), expectedSize);","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"sarzorwyn"},"content":"    public void findExactPerson_idInTrackingList_success() throws Exception {","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(BOB);","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"sarzorwyn"},"content":"        assertEquals(trackingList.findExactPerson(BOB.getId()), BOB);","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"sarzorwyn"},"content":"    public void findExactPerson_idNotInTrackingList_exceptionThrown() {","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(BOB);","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"sarzorwyn"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e trackingList.findExactPerson(MARY.getId()));","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"sarzorwyn"},"content":"    public void findExactPerson_phoneInTrackingList_success() throws Exception {","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(BOB);","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"sarzorwyn"},"content":"        assertTrue(trackingList.findPerson(BOB.getPhone()).contains(BOB));","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":136,"author":{"gitId":"sarzorwyn"},"content":"    public void findPerson_phoneNotInTrackingList_exceptionThrown() {","lastModifiedDate":"2021-03-23"},{"lineNumber":137,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(BOB);","lastModifiedDate":"2021-03-23"},{"lineNumber":139,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":140,"author":{"gitId":"sarzorwyn"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e trackingList.findPerson(MARY.getPhone()));","lastModifiedDate":"2021-03-23"},{"lineNumber":141,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":142,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":143,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":144,"author":{"gitId":"sarzorwyn"},"content":"    public void findExactPerson_nameInTrackingList_success() throws Exception {","lastModifiedDate":"2021-03-23"},{"lineNumber":145,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":146,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(BOB);","lastModifiedDate":"2021-03-23"},{"lineNumber":147,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":148,"author":{"gitId":"sarzorwyn"},"content":"        assertTrue(trackingList.findPerson(BOB.getName()).contains(BOB));","lastModifiedDate":"2021-03-23"},{"lineNumber":149,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":150,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":151,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":152,"author":{"gitId":"sarzorwyn"},"content":"    public void findPerson_nameNotInTrackingList_exceptionThrown() {","lastModifiedDate":"2021-03-23"},{"lineNumber":153,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":154,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.add(BOB);","lastModifiedDate":"2021-03-23"},{"lineNumber":155,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":156,"author":{"gitId":"sarzorwyn"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e trackingList.findPerson(MARY.getName()));","lastModifiedDate":"2021-03-23"},{"lineNumber":157,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":158,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":159,"author":{"gitId":"sarzorwyn"},"content":"    @AfterEach","lastModifiedDate":"2021-03-16"},{"lineNumber":160,"author":{"gitId":"sarzorwyn"},"content":"    public void clearTrackingList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":161,"author":{"gitId":"sarzorwyn"},"content":"        trackingList.clear();","lastModifiedDate":"2021-03-16"},{"lineNumber":162,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":163,"author":{"gitId":"sarzorwyn"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"sarzorwyn":163}},{"path":"src/test/java/seedu/duke/storage/ConfigFileTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sarzorwyn"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"sarzorwyn"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"sarzorwyn"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"sarzorwyn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"sarzorwyn"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"sarzorwyn"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"sarzorwyn"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"import java.nio.file.StandardCopyOption;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"sarzorwyn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"sarzorwyn"},"content":"public class ConfigFileTest {","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"sarzorwyn"},"content":"    private static ConfigFile configFile;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"sarzorwyn"},"content":"    private static String testPath \u003d \"src/test/data/ConfigFileTest/settings.properties\";","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"sarzorwyn"},"content":"    private static String originalPath \u003d \"src/test/data/ConfigFileTest/revert.txt\";","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"sarzorwyn"},"content":"    @BeforeAll","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"sarzorwyn"},"content":"    public static void configFileTest() {","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"sarzorwyn"},"content":"        configFile \u003d new ConfigFile(testPath);","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"sarzorwyn"},"content":"    public void loadTest() {","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"sarzorwyn"},"content":"        String expectedPath \u003d \"src/test/data/StorageFileTest/ValidData\";","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"sarzorwyn"},"content":"        configFile.load();","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"sarzorwyn"},"content":"        assertEquals(configFile.getStorageFilePath(), expectedPath);","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"sarzorwyn"},"content":"    public void setStorageFilePathTest() throws StorageOperationException {","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"sarzorwyn"},"content":"        String newPath \u003d \"src/test/data/StorageFileTest/invalidData\";","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"sarzorwyn"},"content":"        configFile.setStorageFilePath(newPath);","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"sarzorwyn"},"content":"        assertEquals(configFile.getStorageFilePath(), newPath);","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"sarzorwyn"},"content":"    @AfterEach","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"sarzorwyn"},"content":"    public void configFileCleanup() throws Exception {","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"sarzorwyn"},"content":"        Path test \u003d Paths.get(testPath);","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"sarzorwyn"},"content":"        Path original \u003d Paths.get(originalPath);","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"sarzorwyn"},"content":"        Files.copy(original, test, StandardCopyOption.REPLACE_EXISTING);","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"sarzorwyn"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"sarzorwyn":45}},{"path":"src/test/java/seedu/duke/storage/StorageFileTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sarzorwyn"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"sarzorwyn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"sarzorwyn"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"sarzorwyn"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"sarzorwyn"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"sarzorwyn"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"sarzorwyn"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"sarzorwyn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"sarzorwyn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"sarzorwyn"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"sarzorwyn"},"content":"import static seedu.duke.storage.StorageFile.TXT_FILE_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"sarzorwyn"},"content":"import static seedu.duke.testutil.SampleTrackingList.SAMPLE_STORAGE_TRACKING_LIST;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"sarzorwyn"},"content":"public class StorageFileTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"sarzorwyn"},"content":"    private static final String TEST_DATA_PATH \u003d \"src/test/data/StorageFileTest/\";","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"sarzorwyn"},"content":"    private static final String VALID_DATA_FILE \u003d \"ValidData\";","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"sarzorwyn"},"content":"    private static final String INVALID_DATA_FILE \u003d \"InvalidData\";","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"sarzorwyn"},"content":"    private static final String NON_EXISTENT_FILE \u003d \"NotExistent\";","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"sarzorwyn"},"content":"    private static final String NEW_FILE \u003d \"NewFile\";","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"sarzorwyn"},"content":"    public void constructor_invalidFilePath_StorageOperationExceptionThrown() {","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"sarzorwyn"},"content":"        String invalidPath \u003d \":-?;\\0\";","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"sarzorwyn"},"content":"        assertThrows(StorageOperationException.class, () -\u003e new StorageFile(invalidPath));","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"sarzorwyn"},"content":"    public void constructor_defaultConstructor_success() throws Exception {","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"sarzorwyn"},"content":"        try {","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"sarzorwyn"},"content":"            new StorageFile();","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"sarzorwyn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"sarzorwyn"},"content":"            fail();","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"sarzorwyn"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"sarzorwyn"},"content":"    public void load_invalidFormat_StorageOperationExceptionThrown()","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"sarzorwyn"},"content":"            throws StorageOperationException {","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"sarzorwyn"},"content":"        StorageFile storage \u003d new StorageFile(TEST_DATA_PATH + INVALID_DATA_FILE);","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"sarzorwyn"},"content":"        assertThrows(StorageOperationException.class, storage::load);","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"sarzorwyn"},"content":"    public void load_validFormat_success() throws Exception {","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"sarzorwyn"},"content":"        StorageFile storage \u003d new StorageFile(TEST_DATA_PATH + VALID_DATA_FILE);","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"sarzorwyn"},"content":"        TrackingList actualTrackingList \u003d storage.load();","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"sarzorwyn"},"content":"        TrackingList expectedTrackingList \u003d SAMPLE_STORAGE_TRACKING_LIST;","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"sarzorwyn"},"content":"        assertEquals(actualTrackingList.listPerson(), expectedTrackingList.listPerson());","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"sarzorwyn"},"content":"    public void load_nonExistentFile_returnsEmptyTrackingList() throws Exception {","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"sarzorwyn"},"content":"        StorageFile storage \u003d new StorageFile(TEST_DATA_PATH + NON_EXISTENT_FILE);","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"sarzorwyn"},"content":"        TrackingList actualTrackingList \u003d storage.load();","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"sarzorwyn"},"content":"        TrackingList expectedTrackingList \u003d new TrackingList();","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"sarzorwyn"},"content":"        assertEquals(actualTrackingList.listPerson(), expectedTrackingList.listPerson());","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"sarzorwyn"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"sarzorwyn"},"content":"    public void testSave() throws Exception {","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"sarzorwyn"},"content":"        StorageFile storage \u003d new StorageFile(TEST_DATA_PATH + NEW_FILE);","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"sarzorwyn"},"content":"        TrackingList savedTrackingList \u003d SAMPLE_STORAGE_TRACKING_LIST;","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"sarzorwyn"},"content":"        storage.save(savedTrackingList);","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"sarzorwyn"},"content":"        Path savedFilePath \u003d Paths.get(TEST_DATA_PATH + NEW_FILE + TXT_FILE_FORMAT);","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"sarzorwyn"},"content":"        Path validFilePath \u003d Paths.get(TEST_DATA_PATH + VALID_DATA_FILE + TXT_FILE_FORMAT);","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"sarzorwyn"},"content":"        List\u003cString\u003e savedFile \u003d Files.readAllLines(savedFilePath);","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"sarzorwyn"},"content":"        List\u003cString\u003e validFile \u003d Files.readAllLines(validFilePath);","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"sarzorwyn"},"content":"        assertEquals(savedFile, validFile);","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"sarzorwyn"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"sarzorwyn"},"content":"        // Clean up","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"sarzorwyn"},"content":"        Files.deleteIfExists(savedFilePath);","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"sarzorwyn"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"sarzorwyn"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"sarzorwyn":81}},{"path":"src/test/java/seedu/duke/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package seedu.duke.testutil;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.Id;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.Name;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.Phone;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"hussain1998"},"content":"public class PersonBuilder {","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"hussain1998"},"content":"    private Id id;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"hussain1998"},"content":"    private Name name;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"hussain1998"},"content":"    private Phone phone;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"    private Boolean isCheckedIn;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"    public PersonBuilder withId(String id) {","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"        this.id \u003d new Id(id);","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"        return this;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"hussain1998"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"hussain1998"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"        return this;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"hussain1998"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"hussain1998"},"content":"        return this;","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"hussain1998"},"content":"    public PersonBuilder withCheckedInStatus(boolean isCheckedIn) {","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"hussain1998"},"content":"        this.isCheckedIn \u003d isCheckedIn;","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"hussain1998"},"content":"        return this;","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"hussain1998"},"content":"    public Person build() {","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"hussain1998"},"content":"        Person person \u003d new Person(id,name,phone);","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"hussain1998"},"content":"        person.setCheckedIn(isCheckedIn);","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"hussain1998"},"content":"        return person;","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"hussain1998"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"hussain1998"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"hussain1998":39}},{"path":"src/test/java/seedu/duke/testutil/SampleLocations.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.testutil;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.InvalidArgumentSizeException;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.InvalidMaxCapacityException;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.exceptions.NoArgumentPassedException;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.location.Location;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"public class SampleLocations {","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"    public static Location SCHOOL;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"    public static Location SMALL_SHOP;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"    public static Location BIG_MALL;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"    public static Location FOOD_COURT;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"iamakilahamed"},"content":"    public static Location CINEMA;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"    public static Location EVENT;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"iamakilahamed"},"content":"    static {","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"        try {","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"            SCHOOL \u003d new Location(new String[] {\"National University of Singapore\", \"1000\"});","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"            SMALL_SHOP \u003d new Location(new String[] {\"ValueDollar\", \"25\"});","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"iamakilahamed"},"content":"            BIG_MALL \u003d new Location(new String[] {\"VivoCity\", \"1000\"});","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"iamakilahamed"},"content":"            FOOD_COURT \u003d new Location(new String[] {\"Kopitiam\", \"50\"});","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"iamakilahamed"},"content":"            CINEMA \u003d new Location(new String[] {\"Cathay Cineplex\", \"100\"});","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"iamakilahamed"},"content":"            EVENT \u003d new Location(new String[] {\"Wedding\", \"250\"});","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"iamakilahamed"},"content":"        } catch (InvalidMaxCapacityException | InvalidArgumentSizeException e) {","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"iamakilahamed"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"iamakilahamed"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"iamakilahamed"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"iamakilahamed":29}},{"path":"src/test/java/seedu/duke/testutil/SamplePersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hussain1998"},"content":"package seedu.duke.testutil;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"hussain1998"},"content":"import seedu.duke.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"hussain1998"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"hussain1998"},"content":"public class SamplePersons {","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"sarzorwyn"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withId(\"665B\")","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"sarzorwyn"},"content":"            .withName(\"Alice\").withPhone(\"86862540\")","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"sarzorwyn"},"content":"            .withCheckedInStatus(true).build();","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"sarzorwyn"},"content":"    public static final Person BOB \u003d new PersonBuilder().withId(\"126C\")","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"sarzorwyn"},"content":"            .withName(\"Bob\").withPhone(\"90904040\")","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"sarzorwyn"},"content":"            .withCheckedInStatus(true).build();","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"hussain1998"},"content":"    public static final Person JOHN \u003d new PersonBuilder().withId(\"123A\")","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"hussain1998"},"content":"            .withName(\"John\").withPhone(\"12345678\")","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"hussain1998"},"content":"            .withCheckedInStatus(true).build();","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"hussain1998"},"content":"    public static final Person JOHN_NO_PHONE \u003d new PersonBuilder().withId(\"123A\")","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"hussain1998"},"content":"            .withName(\"John\").withPhone(null)","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"hussain1998"},"content":"            .withCheckedInStatus(true).build();","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"iamakilahamed"},"content":"    public static final Person JACK_NO_PHONE \u003d new PersonBuilder().withId(\"375F\")","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"iamakilahamed"},"content":"            .withName(\"Jack\").withPhone(null)","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"iamakilahamed"},"content":"            .withCheckedInStatus(true).build();","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"hussain1998"},"content":"    public static final Person JOHN_DIFF_ID \u003d new PersonBuilder().withId(\"456B\")","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"hussain1998"},"content":"            .withName(\"John\").withPhone(\"12345678\")","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"hussain1998"},"content":"            .withCheckedInStatus(true).build();","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"sarzorwyn"},"content":"    public static final Person MARY \u003d new PersonBuilder().withId(\"230C\")","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"hussain1998"},"content":"            .withName(\"Mary\").withPhone(\"95001501\")","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"sarzorwyn"},"content":"            .withCheckedInStatus(true).build();","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"hussain1998"},"content":"    public static final Person NON_EXISTENT_PERSON \u003d new PersonBuilder().withId(\"090S\")","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"hussain1998"},"content":"            .withName(\"Must not exist\").withPhone(\"00000000\").build();","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"hussain1998"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"iamakilahamed":3,"sarzorwyn":8,"hussain1998":18}},{"path":"src/test/java/seedu/duke/testutil/SampleTrackingList.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"package seedu.duke.testutil;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"import seedu.duke.person.TrackingList;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SamplePersons.ALICE;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"import static seedu.duke.testutil.SamplePersons.BOB;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"sarzorwyn"},"content":"import static seedu.duke.testutil.SamplePersons.JOHN;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"sarzorwyn"},"content":"import static seedu.duke.testutil.SamplePersons.JOHN_NO_PHONE;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"sarzorwyn"},"content":"import static seedu.duke.testutil.SamplePersons.MARY;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"public class SampleTrackingList {","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"    public static TrackingList SAMPLE_TRACKING_LIST \u003d new TrackingList(ALICE, BOB);","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"sarzorwyn"},"content":"    public static TrackingList SAMPLE_STORAGE_TRACKING_LIST \u003d new TrackingList(MARY, JOHN_NO_PHONE);","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"iamakilahamed"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"iamakilahamed":9,"sarzorwyn":4}},{"path":"src/test/java/seedu/duke/ui/UiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iamakilahamed"},"content":"//package seedu.duke.ui;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"iamakilahamed"},"content":"//","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"iamakilahamed"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"iamakilahamed"},"content":"//import seedu.duke.exceptions.InvalidMaxCapacityException;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"iamakilahamed"},"content":"//","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"iamakilahamed"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"iamakilahamed"},"content":"//import static seedu.duke.common.Messages.INVALID_MAX_CAPACITY;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"iamakilahamed"},"content":"//","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"iamakilahamed"},"content":"//public class UiTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"iamakilahamed"},"content":"//","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"//    private TextUi ui;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"iamakilahamed"},"content":"//}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"iamakilahamed":12}},{"path":"text-ui-test/runtest.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@echo off","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"setlocal enableextensions","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"pushd %~dp0","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"call gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"cd build\\libs","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"for /f \"tokens\u003d*\" %%a in (","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u0027dir /b *.jar\u0027","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":") do (","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    set jarloc\u003d%%a","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"iamakilahamed"},"content":"java -jar %jarloc% \"Control Your Crowd Launch Day\" \"500\"\u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"cd ..\\..\\text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"iamakilahamed":1,"-":18}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"iamakilahamed"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \"Control Your Crowd Launch Day\" \"500\"\u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"diff EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"iamakilahamed":1,"-":22}}]
