[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":"    implementation group: \u0027org.apache.commons\u0027, name: \u0027commons-lang3\u0027, version: \u00273.11\u0027","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LeeHanYongAndy":2,"-":46}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"# *FINUX*","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":"## Table of Content","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":"---","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"1. [Introduction](#1-introduction)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":"   1.1 [Purpose](#11-purpose)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"tzexern"},"content":"   1.2 [Using this Guide](#12-using-this-guide)","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"tzexern"},"content":"2. [Setting Up](#2-setting-up)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"   2.1 [Setting up the project in your computer](#21-setting-up-the-project-in-your-computer)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"   2.2 [Before writing code](#22-before-writing-code)","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"3. [Design](#3-design)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"   3.1 [Architecture](#31-architecture)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"   3.2 [UI Component](#32-ui-component)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"   3.3 [Parser Component](#33-parser-component)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"   3.4 [CommandHandler Component](#34-commandhandler-component)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"   3.5 [RecordList Component](#35-recordlist-component)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"   3.6 [Storage Component](#36-storage-component)","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":"4. [Implementation](#4-implementation)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"tzexern"},"content":"   4.1 [Add Feature](#41-add-feature)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":"   4.2 [List Feature](#42-list-feature)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"   4.3 [View Feature](#43-view-feature)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"   4.4 [Return Feature](#44-return-feature)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":"   4.5 [Remove Feature](#45-remove-feature)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"   4.6 [Storage Feature](#46-storage-feature)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"   4.7 [Credit Score Feature](#47-credit-score-feature)","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"5. [Documentation, Logging, Testing, and DevOps](#5-documentation-logging-testing-and-devops)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":"[Appendix A: Product Scope](#appendix-a-product-scope)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"tzexern"},"content":"\\","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"tzexern"},"content":"[Appendix B: User Stories](#appendix-b-user-stories)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"\\","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"[Appendix C: Non-Functional Requirements](#appendix-c-non-functional-requirements)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"\\","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"[Appendix D: Instructions For Manual Testing](#appendix-d-instructions-for-manual-testing)","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"tzexern"},"content":"## 1. Introduction","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"tzexern"},"content":"---","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"tzexern"},"content":"**Greetings from Finux!**","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"tzexern"},"content":"**Finux** is a CLI Style application that allows the user to make better financial","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"tzexern"},"content":"decisions based on the information recorded in the application. If you’re familiar","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"tzexern"},"content":"with the CLI command interface, you will enjoy the benefit of speeding up your","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"tzexern"},"content":"finance management rather than using the traditional management system.","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"tzexern"},"content":"**Finux** is written in Java 11 and uses the Object-Oriented Programming (OOP) paradigm.","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"tzexern"},"content":"OOP enables us to produce organized and reusable codes, allowing efficient improvements","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"tzexern"},"content":"and revisions in the future.","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"tzexern"},"content":"### 1.1 Purpose","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"tzexern"},"content":"This guide is for new and current developers of **Finux**. It describes the overall architecture","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"tzexern"},"content":"design of **Finux** and describes the current implementation details of our main features","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"tzexern"},"content":"with the thought process behind each of them. The current edition of this guide is meant for","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"tzexern"},"content":"the `v2.1` release.","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"tzexern"},"content":"### 1.2 Using this Guide","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"tzexern"},"content":"Throughout the guide, you might encounter several icons, refer to the following consolidate","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"tzexern"},"content":"list of icons:","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"tzexern"},"content":"\u003e 💡 It indicates that this is an important piece of information.\\","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"tzexern"},"content":"\u003e ❗  It indicates that this is a warning and you should be aware of it while developing.\\","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"tzexern"},"content":"\u003e 📝 It indicates that this is a tip and you may find it useful when using our application or guide.","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"tzexern"},"content":"\u003e 📝 Text that are blue like this [example(jumps to 1.2)](#12-using-this-guide), are clickable links","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"tzexern"},"content":"\u003e that will move you to the relevant section of the guide.","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"tzexern"},"content":"## 2. Setting Up","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"tzexern"},"content":"---","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"tzexern"},"content":"### 2.1 Setting up the project in your computer","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"tzexern"},"content":"Ensure that you have the following installed:","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"tzexern"},"content":"* JDK 11","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"tzexern"},"content":"* Intellij IDEA (Highly Recommended)","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"tzexern"},"content":"Firstly, **fork** this repo and **clone** a copy into your computer.","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"tzexern"},"content":"If you plan to use IntelliJ IDEA:","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"tzexern"},"content":"1. **Ensure IntelliJ is configured to develop in JDK 11.**","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"tzexern"},"content":"   1. If you are not at the welcome screen, click `File` \u003e `Close Projects` to close any currently opened projects.","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"tzexern"},"content":"   1. Click on `Configure` \u003e `Structure for New Projects` \u003e `Project Settings` \u003e `Project`, ensure","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"tzexern"},"content":"      the `Project SDK` is using **JDK 11**.","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"tzexern"},"content":"1. **Import the project as a Gradle Project.**","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"tzexern"},"content":"   1. Click on `Import Project` and locate the `build.gradle` file and select it. Click `OK`.","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"tzexern"},"content":"   1. If prompted, choose to `Open as Project` (not `Open as File`).","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"tzexern"},"content":"   1. Click `OK` to accept the default settings but do ensure that the selected version of `Gradle JVM`","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"tzexern"},"content":"      matches the JDK being used for the project.","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"tzexern"},"content":"   1. Wait for the importing process to finish (it could take a few minutes).","lastModifiedDate":"2021-03-25"},{"lineNumber":99,"author":{"gitId":"tzexern"},"content":"1. **Verify the setup.**","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"tzexern"},"content":"   1. After importing successfully, locate the `src/main/java/seedu.duke/Duke.java` file, right click it, ","lastModifiedDate":"2021-03-25"},{"lineNumber":101,"author":{"gitId":"tzexern"},"content":"      and choose `Run...`. If the setup is correct, you should see the following:","lastModifiedDate":"2021-03-25"},{"lineNumber":102,"author":{"gitId":"tzexern"},"content":"   ![Login_Page](img/LoginPageExampleOutput.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":103,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":104,"author":{"gitId":"tzexern"},"content":"### 2.2 Before writing code","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"tzexern"},"content":"#### 2.2.1 Configuring the Coding Style","lastModifiedDate":"2021-03-25"},{"lineNumber":107,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":108,"author":{"gitId":"tzexern"},"content":"If you are using IDEA, follow this guide ","lastModifiedDate":"2021-03-25"},{"lineNumber":109,"author":{"gitId":"tzexern"},"content":"[IDEA: Configuring the code style](https://se-education.org/guides/tutorials/intellijCodeStyle.html)","lastModifiedDate":"2021-03-25"},{"lineNumber":110,"author":{"gitId":"tzexern"},"content":"to setup IDEA\u0027s coding style to match ours.","lastModifiedDate":"2021-03-25"},{"lineNumber":111,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":112,"author":{"gitId":"tzexern"},"content":"#### 2.2.2 Set up CI","lastModifiedDate":"2021-03-25"},{"lineNumber":113,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":114,"author":{"gitId":"tzexern"},"content":"There is no set up required as the project comes with GitHub Actions config files, located in `.github/workflows`","lastModifiedDate":"2021-03-25"},{"lineNumber":115,"author":{"gitId":"tzexern"},"content":"folder. When GitHub detects these files, it will run the CI for the project automatically at each push to the master","lastModifiedDate":"2021-03-25"},{"lineNumber":116,"author":{"gitId":"tzexern"},"content":"branch or to any PR.","lastModifiedDate":"2021-03-25"},{"lineNumber":117,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":118,"author":{"gitId":"tzexern"},"content":"#### 2.2.3 Learn the Design","lastModifiedDate":"2021-03-25"},{"lineNumber":119,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":120,"author":{"gitId":"tzexern"},"content":"Before starting to write any code, we recommend that you have a look at Finux\u0027s overall design by reading","lastModifiedDate":"2021-03-25"},{"lineNumber":121,"author":{"gitId":"tzexern"},"content":"[Finux\u0027s Architecture](#31-architecture) section.","lastModifiedDate":"2021-03-25"},{"lineNumber":122,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":123,"author":{"gitId":"tzexern"},"content":"## 3. Design","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"tzexern"},"content":"---","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"tzexern"},"content":"### 3.1 Architecture","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":129,"author":{"gitId":"marklowsk"},"content":"![ArchitectureDiagram](img/ArchitectureDiagram.png)","lastModifiedDate":"2021-03-22"},{"lineNumber":130,"author":{"gitId":"marklowsk"},"content":"_Figure 1. **Finux** Architecture Diagram_","lastModifiedDate":"2021-03-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":132,"author":{"gitId":"marklowsk"},"content":"\u003e 💡 The diagrams are built with [PlantUML](https://plantuml.com/).","lastModifiedDate":"2021-03-25"},{"lineNumber":133,"author":{"gitId":"marklowsk"},"content":"\u003e The `.puml` files can be found in the [diagrams](https://github.com/AY2021S2-CS2113T-W09-1/tp/tree/master/docs/diagrams) folder and","lastModifiedDate":"2021-03-25"},{"lineNumber":134,"author":{"gitId":"marklowsk"},"content":"\u003e the generated picture diagrams are in the [img](https://github.com/AY2021S2-CS2113T-W09-1/tp/tree/master/docs/img) folder.","lastModifiedDate":"2021-03-25"},{"lineNumber":135,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":136,"author":{"gitId":"marklowsk"},"content":"The _**Architecture Diagram**_ above details the high-level design of the **Finux** Application.","lastModifiedDate":"2021-03-25"},{"lineNumber":137,"author":{"gitId":"marklowsk"},"content":"Brief explanations of the components involved are given below.","lastModifiedDate":"2021-03-25"},{"lineNumber":138,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":139,"author":{"gitId":"marklowsk"},"content":"The `Finux` component contains only one class `Finux`, It is responsible for,","lastModifiedDate":"2021-03-25"},{"lineNumber":140,"author":{"gitId":"marklowsk"},"content":"* At launch: Initializes the components in the correct sequence and attempts to load data from file.  ","lastModifiedDate":"2021-03-25"},{"lineNumber":141,"author":{"gitId":"marklowsk"},"content":"* At shut down: Shuts down the components and invokes cleanup method where necessary.","lastModifiedDate":"2021-03-25"},{"lineNumber":142,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":143,"author":{"gitId":"marklowsk"},"content":"The rest of the Application consists of six components.","lastModifiedDate":"2021-03-25"},{"lineNumber":144,"author":{"gitId":"marklowsk"},"content":"* `UI`: The user interface (UI) of the App which handles all user input and Application output.","lastModifiedDate":"2021-03-25"},{"lineNumber":145,"author":{"gitId":"marklowsk"},"content":"* `Parser`: The user input parser of the CLI.","lastModifiedDate":"2021-03-25"},{"lineNumber":146,"author":{"gitId":"marklowsk"},"content":"* `CommandHandler`: The handler of parsed arguments for conversion into appropriate `Commands`.","lastModifiedDate":"2021-03-25"},{"lineNumber":147,"author":{"gitId":"marklowsk"},"content":"* `Command`: The appropriate command to be executed.","lastModifiedDate":"2021-03-25"},{"lineNumber":148,"author":{"gitId":"marklowsk"},"content":"* `RecordList`: The list of records of the Application stored in-memory.","lastModifiedDate":"2021-03-25"},{"lineNumber":149,"author":{"gitId":"marklowsk"},"content":"* `Storage`: The storage manager that handles the saving of data, or data retrieval to/from file. ","lastModifiedDate":"2021-03-25"},{"lineNumber":150,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":151,"author":{"gitId":"marklowsk"},"content":"Given below are sequence diagrams describing the general Application flow and how the different objects","lastModifiedDate":"2021-03-25"},{"lineNumber":152,"author":{"gitId":"marklowsk"},"content":"interact with each other.","lastModifiedDate":"2021-03-25"},{"lineNumber":153,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":154,"author":{"gitId":"marklowsk"},"content":"![Initialization](img/InitializationSequenceDiagram.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":155,"author":{"gitId":"marklowsk"},"content":"_Figure 2. Initialization_","lastModifiedDate":"2021-03-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":157,"author":{"gitId":"marklowsk"},"content":"The initialization sequence diagram above shows the systematic flow of object creation and record","lastModifiedDate":"2021-03-25"},{"lineNumber":158,"author":{"gitId":"marklowsk"},"content":"retrieval from storage file for creation of the `RecordList` object.","lastModifiedDate":"2021-03-25"},{"lineNumber":159,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":160,"author":{"gitId":"marklowsk"},"content":"![Main program flow](img/CommandLooperSequenceDiagram.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":161,"author":{"gitId":"marklowsk"},"content":"_Figure 3. Main Application loop and exit sequence_","lastModifiedDate":"2021-03-25"},{"lineNumber":162,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":163,"author":{"gitId":"marklowsk"},"content":"\u003e 💡 The lifeline all objects should end at the destroy marker (X) but due to a limitation of PlantUML,","lastModifiedDate":"2021-03-25"},{"lineNumber":164,"author":{"gitId":"marklowsk"},"content":"\u003e the lifeline reaches the end of diagram.","lastModifiedDate":"2021-03-25"},{"lineNumber":165,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":166,"author":{"gitId":"marklowsk"},"content":"This sequence diagram follows suit after initialization in _Figure 2_.\\","lastModifiedDate":"2021-03-25"},{"lineNumber":167,"author":{"gitId":"marklowsk"},"content":"This shows the main flow until the `exit` command is input by the user.","lastModifiedDate":"2021-03-25"},{"lineNumber":168,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":169,"author":{"gitId":"marklowsk"},"content":"The following sections below will provide more details of each component.","lastModifiedDate":"2021-03-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":171,"author":{"gitId":"tzexern"},"content":"### 3.2 UI Component","lastModifiedDate":"2021-03-23"},{"lineNumber":172,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":173,"author":{"gitId":"tzexern"},"content":"![UIComponentDiagram](img/UIComponentDiagram.png)\\","lastModifiedDate":"2021-03-25"},{"lineNumber":174,"author":{"gitId":"tzexern"},"content":"*Figure 1: Ui Class Diagram*","lastModifiedDate":"2021-03-25"},{"lineNumber":175,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":176,"author":{"gitId":"tzexern"},"content":"The Ui Component consists of a `Ui` class which handles all user input and system output.","lastModifiedDate":"2021-03-25"},{"lineNumber":177,"author":{"gitId":"tzexern"},"content":"The Ui is only dependent on the `Duke` class and does not interact directly with other classes,","lastModifiedDate":"2021-03-25"},{"lineNumber":178,"author":{"gitId":"tzexern"},"content":"ensuring a high level of cohesiveness, low level of coupling and separation of roles.","lastModifiedDate":"2021-03-25"},{"lineNumber":179,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":180,"author":{"gitId":"tzexern"},"content":"The `Ui` component actively listens for:","lastModifiedDate":"2021-03-25"},{"lineNumber":181,"author":{"gitId":"tzexern"},"content":"* the execution of commands to print the result of a `command`","lastModifiedDate":"2021-03-25"},{"lineNumber":182,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":183,"author":{"gitId":"tzexern"},"content":"### 3.3 Parser Component","lastModifiedDate":"2021-03-23"},{"lineNumber":184,"author":{"gitId":"LeeHanYongAndy"},"content":"![ParserHandlerClassDiagram](img/ParserHandlerClassDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":185,"author":{"gitId":"LeeHanYongAndy"},"content":"*Figure X: ParserHandler Class Diagram*","lastModifiedDate":"2021-03-24"},{"lineNumber":186,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":187,"author":{"gitId":"LeeHanYongAndy"},"content":"#### Description","lastModifiedDate":"2021-03-24"},{"lineNumber":188,"author":{"gitId":"LeeHanYongAndy"},"content":"The Parser component consist of 1 class called `ParserHandler`.","lastModifiedDate":"2021-03-24"},{"lineNumber":189,"author":{"gitId":"LeeHanYongAndy"},"content":"The role of `ParserHandler` can be interpreted as a \"manager\" or \"middle man\" to parse","lastModifiedDate":"2021-03-24"},{"lineNumber":190,"author":{"gitId":"LeeHanYongAndy"},"content":"the user input from the console into an `ArrayList\u003cString\u003e` format.","lastModifiedDate":"2021-03-24"},{"lineNumber":191,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":192,"author":{"gitId":"LeeHanYongAndy"},"content":"#### Design","lastModifiedDate":"2021-03-24"},{"lineNumber":193,"author":{"gitId":"LeeHanYongAndy"},"content":"In the main program, `ParserHandler` is instantiated through the constructor `new ParserHandler()`,","lastModifiedDate":"2021-03-24"},{"lineNumber":194,"author":{"gitId":"LeeHanYongAndy"},"content":"finalizing the startOptionArray, endOptionArray, and middleOptionArray. Whenever the program needs","lastModifiedDate":"2021-03-24"},{"lineNumber":195,"author":{"gitId":"LeeHanYongAndy"},"content":"to parse a user input, the ParserHandler calls the method `getParseInput` and returns an `ArrayList\u003cString\u003e`.","lastModifiedDate":"2021-03-24"},{"lineNumber":196,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":197,"author":{"gitId":"LeeHanYongAndy"},"content":"1. `getParseInput` will trim the leading white space before calling `startExtraction`.","lastModifiedDate":"2021-03-24"},{"lineNumber":198,"author":{"gitId":"LeeHanYongAndy"},"content":"2. `startExtraction` will check if the trimmed input starts with option. If yes, extract the option and ","lastModifiedDate":"2021-03-24"},{"lineNumber":199,"author":{"gitId":"LeeHanYongAndy"},"content":"   remove the option from the trimmed input before calling `extractSubsequencePart`.","lastModifiedDate":"2021-03-24"},{"lineNumber":200,"author":{"gitId":"LeeHanYongAndy"},"content":"3. `extractSubsequencePart` will check for the next option index and extract whatever is in between the start of the ","lastModifiedDate":"2021-03-24"},{"lineNumber":201,"author":{"gitId":"LeeHanYongAndy"},"content":"   trimmed input to the start of the next option index. This is the argument tagged after the option. ","lastModifiedDate":"2021-03-24"},{"lineNumber":202,"author":{"gitId":"LeeHanYongAndy"},"content":"   * Any leading or trailing white space of the argument field will be removed.","lastModifiedDate":"2021-03-24"},{"lineNumber":203,"author":{"gitId":"LeeHanYongAndy"},"content":"   * If no argument is provided, the argument would be stored an empty string.","lastModifiedDate":"2021-03-24"},{"lineNumber":204,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":205,"author":{"gitId":"LeeHanYongAndy"},"content":"   Afterward, the checking mechanism will loop until no valid next options are left in the input before calling","lastModifiedDate":"2021-03-24"},{"lineNumber":206,"author":{"gitId":"LeeHanYongAndy"},"content":"   `extractFinalPart`.","lastModifiedDate":"2021-03-24"},{"lineNumber":207,"author":{"gitId":"LeeHanYongAndy"},"content":"   * Valid next option format: `\u0027 \u003coption\u003e \u0027` with 1 leading and trailing whitespace. e.g. `\u0027 -e \u0027`","lastModifiedDate":"2021-03-24"},{"lineNumber":208,"author":{"gitId":"LeeHanYongAndy"},"content":"4. `extractFinalPart` will check if the last trimmed input ends with option. If yes, extract the option and ","lastModifiedDate":"2021-03-24"},{"lineNumber":209,"author":{"gitId":"LeeHanYongAndy"},"content":"   add an empty string as the argument, else just add the last trimmed input to the ArrayList. ","lastModifiedDate":"2021-03-24"},{"lineNumber":210,"author":{"gitId":"LeeHanYongAndy"},"content":"5. Finally, after the extraction to ArrayList\u003cString\u003e is complete, `extractFinalPart` will ","lastModifiedDate":"2021-03-24"},{"lineNumber":211,"author":{"gitId":"LeeHanYongAndy"},"content":"   call `checkFirstBlock` for the final check to parse any `help` or `creditscore` in the first argument block.","lastModifiedDate":"2021-03-24"},{"lineNumber":212,"author":{"gitId":"LeeHanYongAndy"},"content":"   ","lastModifiedDate":"2021-03-24"},{"lineNumber":213,"author":{"gitId":"LeeHanYongAndy"},"content":"#### Parser Component Design Consideration","lastModifiedDate":"2021-03-24"},{"lineNumber":214,"author":{"gitId":"LeeHanYongAndy"},"content":"1. Leading and trailing whitespace should be considered carefully especially with options involve.","lastModifiedDate":"2021-03-24"},{"lineNumber":215,"author":{"gitId":"LeeHanYongAndy"},"content":"   * Input starting with valid option should consider the possibility of multiple leading whitespaces, ","lastModifiedDate":"2021-03-24"},{"lineNumber":216,"author":{"gitId":"LeeHanYongAndy"},"content":"   thus `stripLeading()` should be applied.","lastModifiedDate":"2021-03-24"},{"lineNumber":217,"author":{"gitId":"LeeHanYongAndy"},"content":"   * Input ending with valid option should also be considered with possibility of multiple trailing whitespaces,","lastModifiedDate":"2021-03-24"},{"lineNumber":218,"author":{"gitId":"LeeHanYongAndy"},"content":"   thus `stripTrailing()` should be applied as well.","lastModifiedDate":"2021-03-24"},{"lineNumber":219,"author":{"gitId":"LeeHanYongAndy"},"content":"2. Checking of options in the start, end, and during the processing should be considered carefully with accordance ","lastModifiedDate":"2021-03-24"},{"lineNumber":220,"author":{"gitId":"LeeHanYongAndy"},"content":"   to consideration 1.","lastModifiedDate":"2021-03-24"},{"lineNumber":221,"author":{"gitId":"LeeHanYongAndy"},"content":"   * Starting option should be in the form of `\u0027\u003coption\u003e \u0027` with no leading whitespace and 1 trailing whitespace. ","lastModifiedDate":"2021-03-24"},{"lineNumber":222,"author":{"gitId":"LeeHanYongAndy"},"content":"     e.g. `\u0027-e \u0027`","lastModifiedDate":"2021-03-24"},{"lineNumber":223,"author":{"gitId":"LeeHanYongAndy"},"content":"   * Ending option should be in the form of `\u0027 \u003coption\u003e\u0027` with 1 leading whitespace and no trailing whitespace.","lastModifiedDate":"2021-03-24"},{"lineNumber":224,"author":{"gitId":"LeeHanYongAndy"},"content":"     e.g. `\u0027 -e\u0027`","lastModifiedDate":"2021-03-24"},{"lineNumber":225,"author":{"gitId":"LeeHanYongAndy"},"content":"   * During processing, next option should be in the form of `\u0027 \u003coption\u003e \u0027` with 1 leading and trailing whitespace.","lastModifiedDate":"2021-03-24"},{"lineNumber":226,"author":{"gitId":"LeeHanYongAndy"},"content":"     e.g. `\u0027 -e \u0027`","lastModifiedDate":"2021-03-24"},{"lineNumber":227,"author":{"gitId":"LeeHanYongAndy"},"content":"3. As rearrangement of options is allowed, option detection should cater to non-fixed option order. ","lastModifiedDate":"2021-03-24"},{"lineNumber":228,"author":{"gitId":"LeeHanYongAndy"},"content":"   Apache Commons Lang, 3.11, providing the StringUtils class is used to cater to consideration 2.","lastModifiedDate":"2021-03-24"},{"lineNumber":229,"author":{"gitId":"LeeHanYongAndy"},"content":"   * StringUtils.startsWithAny() - detection of start option with non-fixed order.","lastModifiedDate":"2021-03-24"},{"lineNumber":230,"author":{"gitId":"LeeHanYongAndy"},"content":"   * StringUtils.endsWithAny()   - detection of end option with non-fixed order.","lastModifiedDate":"2021-03-24"},{"lineNumber":231,"author":{"gitId":"LeeHanYongAndy"},"content":"   * StringUtils.indexOfAny()    - detection of during processing option with non-fixed order.","lastModifiedDate":"2021-03-24"},{"lineNumber":232,"author":{"gitId":"LeeHanYongAndy"},"content":"4. As multiple whitespaces is allowed, options and arguments should be fully trimmed (leading and trailing).","lastModifiedDate":"2021-03-24"},{"lineNumber":233,"author":{"gitId":"LeeHanYongAndy"},"content":"5. As the ArrayList\u003cString\u003e is passed back to the main program and is being used by CommandHandler,","lastModifiedDate":"2021-03-24"},{"lineNumber":234,"author":{"gitId":"LeeHanYongAndy"},"content":"   the argument field should compulsory and appended with empty string if empty to facilitate validations and option-argument","lastModifiedDate":"2021-03-24"},{"lineNumber":235,"author":{"gitId":"LeeHanYongAndy"},"content":"   pairwise logic.","lastModifiedDate":"2021-03-24"},{"lineNumber":236,"author":{"gitId":"LeeHanYongAndy"},"content":"6. getParseInput should always return a new ArrayList\u003cString\u003e per new input.","lastModifiedDate":"2021-03-24"},{"lineNumber":237,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":238,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":239,"author":{"gitId":"tzexern"},"content":"### 3.4 CommandHandler Component","lastModifiedDate":"2021-03-23"},{"lineNumber":240,"author":{"gitId":"marklowsk"},"content":"![CommandHandlerClassDiagram](img/CommandHandlerClassDiagram.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":241,"author":{"gitId":"marklowsk"},"content":"_Figure X. CommandHandler Class Diagram_","lastModifiedDate":"2021-03-25"},{"lineNumber":242,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":243,"author":{"gitId":"marklowsk"},"content":"#### Description","lastModifiedDate":"2021-03-25"},{"lineNumber":244,"author":{"gitId":"marklowsk"},"content":"The `CommandHandler` component is the object class itself.","lastModifiedDate":"2021-03-25"},{"lineNumber":245,"author":{"gitId":"marklowsk"},"content":"The role of the `CommandHandler` is to convert parsed arguments from the `ParserHandler`","lastModifiedDate":"2021-03-25"},{"lineNumber":246,"author":{"gitId":"marklowsk"},"content":"into subsequent `Command` objects which will be executed thereafter.","lastModifiedDate":"2021-03-25"},{"lineNumber":247,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":248,"author":{"gitId":"marklowsk"},"content":"#### Design","lastModifiedDate":"2021-03-25"},{"lineNumber":249,"author":{"gitId":"marklowsk"},"content":"It functions as a mapping from `parsedArguments[0]` to a set of predefined command words ","lastModifiedDate":"2021-03-25"},{"lineNumber":250,"author":{"gitId":"marklowsk"},"content":"(the actual commands of the Application).","lastModifiedDate":"2021-03-25"},{"lineNumber":251,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":252,"author":{"gitId":"tzexern"},"content":"### 3.5 RecordList Component","lastModifiedDate":"2021-03-23"},{"lineNumber":253,"author":{"gitId":"gerardtwk"},"content":"The `recordlist` class maintains an internal arraylist of record objects used throughout Finux\u0027s execution.","lastModifiedDate":"2021-03-25"},{"lineNumber":254,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":255,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":256,"author":{"gitId":"tzexern"},"content":"### 3.6 Storage Component","lastModifiedDate":"2021-03-23"},{"lineNumber":257,"author":{"gitId":"tzexern"},"content":"...","lastModifiedDate":"2021-03-23"},{"lineNumber":258,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":259,"author":{"gitId":"tzexern"},"content":"## 4. Implementation","lastModifiedDate":"2021-03-23"},{"lineNumber":260,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":261,"author":{"gitId":"tzexern"},"content":"---","lastModifiedDate":"2021-03-23"},{"lineNumber":262,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":263,"author":{"gitId":"tzexern"},"content":"This section introduces the specific implementation details and design thought processes","lastModifiedDate":"2021-03-25"},{"lineNumber":264,"author":{"gitId":"tzexern"},"content":"of some features in **Finux**.","lastModifiedDate":"2021-03-25"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":266,"author":{"gitId":"tzexern"},"content":"### 4.1 Add Feature","lastModifiedDate":"2021-03-23"},{"lineNumber":267,"author":{"gitId":"tzexern"},"content":"...","lastModifiedDate":"2021-03-23"},{"lineNumber":268,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":269,"author":{"gitId":"tzexern"},"content":"### 4.2 List Feature","lastModifiedDate":"2021-03-23"},{"lineNumber":270,"author":{"gitId":"gerardtwk"},"content":"The `list` feature allows Finux users to list records that they have entered into the system.","lastModifiedDate":"2021-03-25"},{"lineNumber":271,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":272,"author":{"gitId":"gerardtwk"},"content":"To list loans:","lastModifiedDate":"2021-03-25"},{"lineNumber":273,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":274,"author":{"gitId":"gerardtwk"},"content":"`list -l`","lastModifiedDate":"2021-03-25"},{"lineNumber":275,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":276,"author":{"gitId":"gerardtwk"},"content":"To list expenses:","lastModifiedDate":"2021-03-25"},{"lineNumber":277,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":278,"author":{"gitId":"gerardtwk"},"content":"`list -e`","lastModifiedDate":"2021-03-25"},{"lineNumber":279,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":280,"author":{"gitId":"gerardtwk"},"content":"To list savings:","lastModifiedDate":"2021-03-25"},{"lineNumber":281,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":282,"author":{"gitId":"gerardtwk"},"content":"`list -s`","lastModifiedDate":"2021-03-25"},{"lineNumber":283,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":284,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":285,"author":{"gitId":"tzexern"},"content":"### 4.3 View Feature","lastModifiedDate":"2021-03-23"},{"lineNumber":286,"author":{"gitId":"LeeHanYongAndy"},"content":"The view feature aims to allow the users to view the total expenditures, loans, and savings for the respective ","lastModifiedDate":"2021-03-26"},{"lineNumber":287,"author":{"gitId":"LeeHanYongAndy"},"content":"category of *expense*, *loan*, and *saving* of the added records.  ","lastModifiedDate":"2021-03-26"},{"lineNumber":288,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":289,"author":{"gitId":"LeeHanYongAndy"},"content":"#### 4.3.1 Current Implementation","lastModifiedDate":"2021-03-26"},{"lineNumber":290,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":291,"author":{"gitId":"LeeHanYongAndy"},"content":"The view feature is facilitated by `ViewCommand`. By typing in `view` and following up with the record type, ","lastModifiedDate":"2021-03-26"},{"lineNumber":292,"author":{"gitId":"LeeHanYongAndy"},"content":"`{-e, -l, -s}`, the `ParserHandler` will parse the input for `CommandHandler` to create the `ViewCommand` object.","lastModifiedDate":"2021-03-26"},{"lineNumber":293,"author":{"gitId":"LeeHanYongAndy"},"content":"By calling the `execute()` method, the total amount will be printed onto the console with the help of `Ui`.","lastModifiedDate":"2021-03-26"},{"lineNumber":294,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":295,"author":{"gitId":"LeeHanYongAndy"},"content":"![ViewFeatureSequenceDiagram](img/ViewFeatureSequenceDiagram.png)","lastModifiedDate":"2021-03-26"},{"lineNumber":296,"author":{"gitId":"LeeHanYongAndy"},"content":"*Figure x: Sequence Diagram for `view -e`*","lastModifiedDate":"2021-03-26"},{"lineNumber":297,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":298,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e 📝 The sequence diagram starts from Step 2 onward.","lastModifiedDate":"2021-03-26"},{"lineNumber":299,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":300,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e 📝 The `CommandLooper` only serves as a user input reader here and takes certain actions when certain allowed commands","lastModifiedDate":"2021-03-26"},{"lineNumber":301,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e are given.","lastModifiedDate":"2021-03-26"},{"lineNumber":302,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":303,"author":{"gitId":"LeeHanYongAndy"},"content":"Given below is an example usage scenario of how `ViewCommand` behaves at each step.","lastModifiedDate":"2021-03-26"},{"lineNumber":304,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":305,"author":{"gitId":"LeeHanYongAndy"},"content":"***Step 1:***\\","lastModifiedDate":"2021-03-26"},{"lineNumber":306,"author":{"gitId":"LeeHanYongAndy"},"content":"User executes the command `view -e`. The application invokes `ParserHandler#getParseInput()` to provide the parsed","lastModifiedDate":"2021-03-26"},{"lineNumber":307,"author":{"gitId":"LeeHanYongAndy"},"content":"input to `CommandHandler#createCommand()`. This checks for the command type, `view`, and proceeds to validate the","lastModifiedDate":"2021-03-26"},{"lineNumber":308,"author":{"gitId":"LeeHanYongAndy"},"content":"parsed input in the `new ViewCommand()` constructor before returning the constructed `ViewCommand` object to `Finux`.","lastModifiedDate":"2021-03-26"},{"lineNumber":309,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":310,"author":{"gitId":"LeeHanYongAndy"},"content":"***Step 2:***\\","lastModifiedDate":"2021-03-26"},{"lineNumber":311,"author":{"gitId":"LeeHanYongAndy"},"content":"The application next invokes the `ViewCommand#execute()` to execute the user\u0027s instruction.","lastModifiedDate":"2021-03-26"},{"lineNumber":312,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":313,"author":{"gitId":"LeeHanYongAndy"},"content":"***Step 3:***\\","lastModifiedDate":"2021-03-26"},{"lineNumber":314,"author":{"gitId":"LeeHanYongAndy"},"content":"Inside the `ViewCommand#execute()`, the method conducts a check on the object record type before executing the ","lastModifiedDate":"2021-03-26"},{"lineNumber":315,"author":{"gitId":"LeeHanYongAndy"},"content":"respective method.","lastModifiedDate":"2021-03-26"},{"lineNumber":316,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e ✔️ `Expense` type invokes `Ui#printTotalAmountExpense()`","lastModifiedDate":"2021-03-26"},{"lineNumber":317,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":318,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e ✔️ `Loan` type invokes `Ui#printTotalAmountLoan()`","lastModifiedDate":"2021-03-26"},{"lineNumber":319,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":320,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e ✔️ `Saving` type invokes `Ui#printTotalAmountSaving()`","lastModifiedDate":"2021-03-26"},{"lineNumber":321,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":322,"author":{"gitId":"LeeHanYongAndy"},"content":"***Step 4:***\\","lastModifiedDate":"2021-03-26"},{"lineNumber":323,"author":{"gitId":"LeeHanYongAndy"},"content":"The `Ui` will handle the respective invocation call. The basis for the three methods utilizes the `for` loop to","lastModifiedDate":"2021-03-26"},{"lineNumber":324,"author":{"gitId":"LeeHanYongAndy"},"content":"iterate through the `recordList` and will only add to the `totalAmount` if it is an instance of the respective","lastModifiedDate":"2021-03-26"},{"lineNumber":325,"author":{"gitId":"LeeHanYongAndy"},"content":"record type.","lastModifiedDate":"2021-03-26"},{"lineNumber":326,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e 📝 The `Ui#printTotalAmountLoan()` will imposed additional check on whether the record is returned.","lastModifiedDate":"2021-03-26"},{"lineNumber":327,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e Only records that are not returned will be added to the `totalAmount`","lastModifiedDate":"2021-03-26"},{"lineNumber":328,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":329,"author":{"gitId":"LeeHanYongAndy"},"content":"***Step 5:***\\","lastModifiedDate":"2021-03-26"},{"lineNumber":330,"author":{"gitId":"LeeHanYongAndy"},"content":"Finally, the `totalAmount` will be rounded off to two decimal place before printing onto the console.","lastModifiedDate":"2021-03-26"},{"lineNumber":331,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":332,"author":{"gitId":"LeeHanYongAndy"},"content":"#### 4.3.2 Design Consideration","lastModifiedDate":"2021-03-26"},{"lineNumber":333,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":334,"author":{"gitId":"LeeHanYongAndy"},"content":"This section shows the design considerations taken when implementing the view feature.","lastModifiedDate":"2021-03-26"},{"lineNumber":335,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":336,"author":{"gitId":"LeeHanYongAndy"},"content":"Aspect: **How many figures should the amount be allowed up to**","lastModifiedDate":"2021-03-26"},{"lineNumber":337,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":338,"author":{"gitId":"LeeHanYongAndy"},"content":"Since it is entirely possible that the amount provided by user to be very large or very small, the two choices to","lastModifiedDate":"2021-03-26"},{"lineNumber":339,"author":{"gitId":"LeeHanYongAndy"},"content":"consider would be:","lastModifiedDate":"2021-03-26"},{"lineNumber":340,"author":{"gitId":"LeeHanYongAndy"},"content":"* Integer (Classic approach)","lastModifiedDate":"2021-03-26"},{"lineNumber":341,"author":{"gitId":"LeeHanYongAndy"},"content":"* BigDecimal (Non-classic approach)","lastModifiedDate":"2021-03-26"},{"lineNumber":342,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":343,"author":{"gitId":"LeeHanYongAndy"},"content":"|Approach | Pros | Cons| ","lastModifiedDate":"2021-03-26"},{"lineNumber":344,"author":{"gitId":"LeeHanYongAndy"},"content":"|---------|------|-----|","lastModifiedDate":"2021-03-26"},{"lineNumber":345,"author":{"gitId":"LeeHanYongAndy"},"content":"|Integer|No additional class required|Limited to a fix amount of digit available to enter|","lastModifiedDate":"2021-03-26"},{"lineNumber":346,"author":{"gitId":"LeeHanYongAndy"},"content":"|BigDecimal|Allow more digits than classic approach|Need to create a BigDecimal object|","lastModifiedDate":"2021-03-26"},{"lineNumber":347,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":348,"author":{"gitId":"LeeHanYongAndy"},"content":"Having considered two of the approaches, we have decided to adopt the second approach. ","lastModifiedDate":"2021-03-26"},{"lineNumber":349,"author":{"gitId":"LeeHanYongAndy"},"content":"The deterministic factor was the possibility of very large number such as 1000 billions. Thus, covering more than","lastModifiedDate":"2021-03-26"},{"lineNumber":350,"author":{"gitId":"LeeHanYongAndy"},"content":"what the integer data type provided can cater to higher flexibility of the application.","lastModifiedDate":"2021-03-26"},{"lineNumber":351,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":352,"author":{"gitId":"LeeHanYongAndy"},"content":"Aspect: **When to round off the amount to two decimal place**","lastModifiedDate":"2021-03-26"},{"lineNumber":353,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":354,"author":{"gitId":"LeeHanYongAndy"},"content":"As the user can enter decimal into the amount field, the `ViewCommand` has two options of when to round off the value:","lastModifiedDate":"2021-03-26"},{"lineNumber":355,"author":{"gitId":"LeeHanYongAndy"},"content":"* When assigning value to the amount variable","lastModifiedDate":"2021-03-26"},{"lineNumber":356,"author":{"gitId":"LeeHanYongAndy"},"content":"* When printing the final computed value","lastModifiedDate":"2021-03-26"},{"lineNumber":357,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":358,"author":{"gitId":"LeeHanYongAndy"},"content":"|Approach|Pros|Cons|","lastModifiedDate":"2021-03-26"},{"lineNumber":359,"author":{"gitId":"LeeHanYongAndy"},"content":"|--------|----|----|","lastModifiedDate":"2021-03-26"},{"lineNumber":360,"author":{"gitId":"LeeHanYongAndy"},"content":"|Assigning value to the amount variable|Round off early to avoid complication|Additional time per assignment to round off|","lastModifiedDate":"2021-03-26"},{"lineNumber":361,"author":{"gitId":"LeeHanYongAndy"},"content":"|Printing the final computed value|Only round off once|Rounding off might be couple to other method which needs the amount field|","lastModifiedDate":"2021-03-26"},{"lineNumber":362,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":363,"author":{"gitId":"LeeHanYongAndy"},"content":"With the two approaches considered, we have decided to adopt the second approach as it is more efficient to round off","lastModifiedDate":"2021-03-26"},{"lineNumber":364,"author":{"gitId":"LeeHanYongAndy"},"content":"at the end and to preserve the accuracy for two decimal place. Since no other method is accessing the amount variable,","lastModifiedDate":"2021-03-26"},{"lineNumber":365,"author":{"gitId":"LeeHanYongAndy"},"content":"is it possible avoid rounding off during each value assignment until new or existing features requires it.","lastModifiedDate":"2021-03-26"},{"lineNumber":366,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":367,"author":{"gitId":"tzexern"},"content":"### 4.4 Return Feature","lastModifiedDate":"2021-03-23"},{"lineNumber":368,"author":{"gitId":"gerardtwk"},"content":"The `return` feature allows Finux users to mark a loan as returned.","lastModifiedDate":"2021-03-25"},{"lineNumber":369,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":370,"author":{"gitId":"gerardtwk"},"content":"`return -i \u003cindex of loan to return\u003e -d \u003creturn date\u003e`","lastModifiedDate":"2021-03-25"},{"lineNumber":371,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":372,"author":{"gitId":"gerardtwk"},"content":"Upon marking the loan as returned, *creditscore* for the borrower who loaned the book will be updated and saved into `finux.txt`","lastModifiedDate":"2021-03-25"},{"lineNumber":373,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":374,"author":{"gitId":"gerardtwk"},"content":"Example:","lastModifiedDate":"2021-03-25"},{"lineNumber":375,"author":{"gitId":"gerardtwk"},"content":"`return -i 2 -d 2021-03-16`","lastModifiedDate":"2021-03-25"},{"lineNumber":376,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":377,"author":{"gitId":"gerardtwk"},"content":"Output:","lastModifiedDate":"2021-03-25"},{"lineNumber":378,"author":{"gitId":"gerardtwk"},"content":"Loan marked as returned: [L][2021-03-16] Loan to Tom [v]","lastModifiedDate":"2021-03-25"},{"lineNumber":379,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":380,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":381,"author":{"gitId":"tzexern"},"content":"### 4.5 Remove Feature","lastModifiedDate":"2021-03-23"},{"lineNumber":382,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":383,"author":{"gitId":"tzexern"},"content":"The remove feature aims to allow users to remove records after querying the record\u0027s","lastModifiedDate":"2021-03-25"},{"lineNumber":384,"author":{"gitId":"tzexern"},"content":"index number with the `list` command. The users will be able to then use the `remove`","lastModifiedDate":"2021-03-25"},{"lineNumber":385,"author":{"gitId":"tzexern"},"content":"command to delete certain records that they deem obsolete or is incorrect. Hence, this feature","lastModifiedDate":"2021-03-25"},{"lineNumber":386,"author":{"gitId":"tzexern"},"content":"allows them to amend their mistakes or edit their list with constraints.","lastModifiedDate":"2021-03-25"},{"lineNumber":387,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":388,"author":{"gitId":"tzexern"},"content":"#### 4.5.1 Current Implementation","lastModifiedDate":"2021-03-25"},{"lineNumber":389,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":390,"author":{"gitId":"tzexern"},"content":"The remove feature is facilitated by `RemoveCommand`. By running the command with required options and relevant ","lastModifiedDate":"2021-03-25"},{"lineNumber":391,"author":{"gitId":"tzexern"},"content":"parameters, our `Parser` will construct the `RemoveCommand` object which will validate the input and provide","lastModifiedDate":"2021-03-25"},{"lineNumber":392,"author":{"gitId":"tzexern"},"content":"relevant parameters that will be used in the execute function.","lastModifiedDate":"2021-03-25"},{"lineNumber":393,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":394,"author":{"gitId":"tzexern"},"content":"Given below is an example usage scenario of how `RemoveCommand` behaves at each step.","lastModifiedDate":"2021-03-25"},{"lineNumber":395,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":396,"author":{"gitId":"tzexern"},"content":"***Step 1:***\\","lastModifiedDate":"2021-03-25"},{"lineNumber":397,"author":{"gitId":"tzexern"},"content":"User executes the command `remove -i 1`. The application invokes `CommandHandler#createCommand()`, and since the ","lastModifiedDate":"2021-03-25"},{"lineNumber":398,"author":{"gitId":"tzexern"},"content":"command type is `remove`, the `createCommand` constructs a `RemoveCommand` object. The validation of the constructed","lastModifiedDate":"2021-03-25"},{"lineNumber":399,"author":{"gitId":"tzexern"},"content":"`RemoveCommand` is done in the constructor. The created command is then returned to `Finux`.","lastModifiedDate":"2021-03-25"},{"lineNumber":400,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":401,"author":{"gitId":"tzexern"},"content":"***Step 2:***\\","lastModifiedDate":"2021-03-25"},{"lineNumber":402,"author":{"gitId":"tzexern"},"content":"The `CommandHandler` terminates after parsing user input and creating the corresponding Command object. The application","lastModifiedDate":"2021-03-25"},{"lineNumber":403,"author":{"gitId":"tzexern"},"content":"invokes `RemoveCommand#execute()` to execute the user\u0027s instruction.","lastModifiedDate":"2021-03-25"},{"lineNumber":404,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":405,"author":{"gitId":"tzexern"},"content":"***Step 3:***\\","lastModifiedDate":"2021-03-25"},{"lineNumber":406,"author":{"gitId":"tzexern"},"content":"The `RemoveCommand` first invokes `RecordList#getRecordAt(recordNumberInt)` to get the record located at index","lastModifiedDate":"2021-03-25"},{"lineNumber":407,"author":{"gitId":"tzexern"},"content":"`recordNumberInt`. The record retrieved will be used in the next step.","lastModifiedDate":"2021-03-25"},{"lineNumber":408,"author":{"gitId":"tzexern"},"content":"\u003e 📝 `recordNumberInt` is the index number that you will see on the list minus by one.","lastModifiedDate":"2021-03-25"},{"lineNumber":409,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":410,"author":{"gitId":"tzexern"},"content":"***Step 4:***\\","lastModifiedDate":"2021-03-25"},{"lineNumber":411,"author":{"gitId":"tzexern"},"content":"The application invokes `Ui#printMessage()` and prints the record that will be removed with their respective ","lastModifiedDate":"2021-03-25"},{"lineNumber":412,"author":{"gitId":"tzexern"},"content":"`toString()` method. ","lastModifiedDate":"2021-03-25"},{"lineNumber":413,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":414,"author":{"gitId":"tzexern"},"content":"***Step 5:***\\","lastModifiedDate":"2021-03-25"},{"lineNumber":415,"author":{"gitId":"tzexern"},"content":"The application invokes `RecordList#deleteRecordAt(recordNumberInt)` which removes the record located at the index ","lastModifiedDate":"2021-03-25"},{"lineNumber":416,"author":{"gitId":"tzexern"},"content":"`recordNumberInt`.","lastModifiedDate":"2021-03-25"},{"lineNumber":417,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":418,"author":{"gitId":"tzexern"},"content":"***Step 6:***\\","lastModifiedDate":"2021-03-25"},{"lineNumber":419,"author":{"gitId":"tzexern"},"content":"The application invokes `Storage#saveData()` to save the modification on the record list onto the save file after the","lastModifiedDate":"2021-03-25"},{"lineNumber":420,"author":{"gitId":"tzexern"},"content":"removal of the record is successful. This will then enable future file loading to be accurate and there are no mismatch","lastModifiedDate":"2021-03-25"},{"lineNumber":421,"author":{"gitId":"tzexern"},"content":"of information or records.","lastModifiedDate":"2021-03-25"},{"lineNumber":422,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":423,"author":{"gitId":"tzexern"},"content":"The sequence diagram presented below depicts the interaction between the components for running the command.","lastModifiedDate":"2021-03-25"},{"lineNumber":424,"author":{"gitId":"tzexern"},"content":"`remove -i 1`.","lastModifiedDate":"2021-03-25"},{"lineNumber":425,"author":{"gitId":"tzexern"},"content":"\u003e 📝 The sequence diagram starts from Step 2 onward.","lastModifiedDate":"2021-03-25"},{"lineNumber":426,"author":{"gitId":"tzexern"},"content":"\u003e ","lastModifiedDate":"2021-03-25"},{"lineNumber":427,"author":{"gitId":"tzexern"},"content":"\u003e 📝 The `CommandLooper` only serves as a user input reader here and takes certain actions when certain allowed commands","lastModifiedDate":"2021-03-25"},{"lineNumber":428,"author":{"gitId":"tzexern"},"content":"\u003e are given.","lastModifiedDate":"2021-03-25"},{"lineNumber":429,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":430,"author":{"gitId":"tzexern"},"content":"![RemoveFeatureSequenceDiagram](img/RemoveFeatureSequenceDiagram.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":431,"author":{"gitId":"tzexern"},"content":"*Figure x: Sequence Diagram for `remove -i 1`*","lastModifiedDate":"2021-03-25"},{"lineNumber":432,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":433,"author":{"gitId":"tzexern"},"content":"#### 4.5.2 Design Consideration","lastModifiedDate":"2021-03-25"},{"lineNumber":434,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":435,"author":{"gitId":"tzexern"},"content":"This section shows the design considerations taken when implementing the remove feature.","lastModifiedDate":"2021-03-25"},{"lineNumber":436,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":437,"author":{"gitId":"tzexern"},"content":"Aspect: **When should the application validate the user input index**","lastModifiedDate":"2021-03-25"},{"lineNumber":438,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":439,"author":{"gitId":"tzexern"},"content":"Since it is entirely possible that the index provided by the user can be invalid where the indices may be one of the","lastModifiedDate":"2021-03-25"},{"lineNumber":440,"author":{"gitId":"tzexern"},"content":"following:","lastModifiedDate":"2021-03-25"},{"lineNumber":441,"author":{"gitId":"tzexern"},"content":"* negative numbers","lastModifiedDate":"2021-03-25"},{"lineNumber":442,"author":{"gitId":"tzexern"},"content":"* numbers that refer to non-existent records","lastModifiedDate":"2021-03-25"},{"lineNumber":443,"author":{"gitId":"tzexern"},"content":"* non-numerics (e.g. alphabets, symbols, etc.)\\","lastModifiedDate":"2021-03-25"},{"lineNumber":444,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":445,"author":{"gitId":"tzexern"},"content":"There is a need to validate the index given by the user to ensure that the application does not terminate unexpectedly","lastModifiedDate":"2021-03-25"},{"lineNumber":446,"author":{"gitId":"tzexern"},"content":"and that suitable error messages are printed to notify the user of their intentional or unintentional parameter inputs.","lastModifiedDate":"2021-03-25"},{"lineNumber":447,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":448,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":449,"author":{"gitId":"tzexern"},"content":"|Approach | Pros | Cons| ","lastModifiedDate":"2021-03-25"},{"lineNumber":450,"author":{"gitId":"tzexern"},"content":"|---------|------|-----|","lastModifiedDate":"2021-03-25"},{"lineNumber":451,"author":{"gitId":"tzexern"},"content":"|During command execution.|No additional class required.|A new argument for the `execute()` method is needed. It also increases coupling and decreases cohesion.|","lastModifiedDate":"2021-03-25"},{"lineNumber":452,"author":{"gitId":"tzexern"},"content":"|During command creation.|Decreases coupling and increases cohesion as there is a clear cut in between responsibilities. The arguments of `execute()` can remain consistent with other command types.|Duplication of validation may occur in other commands.|","lastModifiedDate":"2021-03-25"},{"lineNumber":453,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":454,"author":{"gitId":"tzexern"},"content":"Having considered two of the approaches, we have decided to adopt the second approach which is to validate the index","lastModifiedDate":"2021-03-25"},{"lineNumber":455,"author":{"gitId":"tzexern"},"content":"during command creation. The lower coupling and higher cohesion was the deterministic factor here and also the","lastModifiedDate":"2021-03-25"},{"lineNumber":456,"author":{"gitId":"tzexern"},"content":"consistency of the arguments in `execute()` can also be maintained.","lastModifiedDate":"2021-03-25"},{"lineNumber":457,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":458,"author":{"gitId":"tzexern"},"content":"Aspect: **The way the index is specified(option)**","lastModifiedDate":"2021-03-25"},{"lineNumber":459,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":460,"author":{"gitId":"tzexern"},"content":"As the user has to specify the index of which record to remove, the index has to be provided but is `-i` required?","lastModifiedDate":"2021-03-25"},{"lineNumber":461,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":462,"author":{"gitId":"tzexern"},"content":"|Approach|Pros|Cons|","lastModifiedDate":"2021-03-25"},{"lineNumber":463,"author":{"gitId":"tzexern"},"content":"|--------|----|----|","lastModifiedDate":"2021-03-25"},{"lineNumber":464,"author":{"gitId":"tzexern"},"content":"|Have to use `-i`|The options will be consistent with the `return` command as it requires the user to input an index as well|Extra time is used to enter 2 more characters just to satisfy the application requirement where the `remove` command actually only need one parameter.|","lastModifiedDate":"2021-03-25"},{"lineNumber":465,"author":{"gitId":"tzexern"},"content":"|Do not have to use `-i`|Saves the time needed to input the 2 characters.|It will be inconsistent to require users to include `-i` for the `return` command but not for the `remove` command.|","lastModifiedDate":"2021-03-25"},{"lineNumber":466,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":467,"author":{"gitId":"tzexern"},"content":"With the two approaches considered, we have decided to adopt the first approach as it gives consistency for the","lastModifiedDate":"2021-03-25"},{"lineNumber":468,"author":{"gitId":"tzexern"},"content":"user experience, and it will not cause any confusion. The time wasted is negligible, and the consistency provides","lastModifiedDate":"2021-03-25"},{"lineNumber":469,"author":{"gitId":"tzexern"},"content":"long-term benefit.","lastModifiedDate":"2021-03-25"},{"lineNumber":470,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":471,"author":{"gitId":"tzexern"},"content":"### 4.6 Storage Feature","lastModifiedDate":"2021-03-23"},{"lineNumber":472,"author":{"gitId":"tzexern"},"content":"...","lastModifiedDate":"2021-03-23"},{"lineNumber":473,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":474,"author":{"gitId":"tzexern"},"content":"### 4.7 Credit Score Feature","lastModifiedDate":"2021-03-23"},{"lineNumber":475,"author":{"gitId":"gerardtwk"},"content":"The `creditscore` feature aims to provide users with a computation of borrowers\u0027 credibility via a point scoring system.","lastModifiedDate":"2021-03-25"},{"lineNumber":476,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":477,"author":{"gitId":"gerardtwk"},"content":"`creditscore \u003cborrower_name\u003e`","lastModifiedDate":"2021-03-25"},{"lineNumber":478,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":479,"author":{"gitId":"gerardtwk"},"content":"With this score, Finux users can view and assess the credibility of the borrowers.","lastModifiedDate":"2021-03-25"},{"lineNumber":480,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":481,"author":{"gitId":"gerardtwk"},"content":"Example:","lastModifiedDate":"2021-03-25"},{"lineNumber":482,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":483,"author":{"gitId":"gerardtwk"},"content":"`creditscore Tom`","lastModifiedDate":"2021-03-25"},{"lineNumber":484,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":485,"author":{"gitId":"gerardtwk"},"content":"Output:","lastModifiedDate":"2021-03-25"},{"lineNumber":486,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":487,"author":{"gitId":"gerardtwk"},"content":"Credit score for Tom is 90","lastModifiedDate":"2021-03-25"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":489,"author":{"gitId":"tzexern"},"content":"## 5. Documentation, Logging, Testing, and DevOps","lastModifiedDate":"2021-03-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":491,"author":{"gitId":"tzexern"},"content":"---","lastModifiedDate":"2021-03-23"},{"lineNumber":492,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":493,"author":{"gitId":"tzexern"},"content":"...","lastModifiedDate":"2021-03-23"},{"lineNumber":494,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":495,"author":{"gitId":"tzexern"},"content":"## Appendix A: Product Scope","lastModifiedDate":"2021-03-23"},{"lineNumber":496,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":497,"author":{"gitId":"tzexern"},"content":"### A.1 Target User Profile","lastModifiedDate":"2021-03-23"},{"lineNumber":498,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":499,"author":{"gitId":"LeeHanYongAndy"},"content":"* Computing students","lastModifiedDate":"2021-03-24"},{"lineNumber":500,"author":{"gitId":"LeeHanYongAndy"},"content":"* Background in CLI interface","lastModifiedDate":"2021-03-24"},{"lineNumber":501,"author":{"gitId":"LeeHanYongAndy"},"content":"* Prefer typing in CLI over traditional GUI clicking","lastModifiedDate":"2021-03-24"},{"lineNumber":502,"author":{"gitId":"LeeHanYongAndy"},"content":"* Need to track expenditure and saving","lastModifiedDate":"2021-03-24"},{"lineNumber":503,"author":{"gitId":"LeeHanYongAndy"},"content":"* Borrowed some money to their friends","lastModifiedDate":"2021-03-24"},{"lineNumber":504,"author":{"gitId":"LeeHanYongAndy"},"content":"* Need to track borrowings and loans ","lastModifiedDate":"2021-03-24"},{"lineNumber":505,"author":{"gitId":"LeeHanYongAndy"},"content":"* Good with typing","lastModifiedDate":"2021-03-24"},{"lineNumber":506,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":507,"author":{"gitId":"tzexern"},"content":"### A.2 Value proposition","lastModifiedDate":"2021-03-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":509,"author":{"gitId":"LeeHanYongAndy"},"content":"#### A.2.1 Problem Identification","lastModifiedDate":"2021-03-26"},{"lineNumber":510,"author":{"gitId":"LeeHanYongAndy"},"content":"Problems faced by students that Finux aim to assist with.","lastModifiedDate":"2021-03-24"},{"lineNumber":511,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e * [Problem] Wastage of time due to connection/latency issues went accessing finance tracking website.","lastModifiedDate":"2021-03-24"},{"lineNumber":512,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e * [Solution] Use a local based application.","lastModifiedDate":"2021-03-24"},{"lineNumber":513,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":514,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e * [Problem] Hassle to use different applications to keep track of various stuff.","lastModifiedDate":"2021-03-24"},{"lineNumber":515,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e * [Solution] Provide an integrated platform to record any expenses, loans, or saving.","lastModifiedDate":"2021-03-24"},{"lineNumber":516,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":517,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e * [Problem] Disorganization issues arising from keep multiple tracking applications.","lastModifiedDate":"2021-03-24"},{"lineNumber":518,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e * [Solution] Provide the option to view each category of records within an integrated platform.","lastModifiedDate":"2021-03-24"},{"lineNumber":519,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":520,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e * [Problem] Spending time to gauge whether to borrow money to a friend.","lastModifiedDate":"2021-03-24"},{"lineNumber":521,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e * [Solution] Provide a soft gauge through credit score indicators.","lastModifiedDate":"2021-03-24"},{"lineNumber":522,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":523,"author":{"gitId":"LeeHanYongAndy"},"content":"#### A.2.2 Value Adding","lastModifiedDate":"2021-03-26"},{"lineNumber":524,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":525,"author":{"gitId":"LeeHanYongAndy"},"content":"Finux aims to integrate the process of managing and keeping track of finance movements without the need to access online","lastModifiedDate":"2021-03-24"},{"lineNumber":526,"author":{"gitId":"LeeHanYongAndy"},"content":"websites and using different applications to keep track various movement such as loans and expenditure. Finux","lastModifiedDate":"2021-03-24"},{"lineNumber":527,"author":{"gitId":"LeeHanYongAndy"},"content":"provide an all-in-one platform for students who are usually in front of their computers. The student\u0027s expertises in ","lastModifiedDate":"2021-03-24"},{"lineNumber":528,"author":{"gitId":"LeeHanYongAndy"},"content":"coding and typing can speed up the process of their finance management through familiarity with the CLI interface.","lastModifiedDate":"2021-03-24"},{"lineNumber":529,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":530,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e ❗ **CAUTION:** Finux does not provide any finance advise.","lastModifiedDate":"2021-03-24"},{"lineNumber":531,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":533,"author":{"gitId":"tzexern"},"content":"## Appendix B: User Stories","lastModifiedDate":"2021-03-23"},{"lineNumber":534,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":535,"author":{"gitId":"tzexern"},"content":"---","lastModifiedDate":"2021-03-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":537,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":538,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":539,"author":{"gitId":"tzexern"},"content":"|v1.0|user|be able to add a record (expense) with dates|record each expense into the app.|","lastModifiedDate":"2021-03-23"},{"lineNumber":540,"author":{"gitId":"tzexern"},"content":"|v1.0|clumsy user|be able to delete wrong inputs|easily rectify errors in the record list.|","lastModifiedDate":"2021-03-23"},{"lineNumber":541,"author":{"gitId":"tzexern"},"content":"|v1.0|debt collector (Student)|list down a list of people who owes me money with a deadline|make sure that they return their money.|","lastModifiedDate":"2021-03-23"},{"lineNumber":542,"author":{"gitId":"tzexern"},"content":"|v1.0|student|list each and every incurred expense|better manage my daily/weekly expenses.|","lastModifiedDate":"2021-03-23"},{"lineNumber":543,"author":{"gitId":"tzexern"},"content":"|v1.0|SOC student|have a CLI style money management system|accomplish tasks faster typing on a CLI compared to clicking on a GUI.|","lastModifiedDate":"2021-03-23"},{"lineNumber":544,"author":{"gitId":"tzexern"},"content":"|v1.0|user|be able to view the total expenditure, saving and loan credit|know the total amount of each category for planning and viewing.|","lastModifiedDate":"2021-03-23"},{"lineNumber":545,"author":{"gitId":"tzexern"},"content":"|v1.0|debt collector (Student)|mark a loan as returned|know which loans are returned to me.|","lastModifiedDate":"2021-03-23"},{"lineNumber":546,"author":{"gitId":"tzexern"},"content":"|v1.0|new user|know the list of commands|use the app correctly.|","lastModifiedDate":"2021-03-23"},{"lineNumber":547,"author":{"gitId":"tzexern"},"content":"|v2.0|new user|know what function I can use|tell what are the valid inputs for the application.|","lastModifiedDate":"2021-03-23"},{"lineNumber":548,"author":{"gitId":"tzexern"},"content":"|v2.0|lender|know the loanee\u0027s punctuality on returning the loan|gauge who to continue lending money the next time.|","lastModifiedDate":"2021-03-23"},{"lineNumber":549,"author":{"gitId":"tzexern"},"content":"|v2.0|student|know how trustworthy a person is according to a score indicator|decide how risk-free it is to lend money to the said person.|","lastModifiedDate":"2021-03-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":551,"author":{"gitId":"tzexern"},"content":"## Appendix C: Non-Functional Requirements","lastModifiedDate":"2021-03-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":553,"author":{"gitId":"tzexern"},"content":"---","lastModifiedDate":"2021-03-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":555,"author":{"gitId":"tzexern"},"content":"1. The application should be responsive.","lastModifiedDate":"2021-03-23"},{"lineNumber":556,"author":{"gitId":"tzexern"},"content":"1. The application should work on most operating systems (OS) such as Windows and Linux with `Java 11` installed.","lastModifiedDate":"2021-03-23"},{"lineNumber":557,"author":{"gitId":"tzexern"},"content":"1. Users who can type fast should be able to complete equivalent tasks faster as compared to using a mouse.","lastModifiedDate":"2021-03-23"},{"lineNumber":558,"author":{"gitId":"tzexern"},"content":"1. Users should be able to use the application with ease with the help of the User Guide (UG) and the Developer\u0027s Guide (DG).","lastModifiedDate":"2021-03-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":560,"author":{"gitId":"tzexern"},"content":"## Appendix D: Instructions for manual testing","lastModifiedDate":"2021-03-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":562,"author":{"gitId":"tzexern"},"content":"---","lastModifiedDate":"2021-03-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":564,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"},{"lineNumber":565,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":566,"author":{"gitId":"tzexern"},"content":"## Glossary","lastModifiedDate":"2021-03-23"},{"lineNumber":567,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":568,"author":{"gitId":"tzexern"},"content":"---","lastModifiedDate":"2021-03-23"},{"lineNumber":569,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":570,"author":{"gitId":"tzexern"},"content":"* *glossary item* - Definition","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"tzexern":281,"marklowsk":57,"LeeHanYongAndy":164,"gerardtwk":41,"-":27}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"# Finux","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"Finux is a desktop application for tracking and managing your finance status.","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"It tracks your expenses, savings and also any loans to your friends.","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"LeeHanYongAndy"},"content":"Most of the user interactions happen using a CLI (Command Line Interface). ","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"LeeHanYongAndy"},"content":"* If you are interested in using Finux, head over to the Quick Start section of the [User Guide](UserGuide.md).","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"LeeHanYongAndy"},"content":"* If you are interested about developing Finux, the [Developer Guide](DeveloperGuide.md) is a good place to start.","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"* Get to know more about the [team](AboutUs.md).","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"LeeHanYongAndy":8,"-":2}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"# Finux User Guide","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"By: `Jonah Tham`, `Gerard Tan`, `Lee Han Yong Andy`, `Mark Low`, `Tan Tze Xern` ","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"Since: `March 2021`","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"LeeHanYongAndy"},"content":"- [Finux User Guide](#finux-user-guide)","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":"    * [1. Introduction](#1-introduction)","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"LeeHanYongAndy"},"content":"    * [2. Quick Start](#2-quick-start)","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"LeeHanYongAndy"},"content":"    * [3. Features](#3-features)","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"        + [3.1 Add a record: `add`](#31-add-a-record-add)","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"LeeHanYongAndy"},"content":"        + [3.2 List the records details: `list`](#32-list-the-records-details-list)","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"LeeHanYongAndy"},"content":"        + [3.3 View category total amount: `view`](#33-view-category-total-amount-view)","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"        + [3.4 Set a loan as return: `return`](#34-set-a-loan-as-return-return)","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"LeeHanYongAndy"},"content":"        + [3.5 Remove a record: `remove`](#35-remove-a-record-remove)","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":"        + [3.6 Check a person credit score: `creditscore`](#36-check-a-person-credit-score-creditscore)","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":"        + [3.7 Exit the program: `exit`](#37-exit-the-program-exit)","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"LeeHanYongAndy"},"content":"        + [3.8 Help function: `help`](#38-help-function-help)","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"LeeHanYongAndy"},"content":"        + [3.9 Task Storage](#39-task-storage)","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"LeeHanYongAndy"},"content":"    * [4. Frequently Asked Question (FAQ)](#4-faq)","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"    * [5. Command Summary](#5-command-summary)","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"## 1. Introduction","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":"Finux is a CLI Style application that allows the user to make better financial","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"LeeHanYongAndy"},"content":"decisions based on the information recorded in the application. If you’re familiar","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"LeeHanYongAndy"},"content":"with the CLI command interface, you will enjoy the benefit of speeding up your","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"LeeHanYongAndy"},"content":"finance management rather than using the traditional management system.","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"LeeHanYongAndy"},"content":"## 2. Quick Start","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"LeeHanYongAndy"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"2. Download the latest `finux.jar` from [here](https://github.com/AY2021S2-CS2113T-W09-1/tp/releases/tag/v1.0).","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"LeeHanYongAndy"},"content":"3. Copy the file to the folder you want to use as the *home folder* for your Duke.","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"LeeHanYongAndy"},"content":"4. For Windows users, pull up your **Command Prompt**.\\","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"LeeHanYongAndy"},"content":"   For Mac users, pull up your **Terminal**.\\","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"LeeHanYongAndy"},"content":"   Navigate to the directory containing the `finux.jar` file.\\","lastModifiedDate":"2021-03-20"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"   i.e. `cd FILEPATH`, `FILEPATH` is the address of your file.","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"5. Run the Duke.jar file by using the `java -jar finux.jar` command.","lastModifiedDate":"2021-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"## 3. Features","lastModifiedDate":"2021-03-20"},{"lineNumber":44,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e ❗ **CAUTION:** Insert any warning.","lastModifiedDate":"2021-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"marklowsk"},"content":"\u003e 💡 **Explanation for Command formats:**","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"marklowsk"},"content":"\u003e\u003e Commands in Finux follow these argument orders (depending on the command):","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"marklowsk"},"content":"\u003e\u003e * `CMD -OPT \u003cFIELD\u003e [-OPT \u003cFIELD\u003e...]`","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"marklowsk"},"content":"\u003e\u003e * `CMD -OPT`","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"marklowsk"},"content":"\u003e\u003e * `CMD { -OPT_1 ... | -OPT_2 ... | ... } ...`","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"marklowsk"},"content":"\u003e\u003e * `CMD \u003cFIELD\u003e`","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"marklowsk"},"content":"\u003e\u003e * `CMD [\u003cFIELD\u003e]`","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"marklowsk"},"content":"\u003e\u003e * `CMD`","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"marklowsk"},"content":"\u003e\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"marklowsk"},"content":"\u003e\u003e Argument types and notation:\\","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"marklowsk"},"content":"\u003e\u003e `CMD` - a valid command.\\","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"marklowsk"},"content":"\u003e\u003e `-OPT` - an option, a letter preceded by a dash. E.g. \"-i\".\\","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"marklowsk"},"content":"\u003e\u003e `\u003cFIELD\u003e` - an area where data is required.\\","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"marklowsk"},"content":"\u003e\u003e `[...]` - optional argument(s).\\","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"marklowsk"},"content":"\u003e\u003e `{ ... | ... | ... }` - mutually exclusive arguments.","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"marklowsk"},"content":"\u003e\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"marklowsk"},"content":"\u003e ❗ **Commands and options are case-sensitive:**\\","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"marklowsk"},"content":"\u003e E.g. `exit` will work, whereas `Exit`, `EXIT` or other variations","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"marklowsk"},"content":"\u003e will not be recognised.\\","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"marklowsk"},"content":"\u003e E.g. `view -s` will work, but using `-S` will not be recognised as","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"marklowsk"},"content":"\u003e a valid option.","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"marklowsk"},"content":"\u003e 💡 **Date and Date formats:**","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"marklowsk"},"content":"\u003e\u003e Finux supports multiple Date formats, for ease of use:","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"marklowsk"},"content":"\u003e\u003e * `DDMMYYYY`","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"marklowsk"},"content":"\u003e\u003e * `D.M.YYYY`","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"marklowsk"},"content":"\u003e\u003e * `D-M-YYYY`","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"marklowsk"},"content":"\u003e\u003e * `D/M/YYYY`","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"marklowsk"},"content":"\u003e\u003e * `YYYY.M.D`","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"marklowsk"},"content":"\u003e\u003e * `YYYY-M-D`","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"marklowsk"},"content":"\u003e\u003e * `YYYY/M/D`","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"marklowsk"},"content":"\u003e\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"marklowsk"},"content":"\u003e\u003e 📝 `today` keyword specifies today\u0027s date, replacing the need to type in the actual date for date inputs.","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"LeeHanYongAndy"},"content":"### 3.1 Add a record: `add`","lastModifiedDate":"2021-03-20"},{"lineNumber":81,"author":{"gitId":"marklowsk"},"content":"\u003e For the `add` command, there is no strict ordering for options.\\","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"marklowsk"},"content":"\u003e i.e. options `-a` can come before/after option `-d`.","lastModifiedDate":"2021-03-20"},{"lineNumber":83,"author":{"gitId":"LeeHanYongAndy"},"content":"#### 3.1.1 Add an expense record","lastModifiedDate":"2021-03-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":85,"author":{"gitId":"marklowsk"},"content":"This operation will add an expense record to the list.","lastModifiedDate":"2021-03-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":87,"author":{"gitId":"marklowsk"},"content":"Format: `add -e \u003cdescription\u003e -a \u003camount\u003e -d \u003cdate\u003e`","lastModifiedDate":"2021-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":89,"author":{"gitId":"marklowsk"},"content":"Examples: `add -e Plain bread loaf -a 2.90 -d 20.3.2021`","lastModifiedDate":"2021-03-20"},{"lineNumber":90,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":91,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-20"},{"lineNumber":92,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":93,"author":{"gitId":"marklowsk"},"content":"![add expense example output](img/Add_Expense_Example_Output.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":95,"author":{"gitId":"LeeHanYongAndy"},"content":"#### 3.1.2 Add a loan record","lastModifiedDate":"2021-03-20"},{"lineNumber":96,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":97,"author":{"gitId":"LeeHanYongAndy"},"content":"This operation will add a loan record to the list.","lastModifiedDate":"2021-03-20"},{"lineNumber":98,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":99,"author":{"gitId":"marklowsk"},"content":"Format: `add -l \u003cdescription\u003e -a \u003camount\u003e -d \u003cdate\u003e -p \u003cperson\u003e`","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":101,"author":{"gitId":"marklowsk"},"content":"Examples: `add -l 1st loan to Mark -a 200 -d 20.3.2021 -p Mark`","lastModifiedDate":"2021-03-20"},{"lineNumber":102,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":103,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-20"},{"lineNumber":104,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":105,"author":{"gitId":"marklowsk"},"content":"![add loan example output](img/Add_Loan_Example_Output.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":106,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":107,"author":{"gitId":"LeeHanYongAndy"},"content":"#### 3.1.3 Add a saving record","lastModifiedDate":"2021-03-20"},{"lineNumber":108,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":109,"author":{"gitId":"LeeHanYongAndy"},"content":"This operation will add a saving record to the list.","lastModifiedDate":"2021-03-20"},{"lineNumber":110,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":111,"author":{"gitId":"marklowsk"},"content":"Format: `add -s \u003cdescription\u003e -a \u003camount\u003e -d \u003cdate\u003e`","lastModifiedDate":"2021-03-20"},{"lineNumber":112,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":113,"author":{"gitId":"marklowsk"},"content":"Examples: `add -s Savings from March -a 1000 -d 05/04/2021`","lastModifiedDate":"2021-03-20"},{"lineNumber":114,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":115,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-20"},{"lineNumber":116,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":117,"author":{"gitId":"marklowsk"},"content":"![add saving example output](img/Add_Savings_Example_Output.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":118,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":119,"author":{"gitId":"LeeHanYongAndy"},"content":"### 3.2 List the records details: `list`","lastModifiedDate":"2021-03-20"},{"lineNumber":120,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":121,"author":{"gitId":"LeeHanYongAndy"},"content":"This operation will list the details of chosen record type.","lastModifiedDate":"2021-03-20"},{"lineNumber":122,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":123,"author":{"gitId":"LeeHanYongAndy"},"content":"Format: `insert format`","lastModifiedDate":"2021-03-20"},{"lineNumber":124,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":125,"author":{"gitId":"LeeHanYongAndy"},"content":"Examples: `insert example`, `insert example`","lastModifiedDate":"2021-03-20"},{"lineNumber":126,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":127,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-20"},{"lineNumber":128,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":129,"author":{"gitId":"LeeHanYongAndy"},"content":"![list example output]()","lastModifiedDate":"2021-03-20"},{"lineNumber":130,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":131,"author":{"gitId":"LeeHanYongAndy"},"content":"### 3.3 View category total amount: `view`","lastModifiedDate":"2021-03-20"},{"lineNumber":132,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":133,"author":{"gitId":"LeeHanYongAndy"},"content":"This operation will view the total amount of chosen record type.","lastModifiedDate":"2021-03-20"},{"lineNumber":134,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":135,"author":{"gitId":"LeeHanYongAndy"},"content":"Format: `view \u003cOPTION\u003e`","lastModifiedDate":"2021-03-21"},{"lineNumber":136,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":137,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e Available Options:","lastModifiedDate":"2021-03-21"},{"lineNumber":138,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e* `-e`: view the total amount of expenditure.","lastModifiedDate":"2021-03-21"},{"lineNumber":139,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e* `-l`: view the total amount of unreturned loans.","lastModifiedDate":"2021-03-21"},{"lineNumber":140,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e* `-s`: view the total amount of saving.","lastModifiedDate":"2021-03-21"},{"lineNumber":141,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":142,"author":{"gitId":"LeeHanYongAndy"},"content":"Examples: `view -e`, `view -l`","lastModifiedDate":"2021-03-21"},{"lineNumber":143,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":144,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-20"},{"lineNumber":145,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":146,"author":{"gitId":"LeeHanYongAndy"},"content":"![view example output](img/View_Example_Output.jpg)","lastModifiedDate":"2021-03-25"},{"lineNumber":147,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":148,"author":{"gitId":"LeeHanYongAndy"},"content":"### 3.4 Set a loan as return: `return`","lastModifiedDate":"2021-03-20"},{"lineNumber":149,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":150,"author":{"gitId":"LeeHanYongAndy"},"content":"This operation will set a loan record as returned by the loanee.","lastModifiedDate":"2021-03-20"},{"lineNumber":151,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":152,"author":{"gitId":"LeeHanYongAndy"},"content":"Format: `insert format`","lastModifiedDate":"2021-03-20"},{"lineNumber":153,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":154,"author":{"gitId":"LeeHanYongAndy"},"content":"Examples: `insert example`, `insert example`","lastModifiedDate":"2021-03-20"},{"lineNumber":155,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":156,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-20"},{"lineNumber":157,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":158,"author":{"gitId":"LeeHanYongAndy"},"content":"![return example output]()","lastModifiedDate":"2021-03-20"},{"lineNumber":159,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":160,"author":{"gitId":"LeeHanYongAndy"},"content":"### 3.5 Remove a record: `remove`","lastModifiedDate":"2021-03-20"},{"lineNumber":161,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":162,"author":{"gitId":"tzexern"},"content":"This operation will remove a record from the record list.","lastModifiedDate":"2021-03-23"},{"lineNumber":163,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":164,"author":{"gitId":"tzexern"},"content":"Format: `remove -i \u003cindex\u003e`","lastModifiedDate":"2021-03-23"},{"lineNumber":165,"author":{"gitId":"tzexern"},"content":"\u003e - The `\u003cindex\u003e` refers to the index number shown on the record list","lastModifiedDate":"2021-03-23"},{"lineNumber":166,"author":{"gitId":"tzexern"},"content":"\u003e - `\u003cindex\u003e` must be a **positive integer** 1,2,3...","lastModifiedDate":"2021-03-23"},{"lineNumber":167,"author":{"gitId":"tzexern"},"content":"\u003e - `\u003cindex\u003e` must be referring to an existing record","lastModifiedDate":"2021-03-23"},{"lineNumber":168,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":169,"author":{"gitId":"tzexern"},"content":"Examples: `remove -i 1`, `remove -i 2`","lastModifiedDate":"2021-03-23"},{"lineNumber":170,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":171,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-20"},{"lineNumber":172,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":173,"author":{"gitId":"tzexern"},"content":"![remove example output](img/RemoveExampleOutput.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":174,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":175,"author":{"gitId":"tzexern"},"content":"### 3.6 Check a person\u0027s credit score: `creditscore`","lastModifiedDate":"2021-03-23"},{"lineNumber":176,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":177,"author":{"gitId":"LeeHanYongAndy"},"content":"This operation will check the credit score of a person.","lastModifiedDate":"2021-03-20"},{"lineNumber":178,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":179,"author":{"gitId":"tzexern"},"content":"Format: `creditscore \u003cperson\u003e`","lastModifiedDate":"2021-03-23"},{"lineNumber":180,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":181,"author":{"gitId":"tzexern"},"content":"\u003e - `\u003cperson\u003e` refers to existing loanees in the loan list","lastModifiedDate":"2021-03-23"},{"lineNumber":182,"author":{"gitId":"tzexern"},"content":"\u003e - `\u003cperson\u003e` is case-insensitive, e.g. `jason` is the same as `Jason`","lastModifiedDate":"2021-03-23"},{"lineNumber":183,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":184,"author":{"gitId":"tzexern"},"content":"Examples: `creditscore jason`, `creditscore andy`","lastModifiedDate":"2021-03-23"},{"lineNumber":185,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":186,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-20"},{"lineNumber":187,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":188,"author":{"gitId":"tzexern"},"content":"![creditscore example output](img/CreditScoreExampleOutput.jpg)","lastModifiedDate":"2021-03-25"},{"lineNumber":189,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":190,"author":{"gitId":"LeeHanYongAndy"},"content":"### 3.7 Exit the program: `exit`","lastModifiedDate":"2021-03-20"},{"lineNumber":191,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":192,"author":{"gitId":"LeeHanYongAndy"},"content":"This operation exit the program.","lastModifiedDate":"2021-03-20"},{"lineNumber":193,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":194,"author":{"gitId":"tzexern"},"content":"Format: `exit`","lastModifiedDate":"2021-03-23"},{"lineNumber":195,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":196,"author":{"gitId":"LeeHanYongAndy"},"content":"### 3.8 Help function: `help`","lastModifiedDate":"2021-03-20"},{"lineNumber":197,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":198,"author":{"gitId":"LeeHanYongAndy"},"content":"This operation lists the help page for the application.","lastModifiedDate":"2021-03-20"},{"lineNumber":199,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":200,"author":{"gitId":"LeeHanYongAndy"},"content":"Format: `help \u003cFEATURE\u003e`","lastModifiedDate":"2021-03-21"},{"lineNumber":201,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":202,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e Available Features:","lastModifiedDate":"2021-03-21"},{"lineNumber":203,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e* `add`: view the help page for `add` command.","lastModifiedDate":"2021-03-21"},{"lineNumber":204,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e* `list`: view the help page for `list` command.","lastModifiedDate":"2021-03-21"},{"lineNumber":205,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e* `view`: view the help page for `view` command.","lastModifiedDate":"2021-03-21"},{"lineNumber":206,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e* `return`: view the help page for `return` command.","lastModifiedDate":"2021-03-21"},{"lineNumber":207,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e* `remove`: view the help page for `remove` command.","lastModifiedDate":"2021-03-21"},{"lineNumber":208,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e* `creditscore`: view the help page for `creditscore` command.","lastModifiedDate":"2021-03-21"},{"lineNumber":209,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e* `exit`: view the help page for `exit` command.","lastModifiedDate":"2021-03-21"},{"lineNumber":210,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e* `all`: view entire help page.","lastModifiedDate":"2021-03-21"},{"lineNumber":211,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e* 💡 **Tip**: Just type `help` and you can view the entire help page.","lastModifiedDate":"2021-03-21"},{"lineNumber":212,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":213,"author":{"gitId":"LeeHanYongAndy"},"content":"Examples: `help exit`, `help list`","lastModifiedDate":"2021-03-21"},{"lineNumber":214,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":215,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-20"},{"lineNumber":216,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":217,"author":{"gitId":"LeeHanYongAndy"},"content":"![help example output](img/Help_Example_Output.jpg)","lastModifiedDate":"2021-03-25"},{"lineNumber":218,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":219,"author":{"gitId":"jonahtwl"},"content":"### 3.9 Records storage","lastModifiedDate":"2021-03-22"},{"lineNumber":220,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":221,"author":{"gitId":"jonahtwl"},"content":"#### 3.9.1 Automatically saving all records into a file.","lastModifiedDate":"2021-03-22"},{"lineNumber":222,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":223,"author":{"gitId":"jonahtwl"},"content":"* All records are automatically saved after the following commands: `add`, `remove`, `return`.","lastModifiedDate":"2021-03-22"},{"lineNumber":224,"author":{"gitId":"jonahtwl"},"content":"* Records will **NOT** be saved after the following commands: `help`, `list`, `view`, `creditscore`.","lastModifiedDate":"2021-03-22"},{"lineNumber":225,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":226,"author":{"gitId":"jonahtwl"},"content":"\u003e ❗ **WARNING:** Do ensure that permissions are given for FINUX to write into the folder it is in,","lastModifiedDate":"2021-03-22"},{"lineNumber":227,"author":{"gitId":"jonahtwl"},"content":"\u003e FINUX will exit upon unsuccessful file creation.","lastModifiedDate":"2021-03-22"},{"lineNumber":228,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":229,"author":{"gitId":"jonahtwl"},"content":"#### 3.9.2 Automatically loading data from an existing file into FINUX.","lastModifiedDate":"2021-03-22"},{"lineNumber":230,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":231,"author":{"gitId":"jonahtwl"},"content":"* FINUX will automatically load the data from \"finux.txt\" when it finds the text","lastModifiedDate":"2021-03-22"},{"lineNumber":232,"author":{"gitId":"jonahtwl"},"content":"file in the same directory. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":233,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":234,"author":{"gitId":"jonahtwl"},"content":"* Expected output for new file creation:","lastModifiedDate":"2021-03-22"},{"lineNumber":235,"author":{"gitId":"jonahtwl"},"content":"![new_file_creation_output](img/New_File_Creation_Example.jpg)","lastModifiedDate":"2021-03-22"},{"lineNumber":236,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":237,"author":{"gitId":"jonahtwl"},"content":"* Expected output if successful load:","lastModifiedDate":"2021-03-22"},{"lineNumber":238,"author":{"gitId":"jonahtwl"},"content":"![load success example output](img/Successful_Load_Example.jpg)","lastModifiedDate":"2021-03-22"},{"lineNumber":239,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":240,"author":{"gitId":"jonahtwl"},"content":"* Expected output if not successfully loaded:","lastModifiedDate":"2021-03-22"},{"lineNumber":241,"author":{"gitId":"jonahtwl"},"content":"![load fail example output](img/Failed_Load_Example_Output.jpg)","lastModifiedDate":"2021-03-22"},{"lineNumber":242,"author":{"gitId":"jonahtwl"},"content":"  ","lastModifiedDate":"2021-03-22"},{"lineNumber":243,"author":{"gitId":"jonahtwl"},"content":"#### 3.9.3 Editing the saved file directly","lastModifiedDate":"2021-03-22"},{"lineNumber":244,"author":{"gitId":"jonahtwl"},"content":"* The FINUX team encourages higher leveled users to edit the save directly.","lastModifiedDate":"2021-03-22"},{"lineNumber":245,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":246,"author":{"gitId":"jonahtwl"},"content":"\u003e 💡 **NOTE:** Any minor mistakes in the syntax will lead to the termination of FINUX. ","lastModifiedDate":"2021-03-22"},{"lineNumber":247,"author":{"gitId":"jonahtwl"},"content":"\u003e The team highly suggests that users only make minor changes like","lastModifiedDate":"2021-03-22"},{"lineNumber":248,"author":{"gitId":"jonahtwl"},"content":"\u003e spelling errors instead of inserting new Records into the save file.","lastModifiedDate":"2021-03-22"},{"lineNumber":249,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":250,"author":{"gitId":"LeeHanYongAndy"},"content":"## 4. FAQ","lastModifiedDate":"2021-03-20"},{"lineNumber":251,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":252,"author":{"gitId":"LeeHanYongAndy"},"content":"**Q**: {Insert question}? ","lastModifiedDate":"2021-03-20"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":254,"author":{"gitId":"-"},"content":"**A**: {your answer here}","lastModifiedDate":"2020-05-24"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":256,"author":{"gitId":"jonahtwl"},"content":"\u003e**Q**: Does the `view -l` shows the total loan amount? \u003cbr\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":257,"author":{"gitId":"jonahtwl"},"content":"\u003e**A**: No. `view -l` only shows the total unreturned loans amount.","lastModifiedDate":"2021-03-22"},{"lineNumber":258,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":259,"author":{"gitId":"jonahtwl"},"content":"\u003e**Q**: What happens if FINUX crashes unexpectedly? \u003cbr\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":260,"author":{"gitId":"jonahtwl"},"content":"\u003e**A**: All records are saved upon addition or deletion or returned, no worries!","lastModifiedDate":"2021-03-22"},{"lineNumber":261,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":262,"author":{"gitId":"jonahtwl"},"content":"\u003e**Q**: FINUX keeps having a `bad init` error message, but it is my first time launching FINUX. \u003cbr\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":263,"author":{"gitId":"jonahtwl"},"content":"\u003e**A**: Do check and ensure that FINUX has the proper write permissions in the directory.","lastModifiedDate":"2021-03-22"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":265,"author":{"gitId":"LeeHanYongAndy"},"content":"## 5. Command Summary","lastModifiedDate":"2021-03-20"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":267,"author":{"gitId":"marklowsk"},"content":"| Feature                                | Command                                                  |","lastModifiedDate":"2021-03-24"},{"lineNumber":268,"author":{"gitId":"marklowsk"},"content":"| -------------------------------------- | -------------------------------------------------------- |","lastModifiedDate":"2021-03-24"},{"lineNumber":269,"author":{"gitId":"marklowsk"},"content":"| Add an expense record                  | `add -e \u003cdescription\u003e -a \u003camount\u003e -d \u003cdate\u003e`             |","lastModifiedDate":"2021-03-24"},{"lineNumber":270,"author":{"gitId":"marklowsk"},"content":"| Add a savings record                   | `add -s \u003cdescription\u003e -a \u003camount\u003e -d \u003cdate\u003e`             |","lastModifiedDate":"2021-03-24"},{"lineNumber":271,"author":{"gitId":"marklowsk"},"content":"| Add a loan record                      | `add -l \u003cdescription\u003e -a \u003camount\u003e -d \u003cdate\u003e -p \u003cperson\u003e` |","lastModifiedDate":"2021-03-24"},{"lineNumber":272,"author":{"gitId":"marklowsk"},"content":"| List all expense records               | `list -e`                                                |","lastModifiedDate":"2021-03-24"},{"lineNumber":273,"author":{"gitId":"marklowsk"},"content":"| List all savings records               | `list -s`                                                |","lastModifiedDate":"2021-03-24"},{"lineNumber":274,"author":{"gitId":"marklowsk"},"content":"| List all loan records                  | `list -l`                                                |","lastModifiedDate":"2021-03-24"},{"lineNumber":275,"author":{"gitId":"marklowsk"},"content":"| View total expenditure                 | `view -e`                                                |","lastModifiedDate":"2021-03-24"},{"lineNumber":276,"author":{"gitId":"marklowsk"},"content":"| View total savings amount              | `view -s`                                                |","lastModifiedDate":"2021-03-24"},{"lineNumber":277,"author":{"gitId":"marklowsk"},"content":"| View total amount of unreturned loans  | `view -l`                                                |","lastModifiedDate":"2021-03-24"},{"lineNumber":278,"author":{"gitId":"marklowsk"},"content":"| Mark a loan as returned                | `return -i \u003cloan_index\u003e -d \u003creturn_date\u003e`                |","lastModifiedDate":"2021-03-24"},{"lineNumber":279,"author":{"gitId":"marklowsk"},"content":"| Remove a record (expense/savings/loan) | `remove -i \u003cindex\u003e`                                      |","lastModifiedDate":"2021-03-24"},{"lineNumber":280,"author":{"gitId":"marklowsk"},"content":"| Print a person\u0027s credit score          | `creditscore \u003cperson\u003e`                                   |","lastModifiedDate":"2021-03-24"},{"lineNumber":281,"author":{"gitId":"marklowsk"},"content":"| Help (selected command)                | `help \u003cfeature\u003e`                                         |","lastModifiedDate":"2021-03-24"},{"lineNumber":282,"author":{"gitId":"marklowsk"},"content":"| Help (all commands)                    | `help`                                                   |","lastModifiedDate":"2021-03-24"},{"lineNumber":283,"author":{"gitId":"marklowsk"},"content":"| Exit the application                   | `exit`                                                   |","lastModifiedDate":"2021-03-24"},{"lineNumber":284,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":285,"author":{"gitId":"marklowsk"},"content":"#### _List of command formats_","lastModifiedDate":"2021-03-24"},{"lineNumber":286,"author":{"gitId":"marklowsk"},"content":"```","lastModifiedDate":"2021-03-24"},{"lineNumber":287,"author":{"gitId":"marklowsk"},"content":"list { -e | -s | -l }","lastModifiedDate":"2021-03-24"},{"lineNumber":288,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":289,"author":{"gitId":"marklowsk"},"content":"add { -e | -s | -l } \u003cdescription\u003e -a \u003camount\u003e -d \u003cdate\u003e [-p \u003cperson\u003e]","lastModifiedDate":"2021-03-24"},{"lineNumber":290,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":291,"author":{"gitId":"marklowsk"},"content":"creditscore \u003cperson\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":292,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":293,"author":{"gitId":"marklowsk"},"content":"return -i \u003cloan_index\u003e -d \u003creturn_date\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":294,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":295,"author":{"gitId":"marklowsk"},"content":"remove -i \u003cindex\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":296,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":297,"author":{"gitId":"marklowsk"},"content":"view { -e | -s | -l }","lastModifiedDate":"2021-03-24"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":299,"author":{"gitId":"marklowsk"},"content":"help [\u003cfeature\u003e]","lastModifiedDate":"2021-03-24"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":301,"author":{"gitId":"marklowsk"},"content":"exit","lastModifiedDate":"2021-03-24"},{"lineNumber":302,"author":{"gitId":"marklowsk"},"content":"```","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"tzexern":15,"jonahtwl":30,"LeeHanYongAndy":156,"marklowsk":78,"-":23}},{"path":"docs/diagrams/ArchitectureDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"@startuml","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"!include \u003coffice/Concepts/globe_internet\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"!include \u003coffice/Concepts/document\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"!include \u003coffice/Users/user\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"!include style.puml","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"\u0027Need to rework current Finux Architecture","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"Package \" \"\u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"    Class UI #green","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"    Class Storage #magenta","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"    Class RecordList #indigo","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"    Class Finux #grey","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"    Class CommandHandler #orange","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"    Class Parser #olivedrab","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"    Class Command #purple","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"    Class HiddenRecordList #white","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"    Class HiddenUI #white","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"    Class Hidden #white","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"Class \"\u003c$user\u003e\" as User #black","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"Class \"\u003c$document\u003e\" as File #skyblue","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"User ..\u003e UI","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"UI -[#green]-\u003e Parser","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"Parser -[#olivedrab]-\u003e CommandHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"CommandHandler -[#orange]-\u003e Command","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"Command -[#purple]-\u003e RecordList","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"Command -right[#purple]-\u003e Storage","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":"Storage -[#magenta]-\u003e RecordList","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":"Storage .[#magenta].\u003e File","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"File .[#skyblue].\u003e Storage","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"marklowsk"},"content":"Finux -down-\u003e Hidden","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"marklowsk"},"content":"Finux -left-\u003e HiddenUI","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"Finux -down-\u003e HiddenRecordList","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"@enduml","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"marklowsk":39}},{"path":"docs/diagrams/CommandLooperSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"!include style.puml","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"Participant \":Finux\" as Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"Participant \":UI\" as UI","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"Participant \":Parser\" as ParserHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"Participant \":CommandHandler\" as CommandHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"Participant \":Command\" as Command","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"Participant \":RecordList\" as RecordList","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"Participant \":Storage\" as Storage","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"activate Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"Finux -\u003e Finux : commandLooper()","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"activate Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"loop while not exit","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"    Finux -\u003e UI : getUserInput()","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"    activate UI","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"    UI --\u003e Finux : rawInput","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"    deactivate UI","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"    Finux -\u003e ParserHandler : getParseInput(rawInput)","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"    activate ParserHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"    ParserHandler --\u003e Finux : parsedArguments : ArrayList","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"    deactivate ParserHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"    Finux -\u003e CommandHandler : parseCommand(parsedArguments)","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"    activate CommandHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":"    CommandHandler -\u003e CommandHandler :createCommand(parsedArguments)","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"    activate CommandHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":"    create Command","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"    CommandHandler -\u003e Command : Command(parsedArguments)","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"    activate Command","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"marklowsk"},"content":"    Command --\u003e CommandHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"marklowsk"},"content":"    deactivate Command","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"    CommandHandler --\u003e CommandHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"    deactivate CommandHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"marklowsk"},"content":"    CommandHandler --\u003e Finux : command : Command","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"marklowsk"},"content":"    deactivate CommandHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"marklowsk"},"content":"    Finux -\u003e Command : execute()","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"marklowsk"},"content":"    activate Command","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"marklowsk"},"content":"    ref over Command, RecordList, Storage : Command execute logic","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"marklowsk"},"content":"    Command --\u003e Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"marklowsk"},"content":"    deactivate Command","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"marklowsk"},"content":"    destroy Command","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"marklowsk"},"content":"end","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"marklowsk"},"content":"Finux --\u003e Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"marklowsk"},"content":"deactivate Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"marklowsk"},"content":"destroy ParserHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"marklowsk"},"content":"destroy CommandHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"marklowsk"},"content":"destroy RecordList","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"marklowsk"},"content":"destroy Storage","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"marklowsk"},"content":"Finux -\u003e Finux : end()","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"marklowsk"},"content":"activate Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"marklowsk"},"content":"Finux -\u003e UI : printGoodByeMessage()","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"marklowsk"},"content":"activate UI","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"marklowsk"},"content":"UI --\u003e Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"marklowsk"},"content":"deactivate UI","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"marklowsk"},"content":"Finux --\u003e Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"marklowsk"},"content":"deactivate Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"marklowsk"},"content":"destroy Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"marklowsk"},"content":"destroy UI","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"marklowsk"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"marklowsk":69}},{"path":"docs/diagrams/InitializationSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"!include style.puml","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"Participant \":Finux\" as Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"Participant \":UI\" as UI","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"Participant \":Storage\" as Storage","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"Participant \":RecordList\" as RecordList","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"Participant \":ParserHandler\" as ParserHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"Participant \":CommandHandler\" as CommandHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"activate Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"Finux -\u003e Finux : start()","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"activate Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"create UI","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"Finux -\u003e UI : Ui()","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"activate UI","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"UI --\u003e Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"deactivate UI","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"create Storage","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"Finux -\u003e Storage : Storage()","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"activate Storage","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"Storage --\u003e Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"deactivate Storage","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"create ParserHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"Finux -\u003e ParserHandler : ParserHandler()","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"activate ParserHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"ParserHandler --\u003e Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":"deactivate ParserHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":"create CommandHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"Finux -\u003e CommandHandler : CommandHandler()","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"activate CommandHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"marklowsk"},"content":"CommandHandler --\u003e Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"marklowsk"},"content":"deactivate CommandHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"Finux -\u003e Storage : getRecordListData()","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"marklowsk"},"content":"activate Storage","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"marklowsk"},"content":"Storage --\u003e Finux : records : ArrayList","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"marklowsk"},"content":"deactivate Storage","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"marklowsk"},"content":"create RecordList","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"marklowsk"},"content":"Finux -\u003e RecordList : RecordList(records : ArrayList)","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"marklowsk"},"content":"activate RecordList","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"marklowsk"},"content":"RecordList --\u003e Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"marklowsk"},"content":"deactivate RecordList","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"marklowsk"},"content":"Finux -\u003e UI : printWelcomeMessage()","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"marklowsk"},"content":"activate UI","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"marklowsk"},"content":"UI --\u003e Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"marklowsk"},"content":"deactivate UI","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"marklowsk"},"content":"Finux --\u003e Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"marklowsk"},"content":"deactivate Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"marklowsk"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"marklowsk":58}},{"path":"docs/diagrams/ParserHandlerClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"LeeHanYongAndy"},"content":"class ParserHandler {","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"LeeHanYongAndy"},"content":"    -startOptionArray: String[]","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":"    -endOptionArray: String[]","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"LeeHanYongAndy"},"content":"    -middleOptionArray: String[]","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"LeeHanYongAndy"},"content":"    +ParserHandler()","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"    +getParseInput(userInput: String): ArrayList\u003cString\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"LeeHanYongAndy"},"content":"    -startExtraction(extracted: ArrayList\u003cString\u003e, trimmedInput: String): ArrayList\u003cString\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"LeeHanYongAndy"},"content":"    -extractSubsequentPart(extracted: ArrayList\u003cString\u003e, trimmedInput: String): ArrayList\u003cString\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"    -extractFinalPart(extracted: ArrayList\u003cString\u003e, trimmedInput: String): ArrayList\u003cString\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"LeeHanYongAndy"},"content":"    -checkFirstBlock(extracted: ArrayList\u003cString\u003e): ArrayList\u003cString\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":"    -checkOptionStartWith(input: String): boolean","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":"    -checkOptionStartWith(input: String): boolean","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"LeeHanYongAndy"},"content":"    -getNextOptionIndex(leftOverString: String): int","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"class Duke {","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"ParserHandler\"1\" \u003c-- Duke","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"LeeHanYongAndy"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"LeeHanYongAndy":26}},{"path":"docs/diagrams/RemoveFeatureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"!include style.puml","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":"[-\u003e \":Finux\": commandLooper()","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"activate \":Finux\"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":"\":Finux\" -\u003e \":RemoveCommand\": execute()","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":"activate \":RemoveCommand\"","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":"\":RemoveCommand\" -\u003e \":RecordList\" : getRecordAt(recordNumberInt)","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"tzexern"},"content":"activate \":RecordList\"","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"tzexern"},"content":"\":RecordList\" --\u003e \":RemoveCommand\"","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"deactivate \":RecordList\"","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"\":RemoveCommand\" -\u003e \":Ui\" : printMessage()","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"activate \":Ui\"","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"\":Ui\" --\u003e \":RemoveCommand\"","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"deactivate \":Ui\"","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"\":RemoveCommand\" -\u003e \":RecordList\" : deleteRecordAt(recordNumberInt)","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":"activate \":RecordList\"","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"tzexern"},"content":"\":RecordList\" --\u003e \":RemoveCommand\"","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":"deactivate \":RecordList\"","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"\":RemoveCommand\" -\u003e \":Storage\" : saveData()","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":"activate \":Storage\"","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"\":Storage\" --\u003e \":RemoveCommand\"","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"deactivate \":Storage\"","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"\":RemoveCommand\" --\u003e \":Finux\"","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":"deactivate \":RemoveCommand\"","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"tzexern"},"content":"destroy \":RemoveCommand\"","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"tzexern"},"content":"[\u003c-- \":Finux\"","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"deactivate \":Finux\"","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"tzexern":36}},{"path":"docs/diagrams/UIComponentDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":"!include style.puml","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"Duke -\u003e [UI]","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"tzexern":6}},{"path":"docs/diagrams/ViewFeatureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"!include style.puml","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"LeeHanYongAndy"},"content":"\":Finux\" -\u003e \":ViewCommand\": execute()","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"LeeHanYongAndy"},"content":"activate \":Finux\"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":"activate \":ViewCommand\"","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"LeeHanYongAndy"},"content":"alt EXPENSE","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"LeeHanYongAndy"},"content":"    \":ViewCommand\" -\u003e \":Ui\": printTotalAmountExpense(:RecordList)","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"LeeHanYongAndy"},"content":"    activate \":Ui\"","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"    \":Ui\" --\u003e \":ViewCommand\"","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"LeeHanYongAndy"},"content":"    deactivate \":Ui\"","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":"else LOAN","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"LeeHanYongAndy"},"content":"    \":ViewCommand\" -\u003e \":Ui\": printTotalAmountLoan(:RecordList)","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"LeeHanYongAndy"},"content":"    activate \":Ui\"","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"    \":Ui\" --\u003e \":ViewCommand\"","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":"    deactivate \":Ui\"","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"else SAVING","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":"    \":ViewCommand\" -\u003e \":Ui\": printTotalAmountSaving(:RecordList)","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"LeeHanYongAndy"},"content":"    activate \":Ui\"","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"LeeHanYongAndy"},"content":"    \":Ui\" --\u003e \":ViewCommand\"","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"LeeHanYongAndy"},"content":"    deactivate \":Ui\"","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"LeeHanYongAndy"},"content":"end","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"LeeHanYongAndy"},"content":"\":ViewCommand\" --\u003e \":Finux\"","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"LeeHanYongAndy"},"content":"deactivate \":ViewCommand\"","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"deactivate \":Finux\"","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"LeeHanYongAndy"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"LeeHanYongAndy":36}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"skinparam BackgroundColor #FFFFFFF","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"skinparam Shadowing false","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"skinparam Class {","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"    FontColor #white","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"    BorderThickness 1","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"    BorderColor #white","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"    StereotypeFontColor #white","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"    FontName Arial","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"skinparam Sequence {","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"    MessageAlign center","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"    BoxFontSize 15","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"    BoxPadding 0","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"    BoxFontColor #white","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"    FontName Arial","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"skinparam Shadowing false","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"hide footbox","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"hide members","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"hide circle","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"marklowsk":29}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.command.BorrowersCreditScoreForReturnedLoans;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.command.CommandHandler;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.command.ExitCommand;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.exception.FileLoadingException;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.parser.ParserHandler;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"    private Ui ui;","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"    private RecordList records;","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":"    private Storage storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"    private CommandHandler commandHandler;","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"    private ParserHandler parserHandler;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":"    private BorrowersCreditScoreForReturnedLoans borrowersCreditScoreForReturnedLoans;","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application.","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"        new Duke().run();","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"     * Runner for the FINUX Application.","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"    private void run() {","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":"        start();","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"jonahtwl"},"content":"        commandLooper();","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"        end();","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"jonahtwl"},"content":"     * Starts the main application.","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"jonahtwl"},"content":"    private void start() {","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"jonahtwl"},"content":"        try {","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"marklowsk"},"content":"            ui \u003d new Ui();","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"marklowsk"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"            records \u003d new RecordList();","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"            parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"marklowsk"},"content":"            commandHandler \u003d new CommandHandler();","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"gerardtwk"},"content":"            storage.loadFile();","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"gerardtwk"},"content":"            records \u003d new RecordList(storage.getRecordListData());","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"gerardtwk"},"content":"            borrowersCreditScoreForReturnedLoans \u003d new BorrowersCreditScoreForReturnedLoans(","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"gerardtwk"},"content":"                    storage.getBorrowersCreditScoreForReturnedLoansMapData());","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"jonahtwl"},"content":"            ui.printWelcomeMessage();","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"jonahtwl"},"content":"        } catch (FileLoadingException e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"jonahtwl"},"content":"            Ui.printInitError();","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"jonahtwl"},"content":"            System.exit(-1);","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"jonahtwl"},"content":"     * Loops the application until an EXIT command is parsed.","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"jonahtwl"},"content":"    private void commandLooper() {","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"jonahtwl"},"content":"        Command command;","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"jonahtwl"},"content":"        String rawInput;","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"jonahtwl"},"content":"        do {","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"jonahtwl"},"content":"            rawInput \u003d ui.getUserInput();","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"            ArrayList\u003cString\u003e parsedStringList \u003d parserHandler.getParseInput(rawInput);","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"LeeHanYongAndy"},"content":"            assert parsedStringList.size() !\u003d 0 : \"Empty Parser Error\";","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"marklowsk"},"content":"            command \u003d commandHandler.parseCommand(parsedStringList, records);","lastModifiedDate":"2021-03-22"},{"lineNumber":71,"author":{"gitId":"gerardtwk"},"content":"            if (command !\u003d null) {","lastModifiedDate":"2021-03-11"},{"lineNumber":72,"author":{"gitId":"gerardtwk"},"content":"                command.execute(records, ui, storage, borrowersCreditScoreForReturnedLoans);","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"gerardtwk"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":74,"author":{"gitId":"jonahtwl"},"content":"        } while (!ExitCommand.isExit(command));","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":77,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":78,"author":{"gitId":"jonahtwl"},"content":"     * Exits the application.","lastModifiedDate":"2021-03-26"},{"lineNumber":79,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":80,"author":{"gitId":"jonahtwl"},"content":"    private void end() {","lastModifiedDate":"2021-03-26"},{"lineNumber":81,"author":{"gitId":"jonahtwl"},"content":"        ui.printGoodByeMessage();","lastModifiedDate":"2021-03-26"},{"lineNumber":82,"author":{"gitId":"jonahtwl"},"content":"        System.exit(0);","lastModifiedDate":"2021-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jonahtwl":55,"marklowsk":5,"LeeHanYongAndy":5,"gerardtwk":9,"-":10}},{"path":"src/main/java/seedu/duke/command/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.common.RecordType;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"LeeHanYongAndy"},"content":"import seedu.duke.exception.CustomException;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.Expense;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.record.Loan;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.record.Saving;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"import static seedu.duke.command.Utils.getOptionValue;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"import static seedu.duke.command.Utils.hasOption;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateOptions;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_AMOUNT;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"import static seedu.duke.common.Constant.OPTION_DATE;","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_EXPENSE;","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_LOAN;","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_PERSON;","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_SAVING;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"import static seedu.duke.common.Validators.validateAmount;","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"import static seedu.duke.common.Validators.validateDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"LeeHanYongAndy"},"content":" * Handles all operations related to the add command.","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"    protected static final String COMMAND_ADD \u003d \"add\";","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"    private static final String[] VALID_OPTIONS \u003d {","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"marklowsk"},"content":"        OPTION_EXPENSE, OPTION_LOAN, OPTION_SAVING, OPTION_AMOUNT, OPTION_DATE, OPTION_PERSON","lastModifiedDate":"2021-03-19"},{"lineNumber":37,"author":{"gitId":"marklowsk"},"content":"    };","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"    private static final String[] CONFLICT_OPTIONS \u003d {OPTION_EXPENSE, OPTION_LOAN, OPTION_SAVING};","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"    private final BigDecimal amount;","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"marklowsk"},"content":"    private final LocalDate issueDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"    private final String description;","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"gerardtwk"},"content":"    private final String borrowerName;","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"jonahtwl"},"content":"    private RecordType recordType;","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Constructor to validate the format for add command.","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":49,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"jonahtwl"},"content":"    public AddCommand(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"marklowsk"},"content":"        validateOptions(arguments, COMMAND_ADD, VALID_OPTIONS, CONFLICT_OPTIONS);","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"LeeHanYongAndy"},"content":"        description \u003d getDescription(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"LeeHanYongAndy"},"content":"        amount \u003d getAmount(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"LeeHanYongAndy"},"content":"        issueDate \u003d getDate(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"gerardtwk"},"content":"        borrowerName \u003d getPerson(arguments);","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"marklowsk"},"content":"     * Gets the description field.","lastModifiedDate":"2021-03-19"},{"lineNumber":63,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a String containing the description of the record.","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"    private String getDescription(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"marklowsk"},"content":"        return getOptionValue(arguments, COMMAND_ADD, checkRecordType(arguments));","lastModifiedDate":"2021-03-19"},{"lineNumber":70,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"marklowsk"},"content":"     * Gets the amount field.","lastModifiedDate":"2021-03-19"},{"lineNumber":74,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":75,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a BigDecimal object containing the amount of the record.","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"LeeHanYongAndy"},"content":"    private BigDecimal getAmount(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"LeeHanYongAndy"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"LeeHanYongAndy"},"content":"            return validateAmount(getOptionValue(arguments, COMMAND_ADD, OPTION_AMOUNT));","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"LeeHanYongAndy"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"LeeHanYongAndy"},"content":"            throw new CommandException(\"amount contains a non numeric value.\", COMMAND_ADD);","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"LeeHanYongAndy"},"content":"        } catch (CustomException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"LeeHanYongAndy"},"content":"            throw new CommandException(e.getMessage(), COMMAND_ADD);","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"marklowsk"},"content":"     * Gets the date field.","lastModifiedDate":"2021-03-19"},{"lineNumber":91,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":92,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a LocalDate object containing the date of the record.","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"LeeHanYongAndy"},"content":"    private LocalDate getDate(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"LeeHanYongAndy"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"LeeHanYongAndy"},"content":"            return validateDate(getOptionValue(arguments, COMMAND_ADD, OPTION_DATE));","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"LeeHanYongAndy"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"LeeHanYongAndy"},"content":"            throw new CommandException(e.getMessage(), COMMAND_ADD);","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"marklowsk"},"content":"     * Gets the person field.","lastModifiedDate":"2021-03-19"},{"lineNumber":106,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":107,"author":{"gitId":"marklowsk"},"content":"     * @param arguments parsed input containing the options and arguments.","lastModifiedDate":"2021-03-19"},{"lineNumber":108,"author":{"gitId":"marklowsk"},"content":"     * @return the option value of person, or {@code null} if {@code recordType} is not a loan.","lastModifiedDate":"2021-03-19"},{"lineNumber":109,"author":{"gitId":"marklowsk"},"content":"     * @throws CommandException if {@code recordType} is not a loan but arguments contains the person option,","lastModifiedDate":"2021-03-19"},{"lineNumber":110,"author":{"gitId":"marklowsk"},"content":"     *                          or if the option value of person is empty.","lastModifiedDate":"2021-03-19"},{"lineNumber":111,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":112,"author":{"gitId":"marklowsk"},"content":"    private String getPerson(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-19"},{"lineNumber":113,"author":{"gitId":"marklowsk"},"content":"        if (recordType \u003d\u003d RecordType.LOAN) {","lastModifiedDate":"2021-03-19"},{"lineNumber":114,"author":{"gitId":"gerardtwk"},"content":"            String borrowerName \u003d getOptionValue(arguments, COMMAND_ADD, OPTION_PERSON);","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"gerardtwk"},"content":"            if (borrowerName.contains(\"|\")) {","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"gerardtwk"},"content":"                throw new CommandException(\"Borrower name cannot contain \u0027|\u0027 as input.\", COMMAND_ADD);","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"gerardtwk"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"gerardtwk"},"content":"            return borrowerName;","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"marklowsk"},"content":"        } else if (hasOption(arguments, OPTION_PERSON)) {","lastModifiedDate":"2021-03-19"},{"lineNumber":120,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(\"option -p not valid for this record type.\", COMMAND_ADD);","lastModifiedDate":"2021-03-19"},{"lineNumber":121,"author":{"gitId":"marklowsk"},"content":"        } else {","lastModifiedDate":"2021-03-19"},{"lineNumber":122,"author":{"gitId":"marklowsk"},"content":"            return null;","lastModifiedDate":"2021-03-19"},{"lineNumber":123,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":124,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":125,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":126,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":127,"author":{"gitId":"marklowsk"},"content":"     * Checks if the input contains the correct record type and options.","lastModifiedDate":"2021-03-19"},{"lineNumber":128,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":129,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing the options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"LeeHanYongAndy"},"content":"    private String checkRecordType(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":133,"author":{"gitId":"jonahtwl"},"content":"        if (hasOption(arguments, OPTION_EXPENSE)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":134,"author":{"gitId":"jonahtwl"},"content":"            recordType \u003d RecordType.EXPENSE;","lastModifiedDate":"2021-03-09"},{"lineNumber":135,"author":{"gitId":"LeeHanYongAndy"},"content":"            return OPTION_EXPENSE;","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"jonahtwl"},"content":"        } else if (hasOption(arguments, OPTION_LOAN)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":137,"author":{"gitId":"jonahtwl"},"content":"            recordType \u003d RecordType.LOAN;","lastModifiedDate":"2021-03-09"},{"lineNumber":138,"author":{"gitId":"LeeHanYongAndy"},"content":"            return OPTION_LOAN;","lastModifiedDate":"2021-03-14"},{"lineNumber":139,"author":{"gitId":"marklowsk"},"content":"        } else if (hasOption(arguments, OPTION_SAVING)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":140,"author":{"gitId":"jonahtwl"},"content":"            recordType \u003d RecordType.SAVING;","lastModifiedDate":"2021-03-09"},{"lineNumber":141,"author":{"gitId":"LeeHanYongAndy"},"content":"            return OPTION_SAVING;","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"jonahtwl"},"content":"        } else {","lastModifiedDate":"2021-03-09"},{"lineNumber":143,"author":{"gitId":"jonahtwl"},"content":"            throw new CommandException(\"missing option: [-e | -l | -s]\", COMMAND_ADD);","lastModifiedDate":"2021-03-09"},{"lineNumber":144,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":145,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":146,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":147,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Executes the add function.","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"LeeHanYongAndy"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param ui      is the Ui object that interacts with the user.","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param storage is the Storage object that reads and writes to the save file.","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"jonahtwl"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":155,"author":{"gitId":"gerardtwk"},"content":"    public void execute(RecordList recordList, Ui ui, Storage storage, BorrowersCreditScoreForReturnedLoans","lastModifiedDate":"2021-03-24"},{"lineNumber":156,"author":{"gitId":"gerardtwk"},"content":"            borrowersCreditScoreForReturnedLoans) {","lastModifiedDate":"2021-03-24"},{"lineNumber":157,"author":{"gitId":"jonahtwl"},"content":"        switch (recordType) {","lastModifiedDate":"2021-03-09"},{"lineNumber":158,"author":{"gitId":"jonahtwl"},"content":"        case EXPENSE:","lastModifiedDate":"2021-03-09"},{"lineNumber":159,"author":{"gitId":"gerardtwk"},"content":"            Expense expenseObj \u003d new Expense(amount, issueDate, description);","lastModifiedDate":"2021-03-11"},{"lineNumber":160,"author":{"gitId":"LeeHanYongAndy"},"content":"            recordList.addRecord(expenseObj);","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"gerardtwk"},"content":"            storage.saveData(recordList, borrowersCreditScoreForReturnedLoans);","lastModifiedDate":"2021-03-24"},{"lineNumber":162,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printSuccessfulAdd(expenseObj, recordList.getRecordCount());","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"jonahtwl"},"content":"            break;","lastModifiedDate":"2021-03-09"},{"lineNumber":164,"author":{"gitId":"jonahtwl"},"content":"        case LOAN:","lastModifiedDate":"2021-03-09"},{"lineNumber":165,"author":{"gitId":"gerardtwk"},"content":"            Loan loanObj \u003d new Loan(amount, issueDate, description, borrowerName);","lastModifiedDate":"2021-03-21"},{"lineNumber":166,"author":{"gitId":"LeeHanYongAndy"},"content":"            recordList.addRecord(loanObj);","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"gerardtwk"},"content":"            storage.saveData(recordList, borrowersCreditScoreForReturnedLoans);","lastModifiedDate":"2021-03-24"},{"lineNumber":168,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printSuccessfulAdd(loanObj, recordList.getRecordCount());","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"jonahtwl"},"content":"            break;","lastModifiedDate":"2021-03-09"},{"lineNumber":170,"author":{"gitId":"jonahtwl"},"content":"        case SAVING:","lastModifiedDate":"2021-03-09"},{"lineNumber":171,"author":{"gitId":"marklowsk"},"content":"            // Fallthrough","lastModifiedDate":"2021-03-11"},{"lineNumber":172,"author":{"gitId":"jonahtwl"},"content":"        default:","lastModifiedDate":"2021-03-09"},{"lineNumber":173,"author":{"gitId":"LeeHanYongAndy"},"content":"            Saving savingObj \u003d new Saving(amount, issueDate, description);","lastModifiedDate":"2021-03-11"},{"lineNumber":174,"author":{"gitId":"LeeHanYongAndy"},"content":"            recordList.addRecord(savingObj);","lastModifiedDate":"2021-03-17"},{"lineNumber":175,"author":{"gitId":"gerardtwk"},"content":"            storage.saveData(recordList, borrowersCreditScoreForReturnedLoans);","lastModifiedDate":"2021-03-24"},{"lineNumber":176,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printSuccessfulAdd(savingObj, recordList.getRecordCount());","lastModifiedDate":"2021-03-17"},{"lineNumber":177,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":178,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":179,"author":{"gitId":"jonahtwl"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"jonahtwl":40,"marklowsk":48,"LeeHanYongAndy":76,"gerardtwk":15}},{"path":"src/main/java/seedu/duke/command/BorrowersCreditScoreForReturnedLoans.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"public class BorrowersCreditScoreForReturnedLoans {","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"    private HashMap\u003cString,Integer\u003e borrowersCreditScoreForReturnedLoansMap;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"    private static final long MAX_CREDIT_SCORE \u003d 100;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"    public BorrowersCreditScoreForReturnedLoans(HashMap\u003cString, Integer\u003e borrowersCreditScoreForReturnedLoansMapData) {","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"        this.borrowersCreditScoreForReturnedLoansMap \u003d borrowersCreditScoreForReturnedLoansMapData;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"    public int getCurrentBorrowerCreditScoreForReturnedLoans(String borrowerNameInLowerCase) {","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"        if (borrowersCreditScoreForReturnedLoansMap.containsKey(borrowerNameInLowerCase)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"            return borrowersCreditScoreForReturnedLoansMap.get(borrowerNameInLowerCase);","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"        return (int) MAX_CREDIT_SCORE;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":"    public void insertCurrentBorrowerCreditScoreForReturnedLoans(String borrowerNameInLowerCase, int creditScore) {","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"gerardtwk"},"content":"        borrowersCreditScoreForReturnedLoansMap.put(borrowerNameInLowerCase, creditScore);","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"gerardtwk"},"content":"    public Set\u003cString\u003e getBorrowersNamesInLowerCase() {","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"gerardtwk"},"content":"        return borrowersCreditScoreForReturnedLoansMap.keySet();","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"gerardtwk"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"gerardtwk":28}},{"path":"src/main/java/seedu/duke/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"public abstract class Command {","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"    public abstract void execute(RecordList recordList, Ui ui, Storage storage, BorrowersCreditScoreForReturnedLoans","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"            borrowersCreditScoreForReturnedLoans);","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"jonahtwl":8,"gerardtwk":2}},{"path":"src/main/java/seedu/duke/command/CommandHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.ListCommand.COMMAND_LIST;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.AddCommand.COMMAND_ADD;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.command.ReturnCommand.COMMAND_RETURN;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.RemoveCommand.COMMAND_REMOVE;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.ViewCommand.COMMAND_VIEW;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.HelpCommand.COMMAND_HELP;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.ExitCommand.COMMAND_EXIT;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"import static seedu.duke.command.CreditScoreCommand.COMMAND_CREDIT_SCORE;","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.common.Constant.FINUX_LOGGER;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"LeeHanYongAndy"},"content":"public class CommandHandler {","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_INVALID_COMMAND \u003d \"Invalid command: \";","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"    private static final String LOGGER_OKAY_MESSAGE \u003d \"command object successfully created.\";","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"    private static final int INDEX_OF_COMMAND \u003d 0;","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"    private Command createCommand(ArrayList\u003cString\u003e parsedArguments, RecordList recordList)","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"            throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"jonahtwl"},"content":"        String commandWord \u003d parsedArguments.get(INDEX_OF_COMMAND);","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"            return new ListCommand(parsedArguments);","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"        case COMMAND_ADD:","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":"            return new AddCommand(parsedArguments);","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"gerardtwk"},"content":"        case COMMAND_RETURN:","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"LeeHanYongAndy"},"content":"            return new ReturnCommand(parsedArguments, recordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"        case COMMAND_REMOVE:","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"LeeHanYongAndy"},"content":"            return new RemoveCommand(parsedArguments, recordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"marklowsk"},"content":"        case COMMAND_VIEW:","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"marklowsk"},"content":"            return new ViewCommand(parsedArguments);","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"        case COMMAND_HELP:","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"            return new HelpCommand(parsedArguments);","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"marklowsk"},"content":"        case COMMAND_EXIT:","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"marklowsk"},"content":"            return new ExitCommand(parsedArguments);","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"tzexern"},"content":"        case COMMAND_CREDIT_SCORE:","lastModifiedDate":"2021-03-19"},{"lineNumber":43,"author":{"gitId":"tzexern"},"content":"            return new CreditScoreCommand(parsedArguments);","lastModifiedDate":"2021-03-19"},{"lineNumber":44,"author":{"gitId":"marklowsk"},"content":"        case \"\":","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"marklowsk"},"content":"            return null;","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"jonahtwl"},"content":"        default:","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(ERROR_INVALID_COMMAND + commandWord);","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"marklowsk"},"content":"    public Command parseCommand(ArrayList\u003cString\u003e parsedString, RecordList recordList) {","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"jonahtwl"},"content":"        try {","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"marklowsk"},"content":"            Command command \u003d createCommand(parsedString, recordList);","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"gerardtwk"},"content":"            FINUX_LOGGER.logInfo(LOGGER_OKAY_MESSAGE);","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"gerardtwk"},"content":"            return command;","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"jonahtwl"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"jonahtwl"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"gerardtwk"},"content":"            FINUX_LOGGER.logWarning(e.getMessage());","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"jonahtwl"},"content":"            return null;","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"tzexern":4,"jonahtwl":16,"LeeHanYongAndy":6,"marklowsk":30,"gerardtwk":6}},{"path":"src/main/java/seedu/duke/command/CreditScoreCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.ArgumentType;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Loan;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Record;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"tzexern"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.getValue;","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateArguments;","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.command.Utils.getDaysDifference;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.command.Utils.computeCreditScore;","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"/**","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":" * Handles all operations related to the credit score command.","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":" */","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"public class CreditScoreCommand extends Command {","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"    private static final ArgumentType[] ARGUMENT_TYPE_ORDER \u003d {","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.COMMAND,","lastModifiedDate":"2021-03-19"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.VALUE","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"    };","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"    protected static final String COMMAND_CREDIT_SCORE \u003d \"creditscore\";","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"gerardtwk"},"content":"    private final String borrowerName;","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"     * Constructor to validate the format for credit score command.","lastModifiedDate":"2021-03-19"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":"     * @param arguments parsed input containing arguments.","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"tzexern"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-19"},{"lineNumber":34,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"    public CreditScoreCommand(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"gerardtwk"},"content":"        borrowerName \u003d getValue(arguments, COMMAND_CREDIT_SCORE);","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"marklowsk"},"content":"        validateArguments(arguments, ARGUMENT_TYPE_ORDER, COMMAND_CREDIT_SCORE);","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"tzexern"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"gerardtwk"},"content":"    public void execute(RecordList recordList, Ui ui, Storage storage, BorrowersCreditScoreForReturnedLoans","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"gerardtwk"},"content":"            borrowersCreditScoreForReturnedLoans) {","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"gerardtwk"},"content":"        int creditScore \u003d borrowersCreditScoreForReturnedLoans.getCurrentBorrowerCreditScoreForReturnedLoans(","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"gerardtwk"},"content":"                borrowerName.toLowerCase());","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"gerardtwk"},"content":"        for (int i \u003d 0; i \u003c recordList.getRecordCount(); i++) {","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"gerardtwk"},"content":"            Record currentRecord \u003d recordList.getRecordAt(i);","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"gerardtwk"},"content":"            if (currentRecord instanceof Loan) {","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"gerardtwk"},"content":"                Loan currentLoan \u003d (Loan) currentRecord;","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"gerardtwk"},"content":"                boolean isLoanedToCurrentBorrower \u003d currentLoan.getBorrowerName().equalsIgnoreCase(borrowerName);","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"gerardtwk"},"content":"                boolean isNotReturned \u003d !currentLoan.isReturn();","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"gerardtwk"},"content":"                boolean isLoanedToCurrentBorrowerAndNotReturned \u003d isLoanedToCurrentBorrower \u0026\u0026 isNotReturned;","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"gerardtwk"},"content":"                if (isLoanedToCurrentBorrowerAndNotReturned) {","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"gerardtwk"},"content":"                    long daysDifference \u003d getDaysDifference(currentLoan.getIssueDate(), currentLoan.getReturnDate());","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"gerardtwk"},"content":"                    creditScore \u003d computeCreditScore(daysDifference, creditScore, currentLoan.isReturn());","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"gerardtwk"},"content":"                }","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"gerardtwk"},"content":"            }","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":60,"author":{"gitId":"gerardtwk"},"content":"        ui.printMessage(\"Credit score for \" + borrowerName + \" is: \" + creditScore);","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"tzexern"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"tzexern":27,"marklowsk":10,"gerardtwk":25}},{"path":"src/main/java/seedu/duke/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.ArgumentType;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateArguments;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"LeeHanYongAndy"},"content":" * Handles all operations related to the exit command.","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"    private static final ArgumentType[] ARGUMENT_TYPE_ORDER \u003d { ArgumentType.COMMAND };","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"    protected static final String COMMAND_EXIT \u003d \"exit\";","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"    private static final String MESSAGE_EXITING \u003d \"You are exiting FINUX now...\";","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Constructor to validate the format for exit command.","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"    public ExitCommand(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"        validateArguments(arguments, ARGUMENT_TYPE_ORDER, COMMAND_EXIT);","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"     * Executes the exit function.","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param ui      is the Ui object that interacts with the user.","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param storage is the Storage object that reads and writes to the save file.","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"gerardtwk"},"content":"    public void execute(RecordList recordList, Ui ui, Storage storage, BorrowersCreditScoreForReturnedLoans","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"gerardtwk"},"content":"            borrowersCreditScoreForReturnedLoans) {","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(MESSAGE_EXITING);","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Check if command is a instance of ExitCommand type.","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param command is the Command object containing the type of command.","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return true if command is exit command type, false if command is not exit command type.","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"jonahtwl"},"content":"    public static boolean isExit(Command command) {","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"jonahtwl"},"content":"        return command instanceof ExitCommand;","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"jonahtwl"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"jonahtwl":21,"marklowsk":12,"LeeHanYongAndy":16,"gerardtwk":2}},{"path":"src/main/java/seedu/duke/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.ArgumentType;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":"import seedu.duke.ui.HelpPage;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateArguments;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"import static seedu.duke.command.Utils.validateHelpType;","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":" * Handles all operations related to the help command.","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final ArgumentType[] ARGUMENT_TYPE_ORDER \u003d {","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArgumentType.COMMAND,","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArgumentType.VALUE","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"    };","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"    protected static final String COMMAND_HELP \u003d \"help\";","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static String HELP_TYPE;","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Constructor to validate the format for help command.","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"    public HelpCommand(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":"        validateArguments(arguments, ARGUMENT_TYPE_ORDER, COMMAND_HELP);","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"        HELP_TYPE \u003d validateHelpType(arguments, COMMAND_HELP);","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Executes the help function.","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param ui      is the Ui object that interacts with the user.","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param storage is the Storage object that reads and writes to the save file.","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"marklowsk"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"gerardtwk"},"content":"    public void execute(RecordList recordList, Ui ui, Storage storage, BorrowersCreditScoreForReturnedLoans","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"gerardtwk"},"content":"            borrowersCreditScoreForReturnedLoans) {","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"        HelpPage.printHelp(HELP_TYPE);","lastModifiedDate":"2021-03-19"},{"lineNumber":48,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"jonahtwl":1,"marklowsk":21,"LeeHanYongAndy":25,"gerardtwk":2}},{"path":"src/main/java/seedu/duke/command/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.ArgumentType;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.RecordType;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.hasOption;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateArguments;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateOptions;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_EXPENSE;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_LOAN;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_SAVING;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":" * Handles all operations related to the list command.","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"    private static final String[] VALID_OPTIONS \u003d {OPTION_EXPENSE, OPTION_LOAN, OPTION_SAVING};","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"    private static final ArgumentType[] ARGUMENT_TYPE_ORDER \u003d {","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.COMMAND,","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.OPTION,","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.EMPTY_VALUE","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"    };","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"    protected static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":"    private RecordType recordType;","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Constructor to validate the format for list command.","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"    public ListCommand(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"        validateOptions(arguments, COMMAND_LIST, VALID_OPTIONS, VALID_OPTIONS);","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"        checkRecordType(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"LeeHanYongAndy"},"content":"        validateArguments(arguments, ARGUMENT_TYPE_ORDER, COMMAND_LIST);","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Check if the input contains the correct record type and options.","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing the options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"LeeHanYongAndy"},"content":"    private void checkRecordType(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"marklowsk"},"content":"        if (hasOption(arguments, OPTION_EXPENSE)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"marklowsk"},"content":"            recordType \u003d RecordType.EXPENSE;","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"marklowsk"},"content":"        } else if (hasOption(arguments, OPTION_LOAN)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"marklowsk"},"content":"            recordType \u003d RecordType.LOAN;","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"marklowsk"},"content":"        } else if (hasOption(arguments, OPTION_SAVING)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"marklowsk"},"content":"            recordType \u003d RecordType.SAVING;","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"marklowsk"},"content":"        } else {","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(\"missing option: [-e | -l | -s]\", COMMAND_LIST);","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Executes the list function.","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"LeeHanYongAndy"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param ui      is the Ui object that interacts with the user.","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param storage is the Storage object that reads and writes to the save file.","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"marklowsk"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"gerardtwk"},"content":"    public void execute(RecordList recordList, Ui ui, Storage storage, BorrowersCreditScoreForReturnedLoans","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"gerardtwk"},"content":"            borrowersCreditScoreForReturnedLoans) {","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"gerardtwk"},"content":"        assert recordList !\u003d null : \"recordList should not be null\";","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"gerardtwk"},"content":"        assert ui !\u003d null : \"ui should not be null\";","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"gerardtwk"},"content":"        assert storage !\u003d null : \"storage should not be null\";","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"marklowsk"},"content":"        switch (recordType) {","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"marklowsk"},"content":"        case EXPENSE:","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printExpenses(recordList);","lastModifiedDate":"2021-03-11"},{"lineNumber":78,"author":{"gitId":"marklowsk"},"content":"            break;","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"marklowsk"},"content":"        case LOAN:","lastModifiedDate":"2021-03-09"},{"lineNumber":80,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printLoans(recordList);","lastModifiedDate":"2021-03-11"},{"lineNumber":81,"author":{"gitId":"marklowsk"},"content":"            break;","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"marklowsk"},"content":"        case SAVING:","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"marklowsk"},"content":"            // Fallthrough","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"marklowsk"},"content":"        default:","lastModifiedDate":"2021-03-09"},{"lineNumber":85,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printSavings(recordList);","lastModifiedDate":"2021-03-11"},{"lineNumber":86,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":87,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":88,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"jonahtwl":1,"marklowsk":54,"LeeHanYongAndy":27,"gerardtwk":6}},{"path":"src/main/java/seedu/duke/command/RemoveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.ArgumentType;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":"import seedu.duke.record.Record;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.checkInvalidOptions;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.checkOptionConflict;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.getOptionValue;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.hasOption;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateArguments;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateOptions;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_EXPENSE;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_INDEX;","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_LOAN;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_SAVING;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":"import static seedu.duke.common.Validators.validateIndex;","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":" * Handles all operations related to the remove command.","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"public class RemoveCommand extends Command {","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"    private static final String[] VALID_OPTIONS \u003d {OPTION_INDEX};","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"    private static final ArgumentType[] ARGUMENT_TYPE_ORDER \u003d {","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.COMMAND,","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.OPTION,","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.VALUE","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":"    };","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"    protected static final String COMMAND_REMOVE \u003d \"remove\";","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"    private String recordNumberStr;","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"    private int recordNumberInt;","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Constructor to validate the format for remove command.","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"LeeHanYongAndy"},"content":"    public RemoveCommand(ArrayList\u003cString\u003e arguments, RecordList recordList) throws CommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"marklowsk"},"content":"        validateOptions(arguments, COMMAND_REMOVE, VALID_OPTIONS, VALID_OPTIONS);","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"        recordNumberStr \u003d getIndexInString(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"LeeHanYongAndy"},"content":"        recordNumberInt \u003d getIndexInInteger(arguments, recordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"marklowsk"},"content":"        validateArguments(arguments, ARGUMENT_TYPE_ORDER, COMMAND_REMOVE);","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Get the index field in String.","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a String containing the index of the record.","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"LeeHanYongAndy"},"content":"    private String getIndexInString(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"marklowsk"},"content":"        if (hasOption(arguments, OPTION_INDEX)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"LeeHanYongAndy"},"content":"            return getOptionValue(arguments, COMMAND_REMOVE, OPTION_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"marklowsk"},"content":"        } else {","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(\"missing option: -i\", COMMAND_REMOVE);","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Get the index field in Integer.","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a Integer containing the index of the record.","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"LeeHanYongAndy"},"content":"    private int getIndexInInteger(ArrayList\u003cString\u003e arguments, RecordList recordList) throws CommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"tzexern"},"content":"        try {","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"LeeHanYongAndy"},"content":"            return validateIndex(getOptionValue(arguments, COMMAND_REMOVE, OPTION_INDEX), recordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"tzexern"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"tzexern"},"content":"            throw new CommandException(\"Index \\\"\" + recordNumberStr + \"\\\" is not an integer!\", COMMAND_REMOVE);","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"tzexern"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"tzexern"},"content":"            throw new CommandException(\"Index \\\"\" + recordNumberStr + \"\\\" is out of bounds!\", COMMAND_REMOVE);","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"tzexern"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":83,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":84,"author":{"gitId":"tzexern"},"content":"     * Executes the delete function.","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"tzexern"},"content":"     * Prints a message containing the record that will be removed.","lastModifiedDate":"2021-03-11"},{"lineNumber":86,"author":{"gitId":"tzexern"},"content":"     * Removes the record at the specified index.","lastModifiedDate":"2021-03-11"},{"lineNumber":87,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":88,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"tzexern"},"content":"     * @param ui      is the Ui object that interacts with the user.","lastModifiedDate":"2021-03-11"},{"lineNumber":90,"author":{"gitId":"tzexern"},"content":"     * @param storage is the Storage object that reads and writes to the save file.","lastModifiedDate":"2021-03-11"},{"lineNumber":91,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":92,"author":{"gitId":"marklowsk"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":93,"author":{"gitId":"gerardtwk"},"content":"    public void execute(RecordList recordList, Ui ui, Storage storage, BorrowersCreditScoreForReturnedLoans","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"gerardtwk"},"content":"            borrowersCreditScoreForReturnedLoans) {","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"LeeHanYongAndy"},"content":"        Record currentRecord \u003d recordList.getRecordAt(recordNumberInt);","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"tzexern"},"content":"        ui.printMessage(\"This record will be removed: \" + currentRecord);","lastModifiedDate":"2021-03-12"},{"lineNumber":97,"author":{"gitId":"LeeHanYongAndy"},"content":"        recordList.deleteRecordAt(recordNumberInt);","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"gerardtwk"},"content":"        storage.saveData(recordList, borrowersCreditScoreForReturnedLoans);","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":100,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"tzexern":20,"jonahtwl":1,"marklowsk":42,"LeeHanYongAndy":34,"gerardtwk":3}},{"path":"src/main/java/seedu/duke/command/ReturnCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.common.ArgumentType;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Loan;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Record;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.command.Utils.getOptionValue;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.command.Utils.hasOption;","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateOptions;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.common.Constant.OPTION_DATE;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.common.Constant.OPTION_INDEX;","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.common.Validators.validateDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"import static seedu.duke.common.Validators.validateIndex;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.command.Utils.getDaysDifference;","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.command.Utils.computeCreditScore;","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"LeeHanYongAndy"},"content":" * Handles all operations related to the return command.","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"gerardtwk"},"content":"public class ReturnCommand extends Command {","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"gerardtwk"},"content":"    private static final String[] VALID_OPTIONS \u003d {OPTION_INDEX, OPTION_DATE};","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"gerardtwk"},"content":"    private static final String[] CONFLICT_OPTIONS \u003d {};","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"gerardtwk"},"content":"    protected static final String COMMAND_RETURN \u003d \"return\";","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"gerardtwk"},"content":"    private final String recordNumberStr;","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"gerardtwk"},"content":"    private final int recordNumberInt;","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"gerardtwk"},"content":"    private final LocalDate returnDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Constructor to validate the format for return command.","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"gerardtwk"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments  parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"    public ReturnCommand(ArrayList\u003cString\u003e arguments, RecordList recordList) throws CommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"gerardtwk"},"content":"        validateOptions(arguments, COMMAND_RETURN, VALID_OPTIONS, CONFLICT_OPTIONS);","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"LeeHanYongAndy"},"content":"        recordNumberStr \u003d getIndexInString(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"        recordNumberInt \u003d getIndexInInteger(arguments, recordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"gerardtwk"},"content":"        returnDate \u003d getDate(arguments);","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Get the index field in String.","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"gerardtwk"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a String containing the index of the record.","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"LeeHanYongAndy"},"content":"    private String getIndexInString(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"gerardtwk"},"content":"        if (hasOption(arguments, OPTION_INDEX)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"LeeHanYongAndy"},"content":"            return getOptionValue(arguments, COMMAND_RETURN, OPTION_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"gerardtwk"},"content":"        throw new CommandException(\"missing option: -i\", COMMAND_RETURN);","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Get the index field in Integer.","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"gerardtwk"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments  parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a Integer containing the index of the record.","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"LeeHanYongAndy"},"content":"    private int getIndexInInteger(ArrayList\u003cString\u003e arguments, RecordList recordList) throws CommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"tzexern"},"content":"        try {","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"LeeHanYongAndy"},"content":"            return validateIndex(getOptionValue(arguments, COMMAND_RETURN, OPTION_INDEX), recordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"tzexern"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"tzexern"},"content":"            throw new CommandException(\"Index \\\"\" + recordNumberStr + \"\\\" is not an integer!\", COMMAND_RETURN);","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"tzexern"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"tzexern"},"content":"            throw new CommandException(\"Index \\\"\" + recordNumberStr + \"\\\" is out of bounds!\", COMMAND_RETURN);","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"tzexern"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":81,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":82,"author":{"gitId":"gerardtwk"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"gerardtwk"},"content":"     * Gets the date field.","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"gerardtwk"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"gerardtwk"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"gerardtwk"},"content":"     * @return a LocalDate object containing the date of the record.","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"gerardtwk"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"gerardtwk"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"gerardtwk"},"content":"    private LocalDate getDate(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"gerardtwk"},"content":"        try {","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"gerardtwk"},"content":"            return validateDate(getOptionValue(arguments, COMMAND_RETURN, OPTION_DATE));","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"gerardtwk"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"gerardtwk"},"content":"            throw new CommandException(e.getMessage(), COMMAND_RETURN);","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"gerardtwk"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":98,"author":{"gitId":"gerardtwk"},"content":"     * Executes the return function.","lastModifiedDate":"2021-03-11"},{"lineNumber":99,"author":{"gitId":"gerardtwk"},"content":"     * Prints a message containing the loan that will be marked as returned.","lastModifiedDate":"2021-03-11"},{"lineNumber":100,"author":{"gitId":"gerardtwk"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":101,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"gerardtwk"},"content":"     * @param ui         is the Ui object that interacts with the user.","lastModifiedDate":"2021-03-11"},{"lineNumber":103,"author":{"gitId":"gerardtwk"},"content":"     * @param storage    is the Storage object that reads and writes to the save file.","lastModifiedDate":"2021-03-11"},{"lineNumber":104,"author":{"gitId":"gerardtwk"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":105,"author":{"gitId":"gerardtwk"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":106,"author":{"gitId":"gerardtwk"},"content":"    public void execute(RecordList recordList, Ui ui, Storage storage, BorrowersCreditScoreForReturnedLoans","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"gerardtwk"},"content":"            borrowersCreditScoreForReturnedLoans) {","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"LeeHanYongAndy"},"content":"        Record currentRecord \u003d recordList.getRecordAt(recordNumberInt);","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"gerardtwk"},"content":"        if (currentRecord instanceof Loan) {","lastModifiedDate":"2021-03-11"},{"lineNumber":110,"author":{"gitId":"gerardtwk"},"content":"            Loan currentLoan \u003d (Loan) currentRecord;","lastModifiedDate":"2021-03-11"},{"lineNumber":111,"author":{"gitId":"gerardtwk"},"content":"            if (!currentLoan.isReturn()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"gerardtwk"},"content":"                currentLoan.markAsReturned(returnDate);","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"gerardtwk"},"content":"                String borrowerNameInLowerCase \u003d currentLoan.getBorrowerName().toLowerCase();","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"gerardtwk"},"content":"                int creditScore \u003d borrowersCreditScoreForReturnedLoans.getCurrentBorrowerCreditScoreForReturnedLoans(","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"gerardtwk"},"content":"                        borrowerNameInLowerCase);","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"gerardtwk"},"content":"                long daysDifference \u003d getDaysDifference(currentLoan.getIssueDate(), currentLoan.getReturnDate());","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"gerardtwk"},"content":"                creditScore \u003d computeCreditScore(daysDifference, creditScore, currentLoan.isReturn());","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"gerardtwk"},"content":"                borrowersCreditScoreForReturnedLoans.insertCurrentBorrowerCreditScoreForReturnedLoans(","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"gerardtwk"},"content":"                        borrowerNameInLowerCase, creditScore);","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"gerardtwk"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":121,"author":{"gitId":"gerardtwk"},"content":"            ui.printMessage(\"Loan marked as returned: \" + currentLoan);","lastModifiedDate":"2021-03-11"},{"lineNumber":122,"author":{"gitId":"gerardtwk"},"content":"            storage.saveData(recordList, borrowersCreditScoreForReturnedLoans);","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"gerardtwk"},"content":"            return;","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":125,"author":{"gitId":"gerardtwk"},"content":"        ui.printMessage(\"Specified record number is not a loan!\");","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":127,"author":{"gitId":"gerardtwk"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"tzexern":8,"marklowsk":1,"LeeHanYongAndy":33,"gerardtwk":85}},{"path":"src/main/java/seedu/duke/command/Utils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"import org.apache.commons.lang3.StringUtils;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.ArgumentType;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"import org.apache.commons.lang3.ArrayUtils;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":" * Provides common validation methods for {@code Command} validation.","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"public class Utils {","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_MISSING_OPTION \u003d \"missing option: \";","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_INVALID_OPTION \u003d \"invalid option: \";","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_MISSING_OPTION_VALUE \u003d \"value of option %s is missing.\";","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_MISSING_ARGUMENT_VALUE \u003d \"missing argument value.\";","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_MISSING_VALUE \u003d \"missing value after command.\";","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_DUPLICATE_OPTION \u003d \"duplicate option: \";","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_CONFLICT_OPTION \u003d \"conflict with options: \";","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_TOO_MANY_ARGUMENTS \u003d \"too many arguments.\";","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_TOO_FEW_ARGUMENTS \u003d \"not enough arguments.\";","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_INVALID_ORDER \u003d \"invalid command order, \";","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_INVALID_INPUT \u003d \"invalid input: \";","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"    private static final String REGEX_OPTION \u003d \"^-[a-zA-Z]$\";","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String ERROR_WRONG_HELP_TYPE \u003d \"invalid help type: \";","lastModifiedDate":"2021-03-19"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"    private static final int VALUE_INDEX \u003d 1;","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"gerardtwk"},"content":"    private static final long MAX_CREDIT_SCORE \u003d 100;","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"gerardtwk"},"content":"    private static final long MIN_CREDIT_SCORE \u003d 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"gerardtwk"},"content":"    private static final long RETURN_REWARD_FIRST_WEEK \u003d 5;","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"gerardtwk"},"content":"    private static final long RETURN_PENALTY_SECOND_WEEK \u003d -10;","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"gerardtwk"},"content":"    private static final long RETURN_PENALTY_FORTH_WEEK \u003d -20;","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"gerardtwk"},"content":"    private static final long RETURN_PENALTY_FORTH_WEEK_ONWARDS \u003d -50;","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"gerardtwk"},"content":"    private static final long FIRST_WEEK \u003d 7;","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"gerardtwk"},"content":"    private static final long SECOND_WEEK \u003d 14;","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"gerardtwk"},"content":"    private static final long FORTH_WEEK \u003d 28;","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"marklowsk"},"content":"     * Checks {@code value} to see if it is not {@code null} and not empty.","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"marklowsk"},"content":"     * @param value        the String to check.","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"marklowsk"},"content":"     * @param errorMessage the exception message to print.","lastModifiedDate":"2021-03-19"},{"lineNumber":50,"author":{"gitId":"marklowsk"},"content":"     * @throws CommandException if {@code value} is {@code null} or empty.","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"marklowsk"},"content":"    private static void validateNotEmpty(String value, String errorMessage) throws CommandException {","lastModifiedDate":"2021-03-19"},{"lineNumber":53,"author":{"gitId":"marklowsk"},"content":"        if (value \u003d\u003d null || value.length() \u003d\u003d 0) {","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(errorMessage);","lastModifiedDate":"2021-03-19"},{"lineNumber":55,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"marklowsk"},"content":"     * Checks {@code value} to see if it is not {@code null} and not empty,","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"marklowsk"},"content":"     * and returns it if {@code true}.","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"marklowsk"},"content":"     * @param value   the {@code String} to check.","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"marklowsk"},"content":"     * @param command the name of the {@code Command} calling it.","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"marklowsk"},"content":"     * @param option  the name of the {@code option} pertaining to the {@code value}.","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"marklowsk"},"content":"     * @return the {@code value} if not empty","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"marklowsk"},"content":"     * @throws CommandException if {@code value} is null or empty.","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"marklowsk"},"content":"    private static String validateNotEmpty(String value, String command, String option)","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"marklowsk"},"content":"            throws CommandException {","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"marklowsk"},"content":"        if (value !\u003d null \u0026\u0026 value.length() \u003e 0) {","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"marklowsk"},"content":"            return value;","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"marklowsk"},"content":"        String errorMessage \u003d String.format(ERROR_MISSING_OPTION_VALUE, option);","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"marklowsk"},"content":"        throw new CommandException(errorMessage, command);","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"marklowsk"},"content":"     * Extracts the {@code option}\u0027s {@code value} from {@code arguments} {@code ArrayList}.\u003cbr\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"marklowsk"},"content":"     * Example: {@code [\"return\", \"-i\", \"2\"], option \u003d \"-i\", value \u003d \"2\"}.\u003cbr\u003e","lastModifiedDate":"2021-03-19"},{"lineNumber":80,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"marklowsk"},"content":"     * @param arguments an {@code ArrayList} containing {@code Command} arguments.","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"marklowsk"},"content":"     * @param command   the name of the {@code Command} calling it.","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"marklowsk"},"content":"     * @param option    the name of the {@code option} pertaining to the {@code value}.","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"marklowsk"},"content":"     * @return the {@code option}\u0027s {@code value}","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"marklowsk"},"content":"     * @throws CommandException if {@code option} does not exist, or {@code value} is missing or empty.","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"marklowsk"},"content":"     * @see #validateNotEmpty(String, String, String)","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"marklowsk"},"content":"    public static String getOptionValue(ArrayList\u003cString\u003e arguments, String command,","lastModifiedDate":"2021-03-09"},{"lineNumber":89,"author":{"gitId":"marklowsk"},"content":"                                        String option) throws CommandException {","lastModifiedDate":"2021-03-09"},{"lineNumber":90,"author":{"gitId":"marklowsk"},"content":"        if (!hasOption(arguments, option)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":91,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(ERROR_MISSING_OPTION + option, command);","lastModifiedDate":"2021-03-09"},{"lineNumber":92,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":93,"author":{"gitId":"marklowsk"},"content":"        int index \u003d arguments.indexOf(option);","lastModifiedDate":"2021-03-09"},{"lineNumber":94,"author":{"gitId":"marklowsk"},"content":"        if (index \u003c arguments.size() - 1) {","lastModifiedDate":"2021-03-09"},{"lineNumber":95,"author":{"gitId":"marklowsk"},"content":"            String value \u003d arguments.get(index + 1);","lastModifiedDate":"2021-03-10"},{"lineNumber":96,"author":{"gitId":"marklowsk"},"content":"            return validateNotEmpty(value, command, option);","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":98,"author":{"gitId":"marklowsk"},"content":"        // Below return results in an ERROR_MISSING_OPTION_VALUE exception thrown.","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"marklowsk"},"content":"        return validateNotEmpty(\"\", command, option);","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":101,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":102,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":103,"author":{"gitId":"marklowsk"},"content":"     * Gets the value of the second argument from {@code arguments}.","lastModifiedDate":"2021-03-19"},{"lineNumber":104,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":105,"author":{"gitId":"marklowsk"},"content":"     * @param arguments an {@code ArrayList} containing {@code Command} arguments.","lastModifiedDate":"2021-03-19"},{"lineNumber":106,"author":{"gitId":"marklowsk"},"content":"     * @param command   the name of the {@code Command} calling it.","lastModifiedDate":"2021-03-19"},{"lineNumber":107,"author":{"gitId":"marklowsk"},"content":"     * @return the non-empty value.","lastModifiedDate":"2021-03-19"},{"lineNumber":108,"author":{"gitId":"marklowsk"},"content":"     * @throws CommandException if value is missing or empty.","lastModifiedDate":"2021-03-19"},{"lineNumber":109,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":110,"author":{"gitId":"marklowsk"},"content":"    public static String getValue(ArrayList\u003cString\u003e arguments, String command)","lastModifiedDate":"2021-03-19"},{"lineNumber":111,"author":{"gitId":"marklowsk"},"content":"            throws CommandException {","lastModifiedDate":"2021-03-19"},{"lineNumber":112,"author":{"gitId":"marklowsk"},"content":"        assert arguments !\u003d null : \"arguments is null!\";","lastModifiedDate":"2021-03-19"},{"lineNumber":113,"author":{"gitId":"marklowsk"},"content":"        boolean isValuable \u003d (arguments.size() \u003e VALUE_INDEX)","lastModifiedDate":"2021-03-19"},{"lineNumber":114,"author":{"gitId":"marklowsk"},"content":"                \u0026\u0026 (arguments.get(VALUE_INDEX).length() !\u003d 0);","lastModifiedDate":"2021-03-19"},{"lineNumber":115,"author":{"gitId":"marklowsk"},"content":"        if (isValuable) {","lastModifiedDate":"2021-03-19"},{"lineNumber":116,"author":{"gitId":"marklowsk"},"content":"            return arguments.get(VALUE_INDEX);","lastModifiedDate":"2021-03-19"},{"lineNumber":117,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":118,"author":{"gitId":"marklowsk"},"content":"        throw new CommandException(ERROR_MISSING_VALUE, command);","lastModifiedDate":"2021-03-19"},{"lineNumber":119,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":120,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":121,"author":{"gitId":"marklowsk"},"content":"    // This hasOption method is only meant to improve readability.","lastModifiedDate":"2021-03-13"},{"lineNumber":122,"author":{"gitId":"marklowsk"},"content":"    public static boolean hasOption(ArrayList\u003cString\u003e arguments, String option) {","lastModifiedDate":"2021-03-09"},{"lineNumber":123,"author":{"gitId":"marklowsk"},"content":"        assert arguments !\u003d null : \"arguments is null!\";","lastModifiedDate":"2021-03-18"},{"lineNumber":124,"author":{"gitId":"marklowsk"},"content":"        return arguments.contains(option);","lastModifiedDate":"2021-03-09"},{"lineNumber":125,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":126,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":127,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":128,"author":{"gitId":"marklowsk"},"content":"     * Checks {@code arguments} for invalid, duplicate and conflict options.","lastModifiedDate":"2021-03-14"},{"lineNumber":129,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":130,"author":{"gitId":"marklowsk"},"content":"     * @param arguments    an {@code ArrayList} containing {@code Command} arguments.","lastModifiedDate":"2021-03-13"},{"lineNumber":131,"author":{"gitId":"marklowsk"},"content":"     * @param command      the name of the {@code Command} calling it.","lastModifiedDate":"2021-03-13"},{"lineNumber":132,"author":{"gitId":"marklowsk"},"content":"     * @param validOptions a {@code String} array containing valid options pertaining to {@code command}.","lastModifiedDate":"2021-03-13"},{"lineNumber":133,"author":{"gitId":"marklowsk"},"content":"     * @param orOptions    a {@code String} array containing conflict options pertaining to {@code command}.","lastModifiedDate":"2021-03-13"},{"lineNumber":134,"author":{"gitId":"marklowsk"},"content":"     * @throws CommandException if {@code arguments} contains invalid/duplicate options and conflict options.","lastModifiedDate":"2021-03-14"},{"lineNumber":135,"author":{"gitId":"marklowsk"},"content":"     * @see #checkInvalidOptions(ArrayList, String, String...)","lastModifiedDate":"2021-03-13"},{"lineNumber":136,"author":{"gitId":"marklowsk"},"content":"     * @see #checkOptionConflict(ArrayList, String, String...)","lastModifiedDate":"2021-03-13"},{"lineNumber":137,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":138,"author":{"gitId":"marklowsk"},"content":"    public static void validateOptions(ArrayList\u003cString\u003e arguments, String command,","lastModifiedDate":"2021-03-13"},{"lineNumber":139,"author":{"gitId":"marklowsk"},"content":"                                       String[] validOptions, String[] orOptions) throws CommandException {","lastModifiedDate":"2021-03-13"},{"lineNumber":140,"author":{"gitId":"marklowsk"},"content":"        assert arguments !\u003d null : \"arguments is null!\";","lastModifiedDate":"2021-03-18"},{"lineNumber":141,"author":{"gitId":"marklowsk"},"content":"        checkInvalidOptions(arguments, command, validOptions);","lastModifiedDate":"2021-03-13"},{"lineNumber":142,"author":{"gitId":"marklowsk"},"content":"        checkOptionConflict(arguments, command, orOptions);","lastModifiedDate":"2021-03-13"},{"lineNumber":143,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":144,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":145,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":146,"author":{"gitId":"marklowsk"},"content":"     * Checks {@code arguments} for invalid/duplicate options.","lastModifiedDate":"2021-03-14"},{"lineNumber":147,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":148,"author":{"gitId":"marklowsk"},"content":"     * @param arguments    an {@code ArrayList} containing {@code Command} arguments.","lastModifiedDate":"2021-03-13"},{"lineNumber":149,"author":{"gitId":"marklowsk"},"content":"     * @param command      the name of the {@code Command} calling it.","lastModifiedDate":"2021-03-13"},{"lineNumber":150,"author":{"gitId":"marklowsk"},"content":"     * @param validOptions valid options pertaining to {@code command}.","lastModifiedDate":"2021-03-13"},{"lineNumber":151,"author":{"gitId":"marklowsk"},"content":"     * @throws CommandException if {@code arguments} contains an invalid or a duplicate option.","lastModifiedDate":"2021-03-14"},{"lineNumber":152,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":153,"author":{"gitId":"marklowsk"},"content":"    public static void checkInvalidOptions(ArrayList\u003cString\u003e arguments, String command,","lastModifiedDate":"2021-03-09"},{"lineNumber":154,"author":{"gitId":"marklowsk"},"content":"                                           String... validOptions) throws CommandException {","lastModifiedDate":"2021-03-09"},{"lineNumber":155,"author":{"gitId":"marklowsk"},"content":"        Set\u003cString\u003e nonDuplicates \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-09"},{"lineNumber":156,"author":{"gitId":"marklowsk"},"content":"        for (String arg : arguments) {","lastModifiedDate":"2021-03-09"},{"lineNumber":157,"author":{"gitId":"marklowsk"},"content":"            if (!isOption(arg)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":158,"author":{"gitId":"marklowsk"},"content":"                continue;","lastModifiedDate":"2021-03-09"},{"lineNumber":159,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":160,"author":{"gitId":"marklowsk"},"content":"            if (!ArrayUtils.contains(validOptions, arg)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":161,"author":{"gitId":"marklowsk"},"content":"                throw new CommandException(ERROR_INVALID_OPTION + arg, command);","lastModifiedDate":"2021-03-09"},{"lineNumber":162,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":163,"author":{"gitId":"marklowsk"},"content":"            if (!nonDuplicates.add(arg)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":164,"author":{"gitId":"marklowsk"},"content":"                throw new CommandException(ERROR_DUPLICATE_OPTION + arg, command);","lastModifiedDate":"2021-03-09"},{"lineNumber":165,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":166,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":167,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":168,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":169,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":170,"author":{"gitId":"marklowsk"},"content":"     * Checks {@code arguments} for conflict options.","lastModifiedDate":"2021-03-13"},{"lineNumber":171,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":172,"author":{"gitId":"marklowsk"},"content":"     * @param arguments an {@code ArrayList} containing {@code Command} arguments.","lastModifiedDate":"2021-03-13"},{"lineNumber":173,"author":{"gitId":"marklowsk"},"content":"     * @param command   the name of the {@code Command} calling it.","lastModifiedDate":"2021-03-13"},{"lineNumber":174,"author":{"gitId":"marklowsk"},"content":"     * @param orOptions conflict options pertaining to {@code command}.","lastModifiedDate":"2021-03-13"},{"lineNumber":175,"author":{"gitId":"marklowsk"},"content":"     * @throws CommandException if {@code arguments} contains a conflict option.","lastModifiedDate":"2021-03-13"},{"lineNumber":176,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":177,"author":{"gitId":"marklowsk"},"content":"    public static void checkOptionConflict(ArrayList\u003cString\u003e arguments, String command,","lastModifiedDate":"2021-03-09"},{"lineNumber":178,"author":{"gitId":"marklowsk"},"content":"                                           String... orOptions) throws CommandException {","lastModifiedDate":"2021-03-09"},{"lineNumber":179,"author":{"gitId":"marklowsk"},"content":"        String option \u003d null;","lastModifiedDate":"2021-03-09"},{"lineNumber":180,"author":{"gitId":"marklowsk"},"content":"        for (String arg : arguments) {","lastModifiedDate":"2021-03-09"},{"lineNumber":181,"author":{"gitId":"marklowsk"},"content":"            if (!isOption(arg)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":182,"author":{"gitId":"marklowsk"},"content":"                continue;","lastModifiedDate":"2021-03-09"},{"lineNumber":183,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":184,"author":{"gitId":"marklowsk"},"content":"            if (!ArrayUtils.contains(orOptions, arg)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":185,"author":{"gitId":"marklowsk"},"content":"                continue;","lastModifiedDate":"2021-03-09"},{"lineNumber":186,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":187,"author":{"gitId":"marklowsk"},"content":"            if (option \u003d\u003d null) {","lastModifiedDate":"2021-03-09"},{"lineNumber":188,"author":{"gitId":"marklowsk"},"content":"                option \u003d arg;","lastModifiedDate":"2021-03-09"},{"lineNumber":189,"author":{"gitId":"marklowsk"},"content":"            } else {","lastModifiedDate":"2021-03-09"},{"lineNumber":190,"author":{"gitId":"marklowsk"},"content":"                throw new CommandException(ERROR_CONFLICT_OPTION + option + \", \" + arg, command);","lastModifiedDate":"2021-03-09"},{"lineNumber":191,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":192,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":193,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":194,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":195,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":196,"author":{"gitId":"marklowsk"},"content":"     * Checks the {@code Command}\u0027s {@code arguments} ordering based on the {@code argumentTypeOrder}.\u003cbr\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":197,"author":{"gitId":"marklowsk"},"content":"     * Recommended for {@code Command}s with strict argument order.\u003cbr\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":198,"author":{"gitId":"marklowsk"},"content":"     * This method should be used only when:\u003cbr\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":199,"author":{"gitId":"marklowsk"},"content":"     * \u003cul\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":200,"author":{"gitId":"marklowsk"},"content":"     *     \u003cli\u003e{@link #validateOptions(ArrayList, String, String[], String[])} has been called, or\u003c/li\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":201,"author":{"gitId":"marklowsk"},"content":"     *     \u003cli\u003e{@code Command} does not require option validation.\u003c/li\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":202,"author":{"gitId":"marklowsk"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":203,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":204,"author":{"gitId":"marklowsk"},"content":"     * @param arguments         an {@code ArrayList} containing {@code Command} arguments.","lastModifiedDate":"2021-03-13"},{"lineNumber":205,"author":{"gitId":"marklowsk"},"content":"     * @param argumentTypeOrder an Enumeration array of type {@code ArgumentType} containing the argument","lastModifiedDate":"2021-03-13"},{"lineNumber":206,"author":{"gitId":"marklowsk"},"content":"     *                          type order.","lastModifiedDate":"2021-03-13"},{"lineNumber":207,"author":{"gitId":"marklowsk"},"content":"     * @param command           the name of the {@code Command} calling it.","lastModifiedDate":"2021-03-13"},{"lineNumber":208,"author":{"gitId":"marklowsk"},"content":"     * @throws CommandException if there is a violation to the argument type order.","lastModifiedDate":"2021-03-13"},{"lineNumber":209,"author":{"gitId":"marklowsk"},"content":"     * @see ArgumentType","lastModifiedDate":"2021-03-13"},{"lineNumber":210,"author":{"gitId":"marklowsk"},"content":"     * @see #validateArgument(String, ArgumentType, String)","lastModifiedDate":"2021-03-13"},{"lineNumber":211,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":212,"author":{"gitId":"marklowsk"},"content":"    public static void validateArguments(ArrayList\u003cString\u003e arguments, ArgumentType[] argumentTypeOrder,","lastModifiedDate":"2021-03-10"},{"lineNumber":213,"author":{"gitId":"marklowsk"},"content":"                                         String command) throws CommandException {","lastModifiedDate":"2021-03-10"},{"lineNumber":214,"author":{"gitId":"marklowsk"},"content":"        assert arguments !\u003d null : \"arguments is null!\";","lastModifiedDate":"2021-03-18"},{"lineNumber":215,"author":{"gitId":"marklowsk"},"content":"        assert argumentTypeOrder !\u003d null : \"argumentTypeOrder is null!\";","lastModifiedDate":"2021-03-18"},{"lineNumber":216,"author":{"gitId":"marklowsk"},"content":"        if (arguments.size() \u003e argumentTypeOrder.length) {","lastModifiedDate":"2021-03-10"},{"lineNumber":217,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(ERROR_TOO_MANY_ARGUMENTS, command);","lastModifiedDate":"2021-03-10"},{"lineNumber":218,"author":{"gitId":"marklowsk"},"content":"        } else if (arguments.size() \u003c argumentTypeOrder.length) {","lastModifiedDate":"2021-03-10"},{"lineNumber":219,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(ERROR_TOO_FEW_ARGUMENTS, command);","lastModifiedDate":"2021-03-10"},{"lineNumber":220,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":221,"author":{"gitId":"marklowsk"},"content":"        for (int i \u003d 0; i \u003c arguments.size(); i++) {","lastModifiedDate":"2021-03-10"},{"lineNumber":222,"author":{"gitId":"marklowsk"},"content":"            validateArgument(arguments.get(i), argumentTypeOrder[i], command);","lastModifiedDate":"2021-03-10"},{"lineNumber":223,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":224,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":225,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":226,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":227,"author":{"gitId":"marklowsk"},"content":"     * Checks {@code argument}\u0027s type matches {@code argumentType}.","lastModifiedDate":"2021-03-13"},{"lineNumber":228,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":229,"author":{"gitId":"marklowsk"},"content":"     * @param argument     a portion of the {@code Command}\u0027s arguments.","lastModifiedDate":"2021-03-13"},{"lineNumber":230,"author":{"gitId":"marklowsk"},"content":"     * @param argumentType an Enumeration of ArgumentType to match with.","lastModifiedDate":"2021-03-13"},{"lineNumber":231,"author":{"gitId":"marklowsk"},"content":"     * @param command      the name of the {@code Command} calling it.","lastModifiedDate":"2021-03-13"},{"lineNumber":232,"author":{"gitId":"marklowsk"},"content":"     * @throws CommandException if {@code argument}\u0027s type does not match {@code argumentType}.","lastModifiedDate":"2021-03-13"},{"lineNumber":233,"author":{"gitId":"marklowsk"},"content":"     * @see ArgumentType","lastModifiedDate":"2021-03-13"},{"lineNumber":234,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":235,"author":{"gitId":"marklowsk"},"content":"    private static void validateArgument(String argument, ArgumentType argumentType, String command)","lastModifiedDate":"2021-03-10"},{"lineNumber":236,"author":{"gitId":"marklowsk"},"content":"            throws CommandException {","lastModifiedDate":"2021-03-10"},{"lineNumber":237,"author":{"gitId":"marklowsk"},"content":"        switch (argumentType) {","lastModifiedDate":"2021-03-10"},{"lineNumber":238,"author":{"gitId":"marklowsk"},"content":"        case VALUE:","lastModifiedDate":"2021-03-10"},{"lineNumber":239,"author":{"gitId":"marklowsk"},"content":"            validateNotEmpty(argument, ERROR_MISSING_ARGUMENT_VALUE);","lastModifiedDate":"2021-03-19"},{"lineNumber":240,"author":{"gitId":"marklowsk"},"content":"            break;","lastModifiedDate":"2021-03-10"},{"lineNumber":241,"author":{"gitId":"marklowsk"},"content":"        case OPTION:","lastModifiedDate":"2021-03-10"},{"lineNumber":242,"author":{"gitId":"marklowsk"},"content":"            if (isOption(argument)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":243,"author":{"gitId":"marklowsk"},"content":"                break;","lastModifiedDate":"2021-03-10"},{"lineNumber":244,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-10"},{"lineNumber":245,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(ERROR_INVALID_ORDER + \"expected an option instead of \" + argument,","lastModifiedDate":"2021-03-10"},{"lineNumber":246,"author":{"gitId":"marklowsk"},"content":"                    command);","lastModifiedDate":"2021-03-10"},{"lineNumber":247,"author":{"gitId":"marklowsk"},"content":"        case COMMAND:","lastModifiedDate":"2021-03-10"},{"lineNumber":248,"author":{"gitId":"marklowsk"},"content":"            if (argument.equals(command)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":249,"author":{"gitId":"marklowsk"},"content":"                break;","lastModifiedDate":"2021-03-10"},{"lineNumber":250,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-10"},{"lineNumber":251,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(ERROR_INVALID_ORDER + \"expected command word.\");","lastModifiedDate":"2021-03-10"},{"lineNumber":252,"author":{"gitId":"marklowsk"},"content":"        case EMPTY_VALUE:","lastModifiedDate":"2021-03-10"},{"lineNumber":253,"author":{"gitId":"marklowsk"},"content":"            // Fallthrough","lastModifiedDate":"2021-03-10"},{"lineNumber":254,"author":{"gitId":"marklowsk"},"content":"        default:","lastModifiedDate":"2021-03-10"},{"lineNumber":255,"author":{"gitId":"marklowsk"},"content":"            if (argument.length() \u003e 0) {","lastModifiedDate":"2021-03-10"},{"lineNumber":256,"author":{"gitId":"marklowsk"},"content":"                throw new CommandException(ERROR_INVALID_INPUT + argument, command);","lastModifiedDate":"2021-03-10"},{"lineNumber":257,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-10"},{"lineNumber":258,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":259,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":260,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":261,"author":{"gitId":"LeeHanYongAndy"},"content":"    protected static String validateHelpType(ArrayList\u003cString\u003e argument, String command)","lastModifiedDate":"2021-03-19"},{"lineNumber":262,"author":{"gitId":"LeeHanYongAndy"},"content":"            throws CommandException {","lastModifiedDate":"2021-03-19"},{"lineNumber":263,"author":{"gitId":"LeeHanYongAndy"},"content":"        String helpType \u003d argument.get(1);","lastModifiedDate":"2021-03-19"},{"lineNumber":264,"author":{"gitId":"LeeHanYongAndy"},"content":"        if (StringUtils.equalsAny(helpType, \"all\", \"add\", \"creditscore\", \"exit\",","lastModifiedDate":"2021-03-19"},{"lineNumber":265,"author":{"gitId":"LeeHanYongAndy"},"content":"            \"list\", \"remove\", \"return\", \"view\")) {","lastModifiedDate":"2021-03-19"},{"lineNumber":266,"author":{"gitId":"LeeHanYongAndy"},"content":"            return helpType;","lastModifiedDate":"2021-03-19"},{"lineNumber":267,"author":{"gitId":"LeeHanYongAndy"},"content":"        } else {","lastModifiedDate":"2021-03-19"},{"lineNumber":268,"author":{"gitId":"LeeHanYongAndy"},"content":"            throw new CommandException(ERROR_WRONG_HELP_TYPE + helpType, command);","lastModifiedDate":"2021-03-19"},{"lineNumber":269,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":270,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":271,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":272,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":273,"author":{"gitId":"marklowsk"},"content":"     * Checks if {@code argument} is an option.\u003cbr\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":274,"author":{"gitId":"marklowsk"},"content":"     * An option can be in the form {@code \"-L\"}, where {@code L} is a letter of any case.","lastModifiedDate":"2021-03-13"},{"lineNumber":275,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":276,"author":{"gitId":"marklowsk"},"content":"     * @param argument a {@code String} to be checked.","lastModifiedDate":"2021-03-13"},{"lineNumber":277,"author":{"gitId":"marklowsk"},"content":"     * @return {@code true} if {@code argument} matches the {@link #REGEX_OPTION} {@code Pattern}.","lastModifiedDate":"2021-03-13"},{"lineNumber":278,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":279,"author":{"gitId":"marklowsk"},"content":"    public static boolean isOption(String argument) {","lastModifiedDate":"2021-03-13"},{"lineNumber":280,"author":{"gitId":"marklowsk"},"content":"        assert argument !\u003d null : \"argument is null!\";","lastModifiedDate":"2021-03-18"},{"lineNumber":281,"author":{"gitId":"marklowsk"},"content":"        return Pattern.matches(REGEX_OPTION, argument);","lastModifiedDate":"2021-03-13"},{"lineNumber":282,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":283,"author":{"gitId":"gerardtwk"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":284,"author":{"gitId":"gerardtwk"},"content":"    public static long getDaysDifference(LocalDate issueDate, LocalDate returnDate) {","lastModifiedDate":"2021-03-24"},{"lineNumber":285,"author":{"gitId":"tzexern"},"content":"        LocalDate fromDate \u003d issueDate;","lastModifiedDate":"2021-03-25"},{"lineNumber":286,"author":{"gitId":"tzexern"},"content":"        LocalDate toDate;","lastModifiedDate":"2021-03-25"},{"lineNumber":287,"author":{"gitId":"tzexern"},"content":"        if (returnDate \u003d\u003d null) {","lastModifiedDate":"2021-03-25"},{"lineNumber":288,"author":{"gitId":"tzexern"},"content":"            toDate \u003d LocalDate.now();","lastModifiedDate":"2021-03-25"},{"lineNumber":289,"author":{"gitId":"tzexern"},"content":"        } else {","lastModifiedDate":"2021-03-25"},{"lineNumber":290,"author":{"gitId":"tzexern"},"content":"            assert returnDate !\u003d null : \"returnDate should not be empty\";","lastModifiedDate":"2021-03-25"},{"lineNumber":291,"author":{"gitId":"tzexern"},"content":"            toDate \u003d returnDate;","lastModifiedDate":"2021-03-25"},{"lineNumber":292,"author":{"gitId":"tzexern"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":293,"author":{"gitId":"tzexern"},"content":"        long daysDifference \u003d ChronoUnit.DAYS.between(fromDate, toDate);","lastModifiedDate":"2021-03-25"},{"lineNumber":294,"author":{"gitId":"tzexern"},"content":"        return daysDifference;","lastModifiedDate":"2021-03-25"},{"lineNumber":295,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":296,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":297,"author":{"gitId":"gerardtwk"},"content":"    public static int computeCreditScore(long daysDifference, int currentCreditScore, boolean isReturn) {","lastModifiedDate":"2021-03-24"},{"lineNumber":298,"author":{"gitId":"gerardtwk"},"content":"        long computedCreditScore \u003d currentCreditScore;","lastModifiedDate":"2021-03-24"},{"lineNumber":299,"author":{"gitId":"gerardtwk"},"content":"        if (daysDifference \u003c FIRST_WEEK) {","lastModifiedDate":"2021-03-24"},{"lineNumber":300,"author":{"gitId":"gerardtwk"},"content":"            if (isReturn) {","lastModifiedDate":"2021-03-24"},{"lineNumber":301,"author":{"gitId":"gerardtwk"},"content":"                computedCreditScore +\u003d RETURN_REWARD_FIRST_WEEK;","lastModifiedDate":"2021-03-24"},{"lineNumber":302,"author":{"gitId":"gerardtwk"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":303,"author":{"gitId":"gerardtwk"},"content":"        } else if (daysDifference \u003c\u003d SECOND_WEEK) {","lastModifiedDate":"2021-03-24"},{"lineNumber":304,"author":{"gitId":"gerardtwk"},"content":"            computedCreditScore +\u003d RETURN_PENALTY_SECOND_WEEK;","lastModifiedDate":"2021-03-24"},{"lineNumber":305,"author":{"gitId":"gerardtwk"},"content":"        } else if (daysDifference \u003c\u003d FORTH_WEEK) {","lastModifiedDate":"2021-03-24"},{"lineNumber":306,"author":{"gitId":"gerardtwk"},"content":"            computedCreditScore +\u003d RETURN_PENALTY_FORTH_WEEK;","lastModifiedDate":"2021-03-24"},{"lineNumber":307,"author":{"gitId":"gerardtwk"},"content":"        } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":308,"author":{"gitId":"gerardtwk"},"content":"            computedCreditScore +\u003d RETURN_PENALTY_FORTH_WEEK_ONWARDS;","lastModifiedDate":"2021-03-24"},{"lineNumber":309,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":310,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":311,"author":{"gitId":"gerardtwk"},"content":"        if (computedCreditScore \u003e MAX_CREDIT_SCORE) {","lastModifiedDate":"2021-03-24"},{"lineNumber":312,"author":{"gitId":"gerardtwk"},"content":"            computedCreditScore \u003d MAX_CREDIT_SCORE;","lastModifiedDate":"2021-03-24"},{"lineNumber":313,"author":{"gitId":"gerardtwk"},"content":"        } else if (computedCreditScore \u003c MIN_CREDIT_SCORE) {","lastModifiedDate":"2021-03-24"},{"lineNumber":314,"author":{"gitId":"gerardtwk"},"content":"            computedCreditScore \u003d MIN_CREDIT_SCORE;","lastModifiedDate":"2021-03-24"},{"lineNumber":315,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":316,"author":{"gitId":"gerardtwk"},"content":"        return (int) computedCreditScore;","lastModifiedDate":"2021-03-24"},{"lineNumber":317,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":318,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"tzexern":10,"marklowsk":256,"LeeHanYongAndy":15,"gerardtwk":37}},{"path":"src/main/java/seedu/duke/command/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.ArgumentType;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.RecordType;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.checkInvalidOptions;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.checkOptionConflict;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.hasOption;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateArguments;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateOptions;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_EXPENSE;","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_LOAN;","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_SAVING;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":" * Handles all operations related to the view command.","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"    private static final String[] VALID_OPTIONS \u003d {OPTION_EXPENSE, OPTION_LOAN, OPTION_SAVING};","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"    private static final ArgumentType[] ARGUMENT_TYPE_ORDER \u003d {","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.COMMAND,","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.OPTION,","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.EMPTY_VALUE","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"    };","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":"    protected static final String COMMAND_VIEW \u003d \"view\";","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":"    private RecordType recordType;","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Constructor to validate the format for view command.","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"marklowsk"},"content":"    public ViewCommand(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"marklowsk"},"content":"        validateOptions(arguments, COMMAND_VIEW, VALID_OPTIONS, VALID_OPTIONS);","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"        checkRecordType(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"        validateArguments(arguments, ARGUMENT_TYPE_ORDER, COMMAND_VIEW);","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Check if the input contains the correct record type and options.","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing the options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"LeeHanYongAndy"},"content":"    private void checkRecordType(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"marklowsk"},"content":"        if (hasOption(arguments, OPTION_EXPENSE)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"marklowsk"},"content":"            recordType \u003d RecordType.EXPENSE;","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"marklowsk"},"content":"        } else if (hasOption(arguments, OPTION_LOAN)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"marklowsk"},"content":"            recordType \u003d RecordType.LOAN;","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"marklowsk"},"content":"        } else if (hasOption(arguments, OPTION_SAVING)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"marklowsk"},"content":"            recordType \u003d RecordType.SAVING;","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"marklowsk"},"content":"        } else {","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(\"missing option: [-e | -l | -s]\", COMMAND_VIEW);","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Executes the view function.","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"LeeHanYongAndy"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param ui      is the Ui object that interacts with the user.","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param storage is the Storage object that reads and writes to the save file.","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"marklowsk"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"gerardtwk"},"content":"    public void execute(RecordList recordList, Ui ui, Storage storage, BorrowersCreditScoreForReturnedLoans","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"gerardtwk"},"content":"            borrowersCreditScoreForReturnedLoans) {","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"marklowsk"},"content":"        switch (recordType) {","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"marklowsk"},"content":"        case EXPENSE:","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printTotalAmountExpense(recordList);","lastModifiedDate":"2021-03-11"},{"lineNumber":76,"author":{"gitId":"marklowsk"},"content":"            break;","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"marklowsk"},"content":"        case LOAN:","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printTotalAmountLoan(recordList);","lastModifiedDate":"2021-03-11"},{"lineNumber":79,"author":{"gitId":"marklowsk"},"content":"            break;","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"marklowsk"},"content":"        case SAVING:","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"marklowsk"},"content":"            // Fallthrough","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"marklowsk"},"content":"        default:","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printTotalAmountSaving(recordList);","lastModifiedDate":"2021-03-11"},{"lineNumber":84,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":86,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"jonahtwl":1,"marklowsk":56,"LeeHanYongAndy":27,"gerardtwk":2}},{"path":"src/main/java/seedu/duke/common/ArgumentType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.common;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"public enum ArgumentType {","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"    COMMAND, OPTION, VALUE, EMPTY_VALUE","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"marklowsk":5}},{"path":"src/main/java/seedu/duke/common/Constant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.common;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"public class Constant {","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"    // Please append constants used to line under your name","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"LeeHanYongAndy"},"content":"    // Mark","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"    public static final String OPTION_EXPENSE \u003d \"-e\";","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"    public static final String OPTION_LOAN \u003d \"-l\";","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"    public static final String OPTION_SAVING \u003d \"-s\";","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"    public static final String OPTION_AMOUNT \u003d \"-a\";","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"    public static final String OPTION_DATE \u003d \"-d\";","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"    public static final String OPTION_INDEX \u003d \"-i\";","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"    public static final String OPTION_PERSON \u003d \"-p\";","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"    // Andy","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":"    // Jonah","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"LeeHanYongAndy"},"content":"    // Gerard","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"    public static final String SYMBOL_SAVING \u003d \"S\";","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"gerardtwk"},"content":"    public static final String SYMBOL_EXPENSE \u003d \"E\";","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"gerardtwk"},"content":"    public static final String SYMBOL_LOAN \u003d \"L\";","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":"    public static final FinuxLogger FINUX_LOGGER \u003d new FinuxLogger(\"Finux Logger\");","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"    // Jason","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"LeeHanYongAndy":13,"marklowsk":7,"gerardtwk":4}},{"path":"src/main/java/seedu/duke/common/FinuxLogger.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"package seedu.duke.common;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"public class FinuxLogger {","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"    private Logger logger;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"    public FinuxLogger(String loggerName) {","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"        try {","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"            logger \u003d Logger.getLogger(loggerName);","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"            FileHandler logFileHandler \u003d new FileHandler(\"finuxLog.txt\", true);","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"            logFileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"            logger.addHandler(logFileHandler);","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":"            logger.setUseParentHandlers(false);","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"        } catch (IOException | SecurityException e) {","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"gerardtwk"},"content":"            logger \u003d null;","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"gerardtwk"},"content":"            System.out.println(\"Error occurred in setting up finux logger!\");","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"gerardtwk"},"content":"    public void logInfo(String infoMsg) {","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"gerardtwk"},"content":"        if (logger !\u003d null) {","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"gerardtwk"},"content":"            logger.info(infoMsg);","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"gerardtwk"},"content":"    public void logWarning(String warningMsg) {","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"gerardtwk"},"content":"        if (logger !\u003d null) {","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"gerardtwk"},"content":"            logger.warning(warningMsg);","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"gerardtwk"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"gerardtwk":35}},{"path":"src/main/java/seedu/duke/common/RecordType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.common;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"public enum RecordType {","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"    EXPENSE, LOAN, SAVING","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"marklowsk":5}},{"path":"src/main/java/seedu/duke/common/Validators.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"package seedu.duke.common;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"LeeHanYongAndy"},"content":"import seedu.duke.exception.CustomException;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"tzexern"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"public class Validators {","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"    private static final String KEYWORD_TODAY \u003d \"today\";","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // @@author marklowsk-reused","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Reused from https://github.com/marklowsk/ip/blob/master/src/main/java/duke/common/Utils.java","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final DateTimeFormatter[] POSSIBLE_DATE_FORMATS \u003d {","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        DateTimeFormatter.ofPattern(\"ddMMyyyy\"),","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        DateTimeFormatter.ofPattern(\"d.M.yyyy\"),","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        DateTimeFormatter.ofPattern(\"d-M-yyyy\"),","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        DateTimeFormatter.ofPattern(\"d/M/yyyy\"),","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        DateTimeFormatter.ofPattern(\"yyyy.M.d\"),","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        DateTimeFormatter.ofPattern(\"yyyy-M-d\"),","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        DateTimeFormatter.ofPattern(\"yyyy/M/d\")","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    };","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    // @@author marklowsk-reused","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    // Reused from https://github.com/marklowsk/ip/blob/master/src/main/java/duke/common/Utils.java","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static LocalDate parseDateString(DateTimeFormatter format, String dateInput) {","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return LocalDate.parse(dateInput, format);","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            return null;","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    // @@author marklowsk-reused","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    // Reused from https://github.com/marklowsk/ip/blob/master/src/main/java/duke/common/Utils.java","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    // Utils.parseDate(String) with new additions.","lastModifiedDate":"2021-03-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses dateInput into a LocalDateTime object.","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns null if dateInput cannot be parsed into a LocalDateTime object.","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param dateInput a string containing the date supplied from the user.","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @return a LocalDateTime object or null if failed to parse dateInput.","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #parseDateString(DateTimeFormatter, String)","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static LocalDate validateDate(String dateInput) throws DateTimeException {","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assert dateInput !\u003d null : \"dateInput is null!\";","lastModifiedDate":"2021-03-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (dateInput.trim().equals(KEYWORD_TODAY)) {","lastModifiedDate":"2021-03-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return LocalDate.now();","lastModifiedDate":"2021-03-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        for (DateTimeFormatter dtf : POSSIBLE_DATE_FORMATS) {","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            LocalDate date \u003d parseDateString(dtf, dateInput);","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            if (date !\u003d null) {","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                return date;","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        throw new DateTimeException(\"input \\\"\" + dateInput + \"\\\" is not an acceptable Date Format.\");","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Validates the index supplied by the user.","lastModifiedDate":"2021-03-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Throws exception if the index is out of range or is negative.","lastModifiedDate":"2021-03-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @param inputToCheck index supplied by user to be validated.","lastModifiedDate":"2021-03-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @param records list of all records.","lastModifiedDate":"2021-03-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @return validated index.","lastModifiedDate":"2021-03-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws NumberFormatException when the inputToCheck contains non numeric.","lastModifiedDate":"2021-03-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws IndexOutOfBoundsException when the inputToCheck is less than zero, equals to zero or greater than the","lastModifiedDate":"2021-03-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *     size of the records.","lastModifiedDate":"2021-03-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static int validateIndex(String inputToCheck, RecordList records) throws NumberFormatException,","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            IndexOutOfBoundsException {","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(\"validateIndex_Log\");","lastModifiedDate":"2021-03-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logger.log(Level.INFO, \"going to start validating index\");","lastModifiedDate":"2021-03-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        int recordNumberInList \u003d Integer.parseInt(inputToCheck) - 1;","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        records.getRecordAt(recordNumberInList);","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assert recordNumberInList \u003e -1 : \"recordNumberInList should be greater than 0 and non-negative\";","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.log(Level.INFO, \"done validating index\");","lastModifiedDate":"2021-03-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return recordNumberInList;","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parse the stringAmount into a BigDecimal object.","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param stringAmount contains a string representing the amount entered.","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @return a BigDecimal object.","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws NumberFormatException when the stringAmount contains non numeric.","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws CustomException when the numeric amount is less than or equals to zero.","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static BigDecimal validateAmount(String stringAmount) throws NumberFormatException,","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            CustomException {","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        BigDecimal amount \u003d new BigDecimal(stringAmount);","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!(amount.compareTo(new BigDecimal(\"0\")) \u003d\u003d 1)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new CustomException(\"amount must be greater than 0.\");","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return amount;","lastModifiedDate":"2021-03-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"tzexern":8,"LeeHanYongAndy":3,"marklowsk":5,"-":86}},{"path":"src/main/java/seedu/duke/exception/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"    public CommandException(String message) {","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"        super(message);","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"    public CommandException(String message, String command) {","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"        this(command + \" Command - \" + message);","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"marklowsk":11}},{"path":"src/main/java/seedu/duke/exception/CustomException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"public class CustomException extends Exception {","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"    public CustomException(String message) {","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"        super(message);","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"LeeHanYongAndy":3,"marklowsk":4}},{"path":"src/main/java/seedu/duke/exception/FileLoadingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"public class FileLoadingException extends Exception {","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"jonahtwl":4}},{"path":"src/main/java/seedu/duke/exception/InvalidFileInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"public class InvalidFileInputException extends Exception {","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"jonahtwl":4}},{"path":"src/main/java/seedu/duke/parser/ParserHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"import org.apache.commons.lang3.StringUtils;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":" * Parser class to handle parsing of userInput.","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"LeeHanYongAndy"},"content":"public class ParserHandler {","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"    private final String[] startOptionArray;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"LeeHanYongAndy"},"content":"    private final String[] endOptionArray;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"LeeHanYongAndy"},"content":"    private final String[] middleOptionArray;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"LeeHanYongAndy"},"content":"    public ParserHandler() {","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":"        startOptionArray \u003d new String[]{\"-e\", \"-l\", \"-s\", \"-d\", \"-a\", \"-i\", \"-p\"};","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":"        endOptionArray \u003d new String[]{\" -e\", \" -l\", \" -s\", \" -d\", \" -a\", \" -i\", \" -p\"};","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"LeeHanYongAndy"},"content":"        middleOptionArray \u003d new String[]{\" -e \", \" -l \", \" -s \", \" -d \", \" -a \", \" -i \", \" -p \"};","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Parse the input into an ArrayList of String.","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param userInput contains a single string to be parsed.","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a ArrayList of String containing trimmed options and arguments.","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":"    public ArrayList\u003cString\u003e getParseInput(String userInput) {","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e extracted \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"LeeHanYongAndy"},"content":"        String trimmedInput \u003d userInput.stripLeading();","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"LeeHanYongAndy"},"content":"        return startExtraction(extracted, trimmedInput);","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Check if first block starts of option, then continue with extracting the input.","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param extracted ArrayList of String containing the initial parsed option or argument.","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param trimmedInput contains the remaining input that is needed to be parse.","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a ArrayList of String containing trimmed options and arguments.","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"LeeHanYongAndy"},"content":"    private ArrayList\u003cString\u003e startExtraction(ArrayList\u003cString\u003e extracted, String trimmedInput) {","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"LeeHanYongAndy"},"content":"        if (checkOptionStartWith(trimmedInput)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(trimmedInput.substring(0,2));","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"            trimmedInput \u003d trimmedInput.substring(2);","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"        return extractSubsequentPart(extracted, trimmedInput);","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"     * parse the remaining trimmed input before checking for last block.","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param extracted ArrayList of String containing the initial parsed option or argument.","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param trimmedInput contains the remaining input that is needed to be parse.","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a ArrayList of String containing trimmed options and arguments.","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"LeeHanYongAndy"},"content":"    private ArrayList\u003cString\u003e extractSubsequentPart(ArrayList\u003cString\u003e extracted, String trimmedInput) {","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"LeeHanYongAndy"},"content":"        int optionIndex \u003d getNextOptionIndex(trimmedInput);","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"LeeHanYongAndy"},"content":"        while (optionIndex !\u003d -1) {","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"LeeHanYongAndy"},"content":"            String argument \u003d trimmedInput.substring(0,optionIndex).trim();","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(argument);","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"LeeHanYongAndy"},"content":"            trimmedInput \u003d trimmedInput.substring(optionIndex).stripLeading();","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(trimmedInput.substring(0,2));","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"LeeHanYongAndy"},"content":"            trimmedInput \u003d trimmedInput.substring(2);","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"LeeHanYongAndy"},"content":"            optionIndex \u003d getNextOptionIndex(trimmedInput);","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"LeeHanYongAndy"},"content":"        return extractFinalPart(extracted, trimmedInput);","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Check and parse if last block in ArrayList of String ends with option.","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Add a empty string after the last block if last block ends with option.","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param extracted ArrayList of String containing the parsed option or argument.","lastModifiedDate":"2021-03-19"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param trimmedInput contains the final remaining input that is needed to be parse.","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a ArrayList of String containing trimmed options and arguments.","lastModifiedDate":"2021-03-19"},{"lineNumber":70,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"LeeHanYongAndy"},"content":"    private ArrayList\u003cString\u003e extractFinalPart(ArrayList\u003cString\u003e extracted, String trimmedInput) {","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"LeeHanYongAndy"},"content":"        if (checkOptionEndWith(trimmedInput)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"LeeHanYongAndy"},"content":"            String argument \u003d trimmedInput.substring(0, (trimmedInput.length() - 2)).trim();","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(argument);","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(trimmedInput.substring(trimmedInput.length() - 2).trim());","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(\"\");","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"LeeHanYongAndy"},"content":"        } else {","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(trimmedInput.trim());","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":80,"author":{"gitId":"LeeHanYongAndy"},"content":"        return checkFirstBlock(extracted);","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":82,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":84,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Check and parse if first block in pre final ArrayList of String starts with help or creditscore.","lastModifiedDate":"2021-03-19"},{"lineNumber":85,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Add relevant string after the help or creditscore block.","lastModifiedDate":"2021-03-19"},{"lineNumber":86,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param extracted ArrayList of String containing the pre-final parsed option or argument.","lastModifiedDate":"2021-03-19"},{"lineNumber":87,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return the final parsed ArrayList of String containing the options and arguments.","lastModifiedDate":"2021-03-19"},{"lineNumber":88,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":89,"author":{"gitId":"LeeHanYongAndy"},"content":"    private ArrayList\u003cString\u003e checkFirstBlock(ArrayList\u003cString\u003e extracted) {","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"LeeHanYongAndy"},"content":"        String firstblock \u003d extracted.get(0);","lastModifiedDate":"2021-03-12"},{"lineNumber":91,"author":{"gitId":"LeeHanYongAndy"},"content":"        if (StringUtils.startsWithAny(firstblock, \"help \", \"creditscore \")) {","lastModifiedDate":"2021-03-19"},{"lineNumber":92,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] splitBlock \u003d firstblock.split(\" \", 2);","lastModifiedDate":"2021-03-12"},{"lineNumber":93,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.remove(0);","lastModifiedDate":"2021-03-12"},{"lineNumber":94,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(splitBlock[0]);","lastModifiedDate":"2021-03-12"},{"lineNumber":95,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(splitBlock[1].trim());","lastModifiedDate":"2021-03-12"},{"lineNumber":96,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":97,"author":{"gitId":"LeeHanYongAndy"},"content":"        if (StringUtils.startsWith(firstblock, \"help\") \u0026\u0026 firstblock.length() \u003d\u003d 4) {","lastModifiedDate":"2021-03-19"},{"lineNumber":98,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(1,\"all\");","lastModifiedDate":"2021-03-19"},{"lineNumber":99,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":100,"author":{"gitId":"LeeHanYongAndy"},"content":"        if (StringUtils.startsWith(firstblock, \"creditscore\") \u0026\u0026 firstblock.length() \u003d\u003d 11) {","lastModifiedDate":"2021-03-19"},{"lineNumber":101,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(1,\"\");","lastModifiedDate":"2021-03-19"},{"lineNumber":102,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":103,"author":{"gitId":"LeeHanYongAndy"},"content":"        return extracted;","lastModifiedDate":"2021-03-08"},{"lineNumber":104,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":105,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":106,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Check if the input starts with valid options.","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param input string that is needed to be checked against.","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return true if input starts with valid options, else otherwise.","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"LeeHanYongAndy"},"content":"    private boolean checkOptionStartWith(String input) {","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"LeeHanYongAndy"},"content":"        return StringUtils.startsWithAny(input, startOptionArray);","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":114,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":115,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Check if the input ends with valid options.","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param input string that is needed to be checked against.","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return true if input ends with valid options, else otherwise.","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"LeeHanYongAndy"},"content":"    private boolean checkOptionEndWith(String input) {","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"LeeHanYongAndy"},"content":"        return StringUtils.endsWithAny(input, endOptionArray);","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":123,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":124,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Check the next valid option index.","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param leftOverString containing the remaining input to be checked against.","lastModifiedDate":"2021-03-14"},{"lineNumber":127,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return the first index if matches any valid options in input, else -1.","lastModifiedDate":"2021-03-14"},{"lineNumber":128,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":129,"author":{"gitId":"LeeHanYongAndy"},"content":"    private int getNextOptionIndex(String leftOverString) {","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"LeeHanYongAndy"},"content":"        return StringUtils.indexOfAny(leftOverString, middleOptionArray);","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":132,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"LeeHanYongAndy":132}},{"path":"src/main/java/seedu/duke/record/Expense.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"/**","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":" * A type of record for expenses.","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":" */","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"public class Expense extends Record {","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"    private static final String TYPE_EXPENSE \u003d \"E\";","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"    private static final String FILE_OUTPUT_STRING_FORMAT \u003d \"%s | %s | %f | %s\";","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"     * Constructor to create expense record.","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"     * @param amount expense amount.","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"     * @param issuedDate date of expenditure.","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"     * @param description expense details.","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"    public Expense(BigDecimal amount, LocalDate issuedDate, String description) {","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"        super(amount, issuedDate, description);","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"     * Rearrange the expense information to the format to be saved in the file.","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":"     * @return the formatted string of an expense record.","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"    public String convertFileFormat() {","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"        return String.format(FILE_OUTPUT_STRING_FORMAT, TYPE_EXPENSE, super.getDescription(),","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"                super.getAmount(), super.getIssueDate());","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"     * Refine expense information to be printed when the object is printed.","lastModifiedDate":"2021-03-19"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"     * The type of record is added.","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":"     * @return the formatted string of an expense record.","lastModifiedDate":"2021-03-19"},{"lineNumber":40,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"gerardtwk"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"gerardtwk"},"content":"    public String toString() {","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"tzexern"},"content":"        String formattedRecordType \u003d \"[\" + TYPE_EXPENSE + \"]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"tzexern"},"content":"        return formattedRecordType + super.toString();","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"tzexern":26,"jonahtwl":9,"LeeHanYongAndy":5,"marklowsk":2,"gerardtwk":4}},{"path":"src/main/java/seedu/duke/record/Loan.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"/**","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":" * A type of record for loans.","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":" */","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"public class Loan extends Record {","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"    private static final String TYPE_LOAN \u003d \"L\";","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"    private static final String FILE_OUTPUT_STRING_FORMAT \u003d \"%s | %s | %f | %s | %d | %s | %s\";","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"    private String borrowerName;","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"    private LocalDate returnDate;","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"    private boolean isReturn;","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"     * Constructor to create loan record.","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"     * @param amount      loan amount.","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"     * @param issuedDate  date of loan.","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"     * @param description loan details.","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"    public Loan(BigDecimal amount, LocalDate issuedDate, String description, String borrowerName) {","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"gerardtwk"},"content":"        this(amount, issuedDate, description, borrowerName, null, false);","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"     * Constructor to create loan record with predefined isReturn.","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"     * @param amount      loan amount.","lastModifiedDate":"2021-03-19"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"     * @param issuedDate  date of loan.","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":"     * @param description loan details.","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"tzexern"},"content":"     * @param isReturn    if the loan has been returned.","lastModifiedDate":"2021-03-19"},{"lineNumber":34,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"gerardtwk"},"content":"    public Loan(BigDecimal amount, LocalDate issuedDate, String description, String borrowerName, LocalDate returnDate,","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"gerardtwk"},"content":"                boolean isReturn) {","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":"        super(amount, issuedDate, description);","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"gerardtwk"},"content":"        this.borrowerName \u003d borrowerName;","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"gerardtwk"},"content":"        this.returnDate \u003d returnDate;","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"jonahtwl"},"content":"        this.isReturn \u003d isReturn;","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"gerardtwk"},"content":"    public String getBorrowerName() {","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"gerardtwk"},"content":"        return borrowerName;","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"gerardtwk"},"content":"    public LocalDate getReturnDate() {","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"gerardtwk"},"content":"        return returnDate;","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":52,"author":{"gitId":"tzexern"},"content":"     * Marks a loan as returned.","lastModifiedDate":"2021-03-19"},{"lineNumber":53,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":54,"author":{"gitId":"gerardtwk"},"content":"    public void markAsReturned(LocalDate returnDate) {","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"gerardtwk"},"content":"        this.isReturn \u003d true;","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"gerardtwk"},"content":"        this.returnDate \u003d returnDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"gerardtwk"},"content":"    public boolean isReturn() {","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"gerardtwk"},"content":"        return isReturn;","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":64,"author":{"gitId":"tzexern"},"content":"     * Rearrange the loan information to the format to be saved in the file.","lastModifiedDate":"2021-03-19"},{"lineNumber":65,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":66,"author":{"gitId":"tzexern"},"content":"     * @return the formatted string of each loan record.","lastModifiedDate":"2021-03-19"},{"lineNumber":67,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":68,"author":{"gitId":"jonahtwl"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"jonahtwl"},"content":"    public String convertFileFormat() {","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"jonahtwl"},"content":"        return String.format(FILE_OUTPUT_STRING_FORMAT, TYPE_LOAN, super.getDescription(),","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"jonahtwl"},"content":"                super.getAmount(), super.getIssueDate(), this.isReturn ? 1 : 0,","lastModifiedDate":"2021-03-26"},{"lineNumber":72,"author":{"gitId":"jonahtwl"},"content":"                this.borrowerName.toLowerCase(), this.returnDate);","lastModifiedDate":"2021-03-26"},{"lineNumber":73,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":76,"author":{"gitId":"tzexern"},"content":"     * Refine loan information to be printed when the object is printed.","lastModifiedDate":"2021-03-19"},{"lineNumber":77,"author":{"gitId":"tzexern"},"content":"     * The type of record is added.","lastModifiedDate":"2021-03-19"},{"lineNumber":78,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":79,"author":{"gitId":"tzexern"},"content":"     * @return the formatted string of a loan record.","lastModifiedDate":"2021-03-19"},{"lineNumber":80,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":81,"author":{"gitId":"gerardtwk"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":82,"author":{"gitId":"gerardtwk"},"content":"    public String toString() {","lastModifiedDate":"2021-03-11"},{"lineNumber":83,"author":{"gitId":"tzexern"},"content":"        String formattedRecordType \u003d \"[\" + TYPE_LOAN + \"]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"tzexern"},"content":"        String formattedLoanStatus \u003d \"[\" + (isReturn ? \"v\" : \" \") + \"]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":85,"author":{"gitId":"tzexern"},"content":"        return formattedRecordType + super.toString() + formattedLoanStatus;","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":87,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":88,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":89,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Method to check if the loan is returned.","lastModifiedDate":"2021-03-20"},{"lineNumber":90,"author":{"gitId":"LeeHanYongAndy"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":91,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return true if loan is returned, false if loan is not return.","lastModifiedDate":"2021-03-20"},{"lineNumber":92,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":93,"author":{"gitId":"LeeHanYongAndy"},"content":"    public boolean checkIsReturn() {","lastModifiedDate":"2021-03-20"},{"lineNumber":94,"author":{"gitId":"LeeHanYongAndy"},"content":"        return isReturn;","lastModifiedDate":"2021-03-20"},{"lineNumber":95,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":96,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"tzexern":41,"jonahtwl":13,"LeeHanYongAndy":13,"marklowsk":2,"gerardtwk":27}},{"path":"src/main/java/seedu/duke/record/Record.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"/**","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":" * Represents a financial-related record to be stored in a list.","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":" */","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"public abstract class Record {","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"    private BigDecimal amount;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"    private LocalDate issueDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"    private String description;","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"    private static final String FILE_OUTPUT_STRING_FORMAT \u003d \"%s | %f | %s\";","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"     * Constructor to create a record.","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"     * @param amount amount to record.","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"     * @param issueDate date of issue to record.","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"     * @param description description of record.","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"    public Record(BigDecimal amount, LocalDate issueDate, String description) {","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"gerardtwk"},"content":"        this.issueDate \u003d issueDate;","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"gerardtwk"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"     * Gets the description or details of a record.","lastModifiedDate":"2021-03-19"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"     * @return description of record.","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"    public String getDescription() {","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"        return description;","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"     * Gets the amount in dollars of the record.","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":40,"author":{"gitId":"tzexern"},"content":"     * @return amount of the record.","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"    public BigDecimal getAmount() {","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"marklowsk"},"content":"        return amount;","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":47,"author":{"gitId":"tzexern"},"content":"     * Gets the date of issuance of the record.","lastModifiedDate":"2021-03-19"},{"lineNumber":48,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":49,"author":{"gitId":"tzexern"},"content":"     * @return issue date of the record.","lastModifiedDate":"2021-03-19"},{"lineNumber":50,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":51,"author":{"gitId":"marklowsk"},"content":"    public LocalDate getIssueDate() {","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"marklowsk"},"content":"        return issueDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":56,"author":{"gitId":"tzexern"},"content":"     * Rearrange the record information to the format to be saved in the file.","lastModifiedDate":"2021-03-19"},{"lineNumber":57,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":58,"author":{"gitId":"tzexern"},"content":"     * @return the formatted string of a record.","lastModifiedDate":"2021-03-19"},{"lineNumber":59,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":60,"author":{"gitId":"jonahtwl"},"content":"    public String convertFileFormat() {","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"jonahtwl"},"content":"        return String.format(FILE_OUTPUT_STRING_FORMAT, description, amount, issueDate);","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":65,"author":{"gitId":"tzexern"},"content":"     * Rearrange record information to be printed when the object is printed.","lastModifiedDate":"2021-03-19"},{"lineNumber":66,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":67,"author":{"gitId":"tzexern"},"content":"     * @return the formatted string of a record.","lastModifiedDate":"2021-03-19"},{"lineNumber":68,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":69,"author":{"gitId":"gerardtwk"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":70,"author":{"gitId":"gerardtwk"},"content":"    public String toString() {","lastModifiedDate":"2021-03-11"},{"lineNumber":71,"author":{"gitId":"tzexern"},"content":"        String formattedDate \u003d \"[\" + this.issueDate + \"]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"tzexern"},"content":"        String formattedDescription \u003d \" \" + this.description + \" \";","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"tzexern"},"content":"        return formattedDate + formattedDescription;","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":75,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"tzexern":38,"jonahtwl":12,"LeeHanYongAndy":7,"marklowsk":7,"gerardtwk":11}},{"path":"src/main/java/seedu/duke/record/RecordList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"public class RecordList {","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"    private ArrayList\u003cRecord\u003e recordList;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"    public RecordList() {","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"        this(new ArrayList\u003cRecord\u003e());","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"    public RecordList(ArrayList\u003cRecord\u003e recordListData) {","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"        this.recordList \u003d recordListData;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"    public void addRecord(Record recordToAdd) {","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"        recordList.add(recordToAdd);","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"    public Record getRecordAt(int recordIndex) {","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"        return recordList.get(recordIndex);","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":"    public Record deleteRecordAt(int recordIndex) {","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"        return recordList.remove(recordIndex);","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"    public void deleteAllRecords() {","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"        recordList.clear();","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"tzexern"},"content":"        return recordList.isEmpty();","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"    public int getRecordCount() {","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"        return recordList.size();","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"tzexern":28,"jonahtwl":4,"LeeHanYongAndy":3,"marklowsk":1,"gerardtwk":4}},{"path":"src/main/java/seedu/duke/record/Saving.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"/**","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":" * A type of record for savings.","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":" */","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"public class Saving extends Record {","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"    private static final String TYPE_SAVING \u003d \"S\";","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"    private static final String FILE_OUTPUT_STRING_FORMAT \u003d \"%s | %s | %f | %s\";","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"     * Constructor to create saving record.","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"     * @param amount saving amount.","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"     * @param issueDate date of saving.","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"     * @param description saving details.","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"    public Saving(BigDecimal amount, LocalDate issueDate, String description) {","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":"        super(amount, issueDate, description);","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"     * Rearrange the saving information to the format to be saved in the file.","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":"     * @return the formatted string of a saving record.","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"    public String convertFileFormat() {","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"        return String.format(FILE_OUTPUT_STRING_FORMAT, TYPE_SAVING, super.getDescription(),","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"                super.getAmount(), super.getIssueDate());","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"     * Refine saving information to be printed when the object is printed.","lastModifiedDate":"2021-03-19"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"     * The type of record is added.","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":"     * @return the formatted string of a saving record.","lastModifiedDate":"2021-03-19"},{"lineNumber":40,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"gerardtwk"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"gerardtwk"},"content":"    public String toString() {","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"tzexern"},"content":"        String formattedRecordType \u003d \"[\" + TYPE_SAVING + \"]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"tzexern"},"content":"        return formattedRecordType + super.toString();","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"tzexern":23,"jonahtwl":9,"LeeHanYongAndy":5,"marklowsk":2,"gerardtwk":7}},{"path":"src/main/java/seedu/duke/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.command.BorrowersCreditScoreForReturnedLoans;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.exception.FileLoadingException;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.exception.InvalidFileInputException;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.Expense;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.Loan;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.Record;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.Saving;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"import java.io.File;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"gerardtwk"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"LeeHanYongAndy"},"content":"public class Storage {","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"    private static final Path SAVED_FILE_PATH \u003d Paths.get(\"finux.txt\");","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"    private static final String REGEX_PATTERN_EXPENSE \u003d \"[E]\\\\s\\\\|\\\\s[^|]+\\\\s\\\\|\\\\s[^|]+\\\\s\\\\|\\\\s[^|]+\";","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"    private static final String REGEX_PATTERN_LOAN \u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"            \"[L]\\\\s\\\\|\\\\s[^|]+\\\\s\\\\|\\\\s[^|]+\\\\s\\\\|\\\\s[^|]+\\\\s\\\\|\\\\s[01]\\\\s\\\\|\\\\s[^|]+\\\\s\\\\|\\\\s[^|]+\";","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":"    private static final String REGEX_PATTERN_SAVING \u003d \"[S]\\\\s\\\\|\\\\s[^|]+\\\\s\\\\|\\\\s[^|]+\\\\s\\\\|\\\\s[^|]+\";","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"gerardtwk"},"content":"    private static final String REGEX_PATTERN_BORROWER_CREDIT_SCORE_FOR_RETURNED_LOANS \u003d \"[^|]+\\\\s\\\\|\\\\s\\\\d{1,3}\";","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"    private static final int INDEX_OF_DESCRIPTION \u003d 1;","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":"    private static final int INDEX_OF_AMOUNT \u003d 2;","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"jonahtwl"},"content":"    private static final int INDEX_OF_DATE \u003d 3;","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"jonahtwl"},"content":"    private static final int INDEX_OF_ISRETURN \u003d 4;","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"jonahtwl"},"content":"    private static final int INDEX_OF_NAME \u003d 5;","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"    private static final int INDEX_OF_RETURN_DATE \u003d 6;","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"gerardtwk"},"content":"    private ArrayList\u003cRecord\u003e records;","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"gerardtwk"},"content":"    private HashMap\u003cString, Integer\u003e borrowersCreditScoreForReturnedLoansMap;","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"jonahtwl"},"content":"    public Path dataFilePath;","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"jonahtwl"},"content":"    public Storage() {","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"jonahtwl"},"content":"        this(SAVED_FILE_PATH);","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"jonahtwl"},"content":"    public Storage(Path dataFilePath) {","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"jonahtwl"},"content":"        this.dataFilePath \u003d dataFilePath;","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"jonahtwl"},"content":"    private boolean saveFileExists() {","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"jonahtwl"},"content":"        return Files.exists(SAVED_FILE_PATH);","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"gerardtwk"},"content":"    public void saveData(RecordList records, BorrowersCreditScoreForReturnedLoans","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"gerardtwk"},"content":"            borrowersCreditScoreForReturnedLoans) {","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"gerardtwk"},"content":"        try {","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"gerardtwk"},"content":"            writeRecordListToSaveFile(records);","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"gerardtwk"},"content":"            writeBorrowersCreditScoreForReturnedLoansToSaveFile(borrowersCreditScoreForReturnedLoans);","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"gerardtwk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-11"},{"lineNumber":66,"author":{"gitId":"gerardtwk"},"content":"            System.out.println(\"Error in saveData()\");","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":68,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":69,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":70,"author":{"gitId":"gerardtwk"},"content":"    private void writeRecordListToSaveFile(RecordList records) throws IOException {","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"jonahtwl"},"content":"        FileWriter fw \u003d new FileWriter(dataFilePath.toString(), false);","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"gerardtwk"},"content":"        for (int i \u003d 0; i \u003c records.getRecordCount(); i++) {","lastModifiedDate":"2021-03-11"},{"lineNumber":73,"author":{"gitId":"gerardtwk"},"content":"            Record currentRecord \u003d records.getRecordAt(i);","lastModifiedDate":"2021-03-11"},{"lineNumber":74,"author":{"gitId":"gerardtwk"},"content":"            fw.write(currentRecord.convertFileFormat() + System.lineSeparator());","lastModifiedDate":"2021-03-11"},{"lineNumber":75,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"jonahtwl"},"content":"        fw.close();","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"gerardtwk"},"content":"    private void writeBorrowersCreditScoreForReturnedLoansToSaveFile(BorrowersCreditScoreForReturnedLoans","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"gerardtwk"},"content":"            borrowersCreditScoreForReturnedLoans) throws IOException {","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"gerardtwk"},"content":"        FileWriter fw \u003d new FileWriter(dataFilePath.toString(), true);","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"gerardtwk"},"content":"        for (String borrowerNameInLowerCase : borrowersCreditScoreForReturnedLoans.getBorrowersNamesInLowerCase()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"gerardtwk"},"content":"            int creditScore \u003d getCreditScore(borrowersCreditScoreForReturnedLoans, borrowerNameInLowerCase);","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"gerardtwk"},"content":"            fw.write(borrowerNameInLowerCase + \" | \" + creditScore + System.lineSeparator());","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"gerardtwk"},"content":"        fw.close();","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"gerardtwk"},"content":"    private int getCreditScore(BorrowersCreditScoreForReturnedLoans borrowersCreditScoreForReturnedLoans,","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"gerardtwk"},"content":"                               String borrowerName) {","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"gerardtwk"},"content":"        return borrowersCreditScoreForReturnedLoans.getCurrentBorrowerCreditScoreForReturnedLoans(borrowerName);","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":95,"author":{"gitId":"jonahtwl"},"content":"     * Loads the RecordList from the file into FINUX.","lastModifiedDate":"2021-03-11"},{"lineNumber":96,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":97,"author":{"gitId":"gerardtwk"},"content":"    public void loadFile() throws FileLoadingException {","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"gerardtwk"},"content":"        this.records \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"gerardtwk"},"content":"        this.borrowersCreditScoreForReturnedLoansMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"jonahtwl"},"content":"        try {","lastModifiedDate":"2021-03-09"},{"lineNumber":102,"author":{"gitId":"jonahtwl"},"content":"            if (!saveFileExists()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"jonahtwl"},"content":"                initSaveFile();","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"gerardtwk"},"content":"                return;","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"jonahtwl"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"jonahtwl"},"content":"            File loadFile \u003d dataFilePath.toFile();","lastModifiedDate":"2021-03-09"},{"lineNumber":107,"author":{"gitId":"jonahtwl"},"content":"            Scanner sc \u003d new Scanner(loadFile);","lastModifiedDate":"2021-03-09"},{"lineNumber":108,"author":{"gitId":"jonahtwl"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":109,"author":{"gitId":"jonahtwl"},"content":"                String rawData \u003d sc.nextLine();","lastModifiedDate":"2021-03-09"},{"lineNumber":110,"author":{"gitId":"gerardtwk"},"content":"                Object parsedObject \u003d parseRawData(rawData);","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"gerardtwk"},"content":"                if (parsedObject instanceof Record) {","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"gerardtwk"},"content":"                    records.add((Record) parsedObject);","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"jonahtwl"},"content":"                    assert !records.isEmpty() : \"RecordList should have data!\";","lastModifiedDate":"2021-03-26"},{"lineNumber":114,"author":{"gitId":"gerardtwk"},"content":"                } else if (parsedObject !\u003d null) {","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"gerardtwk"},"content":"                    String[] borrowerCreditScoreForReturnedLoansData \u003d (String[]) parsedObject;","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"gerardtwk"},"content":"                    borrowersCreditScoreForReturnedLoansMap.put(borrowerCreditScoreForReturnedLoansData[0],","lastModifiedDate":"2021-03-26"},{"lineNumber":117,"author":{"gitId":"gerardtwk"},"content":"                            Integer.parseInt(borrowerCreditScoreForReturnedLoansData[1]));","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"jonahtwl"},"content":"                }","lastModifiedDate":"2021-03-09"},{"lineNumber":119,"author":{"gitId":"jonahtwl"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":120,"author":{"gitId":"jonahtwl"},"content":"        } catch (InvalidFileInputException | IOException e) {","lastModifiedDate":"2021-03-15"},{"lineNumber":121,"author":{"gitId":"jonahtwl"},"content":"            throw new FileLoadingException();","lastModifiedDate":"2021-03-13"},{"lineNumber":122,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":123,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":124,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":125,"author":{"gitId":"jonahtwl"},"content":"    private void initSaveFile() throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"jonahtwl"},"content":"        File newSaveFile \u003d new File(String.valueOf(SAVED_FILE_PATH));","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"jonahtwl"},"content":"        if (newSaveFile.createNewFile()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":128,"author":{"gitId":"jonahtwl"},"content":"            Ui.printSuccessfulFileCreation();","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"jonahtwl"},"content":"        } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":130,"author":{"gitId":"jonahtwl"},"content":"            throw new IOException(\"File creation unsuccessful!\");","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":132,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":133,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":134,"author":{"gitId":"gerardtwk"},"content":"    private Object parseRawData(String rawData) throws InvalidFileInputException {","lastModifiedDate":"2021-03-24"},{"lineNumber":135,"author":{"gitId":"jonahtwl"},"content":"        if (Pattern.matches(REGEX_PATTERN_EXPENSE, rawData)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":136,"author":{"gitId":"jonahtwl"},"content":"            return loadExpense(rawData);","lastModifiedDate":"2021-03-11"},{"lineNumber":137,"author":{"gitId":"jonahtwl"},"content":"        } else if (Pattern.matches(REGEX_PATTERN_LOAN, rawData)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":138,"author":{"gitId":"jonahtwl"},"content":"            return loadLoan(rawData);","lastModifiedDate":"2021-03-11"},{"lineNumber":139,"author":{"gitId":"jonahtwl"},"content":"        } else if (Pattern.matches(REGEX_PATTERN_SAVING, rawData)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":140,"author":{"gitId":"jonahtwl"},"content":"            return loadSaving(rawData);","lastModifiedDate":"2021-03-11"},{"lineNumber":141,"author":{"gitId":"gerardtwk"},"content":"        } else if (Pattern.matches(REGEX_PATTERN_BORROWER_CREDIT_SCORE_FOR_RETURNED_LOANS, rawData)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":142,"author":{"gitId":"gerardtwk"},"content":"            return loadBorrowerCreditScoreForReturnedLoans(rawData);","lastModifiedDate":"2021-03-24"},{"lineNumber":143,"author":{"gitId":"jonahtwl"},"content":"        } else {","lastModifiedDate":"2021-03-11"},{"lineNumber":144,"author":{"gitId":"jonahtwl"},"content":"            throw new InvalidFileInputException();","lastModifiedDate":"2021-03-13"},{"lineNumber":145,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":146,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":147,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":148,"author":{"gitId":"jonahtwl"},"content":"    private String extractArg(String rawData, int index) throws InvalidFileInputException {","lastModifiedDate":"2021-03-11"},{"lineNumber":149,"author":{"gitId":"jonahtwl"},"content":"        String[] args \u003d rawData.split(\"\\\\|\");","lastModifiedDate":"2021-03-11"},{"lineNumber":150,"author":{"gitId":"jonahtwl"},"content":"        if (index \u003c 0 || index \u003e args.length) {","lastModifiedDate":"2021-03-11"},{"lineNumber":151,"author":{"gitId":"jonahtwl"},"content":"            throw new InvalidFileInputException();","lastModifiedDate":"2021-03-13"},{"lineNumber":152,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":153,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":154,"author":{"gitId":"jonahtwl"},"content":"        return args[index].strip();","lastModifiedDate":"2021-03-11"},{"lineNumber":155,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":156,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":157,"author":{"gitId":"jonahtwl"},"content":"    private Record loadExpense(String rawData) throws InvalidFileInputException {","lastModifiedDate":"2021-03-11"},{"lineNumber":158,"author":{"gitId":"jonahtwl"},"content":"        BigDecimal amount;","lastModifiedDate":"2021-03-13"},{"lineNumber":159,"author":{"gitId":"jonahtwl"},"content":"        LocalDate issueDate;","lastModifiedDate":"2021-03-12"},{"lineNumber":160,"author":{"gitId":"jonahtwl"},"content":"        String description \u003d extractArg(rawData, INDEX_OF_DESCRIPTION);","lastModifiedDate":"2021-03-11"},{"lineNumber":161,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":162,"author":{"gitId":"jonahtwl"},"content":"        try {","lastModifiedDate":"2021-03-11"},{"lineNumber":163,"author":{"gitId":"jonahtwl"},"content":"            amount \u003d new BigDecimal(extractArg(rawData, INDEX_OF_AMOUNT));","lastModifiedDate":"2021-03-13"},{"lineNumber":164,"author":{"gitId":"jonahtwl"},"content":"            issueDate \u003d LocalDate.parse(extractArg(rawData, INDEX_OF_DATE),","lastModifiedDate":"2021-03-12"},{"lineNumber":165,"author":{"gitId":"jonahtwl"},"content":"                    DateTimeFormatter.ofPattern(\"yyyy-M-d\"));","lastModifiedDate":"2021-03-13"},{"lineNumber":166,"author":{"gitId":"jonahtwl"},"content":"        } catch (NumberFormatException | DateTimeParseException e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":167,"author":{"gitId":"jonahtwl"},"content":"            throw new InvalidFileInputException();","lastModifiedDate":"2021-03-13"},{"lineNumber":168,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":169,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":170,"author":{"gitId":"jonahtwl"},"content":"        return new Expense(amount, issueDate, description);","lastModifiedDate":"2021-03-11"},{"lineNumber":171,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":172,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":173,"author":{"gitId":"jonahtwl"},"content":"    private Record loadLoan(String rawData) throws InvalidFileInputException {","lastModifiedDate":"2021-03-11"},{"lineNumber":174,"author":{"gitId":"jonahtwl"},"content":"        BigDecimal amount;","lastModifiedDate":"2021-03-13"},{"lineNumber":175,"author":{"gitId":"jonahtwl"},"content":"        boolean isReturn;","lastModifiedDate":"2021-03-13"},{"lineNumber":176,"author":{"gitId":"jonahtwl"},"content":"        String description \u003d extractArg(rawData, INDEX_OF_DESCRIPTION);","lastModifiedDate":"2021-03-11"},{"lineNumber":177,"author":{"gitId":"jonahtwl"},"content":"        LocalDate issueDate;","lastModifiedDate":"2021-03-26"},{"lineNumber":178,"author":{"gitId":"jonahtwl"},"content":"        String borrowerName \u003d extractArg(rawData, INDEX_OF_NAME);","lastModifiedDate":"2021-03-26"},{"lineNumber":179,"author":{"gitId":"jonahtwl"},"content":"        LocalDate returnDate;","lastModifiedDate":"2021-03-26"},{"lineNumber":180,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":181,"author":{"gitId":"jonahtwl"},"content":"        try {","lastModifiedDate":"2021-03-11"},{"lineNumber":182,"author":{"gitId":"jonahtwl"},"content":"            amount \u003d new BigDecimal(extractArg(rawData, INDEX_OF_AMOUNT));","lastModifiedDate":"2021-03-13"},{"lineNumber":183,"author":{"gitId":"jonahtwl"},"content":"            isReturn \u003d Integer.parseInt(extractArg(rawData, INDEX_OF_ISRETURN)) \u003d\u003d 1;","lastModifiedDate":"2021-03-13"},{"lineNumber":184,"author":{"gitId":"jonahtwl"},"content":"            issueDate \u003d LocalDate.parse(extractArg(rawData, INDEX_OF_DATE),","lastModifiedDate":"2021-03-26"},{"lineNumber":185,"author":{"gitId":"jonahtwl"},"content":"                    DateTimeFormatter.ofPattern(\"yyyy-M-d\"));","lastModifiedDate":"2021-03-26"},{"lineNumber":186,"author":{"gitId":"jonahtwl"},"content":"            if (extractArg(rawData, INDEX_OF_RETURN_DATE).equals(\"null\")) {","lastModifiedDate":"2021-03-26"},{"lineNumber":187,"author":{"gitId":"jonahtwl"},"content":"                returnDate \u003d null;","lastModifiedDate":"2021-03-26"},{"lineNumber":188,"author":{"gitId":"jonahtwl"},"content":"            } else {","lastModifiedDate":"2021-03-26"},{"lineNumber":189,"author":{"gitId":"jonahtwl"},"content":"                returnDate \u003d LocalDate.parse(extractArg(rawData, INDEX_OF_RETURN_DATE),","lastModifiedDate":"2021-03-26"},{"lineNumber":190,"author":{"gitId":"jonahtwl"},"content":"                        DateTimeFormatter.ofPattern(\"yyyy-M-d\"));","lastModifiedDate":"2021-03-26"},{"lineNumber":191,"author":{"gitId":"jonahtwl"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":192,"author":{"gitId":"jonahtwl"},"content":"        } catch (NumberFormatException | DateTimeParseException e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":193,"author":{"gitId":"jonahtwl"},"content":"            throw new InvalidFileInputException();","lastModifiedDate":"2021-03-13"},{"lineNumber":194,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":195,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":196,"author":{"gitId":"jonahtwl"},"content":"        return new Loan(amount, issueDate, description, borrowerName, returnDate, isReturn);","lastModifiedDate":"2021-03-26"},{"lineNumber":197,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":198,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":199,"author":{"gitId":"jonahtwl"},"content":"    private Record loadSaving(String rawData) throws InvalidFileInputException {","lastModifiedDate":"2021-03-11"},{"lineNumber":200,"author":{"gitId":"jonahtwl"},"content":"        BigDecimal amount;","lastModifiedDate":"2021-03-13"},{"lineNumber":201,"author":{"gitId":"jonahtwl"},"content":"        String description \u003d extractArg(rawData, INDEX_OF_DESCRIPTION);","lastModifiedDate":"2021-03-11"},{"lineNumber":202,"author":{"gitId":"jonahtwl"},"content":"        LocalDate issueDate \u003d LocalDate.parse(extractArg(rawData, INDEX_OF_DATE),","lastModifiedDate":"2021-03-12"},{"lineNumber":203,"author":{"gitId":"jonahtwl"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-M-d\"));","lastModifiedDate":"2021-03-13"},{"lineNumber":204,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":205,"author":{"gitId":"jonahtwl"},"content":"        try {","lastModifiedDate":"2021-03-11"},{"lineNumber":206,"author":{"gitId":"jonahtwl"},"content":"            amount \u003d new BigDecimal(extractArg(rawData, INDEX_OF_AMOUNT));","lastModifiedDate":"2021-03-13"},{"lineNumber":207,"author":{"gitId":"jonahtwl"},"content":"        } catch (NumberFormatException | DateTimeParseException e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":208,"author":{"gitId":"jonahtwl"},"content":"            throw new InvalidFileInputException();","lastModifiedDate":"2021-03-13"},{"lineNumber":209,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":210,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":211,"author":{"gitId":"jonahtwl"},"content":"        return new Saving(amount, issueDate, description);","lastModifiedDate":"2021-03-11"},{"lineNumber":212,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":213,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":214,"author":{"gitId":"gerardtwk"},"content":"    private String[] loadBorrowerCreditScoreForReturnedLoans(String rawData) throws InvalidFileInputException {","lastModifiedDate":"2021-03-26"},{"lineNumber":215,"author":{"gitId":"gerardtwk"},"content":"        String[] borrowerCreditScoreForReturnedLoansData \u003d rawData.split(\" \\\\| \");","lastModifiedDate":"2021-03-26"},{"lineNumber":216,"author":{"gitId":"gerardtwk"},"content":"        String borrowerNameInLowerCase \u003d borrowerCreditScoreForReturnedLoansData[0].toLowerCase();","lastModifiedDate":"2021-03-26"},{"lineNumber":217,"author":{"gitId":"gerardtwk"},"content":"        if (!borrowerNameInLowerCase.equals(borrowerCreditScoreForReturnedLoansData[0])) {","lastModifiedDate":"2021-03-26"},{"lineNumber":218,"author":{"gitId":"gerardtwk"},"content":"            throw new InvalidFileInputException();","lastModifiedDate":"2021-03-26"},{"lineNumber":219,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":220,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":221,"author":{"gitId":"gerardtwk"},"content":"        if (borrowersCreditScoreForReturnedLoansMap.containsKey(borrowerCreditScoreForReturnedLoansData[0])) {","lastModifiedDate":"2021-03-26"},{"lineNumber":222,"author":{"gitId":"gerardtwk"},"content":"            throw new InvalidFileInputException();","lastModifiedDate":"2021-03-26"},{"lineNumber":223,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":224,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":225,"author":{"gitId":"gerardtwk"},"content":"        int creditScore \u003d Integer.parseInt(borrowerCreditScoreForReturnedLoansData[1]);","lastModifiedDate":"2021-03-26"},{"lineNumber":226,"author":{"gitId":"gerardtwk"},"content":"        if (creditScore \u003c 0 || creditScore \u003e 100) {","lastModifiedDate":"2021-03-26"},{"lineNumber":227,"author":{"gitId":"gerardtwk"},"content":"            throw new InvalidFileInputException();","lastModifiedDate":"2021-03-26"},{"lineNumber":228,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":229,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":230,"author":{"gitId":"gerardtwk"},"content":"        return borrowerCreditScoreForReturnedLoansData;","lastModifiedDate":"2021-03-26"},{"lineNumber":231,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":232,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":233,"author":{"gitId":"gerardtwk"},"content":"    public ArrayList\u003cRecord\u003e getRecordListData() {","lastModifiedDate":"2021-03-24"},{"lineNumber":234,"author":{"gitId":"gerardtwk"},"content":"        return records;","lastModifiedDate":"2021-03-24"},{"lineNumber":235,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":236,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":237,"author":{"gitId":"gerardtwk"},"content":"    public HashMap\u003cString, Integer\u003e getBorrowersCreditScoreForReturnedLoansMapData() {","lastModifiedDate":"2021-03-24"},{"lineNumber":238,"author":{"gitId":"gerardtwk"},"content":"        return borrowersCreditScoreForReturnedLoansMap;","lastModifiedDate":"2021-03-24"},{"lineNumber":239,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":240,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"jonahtwl":158,"LeeHanYongAndy":4,"gerardtwk":78}},{"path":"src/main/java/seedu/duke/ui/HelpPage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"import static seedu.duke.ui.Ui.DIVIDER;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"LeeHanYongAndy"},"content":" * Handles all printing of help related command messages to the console.","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"LeeHanYongAndy"},"content":"public class HelpPage {","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String TAB_1SPACE \u003d \"\\t\";","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String TAB_2SPACE \u003d \"\\t\\t\";","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_HEADER_ADD \u003d \"add - add a record to the program\";","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_SYNOPSIS_ADD \u003d \"add [OPTION] [ARGUMENT]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_HEADER_LIST \u003d \"list - list all the records of chosen record type\";","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_SYNOPSIS_LIST \u003d \"list [OPTION]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_HEADER_VIEW \u003d \"view - view the total amount of chosen record type\";","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_SYNOPSIS_VIEW \u003d \"view [OPTION]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_HEADER_REMOVE \u003d \"remove - remove a record in the program\";","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_SYNOPSIS_REMOVE \u003d \"remove [OPTION] [ARGUMENT]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_HEADER_RETURN \u003d \"return - record a loan as returned\";","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_SYNOPSIS_RETURN \u003d \"return [OPTION] [ARGUMENT]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_HEADER_EXIT \u003d \"exit - terminate the program\";","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_SYNOPSIS_EXIT \u003d \"exit (no option/argument needed)\";","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_HEADER_CREDITSCORE \u003d \"creditscore - check a person credit rating\";","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_SYNOPSIS_CREDITSCORE \u003d \"creditscore [ARGUMENT]\";","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_RECORD_TYPE \u003d \"-e, -l, -s\";","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_RECORD_TYPE_DESCRIPTION \u003d \"[ARGUMENT] used as record description\";","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_RECORD_TYPE_LISTING \u003d \"used to list the chosen record types\";","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_RECORD_TYPE_VIEWING \u003d \"used to view total amount of chosen record type\";","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_AMOUNT \u003d \"-a\";","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_AMOUNT_DESCRIPTION \u003d \"[ARGUMENT] positive non zero numeric \"","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"LeeHanYongAndy"},"content":"            + \"amount associated with the record\";","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_DATE \u003d \"-d\";","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_DATE_DESCRIPTION \u003d \"[ARGUMENT] date associated with the record\";","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_DATE_RETURN_DESCRIPTION \u003d \"[ARGUMENT] date of loan return\";","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_OPTION_INDEX \u003d \"-i\";","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_OPTION_INDEX_DESCRIPTION \u003d \"[ARGUMENT] positive non zero integer \"","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"            + \"used to reference to index in program\";","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_PERSON \u003d \"-p \";","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_PERSON_DESCRIPTION \u003d \"[ARGUMENT] the person name\";","lastModifiedDate":"2021-03-19"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_PERSON_IN_ADD_DESCRIPTION \u003d \", use only with \u0027-l\u0027 option\";","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_ARGUMENT_CREDITSCORE_DESCRIPTION \u003d \"[ARGUMENT] name of the person \"","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"tzexern"},"content":"            + \"to check their credit score\";","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the respective help messages based on the command given.","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param command contains the command that help is needed to be printed.","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printHelp(String command) {","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"LeeHanYongAndy"},"content":"        switch (command) {","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"        case \"all\":","lastModifiedDate":"2021-03-19"},{"lineNumber":51,"author":{"gitId":"LeeHanYongAndy"},"content":"            printManPageMaster();","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"LeeHanYongAndy"},"content":"            break;","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"LeeHanYongAndy"},"content":"        case \"add\":","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"LeeHanYongAndy"},"content":"            printManPageAdd();","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"LeeHanYongAndy"},"content":"            break;","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"LeeHanYongAndy"},"content":"        case \"list\":","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"LeeHanYongAndy"},"content":"            printManPageList();","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"LeeHanYongAndy"},"content":"            break;","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"LeeHanYongAndy"},"content":"        case \"view\":","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"LeeHanYongAndy"},"content":"            printManPageView();","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"LeeHanYongAndy"},"content":"            break;","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"LeeHanYongAndy"},"content":"        case \"remove\":","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"LeeHanYongAndy"},"content":"            printManPageRemove();","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"            break;","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"LeeHanYongAndy"},"content":"        case \"return\":","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"            printManPageReturn();","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"            break;","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"tzexern"},"content":"        case \"creditscore\":","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"tzexern"},"content":"            printManPageCreditscore();","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"tzexern"},"content":"            break;","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"LeeHanYongAndy"},"content":"        case \"exit\":","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"LeeHanYongAndy"},"content":"            // Fallthrough","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"LeeHanYongAndy"},"content":"        default:","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"LeeHanYongAndy"},"content":"            printManPageExit();","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the man page header format.","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param header contains the description of the command.","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManHeader(String header) {","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"NAME\");","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + header);","lastModifiedDate":"2021-03-12"},{"lineNumber":85,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println();","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":87,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the man page synopsis format.","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param synopsis contains the availability options and argument.","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManSynopsis(String synopsis) {","lastModifiedDate":"2021-03-12"},{"lineNumber":93,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"SYNOPSIS\");","lastModifiedDate":"2021-03-12"},{"lineNumber":94,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + synopsis);","lastModifiedDate":"2021-03-12"},{"lineNumber":95,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println();","lastModifiedDate":"2021-03-12"},{"lineNumber":96,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":97,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":98,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the entire man page for all commands.","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManPageMaster() {","lastModifiedDate":"2021-03-12"},{"lineNumber":102,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManPageAdd();","lastModifiedDate":"2021-03-12"},{"lineNumber":103,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManPageView();","lastModifiedDate":"2021-03-12"},{"lineNumber":104,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManPageList();","lastModifiedDate":"2021-03-12"},{"lineNumber":105,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManPageRemove();","lastModifiedDate":"2021-03-12"},{"lineNumber":106,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManPageReturn();","lastModifiedDate":"2021-03-12"},{"lineNumber":107,"author":{"gitId":"tzexern"},"content":"        printManPageCreditscore();","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManPageExit();","lastModifiedDate":"2021-03-12"},{"lineNumber":109,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":110,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":111,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the man page for add command.","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManPageAdd() {","lastModifiedDate":"2021-03-12"},{"lineNumber":115,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManHeader(MAN_HEADER_ADD);","lastModifiedDate":"2021-03-12"},{"lineNumber":116,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManSynopsis(MAN_SYNOPSIS_ADD);","lastModifiedDate":"2021-03-12"},{"lineNumber":117,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManDescriptionAdd();","lastModifiedDate":"2021-03-12"},{"lineNumber":118,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":119,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":120,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the add command options and arguments description.","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManDescriptionAdd() {","lastModifiedDate":"2021-03-12"},{"lineNumber":124,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"DESCRIPTION\");","lastModifiedDate":"2021-03-12"},{"lineNumber":125,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_RECORD_TYPE);","lastModifiedDate":"2021-03-12"},{"lineNumber":126,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_2SPACE + MAN_OPTION_RECORD_TYPE_DESCRIPTION);","lastModifiedDate":"2021-03-12"},{"lineNumber":127,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_AMOUNT);","lastModifiedDate":"2021-03-12"},{"lineNumber":128,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_2SPACE + MAN_OPTION_AMOUNT_DESCRIPTION);","lastModifiedDate":"2021-03-12"},{"lineNumber":129,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_DATE);","lastModifiedDate":"2021-03-12"},{"lineNumber":130,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_2SPACE + MAN_OPTION_DATE_DESCRIPTION);","lastModifiedDate":"2021-03-12"},{"lineNumber":131,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_PERSON);","lastModifiedDate":"2021-03-19"},{"lineNumber":132,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_2SPACE + MAN_OPTION_PERSON_DESCRIPTION + MAN_OPTION_PERSON_IN_ADD_DESCRIPTION);","lastModifiedDate":"2021-03-19"},{"lineNumber":133,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(Ui.DIVIDER);","lastModifiedDate":"2021-03-12"},{"lineNumber":134,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":135,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":136,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":137,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the man page for list command.","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":139,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManPageList() {","lastModifiedDate":"2021-03-12"},{"lineNumber":140,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManHeader(MAN_HEADER_LIST);","lastModifiedDate":"2021-03-12"},{"lineNumber":141,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManSynopsis(MAN_SYNOPSIS_LIST);","lastModifiedDate":"2021-03-12"},{"lineNumber":142,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManDescriptionList();","lastModifiedDate":"2021-03-12"},{"lineNumber":143,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":144,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":145,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":146,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the list command options and arguments description.","lastModifiedDate":"2021-03-14"},{"lineNumber":147,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":148,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManDescriptionList() {","lastModifiedDate":"2021-03-12"},{"lineNumber":149,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"DESCRIPTION\");","lastModifiedDate":"2021-03-12"},{"lineNumber":150,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_RECORD_TYPE);","lastModifiedDate":"2021-03-12"},{"lineNumber":151,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println((TAB_2SPACE + MAN_OPTION_RECORD_TYPE_LISTING));","lastModifiedDate":"2021-03-12"},{"lineNumber":152,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(Ui.DIVIDER);","lastModifiedDate":"2021-03-12"},{"lineNumber":153,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":154,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":155,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":156,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the man page for view command.","lastModifiedDate":"2021-03-14"},{"lineNumber":157,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":158,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManPageView() {","lastModifiedDate":"2021-03-12"},{"lineNumber":159,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManHeader(MAN_HEADER_VIEW);","lastModifiedDate":"2021-03-12"},{"lineNumber":160,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManSynopsis(MAN_SYNOPSIS_VIEW);","lastModifiedDate":"2021-03-12"},{"lineNumber":161,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManDescriptionView();","lastModifiedDate":"2021-03-12"},{"lineNumber":162,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":163,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":164,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":165,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the view command options and arguments description.","lastModifiedDate":"2021-03-14"},{"lineNumber":166,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":167,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManDescriptionView() {","lastModifiedDate":"2021-03-12"},{"lineNumber":168,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"DESCRIPTION\");","lastModifiedDate":"2021-03-12"},{"lineNumber":169,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_RECORD_TYPE);","lastModifiedDate":"2021-03-12"},{"lineNumber":170,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println((TAB_2SPACE + MAN_OPTION_RECORD_TYPE_VIEWING));","lastModifiedDate":"2021-03-12"},{"lineNumber":171,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-12"},{"lineNumber":172,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":173,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":174,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":175,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the man page for remove command.","lastModifiedDate":"2021-03-14"},{"lineNumber":176,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":177,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManPageRemove() {","lastModifiedDate":"2021-03-12"},{"lineNumber":178,"author":{"gitId":"tzexern"},"content":"        printManHeader(MAN_HEADER_REMOVE);","lastModifiedDate":"2021-03-12"},{"lineNumber":179,"author":{"gitId":"tzexern"},"content":"        printManSynopsis(MAN_SYNOPSIS_REMOVE);","lastModifiedDate":"2021-03-12"},{"lineNumber":180,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManDescriptionRemove();","lastModifiedDate":"2021-03-12"},{"lineNumber":181,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":182,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":183,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":184,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the remove command options and arguments description.","lastModifiedDate":"2021-03-14"},{"lineNumber":185,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":186,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManDescriptionRemove() {","lastModifiedDate":"2021-03-12"},{"lineNumber":187,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"DESCRIPTION\");","lastModifiedDate":"2021-03-12"},{"lineNumber":188,"author":{"gitId":"tzexern"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_INDEX);","lastModifiedDate":"2021-03-12"},{"lineNumber":189,"author":{"gitId":"tzexern"},"content":"        System.out.println((TAB_2SPACE + MAN_OPTION_INDEX_DESCRIPTION));","lastModifiedDate":"2021-03-12"},{"lineNumber":190,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-12"},{"lineNumber":191,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":192,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":193,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":194,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the man page for return command.","lastModifiedDate":"2021-03-14"},{"lineNumber":195,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":196,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManPageReturn() {","lastModifiedDate":"2021-03-12"},{"lineNumber":197,"author":{"gitId":"tzexern"},"content":"        printManHeader(MAN_HEADER_RETURN);","lastModifiedDate":"2021-03-12"},{"lineNumber":198,"author":{"gitId":"tzexern"},"content":"        printManSynopsis(MAN_SYNOPSIS_RETURN);","lastModifiedDate":"2021-03-12"},{"lineNumber":199,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManDescriptionReturn();","lastModifiedDate":"2021-03-12"},{"lineNumber":200,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":201,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":202,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":203,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the return command options and arguments description.","lastModifiedDate":"2021-03-14"},{"lineNumber":204,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":205,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManDescriptionReturn() {","lastModifiedDate":"2021-03-12"},{"lineNumber":206,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"DESCRIPTION\");","lastModifiedDate":"2021-03-12"},{"lineNumber":207,"author":{"gitId":"tzexern"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_INDEX);","lastModifiedDate":"2021-03-12"},{"lineNumber":208,"author":{"gitId":"tzexern"},"content":"        System.out.println((TAB_2SPACE + MAN_OPTION_INDEX_DESCRIPTION));","lastModifiedDate":"2021-03-12"},{"lineNumber":209,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_DATE);","lastModifiedDate":"2021-03-19"},{"lineNumber":210,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_2SPACE + MAN_OPTION_DATE_RETURN_DESCRIPTION);","lastModifiedDate":"2021-03-19"},{"lineNumber":211,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-12"},{"lineNumber":212,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":213,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":214,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":215,"author":{"gitId":"tzexern"},"content":"     * Prints the man page for creditscore command.","lastModifiedDate":"2021-03-23"},{"lineNumber":216,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":217,"author":{"gitId":"tzexern"},"content":"    public static void printManPageCreditscore() {","lastModifiedDate":"2021-03-23"},{"lineNumber":218,"author":{"gitId":"tzexern"},"content":"        printManHeader(MAN_HEADER_CREDITSCORE);","lastModifiedDate":"2021-03-23"},{"lineNumber":219,"author":{"gitId":"tzexern"},"content":"        printManSynopsis(MAN_SYNOPSIS_CREDITSCORE);","lastModifiedDate":"2021-03-23"},{"lineNumber":220,"author":{"gitId":"tzexern"},"content":"        printManDescriptionCreditscore();","lastModifiedDate":"2021-03-23"},{"lineNumber":221,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":222,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":223,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":224,"author":{"gitId":"tzexern"},"content":"     * Prints the creditscore command options arguments description.","lastModifiedDate":"2021-03-23"},{"lineNumber":225,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":226,"author":{"gitId":"tzexern"},"content":"    public static void printManDescriptionCreditscore() {","lastModifiedDate":"2021-03-23"},{"lineNumber":227,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"DESCRIPTION\");","lastModifiedDate":"2021-03-23"},{"lineNumber":228,"author":{"gitId":"tzexern"},"content":"        System.out.println(TAB_1SPACE + MAN_ARGUMENT_CREDITSCORE_DESCRIPTION);","lastModifiedDate":"2021-03-23"},{"lineNumber":229,"author":{"gitId":"tzexern"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-23"},{"lineNumber":230,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":231,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":232,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":233,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the man page for exit command.","lastModifiedDate":"2021-03-14"},{"lineNumber":234,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":235,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManPageExit() {","lastModifiedDate":"2021-03-12"},{"lineNumber":236,"author":{"gitId":"tzexern"},"content":"        printManHeader(MAN_HEADER_EXIT);","lastModifiedDate":"2021-03-12"},{"lineNumber":237,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"SYNOPSIS\");","lastModifiedDate":"2021-03-12"},{"lineNumber":238,"author":{"gitId":"tzexern"},"content":"        System.out.println(TAB_1SPACE + MAN_SYNOPSIS_EXIT);","lastModifiedDate":"2021-03-12"},{"lineNumber":239,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-12"},{"lineNumber":240,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":241,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"tzexern":45,"LeeHanYongAndy":196}},{"path":"src/main/java/seedu/duke/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.Record;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Expense;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Saving;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Loan;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.math.RoundingMode;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":" * Handles all user interactions and printing of text to the console.","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"LeeHanYongAndy"},"content":"public class Ui {","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":"    protected static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"    private static final String logo \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"            + \"||    $$$$$$  $$$$$$  $$    $$  $$    $$   $$    $$    ||\\n\"","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"            + \"||    $$        $$    $$$   $$  $$    $$    $$  $$     ||\\n\"","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":"            + \"||    $$$$$$    $$    $$ $$ $$  $$    $$      $$       ||\\n\"","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"            + \"||    $$        $$    $$   $$$  $$    $$    $$  $$     ||\\n\"","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":"            + \"||    $$      $$$$$$  $$    $$   $$$$$$    $$    $$    ||\\n\"","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"jonahtwl"},"content":"            + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"    private static final String MESSAGE_GOODBYE \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":"            \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"            + \"||   $$  $$  $$    $$   $$$$$   $$$$$$$$     $$$$$   $$  $$  $$    ||\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"            + \"||   $$  $$  $$    $$  $$   $$     $$       $$   $$  $$  $$  $$    ||\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"            + \"||   $$$$$$  $$    $$  $$$$$$$     $$       $$$$$$$  $$$$$$  $$    ||\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"            + \"||   $$  $$  $$    $$  $$   $$     $$       $$   $$  $$  $$        ||\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"            + \"||   $$  $$   $$$$$$   $$   $$     $$       $$   $$  $$  $$  $$    ||\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":"            + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"    private static final String MESSAGE_LOADING \u003d \"Loading from save file... \";","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":"    private static final String MESSAGE_FILE_CREATION_SUCCESS \u003d \"New save file created!\";","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"    private static final String MESSAGE_EXPENSE_SUCCESSFULLY_ADDED \u003d \"Expense has been added...\";","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":"    private static final String MESSAGE_LOAN_SUCCESSFULLY_ADDED \u003d \"Loan has been added...\";","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"tzexern"},"content":"    private static final String MESSAGE_SAVING_SUCCESSFULLY_ADDED \u003d \"Saving has been added...\";","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MESSAGE_TOTAL_EXPENSE \u003d \"The total amount for expense is \";","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MESSAGE_TOTAL_LOAN \u003d \"The total amount for loan is \";","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MESSAGE_TOTAL_SAVING \u003d \"The total amount for saving is \";","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"jonahtwl"},"content":"    private static final String MESSAGE_FAILED_INIT \u003d \"File or contents corrupted! Bad Init!\\nSystem will now exit!\";","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"gerardtwk"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"gerardtwk"},"content":"     * Decorative prefix for the FINUX Interface.","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"gerardtwk"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"jonahtwl"},"content":"    private static final String FINUX_PREFIX \u003d \"$$\";","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"jonahtwl"},"content":"    private final Scanner input;","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"jonahtwl"},"content":"    public Ui() {","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"jonahtwl"},"content":"        this(System.in);","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"jonahtwl"},"content":"    public Ui(InputStream in) {","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"jonahtwl"},"content":"        this.input \u003d new Scanner(in);","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":63,"author":{"gitId":"jonahtwl"},"content":"     * Prints the initialization error with the application UI.","lastModifiedDate":"2021-03-20"},{"lineNumber":64,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":65,"author":{"gitId":"jonahtwl"},"content":"    public static void printInitError() {","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"jonahtwl"},"content":"        System.out.println();","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(MESSAGE_FAILED_INIT);","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"jonahtwl"},"content":"        System.out.println();","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":74,"author":{"gitId":"jonahtwl"},"content":"     * Prints the success message when the file is created.","lastModifiedDate":"2021-03-20"},{"lineNumber":75,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":76,"author":{"gitId":"jonahtwl"},"content":"    public static void printSuccessfulFileCreation() {","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(MESSAGE_FILE_CREATION_SUCCESS);","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":83,"author":{"gitId":"jonahtwl"},"content":"     * Prints the current input that is added into the RecordList.","lastModifiedDate":"2021-03-20"},{"lineNumber":84,"author":{"gitId":"jonahtwl"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":85,"author":{"gitId":"jonahtwl"},"content":"     * @param recordAdded is the current record that is added into the RecordList.","lastModifiedDate":"2021-03-20"},{"lineNumber":86,"author":{"gitId":"jonahtwl"},"content":"     * @param index is the index of the current record that is added into the RecordList.","lastModifiedDate":"2021-03-20"},{"lineNumber":87,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":88,"author":{"gitId":"tzexern"},"content":"    public void printSuccessfulAdd(Record recordAdded, int index) {","lastModifiedDate":"2021-03-12"},{"lineNumber":89,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-09"},{"lineNumber":90,"author":{"gitId":"jonahtwl"},"content":"        System.out.println();","lastModifiedDate":"2021-03-09"},{"lineNumber":91,"author":{"gitId":"tzexern"},"content":"        if (recordAdded instanceof Expense) {","lastModifiedDate":"2021-03-12"},{"lineNumber":92,"author":{"gitId":"tzexern"},"content":"            System.out.println(MESSAGE_EXPENSE_SUCCESSFULLY_ADDED);","lastModifiedDate":"2021-03-12"},{"lineNumber":93,"author":{"gitId":"tzexern"},"content":"        } else if (recordAdded instanceof Loan) {","lastModifiedDate":"2021-03-12"},{"lineNumber":94,"author":{"gitId":"tzexern"},"content":"            System.out.println(MESSAGE_LOAN_SUCCESSFULLY_ADDED);","lastModifiedDate":"2021-03-12"},{"lineNumber":95,"author":{"gitId":"tzexern"},"content":"        } else {","lastModifiedDate":"2021-03-12"},{"lineNumber":96,"author":{"gitId":"tzexern"},"content":"            System.out.println(MESSAGE_SAVING_SUCCESSFULLY_ADDED);","lastModifiedDate":"2021-03-12"},{"lineNumber":97,"author":{"gitId":"tzexern"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":98,"author":{"gitId":"tzexern"},"content":"        int formattedIndex \u003d index - 1;","lastModifiedDate":"2021-03-12"},{"lineNumber":99,"author":{"gitId":"tzexern"},"content":"        System.out.println();","lastModifiedDate":"2021-03-12"},{"lineNumber":100,"author":{"gitId":"tzexern"},"content":"        printIndex(formattedIndex);","lastModifiedDate":"2021-03-12"},{"lineNumber":101,"author":{"gitId":"tzexern"},"content":"        System.out.println(recordAdded);","lastModifiedDate":"2021-03-12"},{"lineNumber":102,"author":{"gitId":"jonahtwl"},"content":"        System.out.println();","lastModifiedDate":"2021-03-09"},{"lineNumber":103,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-09"},{"lineNumber":104,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":105,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":106,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":107,"author":{"gitId":"jonahtwl"},"content":"     * Prints the FINUX CLI prefix and gets the user input.","lastModifiedDate":"2021-03-20"},{"lineNumber":108,"author":{"gitId":"jonahtwl"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":109,"author":{"gitId":"jonahtwl"},"content":"     * @return the current user input.","lastModifiedDate":"2021-03-20"},{"lineNumber":110,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":111,"author":{"gitId":"jonahtwl"},"content":"    public String getUserInput() {","lastModifiedDate":"2021-03-08"},{"lineNumber":112,"author":{"gitId":"jonahtwl"},"content":"        System.out.print(FINUX_PREFIX + \" \");","lastModifiedDate":"2021-03-08"},{"lineNumber":113,"author":{"gitId":"jonahtwl"},"content":"        return input.nextLine().strip();","lastModifiedDate":"2021-03-13"},{"lineNumber":114,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":115,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":116,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":117,"author":{"gitId":"jonahtwl"},"content":"     * Prints the FINUX welcome message with the FINUX logo.","lastModifiedDate":"2021-03-20"},{"lineNumber":118,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":119,"author":{"gitId":"jonahtwl"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2021-03-08"},{"lineNumber":120,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-03-08"},{"lineNumber":121,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-15"},{"lineNumber":122,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(MESSAGE_LOADING);","lastModifiedDate":"2021-03-15"},{"lineNumber":123,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-15"},{"lineNumber":124,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":125,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":126,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":127,"author":{"gitId":"jonahtwl"},"content":"     * Prints the exit message.","lastModifiedDate":"2021-03-20"},{"lineNumber":128,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":129,"author":{"gitId":"jonahtwl"},"content":"    public void printGoodByeMessage() {","lastModifiedDate":"2021-03-08"},{"lineNumber":130,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(MESSAGE_GOODBYE);","lastModifiedDate":"2021-03-08"},{"lineNumber":131,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":132,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":133,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":134,"author":{"gitId":"jonahtwl"},"content":"     * Prints the message parsed into it with the dividers.","lastModifiedDate":"2021-03-20"},{"lineNumber":135,"author":{"gitId":"jonahtwl"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":136,"author":{"gitId":"jonahtwl"},"content":"     * @param message is the concatenated message and the Record object string.","lastModifiedDate":"2021-03-20"},{"lineNumber":137,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":138,"author":{"gitId":"marklowsk"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2021-03-09"},{"lineNumber":139,"author":{"gitId":"marklowsk"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-09"},{"lineNumber":140,"author":{"gitId":"marklowsk"},"content":"        System.out.println(message);","lastModifiedDate":"2021-03-09"},{"lineNumber":141,"author":{"gitId":"marklowsk"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-09"},{"lineNumber":142,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":143,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":144,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":145,"author":{"gitId":"jonahtwl"},"content":"     * Prints the entire list of all Expenses from the RecordList.","lastModifiedDate":"2021-03-20"},{"lineNumber":146,"author":{"gitId":"jonahtwl"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":147,"author":{"gitId":"jonahtwl"},"content":"     * @param recordList is the RecordList of all Records.","lastModifiedDate":"2021-03-20"},{"lineNumber":148,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":149,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void printExpenses(RecordList recordList) {","lastModifiedDate":"2021-03-11"},{"lineNumber":150,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":151,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\"Here is your Expense list:\");","lastModifiedDate":"2021-03-15"},{"lineNumber":152,"author":{"gitId":"gerardtwk"},"content":"        for (int i \u003d 0; i \u003c recordList.getRecordCount(); i++) {","lastModifiedDate":"2021-03-11"},{"lineNumber":153,"author":{"gitId":"gerardtwk"},"content":"            Record currentRecord \u003d recordList.getRecordAt(i);","lastModifiedDate":"2021-03-11"},{"lineNumber":154,"author":{"gitId":"gerardtwk"},"content":"            if (currentRecord instanceof Expense) {","lastModifiedDate":"2021-03-11"},{"lineNumber":155,"author":{"gitId":"tzexern"},"content":"                printIndex(i);","lastModifiedDate":"2021-03-12"},{"lineNumber":156,"author":{"gitId":"gerardtwk"},"content":"                System.out.println(currentRecord);","lastModifiedDate":"2021-03-11"},{"lineNumber":157,"author":{"gitId":"gerardtwk"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":158,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":159,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":160,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":161,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":162,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":163,"author":{"gitId":"jonahtwl"},"content":"     * Prints the entire list of all Loans from the RecordList.","lastModifiedDate":"2021-03-20"},{"lineNumber":164,"author":{"gitId":"jonahtwl"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":165,"author":{"gitId":"jonahtwl"},"content":"     * @param recordList is the RecordList of all Records.","lastModifiedDate":"2021-03-20"},{"lineNumber":166,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":167,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void printLoans(RecordList recordList) {","lastModifiedDate":"2021-03-11"},{"lineNumber":168,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":169,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\"Here is your Loan list:\");","lastModifiedDate":"2021-03-15"},{"lineNumber":170,"author":{"gitId":"gerardtwk"},"content":"        for (int i \u003d 0; i \u003c recordList.getRecordCount(); i++) {","lastModifiedDate":"2021-03-11"},{"lineNumber":171,"author":{"gitId":"gerardtwk"},"content":"            Record currentRecord \u003d recordList.getRecordAt(i);","lastModifiedDate":"2021-03-11"},{"lineNumber":172,"author":{"gitId":"gerardtwk"},"content":"            if (currentRecord instanceof Loan) {","lastModifiedDate":"2021-03-11"},{"lineNumber":173,"author":{"gitId":"tzexern"},"content":"                printIndex(i);","lastModifiedDate":"2021-03-12"},{"lineNumber":174,"author":{"gitId":"gerardtwk"},"content":"                System.out.println(currentRecord);","lastModifiedDate":"2021-03-11"},{"lineNumber":175,"author":{"gitId":"gerardtwk"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":176,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":177,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":178,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":179,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":180,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":181,"author":{"gitId":"jonahtwl"},"content":"     * Prints the entire list of all Savings from the RecordList.","lastModifiedDate":"2021-03-20"},{"lineNumber":182,"author":{"gitId":"jonahtwl"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":183,"author":{"gitId":"jonahtwl"},"content":"     * @param recordList is the RecordList of all Records.","lastModifiedDate":"2021-03-20"},{"lineNumber":184,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":185,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void printSavings(RecordList recordList) {","lastModifiedDate":"2021-03-11"},{"lineNumber":186,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":187,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\"Here is your Saving list:\");","lastModifiedDate":"2021-03-15"},{"lineNumber":188,"author":{"gitId":"gerardtwk"},"content":"        for (int i \u003d 0; i \u003c recordList.getRecordCount(); i++) {","lastModifiedDate":"2021-03-11"},{"lineNumber":189,"author":{"gitId":"gerardtwk"},"content":"            Record currentRecord \u003d recordList.getRecordAt(i);","lastModifiedDate":"2021-03-11"},{"lineNumber":190,"author":{"gitId":"gerardtwk"},"content":"            if (currentRecord instanceof Saving) {","lastModifiedDate":"2021-03-11"},{"lineNumber":191,"author":{"gitId":"tzexern"},"content":"                printIndex(i);","lastModifiedDate":"2021-03-12"},{"lineNumber":192,"author":{"gitId":"gerardtwk"},"content":"                System.out.println(currentRecord);","lastModifiedDate":"2021-03-11"},{"lineNumber":193,"author":{"gitId":"gerardtwk"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":194,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":195,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":196,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":197,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":198,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":199,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the total expenses in 2 decimal place.","lastModifiedDate":"2021-03-14"},{"lineNumber":200,"author":{"gitId":"jonahtwl"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":201,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList contains the full list of records.","lastModifiedDate":"2021-03-14"},{"lineNumber":202,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":203,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void printTotalAmountExpense(RecordList recordList) {","lastModifiedDate":"2021-03-11"},{"lineNumber":204,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":205,"author":{"gitId":"LeeHanYongAndy"},"content":"        BigDecimal totalAmount \u003d new BigDecimal(\"0\");","lastModifiedDate":"2021-03-13"},{"lineNumber":206,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (int i \u003d 0; i \u003c recordList.getRecordCount(); i++) {","lastModifiedDate":"2021-03-11"},{"lineNumber":207,"author":{"gitId":"LeeHanYongAndy"},"content":"            Record currentRecord \u003d recordList.getRecordAt(i);","lastModifiedDate":"2021-03-11"},{"lineNumber":208,"author":{"gitId":"LeeHanYongAndy"},"content":"            if (currentRecord instanceof Expense) {","lastModifiedDate":"2021-03-11"},{"lineNumber":209,"author":{"gitId":"LeeHanYongAndy"},"content":"                totalAmount \u003d totalAmount.add(currentRecord.getAmount());","lastModifiedDate":"2021-03-13"},{"lineNumber":210,"author":{"gitId":"LeeHanYongAndy"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":211,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":212,"author":{"gitId":"jonahtwl"},"content":"        assert !(totalAmount.compareTo(BigDecimal.ZERO) \u003d\u003d -1) : \"Expenses cannot be negative!\";","lastModifiedDate":"2021-03-20"},{"lineNumber":213,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(MESSAGE_TOTAL_EXPENSE + totalAmount.setScale(2, RoundingMode.HALF_EVEN));","lastModifiedDate":"2021-03-13"},{"lineNumber":214,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":215,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":216,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":217,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":218,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the total loan in 2 decimal place.","lastModifiedDate":"2021-03-14"},{"lineNumber":219,"author":{"gitId":"jonahtwl"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":220,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList contains the full list of records.","lastModifiedDate":"2021-03-14"},{"lineNumber":221,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":222,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void printTotalAmountLoan(RecordList recordList) {","lastModifiedDate":"2021-03-11"},{"lineNumber":223,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":224,"author":{"gitId":"LeeHanYongAndy"},"content":"        BigDecimal totalAmount \u003d new BigDecimal(\"0\");","lastModifiedDate":"2021-03-13"},{"lineNumber":225,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (int i \u003d 0; i \u003c recordList.getRecordCount(); i++) {","lastModifiedDate":"2021-03-11"},{"lineNumber":226,"author":{"gitId":"LeeHanYongAndy"},"content":"            Record currentRecord \u003d recordList.getRecordAt(i);","lastModifiedDate":"2021-03-11"},{"lineNumber":227,"author":{"gitId":"LeeHanYongAndy"},"content":"            if (currentRecord instanceof Loan \u0026\u0026 !((Loan) currentRecord).checkIsReturn()) {","lastModifiedDate":"2021-03-20"},{"lineNumber":228,"author":{"gitId":"LeeHanYongAndy"},"content":"                totalAmount \u003d totalAmount.add(currentRecord.getAmount());","lastModifiedDate":"2021-03-13"},{"lineNumber":229,"author":{"gitId":"LeeHanYongAndy"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":230,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":231,"author":{"gitId":"jonahtwl"},"content":"        assert !(totalAmount.compareTo(BigDecimal.ZERO) \u003d\u003d -1) : \"Loans cannot be negative!\";","lastModifiedDate":"2021-03-20"},{"lineNumber":232,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(MESSAGE_TOTAL_LOAN + totalAmount.setScale(2, RoundingMode.HALF_EVEN));","lastModifiedDate":"2021-03-13"},{"lineNumber":233,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":234,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":235,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":236,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":237,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the total saving in 2 decimal place.","lastModifiedDate":"2021-03-14"},{"lineNumber":238,"author":{"gitId":"jonahtwl"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":239,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList contains the full list of records.","lastModifiedDate":"2021-03-14"},{"lineNumber":240,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":241,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void printTotalAmountSaving(RecordList recordList) {","lastModifiedDate":"2021-03-11"},{"lineNumber":242,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":243,"author":{"gitId":"LeeHanYongAndy"},"content":"        BigDecimal totalAmount \u003d new BigDecimal(\"0\");","lastModifiedDate":"2021-03-13"},{"lineNumber":244,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (int i \u003d 0; i \u003c recordList.getRecordCount(); i++) {","lastModifiedDate":"2021-03-11"},{"lineNumber":245,"author":{"gitId":"LeeHanYongAndy"},"content":"            Record currentRecord \u003d recordList.getRecordAt(i);","lastModifiedDate":"2021-03-11"},{"lineNumber":246,"author":{"gitId":"LeeHanYongAndy"},"content":"            if (currentRecord instanceof Saving) {","lastModifiedDate":"2021-03-11"},{"lineNumber":247,"author":{"gitId":"LeeHanYongAndy"},"content":"                totalAmount \u003d totalAmount.add(currentRecord.getAmount());","lastModifiedDate":"2021-03-13"},{"lineNumber":248,"author":{"gitId":"LeeHanYongAndy"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":249,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":250,"author":{"gitId":"jonahtwl"},"content":"        assert !(totalAmount.compareTo(BigDecimal.ZERO) \u003d\u003d -1) : \"Savings cannot be negative!\";","lastModifiedDate":"2021-03-20"},{"lineNumber":251,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(MESSAGE_TOTAL_SAVING + totalAmount.setScale(2, RoundingMode.HALF_EVEN));","lastModifiedDate":"2021-03-13"},{"lineNumber":252,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":253,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":254,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":255,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":256,"author":{"gitId":"jonahtwl"},"content":"     * Prints the commonly understood index of the record.","lastModifiedDate":"2021-03-20"},{"lineNumber":257,"author":{"gitId":"jonahtwl"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":258,"author":{"gitId":"jonahtwl"},"content":"     * @param index is the index of the record.","lastModifiedDate":"2021-03-20"},{"lineNumber":259,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":260,"author":{"gitId":"tzexern"},"content":"    public void printIndex(int index) {","lastModifiedDate":"2021-03-12"},{"lineNumber":261,"author":{"gitId":"tzexern"},"content":"        int formattedIndex \u003d index + 1;","lastModifiedDate":"2021-03-12"},{"lineNumber":262,"author":{"gitId":"tzexern"},"content":"        System.out.print(formattedIndex + \". \");","lastModifiedDate":"2021-03-12"},{"lineNumber":263,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":264,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"tzexern":23,"jonahtwl":125,"LeeHanYongAndy":71,"marklowsk":6,"gerardtwk":39}},{"path":"src/test/java/seedu/duke/RecordListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"package seedu.duke;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Expense;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Saving;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Loan;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"import static seedu.duke.common.Validators.validateDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"public class RecordListTest {","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":"    public void addRecord_expenseLoanSavingObjs_success() {","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"        RecordList records \u003d getPopulatedRecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"gerardtwk"},"content":"        assertEquals(3, records.getRecordCount(),","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"gerardtwk"},"content":"                \"Failed test \u0027addRecord_expenseLoanSavingObjs_success\u0027, expected a record count of 3 but \"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":"                        + \"RecordList::getRecordCount() returned \" + records.getRecordCount());","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"gerardtwk"},"content":"        assertEquals(\"[E][2020-01-01] electric bills \", records.getRecordAt(0).toString(),","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"                \"Failed test \u0027addRecord_expenseLoanSavingObjs_success\u0027, wrong record object at index 0 of \"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"gerardtwk"},"content":"                        + \"record list\");","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"gerardtwk"},"content":"        assertEquals(\"[L][2020-01-01] loan to bob [ ]\", records.getRecordAt(1).toString(),","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"gerardtwk"},"content":"                \"Failed test \u0027addRecord_expenseLoanSavingObjs_success\u0027, wrong record object at index 1 of \"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"gerardtwk"},"content":"                        + \"record list\");","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"gerardtwk"},"content":"        assertEquals(\"[S][2020-01-01] red packet \", records.getRecordAt(2).toString(),","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"gerardtwk"},"content":"                \"Failed test \u0027addRecord_expenseLoanSavingObjs_success\u0027, wrong record object at index 2 of \"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"gerardtwk"},"content":"                        + \"record list\");","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"gerardtwk"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"gerardtwk"},"content":"    public void deleteRecordAt_indexOfAddedRecordToDelete_success() {","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"gerardtwk"},"content":"        RecordList records \u003d getPopulatedRecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"gerardtwk"},"content":"        records.deleteRecordAt(1);","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"gerardtwk"},"content":"        assertEquals(2, records.getRecordCount(),","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"gerardtwk"},"content":"                \"Failed test \u0027deleteRecordAt_indexOfAddedRecordToDelete_success\u0027, expected a record count of 2 but \"","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"gerardtwk"},"content":"                        + \"RecordList::getRecordCount() returned \" + records.getRecordCount());","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"gerardtwk"},"content":"        assertEquals(\"[E][2020-01-01] electric bills \", records.getRecordAt(0).toString(),","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"gerardtwk"},"content":"                \"Failed test \u0027deleteRecordAt_indexOfAddedRecordToDelete_success\u0027, wrong record object at index 0 of \"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"gerardtwk"},"content":"                        + \"record list\");","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"gerardtwk"},"content":"        assertEquals(\"[S][2020-01-01] red packet \", records.getRecordAt(1).toString(),","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"gerardtwk"},"content":"                \"Failed test \u0027deleteRecordAt_indexOfAddedRecordToDelete_success\u0027, wrong record object at index 1 of \"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"gerardtwk"},"content":"                        + \"record list\");","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"gerardtwk"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"gerardtwk"},"content":"    public void deleteAllRecords_noTestInputs_success() {","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"gerardtwk"},"content":"        RecordList records \u003d getPopulatedRecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"gerardtwk"},"content":"        records.deleteAllRecords();","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"gerardtwk"},"content":"        assertTrue(records.isEmpty(), \"Failed test \u0027deleteAllRecords_noTestInputs_success\u0027, expected an empty \"","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"gerardtwk"},"content":"                + \"record list but RecordList::isEmpty() returned false\");","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"gerardtwk"},"content":"        assertEquals(0, records.getRecordCount(),","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"gerardtwk"},"content":"                \"Failed test \u0027deleteAllRecords_noTestInputs_success\u0027, expected a record count of 0 but \"","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"gerardtwk"},"content":"                        + \"RecordList::getRecordCount() returned \" + records.getRecordCount());","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"gerardtwk"},"content":"    private RecordList getPopulatedRecordList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"gerardtwk"},"content":"        RecordList records \u003d new RecordList();","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"LeeHanYongAndy"},"content":"        records.addRecord(new Expense(new BigDecimal(\"220.50\"), validateDate(\"2020/01/01\"), \"electric bills\"));","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"gerardtwk"},"content":"        records.addRecord(new Loan(new BigDecimal(\"100\"), validateDate(\"2020/01/01\"), \"loan to bob\", \"bob\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"LeeHanYongAndy"},"content":"        records.addRecord(new Saving(new BigDecimal(\"20\"), validateDate(\"2020/01/01\"), \"red packet\"));","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"gerardtwk"},"content":"        return records;","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":66,"author":{"gitId":"gerardtwk"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"LeeHanYongAndy":5,"gerardtwk":61}},{"path":"src/test/java/seedu/duke/command/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.parser.ParserHandler;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Expense;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Loan;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Saving;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.common.Validators.validateDate;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"gerardtwk"},"content":"class ListCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"gerardtwk"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"    public void executeListExpense_listExpenseCmd_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"gerardtwk"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"gerardtwk"},"content":"                + \"Here is your Expense list:\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"gerardtwk"},"content":"                + \"1. [E][2020-01-01] electric bills \" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"gerardtwk"},"content":"                + \"2. [E][2020-01-02] phone bills \" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"gerardtwk"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"gerardtwk"},"content":"        runListCmdTest(\"executeListExpense_listExpenseCmd_success\", \"expense\", \"list -e\", expectedOutput);","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"gerardtwk"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"gerardtwk"},"content":"    public void executeListLoan_listLoanCmd_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"gerardtwk"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"gerardtwk"},"content":"                + \"Here is your Loan list:\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"gerardtwk"},"content":"                + \"2. [L][2020-01-01] loan to bob [ ]\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"gerardtwk"},"content":"                + \"3. [L][2020-01-02] loan to alice [ ]\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"gerardtwk"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"gerardtwk"},"content":"        runListCmdTest(\"executeListLoan_listLoanCmd_success\", \"loan\", \"list -l\", expectedOutput);","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"gerardtwk"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"gerardtwk"},"content":"    public void executeListSaving_listSavingCmd_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"gerardtwk"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"gerardtwk"},"content":"                + \"Here is your Saving list:\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"gerardtwk"},"content":"                + \"3. [S][2020-01-01] red packet \" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"gerardtwk"},"content":"                + \"4. [S][2020-01-02] pocket money \" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"gerardtwk"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"gerardtwk"},"content":"        runListCmdTest(\"executeListSaving_listSavingCmd_success\", \"saving\", \"list -s\", expectedOutput);","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"gerardtwk"},"content":"    private void runListCmdTest(String listCmdTestName, String listCmdTypeToTest,","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"gerardtwk"},"content":"                                String listCmdStr, String expectedOutput) {","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"gerardtwk"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"gerardtwk"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"LeeHanYongAndy"},"content":"        ParserHandler parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"gerardtwk"},"content":"        RecordList records \u003d getPopulatedRecordList(listCmdTypeToTest);","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"gerardtwk"},"content":"        BorrowersCreditScoreForReturnedLoans borrowersCreditScoreForReturnedLoans \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"gerardtwk"},"content":"                new BorrowersCreditScoreForReturnedLoans(new HashMap\u003c\u003e());","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"marklowsk"},"content":"        CommandHandler commandHandler \u003d new CommandHandler();","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"marklowsk"},"content":"        Command command \u003d commandHandler.parseCommand(parserHandler.getParseInput(listCmdStr), records);","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"gerardtwk"},"content":"        assertTrue(command instanceof ListCommand, String.format(\"Failed test \u0027%s\u0027, \"","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"gerardtwk"},"content":"                + \"command object returned by parseCommand() is not an instance of ListCommand.\", listCmdTestName));","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"gerardtwk"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"gerardtwk"},"content":"        ByteArrayOutputStream listCmdBos \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"gerardtwk"},"content":"        System.setOut(new PrintStream(listCmdBos));","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"gerardtwk"},"content":"        command.execute(records, ui, storage, borrowersCreditScoreForReturnedLoans);","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"gerardtwk"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"gerardtwk"},"content":"        assertTrue(listCmdBos.toString().equals(expectedOutput), String.format(\"Failed test \u0027%s\u0027, wrong output.\",","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"gerardtwk"},"content":"                listCmdTestName));","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"gerardtwk"},"content":"    private RecordList getPopulatedRecordList(String listCmdTypeToTest) {","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"gerardtwk"},"content":"        RecordList records \u003d new RecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"gerardtwk"},"content":"        records.addRecord(new Expense(new BigDecimal(\"220.50\"), validateDate(\"2020/01/01\"), \"electric bills\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"gerardtwk"},"content":"        if (listCmdTypeToTest.equals(\"expense\")) {","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"gerardtwk"},"content":"            records.addRecord(new Expense(new BigDecimal(\"420.50\"), validateDate(\"2020/01/02\"), \"phone bills\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"gerardtwk"},"content":"        records.addRecord(new Loan(new BigDecimal(\"100\"), validateDate(\"2020/01/01\"), \"loan to bob\", \"bob\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":83,"author":{"gitId":"gerardtwk"},"content":"        if (listCmdTypeToTest.equals(\"loan\")) {","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"gerardtwk"},"content":"            records.addRecord(new Loan(new BigDecimal(\"300\"), validateDate(\"2020/01/02\"), \"loan to alice\", \"alice\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":85,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"gerardtwk"},"content":"        records.addRecord(new Saving(new BigDecimal(\"20\"), validateDate(\"2020/01/01\"), \"red packet\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"gerardtwk"},"content":"        if (listCmdTypeToTest.equals(\"saving\")) {","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"gerardtwk"},"content":"            records.addRecord(new Saving(new BigDecimal(\"40\"), validateDate(\"2020/01/02\"), \"pocket money\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"gerardtwk"},"content":"        return records;","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"gerardtwk"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"LeeHanYongAndy":1,"marklowsk":2,"gerardtwk":90}},{"path":"src/test/java/seedu/duke/command/RemoveCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"import seedu.duke.parser.ParserHandler;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":"import seedu.duke.record.Expense;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"import seedu.duke.record.Loan;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":"import seedu.duke.record.Saving;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"tzexern"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"import static seedu.duke.common.Validators.validateDate;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"class RemoveCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"tzexern"},"content":"    void executeRemoveExpense_removeExpenseCmd_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":"        RecordList records \u003d new RecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"        CommandHandler commandHandler \u003d new CommandHandler();","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"        records.addRecord(new Expense(new BigDecimal(\"220.50\"), validateDate(\"2020/01/01\"), \"electric bills\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":"        records.addRecord(new Expense(new BigDecimal(\"420.50\"), validateDate(\"2020/01/02\"), \"phone bills\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"gerardtwk"},"content":"        records.addRecord(new Loan(new BigDecimal(\"100\"), validateDate(\"2020/01/01\"), \"loan to bob\", \"bob\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"        records.addRecord(new Saving(new BigDecimal(\"20\"), validateDate(\"2020/01/01\"), \"red packet\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"        String removeExpenseCmd \u003d \"remove -i 1\";","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"LeeHanYongAndy"},"content":"        ParserHandler parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":"        Command command \u003d commandHandler.parseCommand(parserHandler.getParseInput(removeExpenseCmd), records);","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"        assertTrue(command instanceof RemoveCommand, \"Failed test \u0027executeRemoveExpense_removeExpenseCmd_success\u0027, \"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"                + \"command object returned by parseCommand() is not an instance of RemoveCommand\");","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"gerardtwk"},"content":"        BorrowersCreditScoreForReturnedLoans borrowersCreditScoreForReturnedLoans \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"gerardtwk"},"content":"                new BorrowersCreditScoreForReturnedLoans(new HashMap\u003c\u003e());","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"tzexern"},"content":"        ByteArrayOutputStream removeCmdBos \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"tzexern"},"content":"        System.setOut(new PrintStream(removeCmdBos));","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"tzexern"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"tzexern"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"tzexern"},"content":"                + \"This record will be removed: [E][2020-01-01] electric bills \" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"tzexern"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"gerardtwk"},"content":"        command.execute(records, ui, storage, borrowersCreditScoreForReturnedLoans);","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"tzexern"},"content":"        assertTrue(removeCmdBos.toString().equals(expectedOutput), \"Failed test \"","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"tzexern"},"content":"                + \"\u0027executeRemoveExpense_removeExpenseCmd_success\u0027, wrong output.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"tzexern"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"tzexern"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"tzexern"},"content":"    void executeRemoveLoan_removeLoanCmd_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"tzexern"},"content":"        RecordList records \u003d new RecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"marklowsk"},"content":"        CommandHandler commandHandler \u003d new CommandHandler();","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"tzexern"},"content":"        records.addRecord(new Expense(new BigDecimal(\"220.50\"), validateDate(\"2020/01/01\"), \"electric bills\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"tzexern"},"content":"        records.addRecord(new Expense(new BigDecimal(\"420.50\"), validateDate(\"2020/01/02\"), \"phone bills\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"gerardtwk"},"content":"        records.addRecord(new Loan(new BigDecimal(\"100\"), validateDate(\"2020/01/01\"), \"loan to bob\", \"bob\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"tzexern"},"content":"        records.addRecord(new Saving(new BigDecimal(\"20\"), validateDate(\"2020/01/01\"), \"red packet\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"tzexern"},"content":"        String removeLoanCmd \u003d \"remove -i 3\";","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"        ParserHandler parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"marklowsk"},"content":"        Command command \u003d commandHandler.parseCommand(parserHandler.getParseInput(removeLoanCmd), records);","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"tzexern"},"content":"        assertTrue(command instanceof RemoveCommand, \"Failed test \u0027executeRemoveLoan_removeLoanCmd_success\u0027, \"","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"tzexern"},"content":"                + \"command object returned by parseCommand() is not an instance of RemoveCommand\");","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"tzexern"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"tzexern"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"gerardtwk"},"content":"        BorrowersCreditScoreForReturnedLoans borrowersCreditScoreForReturnedLoans \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"gerardtwk"},"content":"                new BorrowersCreditScoreForReturnedLoans(new HashMap\u003c\u003e());","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"tzexern"},"content":"        ByteArrayOutputStream removeCmdBos \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"tzexern"},"content":"        System.setOut(new PrintStream(removeCmdBos));","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"tzexern"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"tzexern"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"tzexern"},"content":"                + \"This record will be removed: [L][2020-01-01] loan to bob [ ]\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"tzexern"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"gerardtwk"},"content":"        command.execute(records, ui, storage, borrowersCreditScoreForReturnedLoans);","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"tzexern"},"content":"        assertTrue(removeCmdBos.toString().equals(expectedOutput), \"Failed test \"","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"tzexern"},"content":"                + \"\u0027executeRemoveLoan_removeLoanCmd_success\u0027, wrong output.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"tzexern"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"tzexern"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"tzexern"},"content":"    void executeRemoveSaving_removeSavingCmd_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"tzexern"},"content":"        RecordList records \u003d new RecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"marklowsk"},"content":"        CommandHandler commandHandler \u003d new CommandHandler();","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"tzexern"},"content":"        records.addRecord(new Expense(new BigDecimal(\"220.50\"), validateDate(\"2020/01/01\"), \"electric bills\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"tzexern"},"content":"        records.addRecord(new Expense(new BigDecimal(\"420.50\"), validateDate(\"2020/01/02\"), \"phone bills\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"gerardtwk"},"content":"        records.addRecord(new Loan(new BigDecimal(\"100\"), validateDate(\"2020/01/01\"), \"loan to bob\", \"bob\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":93,"author":{"gitId":"tzexern"},"content":"        records.addRecord(new Saving(new BigDecimal(\"20\"), validateDate(\"2020/01/01\"), \"red packet\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"tzexern"},"content":"        String removeSavingCmd \u003d \"remove -i 4\";","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"LeeHanYongAndy"},"content":"        ParserHandler parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"marklowsk"},"content":"        Command command \u003d commandHandler.parseCommand(parserHandler.getParseInput(removeSavingCmd), records);","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"tzexern"},"content":"        assertTrue(command instanceof RemoveCommand, \"Failed test \u0027executeRemoveSaving_removeSavingCmd_success\u0027, \"","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"tzexern"},"content":"                + \"command object returned by parseCommand() is not an instance of RemoveCommand\");","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"tzexern"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"tzexern"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"gerardtwk"},"content":"        BorrowersCreditScoreForReturnedLoans borrowersCreditScoreForReturnedLoans \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"gerardtwk"},"content":"                new BorrowersCreditScoreForReturnedLoans(new HashMap\u003c\u003e());","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"tzexern"},"content":"        ByteArrayOutputStream removeCmdBos \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"tzexern"},"content":"        System.setOut(new PrintStream(removeCmdBos));","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"tzexern"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"tzexern"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"tzexern"},"content":"                + \"This record will be removed: [S][2020-01-01] red packet \" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"tzexern"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"gerardtwk"},"content":"        command.execute(records, ui, storage, borrowersCreditScoreForReturnedLoans);","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"tzexern"},"content":"        assertTrue(removeCmdBos.toString().equals(expectedOutput), \"Failed test \"","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"tzexern"},"content":"                + \"\u0027executeRemoveSaving_removeSavingCmd_success\u0027, wrong output.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"tzexern"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"tzexern"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"tzexern":92,"marklowsk":9,"LeeHanYongAndy":3,"gerardtwk":13}},{"path":"src/test/java/seedu/duke/command/ReturnCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.parser.ParserHandler;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.Loan;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"import static seedu.duke.common.Validators.validateDate;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":"public class ReturnCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"    public void executeReturnCommand_returnCmd_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":"        String testName \u003d \"executeReturnCommand_returnCmd_success\";","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":"                + \"Loan marked as returned: [L][2021-03-15] Loan to Andy [v]\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"jonahtwl"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"gerardtwk"},"content":"        String returnCmdInput \u003d \"return -i 1 -d 2021-03-16\";","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"        runReturnCmdTest(expectedOutput, returnCmdInput, testName);","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"    public void executeReturnCommand_returnCmdTwo_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"        String testName \u003d \"executeReturnCommand_returnCmdTwo_success\";","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":"                + \"Loan marked as returned: [L][2021-03-16] Loan to Jason [v]\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"jonahtwl"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"gerardtwk"},"content":"        String returnCmdInput \u003d \"return -i 3 -d 2021-03-16\";","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":"        runReturnCmdTest(expectedOutput, returnCmdInput, testName);","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"jonahtwl"},"content":"    private void runReturnCmdTest(String expectedOutput, String returnCmdInput, String testName) {","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"jonahtwl"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"gerardtwk"},"content":"        BorrowersCreditScoreForReturnedLoans borrowersCreditScoreForReturnedLoans \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"gerardtwk"},"content":"                new BorrowersCreditScoreForReturnedLoans(new HashMap\u003c\u003e());","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"jonahtwl"},"content":"        RecordList loans \u003d getLoanList();","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"marklowsk"},"content":"        CommandHandler commandHandler \u003d new CommandHandler();","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"jonahtwl"},"content":"        ByteArrayOutputStream returnCmdBos \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"jonahtwl"},"content":"        System.setOut(new PrintStream(returnCmdBos));","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"        ParserHandler parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"marklowsk"},"content":"        Command command \u003d commandHandler.parseCommand(parserHandler.getParseInput(returnCmdInput), loans);","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"jonahtwl"},"content":"        assertTrue(command instanceof ReturnCommand,","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"jonahtwl"},"content":"                String.format(\"Failed test \u0027%s\u0027 command object \"","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"jonahtwl"},"content":"                        + \"returned by parseCommand() is not an instance of ReturnCommand\", testName));","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"gerardtwk"},"content":"        command.execute(loans, ui, storage, borrowersCreditScoreForReturnedLoans);","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"jonahtwl"},"content":"        System.setOut(System.out);","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"jonahtwl"},"content":"        assertTrue(returnCmdBos.toString().equals(expectedOutput), String.format(\"Failed test \"","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"jonahtwl"},"content":"            + \"\u0027%s\u0027, wrong output.\", testName));","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"jonahtwl"},"content":"    private RecordList getLoanList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"jonahtwl"},"content":"        RecordList loans \u003d new RecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"gerardtwk"},"content":"        loans.addRecord(new Loan(new BigDecimal(\"43.28\"), validateDate(\"2021/03/15\"), \"Loan to Andy\", \"Andy\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":67,"author":{"gitId":"gerardtwk"},"content":"        loans.addRecord(new Loan(new BigDecimal(\"89.23\"), validateDate(\"2021/03/17\"), \"Loan to Mark\", \"Mark\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":68,"author":{"gitId":"gerardtwk"},"content":"        loans.addRecord(new Loan(new BigDecimal(\"5.67\"), validateDate(\"2021/03/16\"), \"Loan to Jason\", \"Jason\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":69,"author":{"gitId":"jonahtwl"},"content":"        return loans;","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"jonahtwl"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"jonahtwl":58,"marklowsk":3,"LeeHanYongAndy":1,"gerardtwk":9}},{"path":"src/test/java/seedu/duke/command/UtilsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.ArgumentType;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.parser.ParserHandler;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.AddCommand.COMMAND_ADD;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.HelpCommand.COMMAND_HELP;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.getOptionValue;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.isOption;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateArguments;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateOptions;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.ViewCommand.COMMAND_VIEW;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_AMOUNT;","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_DATE;","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_EXPENSE;","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_LOAN;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_SAVING;","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"class UtilsTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final ArgumentType[] ARG_TYPE_ORDER_CMD_HELP \u003d {","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArgumentType.COMMAND,","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArgumentType.VALUE","lastModifiedDate":"2021-03-19"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"    };","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"    private static final ArgumentType[] ARG_TYPE_ORDER_CMD_VIEW \u003d {","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.COMMAND,","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.OPTION,","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.EMPTY_VALUE","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"    };","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"marklowsk"},"content":"    private static final String[] OR_OPTIONS \u003d {OPTION_EXPENSE, OPTION_LOAN, OPTION_SAVING};","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"marklowsk"},"content":"    private static final String[] VALID_OPTIONS_ADD \u003d {","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"marklowsk"},"content":"        OPTION_EXPENSE, OPTION_LOAN, OPTION_SAVING, OPTION_AMOUNT, OPTION_DATE","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"marklowsk"},"content":"    };","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"marklowsk"},"content":"    @DisplayName(\"[isOption] - Valid Options - success:\")","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"marklowsk"},"content":"    public void isOption_optionMatch_success() {","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"marklowsk"},"content":"        assertAll(","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-e\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-l\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-s\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-d\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-a\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-i\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-E\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-L\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-S\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-D\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-A\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-I\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-p\"))","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"marklowsk"},"content":"        );","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"marklowsk"},"content":"    @DisplayName(\"[isOption] - Invalid Options - failure:\")","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"marklowsk"},"content":"    public void isOption_invalidOptions() {","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"marklowsk"},"content":"        assertAll(","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertFalse(isOption(\"--\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertFalse(isOption(\"-[\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertFalse(isOption(\"- \")),","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertFalse(isOption(\"-1\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertFalse(isOption(\"-9\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertFalse(isOption(\"-hello\"))","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"marklowsk"},"content":"        );","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"marklowsk"},"content":"    private void validateArguments_improperCommand_helper(ArrayList\u003cString\u003e arguments,","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"marklowsk"},"content":"                                                          ArgumentType[] argumentTypeOrder,","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"marklowsk"},"content":"                                                          String expected,","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"marklowsk"},"content":"                                                          String command) {","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"marklowsk"},"content":"        CommandException e \u003d assertThrows(","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"marklowsk"},"content":"                CommandException.class,","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"marklowsk"},"content":"            () -\u003e validateArguments(arguments, argumentTypeOrder, command)","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"marklowsk"},"content":"        );","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"marklowsk"},"content":"        if (!e.getMessage().equals(expected)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"marklowsk"},"content":"            fail(arguments.toString() + \" - Error: \" + e.getMessage());","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"marklowsk"},"content":"    @DisplayName(\"[validateArguments] - help Command - success:\")","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"marklowsk"},"content":"    public void validateArguments_properHelp_success() {","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"LeeHanYongAndy"},"content":"        ParserHandler parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command \u003d parserHandler.getParseInput(\"help\");","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"marklowsk"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"marklowsk"},"content":"            validateArguments(command, ARG_TYPE_ORDER_CMD_HELP, COMMAND_HELP);","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"marklowsk"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"marklowsk"},"content":"            fail(e.getMessage());","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"marklowsk"},"content":"    @DisplayName(\"[validateArguments] - help Command - failure:\")","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":105,"author":{"gitId":"marklowsk"},"content":"    public void validateArguments_improperHelp() {","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"LeeHanYongAndy"},"content":"        // new test case to be written.","lastModifiedDate":"2021-03-19"},{"lineNumber":107,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"marklowsk"},"content":"    @DisplayName(\"[validateArguments] - view Command - success:\")","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"marklowsk"},"content":"    public void validateArguments_properView_success() {","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"LeeHanYongAndy"},"content":"        ParserHandler parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"marklowsk"},"content":"        // By assumption that options are valid and order is correct.","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command1 \u003d parserHandler.getParseInput(\"view -e\");","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command2 \u003d parserHandler.getParseInput(\"view -l\");","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command3 \u003d parserHandler.getParseInput(\"view -s\");","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"marklowsk"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"marklowsk"},"content":"            validateArguments(command1, ARG_TYPE_ORDER_CMD_VIEW, COMMAND_VIEW);","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"marklowsk"},"content":"            validateArguments(command2, ARG_TYPE_ORDER_CMD_VIEW, COMMAND_VIEW);","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"marklowsk"},"content":"            validateArguments(command3, ARG_TYPE_ORDER_CMD_VIEW, COMMAND_VIEW);","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"marklowsk"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"marklowsk"},"content":"            fail(e.getMessage());","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":125,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"marklowsk"},"content":"    @DisplayName(\"[validateArguments] - view Command - failure:\")","lastModifiedDate":"2021-03-14"},{"lineNumber":127,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":128,"author":{"gitId":"marklowsk"},"content":"    public void validateArguments_improperView() {","lastModifiedDate":"2021-03-14"},{"lineNumber":129,"author":{"gitId":"marklowsk"},"content":"        String expected1 \u003d \"view Command - invalid input: \";","lastModifiedDate":"2021-03-14"},{"lineNumber":130,"author":{"gitId":"marklowsk"},"content":"        String expected25 \u003d \"view Command - not enough arguments.\";","lastModifiedDate":"2021-03-14"},{"lineNumber":131,"author":{"gitId":"marklowsk"},"content":"        String expected34 \u003d \"view Command - too many arguments.\";","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":133,"author":{"gitId":"LeeHanYongAndy"},"content":"        ParserHandler parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command1 \u003d parserHandler.getParseInput(\"view -l abc\");","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"marklowsk"},"content":"        validateArguments_improperCommand_helper(command1, ARG_TYPE_ORDER_CMD_VIEW,","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"marklowsk"},"content":"                expected1 + \"abc\", COMMAND_VIEW);","lastModifiedDate":"2021-03-14"},{"lineNumber":137,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command2 \u003d parserHandler.getParseInput(\"view -z -z\");","lastModifiedDate":"2021-03-23"},{"lineNumber":139,"author":{"gitId":"marklowsk"},"content":"        validateArguments_improperCommand_helper(command2, ARG_TYPE_ORDER_CMD_VIEW,","lastModifiedDate":"2021-03-14"},{"lineNumber":140,"author":{"gitId":"marklowsk"},"content":"                expected25, COMMAND_VIEW);","lastModifiedDate":"2021-03-14"},{"lineNumber":141,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command3 \u003d parserHandler.getParseInput(\"view -s -s\");","lastModifiedDate":"2021-03-23"},{"lineNumber":143,"author":{"gitId":"marklowsk"},"content":"        validateArguments_improperCommand_helper(command3, ARG_TYPE_ORDER_CMD_VIEW,","lastModifiedDate":"2021-03-14"},{"lineNumber":144,"author":{"gitId":"marklowsk"},"content":"                expected34, COMMAND_VIEW);","lastModifiedDate":"2021-03-14"},{"lineNumber":145,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":146,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command4 \u003d parserHandler.getParseInput(\"view -l -l\");","lastModifiedDate":"2021-03-23"},{"lineNumber":147,"author":{"gitId":"marklowsk"},"content":"        validateArguments_improperCommand_helper(command4, ARG_TYPE_ORDER_CMD_VIEW,","lastModifiedDate":"2021-03-14"},{"lineNumber":148,"author":{"gitId":"marklowsk"},"content":"                expected34, COMMAND_VIEW);","lastModifiedDate":"2021-03-14"},{"lineNumber":149,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":150,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command5 \u003d parserHandler.getParseInput(\"view\");","lastModifiedDate":"2021-03-23"},{"lineNumber":151,"author":{"gitId":"marklowsk"},"content":"        validateArguments_improperCommand_helper(command5, ARG_TYPE_ORDER_CMD_VIEW,","lastModifiedDate":"2021-03-14"},{"lineNumber":152,"author":{"gitId":"marklowsk"},"content":"                expected25, COMMAND_VIEW);","lastModifiedDate":"2021-03-14"},{"lineNumber":153,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":154,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":155,"author":{"gitId":"marklowsk"},"content":"    @DisplayName(\"[validateOptions] - Valid options - success:\")","lastModifiedDate":"2021-03-14"},{"lineNumber":156,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":157,"author":{"gitId":"marklowsk"},"content":"    public void validateOptions_validOptions_success() {","lastModifiedDate":"2021-03-14"},{"lineNumber":158,"author":{"gitId":"LeeHanYongAndy"},"content":"        ParserHandler parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":159,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command1 \u003d parserHandler.getParseInput(\"view -l\");","lastModifiedDate":"2021-03-23"},{"lineNumber":160,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command2 \u003d parserHandler.getParseInput(\"add -s savings -a 200.00 -d 20/1/2021\");","lastModifiedDate":"2021-03-23"},{"lineNumber":161,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command3 \u003d parserHandler.getParseInput(\"add -a 200.00 -d 20/1/2021 -s savings\");","lastModifiedDate":"2021-03-23"},{"lineNumber":162,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":163,"author":{"gitId":"marklowsk"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":164,"author":{"gitId":"marklowsk"},"content":"            validateOptions(command1, COMMAND_VIEW, OR_OPTIONS, OR_OPTIONS);","lastModifiedDate":"2021-03-14"},{"lineNumber":165,"author":{"gitId":"marklowsk"},"content":"            validateOptions(command2, COMMAND_ADD, VALID_OPTIONS_ADD, OR_OPTIONS);","lastModifiedDate":"2021-03-14"},{"lineNumber":166,"author":{"gitId":"marklowsk"},"content":"            validateOptions(command3, COMMAND_ADD, VALID_OPTIONS_ADD, OR_OPTIONS);","lastModifiedDate":"2021-03-14"},{"lineNumber":167,"author":{"gitId":"marklowsk"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":168,"author":{"gitId":"marklowsk"},"content":"            fail();","lastModifiedDate":"2021-03-14"},{"lineNumber":169,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":170,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":171,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":172,"author":{"gitId":"marklowsk"},"content":"    @DisplayName(\"[validateOptions] - Invalid options - failure:\")","lastModifiedDate":"2021-03-14"},{"lineNumber":173,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":174,"author":{"gitId":"marklowsk"},"content":"    public void validateOptions_invalidOptions() {","lastModifiedDate":"2021-03-14"},{"lineNumber":175,"author":{"gitId":"LeeHanYongAndy"},"content":"        ParserHandler parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":176,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command1 \u003d parserHandler.getParseInput(\"view -l -z\");","lastModifiedDate":"2021-03-23"},{"lineNumber":177,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command2 \u003d parserHandler.getParseInput(\"add -s -a 200.00 -d -d\");","lastModifiedDate":"2021-03-23"},{"lineNumber":178,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command3 \u003d parserHandler.getParseInput(\"add -a -s -s -d\");","lastModifiedDate":"2021-03-23"},{"lineNumber":179,"author":{"gitId":"marklowsk"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":180,"author":{"gitId":"marklowsk"},"content":"                validateOptions(command1, COMMAND_VIEW, OR_OPTIONS, OR_OPTIONS));","lastModifiedDate":"2021-03-14"},{"lineNumber":181,"author":{"gitId":"marklowsk"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":182,"author":{"gitId":"marklowsk"},"content":"                validateOptions(command2, COMMAND_ADD, VALID_OPTIONS_ADD, OR_OPTIONS));","lastModifiedDate":"2021-03-14"},{"lineNumber":183,"author":{"gitId":"marklowsk"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":184,"author":{"gitId":"marklowsk"},"content":"                validateOptions(command3, COMMAND_ADD, VALID_OPTIONS_ADD, OR_OPTIONS));","lastModifiedDate":"2021-03-14"},{"lineNumber":185,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":186,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":187,"author":{"gitId":"marklowsk"},"content":"    @DisplayName(\"[getOptionValue] - Option exists - success:\")","lastModifiedDate":"2021-03-14"},{"lineNumber":188,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":189,"author":{"gitId":"marklowsk"},"content":"    public void getOptionValue_optionExists_success() {","lastModifiedDate":"2021-03-14"},{"lineNumber":190,"author":{"gitId":"LeeHanYongAndy"},"content":"        ParserHandler parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":191,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command1 \u003d parserHandler.getParseInput(\"add -s savings -a 200.00 -d 20/1/2021\");","lastModifiedDate":"2021-03-23"},{"lineNumber":192,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command2 \u003d parserHandler.getParseInput(\"add -a 200.00 -d 20/1/2021 -s savings\");","lastModifiedDate":"2021-03-23"},{"lineNumber":193,"author":{"gitId":"marklowsk"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":194,"author":{"gitId":"marklowsk"},"content":"            assertEquals(\"200.00\", getOptionValue(command1, COMMAND_ADD, \"-a\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":195,"author":{"gitId":"marklowsk"},"content":"            assertEquals(\"20/1/2021\", getOptionValue(command1, COMMAND_ADD, \"-d\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":196,"author":{"gitId":"marklowsk"},"content":"            assertEquals(\"savings\", getOptionValue(command1, COMMAND_ADD, \"-s\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":197,"author":{"gitId":"marklowsk"},"content":"            assertEquals(\"200.00\", getOptionValue(command2, COMMAND_ADD, \"-a\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":198,"author":{"gitId":"marklowsk"},"content":"            assertEquals(\"20/1/2021\", getOptionValue(command2, COMMAND_ADD, \"-d\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":199,"author":{"gitId":"marklowsk"},"content":"            assertEquals(\"savings\", getOptionValue(command2, COMMAND_ADD, \"-s\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":200,"author":{"gitId":"marklowsk"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":201,"author":{"gitId":"marklowsk"},"content":"            fail();","lastModifiedDate":"2021-03-14"},{"lineNumber":202,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":203,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":204,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":205,"author":{"gitId":"marklowsk"},"content":"    @DisplayName(\"[getOptionValue] - Option empty - failure:\")","lastModifiedDate":"2021-03-14"},{"lineNumber":206,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":207,"author":{"gitId":"marklowsk"},"content":"    public void getOptionValue_optionEmpty() {","lastModifiedDate":"2021-03-14"},{"lineNumber":208,"author":{"gitId":"LeeHanYongAndy"},"content":"        ParserHandler parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":209,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command1 \u003d parserHandler.getParseInput(\"add -s -a -d\");","lastModifiedDate":"2021-03-23"},{"lineNumber":210,"author":{"gitId":"marklowsk"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":211,"author":{"gitId":"marklowsk"},"content":"                getOptionValue(command1, COMMAND_ADD, \"-a\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":212,"author":{"gitId":"marklowsk"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":213,"author":{"gitId":"marklowsk"},"content":"                getOptionValue(command1, COMMAND_ADD, \"-d\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":214,"author":{"gitId":"marklowsk"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":215,"author":{"gitId":"marklowsk"},"content":"                getOptionValue(command1, COMMAND_ADD, \"-s\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":216,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":217,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command2 \u003d parserHandler.getParseInput(\"add -a 200.00 -d -s savings\");","lastModifiedDate":"2021-03-23"},{"lineNumber":218,"author":{"gitId":"marklowsk"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":219,"author":{"gitId":"marklowsk"},"content":"                getOptionValue(command2, COMMAND_ADD, \"-d\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":220,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":221,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"marklowsk":190,"LeeHanYongAndy":31}},{"path":"src/test/java/seedu/duke/command/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"import seedu.duke.parser.ParserHandler;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"LeeHanYongAndy"},"content":"import seedu.duke.record.Expense;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"LeeHanYongAndy"},"content":"import seedu.duke.record.Loan;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"LeeHanYongAndy"},"content":"import seedu.duke.record.Saving;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"LeeHanYongAndy"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"LeeHanYongAndy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"LeeHanYongAndy"},"content":"import static seedu.duke.common.Validators.validateDate;","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"class ViewCommandTest {","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":"    private ParserHandler parserHandler;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void executeViewExpense_viewExpenseCmd_success() {","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"LeeHanYongAndy"},"content":"                + \"The total amount for expense is 12.88\" + System.lineSeparator()","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"LeeHanYongAndy"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"LeeHanYongAndy"},"content":"        runViewCmdTest(\"executeViewExpense_viewExpenseCmd_success\", \"expense\", \"view -e\", expectedOutput);","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void executeViewLoan_viewLoanCmd_success() {","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"LeeHanYongAndy"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"                + \"The total amount for loan is 14.36\" + System.lineSeparator()","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"LeeHanYongAndy"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"LeeHanYongAndy"},"content":"        runViewCmdTest(\"executeViewLoan_viewLoanCmd_success\", \"loan\", \"view -l\", expectedOutput);","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void executeViewSaving_viewSavingCmd_success() {","lastModifiedDate":"2021-03-20"},{"lineNumber":41,"author":{"gitId":"LeeHanYongAndy"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-03-20"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"                + \"The total amount for saving is 9876543211.54\" + System.lineSeparator()","lastModifiedDate":"2021-03-20"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-03-20"},{"lineNumber":44,"author":{"gitId":"LeeHanYongAndy"},"content":"        runViewCmdTest(\"executeViewSaving_viewSavingCmd_success\", \"saving\", \"view -s\", expectedOutput);","lastModifiedDate":"2021-03-20"},{"lineNumber":45,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"    private void runViewCmdTest(String viewCmdTestName, String viewCmdTypeToTest,","lastModifiedDate":"2021-03-20"},{"lineNumber":48,"author":{"gitId":"LeeHanYongAndy"},"content":"                                String viewCmdStr, String expectedOutput) {","lastModifiedDate":"2021-03-20"},{"lineNumber":49,"author":{"gitId":"LeeHanYongAndy"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-03-20"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-03-20"},{"lineNumber":51,"author":{"gitId":"LeeHanYongAndy"},"content":"        ParserHandler parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"gerardtwk"},"content":"        BorrowersCreditScoreForReturnedLoans borrowersCreditScoreForReturnedLoans \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"gerardtwk"},"content":"                new BorrowersCreditScoreForReturnedLoans(new HashMap\u003c\u003e());","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"LeeHanYongAndy"},"content":"        RecordList records \u003d getPopulatedRecordList(viewCmdTypeToTest);","lastModifiedDate":"2021-03-20"},{"lineNumber":55,"author":{"gitId":"marklowsk"},"content":"        CommandHandler commandHandler \u003d new CommandHandler();","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":57,"author":{"gitId":"marklowsk"},"content":"        Command command \u003d commandHandler.parseCommand(parserHandler.getParseInput(viewCmdStr), records);","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":59,"author":{"gitId":"LeeHanYongAndy"},"content":"        assertTrue(command instanceof ViewCommand, String.format(\"Failed test \u0027%s\u0027, \"","lastModifiedDate":"2021-03-20"},{"lineNumber":60,"author":{"gitId":"LeeHanYongAndy"},"content":"                + \"command object returned by parseCommand() is not an instance of ViewCommand.\", viewCmdTestName));","lastModifiedDate":"2021-03-20"},{"lineNumber":61,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":62,"author":{"gitId":"LeeHanYongAndy"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-03-20"},{"lineNumber":63,"author":{"gitId":"LeeHanYongAndy"},"content":"        ByteArrayOutputStream viewCmdBos \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-03-20"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.setOut(new PrintStream(viewCmdBos));","lastModifiedDate":"2021-03-20"},{"lineNumber":65,"author":{"gitId":"gerardtwk"},"content":"        command.execute(records, ui, storage, borrowersCreditScoreForReturnedLoans);","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-03-20"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"        assertTrue(viewCmdBos.toString().equals(expectedOutput), String.format(\"Failed test \u0027%s\u0027, wrong output.\",","lastModifiedDate":"2021-03-20"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"                viewCmdTestName));","lastModifiedDate":"2021-03-20"},{"lineNumber":69,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":70,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":71,"author":{"gitId":"LeeHanYongAndy"},"content":"    private RecordList getPopulatedRecordList(String viewCmdTypeToTest) {","lastModifiedDate":"2021-03-20"},{"lineNumber":72,"author":{"gitId":"LeeHanYongAndy"},"content":"        RecordList records \u003d new RecordList();","lastModifiedDate":"2021-03-20"},{"lineNumber":73,"author":{"gitId":"LeeHanYongAndy"},"content":"        records.addRecord(new Expense(new BigDecimal(\"2\"), validateDate(\"2020/01/01\"), \"electric bills\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":74,"author":{"gitId":"LeeHanYongAndy"},"content":"        if (viewCmdTypeToTest.equals(\"expense\")) {","lastModifiedDate":"2021-03-20"},{"lineNumber":75,"author":{"gitId":"LeeHanYongAndy"},"content":"            records.addRecord(new Expense(new BigDecimal(\"10.88\"), validateDate(\"2020/01/02\"), \"phone bills\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":76,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":77,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":78,"author":{"gitId":"gerardtwk"},"content":"        records.addRecord(new Loan(new BigDecimal(\"10.601\"), validateDate(\"2020/01/01\"), \"loan to bob\", \"bob\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"LeeHanYongAndy"},"content":"        if (viewCmdTypeToTest.equals(\"loan\")) {","lastModifiedDate":"2021-03-20"},{"lineNumber":80,"author":{"gitId":"gerardtwk"},"content":"            records.addRecord(new Loan(new BigDecimal(\"3.755\"), validateDate(\"2020/01/02\"), \"loan to alice\", \"alice\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":82,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":83,"author":{"gitId":"LeeHanYongAndy"},"content":"        records.addRecord(new Saving(new BigDecimal(\"9876543210.54\"), validateDate(\"2020/01/01\"), \"red packet\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":84,"author":{"gitId":"LeeHanYongAndy"},"content":"        if (viewCmdTypeToTest.equals(\"saving\")) {","lastModifiedDate":"2021-03-20"},{"lineNumber":85,"author":{"gitId":"LeeHanYongAndy"},"content":"            records.addRecord(new Saving(new BigDecimal(\"1.004\"), validateDate(\"2020/01/02\"), \"pocket money\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":86,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":87,"author":{"gitId":"LeeHanYongAndy"},"content":"        return records;","lastModifiedDate":"2021-03-20"},{"lineNumber":88,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":89,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"LeeHanYongAndy":81,"marklowsk":2,"gerardtwk":6}},{"path":"src/test/java/seedu/duke/common/ValidatorsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.common;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"import seedu.duke.exception.CustomException;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"LeeHanYongAndy"},"content":"import static seedu.duke.common.Validators.validateAmount;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Validators.validateDate;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"class ValidatorsTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"    void validateDate_properDateFormat_success() {","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"        String[] dateStrings \u003d {","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"            \"13122011\", \"13.1.2011\", \"13-1-2011\", \"13/1/2011\",","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"            \"2011.1.13\", \"2011-1-13\", \"2011/1/13\", \"today\"","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"        };","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"        try {","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"            for (String d : dateStrings) {","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"                validateDate(d);","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"            fail();","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"    void validateDate_improperDateFormat() {","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":"        final int finalCount \u003d 8;","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"        int counter \u003d 0;","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":"        String[] dateStrings \u003d {","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"            \"12345678\", \"13.13.2011\", \"13-13-2011\", \"13 13 2011\",","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"            \"2011 1 13\", \"2011-1/13\", \"2011/1.13\", \"today123\"","lastModifiedDate":"2021-03-19"},{"lineNumber":36,"author":{"gitId":"marklowsk"},"content":"        };","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"marklowsk"},"content":"        for (String d : dateStrings) {","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"            try {","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"                validateDate(d);","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"marklowsk"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"marklowsk"},"content":"                counter++;","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"marklowsk"},"content":"        if (finalCount !\u003d counter) {","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"marklowsk"},"content":"            fail();","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"    void validateAmount_properFormat_expectSuccess() {","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfAmount \u003d {\"0.1\", \"1.0\", \"1\", \"987654321\", \"0.987654321\"};","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"LeeHanYongAndy"},"content":"        try {","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"LeeHanYongAndy"},"content":"            for (String testAmount : arrayOfAmount) {","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"LeeHanYongAndy"},"content":"                validateAmount(testAmount);","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"LeeHanYongAndy"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"LeeHanYongAndy"},"content":"        } catch (NumberFormatException | CustomException e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"LeeHanYongAndy"},"content":"            fail();","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"LeeHanYongAndy"},"content":"    void validateAmount_wrongFormat_expectFailure() {","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"LeeHanYongAndy"},"content":"        int numFailCase \u003d 0;","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfAmount \u003d {\"0\", \"-1\", \"1num1word\", \"wordonly\"};","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (String testAmount : arrayOfAmount) {","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"            try {","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"                validateAmount(testAmount);","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"            } catch (NumberFormatException | CustomException e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"LeeHanYongAndy"},"content":"                numFailCase++;","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"LeeHanYongAndy"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"LeeHanYongAndy"},"content":"        if (arrayOfAmount.length !\u003d numFailCase) {","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"LeeHanYongAndy"},"content":"            fail();","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"marklowsk":46,"LeeHanYongAndy":30}},{"path":"src/test/java/seedu/duke/parser/ParserHandlerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"LeeHanYongAndy"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":"class ParserHandlerTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"LeeHanYongAndy"},"content":"    private ParserHandler parserHandler;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_emptyInput() {","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"LeeHanYongAndy"},"content":"        parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"        String input \u003d \"\";","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] expected \u003d {\"\"};","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] actual \u003d parserHandler.getParseInput(input).toArray(new String[0]);","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":"        assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_oneWord() {","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":"        parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfTestCase \u003d {\"add\", \"add \", \" add\", \" add \"};","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] expected \u003d {\"add\"};","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (String testCase : arrayOfTestCase) {","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] actual \u003d parserHandler.getParseInput(testCase).toArray(new String[0]);","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"LeeHanYongAndy"},"content":"            assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_oneOption_noArgument() {","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"LeeHanYongAndy"},"content":"        parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfTestCase \u003d {\"-e\", \"-e \", \" -e\", \" -e \"};","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] expected \u003d {\"-e\", \"\"};","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (String testCase : arrayOfTestCase) {","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] actual \u003d parserHandler.getParseInput(testCase).toArray(new String[0]);","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"LeeHanYongAndy"},"content":"            assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_TwoOption_noArgument() {","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"        parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfTestCase \u003d {\"-e -s\", \"-e -s \", \" -e -s\", \" -e -s \", \" -e   -s \"};","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] expected \u003d {\"-e\", \"\", \"-s\", \"\"};","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (String testCase : arrayOfTestCase) {","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] actual \u003d parserHandler.getParseInput(testCase).toArray(new String[0]);","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"LeeHanYongAndy"},"content":"            assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_gotOption_noArgument() {","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"LeeHanYongAndy"},"content":"        parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfTestCase \u003d {\"add -e\", \"add -e \", \" add -e\", \" add -e \"};","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] expected \u003d {\"add\", \"-e\", \"\"};","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (String testCase : arrayOfTestCase) {","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] actual \u003d parserHandler.getParseInput(testCase).toArray(new String[0]);","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"LeeHanYongAndy"},"content":"            assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_TwoOption_noArgument_inMiddle() {","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"LeeHanYongAndy"},"content":"        parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfTestCase \u003d {\"add -e -s -a 10\", \"add -e -s -a 10 \",","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"            \" add -e -s -a 10\", \" add -e -s -a 10 \"};","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] expected \u003d {\"add\", \"-e\", \"\", \"-s\", \"\", \"-a\", \"10\"};","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (String testCase : arrayOfTestCase) {","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] actual \u003d parserHandler.getParseInput(testCase).toArray(new String[0]);","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"LeeHanYongAndy"},"content":"            assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_manyWhiteSpace() {","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"LeeHanYongAndy"},"content":"        parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfTestCase \u003d {\"            add   -e   beer -a     10    -d   2020-01-01       \"};","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] expected \u003d {\"add\", \"-e\", \"beer\", \"-a\", \"10\", \"-d\", \"2020-01-01\"};","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (String testCase : arrayOfTestCase) {","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] actual \u003d parserHandler.getParseInput(testCase).toArray(new String[0]);","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"LeeHanYongAndy"},"content":"            assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":85,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":86,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":87,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_help_noArgument() {","lastModifiedDate":"2021-03-19"},{"lineNumber":88,"author":{"gitId":"LeeHanYongAndy"},"content":"        parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfTestCase \u003d {\"help\", \"help \", \"help  \", \" help\", \"  help\", \" help \"};","lastModifiedDate":"2021-03-19"},{"lineNumber":90,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] expected \u003d {\"help\", \"all\"};","lastModifiedDate":"2021-03-19"},{"lineNumber":91,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (String testCase : arrayOfTestCase) {","lastModifiedDate":"2021-03-19"},{"lineNumber":92,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] actual \u003d parserHandler.getParseInput(testCase).toArray(new String[0]);","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"LeeHanYongAndy"},"content":"            assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-19"},{"lineNumber":94,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":95,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":96,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":97,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":98,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_help_withArguments() {","lastModifiedDate":"2021-03-19"},{"lineNumber":99,"author":{"gitId":"LeeHanYongAndy"},"content":"        parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfTestCase \u003d {\"help add\", \"help     asd\", \"help    asd\", \" help asd   \"};","lastModifiedDate":"2021-03-19"},{"lineNumber":101,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[][] preExpected \u003d {{\"help\", \"add\"}, {\"help\", \"asd\"}, {\"help\", \"asd\"}, {\"help\", \"asd\"}};","lastModifiedDate":"2021-03-19"},{"lineNumber":102,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (int i \u003d 0; i \u003c arrayOfTestCase.length; i++) {","lastModifiedDate":"2021-03-19"},{"lineNumber":103,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] actual \u003d parserHandler.getParseInput(arrayOfTestCase[i]).toArray(new String[0]);","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] expected \u003d preExpected[i];","lastModifiedDate":"2021-03-19"},{"lineNumber":105,"author":{"gitId":"LeeHanYongAndy"},"content":"            assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-19"},{"lineNumber":106,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":107,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":108,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":109,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":110,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_creditscore_noArgument() {","lastModifiedDate":"2021-03-19"},{"lineNumber":111,"author":{"gitId":"LeeHanYongAndy"},"content":"        parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfTestCase \u003d {\"creditscore\", \"creditscore \", \"creditscore  \",","lastModifiedDate":"2021-03-19"},{"lineNumber":113,"author":{"gitId":"LeeHanYongAndy"},"content":"            \" creditscore\", \"  creditscore\", \" creditscore \"};","lastModifiedDate":"2021-03-19"},{"lineNumber":114,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] expected \u003d {\"creditscore\", \"\"};","lastModifiedDate":"2021-03-19"},{"lineNumber":115,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (String testCase : arrayOfTestCase) {","lastModifiedDate":"2021-03-19"},{"lineNumber":116,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] actual \u003d parserHandler.getParseInput(testCase).toArray(new String[0]);","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"LeeHanYongAndy"},"content":"            assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-19"},{"lineNumber":118,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":119,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":120,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":121,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":122,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_creditscore_withArguments() {","lastModifiedDate":"2021-03-19"},{"lineNumber":123,"author":{"gitId":"LeeHanYongAndy"},"content":"        parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfTestCase \u003d {\"creditscore andy\", \"creditscore     asd\",","lastModifiedDate":"2021-03-19"},{"lineNumber":125,"author":{"gitId":"LeeHanYongAndy"},"content":"            \"creditscore    asd\", \" creditscore asd   \"};","lastModifiedDate":"2021-03-19"},{"lineNumber":126,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[][] preExpected \u003d {{\"creditscore\", \"andy\"}, {\"creditscore\", \"asd\"},","lastModifiedDate":"2021-03-19"},{"lineNumber":127,"author":{"gitId":"LeeHanYongAndy"},"content":"            {\"creditscore\", \"asd\"}, {\"creditscore\", \"asd\"}};","lastModifiedDate":"2021-03-19"},{"lineNumber":128,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (int i \u003d 0; i \u003c arrayOfTestCase.length; i++) {","lastModifiedDate":"2021-03-19"},{"lineNumber":129,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] actual \u003d parserHandler.getParseInput(arrayOfTestCase[i]).toArray(new String[0]);","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] expected \u003d preExpected[i];","lastModifiedDate":"2021-03-19"},{"lineNumber":131,"author":{"gitId":"LeeHanYongAndy"},"content":"            assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-19"},{"lineNumber":132,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":133,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":134,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"LeeHanYongAndy":134}}]
