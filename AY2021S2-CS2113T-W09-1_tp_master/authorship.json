[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":"    implementation group: \u0027org.apache.commons\u0027, name: \u0027commons-lang3\u0027, version: \u00273.11\u0027"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"}"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"LeeHanYongAndy":1,"-":46}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.command.CommandHandler;"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.command.ExitCommand;"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.parser.ParserHandler;"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.exception.CommandException;"},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.storage.Storage;"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"import java.util.ArrayList;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"    private Ui ui;"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"    private RecordList records;"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":"    private Storage storage;"},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":20,"author":{"gitId":"gerardtwk"},"content":"    public Duke() {"},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":"        ui \u003d new Ui();"},{"lineNumber":22,"author":{"gitId":"gerardtwk"},"content":"        records \u003d new RecordList();"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"        storage \u003d new Storage();"},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"     * Runner for the FINUX Application."},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"    private void run() {"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"        ui.printWelcomeMessage();"},{"lineNumber":31,"author":{"gitId":"gerardtwk"},"content":"        commandLooper();"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"        //ui.printGoodByeMessage();"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(\"PROGRAM TERMINATES HERE!\");"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"    private void commandLooper() {"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":"        Command command;"},{"lineNumber":38,"author":{"gitId":"jonahtwl"},"content":"        String rawInput;"},{"lineNumber":39,"author":{"gitId":"jonahtwl"},"content":"        do {"},{"lineNumber":40,"author":{"gitId":"jonahtwl"},"content":"            rawInput \u003d ui.getUserInput();"},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"            ArrayList\u003cString\u003e parsedStringList \u003d ParserHandler.getParseInput(rawInput);"},{"lineNumber":42,"author":{"gitId":"jonahtwl"},"content":"            command \u003d parseCommand(parsedStringList);"},{"lineNumber":43,"author":{"gitId":"gerardtwk"},"content":"            if (command !\u003d null) {"},{"lineNumber":44,"author":{"gitId":"jonahtwl"},"content":"                command.execute(records, ui, storage);"},{"lineNumber":45,"author":{"gitId":"gerardtwk"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"jonahtwl"},"content":"        } while (!ExitCommand.isExit(command));"},{"lineNumber":47,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application."},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":53,"author":{"gitId":"gerardtwk"},"content":"        new Duke().run();"},{"lineNumber":54,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":56,"author":{"gitId":"gerardtwk"},"content":"    //Shift to ParserHandler class"},{"lineNumber":57,"author":{"gitId":"jonahtwl"},"content":"    private Command parseCommand(ArrayList\u003cString\u003e parsedString) {"},{"lineNumber":58,"author":{"gitId":"jonahtwl"},"content":"        try {"},{"lineNumber":59,"author":{"gitId":"tzexern"},"content":"            Command type \u003d CommandHandler.createCommand(parsedString, records);"},{"lineNumber":60,"author":{"gitId":"jonahtwl"},"content":"            System.out.println(\"Command is parsed\");"},{"lineNumber":61,"author":{"gitId":"jonahtwl"},"content":"            return type;"},{"lineNumber":62,"author":{"gitId":"marklowsk"},"content":"        } catch (CommandException e) {"},{"lineNumber":63,"author":{"gitId":"jonahtwl"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":64,"author":{"gitId":"jonahtwl"},"content":"            //throw new RuntimeException(e);"},{"lineNumber":65,"author":{"gitId":"jonahtwl"},"content":"            return null;"},{"lineNumber":66,"author":{"gitId":"jonahtwl"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"tzexern":1,"jonahtwl":45,"marklowsk":1,"gerardtwk":11,"-":10}},{"path":"src/main/java/seedu/duke/command/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.common.RecordType;"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.Expense;"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.record.Loan;"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.record.Saving;"},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.storage.Storage;"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.checkInvalidOptions;"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.checkOptionConflict;"},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"import static seedu.duke.command.Utils.getOptionValue;"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":"import static seedu.duke.command.Utils.hasOption;"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_AMOUNT;"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"import static seedu.duke.common.Constant.OPTION_DATE;"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_EXPENSE;"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_LOAN;"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_SAVING;"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":"import static seedu.duke.common.Validators.validateAmount;"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"import static seedu.duke.common.Validators.validateDate;"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"import java.time.DateTimeException;"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"import java.time.LocalDate;"},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":"import java.util.ArrayList;"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":"public class AddCommand extends Command {"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"    protected static final String COMMAND_ADD \u003d \"add\";"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"    private final double amount;"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":"    private final LocalDate issueDate;"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"    private final String description;"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":"    private RecordType recordType;"},{"lineNumber":35,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"    public AddCommand(ArrayList\u003cString\u003e arguments) throws CommandException {"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":"        checkInvalidOptions(arguments, COMMAND_ADD,"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"                OPTION_EXPENSE, OPTION_LOAN, OPTION_SAVING, OPTION_AMOUNT, OPTION_DATE);"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"        checkOptionConflict(arguments, COMMAND_ADD, OPTION_EXPENSE, OPTION_LOAN, OPTION_SAVING);"},{"lineNumber":40,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"        if (hasOption(arguments, OPTION_EXPENSE)) {"},{"lineNumber":42,"author":{"gitId":"jonahtwl"},"content":"            recordType \u003d RecordType.EXPENSE;"},{"lineNumber":43,"author":{"gitId":"marklowsk"},"content":"            description \u003d Utils.getOptionValue(arguments, COMMAND_ADD, OPTION_EXPENSE);"},{"lineNumber":44,"author":{"gitId":"jonahtwl"},"content":"        } else if (hasOption(arguments, OPTION_LOAN)) {"},{"lineNumber":45,"author":{"gitId":"jonahtwl"},"content":"            recordType \u003d RecordType.LOAN;"},{"lineNumber":46,"author":{"gitId":"marklowsk"},"content":"            description \u003d Utils.getOptionValue(arguments, COMMAND_ADD, OPTION_LOAN);"},{"lineNumber":47,"author":{"gitId":"marklowsk"},"content":"        } else if (hasOption(arguments, OPTION_SAVING)) {"},{"lineNumber":48,"author":{"gitId":"jonahtwl"},"content":"            recordType \u003d RecordType.SAVING;"},{"lineNumber":49,"author":{"gitId":"marklowsk"},"content":"            description \u003d Utils.getOptionValue(arguments, COMMAND_ADD, OPTION_SAVING);"},{"lineNumber":50,"author":{"gitId":"jonahtwl"},"content":"        } else {"},{"lineNumber":51,"author":{"gitId":"jonahtwl"},"content":"            throw new CommandException(\"missing option: [-e | -l | -s]\", COMMAND_ADD);"},{"lineNumber":52,"author":{"gitId":"jonahtwl"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":54,"author":{"gitId":"LeeHanYongAndy"},"content":"        try {"},{"lineNumber":55,"author":{"gitId":"LeeHanYongAndy"},"content":"            amount \u003d validateAmount(getOptionValue(arguments, COMMAND_ADD, OPTION_AMOUNT));"},{"lineNumber":56,"author":{"gitId":"LeeHanYongAndy"},"content":"            issueDate \u003d validateDate(getOptionValue(arguments, COMMAND_ADD, OPTION_DATE));"},{"lineNumber":57,"author":{"gitId":"LeeHanYongAndy"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":58,"author":{"gitId":"LeeHanYongAndy"},"content":"            throw new CommandException(\"amount contains a non numeric value.\", COMMAND_ADD);"},{"lineNumber":59,"author":{"gitId":"marklowsk"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":60,"author":{"gitId":"LeeHanYongAndy"},"content":"            throw new CommandException(e.getMessage(), COMMAND_ADD);"},{"lineNumber":61,"author":{"gitId":"LeeHanYongAndy"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":64,"author":{"gitId":"jonahtwl"},"content":"    @Override"},{"lineNumber":65,"author":{"gitId":"jonahtwl"},"content":"    public void execute(RecordList records, Ui ui, Storage storage) {"},{"lineNumber":66,"author":{"gitId":"jonahtwl"},"content":"        switch (recordType) {"},{"lineNumber":67,"author":{"gitId":"jonahtwl"},"content":"        case EXPENSE:"},{"lineNumber":68,"author":{"gitId":"gerardtwk"},"content":"            Expense expenseObj \u003d new Expense(amount, issueDate, description);"},{"lineNumber":69,"author":{"gitId":"gerardtwk"},"content":"            records.addRecord(expenseObj);"},{"lineNumber":70,"author":{"gitId":"gerardtwk"},"content":"            storage.saveRecordListData(records);"},{"lineNumber":71,"author":{"gitId":"tzexern"},"content":"            ui.printSuccessfulAdd(expenseObj, records.getRecordCount());"},{"lineNumber":72,"author":{"gitId":"jonahtwl"},"content":"            break;"},{"lineNumber":73,"author":{"gitId":"jonahtwl"},"content":"        case LOAN:"},{"lineNumber":74,"author":{"gitId":"LeeHanYongAndy"},"content":"            Loan loanObj \u003d new Loan(amount, issueDate, description);"},{"lineNumber":75,"author":{"gitId":"LeeHanYongAndy"},"content":"            records.addRecord(loanObj);"},{"lineNumber":76,"author":{"gitId":"LeeHanYongAndy"},"content":"            storage.saveRecordListData(records);"},{"lineNumber":77,"author":{"gitId":"tzexern"},"content":"            ui.printSuccessfulAdd(loanObj, records.getRecordCount());"},{"lineNumber":78,"author":{"gitId":"jonahtwl"},"content":"            break;"},{"lineNumber":79,"author":{"gitId":"jonahtwl"},"content":"        case SAVING:"},{"lineNumber":80,"author":{"gitId":"marklowsk"},"content":"            // Fallthrough"},{"lineNumber":81,"author":{"gitId":"jonahtwl"},"content":"        default:"},{"lineNumber":82,"author":{"gitId":"LeeHanYongAndy"},"content":"            Saving savingObj \u003d new Saving(amount, issueDate, description);"},{"lineNumber":83,"author":{"gitId":"LeeHanYongAndy"},"content":"            records.addRecord(savingObj);"},{"lineNumber":84,"author":{"gitId":"LeeHanYongAndy"},"content":"            storage.saveRecordListData(records);"},{"lineNumber":85,"author":{"gitId":"tzexern"},"content":"            ui.printSuccessfulAdd(savingObj, records.getRecordCount());"},{"lineNumber":86,"author":{"gitId":"jonahtwl"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"jonahtwl"},"content":"}"}],"authorContributionMap":{"tzexern":3,"jonahtwl":45,"marklowsk":22,"LeeHanYongAndy":15,"gerardtwk":3}},{"path":"src/main/java/seedu/duke/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"public abstract class Command {"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"    public abstract void execute(RecordList records, Ui ui, Storage storage);"},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"}"}],"authorContributionMap":{"jonahtwl":9}},{"path":"src/main/java/seedu/duke/command/CommandHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.exception.CommandException;"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"import seedu.duke.record.RecordList;"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.ListCommand.COMMAND_LIST;"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.AddCommand.COMMAND_ADD;"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.command.ReturnCommand.COMMAND_RETURN;"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.RemoveCommand.COMMAND_REMOVE;"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.ViewCommand.COMMAND_VIEW;"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.HelpCommand.COMMAND_HELP;"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.ExitCommand.COMMAND_EXIT;"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"import java.util.ArrayList;"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":"public class CommandHandler {"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_INVALID_COMMAND \u003d \"Invalid command: \";"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":"    private static final int INDEX_OF_COMMAND \u003d 0;"},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"    public static Command createCommand(ArrayList\u003cString\u003e parsedArguments, RecordList records) throws CommandException {"},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"        String commandWord \u003d parsedArguments.get(INDEX_OF_COMMAND);"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"        switch (commandWord) {"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"        case COMMAND_LIST:"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"            return new ListCommand(parsedArguments);"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"        case COMMAND_ADD:"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"            return new AddCommand(parsedArguments);"},{"lineNumber":28,"author":{"gitId":"gerardtwk"},"content":"        case COMMAND_RETURN:"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"            return new ReturnCommand(parsedArguments, records);"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"        case COMMAND_REMOVE:"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"            return new RemoveCommand(parsedArguments, records);"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"        case COMMAND_VIEW:"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":"            return new ViewCommand(parsedArguments);"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"        case COMMAND_HELP:"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"            return new HelpCommand(parsedArguments);"},{"lineNumber":36,"author":{"gitId":"marklowsk"},"content":"        case COMMAND_EXIT:"},{"lineNumber":37,"author":{"gitId":"marklowsk"},"content":"            return new ExitCommand(parsedArguments);"},{"lineNumber":38,"author":{"gitId":"jonahtwl"},"content":"        default:"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(ERROR_INVALID_COMMAND + commandWord);"},{"lineNumber":40,"author":{"gitId":"jonahtwl"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"}"}],"authorContributionMap":{"tzexern":4,"jonahtwl":11,"LeeHanYongAndy":4,"marklowsk":21,"gerardtwk":2}},{"path":"src/main/java/seedu/duke/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.ArgumentType;"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateArguments;"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"public class ExitCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"    private static final ArgumentType[] argumentTypeOrder \u003d { ArgumentType.COMMAND };"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"    protected static final String COMMAND_EXIT \u003d \"exit\";"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"    public ExitCommand(ArrayList\u003cString\u003e arguments) throws CommandException {"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"        validateArguments(arguments, argumentTypeOrder, COMMAND_EXIT);"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":"     * Executes the exit function."},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":"     * @param records is the recordList"},{"lineNumber":25,"author":{"gitId":"jonahtwl"},"content":"     * @param ui      is the Ui object that interacts with the user"},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":"     * @param storage is the Storage object that reads and writes to the save file"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"    public void execute(RecordList records, Ui ui, Storage storage) {"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"        ui.printGoodByeMessage();"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"    public static boolean isExit(Command command) {"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":"        return command instanceof ExitCommand;"},{"lineNumber":35,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"}"}],"authorContributionMap":{"jonahtwl":24,"marklowsk":12}},{"path":"src/main/java/seedu/duke/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.ArgumentType;"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":"import seedu.duke.ui.HelpPage;"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateArguments;"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"public class HelpCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"    private static final ArgumentType[] argumentTypeOrder \u003d { ArgumentType.COMMAND };"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"    protected static final String COMMAND_HELP \u003d \"help\";"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"    public HelpCommand(ArrayList\u003cString\u003e arguments) throws CommandException {"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"        validateArguments(arguments, argumentTypeOrder, COMMAND_HELP);"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"    public void execute(RecordList records, Ui ui, Storage storage) {"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"        HelpPage.printHelp(COMMAND_HELP);"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"}"}],"authorContributionMap":{"jonahtwl":2,"marklowsk":22,"LeeHanYongAndy":2}},{"path":"src/main/java/seedu/duke/command/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.ArgumentType;"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.RecordType;"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.checkInvalidOptions;"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.checkOptionConflict;"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.hasOption;"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateArguments;"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_EXPENSE;"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_LOAN;"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_SAVING;"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"import java.util.ArrayList;"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"public class ListCommand extends Command {"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"    private static final ArgumentType[] argumentTypeOrder \u003d {"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.COMMAND,"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.OPTION,"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.EMPTY_VALUE"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"    };"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"    protected static final String COMMAND_LIST \u003d \"list\";"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"    private RecordType recordType;"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"    public ListCommand(ArrayList\u003cString\u003e arguments) throws CommandException {"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":"        checkInvalidOptions(arguments, COMMAND_LIST, OPTION_EXPENSE, OPTION_LOAN, OPTION_SAVING);"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"        checkOptionConflict(arguments, COMMAND_LIST, OPTION_EXPENSE, OPTION_LOAN, OPTION_SAVING);"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"        if (hasOption(arguments, OPTION_EXPENSE)) {"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"            recordType \u003d RecordType.EXPENSE;"},{"lineNumber":36,"author":{"gitId":"marklowsk"},"content":"        } else if (hasOption(arguments, OPTION_LOAN)) {"},{"lineNumber":37,"author":{"gitId":"marklowsk"},"content":"            recordType \u003d RecordType.LOAN;"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"        } else if (hasOption(arguments, OPTION_SAVING)) {"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"            recordType \u003d RecordType.SAVING;"},{"lineNumber":40,"author":{"gitId":"marklowsk"},"content":"        } else {"},{"lineNumber":41,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(\"missing option: [-e | -l | -s]\", COMMAND_LIST);"},{"lineNumber":42,"author":{"gitId":"marklowsk"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"marklowsk"},"content":"        validateArguments(arguments, argumentTypeOrder, COMMAND_LIST);"},{"lineNumber":44,"author":{"gitId":"marklowsk"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":46,"author":{"gitId":"marklowsk"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"gerardtwk"},"content":"    public void execute(RecordList recordList, Ui ui, Storage storage) {"},{"lineNumber":48,"author":{"gitId":"marklowsk"},"content":"        switch (recordType) {"},{"lineNumber":49,"author":{"gitId":"marklowsk"},"content":"        case EXPENSE:"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printExpenses(recordList);"},{"lineNumber":51,"author":{"gitId":"marklowsk"},"content":"            break;"},{"lineNumber":52,"author":{"gitId":"marklowsk"},"content":"        case LOAN:"},{"lineNumber":53,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printLoans(recordList);"},{"lineNumber":54,"author":{"gitId":"marklowsk"},"content":"            break;"},{"lineNumber":55,"author":{"gitId":"marklowsk"},"content":"        case SAVING:"},{"lineNumber":56,"author":{"gitId":"marklowsk"},"content":"            // Fallthrough"},{"lineNumber":57,"author":{"gitId":"marklowsk"},"content":"        default:"},{"lineNumber":58,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printSavings(recordList);"},{"lineNumber":59,"author":{"gitId":"marklowsk"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"marklowsk"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"marklowsk"},"content":"}"}],"authorContributionMap":{"jonahtwl":1,"marklowsk":56,"LeeHanYongAndy":3,"gerardtwk":1}},{"path":"src/main/java/seedu/duke/command/RemoveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.ArgumentType;"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;"},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":"import seedu.duke.record.Record;"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.checkInvalidOptions;"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.checkOptionConflict;"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.getOptionValue;"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.hasOption;"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateArguments;"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_INDEX;"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"import static seedu.duke.common.Validators.validateIndex;"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"public class RemoveCommand extends Command {"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"    private static final ArgumentType[] argumentTypeOrder \u003d {"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.COMMAND,"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.OPTION,"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.VALUE"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"    };"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"    protected static final String COMMAND_REMOVE \u003d \"remove\";"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"    private String recordNumberStr;"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"    private int recordNumberInt;"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"    public RemoveCommand(ArrayList\u003cString\u003e arguments, RecordList records) throws CommandException {"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"        checkInvalidOptions(arguments, COMMAND_REMOVE, OPTION_INDEX);"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":"        checkOptionConflict(arguments, COMMAND_REMOVE, OPTION_INDEX);"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"        validateArguments(arguments, argumentTypeOrder, COMMAND_REMOVE);"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":36,"author":{"gitId":"marklowsk"},"content":"        if (hasOption(arguments, OPTION_INDEX)) {"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"            recordNumberStr \u003d getOptionValue(arguments, COMMAND_REMOVE, OPTION_INDEX);"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"        } else {"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(\"missing option: -i\", COMMAND_REMOVE);"},{"lineNumber":40,"author":{"gitId":"marklowsk"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":42,"author":{"gitId":"tzexern"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"tzexern"},"content":"            recordNumberInt \u003d validateIndex(getOptionValue(arguments, COMMAND_REMOVE, OPTION_INDEX), records);"},{"lineNumber":44,"author":{"gitId":"tzexern"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":45,"author":{"gitId":"tzexern"},"content":"            throw new CommandException(\"Index \\\"\" + recordNumberStr + \"\\\" is not an integer!\", COMMAND_REMOVE);"},{"lineNumber":46,"author":{"gitId":"tzexern"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":47,"author":{"gitId":"tzexern"},"content":"            throw new CommandException(\"Index \\\"\" + recordNumberStr + \"\\\" is out of bounds!\", COMMAND_REMOVE);"},{"lineNumber":48,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"marklowsk"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":51,"author":{"gitId":"tzexern"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"tzexern"},"content":"     * Executes the delete function."},{"lineNumber":53,"author":{"gitId":"tzexern"},"content":"     * Prints a message containing the record that will be removed."},{"lineNumber":54,"author":{"gitId":"tzexern"},"content":"     * Removes the record at the specified index."},{"lineNumber":55,"author":{"gitId":"tzexern"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"tzexern"},"content":"     * @param records is the recordList."},{"lineNumber":57,"author":{"gitId":"tzexern"},"content":"     * @param ui      is the Ui object that interacts with the user."},{"lineNumber":58,"author":{"gitId":"tzexern"},"content":"     * @param storage is the Storage object that reads and writes to the save file."},{"lineNumber":59,"author":{"gitId":"tzexern"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"marklowsk"},"content":"    @Override"},{"lineNumber":61,"author":{"gitId":"jonahtwl"},"content":"    public void execute(RecordList records, Ui ui, Storage storage) {"},{"lineNumber":62,"author":{"gitId":"tzexern"},"content":"        Record currentRecord \u003d records.getRecordAt(recordNumberInt);"},{"lineNumber":63,"author":{"gitId":"tzexern"},"content":"        ui.printMessage(\"This record will be removed: \" + currentRecord);"},{"lineNumber":64,"author":{"gitId":"tzexern"},"content":"        records.deleteRecordAt(recordNumberInt);"},{"lineNumber":65,"author":{"gitId":"marklowsk"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"marklowsk"},"content":"}"}],"authorContributionMap":{"tzexern":26,"jonahtwl":2,"marklowsk":38}},{"path":"src/main/java/seedu/duke/command/ReturnCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.common.ArgumentType;"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.exception.CommandException;"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Loan;"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Record;"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.RecordList;"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.storage.Storage;"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.command.Utils.checkInvalidOptions;"},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.command.Utils.checkOptionConflict;"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.command.Utils.getOptionValue;"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.command.Utils.hasOption;"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.command.Utils.validateArguments;"},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.common.Constant.OPTION_INDEX;"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"import static seedu.duke.common.Validators.validateIndex;"},{"lineNumber":20,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":"public class ReturnCommand extends Command {"},{"lineNumber":22,"author":{"gitId":"gerardtwk"},"content":"    private static final ArgumentType[] argumentTypeOrder \u003d {"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"        ArgumentType.COMMAND,"},{"lineNumber":24,"author":{"gitId":"gerardtwk"},"content":"        ArgumentType.OPTION,"},{"lineNumber":25,"author":{"gitId":"gerardtwk"},"content":"        ArgumentType.VALUE"},{"lineNumber":26,"author":{"gitId":"gerardtwk"},"content":"    };"},{"lineNumber":27,"author":{"gitId":"gerardtwk"},"content":"    protected static final String COMMAND_RETURN \u003d \"return\";"},{"lineNumber":28,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"    private String recordNumberStr;"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"    private int recordNumberInt;"},{"lineNumber":31,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":"    public ReturnCommand(ArrayList\u003cString\u003e arguments, RecordList records) throws CommandException {"},{"lineNumber":33,"author":{"gitId":"gerardtwk"},"content":"        checkInvalidOptions(arguments, COMMAND_RETURN, OPTION_INDEX);"},{"lineNumber":34,"author":{"gitId":"gerardtwk"},"content":"        checkOptionConflict(arguments, COMMAND_RETURN, OPTION_INDEX);"},{"lineNumber":35,"author":{"gitId":"gerardtwk"},"content":"        validateArguments(arguments, argumentTypeOrder, COMMAND_RETURN);"},{"lineNumber":36,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":37,"author":{"gitId":"gerardtwk"},"content":"        if (hasOption(arguments, OPTION_INDEX)) {"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"            recordNumberStr \u003d getOptionValue(arguments, COMMAND_RETURN, OPTION_INDEX);"},{"lineNumber":39,"author":{"gitId":"gerardtwk"},"content":"        } else {"},{"lineNumber":40,"author":{"gitId":"gerardtwk"},"content":"            throw new CommandException(\"missing option: -i\", COMMAND_RETURN);"},{"lineNumber":41,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":43,"author":{"gitId":"tzexern"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"tzexern"},"content":"            recordNumberInt \u003d validateIndex(getOptionValue(arguments, COMMAND_RETURN, OPTION_INDEX), records);"},{"lineNumber":45,"author":{"gitId":"tzexern"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":46,"author":{"gitId":"tzexern"},"content":"            throw new CommandException(\"Index \\\"\" + recordNumberStr + \"\\\" is not an integer!\", COMMAND_RETURN);"},{"lineNumber":47,"author":{"gitId":"tzexern"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":48,"author":{"gitId":"tzexern"},"content":"            throw new CommandException(\"Index \\\"\" + recordNumberStr + \"\\\" is out of bounds!\", COMMAND_RETURN);"},{"lineNumber":49,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":52,"author":{"gitId":"gerardtwk"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"gerardtwk"},"content":"     * Executes the return function."},{"lineNumber":54,"author":{"gitId":"gerardtwk"},"content":"     * Prints a message containing the loan that will be marked as returned."},{"lineNumber":55,"author":{"gitId":"gerardtwk"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"gerardtwk"},"content":"     * @param records is the recordList."},{"lineNumber":57,"author":{"gitId":"gerardtwk"},"content":"     * @param ui      is the Ui object that interacts with the user."},{"lineNumber":58,"author":{"gitId":"gerardtwk"},"content":"     * @param storage is the Storage object that reads and writes to the save file."},{"lineNumber":59,"author":{"gitId":"gerardtwk"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"gerardtwk"},"content":"    @Override"},{"lineNumber":61,"author":{"gitId":"gerardtwk"},"content":"    public void execute(RecordList records, Ui ui, Storage storage) {"},{"lineNumber":62,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":63,"author":{"gitId":"tzexern"},"content":"        Record currentRecord \u003d records.getRecordAt(recordNumberInt);"},{"lineNumber":64,"author":{"gitId":"gerardtwk"},"content":"        if (currentRecord instanceof Loan) {"},{"lineNumber":65,"author":{"gitId":"gerardtwk"},"content":"            Loan currentLoan \u003d (Loan) currentRecord;"},{"lineNumber":66,"author":{"gitId":"gerardtwk"},"content":"            currentLoan.markAsReturned();"},{"lineNumber":67,"author":{"gitId":"gerardtwk"},"content":"            ui.printMessage(\"Loan marked as returned: \" + currentLoan);"},{"lineNumber":68,"author":{"gitId":"gerardtwk"},"content":"        } else {"},{"lineNumber":69,"author":{"gitId":"gerardtwk"},"content":"            ui.printMessage(\"Specified record number is not a loan!\");"},{"lineNumber":70,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"gerardtwk"},"content":"}"}],"authorContributionMap":{"tzexern":14,"gerardtwk":58}},{"path":"src/main/java/seedu/duke/command/Utils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.ArgumentType;"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"import org.apache.commons.lang3.ArrayUtils;"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"import java.util.HashSet;"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"import java.util.Set;"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"import java.util.regex.Pattern;"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"public class Utils {"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_MISSING_OPTION \u003d \"missing option: \";"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_INVALID_OPTION \u003d \"invalid option: \";"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_MISSING_OPTION_VALUE \u003d \"value of option %s is missing.\";"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_MISSING_ARGUMENT_VALUE \u003d \"missing argument value.\";"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_DUPLICATE_OPTION \u003d \"duplicate option: \";"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_CONFLICT_OPTION \u003d \"conflict with options: \";"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_TOO_MANY_ARGUMENTS \u003d \"too many arguments.\";"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_TOO_FEW_ARGUMENTS \u003d \"not enough arguments.\";"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_INVALID_ORDER \u003d \"invalid command order, \";"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_INVALID_INPUT \u003d \"invalid input: \";"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"    private static final String REGEX_OPTION \u003d \"^-\\\\w$\";"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"    private static void validateNotEmpty(String value) throws CommandException {"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"        if (value \u003d\u003d null || value.length() \u003d\u003d 0) {"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(ERROR_MISSING_ARGUMENT_VALUE);"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"    private static String validateNotEmpty(String value, String command, String option)"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":"            throws CommandException {"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"        if (value !\u003d null \u0026\u0026 value.length() \u003e 0) {"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"            return value;"},{"lineNumber":36,"author":{"gitId":"marklowsk"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"marklowsk"},"content":"        String errorMessage \u003d String.format(ERROR_MISSING_OPTION_VALUE, option);"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"        throw new CommandException(errorMessage, command);"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":41,"author":{"gitId":"marklowsk"},"content":"    public static String getOptionValue(ArrayList\u003cString\u003e arguments, String command,"},{"lineNumber":42,"author":{"gitId":"marklowsk"},"content":"                                        String option) throws CommandException {"},{"lineNumber":43,"author":{"gitId":"marklowsk"},"content":"        if (!hasOption(arguments, option)) {"},{"lineNumber":44,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(ERROR_MISSING_OPTION + option, command);"},{"lineNumber":45,"author":{"gitId":"marklowsk"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"marklowsk"},"content":"        int index \u003d arguments.indexOf(option);"},{"lineNumber":47,"author":{"gitId":"marklowsk"},"content":"        if (index \u003c arguments.size() - 1) {"},{"lineNumber":48,"author":{"gitId":"marklowsk"},"content":"            String value \u003d arguments.get(index + 1);"},{"lineNumber":49,"author":{"gitId":"marklowsk"},"content":"            return validateNotEmpty(value, command, option);"},{"lineNumber":50,"author":{"gitId":"marklowsk"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"marklowsk"},"content":"        // Throw ERROR_MISSING_OPTION_VALUE error."},{"lineNumber":52,"author":{"gitId":"marklowsk"},"content":"        return validateNotEmpty(\"\", command, option);"},{"lineNumber":53,"author":{"gitId":"marklowsk"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":55,"author":{"gitId":"marklowsk"},"content":"    public static boolean hasOption(ArrayList\u003cString\u003e arguments, String option) {"},{"lineNumber":56,"author":{"gitId":"marklowsk"},"content":"        return arguments.contains(option);"},{"lineNumber":57,"author":{"gitId":"marklowsk"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":59,"author":{"gitId":"marklowsk"},"content":"    public static void checkInvalidOptions(ArrayList\u003cString\u003e arguments, String command,"},{"lineNumber":60,"author":{"gitId":"marklowsk"},"content":"                                           String... validOptions) throws CommandException {"},{"lineNumber":61,"author":{"gitId":"marklowsk"},"content":"        Set\u003cString\u003e nonDuplicates \u003d new HashSet\u003c\u003e();"},{"lineNumber":62,"author":{"gitId":"marklowsk"},"content":"        for (String arg : arguments) {"},{"lineNumber":63,"author":{"gitId":"marklowsk"},"content":"            if (!isOption(arg)) {"},{"lineNumber":64,"author":{"gitId":"marklowsk"},"content":"                continue;"},{"lineNumber":65,"author":{"gitId":"marklowsk"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"marklowsk"},"content":"            if (!ArrayUtils.contains(validOptions, arg)) {"},{"lineNumber":67,"author":{"gitId":"marklowsk"},"content":"                throw new CommandException(ERROR_INVALID_OPTION + arg, command);"},{"lineNumber":68,"author":{"gitId":"marklowsk"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"marklowsk"},"content":"            if (!nonDuplicates.add(arg)) {"},{"lineNumber":70,"author":{"gitId":"marklowsk"},"content":"                throw new CommandException(ERROR_DUPLICATE_OPTION + arg, command);"},{"lineNumber":71,"author":{"gitId":"marklowsk"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"marklowsk"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"marklowsk"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":75,"author":{"gitId":"marklowsk"},"content":"    public static void checkOptionConflict(ArrayList\u003cString\u003e arguments, String command,"},{"lineNumber":76,"author":{"gitId":"marklowsk"},"content":"                                           String... orOptions) throws CommandException {"},{"lineNumber":77,"author":{"gitId":"marklowsk"},"content":"        String option \u003d null;"},{"lineNumber":78,"author":{"gitId":"marklowsk"},"content":"        for (String arg : arguments) {"},{"lineNumber":79,"author":{"gitId":"marklowsk"},"content":"            if (!isOption(arg)) {"},{"lineNumber":80,"author":{"gitId":"marklowsk"},"content":"                continue;"},{"lineNumber":81,"author":{"gitId":"marklowsk"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"marklowsk"},"content":"            if (!ArrayUtils.contains(orOptions, arg)) {"},{"lineNumber":83,"author":{"gitId":"marklowsk"},"content":"                continue;"},{"lineNumber":84,"author":{"gitId":"marklowsk"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"marklowsk"},"content":"            if (option \u003d\u003d null) {"},{"lineNumber":86,"author":{"gitId":"marklowsk"},"content":"                option \u003d arg;"},{"lineNumber":87,"author":{"gitId":"marklowsk"},"content":"            } else {"},{"lineNumber":88,"author":{"gitId":"marklowsk"},"content":"                throw new CommandException(ERROR_CONFLICT_OPTION + option + \", \" + arg, command);"},{"lineNumber":89,"author":{"gitId":"marklowsk"},"content":"            }"},{"lineNumber":90,"author":{"gitId":"marklowsk"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"marklowsk"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":93,"author":{"gitId":"marklowsk"},"content":"    public static void validateArguments(ArrayList\u003cString\u003e arguments, ArgumentType[] argumentTypeOrder,"},{"lineNumber":94,"author":{"gitId":"marklowsk"},"content":"                                         String command) throws CommandException {"},{"lineNumber":95,"author":{"gitId":"marklowsk"},"content":"        if (arguments.size() \u003e argumentTypeOrder.length) {"},{"lineNumber":96,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(ERROR_TOO_MANY_ARGUMENTS, command);"},{"lineNumber":97,"author":{"gitId":"marklowsk"},"content":"        } else if (arguments.size() \u003c argumentTypeOrder.length) {"},{"lineNumber":98,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(ERROR_TOO_FEW_ARGUMENTS, command);"},{"lineNumber":99,"author":{"gitId":"marklowsk"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"marklowsk"},"content":"        for (int i \u003d 0; i \u003c arguments.size(); i++) {"},{"lineNumber":101,"author":{"gitId":"marklowsk"},"content":"            validateArgument(arguments.get(i), argumentTypeOrder[i], command);"},{"lineNumber":102,"author":{"gitId":"marklowsk"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"marklowsk"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":105,"author":{"gitId":"marklowsk"},"content":"    private static void validateArgument(String argument, ArgumentType argumentType, String command)"},{"lineNumber":106,"author":{"gitId":"marklowsk"},"content":"            throws CommandException {"},{"lineNumber":107,"author":{"gitId":"marklowsk"},"content":"        switch (argumentType) {"},{"lineNumber":108,"author":{"gitId":"marklowsk"},"content":"        case VALUE:"},{"lineNumber":109,"author":{"gitId":"marklowsk"},"content":"            validateNotEmpty(argument);"},{"lineNumber":110,"author":{"gitId":"marklowsk"},"content":"            break;"},{"lineNumber":111,"author":{"gitId":"marklowsk"},"content":"        case OPTION:"},{"lineNumber":112,"author":{"gitId":"marklowsk"},"content":"            if (isOption(argument)) {"},{"lineNumber":113,"author":{"gitId":"marklowsk"},"content":"                break;"},{"lineNumber":114,"author":{"gitId":"marklowsk"},"content":"            }"},{"lineNumber":115,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(ERROR_INVALID_ORDER + \"expected an option instead of \" + argument,"},{"lineNumber":116,"author":{"gitId":"marklowsk"},"content":"                    command);"},{"lineNumber":117,"author":{"gitId":"marklowsk"},"content":"        case COMMAND:"},{"lineNumber":118,"author":{"gitId":"marklowsk"},"content":"            if (argument.equals(command)) {"},{"lineNumber":119,"author":{"gitId":"marklowsk"},"content":"                break;"},{"lineNumber":120,"author":{"gitId":"marklowsk"},"content":"            }"},{"lineNumber":121,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(ERROR_INVALID_ORDER + \"expected command word.\");"},{"lineNumber":122,"author":{"gitId":"marklowsk"},"content":"        case EMPTY_VALUE:"},{"lineNumber":123,"author":{"gitId":"marklowsk"},"content":"            // Fallthrough"},{"lineNumber":124,"author":{"gitId":"marklowsk"},"content":"        default:"},{"lineNumber":125,"author":{"gitId":"marklowsk"},"content":"            if (argument.length() \u003e 0) {"},{"lineNumber":126,"author":{"gitId":"marklowsk"},"content":"                throw new CommandException(ERROR_INVALID_INPUT + argument, command);"},{"lineNumber":127,"author":{"gitId":"marklowsk"},"content":"            }"},{"lineNumber":128,"author":{"gitId":"marklowsk"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"marklowsk"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":131,"author":{"gitId":"marklowsk"},"content":"    public static boolean isOption(String arg) {"},{"lineNumber":132,"author":{"gitId":"marklowsk"},"content":"        return Pattern.matches(REGEX_OPTION, arg);"},{"lineNumber":133,"author":{"gitId":"marklowsk"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"marklowsk"},"content":"}"}],"authorContributionMap":{"marklowsk":134}},{"path":"src/main/java/seedu/duke/command/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.ArgumentType;"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.RecordType;"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.checkInvalidOptions;"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.checkOptionConflict;"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.hasOption;"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateArguments;"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_EXPENSE;"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_LOAN;"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_SAVING;"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"public class ViewCommand extends Command {"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"    private static final ArgumentType[] argumentTypeOrder \u003d {"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.COMMAND,"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.OPTION,"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.EMPTY_VALUE"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"    };"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"    protected static final String COMMAND_VIEW \u003d \"view\";"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"    private RecordType recordType;"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"    public ViewCommand(ArrayList\u003cString\u003e arguments) throws CommandException {"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":"        checkInvalidOptions(arguments, COMMAND_VIEW, OPTION_EXPENSE, OPTION_LOAN, OPTION_SAVING);"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"        checkOptionConflict(arguments, COMMAND_VIEW, OPTION_EXPENSE, OPTION_LOAN, OPTION_SAVING);"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"        if (hasOption(arguments, OPTION_EXPENSE)) {"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"            recordType \u003d RecordType.EXPENSE;"},{"lineNumber":36,"author":{"gitId":"marklowsk"},"content":"        } else if (hasOption(arguments, OPTION_LOAN)) {"},{"lineNumber":37,"author":{"gitId":"marklowsk"},"content":"            recordType \u003d RecordType.LOAN;"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"        } else if (hasOption(arguments, OPTION_SAVING)) {"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"            recordType \u003d RecordType.SAVING;"},{"lineNumber":40,"author":{"gitId":"marklowsk"},"content":"        } else {"},{"lineNumber":41,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(\"missing option: [-e | -l | -s]\", COMMAND_VIEW);"},{"lineNumber":42,"author":{"gitId":"marklowsk"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"marklowsk"},"content":"        validateArguments(arguments, argumentTypeOrder, COMMAND_VIEW);"},{"lineNumber":44,"author":{"gitId":"marklowsk"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":46,"author":{"gitId":"marklowsk"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void execute(RecordList recordList, Ui ui, Storage storage) {"},{"lineNumber":48,"author":{"gitId":"marklowsk"},"content":"        switch (recordType) {"},{"lineNumber":49,"author":{"gitId":"marklowsk"},"content":"        case EXPENSE:"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printTotalAmountExpense(recordList);"},{"lineNumber":51,"author":{"gitId":"marklowsk"},"content":"            break;"},{"lineNumber":52,"author":{"gitId":"marklowsk"},"content":"        case LOAN:"},{"lineNumber":53,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printTotalAmountLoan(recordList);"},{"lineNumber":54,"author":{"gitId":"marklowsk"},"content":"            break;"},{"lineNumber":55,"author":{"gitId":"marklowsk"},"content":"        case SAVING:"},{"lineNumber":56,"author":{"gitId":"marklowsk"},"content":"            // Fallthrough"},{"lineNumber":57,"author":{"gitId":"marklowsk"},"content":"        default:"},{"lineNumber":58,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printTotalAmountSaving(recordList);"},{"lineNumber":59,"author":{"gitId":"marklowsk"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"marklowsk"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"marklowsk"},"content":"}"}],"authorContributionMap":{"jonahtwl":1,"marklowsk":56,"LeeHanYongAndy":4}},{"path":"src/main/java/seedu/duke/common/ArgumentType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.common;"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"public enum ArgumentType {"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"    COMMAND, OPTION, VALUE, EMPTY_VALUE"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"}"}],"authorContributionMap":{"marklowsk":5}},{"path":"src/main/java/seedu/duke/common/Constant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.common;"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"public class Constant {"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"    // Please append constants used to line under your name"},{"lineNumber":5,"author":{"gitId":"LeeHanYongAndy"},"content":"    // Mark"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"    public static final String OPTION_EXPENSE \u003d \"-e\";"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"    public static final String OPTION_LOAN \u003d \"-l\";"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"    public static final String OPTION_SAVING \u003d \"-s\";"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"    public static final String OPTION_AMOUNT \u003d \"-a\";"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"    public static final String OPTION_DATE \u003d \"-d\";"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"    public static final String OPTION_INDEX \u003d \"-i\";"},{"lineNumber":12,"author":{"gitId":"LeeHanYongAndy"},"content":"    // Andy"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":14,"author":{"gitId":"LeeHanYongAndy"},"content":"    // Jonah"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":"    // Gerard"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":"    public static final String SYMBOL_SAVING \u003d \"S\";"},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"    public static final String SYMBOL_EXPENSE \u003d \"E\";"},{"lineNumber":19,"author":{"gitId":"gerardtwk"},"content":"    public static final String SYMBOL_LOAN \u003d \"L\";"},{"lineNumber":20,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"    // Jason"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"}"}],"authorContributionMap":{"LeeHanYongAndy":13,"marklowsk":6,"gerardtwk":4}},{"path":"src/main/java/seedu/duke/common/RecordType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.common;"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"public enum RecordType {"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"    EXPENSE, LOAN, SAVING"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"}"}],"authorContributionMap":{"marklowsk":5}},{"path":"src/main/java/seedu/duke/common/Validators.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"package seedu.duke.common;"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import java.time.DateTimeException;"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":"import seedu.duke.exception.CommandException;"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":"import seedu.duke.record.RecordList;"},{"lineNumber":9,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":"public class Validators {"},{"lineNumber":11,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"    // @@author marklowsk-reused"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    // Reused from https://github.com/marklowsk/ip/blob/master/src/main/java/duke/common/Utils.java"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final DateTimeFormatter[] POSSIBLE_DATE_FORMATS \u003d {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        DateTimeFormatter.ofPattern(\"ddMMyyyy\"),"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        DateTimeFormatter.ofPattern(\"d.M.yyyy\"),"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        DateTimeFormatter.ofPattern(\"d-M-yyyy\"),"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        DateTimeFormatter.ofPattern(\"d/M/yyyy\"),"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        DateTimeFormatter.ofPattern(\"yyyy.M.d\"),"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        DateTimeFormatter.ofPattern(\"yyyy-M-d\"),"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        DateTimeFormatter.ofPattern(\"yyyy/M/d\")"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // @@author marklowsk-reused"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Reused from https://github.com/marklowsk/ip/blob/master/src/main/java/duke/common/Utils.java"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static LocalDate parseDateString(DateTimeFormatter format, String dateInput) {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return LocalDate.parse(dateInput, format);"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // @@author marklowsk-reused"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Reused from https://github.com/marklowsk/ip/blob/master/src/main/java/duke/common/Utils.java"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // Utils.parseDate(String) with minor edits."},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses dateInput into a LocalDateTime object."},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns null if dateInput cannot be parsed into a LocalDateTime object."},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param dateInput a string containing the date supplied from the user."},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @return a LocalDateTime object or null if failed to parse dateInput."},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @see #parseDateString(DateTimeFormatter, String)"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static LocalDate validateDate(String dateInput) throws DateTimeException {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        for (DateTimeFormatter dtf : POSSIBLE_DATE_FORMATS) {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            LocalDate date \u003d parseDateString(dtf, dateInput);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            if (date !\u003d null) {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                return date;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        throw new DateTimeException(\"input \\\"\" + dateInput + \"\\\" is not an acceptable Date Format.\");"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static int validateIndex(String inputToCheck, RecordList records) throws NumberFormatException,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            IndexOutOfBoundsException {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        int recordNumberInList \u003d Integer.parseInt(inputToCheck) - 1;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        records.getRecordAt(recordNumberInList);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return recordNumberInList;"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static double validateAmount(String inputToCheck) throws NumberFormatException,"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            CommandException {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        double amount \u003d Double.parseDouble(inputToCheck);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (amount \u003c\u003d 0) {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new CommandException(\"amount must be greater than 0.\");"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return amount;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"tzexern":5,"marklowsk":4,"LeeHanYongAndy":2,"-":59}},{"path":"src/main/java/seedu/duke/exception/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.exception;"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"public class CommandException extends Exception {"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"    public CommandException(String message) {"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"    public CommandException(String message, String command) {"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"        this(command + \" Command - \" + message);"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"}"}],"authorContributionMap":{"marklowsk":11}},{"path":"src/main/java/seedu/duke/exception/CustomException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.exception;"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"public class CustomException extends Exception {"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"    public CustomException(String message) {"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":"}"}],"authorContributionMap":{"LeeHanYongAndy":3,"marklowsk":4}},{"path":"src/main/java/seedu/duke/exception/InvalidCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package seedu.duke.exception;"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"public class InvalidCommandException extends Exception {"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"    public InvalidCommandException(String message) {"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"        super(message);"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"}"}],"authorContributionMap":{"jonahtwl":8}},{"path":"src/main/java/seedu/duke/parser/ParserHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.parser;"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"import org.apache.commons.lang3.StringUtils;"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":6,"author":{"gitId":"LeeHanYongAndy"},"content":"public class ParserHandler {"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static ArrayList\u003cString\u003e getParseInput(String userInput) {"},{"lineNumber":8,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e extracted \u003d new ArrayList\u003c\u003e();"},{"lineNumber":9,"author":{"gitId":"LeeHanYongAndy"},"content":"        String trimmedInput \u003d userInput.stripLeading();"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"        if (checkOptionStartWith(trimmedInput)) {"},{"lineNumber":11,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(trimmedInput.substring(0,2));"},{"lineNumber":12,"author":{"gitId":"LeeHanYongAndy"},"content":"            trimmedInput \u003d trimmedInput.substring(2);"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"        }"},{"lineNumber":14,"author":{"gitId":"LeeHanYongAndy"},"content":"        return extractAfterFirstCheck(extracted, trimmedInput);"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":17,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static ArrayList\u003cString\u003e extractAfterFirstCheck(ArrayList\u003cString\u003e extracted, String trimmedInput) {"},{"lineNumber":18,"author":{"gitId":"LeeHanYongAndy"},"content":"        int optionIndex \u003d getNextOptionIndex(trimmedInput);"},{"lineNumber":19,"author":{"gitId":"LeeHanYongAndy"},"content":"        while (optionIndex !\u003d -1) {"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"            String argument \u003d trimmedInput.substring(0,optionIndex).trim();"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(argument);"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"            trimmedInput \u003d trimmedInput.substring(optionIndex).stripLeading();"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(trimmedInput.substring(0,2));"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"            trimmedInput \u003d trimmedInput.substring(2);"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":"            optionIndex \u003d getNextOptionIndex(trimmedInput);"},{"lineNumber":26,"author":{"gitId":"LeeHanYongAndy"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"LeeHanYongAndy"},"content":"        return extractFinalPart(extracted, trimmedInput);"},{"lineNumber":28,"author":{"gitId":"LeeHanYongAndy"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":30,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static ArrayList\u003cString\u003e extractFinalPart(ArrayList\u003cString\u003e extracted, String trimmedInput) {"},{"lineNumber":31,"author":{"gitId":"LeeHanYongAndy"},"content":"        if (checkOptionEndWith(trimmedInput)) {"},{"lineNumber":32,"author":{"gitId":"LeeHanYongAndy"},"content":"            String argument \u003d trimmedInput.substring(0, (trimmedInput.length() - 2)).trim();"},{"lineNumber":33,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(argument);"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(trimmedInput.substring(trimmedInput.length() - 2).trim());"},{"lineNumber":35,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(\"\");"},{"lineNumber":36,"author":{"gitId":"LeeHanYongAndy"},"content":"        } else {"},{"lineNumber":37,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(trimmedInput.trim());"},{"lineNumber":38,"author":{"gitId":"LeeHanYongAndy"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"        return extracted;"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static boolean checkOptionStartWith(String input) {"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"        return StringUtils.startsWithAny(input, \"-e\", \"-l\", \"-s\", \"-d\", \"-a\", \"-i\");"},{"lineNumber":44,"author":{"gitId":"LeeHanYongAndy"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static boolean checkOptionEndWith(String input) {"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"        return  StringUtils.endsWithAny(input, \" -e\", \" -l\", \" -s\", \" -d\", \" -a\", \" -i\");"},{"lineNumber":48,"author":{"gitId":"LeeHanYongAndy"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static int getNextOptionIndex(String leftOverString) {"},{"lineNumber":51,"author":{"gitId":"LeeHanYongAndy"},"content":"        return StringUtils.indexOfAny(leftOverString, \" -e \", \" -l \", \" -s \", \" -d \", \" -a \", \" -i \");"},{"lineNumber":52,"author":{"gitId":"LeeHanYongAndy"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"LeeHanYongAndy"},"content":"}"}],"authorContributionMap":{"LeeHanYongAndy":53}},{"path":"src/main/java/seedu/duke/record/Expense.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.record;"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":"public class Expense extends Record {"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"    private static final String TYPE_EXPENSE \u003d \"E\";"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"    private static final String FILE_OUTPUT_STRING_FORMAT \u003d \"| %s | %s | %f | %s\";"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"    public Expense(double amount, LocalDate issuedDate, String description) {"},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":"        super(amount, issuedDate, description);"},{"lineNumber":11,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"    public String convertFileFormat() {"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":"        return String.format(FILE_OUTPUT_STRING_FORMAT, TYPE_EXPENSE, super.getDescription(),"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"                super.getAmount(), super.getIssueDate());"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":19,"author":{"gitId":"gerardtwk"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"gerardtwk"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"        String formattedRecordType \u003d \"[\" + TYPE_EXPENSE + \"]\";"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":"        return formattedRecordType + super.toString();"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"}"}],"authorContributionMap":{"tzexern":5,"jonahtwl":9,"LeeHanYongAndy":3,"marklowsk":3,"gerardtwk":4}},{"path":"src/main/java/seedu/duke/record/Loan.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.record;"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":"public class Loan extends Record {"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"    private static final String TYPE_LOAN \u003d \"L\";"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":"    private boolean isReturn;"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"    public Loan(double amount, LocalDate issuedDate, String description) {"},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":"        super(amount, issuedDate, description);"},{"lineNumber":11,"author":{"gitId":"LeeHanYongAndy"},"content":"        isReturn \u003d false;"},{"lineNumber":12,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"    public void markAsReturned() {"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":"        isReturn \u003d true;"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"gerardtwk"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"        String formattedRecordType \u003d \"[\" + TYPE_LOAN + \"]\";"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"        String formattedLoanStatus \u003d \"[\" + (isReturn ? \"v\" : \" \") + \"]\";"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":"        return formattedRecordType + super.toString() + formattedLoanStatus;"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"}"}],"authorContributionMap":{"tzexern":12,"LeeHanYongAndy":5,"marklowsk":3,"gerardtwk":4}},{"path":"src/main/java/seedu/duke/record/Record.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.record;"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"public abstract class Record {"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"    private double amount;"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"    private LocalDate issueDate;"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"    private String description;"},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"    private static final String FILE_OUTPUT_STRING_FORMAT \u003d \"| %s | %f | %s\";"},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"    public Record(double amount, LocalDate issueDate, String description) {"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"        this.amount \u003d amount;"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"        this.issueDate \u003d issueDate;"},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"        this.description \u003d description;"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"    public String getDescription() {"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"        return description;"},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"    public double getAmount() {"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"        return amount;"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"    public LocalDate getIssueDate() {"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"        return issueDate;"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"    public String convertFileFormat() {"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"        return String.format(FILE_OUTPUT_STRING_FORMAT, description, amount, issueDate);"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":33,"author":{"gitId":"gerardtwk"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"gerardtwk"},"content":"    public String toString() {"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"        String formattedDate \u003d \"[\" + this.issueDate + \"]\";"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"        String formattedDescription \u003d \" \" + this.description + \" \";"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"        return formattedDate + formattedDescription;"},{"lineNumber":38,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"}"}],"authorContributionMap":{"tzexern":3,"jonahtwl":13,"LeeHanYongAndy":3,"marklowsk":8,"gerardtwk":12}},{"path":"src/main/java/seedu/duke/record/RecordList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.record;"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"public class RecordList {"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"    private ArrayList\u003cRecord\u003e recordList;"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"    public RecordList() {"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"        this(new ArrayList\u003cRecord\u003e());"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"    public RecordList(ArrayList\u003cRecord\u003e recordList) {"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"        this.recordList \u003d recordList;"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"    public void addRecord(Record recordToAdd) {"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"        recordList.add(recordToAdd);"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"    public Record getRecordAt(int recordIndex) {"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"        return recordList.get(recordIndex);"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":"    public Record deleteRecordAt(int recordIndex) {"},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"        return recordList.remove(recordIndex);"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"    public void deleteAllRecords() {"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"        recordList.clear();"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":"    public boolean isEmpty() {"},{"lineNumber":33,"author":{"gitId":"tzexern"},"content":"        return recordList.isEmpty();"},{"lineNumber":34,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"    public int getRecordCount() {"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"        return recordList.size();"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"}"}],"authorContributionMap":{"tzexern":29,"jonahtwl":5,"LeeHanYongAndy":3,"gerardtwk":2}},{"path":"src/main/java/seedu/duke/record/Saving.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.record;"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"public class Saving extends Record {"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"    private static final String TYPE_SAVING \u003d \"S\";"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"    public Saving(double amount, LocalDate issueDate, String description) {"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"        super(amount, issueDate, description);"},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"        String formattedRecordType \u003d \"[\" + TYPE_SAVING + \"]\";"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"        return formattedRecordType + super.toString();"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"LeeHanYongAndy"},"content":"}"}],"authorContributionMap":{"tzexern":4,"LeeHanYongAndy":3,"marklowsk":3,"gerardtwk":7}},{"path":"src/main/java/seedu/duke/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.storage;"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.Record;"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.RecordList;"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"import java.io.FileWriter;"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"import java.nio.file.Files;"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"import java.nio.file.Path;"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"import java.nio.file.Paths;"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"import java.util.Scanner;"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"import java.util.StringJoiner;"},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":"public class Storage {"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"    public static final Path SAVED_FILE_PATH \u003d Paths.get(\"finux.txt\");"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":"    public Path dataFilePath;"},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"    public Storage() {"},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"        this(SAVED_FILE_PATH);"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":"    public Storage(Path dataFilePath) {"},{"lineNumber":25,"author":{"gitId":"jonahtwl"},"content":"        this.dataFilePath \u003d dataFilePath;"},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":"    private boolean saveFileExists(Path filePath) {"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"        return Files.exists(filePath);"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":32,"author":{"gitId":"gerardtwk"},"content":"    public void saveRecordListData(RecordList records) {"},{"lineNumber":33,"author":{"gitId":"gerardtwk"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"gerardtwk"},"content":"            writeToSaveFile(records);"},{"lineNumber":35,"author":{"gitId":"gerardtwk"},"content":"        } catch (IOException e) {"},{"lineNumber":36,"author":{"gitId":"gerardtwk"},"content":"            System.out.println(\"Error in writeToSaveFile()\");"},{"lineNumber":37,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":40,"author":{"gitId":"gerardtwk"},"content":"    private void writeToSaveFile(RecordList records) throws IOException {"},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"        FileWriter fw \u003d new FileWriter(dataFilePath.toString(), false);"},{"lineNumber":42,"author":{"gitId":"jonahtwl"},"content":"        fw.write(\"Test Save!\\n\");"},{"lineNumber":43,"author":{"gitId":"gerardtwk"},"content":"        for (int i \u003d 0; i \u003c records.getRecordCount(); i++) {"},{"lineNumber":44,"author":{"gitId":"gerardtwk"},"content":"            Record currentRecord \u003d records.getRecordAt(i);"},{"lineNumber":45,"author":{"gitId":"gerardtwk"},"content":"            fw.write(currentRecord.convertFileFormat() + System.lineSeparator());"},{"lineNumber":46,"author":{"gitId":"jonahtwl"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"jonahtwl"},"content":"        fw.close();"},{"lineNumber":48,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":50,"author":{"gitId":"jonahtwl"},"content":"    public void loadFile() {"},{"lineNumber":51,"author":{"gitId":"jonahtwl"},"content":"        try {"},{"lineNumber":52,"author":{"gitId":"jonahtwl"},"content":"            File loadFile \u003d dataFilePath.toFile();"},{"lineNumber":53,"author":{"gitId":"jonahtwl"},"content":"            Scanner sc \u003d new Scanner(loadFile);"},{"lineNumber":54,"author":{"gitId":"jonahtwl"},"content":"            StringJoiner jn \u003d new StringJoiner(\" \");"},{"lineNumber":55,"author":{"gitId":"jonahtwl"},"content":"            while (sc.hasNextLine()) {"},{"lineNumber":56,"author":{"gitId":"jonahtwl"},"content":"                String rawData \u003d sc.nextLine();"},{"lineNumber":57,"author":{"gitId":"jonahtwl"},"content":"                jn.add(rawData);"},{"lineNumber":58,"author":{"gitId":"jonahtwl"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"jonahtwl"},"content":"            System.out.println(jn.toString());"},{"lineNumber":60,"author":{"gitId":"jonahtwl"},"content":"        } catch (Exception e) {"},{"lineNumber":61,"author":{"gitId":"jonahtwl"},"content":"            System.exit(-1);"},{"lineNumber":62,"author":{"gitId":"jonahtwl"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"}"}],"authorContributionMap":{"jonahtwl":47,"LeeHanYongAndy":4,"gerardtwk":13}},{"path":"src/main/java/seedu/duke/ui/HelpPage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.ui;"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"import static seedu.duke.ui.Ui.DIVIDER;"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":5,"author":{"gitId":"LeeHanYongAndy"},"content":"public class HelpPage {"},{"lineNumber":6,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String TAB_1SPACE \u003d \"\\t\";"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String TAB_2SPACE \u003d \"\\t\\t\";"},{"lineNumber":8,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_HEADER_ADD \u003d \"add - add a record to the program\";"},{"lineNumber":9,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_SYNOPSIS_ADD \u003d \"add [OPTION] [ARGUMENT]\";"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_HEADER_LIST \u003d \"list - list all the records of chosen record type\";"},{"lineNumber":11,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_SYNOPSIS_LIST \u003d \"list [OPTION]\";"},{"lineNumber":12,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_HEADER_VIEW \u003d \"view - view the total amount of chosen record type\";"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_SYNOPSIS_VIEW \u003d \"view [OPTION]\";"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_HEADER_REMOVE \u003d \"remove - remove a record in the program\";"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_SYNOPSIS_REMOVE \u003d \"remove [OPTION] [ARGUMENT]\";"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_HEADER_RETURN \u003d \"return - record a loan as returned\";"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_SYNOPSIS_RETURN \u003d \"return [OPTION] [ARGUMENT]\";"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_HEADER_EXIT \u003d \"exit - terminate the program\";"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_SYNOPSIS_EXIT \u003d \"exit (no option/argument needed)\";"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_RECORD_TYPE \u003d \"-e, -l, -s\";"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_RECORD_TYPE_DESCRIPTION \u003d \"[ARGUMENT] used as record description\";"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_RECORD_TYPE_LISTING \u003d \"used to list the chosen record types\";"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_RECORD_TYPE_VIEWING \u003d \"used to view total amount of choose record type\";"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_AMOUNT \u003d \"-a\";"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_AMOUNT_DESCRIPTION \u003d \"[ARGUMENT] positive non zero numeric \""},{"lineNumber":26,"author":{"gitId":"LeeHanYongAndy"},"content":"            + \"amount associated with the record\";"},{"lineNumber":27,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_DATE \u003d \"-d\";"},{"lineNumber":28,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_DATE_DESCRIPTION \u003d \"[ARGUMENT] date associated with the record\";"},{"lineNumber":29,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_NO_ARGUMENT \u003d \"arguments are not needed\";"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_OPTION_INDEX \u003d \"-i\";"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_OPTION_INDEX_DESCRIPTION \u003d \"[ARGUMENT] positive non zero integer \""},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":"            + \"used to reference to index in program\";"},{"lineNumber":33,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printHelp(String command) {"},{"lineNumber":35,"author":{"gitId":"LeeHanYongAndy"},"content":"        switch (command) {"},{"lineNumber":36,"author":{"gitId":"LeeHanYongAndy"},"content":"        case \"help\":"},{"lineNumber":37,"author":{"gitId":"LeeHanYongAndy"},"content":"            printManPageMaster();"},{"lineNumber":38,"author":{"gitId":"LeeHanYongAndy"},"content":"            break;"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"        case \"add\":"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"            printManPageAdd();"},{"lineNumber":41,"author":{"gitId":"LeeHanYongAndy"},"content":"            break;"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"        case \"list\":"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"            printManPageList();"},{"lineNumber":44,"author":{"gitId":"LeeHanYongAndy"},"content":"            break;"},{"lineNumber":45,"author":{"gitId":"LeeHanYongAndy"},"content":"        case \"view\":"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"            printManPageView();"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"            break;"},{"lineNumber":48,"author":{"gitId":"LeeHanYongAndy"},"content":"        case \"remove\":"},{"lineNumber":49,"author":{"gitId":"LeeHanYongAndy"},"content":"            printManPageRemove();"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"            break;"},{"lineNumber":51,"author":{"gitId":"LeeHanYongAndy"},"content":"        case \"return\":"},{"lineNumber":52,"author":{"gitId":"LeeHanYongAndy"},"content":"            printManPageReturn();"},{"lineNumber":53,"author":{"gitId":"LeeHanYongAndy"},"content":"            break;"},{"lineNumber":54,"author":{"gitId":"LeeHanYongAndy"},"content":"        case \"exit\":"},{"lineNumber":55,"author":{"gitId":"LeeHanYongAndy"},"content":"            printManPageExit();"},{"lineNumber":56,"author":{"gitId":"LeeHanYongAndy"},"content":"            break;"},{"lineNumber":57,"author":{"gitId":"LeeHanYongAndy"},"content":"        default:"},{"lineNumber":58,"author":{"gitId":"LeeHanYongAndy"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"LeeHanYongAndy"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":61,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManHeader(String header) {"},{"lineNumber":62,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"NAME\");"},{"lineNumber":63,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + header);"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println();"},{"lineNumber":65,"author":{"gitId":"LeeHanYongAndy"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManSynopsis(String synopsis) {"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"SYNOPSIS\");"},{"lineNumber":69,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + synopsis);"},{"lineNumber":70,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println();"},{"lineNumber":71,"author":{"gitId":"LeeHanYongAndy"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":73,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManPageMaster() {"},{"lineNumber":74,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManPageAdd();"},{"lineNumber":75,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManPageView();"},{"lineNumber":76,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManPageList();"},{"lineNumber":77,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManPageRemove();"},{"lineNumber":78,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManPageReturn();"},{"lineNumber":79,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManPageExit();"},{"lineNumber":80,"author":{"gitId":"LeeHanYongAndy"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":82,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManPageAdd() {"},{"lineNumber":83,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManHeader(MAN_HEADER_ADD);"},{"lineNumber":84,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManSynopsis(MAN_SYNOPSIS_ADD);"},{"lineNumber":85,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManDescriptionAdd();"},{"lineNumber":86,"author":{"gitId":"LeeHanYongAndy"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":88,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManDescriptionAdd() {"},{"lineNumber":89,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"DESCRIPTION\");"},{"lineNumber":90,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_RECORD_TYPE);"},{"lineNumber":91,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_2SPACE + MAN_OPTION_RECORD_TYPE_DESCRIPTION);"},{"lineNumber":92,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_AMOUNT);"},{"lineNumber":93,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_2SPACE + MAN_OPTION_AMOUNT_DESCRIPTION);"},{"lineNumber":94,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_DATE);"},{"lineNumber":95,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_2SPACE + MAN_OPTION_DATE_DESCRIPTION);"},{"lineNumber":96,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(Ui.DIVIDER);"},{"lineNumber":97,"author":{"gitId":"LeeHanYongAndy"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":99,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManPageList() {"},{"lineNumber":100,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManHeader(MAN_HEADER_LIST);"},{"lineNumber":101,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManSynopsis(MAN_SYNOPSIS_LIST);"},{"lineNumber":102,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManDescriptionList();"},{"lineNumber":103,"author":{"gitId":"LeeHanYongAndy"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":105,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManDescriptionList() {"},{"lineNumber":106,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"DESCRIPTION\");"},{"lineNumber":107,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_RECORD_TYPE);"},{"lineNumber":108,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println((TAB_2SPACE + MAN_OPTION_RECORD_TYPE_LISTING));"},{"lineNumber":109,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(Ui.DIVIDER);"},{"lineNumber":110,"author":{"gitId":"LeeHanYongAndy"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":112,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManPageView() {"},{"lineNumber":113,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManHeader(MAN_HEADER_VIEW);"},{"lineNumber":114,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManSynopsis(MAN_SYNOPSIS_VIEW);"},{"lineNumber":115,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManDescriptionView();"},{"lineNumber":116,"author":{"gitId":"LeeHanYongAndy"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":118,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManDescriptionView() {"},{"lineNumber":119,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"DESCRIPTION\");"},{"lineNumber":120,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_RECORD_TYPE);"},{"lineNumber":121,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println((TAB_2SPACE + MAN_OPTION_RECORD_TYPE_VIEWING));"},{"lineNumber":122,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":123,"author":{"gitId":"LeeHanYongAndy"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":125,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManPageRemove() {"},{"lineNumber":126,"author":{"gitId":"tzexern"},"content":"        printManHeader(MAN_HEADER_REMOVE);"},{"lineNumber":127,"author":{"gitId":"tzexern"},"content":"        printManSynopsis(MAN_SYNOPSIS_REMOVE);"},{"lineNumber":128,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManDescriptionRemove();"},{"lineNumber":129,"author":{"gitId":"LeeHanYongAndy"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":131,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManDescriptionRemove() {"},{"lineNumber":132,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"DESCRIPTION\");"},{"lineNumber":133,"author":{"gitId":"tzexern"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_INDEX);"},{"lineNumber":134,"author":{"gitId":"tzexern"},"content":"        System.out.println((TAB_2SPACE + MAN_OPTION_INDEX_DESCRIPTION));"},{"lineNumber":135,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":136,"author":{"gitId":"LeeHanYongAndy"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":138,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManPageReturn() {"},{"lineNumber":139,"author":{"gitId":"tzexern"},"content":"        printManHeader(MAN_HEADER_RETURN);"},{"lineNumber":140,"author":{"gitId":"tzexern"},"content":"        printManSynopsis(MAN_SYNOPSIS_RETURN);"},{"lineNumber":141,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManDescriptionReturn();"},{"lineNumber":142,"author":{"gitId":"LeeHanYongAndy"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":144,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManDescriptionReturn() {"},{"lineNumber":145,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"DESCRIPTION\");"},{"lineNumber":146,"author":{"gitId":"tzexern"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_INDEX);"},{"lineNumber":147,"author":{"gitId":"tzexern"},"content":"        System.out.println((TAB_2SPACE + MAN_OPTION_INDEX_DESCRIPTION));"},{"lineNumber":148,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":149,"author":{"gitId":"LeeHanYongAndy"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":151,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManPageExit() {"},{"lineNumber":152,"author":{"gitId":"tzexern"},"content":"        printManHeader(MAN_HEADER_EXIT);"},{"lineNumber":153,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"SYNOPSIS\");"},{"lineNumber":154,"author":{"gitId":"tzexern"},"content":"        System.out.println(TAB_1SPACE + MAN_SYNOPSIS_EXIT);"},{"lineNumber":155,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":156,"author":{"gitId":"LeeHanYongAndy"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"LeeHanYongAndy"},"content":"}"}],"authorContributionMap":{"tzexern":19,"LeeHanYongAndy":138}},{"path":"src/main/java/seedu/duke/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.ui;"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.RecordList;"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.Record;"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Expense;"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Saving;"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Loan;"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"import java.io.InputStream;"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"import java.util.Scanner;"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":12,"author":{"gitId":"LeeHanYongAndy"},"content":"public class Ui {"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"    private static final String logo \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\""},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"            + \"||    $$$$$$  $$$$$$  $$    $$  $$    $$   $$    $$    ||\\n\""},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":"            + \"||    $$        $$    $$$   $$  $$    $$    $$  $$     ||\\n\""},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"            + \"||    $$$$$$    $$    $$ $$ $$  $$    $$      $$       ||\\n\""},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"            + \"||    $$        $$    $$   $$$  $$    $$    $$  $$     ||\\n\""},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":"            + \"||    $$      $$$$$$  $$    $$   $$$$$$    $$    $$    ||\\n\""},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"            + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";"},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":"    protected static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":"    private static final String MESSAGE_GREETING \u003d \"\";"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"    private static final String MESSAGE_GOODBYE \u003d \"HUAT AH!\";"},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":"    private static final String MESSAGE_LOADING \u003d \"Loading from save... \";"},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"    private static final String MESSAGE_EXPENSE_SUCCESSFULLY_ADDED \u003d \"Expense has been added...\";"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"    private static final String MESSAGE_LOAN_SUCCESSFULLY_ADDED \u003d \"Loan has been added...\";"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":"    private static final String MESSAGE_SAVING_SUCCESSFULLY_ADDED \u003d \"Saving has been added...\";"},{"lineNumber":28,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MESSAGE_TOTAL_EXPENSE \u003d \"The total amount for expense is \";"},{"lineNumber":29,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MESSAGE_TOTAL_LOAN \u003d \"The total amount for loan is \";"},{"lineNumber":30,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MESSAGE_TOTAL_SAVING \u003d \"The total amount for saving is \";"},{"lineNumber":31,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":32,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":33,"author":{"gitId":"gerardtwk"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"gerardtwk"},"content":"     * Decorative prefix for the FINUX Interface."},{"lineNumber":35,"author":{"gitId":"gerardtwk"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"    private static final String FINUX_PREFIX \u003d \"$$\";"},{"lineNumber":37,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":38,"author":{"gitId":"jonahtwl"},"content":"    private final Scanner input;"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":40,"author":{"gitId":"jonahtwl"},"content":"    public Ui() {"},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"        this(System.in);"},{"lineNumber":42,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":44,"author":{"gitId":"jonahtwl"},"content":"    public Ui(InputStream in) {"},{"lineNumber":45,"author":{"gitId":"jonahtwl"},"content":"        this.input \u003d new Scanner(in);"},{"lineNumber":46,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":48,"author":{"gitId":"tzexern"},"content":"    public void printSuccessfulAdd(Record recordAdded, int index) {"},{"lineNumber":49,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":50,"author":{"gitId":"jonahtwl"},"content":"        System.out.println();"},{"lineNumber":51,"author":{"gitId":"tzexern"},"content":"        if (recordAdded instanceof Expense) {"},{"lineNumber":52,"author":{"gitId":"tzexern"},"content":"            System.out.println(MESSAGE_EXPENSE_SUCCESSFULLY_ADDED);"},{"lineNumber":53,"author":{"gitId":"tzexern"},"content":"        } else if (recordAdded instanceof Loan) {"},{"lineNumber":54,"author":{"gitId":"tzexern"},"content":"            System.out.println(MESSAGE_LOAN_SUCCESSFULLY_ADDED);"},{"lineNumber":55,"author":{"gitId":"tzexern"},"content":"        } else {"},{"lineNumber":56,"author":{"gitId":"tzexern"},"content":"            System.out.println(MESSAGE_SAVING_SUCCESSFULLY_ADDED);"},{"lineNumber":57,"author":{"gitId":"tzexern"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"tzexern"},"content":"        int formattedIndex \u003d index - 1;"},{"lineNumber":59,"author":{"gitId":"tzexern"},"content":"        System.out.println();"},{"lineNumber":60,"author":{"gitId":"tzexern"},"content":"        printIndex(formattedIndex);"},{"lineNumber":61,"author":{"gitId":"tzexern"},"content":"        System.out.println(recordAdded);"},{"lineNumber":62,"author":{"gitId":"jonahtwl"},"content":"        System.out.println();"},{"lineNumber":63,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":64,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":66,"author":{"gitId":"jonahtwl"},"content":"    public String getUserInput() {"},{"lineNumber":67,"author":{"gitId":"jonahtwl"},"content":"        System.out.print(FINUX_PREFIX + \" \");"},{"lineNumber":68,"author":{"gitId":"jonahtwl"},"content":"        String userInput \u003d input.nextLine().strip();"},{"lineNumber":69,"author":{"gitId":"jonahtwl"},"content":"        return userInput;"},{"lineNumber":70,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":72,"author":{"gitId":"jonahtwl"},"content":"    public void printWelcomeMessage() {"},{"lineNumber":73,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(logo);"},{"lineNumber":74,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(MESSAGE_LOADING + fileLoadStatus());"},{"lineNumber":75,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":77,"author":{"gitId":"jonahtwl"},"content":"    public void printGoodByeMessage() {"},{"lineNumber":78,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":79,"author":{"gitId":"jonahtwl"},"content":"        System.out.println();"},{"lineNumber":80,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(MESSAGE_GOODBYE);"},{"lineNumber":81,"author":{"gitId":"jonahtwl"},"content":"        System.out.println();"},{"lineNumber":82,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":83,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"jonahtwl"},"content":""},{"lineNumber":85,"author":{"gitId":"marklowsk"},"content":"    public void printMessage(String message) {"},{"lineNumber":86,"author":{"gitId":"marklowsk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":87,"author":{"gitId":"marklowsk"},"content":"        System.out.println(message);"},{"lineNumber":88,"author":{"gitId":"marklowsk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":89,"author":{"gitId":"marklowsk"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"marklowsk"},"content":""},{"lineNumber":91,"author":{"gitId":"jonahtwl"},"content":"    private String fileLoadStatus() {"},{"lineNumber":92,"author":{"gitId":"jonahtwl"},"content":"        return \"Successful\";"},{"lineNumber":93,"author":{"gitId":"jonahtwl"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":95,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void printExpenses(RecordList recordList) {"},{"lineNumber":96,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":97,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"Here is your Expense list:\" + \"\\n\");"},{"lineNumber":98,"author":{"gitId":"gerardtwk"},"content":"        for (int i \u003d 0; i \u003c recordList.getRecordCount(); i++) {"},{"lineNumber":99,"author":{"gitId":"gerardtwk"},"content":"            Record currentRecord \u003d recordList.getRecordAt(i);"},{"lineNumber":100,"author":{"gitId":"gerardtwk"},"content":"            if (currentRecord instanceof Expense) {"},{"lineNumber":101,"author":{"gitId":"tzexern"},"content":"                printIndex(i);"},{"lineNumber":102,"author":{"gitId":"gerardtwk"},"content":"                System.out.println(currentRecord);"},{"lineNumber":103,"author":{"gitId":"gerardtwk"},"content":"            }"},{"lineNumber":104,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":106,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":108,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void printLoans(RecordList recordList) {"},{"lineNumber":109,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":110,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"Here is your Loan list:\" + \"\\n\");"},{"lineNumber":111,"author":{"gitId":"gerardtwk"},"content":"        for (int i \u003d 0; i \u003c recordList.getRecordCount(); i++) {"},{"lineNumber":112,"author":{"gitId":"gerardtwk"},"content":"            Record currentRecord \u003d recordList.getRecordAt(i);"},{"lineNumber":113,"author":{"gitId":"gerardtwk"},"content":"            if (currentRecord instanceof Loan) {"},{"lineNumber":114,"author":{"gitId":"tzexern"},"content":"                printIndex(i);"},{"lineNumber":115,"author":{"gitId":"gerardtwk"},"content":"                System.out.println(currentRecord);"},{"lineNumber":116,"author":{"gitId":"gerardtwk"},"content":"            }"},{"lineNumber":117,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":119,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":121,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void printSavings(RecordList recordList) {"},{"lineNumber":122,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":123,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"Here is your Saving list:\" + \"\\n\");"},{"lineNumber":124,"author":{"gitId":"gerardtwk"},"content":"        for (int i \u003d 0; i \u003c recordList.getRecordCount(); i++) {"},{"lineNumber":125,"author":{"gitId":"gerardtwk"},"content":"            Record currentRecord \u003d recordList.getRecordAt(i);"},{"lineNumber":126,"author":{"gitId":"gerardtwk"},"content":"            if (currentRecord instanceof Saving) {"},{"lineNumber":127,"author":{"gitId":"tzexern"},"content":"                printIndex(i);"},{"lineNumber":128,"author":{"gitId":"gerardtwk"},"content":"                System.out.println(currentRecord);"},{"lineNumber":129,"author":{"gitId":"gerardtwk"},"content":"            }"},{"lineNumber":130,"author":{"gitId":"gerardtwk"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":132,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":134,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void printTotalAmountExpense(RecordList recordList) {"},{"lineNumber":135,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":136,"author":{"gitId":"LeeHanYongAndy"},"content":"        double totalAmount \u003d 0;"},{"lineNumber":137,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (int i \u003d 0; i \u003c recordList.getRecordCount(); i++) {"},{"lineNumber":138,"author":{"gitId":"LeeHanYongAndy"},"content":"            Record currentRecord \u003d recordList.getRecordAt(i);"},{"lineNumber":139,"author":{"gitId":"LeeHanYongAndy"},"content":"            if (currentRecord instanceof Expense) {"},{"lineNumber":140,"author":{"gitId":"LeeHanYongAndy"},"content":"                totalAmount \u003d totalAmount + currentRecord.getAmount();"},{"lineNumber":141,"author":{"gitId":"LeeHanYongAndy"},"content":"            }"},{"lineNumber":142,"author":{"gitId":"LeeHanYongAndy"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(MESSAGE_TOTAL_EXPENSE + totalAmount);"},{"lineNumber":144,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":145,"author":{"gitId":"LeeHanYongAndy"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":147,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void printTotalAmountLoan(RecordList recordList) {"},{"lineNumber":148,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":149,"author":{"gitId":"LeeHanYongAndy"},"content":"        double totalAmount \u003d 0;"},{"lineNumber":150,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (int i \u003d 0; i \u003c recordList.getRecordCount(); i++) {"},{"lineNumber":151,"author":{"gitId":"LeeHanYongAndy"},"content":"            Record currentRecord \u003d recordList.getRecordAt(i);"},{"lineNumber":152,"author":{"gitId":"LeeHanYongAndy"},"content":"            if (currentRecord instanceof Loan) {"},{"lineNumber":153,"author":{"gitId":"LeeHanYongAndy"},"content":"                totalAmount \u003d totalAmount + currentRecord.getAmount();"},{"lineNumber":154,"author":{"gitId":"LeeHanYongAndy"},"content":"            }"},{"lineNumber":155,"author":{"gitId":"LeeHanYongAndy"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(MESSAGE_TOTAL_LOAN + totalAmount);"},{"lineNumber":157,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":158,"author":{"gitId":"LeeHanYongAndy"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"LeeHanYongAndy"},"content":""},{"lineNumber":160,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void printTotalAmountSaving(RecordList recordList) {"},{"lineNumber":161,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":162,"author":{"gitId":"LeeHanYongAndy"},"content":"        double totalAmount \u003d 0;"},{"lineNumber":163,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (int i \u003d 0; i \u003c recordList.getRecordCount(); i++) {"},{"lineNumber":164,"author":{"gitId":"LeeHanYongAndy"},"content":"            Record currentRecord \u003d recordList.getRecordAt(i);"},{"lineNumber":165,"author":{"gitId":"LeeHanYongAndy"},"content":"            if (currentRecord instanceof Saving) {"},{"lineNumber":166,"author":{"gitId":"LeeHanYongAndy"},"content":"                totalAmount \u003d totalAmount + currentRecord.getAmount();"},{"lineNumber":167,"author":{"gitId":"LeeHanYongAndy"},"content":"            }"},{"lineNumber":168,"author":{"gitId":"LeeHanYongAndy"},"content":"        }"},{"lineNumber":169,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(MESSAGE_TOTAL_SAVING + totalAmount);"},{"lineNumber":170,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":171,"author":{"gitId":"LeeHanYongAndy"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"tzexern"},"content":""},{"lineNumber":173,"author":{"gitId":"tzexern"},"content":"    public void printIndex(int index) {"},{"lineNumber":174,"author":{"gitId":"tzexern"},"content":"        int formattedIndex \u003d index + 1;"},{"lineNumber":175,"author":{"gitId":"tzexern"},"content":"        System.out.print(formattedIndex + \". \");"},{"lineNumber":176,"author":{"gitId":"tzexern"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"LeeHanYongAndy"},"content":"}"}],"authorContributionMap":{"tzexern":26,"jonahtwl":53,"LeeHanYongAndy":55,"marklowsk":6,"gerardtwk":37}},{"path":"src/test/java/seedu/duke/RecordListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Expense;"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.RecordList;"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Saving;"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Loan;"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":11,"author":{"gitId":"LeeHanYongAndy"},"content":"import static seedu.duke.common.Validators.validateDate;"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"public class RecordListTest {"},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"    public void addRecord_expenseLoanSavingObjs_success() {"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"        RecordList records \u003d new RecordList();"},{"lineNumber":17,"author":{"gitId":"LeeHanYongAndy"},"content":"        records.addRecord(new Expense(220.50, validateDate(\"2020/01/01\"), \"electric bills\"));"},{"lineNumber":18,"author":{"gitId":"LeeHanYongAndy"},"content":"        records.addRecord(new Loan(100, validateDate(\"2020/01/01\"), \"loan to bob\"));"},{"lineNumber":19,"author":{"gitId":"LeeHanYongAndy"},"content":"        records.addRecord(new Saving(20, validateDate(\"2020/01/01\"), \"red packet\"));"},{"lineNumber":20,"author":{"gitId":"gerardtwk"},"content":"        assertEquals(3, records.getRecordCount());"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"        assertEquals(\"[E][2020-01-01] electric bills \", records.getRecordAt(0).toString());"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":"        assertEquals(\"[L][2020-01-01] loan to bob [ ]\", records.getRecordAt(1).toString());"},{"lineNumber":23,"author":{"gitId":"tzexern"},"content":"        assertEquals(\"[S][2020-01-01] red packet \", records.getRecordAt(2).toString());"},{"lineNumber":24,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":26,"author":{"gitId":"gerardtwk"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"gerardtwk"},"content":"    public void deleteRecordAt_indexOfAddedRecordToDelete_success() {"},{"lineNumber":28,"author":{"gitId":"gerardtwk"},"content":"        RecordList records \u003d new RecordList();"},{"lineNumber":29,"author":{"gitId":"LeeHanYongAndy"},"content":"        records.addRecord(new Expense(220.50, validateDate(\"2020/01/01\"), \"electric bills\"));"},{"lineNumber":30,"author":{"gitId":"LeeHanYongAndy"},"content":"        records.addRecord(new Loan(100, validateDate(\"2020/01/01\"), \"loan to bob\"));"},{"lineNumber":31,"author":{"gitId":"LeeHanYongAndy"},"content":"        records.addRecord(new Saving(20, validateDate(\"2020/01/01\"), \"red packet\"));"},{"lineNumber":32,"author":{"gitId":"gerardtwk"},"content":"        records.deleteRecordAt(1);"},{"lineNumber":33,"author":{"gitId":"gerardtwk"},"content":"        assertEquals(2, records.getRecordCount());"},{"lineNumber":34,"author":{"gitId":"tzexern"},"content":"        assertEquals(\"[E][2020-01-01] electric bills \", records.getRecordAt(0).toString());"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"        assertEquals(\"[S][2020-01-01] red packet \", records.getRecordAt(1).toString());"},{"lineNumber":36,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"gerardtwk"},"content":""},{"lineNumber":38,"author":{"gitId":"gerardtwk"},"content":"    @Test"},{"lineNumber":39,"author":{"gitId":"gerardtwk"},"content":"    public void deleteAllRecords_noTestInputs_success() {"},{"lineNumber":40,"author":{"gitId":"gerardtwk"},"content":"        RecordList records \u003d new RecordList();"},{"lineNumber":41,"author":{"gitId":"LeeHanYongAndy"},"content":"        records.addRecord(new Expense(220.50, validateDate(\"2020/01/01\"), \"electric bills\"));"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"        records.addRecord(new Loan(100, validateDate(\"2020/01/01\"), \"loan to bob\"));"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"        records.addRecord(new Saving(20, validateDate(\"2020/01/01\"), \"red packet\"));"},{"lineNumber":44,"author":{"gitId":"gerardtwk"},"content":"        records.deleteAllRecords();"},{"lineNumber":45,"author":{"gitId":"gerardtwk"},"content":"        assertTrue(records.isEmpty());"},{"lineNumber":46,"author":{"gitId":"gerardtwk"},"content":"        assertEquals(0, records.getRecordCount());"},{"lineNumber":47,"author":{"gitId":"gerardtwk"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"gerardtwk"},"content":"}"}],"authorContributionMap":{"tzexern":5,"LeeHanYongAndy":10,"gerardtwk":33}}]
