[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":"    implementation group: \u0027org.apache.commons\u0027, name: \u0027commons-lang3\u0027, version: \u00273.11\u0027","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LeeHanYongAndy":2,"-":46}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"# Finux","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"Finux is a desktop application for tracking and managing your finance status.","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"It tracks your expenses, savings and also any loans to your friends.","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"LeeHanYongAndy"},"content":"Most of the user interactions happen using a CLI (Command Line Interface). ","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"LeeHanYongAndy"},"content":"* If you are interested in using Finux, head over to the Quick Start section of the [User Guide](UserGuide.md).","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"LeeHanYongAndy"},"content":"* If you are interested about developing Finux, the [Developer Guide](DeveloperGuide.md) is a good place to start.","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"* Get to know more about the [team](AboutUs.md).","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"LeeHanYongAndy":8,"-":2}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"# Finux User Guide","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"By: `Jonah Tham`, `Gerard Tan`, `Lee Han Yong Andy`, `Mark Low`, `Tan Tze Xern` ","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"Since: `March 2021`","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"LeeHanYongAndy"},"content":"- [Finux User Guide](#finux-user-guide)","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":"    * [1. Introduction](#1-introduction)","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"LeeHanYongAndy"},"content":"    * [2. Quick Start](#2-quick-start)","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"LeeHanYongAndy"},"content":"    * [3. Features](#3-features)","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"        + [3.1 Add a record: `add`](#31-add-a-record-add)","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"LeeHanYongAndy"},"content":"        + [3.2 List the records details: `list`](#32-list-the-records-details-list)","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"LeeHanYongAndy"},"content":"        + [3.3 View category total amount: `view`](#33-view-category-total-amount-view)","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"        + [3.4 Set a loan as return: `return`](#34-set-a-loan-as-return-return)","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"LeeHanYongAndy"},"content":"        + [3.5 Remove a record: `remove`](#35-remove-a-record-remove)","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":"        + [3.6 Check a person credit score: `creditscore`](#36-check-a-person-credit-score-creditscore)","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":"        + [3.7 Exit the program: `exit`](#37-exit-the-program-exit)","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"LeeHanYongAndy"},"content":"        + [3.8 Help function: `help`](#38-help-function-help)","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"LeeHanYongAndy"},"content":"        + [3.9 Task Storage](#39-task-storage)","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"LeeHanYongAndy"},"content":"    * [4. Frequently Asked Question (FAQ)](#4-faq)","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"    * [5. Command Summary](#5-command-summary)","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"## 1. Introduction","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":"Finux is a CLI Style application that allows the user to make better financial","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"LeeHanYongAndy"},"content":"decisions based on the information recorded in the application. If you’re familiar","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"LeeHanYongAndy"},"content":"with the CLI command interface, you will enjoy the benefit of speeding up your","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"LeeHanYongAndy"},"content":"finance management rather than using the traditional management system.","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"LeeHanYongAndy"},"content":"## 2. Quick Start","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"LeeHanYongAndy"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"2. Download the latest `finux.jar` from [here](https://github.com/AY2021S2-CS2113T-W09-1/tp/releases/tag/v1.0).","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"LeeHanYongAndy"},"content":"3. Copy the file to the folder you want to use as the *home folder* for your Duke.","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"LeeHanYongAndy"},"content":"4. For Windows users, pull up your **Command Prompt**.\\","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"LeeHanYongAndy"},"content":"   For Mac users, pull up your **Terminal**.\\","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"LeeHanYongAndy"},"content":"   Navigate to the directory containing the `finux.jar` file.\\","lastModifiedDate":"2021-03-20"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"   i.e. `cd FILEPATH`, `FILEPATH` is the address of your file.","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"5. Run the Duke.jar file by using the `java -jar finux.jar` command.","lastModifiedDate":"2021-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"## 3. Features","lastModifiedDate":"2021-03-20"},{"lineNumber":44,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e ❗ **CAUTION:** Insert any warning.","lastModifiedDate":"2021-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"### 3.1 Add a record: `add`","lastModifiedDate":"2021-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"LeeHanYongAndy"},"content":"#### 3.1.1 Add an expense record","lastModifiedDate":"2021-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"This operation will add a expense record to the list.","lastModifiedDate":"2021-03-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"LeeHanYongAndy"},"content":"Format: `insert format`","lastModifiedDate":"2021-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"LeeHanYongAndy"},"content":"Examples: `insert example`, `insert example`","lastModifiedDate":"2021-03-20"},{"lineNumber":55,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":56,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-20"},{"lineNumber":57,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":58,"author":{"gitId":"LeeHanYongAndy"},"content":"![add expense example output](https://via.placeholder.com/100.png?text\u003dPhoto)","lastModifiedDate":"2021-03-20"},{"lineNumber":59,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":60,"author":{"gitId":"LeeHanYongAndy"},"content":"#### 3.1.2 Add a loan record","lastModifiedDate":"2021-03-20"},{"lineNumber":61,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":62,"author":{"gitId":"LeeHanYongAndy"},"content":"This operation will add a loan record to the list.","lastModifiedDate":"2021-03-20"},{"lineNumber":63,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"Format: `insert format`","lastModifiedDate":"2021-03-20"},{"lineNumber":65,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"Examples: `insert example`, `insert example`","lastModifiedDate":"2021-03-20"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-20"},{"lineNumber":69,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":70,"author":{"gitId":"LeeHanYongAndy"},"content":"![add loan example output]()","lastModifiedDate":"2021-03-20"},{"lineNumber":71,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":72,"author":{"gitId":"LeeHanYongAndy"},"content":"#### 3.1.3 Add a saving record","lastModifiedDate":"2021-03-20"},{"lineNumber":73,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":74,"author":{"gitId":"LeeHanYongAndy"},"content":"This operation will add a saving record to the list.","lastModifiedDate":"2021-03-20"},{"lineNumber":75,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":76,"author":{"gitId":"LeeHanYongAndy"},"content":"Format: `insert format`","lastModifiedDate":"2021-03-20"},{"lineNumber":77,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":78,"author":{"gitId":"LeeHanYongAndy"},"content":"Examples: `insert example`, `insert example`","lastModifiedDate":"2021-03-20"},{"lineNumber":79,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":80,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-20"},{"lineNumber":81,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":82,"author":{"gitId":"LeeHanYongAndy"},"content":"![add saving example output]()","lastModifiedDate":"2021-03-20"},{"lineNumber":83,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":84,"author":{"gitId":"LeeHanYongAndy"},"content":"### 3.2 List the records details: `list`","lastModifiedDate":"2021-03-20"},{"lineNumber":85,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":86,"author":{"gitId":"LeeHanYongAndy"},"content":"This operation will list the details of chosen record type.","lastModifiedDate":"2021-03-20"},{"lineNumber":87,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":88,"author":{"gitId":"LeeHanYongAndy"},"content":"Format: `insert format`","lastModifiedDate":"2021-03-20"},{"lineNumber":89,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":90,"author":{"gitId":"LeeHanYongAndy"},"content":"Examples: `insert example`, `insert example`","lastModifiedDate":"2021-03-20"},{"lineNumber":91,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":92,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-20"},{"lineNumber":93,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":94,"author":{"gitId":"LeeHanYongAndy"},"content":"![list example output]()","lastModifiedDate":"2021-03-20"},{"lineNumber":95,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":96,"author":{"gitId":"LeeHanYongAndy"},"content":"### 3.3 View category total amount: `view`","lastModifiedDate":"2021-03-20"},{"lineNumber":97,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":98,"author":{"gitId":"LeeHanYongAndy"},"content":"This operation will view the total amount of chosen record type.","lastModifiedDate":"2021-03-20"},{"lineNumber":99,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":100,"author":{"gitId":"LeeHanYongAndy"},"content":"Format: `insert format`","lastModifiedDate":"2021-03-20"},{"lineNumber":101,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":102,"author":{"gitId":"LeeHanYongAndy"},"content":"Examples: `insert example`, `insert example`","lastModifiedDate":"2021-03-20"},{"lineNumber":103,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":104,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-20"},{"lineNumber":105,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":106,"author":{"gitId":"LeeHanYongAndy"},"content":"![view example output]()","lastModifiedDate":"2021-03-20"},{"lineNumber":107,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":108,"author":{"gitId":"LeeHanYongAndy"},"content":"### 3.4 Set a loan as return: `return`","lastModifiedDate":"2021-03-20"},{"lineNumber":109,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":110,"author":{"gitId":"LeeHanYongAndy"},"content":"This operation will set a loan record as returned by the loanee.","lastModifiedDate":"2021-03-20"},{"lineNumber":111,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":112,"author":{"gitId":"LeeHanYongAndy"},"content":"Format: `insert format`","lastModifiedDate":"2021-03-20"},{"lineNumber":113,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":114,"author":{"gitId":"LeeHanYongAndy"},"content":"Examples: `insert example`, `insert example`","lastModifiedDate":"2021-03-20"},{"lineNumber":115,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":116,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-20"},{"lineNumber":117,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":118,"author":{"gitId":"LeeHanYongAndy"},"content":"![return example output]()","lastModifiedDate":"2021-03-20"},{"lineNumber":119,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":120,"author":{"gitId":"LeeHanYongAndy"},"content":"### 3.5 Remove a record: `remove`","lastModifiedDate":"2021-03-20"},{"lineNumber":121,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":122,"author":{"gitId":"LeeHanYongAndy"},"content":"This operation will remove a record from the list.","lastModifiedDate":"2021-03-20"},{"lineNumber":123,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":124,"author":{"gitId":"LeeHanYongAndy"},"content":"Format: `insert format`","lastModifiedDate":"2021-03-20"},{"lineNumber":125,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":126,"author":{"gitId":"LeeHanYongAndy"},"content":"Examples: `insert example`, `insert example`","lastModifiedDate":"2021-03-20"},{"lineNumber":127,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":128,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-20"},{"lineNumber":129,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":130,"author":{"gitId":"LeeHanYongAndy"},"content":"![remove example output]()","lastModifiedDate":"2021-03-20"},{"lineNumber":131,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":132,"author":{"gitId":"LeeHanYongAndy"},"content":"### 3.6 Check a person credit score: `creditscore`","lastModifiedDate":"2021-03-20"},{"lineNumber":133,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":134,"author":{"gitId":"LeeHanYongAndy"},"content":"This operation will check the credit score of a person.","lastModifiedDate":"2021-03-20"},{"lineNumber":135,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":136,"author":{"gitId":"LeeHanYongAndy"},"content":"Format: `insert format`","lastModifiedDate":"2021-03-20"},{"lineNumber":137,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":138,"author":{"gitId":"LeeHanYongAndy"},"content":"Examples: `insert example`, `insert example`","lastModifiedDate":"2021-03-20"},{"lineNumber":139,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":140,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-20"},{"lineNumber":141,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":142,"author":{"gitId":"LeeHanYongAndy"},"content":"![creditscore example output]()","lastModifiedDate":"2021-03-20"},{"lineNumber":143,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":144,"author":{"gitId":"LeeHanYongAndy"},"content":"### 3.7 Exit the program: `exit`","lastModifiedDate":"2021-03-20"},{"lineNumber":145,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":146,"author":{"gitId":"LeeHanYongAndy"},"content":"This operation exit the program.","lastModifiedDate":"2021-03-20"},{"lineNumber":147,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":148,"author":{"gitId":"LeeHanYongAndy"},"content":"Format: `insert format`","lastModifiedDate":"2021-03-20"},{"lineNumber":149,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":150,"author":{"gitId":"LeeHanYongAndy"},"content":"Examples: `insert example`, `insert example`","lastModifiedDate":"2021-03-20"},{"lineNumber":151,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":152,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-20"},{"lineNumber":153,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":154,"author":{"gitId":"LeeHanYongAndy"},"content":"![exit example output]()","lastModifiedDate":"2021-03-20"},{"lineNumber":155,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":156,"author":{"gitId":"LeeHanYongAndy"},"content":"### 3.8 Help function: `help`","lastModifiedDate":"2021-03-20"},{"lineNumber":157,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":158,"author":{"gitId":"LeeHanYongAndy"},"content":"This operation lists the help page for the application.","lastModifiedDate":"2021-03-20"},{"lineNumber":159,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":160,"author":{"gitId":"LeeHanYongAndy"},"content":"Format: `insert format`","lastModifiedDate":"2021-03-20"},{"lineNumber":161,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":162,"author":{"gitId":"LeeHanYongAndy"},"content":"Examples: `insert example`, `insert example`","lastModifiedDate":"2021-03-20"},{"lineNumber":163,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":164,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-20"},{"lineNumber":165,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":166,"author":{"gitId":"LeeHanYongAndy"},"content":"![help example output]()","lastModifiedDate":"2021-03-20"},{"lineNumber":167,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":168,"author":{"gitId":"LeeHanYongAndy"},"content":"### 3.9 Task Storage","lastModifiedDate":"2021-03-20"},{"lineNumber":169,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":170,"author":{"gitId":"LeeHanYongAndy"},"content":"#### 3.9.1 Automatically load data from an existing file to the program.","lastModifiedDate":"2021-03-20"},{"lineNumber":171,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":172,"author":{"gitId":"LeeHanYongAndy"},"content":"* Expected Outcome if successful:","lastModifiedDate":"2021-03-20"},{"lineNumber":173,"author":{"gitId":"LeeHanYongAndy"},"content":"  ![load success example output]()","lastModifiedDate":"2021-03-20"},{"lineNumber":174,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":175,"author":{"gitId":"LeeHanYongAndy"},"content":"* Expected outcome if not successful:","lastModifiedDate":"2021-03-20"},{"lineNumber":176,"author":{"gitId":"LeeHanYongAndy"},"content":"  ![load fail example output]()","lastModifiedDate":"2021-03-20"},{"lineNumber":177,"author":{"gitId":"LeeHanYongAndy"},"content":"  ","lastModifiedDate":"2021-03-20"},{"lineNumber":178,"author":{"gitId":"LeeHanYongAndy"},"content":"#### 3.9.2 Automatically save the current task list to a file.","lastModifiedDate":"2021-03-20"},{"lineNumber":179,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":180,"author":{"gitId":"LeeHanYongAndy"},"content":"* After entering `exit`, program will automatically store all the tasks into a task_logs.txt file.","lastModifiedDate":"2021-03-20"},{"lineNumber":181,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":182,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":183,"author":{"gitId":"LeeHanYongAndy"},"content":"## 4. FAQ","lastModifiedDate":"2021-03-20"},{"lineNumber":184,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":185,"author":{"gitId":"LeeHanYongAndy"},"content":"**Q**: {Insert question}? ","lastModifiedDate":"2021-03-20"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"**A**: {your answer here}","lastModifiedDate":"2020-05-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":190,"author":{"gitId":"LeeHanYongAndy"},"content":"## 5. Command Summary","lastModifiedDate":"2021-03-20"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":192,"author":{"gitId":"LeeHanYongAndy"},"content":"Command | Format | Example |","lastModifiedDate":"2021-03-20"},{"lineNumber":193,"author":{"gitId":"LeeHanYongAndy"},"content":"------- | ------- | ------- | ","lastModifiedDate":"2021-03-20"},{"lineNumber":194,"author":{"gitId":"LeeHanYongAndy"},"content":"add | `insert format` | `insert example` |","lastModifiedDate":"2021-03-20"},{"lineNumber":195,"author":{"gitId":"LeeHanYongAndy"},"content":"list | `insert format` | `insert example` |","lastModifiedDate":"2021-03-20"},{"lineNumber":196,"author":{"gitId":"LeeHanYongAndy"},"content":"view | `insert format` | `insert example` |","lastModifiedDate":"2021-03-20"},{"lineNumber":197,"author":{"gitId":"LeeHanYongAndy"},"content":"return | `insert format` | `insert example` |","lastModifiedDate":"2021-03-20"},{"lineNumber":198,"author":{"gitId":"LeeHanYongAndy"},"content":"remove | `insert format` | `insert example` |","lastModifiedDate":"2021-03-20"},{"lineNumber":199,"author":{"gitId":"LeeHanYongAndy"},"content":"creditscore | `insert format` | `insert example` |","lastModifiedDate":"2021-03-20"},{"lineNumber":200,"author":{"gitId":"LeeHanYongAndy"},"content":"exit | `insert format` | `insert example` |","lastModifiedDate":"2021-03-20"},{"lineNumber":201,"author":{"gitId":"LeeHanYongAndy"},"content":"help | `insert format` | `insert example` |","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"LeeHanYongAndy":181,"-":20}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.command.CommandHandler;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.command.ExitCommand;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.exception.FileLoadingException;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.exception.InvalidFileInputException;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.parser.ParserHandler;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"    private Ui ui;","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":"    private RecordList records;","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"    private Storage storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"    public Duke() {","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":"        records \u003d new RecordList();","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application.","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"        new Duke().run();","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"jonahtwl"},"content":"     * Runner for the FINUX Application.","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":"    private void run() {","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"jonahtwl"},"content":"        start();","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"jonahtwl"},"content":"        commandLooper();","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"jonahtwl"},"content":"        end();","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"jonahtwl"},"content":"    private void end() {","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"jonahtwl"},"content":"        ui.printGoodByeMessage();","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"jonahtwl"},"content":"        System.exit(0);","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"jonahtwl"},"content":"    // @@ author jonahtwl-reused","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"jonahtwl"},"content":"    // No recovery should be expected from a corrupted file.","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"jonahtwl"},"content":"    // Reused from: https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/Main.java","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"jonahtwl"},"content":"    private void start() {","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"jonahtwl"},"content":"        try {","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"marklowsk"},"content":"            ui \u003d new Ui();","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"marklowsk"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"jonahtwl"},"content":"            records \u003d new RecordList(storage.loadFile());","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"jonahtwl"},"content":"            ui.printWelcomeMessage();","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"jonahtwl"},"content":"        } catch (FileLoadingException e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"jonahtwl"},"content":"            Ui.printInitError();","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"jonahtwl"},"content":"            throw new RuntimeException(e.getMessage());","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"jonahtwl"},"content":"    private void commandLooper() {","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"jonahtwl"},"content":"        Command command;","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"jonahtwl"},"content":"        String rawInput;","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"jonahtwl"},"content":"        do {","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"jonahtwl"},"content":"            rawInput \u003d ui.getUserInput();","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"jonahtwl"},"content":"            ArrayList\u003cString\u003e parsedStringList \u003d ParserHandler.getParseInput(rawInput);","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"LeeHanYongAndy"},"content":"            assert parsedStringList.size() !\u003d 0 : \"Empty Parser Error\";","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"jonahtwl"},"content":"            command \u003d CommandHandler.parseCommand(parsedStringList, records);","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"gerardtwk"},"content":"            if (command !\u003d null) {","lastModifiedDate":"2021-03-11"},{"lineNumber":73,"author":{"gitId":"jonahtwl"},"content":"                command.execute(records, ui, storage);","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"gerardtwk"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":75,"author":{"gitId":"jonahtwl"},"content":"        } while (!ExitCommand.isExit(command));","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jonahtwl":63,"marklowsk":2,"LeeHanYongAndy":1,"gerardtwk":2,"-":10}},{"path":"src/main/java/seedu/duke/command/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.common.RecordType;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"LeeHanYongAndy"},"content":"import seedu.duke.exception.CustomException;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.Expense;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.record.Loan;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.record.Saving;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"import static seedu.duke.command.Utils.getOptionValue;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"import static seedu.duke.command.Utils.hasOption;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateOptions;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_AMOUNT;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"import static seedu.duke.common.Constant.OPTION_DATE;","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_EXPENSE;","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_LOAN;","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_PERSON;","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_SAVING;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"import static seedu.duke.common.Validators.validateAmount;","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"import static seedu.duke.common.Validators.validateDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"LeeHanYongAndy"},"content":" * Handles all operations related to the add command.","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"    protected static final String COMMAND_ADD \u003d \"add\";","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"    private static final String[] VALID_OPTIONS \u003d {","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"marklowsk"},"content":"        OPTION_EXPENSE, OPTION_LOAN, OPTION_SAVING, OPTION_AMOUNT, OPTION_DATE, OPTION_PERSON","lastModifiedDate":"2021-03-19"},{"lineNumber":37,"author":{"gitId":"marklowsk"},"content":"    };","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"    private static final String[] CONFLICT_OPTIONS \u003d {OPTION_EXPENSE, OPTION_LOAN, OPTION_SAVING};","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"    private final BigDecimal amount;","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"marklowsk"},"content":"    private final LocalDate issueDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"    private final String description;","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"marklowsk"},"content":"    private final String borrower;","lastModifiedDate":"2021-03-19"},{"lineNumber":43,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"jonahtwl"},"content":"    private RecordType recordType;","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Constructor to validate the format for add command.","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":49,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"jonahtwl"},"content":"    public AddCommand(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"marklowsk"},"content":"        validateOptions(arguments, COMMAND_ADD, VALID_OPTIONS, CONFLICT_OPTIONS);","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"LeeHanYongAndy"},"content":"        description \u003d getDescription(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"LeeHanYongAndy"},"content":"        amount \u003d getAmount(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"LeeHanYongAndy"},"content":"        issueDate \u003d getDate(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"marklowsk"},"content":"        borrower \u003d getPerson(arguments);","lastModifiedDate":"2021-03-19"},{"lineNumber":59,"author":{"gitId":"marklowsk"},"content":"        System.out.println(\"borrower is: \" + borrower);","lastModifiedDate":"2021-03-19"},{"lineNumber":60,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"marklowsk"},"content":"     * Gets the description field.","lastModifiedDate":"2021-03-19"},{"lineNumber":64,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":65,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a String containing the description of the record.","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"LeeHanYongAndy"},"content":"    private String getDescription(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"marklowsk"},"content":"        return getOptionValue(arguments, COMMAND_ADD, checkRecordType(arguments));","lastModifiedDate":"2021-03-19"},{"lineNumber":71,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"marklowsk"},"content":"     * Gets the amount field.","lastModifiedDate":"2021-03-19"},{"lineNumber":75,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":76,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a BigDecimal object containing the amount of the record.","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"LeeHanYongAndy"},"content":"    private BigDecimal getAmount(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"LeeHanYongAndy"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"LeeHanYongAndy"},"content":"            return validateAmount(getOptionValue(arguments, COMMAND_ADD, OPTION_AMOUNT));","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"LeeHanYongAndy"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"LeeHanYongAndy"},"content":"            throw new CommandException(\"amount contains a non numeric value.\", COMMAND_ADD);","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"LeeHanYongAndy"},"content":"        } catch (CustomException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"LeeHanYongAndy"},"content":"            throw new CommandException(e.getMessage(), COMMAND_ADD);","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"marklowsk"},"content":"     * Gets the date field.","lastModifiedDate":"2021-03-19"},{"lineNumber":92,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":93,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a LocalDate object containing the date of the record.","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"LeeHanYongAndy"},"content":"    private LocalDate getDate(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"LeeHanYongAndy"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"LeeHanYongAndy"},"content":"            return validateDate(getOptionValue(arguments, COMMAND_ADD, OPTION_DATE));","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"LeeHanYongAndy"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"LeeHanYongAndy"},"content":"            throw new CommandException(e.getMessage(), COMMAND_ADD);","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"marklowsk"},"content":"     * Gets the person field.","lastModifiedDate":"2021-03-19"},{"lineNumber":107,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":108,"author":{"gitId":"marklowsk"},"content":"     * @param arguments parsed input containing the options and arguments.","lastModifiedDate":"2021-03-19"},{"lineNumber":109,"author":{"gitId":"marklowsk"},"content":"     * @return the option value of person, or {@code null} if {@code recordType} is not a loan.","lastModifiedDate":"2021-03-19"},{"lineNumber":110,"author":{"gitId":"marklowsk"},"content":"     * @throws CommandException if {@code recordType} is not a loan but arguments contains the person option,","lastModifiedDate":"2021-03-19"},{"lineNumber":111,"author":{"gitId":"marklowsk"},"content":"     *                          or if the option value of person is empty.","lastModifiedDate":"2021-03-19"},{"lineNumber":112,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":113,"author":{"gitId":"marklowsk"},"content":"    private String getPerson(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-19"},{"lineNumber":114,"author":{"gitId":"marklowsk"},"content":"        if (recordType \u003d\u003d RecordType.LOAN) {","lastModifiedDate":"2021-03-19"},{"lineNumber":115,"author":{"gitId":"marklowsk"},"content":"            return getOptionValue(arguments, COMMAND_ADD, OPTION_PERSON);","lastModifiedDate":"2021-03-19"},{"lineNumber":116,"author":{"gitId":"marklowsk"},"content":"        } else if (hasOption(arguments, OPTION_PERSON)) {","lastModifiedDate":"2021-03-19"},{"lineNumber":117,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(\"option -p not valid for this record type.\", COMMAND_ADD);","lastModifiedDate":"2021-03-19"},{"lineNumber":118,"author":{"gitId":"marklowsk"},"content":"        } else {","lastModifiedDate":"2021-03-19"},{"lineNumber":119,"author":{"gitId":"marklowsk"},"content":"            return null;","lastModifiedDate":"2021-03-19"},{"lineNumber":120,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":121,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":122,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":123,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":124,"author":{"gitId":"marklowsk"},"content":"     * Checks if the input contains the correct record type and options.","lastModifiedDate":"2021-03-19"},{"lineNumber":125,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":126,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing the options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"LeeHanYongAndy"},"content":"    private String checkRecordType(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":130,"author":{"gitId":"jonahtwl"},"content":"        if (hasOption(arguments, OPTION_EXPENSE)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":131,"author":{"gitId":"jonahtwl"},"content":"            recordType \u003d RecordType.EXPENSE;","lastModifiedDate":"2021-03-09"},{"lineNumber":132,"author":{"gitId":"LeeHanYongAndy"},"content":"            return OPTION_EXPENSE;","lastModifiedDate":"2021-03-14"},{"lineNumber":133,"author":{"gitId":"jonahtwl"},"content":"        } else if (hasOption(arguments, OPTION_LOAN)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":134,"author":{"gitId":"jonahtwl"},"content":"            recordType \u003d RecordType.LOAN;","lastModifiedDate":"2021-03-09"},{"lineNumber":135,"author":{"gitId":"LeeHanYongAndy"},"content":"            return OPTION_LOAN;","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"marklowsk"},"content":"        } else if (hasOption(arguments, OPTION_SAVING)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":137,"author":{"gitId":"jonahtwl"},"content":"            recordType \u003d RecordType.SAVING;","lastModifiedDate":"2021-03-09"},{"lineNumber":138,"author":{"gitId":"LeeHanYongAndy"},"content":"            return OPTION_SAVING;","lastModifiedDate":"2021-03-14"},{"lineNumber":139,"author":{"gitId":"jonahtwl"},"content":"        } else {","lastModifiedDate":"2021-03-09"},{"lineNumber":140,"author":{"gitId":"jonahtwl"},"content":"            throw new CommandException(\"missing option: [-e | -l | -s]\", COMMAND_ADD);","lastModifiedDate":"2021-03-09"},{"lineNumber":141,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":142,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":143,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":144,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Executes the add function.","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"LeeHanYongAndy"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param ui      is the Ui object that interacts with the user.","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param storage is the Storage object that reads and writes to the save file.","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"jonahtwl"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":152,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void execute(RecordList recordList, Ui ui, Storage storage) {","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"jonahtwl"},"content":"        switch (recordType) {","lastModifiedDate":"2021-03-09"},{"lineNumber":154,"author":{"gitId":"jonahtwl"},"content":"        case EXPENSE:","lastModifiedDate":"2021-03-09"},{"lineNumber":155,"author":{"gitId":"gerardtwk"},"content":"            Expense expenseObj \u003d new Expense(amount, issueDate, description);","lastModifiedDate":"2021-03-11"},{"lineNumber":156,"author":{"gitId":"LeeHanYongAndy"},"content":"            recordList.addRecord(expenseObj);","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"LeeHanYongAndy"},"content":"            storage.saveRecordListData(recordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printSuccessfulAdd(expenseObj, recordList.getRecordCount());","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"jonahtwl"},"content":"            break;","lastModifiedDate":"2021-03-09"},{"lineNumber":160,"author":{"gitId":"jonahtwl"},"content":"        case LOAN:","lastModifiedDate":"2021-03-09"},{"lineNumber":161,"author":{"gitId":"LeeHanYongAndy"},"content":"            Loan loanObj \u003d new Loan(amount, issueDate, description);","lastModifiedDate":"2021-03-11"},{"lineNumber":162,"author":{"gitId":"LeeHanYongAndy"},"content":"            recordList.addRecord(loanObj);","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"LeeHanYongAndy"},"content":"            storage.saveRecordListData(recordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printSuccessfulAdd(loanObj, recordList.getRecordCount());","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"jonahtwl"},"content":"            break;","lastModifiedDate":"2021-03-09"},{"lineNumber":166,"author":{"gitId":"jonahtwl"},"content":"        case SAVING:","lastModifiedDate":"2021-03-09"},{"lineNumber":167,"author":{"gitId":"marklowsk"},"content":"            // Fallthrough","lastModifiedDate":"2021-03-11"},{"lineNumber":168,"author":{"gitId":"jonahtwl"},"content":"        default:","lastModifiedDate":"2021-03-09"},{"lineNumber":169,"author":{"gitId":"LeeHanYongAndy"},"content":"            Saving savingObj \u003d new Saving(amount, issueDate, description);","lastModifiedDate":"2021-03-11"},{"lineNumber":170,"author":{"gitId":"LeeHanYongAndy"},"content":"            recordList.addRecord(savingObj);","lastModifiedDate":"2021-03-17"},{"lineNumber":171,"author":{"gitId":"LeeHanYongAndy"},"content":"            storage.saveRecordListData(recordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":172,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printSuccessfulAdd(savingObj, recordList.getRecordCount());","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":174,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":175,"author":{"gitId":"jonahtwl"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"jonahtwl":41,"marklowsk":52,"LeeHanYongAndy":81,"gerardtwk":1}},{"path":"src/main/java/seedu/duke/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"public abstract class Command {","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"LeeHanYongAndy"},"content":"    public abstract void execute(RecordList recordList, Ui ui, Storage storage);","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"jonahtwl":8,"LeeHanYongAndy":1}},{"path":"src/main/java/seedu/duke/command/CommandHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.ListCommand.COMMAND_LIST;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.AddCommand.COMMAND_ADD;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.command.ReturnCommand.COMMAND_RETURN;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.RemoveCommand.COMMAND_REMOVE;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.ViewCommand.COMMAND_VIEW;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.HelpCommand.COMMAND_HELP;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.ExitCommand.COMMAND_EXIT;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"import static seedu.duke.command.CreditScoreCommand.COMMAND_CREDIT_SCORE;","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"LeeHanYongAndy"},"content":"public class CommandHandler {","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_INVALID_COMMAND \u003d \"Invalid command: \";","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"    private static final int INDEX_OF_COMMAND \u003d 0;","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"gerardtwk"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(\"CommandLogger\");","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static Command createCommand(ArrayList\u003cString\u003e parsedArguments, RecordList recordList)","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"            throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":"        String commandWord \u003d parsedArguments.get(INDEX_OF_COMMAND);","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"            return new ListCommand(parsedArguments);","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":"        case COMMAND_ADD:","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"            return new AddCommand(parsedArguments);","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"gerardtwk"},"content":"        case COMMAND_RETURN:","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"            return new ReturnCommand(parsedArguments, recordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"        case COMMAND_REMOVE:","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"LeeHanYongAndy"},"content":"            return new RemoveCommand(parsedArguments, recordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"marklowsk"},"content":"        case COMMAND_VIEW:","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"            return new ViewCommand(parsedArguments);","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"        case COMMAND_HELP:","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"marklowsk"},"content":"            return new HelpCommand(parsedArguments);","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"marklowsk"},"content":"        case COMMAND_EXIT:","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"marklowsk"},"content":"            return new ExitCommand(parsedArguments);","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"tzexern"},"content":"        case COMMAND_CREDIT_SCORE:","lastModifiedDate":"2021-03-19"},{"lineNumber":44,"author":{"gitId":"tzexern"},"content":"            return new CreditScoreCommand(parsedArguments);","lastModifiedDate":"2021-03-19"},{"lineNumber":45,"author":{"gitId":"marklowsk"},"content":"        case \"\":","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"marklowsk"},"content":"            return null;","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"jonahtwl"},"content":"        default:","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(ERROR_INVALID_COMMAND + commandWord);","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"jonahtwl"},"content":"    public static Command parseCommand(ArrayList\u003cString\u003e parsedString, RecordList records) {","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"jonahtwl"},"content":"        try {","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"gerardtwk"},"content":"            Command command \u003d CommandHandler.createCommand(parsedString, records);","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"gerardtwk"},"content":"            LOGGER.log(Level.INFO, \"command object successfully created.\");","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"gerardtwk"},"content":"            return command;","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"jonahtwl"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"jonahtwl"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"gerardtwk"},"content":"            LOGGER.log(Level.WARNING, e.getMessage());","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"jonahtwl"},"content":"            return null;","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"tzexern":4,"jonahtwl":19,"LeeHanYongAndy":7,"marklowsk":24,"gerardtwk":9}},{"path":"src/main/java/seedu/duke/command/CreditScoreCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.ArgumentType;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"tzexern"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.getValue;","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateArguments;","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"/**","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":" * Handles all operations related to the credit score command.","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":" */","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"public class CreditScoreCommand extends Command {","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"    private static final ArgumentType[] ARGUMENT_TYPE_ORDER \u003d {","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.COMMAND,","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.VALUE","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"    };","lastModifiedDate":"2021-03-19"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":"    protected static final String COMMAND_CREDIT_SCORE \u003d \"creditscore\";","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"    private final String borrower;","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"     * Constructor to validate the format for credit score command.","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"     * @param arguments parsed input containing arguments.","lastModifiedDate":"2021-03-19"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"tzexern"},"content":"    public CreditScoreCommand(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"        borrower \u003d getValue(arguments, COMMAND_CREDIT_SCORE);","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"        validateArguments(arguments, ARGUMENT_TYPE_ORDER, COMMAND_CREDIT_SCORE);","lastModifiedDate":"2021-03-19"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"    private long getDayDifference(LocalDate issueDate, LocalDate returnDate) {","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":"        LocalDate from \u003d issueDate;","lastModifiedDate":"2021-03-19"},{"lineNumber":40,"author":{"gitId":"tzexern"},"content":"        LocalDate to;","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"tzexern"},"content":"        if (returnDate \u003d\u003d null) {","lastModifiedDate":"2021-03-19"},{"lineNumber":42,"author":{"gitId":"tzexern"},"content":"            to \u003d LocalDate.now();","lastModifiedDate":"2021-03-19"},{"lineNumber":43,"author":{"gitId":"tzexern"},"content":"        } else {","lastModifiedDate":"2021-03-19"},{"lineNumber":44,"author":{"gitId":"tzexern"},"content":"            assert returnDate !\u003d null : \"returnDate should not be empty\";","lastModifiedDate":"2021-03-19"},{"lineNumber":45,"author":{"gitId":"tzexern"},"content":"            to \u003d returnDate;","lastModifiedDate":"2021-03-19"},{"lineNumber":46,"author":{"gitId":"tzexern"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":47,"author":{"gitId":"tzexern"},"content":"        long dayDifference \u003d ChronoUnit.DAYS.between(from, to);","lastModifiedDate":"2021-03-19"},{"lineNumber":48,"author":{"gitId":"tzexern"},"content":"        return dayDifference;","lastModifiedDate":"2021-03-19"},{"lineNumber":49,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"tzexern"},"content":"    private int getCreditScore(int days, int score) {","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"tzexern"},"content":"        return 0;","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"tzexern"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"tzexern"},"content":"    public void execute(RecordList recordList, Ui ui, Storage storage) {","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":58,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"tzexern"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"tzexern":47,"marklowsk":12}},{"path":"src/main/java/seedu/duke/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.ArgumentType;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateArguments;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"LeeHanYongAndy"},"content":" * Handles all operations related to the exit command.","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"    private static final ArgumentType[] ARGUMENT_TYPE_ORDER \u003d { ArgumentType.COMMAND };","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"    protected static final String COMMAND_EXIT \u003d \"exit\";","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"    private static final String MESSAGE_EXITING \u003d \"You are exiting FINUX now...\";","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Constructor to validate the format for exit command.","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"    public ExitCommand(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"        validateArguments(arguments, ARGUMENT_TYPE_ORDER, COMMAND_EXIT);","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"     * Executes the exit function.","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param ui      is the Ui object that interacts with the user.","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param storage is the Storage object that reads and writes to the save file.","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void execute(RecordList recordList, Ui ui, Storage storage) {","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(MESSAGE_EXITING);","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Check if command is a instance of ExitCommand type.","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param command is the Command object containing the type of command.","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return true if command is exit command type, false if command is not exit command type.","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"jonahtwl"},"content":"    public static boolean isExit(Command command) {","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"jonahtwl"},"content":"        return command instanceof ExitCommand;","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"jonahtwl"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"jonahtwl":21,"marklowsk":12,"LeeHanYongAndy":17}},{"path":"src/main/java/seedu/duke/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.ArgumentType;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":"import seedu.duke.ui.HelpPage;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateArguments;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"import static seedu.duke.command.Utils.validateHelpType;","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":" * Handles all operations related to the help command.","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final ArgumentType[] ARGUMENT_TYPE_ORDER \u003d {","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArgumentType.COMMAND,","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArgumentType.VALUE","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"    };","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"    protected static final String COMMAND_HELP \u003d \"help\";","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static String HELP_TYPE;","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Constructor to validate the format for help command.","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"    public HelpCommand(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":"        validateArguments(arguments, ARGUMENT_TYPE_ORDER, COMMAND_HELP);","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"        HELP_TYPE \u003d validateHelpType(arguments, COMMAND_HELP);","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Executes the help function.","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param ui      is the Ui object that interacts with the user.","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param storage is the Storage object that reads and writes to the save file.","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"marklowsk"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void execute(RecordList recordList, Ui ui, Storage storage) {","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"        HelpPage.printHelp(HELP_TYPE);","lastModifiedDate":"2021-03-19"},{"lineNumber":47,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"jonahtwl":1,"marklowsk":21,"LeeHanYongAndy":26}},{"path":"src/main/java/seedu/duke/command/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.ArgumentType;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.RecordType;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.hasOption;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateArguments;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateOptions;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_EXPENSE;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_LOAN;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_SAVING;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":" * Handles all operations related to the list command.","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"    private static final String[] VALID_OPTIONS \u003d {OPTION_EXPENSE, OPTION_LOAN, OPTION_SAVING};","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"    private static final ArgumentType[] ARGUMENT_TYPE_ORDER \u003d {","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.COMMAND,","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.OPTION,","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.EMPTY_VALUE","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"    };","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"    protected static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":"    private RecordType recordType;","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Constructor to validate the format for list command.","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"    public ListCommand(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"        validateOptions(arguments, COMMAND_LIST, VALID_OPTIONS, VALID_OPTIONS);","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"        checkRecordType(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"LeeHanYongAndy"},"content":"        validateArguments(arguments, ARGUMENT_TYPE_ORDER, COMMAND_LIST);","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Check if the input contains the correct record type and options.","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing the options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"LeeHanYongAndy"},"content":"    private void checkRecordType(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"marklowsk"},"content":"        if (hasOption(arguments, OPTION_EXPENSE)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"marklowsk"},"content":"            recordType \u003d RecordType.EXPENSE;","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"marklowsk"},"content":"        } else if (hasOption(arguments, OPTION_LOAN)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"marklowsk"},"content":"            recordType \u003d RecordType.LOAN;","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"marklowsk"},"content":"        } else if (hasOption(arguments, OPTION_SAVING)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"marklowsk"},"content":"            recordType \u003d RecordType.SAVING;","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"marklowsk"},"content":"        } else {","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(\"missing option: [-e | -l | -s]\", COMMAND_LIST);","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Executes the list function.","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"LeeHanYongAndy"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param ui      is the Ui object that interacts with the user.","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param storage is the Storage object that reads and writes to the save file.","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"marklowsk"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"gerardtwk"},"content":"    public void execute(RecordList recordList, Ui ui, Storage storage) {","lastModifiedDate":"2021-03-11"},{"lineNumber":70,"author":{"gitId":"gerardtwk"},"content":"        assert recordList !\u003d null : \"recordList should not be null\";","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"gerardtwk"},"content":"        assert ui !\u003d null : \"ui should not be null\";","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"gerardtwk"},"content":"        assert storage !\u003d null : \"storage should not be null\";","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"marklowsk"},"content":"        switch (recordType) {","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"marklowsk"},"content":"        case EXPENSE:","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printExpenses(recordList);","lastModifiedDate":"2021-03-11"},{"lineNumber":77,"author":{"gitId":"marklowsk"},"content":"            break;","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"marklowsk"},"content":"        case LOAN:","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printLoans(recordList);","lastModifiedDate":"2021-03-11"},{"lineNumber":80,"author":{"gitId":"marklowsk"},"content":"            break;","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"marklowsk"},"content":"        case SAVING:","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"marklowsk"},"content":"            // Fallthrough","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"marklowsk"},"content":"        default:","lastModifiedDate":"2021-03-09"},{"lineNumber":84,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printSavings(recordList);","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":86,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":87,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"jonahtwl":1,"marklowsk":54,"LeeHanYongAndy":27,"gerardtwk":5}},{"path":"src/main/java/seedu/duke/command/RemoveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.ArgumentType;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":"import seedu.duke.record.Record;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.checkInvalidOptions;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.checkOptionConflict;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.getOptionValue;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.hasOption;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateArguments;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateOptions;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_EXPENSE;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_INDEX;","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_LOAN;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_SAVING;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":"import static seedu.duke.common.Validators.validateIndex;","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":" * Handles all operations related to the remove command.","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"public class RemoveCommand extends Command {","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"    private static final String[] VALID_OPTIONS \u003d {OPTION_INDEX};","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"    private static final ArgumentType[] ARGUMENT_TYPE_ORDER \u003d {","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.COMMAND,","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.OPTION,","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.VALUE","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":"    };","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"    protected static final String COMMAND_REMOVE \u003d \"remove\";","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"    private String recordNumberStr;","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"    private int recordNumberInt;","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Constructor to validate the format for remove command.","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"LeeHanYongAndy"},"content":"    public RemoveCommand(ArrayList\u003cString\u003e arguments, RecordList recordList) throws CommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"marklowsk"},"content":"        validateOptions(arguments, COMMAND_REMOVE, VALID_OPTIONS, VALID_OPTIONS);","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"        recordNumberStr \u003d getIndexInString(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"LeeHanYongAndy"},"content":"        recordNumberInt \u003d getIndexInInteger(arguments, recordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"marklowsk"},"content":"        validateArguments(arguments, ARGUMENT_TYPE_ORDER, COMMAND_REMOVE);","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Get the index field in String.","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a String containing the index of the record.","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"LeeHanYongAndy"},"content":"    private String getIndexInString(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"marklowsk"},"content":"        if (hasOption(arguments, OPTION_INDEX)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"LeeHanYongAndy"},"content":"            return getOptionValue(arguments, COMMAND_REMOVE, OPTION_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"marklowsk"},"content":"        } else {","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(\"missing option: -i\", COMMAND_REMOVE);","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Get the index field in Integer.","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a Integer containing the index of the record.","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"LeeHanYongAndy"},"content":"    private int getIndexInInteger(ArrayList\u003cString\u003e arguments, RecordList recordList) throws CommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"tzexern"},"content":"        try {","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"LeeHanYongAndy"},"content":"            return validateIndex(getOptionValue(arguments, COMMAND_REMOVE, OPTION_INDEX), recordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"tzexern"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"tzexern"},"content":"            throw new CommandException(\"Index \\\"\" + recordNumberStr + \"\\\" is not an integer!\", COMMAND_REMOVE);","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"tzexern"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"tzexern"},"content":"            throw new CommandException(\"Index \\\"\" + recordNumberStr + \"\\\" is out of bounds!\", COMMAND_REMOVE);","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"tzexern"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":83,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":84,"author":{"gitId":"tzexern"},"content":"     * Executes the delete function.","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"tzexern"},"content":"     * Prints a message containing the record that will be removed.","lastModifiedDate":"2021-03-11"},{"lineNumber":86,"author":{"gitId":"tzexern"},"content":"     * Removes the record at the specified index.","lastModifiedDate":"2021-03-11"},{"lineNumber":87,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":88,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"tzexern"},"content":"     * @param ui      is the Ui object that interacts with the user.","lastModifiedDate":"2021-03-11"},{"lineNumber":90,"author":{"gitId":"tzexern"},"content":"     * @param storage is the Storage object that reads and writes to the save file.","lastModifiedDate":"2021-03-11"},{"lineNumber":91,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":92,"author":{"gitId":"marklowsk"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":93,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void execute(RecordList recordList, Ui ui, Storage storage) {","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"LeeHanYongAndy"},"content":"        Record currentRecord \u003d recordList.getRecordAt(recordNumberInt);","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"tzexern"},"content":"        ui.printMessage(\"This record will be removed: \" + currentRecord);","lastModifiedDate":"2021-03-12"},{"lineNumber":96,"author":{"gitId":"LeeHanYongAndy"},"content":"        recordList.deleteRecordAt(recordNumberInt);","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"LeeHanYongAndy"},"content":"        storage.saveRecordListData(recordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":99,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"tzexern":20,"jonahtwl":1,"marklowsk":42,"LeeHanYongAndy":36}},{"path":"src/main/java/seedu/duke/command/ReturnCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.common.ArgumentType;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Loan;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Record;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.command.Utils.checkInvalidOptions;","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.command.Utils.checkOptionConflict;","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.command.Utils.getOptionValue;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.command.Utils.hasOption;","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.command.Utils.validateArguments;","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateOptions;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.common.Constant.OPTION_INDEX;","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"import static seedu.duke.common.Validators.validateIndex;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":" * Handles all operations related to the return command.","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"gerardtwk"},"content":"public class ReturnCommand extends Command {","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"    private static final String[] VALID_OPTIONS \u003d {OPTION_INDEX};","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"    private static final ArgumentType[] ARGUMENT_TYPE_ORDER \u003d {","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"gerardtwk"},"content":"        ArgumentType.COMMAND,","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"gerardtwk"},"content":"        ArgumentType.OPTION,","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"gerardtwk"},"content":"        ArgumentType.VALUE","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"gerardtwk"},"content":"    };","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"gerardtwk"},"content":"    protected static final String COMMAND_RETURN \u003d \"return\";","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"tzexern"},"content":"    private String recordNumberStr;","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"    private int recordNumberInt;","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Constructor to validate the format for return command.","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"    public ReturnCommand(ArrayList\u003cString\u003e arguments, RecordList recordList) throws CommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"marklowsk"},"content":"        validateOptions(arguments, COMMAND_RETURN, VALID_OPTIONS, VALID_OPTIONS);","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"LeeHanYongAndy"},"content":"        recordNumberStr \u003d getIndexInString(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"        recordNumberInt \u003d getIndexInInteger(arguments, recordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"marklowsk"},"content":"        validateArguments(arguments, ARGUMENT_TYPE_ORDER, COMMAND_RETURN);","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Get the index field in String.","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a String containing the index of the record.","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"LeeHanYongAndy"},"content":"    private String getIndexInString(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"gerardtwk"},"content":"        if (hasOption(arguments, OPTION_INDEX)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"LeeHanYongAndy"},"content":"            return getOptionValue(arguments, COMMAND_RETURN, OPTION_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"gerardtwk"},"content":"        } else {","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"gerardtwk"},"content":"            throw new CommandException(\"missing option: -i\", COMMAND_RETURN);","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Get the index field in Integer.","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a Integer containing the index of the record.","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"LeeHanYongAndy"},"content":"    private int getIndexInInteger(ArrayList\u003cString\u003e arguments, RecordList recordList) throws CommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"tzexern"},"content":"        try {","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"LeeHanYongAndy"},"content":"            return validateIndex(getOptionValue(arguments, COMMAND_RETURN, OPTION_INDEX), recordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"tzexern"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"tzexern"},"content":"            throw new CommandException(\"Index \\\"\" + recordNumberStr + \"\\\" is not an integer!\", COMMAND_RETURN);","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"tzexern"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"tzexern"},"content":"            throw new CommandException(\"Index \\\"\" + recordNumberStr + \"\\\" is out of bounds!\", COMMAND_RETURN);","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"tzexern"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":80,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":81,"author":{"gitId":"gerardtwk"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":82,"author":{"gitId":"gerardtwk"},"content":"     * Executes the return function.","lastModifiedDate":"2021-03-11"},{"lineNumber":83,"author":{"gitId":"gerardtwk"},"content":"     * Prints a message containing the loan that will be marked as returned.","lastModifiedDate":"2021-03-11"},{"lineNumber":84,"author":{"gitId":"gerardtwk"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"gerardtwk"},"content":"     * @param ui      is the Ui object that interacts with the user.","lastModifiedDate":"2021-03-11"},{"lineNumber":87,"author":{"gitId":"gerardtwk"},"content":"     * @param storage is the Storage object that reads and writes to the save file.","lastModifiedDate":"2021-03-11"},{"lineNumber":88,"author":{"gitId":"gerardtwk"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":89,"author":{"gitId":"gerardtwk"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":90,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void execute(RecordList recordList, Ui ui, Storage storage) {","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"LeeHanYongAndy"},"content":"        Record currentRecord \u003d recordList.getRecordAt(recordNumberInt);","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"gerardtwk"},"content":"        if (currentRecord instanceof Loan) {","lastModifiedDate":"2021-03-11"},{"lineNumber":93,"author":{"gitId":"gerardtwk"},"content":"            Loan currentLoan \u003d (Loan) currentRecord;","lastModifiedDate":"2021-03-11"},{"lineNumber":94,"author":{"gitId":"gerardtwk"},"content":"            currentLoan.markAsReturned();","lastModifiedDate":"2021-03-11"},{"lineNumber":95,"author":{"gitId":"gerardtwk"},"content":"            ui.printMessage(\"Loan marked as returned: \" + currentLoan);","lastModifiedDate":"2021-03-11"},{"lineNumber":96,"author":{"gitId":"LeeHanYongAndy"},"content":"            storage.saveRecordListData(recordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"gerardtwk"},"content":"        } else {","lastModifiedDate":"2021-03-11"},{"lineNumber":98,"author":{"gitId":"gerardtwk"},"content":"            ui.printMessage(\"Specified record number is not a loan!\");","lastModifiedDate":"2021-03-11"},{"lineNumber":99,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":100,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":101,"author":{"gitId":"gerardtwk"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"tzexern":10,"marklowsk":5,"LeeHanYongAndy":35,"gerardtwk":51}},{"path":"src/main/java/seedu/duke/command/Utils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"import org.apache.commons.lang3.StringUtils;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.ArgumentType;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"import org.apache.commons.lang3.ArrayUtils;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":" * Provides common validation methods for {@code Command} validation.","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"public class Utils {","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_MISSING_OPTION \u003d \"missing option: \";","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_INVALID_OPTION \u003d \"invalid option: \";","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_MISSING_OPTION_VALUE \u003d \"value of option %s is missing.\";","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_MISSING_ARGUMENT_VALUE \u003d \"missing argument value.\";","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_MISSING_VALUE \u003d \"missing value after command.\";","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_DUPLICATE_OPTION \u003d \"duplicate option: \";","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_CONFLICT_OPTION \u003d \"conflict with options: \";","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_TOO_MANY_ARGUMENTS \u003d \"too many arguments.\";","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_TOO_FEW_ARGUMENTS \u003d \"not enough arguments.\";","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_INVALID_ORDER \u003d \"invalid command order, \";","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_INVALID_INPUT \u003d \"invalid input: \";","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"    private static final String REGEX_OPTION \u003d \"^-[a-zA-Z]$\";","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String ERROR_WRONG_HELP_TYPE \u003d \"invalid help type: \";","lastModifiedDate":"2021-03-19"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":"    private static final int VALUE_INDEX \u003d 1;","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"     * Checks {@code value} to see if it is not {@code null} and not empty.","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"marklowsk"},"content":"     * @param value        the String to check.","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"marklowsk"},"content":"     * @param errorMessage the exception message to print.","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"     * @throws CommandException if {@code value} is {@code null} or empty.","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"marklowsk"},"content":"    private static void validateNotEmpty(String value, String errorMessage) throws CommandException {","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"marklowsk"},"content":"        if (value \u003d\u003d null || value.length() \u003d\u003d 0) {","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(errorMessage);","lastModifiedDate":"2021-03-19"},{"lineNumber":43,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"marklowsk"},"content":"     * Checks {@code value} to see if it is not {@code null} and not empty,","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"marklowsk"},"content":"     * and returns it if {@code true}.","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"marklowsk"},"content":"     * @param value   the {@code String} to check.","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"marklowsk"},"content":"     * @param command the name of the {@code Command} calling it.","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"marklowsk"},"content":"     * @param option  the name of the {@code option} pertaining to the {@code value}.","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"marklowsk"},"content":"     * @return the {@code value} if not empty","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"marklowsk"},"content":"     * @throws CommandException if {@code value} is null or empty.","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"marklowsk"},"content":"    private static String validateNotEmpty(String value, String command, String option)","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"marklowsk"},"content":"            throws CommandException {","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"marklowsk"},"content":"        if (value !\u003d null \u0026\u0026 value.length() \u003e 0) {","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"marklowsk"},"content":"            return value;","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"marklowsk"},"content":"        String errorMessage \u003d String.format(ERROR_MISSING_OPTION_VALUE, option);","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"marklowsk"},"content":"        throw new CommandException(errorMessage, command);","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"marklowsk"},"content":"     * Extracts the {@code option}\u0027s {@code value} from {@code arguments} {@code ArrayList}.\u003cbr\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"marklowsk"},"content":"     * Example: {@code [\"return\", \"-i\", \"2\"], option \u003d \"-i\", value \u003d \"2\"}.\u003cbr\u003e","lastModifiedDate":"2021-03-19"},{"lineNumber":68,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"marklowsk"},"content":"     * @param arguments an {@code ArrayList} containing {@code Command} arguments.","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"marklowsk"},"content":"     * @param command   the name of the {@code Command} calling it.","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"marklowsk"},"content":"     * @param option    the name of the {@code option} pertaining to the {@code value}.","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"marklowsk"},"content":"     * @return the {@code option}\u0027s {@code value}","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"marklowsk"},"content":"     * @throws CommandException if {@code option} does not exist, or {@code value} is missing or empty.","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"marklowsk"},"content":"     * @see #validateNotEmpty(String, String, String)","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"marklowsk"},"content":"    public static String getOptionValue(ArrayList\u003cString\u003e arguments, String command,","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"marklowsk"},"content":"                                        String option) throws CommandException {","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"marklowsk"},"content":"        if (!hasOption(arguments, option)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(ERROR_MISSING_OPTION + option, command);","lastModifiedDate":"2021-03-09"},{"lineNumber":80,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"marklowsk"},"content":"        int index \u003d arguments.indexOf(option);","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"marklowsk"},"content":"        if (index \u003c arguments.size() - 1) {","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"marklowsk"},"content":"            String value \u003d arguments.get(index + 1);","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"marklowsk"},"content":"            return validateNotEmpty(value, command, option);","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":86,"author":{"gitId":"marklowsk"},"content":"        // Below return results in an ERROR_MISSING_OPTION_VALUE exception thrown.","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"marklowsk"},"content":"        return validateNotEmpty(\"\", command, option);","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":89,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":90,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":91,"author":{"gitId":"marklowsk"},"content":"     * Gets the value of the second argument from {@code arguments}.","lastModifiedDate":"2021-03-19"},{"lineNumber":92,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":93,"author":{"gitId":"marklowsk"},"content":"     * @param arguments an {@code ArrayList} containing {@code Command} arguments.","lastModifiedDate":"2021-03-19"},{"lineNumber":94,"author":{"gitId":"marklowsk"},"content":"     * @param command   the name of the {@code Command} calling it.","lastModifiedDate":"2021-03-19"},{"lineNumber":95,"author":{"gitId":"marklowsk"},"content":"     * @return the non-empty value.","lastModifiedDate":"2021-03-19"},{"lineNumber":96,"author":{"gitId":"marklowsk"},"content":"     * @throws CommandException if value is missing or empty.","lastModifiedDate":"2021-03-19"},{"lineNumber":97,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":98,"author":{"gitId":"marklowsk"},"content":"    public static String getValue(ArrayList\u003cString\u003e arguments, String command)","lastModifiedDate":"2021-03-19"},{"lineNumber":99,"author":{"gitId":"marklowsk"},"content":"            throws CommandException {","lastModifiedDate":"2021-03-19"},{"lineNumber":100,"author":{"gitId":"marklowsk"},"content":"        assert arguments !\u003d null : \"arguments is null!\";","lastModifiedDate":"2021-03-19"},{"lineNumber":101,"author":{"gitId":"marklowsk"},"content":"        boolean isValuable \u003d (arguments.size() \u003e VALUE_INDEX)","lastModifiedDate":"2021-03-19"},{"lineNumber":102,"author":{"gitId":"marklowsk"},"content":"                \u0026\u0026 (arguments.get(VALUE_INDEX).length() !\u003d 0);","lastModifiedDate":"2021-03-19"},{"lineNumber":103,"author":{"gitId":"marklowsk"},"content":"        if (isValuable) {","lastModifiedDate":"2021-03-19"},{"lineNumber":104,"author":{"gitId":"marklowsk"},"content":"            return arguments.get(VALUE_INDEX);","lastModifiedDate":"2021-03-19"},{"lineNumber":105,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":106,"author":{"gitId":"marklowsk"},"content":"        throw new CommandException(ERROR_MISSING_VALUE, command);","lastModifiedDate":"2021-03-19"},{"lineNumber":107,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":108,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":109,"author":{"gitId":"marklowsk"},"content":"    // This hasOption method is only meant to improve readability.","lastModifiedDate":"2021-03-13"},{"lineNumber":110,"author":{"gitId":"marklowsk"},"content":"    public static boolean hasOption(ArrayList\u003cString\u003e arguments, String option) {","lastModifiedDate":"2021-03-09"},{"lineNumber":111,"author":{"gitId":"marklowsk"},"content":"        assert arguments !\u003d null : \"arguments is null!\";","lastModifiedDate":"2021-03-18"},{"lineNumber":112,"author":{"gitId":"marklowsk"},"content":"        return arguments.contains(option);","lastModifiedDate":"2021-03-09"},{"lineNumber":113,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":114,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":115,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":116,"author":{"gitId":"marklowsk"},"content":"     * Checks {@code arguments} for invalid, duplicate and conflict options.","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":118,"author":{"gitId":"marklowsk"},"content":"     * @param arguments    an {@code ArrayList} containing {@code Command} arguments.","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"marklowsk"},"content":"     * @param command      the name of the {@code Command} calling it.","lastModifiedDate":"2021-03-13"},{"lineNumber":120,"author":{"gitId":"marklowsk"},"content":"     * @param validOptions a {@code String} array containing valid options pertaining to {@code command}.","lastModifiedDate":"2021-03-13"},{"lineNumber":121,"author":{"gitId":"marklowsk"},"content":"     * @param orOptions    a {@code String} array containing conflict options pertaining to {@code command}.","lastModifiedDate":"2021-03-13"},{"lineNumber":122,"author":{"gitId":"marklowsk"},"content":"     * @throws CommandException if {@code arguments} contains invalid/duplicate options and conflict options.","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"marklowsk"},"content":"     * @see #checkInvalidOptions(ArrayList, String, String...)","lastModifiedDate":"2021-03-13"},{"lineNumber":124,"author":{"gitId":"marklowsk"},"content":"     * @see #checkOptionConflict(ArrayList, String, String...)","lastModifiedDate":"2021-03-13"},{"lineNumber":125,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":126,"author":{"gitId":"marklowsk"},"content":"    public static void validateOptions(ArrayList\u003cString\u003e arguments, String command,","lastModifiedDate":"2021-03-13"},{"lineNumber":127,"author":{"gitId":"marklowsk"},"content":"                                       String[] validOptions, String[] orOptions) throws CommandException {","lastModifiedDate":"2021-03-13"},{"lineNumber":128,"author":{"gitId":"marklowsk"},"content":"        assert arguments !\u003d null : \"arguments is null!\";","lastModifiedDate":"2021-03-18"},{"lineNumber":129,"author":{"gitId":"marklowsk"},"content":"        checkInvalidOptions(arguments, command, validOptions);","lastModifiedDate":"2021-03-13"},{"lineNumber":130,"author":{"gitId":"marklowsk"},"content":"        checkOptionConflict(arguments, command, orOptions);","lastModifiedDate":"2021-03-13"},{"lineNumber":131,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":132,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":133,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":134,"author":{"gitId":"marklowsk"},"content":"     * Checks {@code arguments} for invalid/duplicate options.","lastModifiedDate":"2021-03-14"},{"lineNumber":135,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":136,"author":{"gitId":"marklowsk"},"content":"     * @param arguments    an {@code ArrayList} containing {@code Command} arguments.","lastModifiedDate":"2021-03-13"},{"lineNumber":137,"author":{"gitId":"marklowsk"},"content":"     * @param command      the name of the {@code Command} calling it.","lastModifiedDate":"2021-03-13"},{"lineNumber":138,"author":{"gitId":"marklowsk"},"content":"     * @param validOptions valid options pertaining to {@code command}.","lastModifiedDate":"2021-03-13"},{"lineNumber":139,"author":{"gitId":"marklowsk"},"content":"     * @throws CommandException if {@code arguments} contains an invalid or a duplicate option.","lastModifiedDate":"2021-03-14"},{"lineNumber":140,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":141,"author":{"gitId":"marklowsk"},"content":"    public static void checkInvalidOptions(ArrayList\u003cString\u003e arguments, String command,","lastModifiedDate":"2021-03-09"},{"lineNumber":142,"author":{"gitId":"marklowsk"},"content":"                                           String... validOptions) throws CommandException {","lastModifiedDate":"2021-03-09"},{"lineNumber":143,"author":{"gitId":"marklowsk"},"content":"        Set\u003cString\u003e nonDuplicates \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-09"},{"lineNumber":144,"author":{"gitId":"marklowsk"},"content":"        for (String arg : arguments) {","lastModifiedDate":"2021-03-09"},{"lineNumber":145,"author":{"gitId":"marklowsk"},"content":"            if (!isOption(arg)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":146,"author":{"gitId":"marklowsk"},"content":"                continue;","lastModifiedDate":"2021-03-09"},{"lineNumber":147,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":148,"author":{"gitId":"marklowsk"},"content":"            if (!ArrayUtils.contains(validOptions, arg)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":149,"author":{"gitId":"marklowsk"},"content":"                throw new CommandException(ERROR_INVALID_OPTION + arg, command);","lastModifiedDate":"2021-03-09"},{"lineNumber":150,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":151,"author":{"gitId":"marklowsk"},"content":"            if (!nonDuplicates.add(arg)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":152,"author":{"gitId":"marklowsk"},"content":"                throw new CommandException(ERROR_DUPLICATE_OPTION + arg, command);","lastModifiedDate":"2021-03-09"},{"lineNumber":153,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":154,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":155,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":156,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":157,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":158,"author":{"gitId":"marklowsk"},"content":"     * Checks {@code arguments} for conflict options.","lastModifiedDate":"2021-03-13"},{"lineNumber":159,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":160,"author":{"gitId":"marklowsk"},"content":"     * @param arguments an {@code ArrayList} containing {@code Command} arguments.","lastModifiedDate":"2021-03-13"},{"lineNumber":161,"author":{"gitId":"marklowsk"},"content":"     * @param command   the name of the {@code Command} calling it.","lastModifiedDate":"2021-03-13"},{"lineNumber":162,"author":{"gitId":"marklowsk"},"content":"     * @param orOptions conflict options pertaining to {@code command}.","lastModifiedDate":"2021-03-13"},{"lineNumber":163,"author":{"gitId":"marklowsk"},"content":"     * @throws CommandException if {@code arguments} contains a conflict option.","lastModifiedDate":"2021-03-13"},{"lineNumber":164,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":165,"author":{"gitId":"marklowsk"},"content":"    public static void checkOptionConflict(ArrayList\u003cString\u003e arguments, String command,","lastModifiedDate":"2021-03-09"},{"lineNumber":166,"author":{"gitId":"marklowsk"},"content":"                                           String... orOptions) throws CommandException {","lastModifiedDate":"2021-03-09"},{"lineNumber":167,"author":{"gitId":"marklowsk"},"content":"        String option \u003d null;","lastModifiedDate":"2021-03-09"},{"lineNumber":168,"author":{"gitId":"marklowsk"},"content":"        for (String arg : arguments) {","lastModifiedDate":"2021-03-09"},{"lineNumber":169,"author":{"gitId":"marklowsk"},"content":"            if (!isOption(arg)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":170,"author":{"gitId":"marklowsk"},"content":"                continue;","lastModifiedDate":"2021-03-09"},{"lineNumber":171,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":172,"author":{"gitId":"marklowsk"},"content":"            if (!ArrayUtils.contains(orOptions, arg)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":173,"author":{"gitId":"marklowsk"},"content":"                continue;","lastModifiedDate":"2021-03-09"},{"lineNumber":174,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":175,"author":{"gitId":"marklowsk"},"content":"            if (option \u003d\u003d null) {","lastModifiedDate":"2021-03-09"},{"lineNumber":176,"author":{"gitId":"marklowsk"},"content":"                option \u003d arg;","lastModifiedDate":"2021-03-09"},{"lineNumber":177,"author":{"gitId":"marklowsk"},"content":"            } else {","lastModifiedDate":"2021-03-09"},{"lineNumber":178,"author":{"gitId":"marklowsk"},"content":"                throw new CommandException(ERROR_CONFLICT_OPTION + option + \", \" + arg, command);","lastModifiedDate":"2021-03-09"},{"lineNumber":179,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":180,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":181,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":182,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":183,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":184,"author":{"gitId":"marklowsk"},"content":"     * Checks the {@code Command}\u0027s {@code arguments} ordering based on the {@code argumentTypeOrder}.\u003cbr\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":185,"author":{"gitId":"marklowsk"},"content":"     * Recommended for {@code Command}s with strict argument order.\u003cbr\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":186,"author":{"gitId":"marklowsk"},"content":"     * This method should be used only when:\u003cbr\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":187,"author":{"gitId":"marklowsk"},"content":"     * \u003cul\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":188,"author":{"gitId":"marklowsk"},"content":"     *     \u003cli\u003e{@link #validateOptions(ArrayList, String, String[], String[])} has been called, or\u003c/li\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":189,"author":{"gitId":"marklowsk"},"content":"     *     \u003cli\u003e{@code Command} does not require option validation.\u003c/li\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":190,"author":{"gitId":"marklowsk"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":191,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":192,"author":{"gitId":"marklowsk"},"content":"     * @param arguments         an {@code ArrayList} containing {@code Command} arguments.","lastModifiedDate":"2021-03-13"},{"lineNumber":193,"author":{"gitId":"marklowsk"},"content":"     * @param argumentTypeOrder an Enumeration array of type {@code ArgumentType} containing the argument","lastModifiedDate":"2021-03-13"},{"lineNumber":194,"author":{"gitId":"marklowsk"},"content":"     *                          type order.","lastModifiedDate":"2021-03-13"},{"lineNumber":195,"author":{"gitId":"marklowsk"},"content":"     * @param command           the name of the {@code Command} calling it.","lastModifiedDate":"2021-03-13"},{"lineNumber":196,"author":{"gitId":"marklowsk"},"content":"     * @throws CommandException if there is a violation to the argument type order.","lastModifiedDate":"2021-03-13"},{"lineNumber":197,"author":{"gitId":"marklowsk"},"content":"     * @see ArgumentType","lastModifiedDate":"2021-03-13"},{"lineNumber":198,"author":{"gitId":"marklowsk"},"content":"     * @see #validateArgument(String, ArgumentType, String)","lastModifiedDate":"2021-03-13"},{"lineNumber":199,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":200,"author":{"gitId":"marklowsk"},"content":"    public static void validateArguments(ArrayList\u003cString\u003e arguments, ArgumentType[] argumentTypeOrder,","lastModifiedDate":"2021-03-10"},{"lineNumber":201,"author":{"gitId":"marklowsk"},"content":"                                         String command) throws CommandException {","lastModifiedDate":"2021-03-10"},{"lineNumber":202,"author":{"gitId":"marklowsk"},"content":"        assert arguments !\u003d null : \"arguments is null!\";","lastModifiedDate":"2021-03-18"},{"lineNumber":203,"author":{"gitId":"marklowsk"},"content":"        assert argumentTypeOrder !\u003d null : \"argumentTypeOrder is null!\";","lastModifiedDate":"2021-03-18"},{"lineNumber":204,"author":{"gitId":"marklowsk"},"content":"        if (arguments.size() \u003e argumentTypeOrder.length) {","lastModifiedDate":"2021-03-10"},{"lineNumber":205,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(ERROR_TOO_MANY_ARGUMENTS, command);","lastModifiedDate":"2021-03-10"},{"lineNumber":206,"author":{"gitId":"marklowsk"},"content":"        } else if (arguments.size() \u003c argumentTypeOrder.length) {","lastModifiedDate":"2021-03-10"},{"lineNumber":207,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(ERROR_TOO_FEW_ARGUMENTS, command);","lastModifiedDate":"2021-03-10"},{"lineNumber":208,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":209,"author":{"gitId":"marklowsk"},"content":"        for (int i \u003d 0; i \u003c arguments.size(); i++) {","lastModifiedDate":"2021-03-10"},{"lineNumber":210,"author":{"gitId":"marklowsk"},"content":"            validateArgument(arguments.get(i), argumentTypeOrder[i], command);","lastModifiedDate":"2021-03-10"},{"lineNumber":211,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":212,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":213,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":214,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":215,"author":{"gitId":"marklowsk"},"content":"     * Checks {@code argument}\u0027s type matches {@code argumentType}.","lastModifiedDate":"2021-03-13"},{"lineNumber":216,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":217,"author":{"gitId":"marklowsk"},"content":"     * @param argument     a portion of the {@code Command}\u0027s arguments.","lastModifiedDate":"2021-03-13"},{"lineNumber":218,"author":{"gitId":"marklowsk"},"content":"     * @param argumentType an Enumeration of ArgumentType to match with.","lastModifiedDate":"2021-03-13"},{"lineNumber":219,"author":{"gitId":"marklowsk"},"content":"     * @param command      the name of the {@code Command} calling it.","lastModifiedDate":"2021-03-13"},{"lineNumber":220,"author":{"gitId":"marklowsk"},"content":"     * @throws CommandException if {@code argument}\u0027s type does not match {@code argumentType}.","lastModifiedDate":"2021-03-13"},{"lineNumber":221,"author":{"gitId":"marklowsk"},"content":"     * @see ArgumentType","lastModifiedDate":"2021-03-13"},{"lineNumber":222,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":223,"author":{"gitId":"marklowsk"},"content":"    private static void validateArgument(String argument, ArgumentType argumentType, String command)","lastModifiedDate":"2021-03-10"},{"lineNumber":224,"author":{"gitId":"marklowsk"},"content":"            throws CommandException {","lastModifiedDate":"2021-03-10"},{"lineNumber":225,"author":{"gitId":"marklowsk"},"content":"        switch (argumentType) {","lastModifiedDate":"2021-03-10"},{"lineNumber":226,"author":{"gitId":"marklowsk"},"content":"        case VALUE:","lastModifiedDate":"2021-03-10"},{"lineNumber":227,"author":{"gitId":"marklowsk"},"content":"            validateNotEmpty(argument, ERROR_MISSING_ARGUMENT_VALUE);","lastModifiedDate":"2021-03-19"},{"lineNumber":228,"author":{"gitId":"marklowsk"},"content":"            break;","lastModifiedDate":"2021-03-10"},{"lineNumber":229,"author":{"gitId":"marklowsk"},"content":"        case OPTION:","lastModifiedDate":"2021-03-10"},{"lineNumber":230,"author":{"gitId":"marklowsk"},"content":"            if (isOption(argument)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":231,"author":{"gitId":"marklowsk"},"content":"                break;","lastModifiedDate":"2021-03-10"},{"lineNumber":232,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-10"},{"lineNumber":233,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(ERROR_INVALID_ORDER + \"expected an option instead of \" + argument,","lastModifiedDate":"2021-03-10"},{"lineNumber":234,"author":{"gitId":"marklowsk"},"content":"                    command);","lastModifiedDate":"2021-03-10"},{"lineNumber":235,"author":{"gitId":"marklowsk"},"content":"        case COMMAND:","lastModifiedDate":"2021-03-10"},{"lineNumber":236,"author":{"gitId":"marklowsk"},"content":"            if (argument.equals(command)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":237,"author":{"gitId":"marklowsk"},"content":"                break;","lastModifiedDate":"2021-03-10"},{"lineNumber":238,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-10"},{"lineNumber":239,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(ERROR_INVALID_ORDER + \"expected command word.\");","lastModifiedDate":"2021-03-10"},{"lineNumber":240,"author":{"gitId":"marklowsk"},"content":"        case EMPTY_VALUE:","lastModifiedDate":"2021-03-10"},{"lineNumber":241,"author":{"gitId":"marklowsk"},"content":"            // Fallthrough","lastModifiedDate":"2021-03-10"},{"lineNumber":242,"author":{"gitId":"marklowsk"},"content":"        default:","lastModifiedDate":"2021-03-10"},{"lineNumber":243,"author":{"gitId":"marklowsk"},"content":"            if (argument.length() \u003e 0) {","lastModifiedDate":"2021-03-10"},{"lineNumber":244,"author":{"gitId":"marklowsk"},"content":"                throw new CommandException(ERROR_INVALID_INPUT + argument, command);","lastModifiedDate":"2021-03-10"},{"lineNumber":245,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-10"},{"lineNumber":246,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":247,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":248,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":249,"author":{"gitId":"LeeHanYongAndy"},"content":"    protected static String validateHelpType(ArrayList\u003cString\u003e argument, String command)","lastModifiedDate":"2021-03-19"},{"lineNumber":250,"author":{"gitId":"LeeHanYongAndy"},"content":"            throws CommandException {","lastModifiedDate":"2021-03-19"},{"lineNumber":251,"author":{"gitId":"LeeHanYongAndy"},"content":"        String helpType \u003d argument.get(1);","lastModifiedDate":"2021-03-19"},{"lineNumber":252,"author":{"gitId":"LeeHanYongAndy"},"content":"        if (StringUtils.equalsAny(helpType, \"all\", \"add\", \"creditscore\", \"exit\",","lastModifiedDate":"2021-03-19"},{"lineNumber":253,"author":{"gitId":"LeeHanYongAndy"},"content":"            \"list\", \"remove\", \"return\", \"view\")) {","lastModifiedDate":"2021-03-19"},{"lineNumber":254,"author":{"gitId":"LeeHanYongAndy"},"content":"            return helpType;","lastModifiedDate":"2021-03-19"},{"lineNumber":255,"author":{"gitId":"LeeHanYongAndy"},"content":"        } else {","lastModifiedDate":"2021-03-19"},{"lineNumber":256,"author":{"gitId":"LeeHanYongAndy"},"content":"            throw new CommandException(ERROR_WRONG_HELP_TYPE + helpType, command);","lastModifiedDate":"2021-03-19"},{"lineNumber":257,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":258,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":259,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":260,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":261,"author":{"gitId":"marklowsk"},"content":"     * Checks if {@code argument} is an option.\u003cbr\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":262,"author":{"gitId":"marklowsk"},"content":"     * An option can be in the form {@code \"-L\"}, where {@code L} is a letter of any case.","lastModifiedDate":"2021-03-13"},{"lineNumber":263,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":264,"author":{"gitId":"marklowsk"},"content":"     * @param argument a {@code String} to be checked.","lastModifiedDate":"2021-03-13"},{"lineNumber":265,"author":{"gitId":"marklowsk"},"content":"     * @return {@code true} if {@code argument} matches the {@link #REGEX_OPTION} {@code Pattern}.","lastModifiedDate":"2021-03-13"},{"lineNumber":266,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":267,"author":{"gitId":"marklowsk"},"content":"    public static boolean isOption(String argument) {","lastModifiedDate":"2021-03-13"},{"lineNumber":268,"author":{"gitId":"marklowsk"},"content":"        assert argument !\u003d null : \"argument is null!\";","lastModifiedDate":"2021-03-18"},{"lineNumber":269,"author":{"gitId":"marklowsk"},"content":"        return Pattern.matches(REGEX_OPTION, argument);","lastModifiedDate":"2021-03-13"},{"lineNumber":270,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":271,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"marklowsk":256,"LeeHanYongAndy":15}},{"path":"src/main/java/seedu/duke/command/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.ArgumentType;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.RecordType;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.checkInvalidOptions;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.checkOptionConflict;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.hasOption;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateArguments;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateOptions;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_EXPENSE;","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_LOAN;","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_SAVING;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":" * Handles all operations related to the view command.","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"    private static final String[] VALID_OPTIONS \u003d {OPTION_EXPENSE, OPTION_LOAN, OPTION_SAVING};","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"    private static final ArgumentType[] ARGUMENT_TYPE_ORDER \u003d {","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.COMMAND,","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.OPTION,","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.EMPTY_VALUE","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"    };","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":"    protected static final String COMMAND_VIEW \u003d \"view\";","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":"    private RecordType recordType;","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Constructor to validate the format for view command.","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"marklowsk"},"content":"    public ViewCommand(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"marklowsk"},"content":"        validateOptions(arguments, COMMAND_VIEW, VALID_OPTIONS, VALID_OPTIONS);","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"        checkRecordType(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"        validateArguments(arguments, ARGUMENT_TYPE_ORDER, COMMAND_VIEW);","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Check if the input contains the correct record type and options.","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing the options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"LeeHanYongAndy"},"content":"    private void checkRecordType(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"marklowsk"},"content":"        if (hasOption(arguments, OPTION_EXPENSE)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"marklowsk"},"content":"            recordType \u003d RecordType.EXPENSE;","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"marklowsk"},"content":"        } else if (hasOption(arguments, OPTION_LOAN)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"marklowsk"},"content":"            recordType \u003d RecordType.LOAN;","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"marklowsk"},"content":"        } else if (hasOption(arguments, OPTION_SAVING)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"marklowsk"},"content":"            recordType \u003d RecordType.SAVING;","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"marklowsk"},"content":"        } else {","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(\"missing option: [-e | -l | -s]\", COMMAND_VIEW);","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Executes the view function.","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"LeeHanYongAndy"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param ui      is the Ui object that interacts with the user.","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param storage is the Storage object that reads and writes to the save file.","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"marklowsk"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void execute(RecordList recordList, Ui ui, Storage storage) {","lastModifiedDate":"2021-03-11"},{"lineNumber":72,"author":{"gitId":"marklowsk"},"content":"        switch (recordType) {","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"marklowsk"},"content":"        case EXPENSE:","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printTotalAmountExpense(recordList);","lastModifiedDate":"2021-03-11"},{"lineNumber":75,"author":{"gitId":"marklowsk"},"content":"            break;","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"marklowsk"},"content":"        case LOAN:","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printTotalAmountLoan(recordList);","lastModifiedDate":"2021-03-11"},{"lineNumber":78,"author":{"gitId":"marklowsk"},"content":"            break;","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"marklowsk"},"content":"        case SAVING:","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"marklowsk"},"content":"            // Fallthrough","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"marklowsk"},"content":"        default:","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printTotalAmountSaving(recordList);","lastModifiedDate":"2021-03-11"},{"lineNumber":83,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":85,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"jonahtwl":1,"marklowsk":56,"LeeHanYongAndy":28}},{"path":"src/main/java/seedu/duke/common/ArgumentType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.common;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"public enum ArgumentType {","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"    COMMAND, OPTION, VALUE, EMPTY_VALUE","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"marklowsk":5}},{"path":"src/main/java/seedu/duke/common/Constant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.common;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"public class Constant {","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"    // Please append constants used to line under your name","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"LeeHanYongAndy"},"content":"    // Mark","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"    public static final String OPTION_EXPENSE \u003d \"-e\";","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"    public static final String OPTION_LOAN \u003d \"-l\";","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"    public static final String OPTION_SAVING \u003d \"-s\";","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"    public static final String OPTION_AMOUNT \u003d \"-a\";","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"    public static final String OPTION_DATE \u003d \"-d\";","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"    public static final String OPTION_INDEX \u003d \"-i\";","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"    public static final String OPTION_PERSON \u003d \"-p\";","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"    // Andy","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":"    // Jonah","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"LeeHanYongAndy"},"content":"    // Gerard","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"    public static final String SYMBOL_SAVING \u003d \"S\";","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"gerardtwk"},"content":"    public static final String SYMBOL_EXPENSE \u003d \"E\";","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"gerardtwk"},"content":"    public static final String SYMBOL_LOAN \u003d \"L\";","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"    // Jason","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"LeeHanYongAndy":13,"marklowsk":7,"gerardtwk":4}},{"path":"src/main/java/seedu/duke/common/RecordType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.common;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"public enum RecordType {","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"    EXPENSE, LOAN, SAVING","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"marklowsk":5}},{"path":"src/main/java/seedu/duke/common/Validators.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"package seedu.duke.common;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"LeeHanYongAndy"},"content":"import seedu.duke.exception.CustomException;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"tzexern"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"public class Validators {","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"    private static final String KEYWORD_TODAY \u003d \"today\";","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // @@author marklowsk-reused","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Reused from https://github.com/marklowsk/ip/blob/master/src/main/java/duke/common/Utils.java","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final DateTimeFormatter[] POSSIBLE_DATE_FORMATS \u003d {","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        DateTimeFormatter.ofPattern(\"ddMMyyyy\"),","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        DateTimeFormatter.ofPattern(\"d.M.yyyy\"),","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        DateTimeFormatter.ofPattern(\"d-M-yyyy\"),","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        DateTimeFormatter.ofPattern(\"d/M/yyyy\"),","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        DateTimeFormatter.ofPattern(\"yyyy.M.d\"),","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        DateTimeFormatter.ofPattern(\"yyyy-M-d\"),","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        DateTimeFormatter.ofPattern(\"yyyy/M/d\")","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    };","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    // @@author marklowsk-reused","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    // Reused from https://github.com/marklowsk/ip/blob/master/src/main/java/duke/common/Utils.java","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static LocalDate parseDateString(DateTimeFormatter format, String dateInput) {","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return LocalDate.parse(dateInput, format);","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            return null;","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    // @@author marklowsk-reused","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    // Reused from https://github.com/marklowsk/ip/blob/master/src/main/java/duke/common/Utils.java","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    // Utils.parseDate(String) with new additions.","lastModifiedDate":"2021-03-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses dateInput into a LocalDateTime object.","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns null if dateInput cannot be parsed into a LocalDateTime object.","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param dateInput a string containing the date supplied from the user.","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @return a LocalDateTime object or null if failed to parse dateInput.","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #parseDateString(DateTimeFormatter, String)","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static LocalDate validateDate(String dateInput) throws DateTimeException {","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assert dateInput !\u003d null : \"dateInput is null!\";","lastModifiedDate":"2021-03-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (dateInput.trim().equals(KEYWORD_TODAY)) {","lastModifiedDate":"2021-03-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return LocalDate.now();","lastModifiedDate":"2021-03-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        for (DateTimeFormatter dtf : POSSIBLE_DATE_FORMATS) {","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            LocalDate date \u003d parseDateString(dtf, dateInput);","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            if (date !\u003d null) {","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                return date;","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        throw new DateTimeException(\"input \\\"\" + dateInput + \"\\\" is not an acceptable Date Format.\");","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Validates the index supplied by the user.","lastModifiedDate":"2021-03-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Throws exception if the index is out of range or is negative.","lastModifiedDate":"2021-03-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @param inputToCheck index supplied by user to be validated.","lastModifiedDate":"2021-03-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @param records list of all records.","lastModifiedDate":"2021-03-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @return validated index.","lastModifiedDate":"2021-03-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws NumberFormatException when the inputToCheck contains non numeric.","lastModifiedDate":"2021-03-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws IndexOutOfBoundsException when the inputToCheck is less than zero, equals to zero or greater than the","lastModifiedDate":"2021-03-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *     size of the records.","lastModifiedDate":"2021-03-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static int validateIndex(String inputToCheck, RecordList records) throws NumberFormatException,","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            IndexOutOfBoundsException {","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(\"validateIndex_Log\");","lastModifiedDate":"2021-03-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logger.log(Level.INFO, \"going to start validating index\");","lastModifiedDate":"2021-03-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        int recordNumberInList \u003d Integer.parseInt(inputToCheck) - 1;","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        records.getRecordAt(recordNumberInList);","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assert recordNumberInList \u003e -1 : \"recordNumberInList should be greater than 0 and non-negative\";","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.log(Level.INFO, \"done validating index\");","lastModifiedDate":"2021-03-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return recordNumberInList;","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parse the stringAmount into a BigDecimal object.","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param stringAmount contains a string representing the amount entered.","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @return a BigDecimal object.","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws NumberFormatException when the stringAmount contains non numeric.","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws CustomException when the numeric amount is less than or equals to zero.","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static BigDecimal validateAmount(String stringAmount) throws NumberFormatException,","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            CustomException {","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        BigDecimal amount \u003d new BigDecimal(stringAmount);","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!(amount.compareTo(new BigDecimal(\"0\")) \u003d\u003d 1)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new CustomException(\"amount must be greater than 0.\");","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return amount;","lastModifiedDate":"2021-03-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"tzexern":8,"LeeHanYongAndy":3,"marklowsk":5,"-":86}},{"path":"src/main/java/seedu/duke/exception/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"    public CommandException(String message) {","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"        super(message);","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"    public CommandException(String message, String command) {","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"        this(command + \" Command - \" + message);","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"marklowsk":11}},{"path":"src/main/java/seedu/duke/exception/CustomException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"public class CustomException extends Exception {","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"    public CustomException(String message) {","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"        super(message);","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"LeeHanYongAndy":3,"marklowsk":4}},{"path":"src/main/java/seedu/duke/exception/FileLoadingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"public class FileLoadingException extends Exception {","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"jonahtwl":4}},{"path":"src/main/java/seedu/duke/exception/InvalidFileInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"public class InvalidFileInputException extends Exception {","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"jonahtwl":4}},{"path":"src/main/java/seedu/duke/parser/ParserHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"import org.apache.commons.lang3.StringUtils;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"LeeHanYongAndy"},"content":" * Parser class to handle parsing of userInput.","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"LeeHanYongAndy"},"content":"public class ParserHandler {","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Check and parse if the input starts with option.","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param userInput contains a single string to be parsed.","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a ArrayList of String containing trimmed options and arguments.","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static ArrayList\u003cString\u003e getParseInput(String userInput) {","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e extracted \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"LeeHanYongAndy"},"content":"        String trimmedInput \u003d userInput.stripLeading();","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"        if (checkOptionStartWith(trimmedInput)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(trimmedInput.substring(0,2));","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"            trimmedInput \u003d trimmedInput.substring(2);","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":"        return extractAfterFirstCheck(extracted, trimmedInput);","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"LeeHanYongAndy"},"content":"     * parse the remaining trimmed input before checking for last block.","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param extracted ArrayList of String containing the initial parsed option or argument.","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param trimmedInput contains the remaining input that is needed to be parse.","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a ArrayList of String containing trimmed options and arguments.","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static ArrayList\u003cString\u003e extractAfterFirstCheck(ArrayList\u003cString\u003e extracted, String trimmedInput) {","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"LeeHanYongAndy"},"content":"        int optionIndex \u003d getNextOptionIndex(trimmedInput);","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"LeeHanYongAndy"},"content":"        while (optionIndex !\u003d -1) {","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"LeeHanYongAndy"},"content":"            String argument \u003d trimmedInput.substring(0,optionIndex).trim();","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(argument);","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"            trimmedInput \u003d trimmedInput.substring(optionIndex).stripLeading();","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(trimmedInput.substring(0,2));","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"LeeHanYongAndy"},"content":"            trimmedInput \u003d trimmedInput.substring(2);","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"            optionIndex \u003d getNextOptionIndex(trimmedInput);","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"LeeHanYongAndy"},"content":"        return extractFinalPart(extracted, trimmedInput);","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Check and parse if last block in ArrayList of String ends with option.","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Add a empty string after the last block if last block ends with option.","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param extracted ArrayList of String containing the parsed option or argument.","lastModifiedDate":"2021-03-19"},{"lineNumber":51,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param trimmedInput contains the final remaining input that is needed to be parse.","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a ArrayList of String containing trimmed options and arguments.","lastModifiedDate":"2021-03-19"},{"lineNumber":53,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static ArrayList\u003cString\u003e extractFinalPart(ArrayList\u003cString\u003e extracted, String trimmedInput) {","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"LeeHanYongAndy"},"content":"        if (checkOptionEndWith(trimmedInput)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"LeeHanYongAndy"},"content":"            String argument \u003d trimmedInput.substring(0, (trimmedInput.length() - 2)).trim();","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(argument);","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(trimmedInput.substring(trimmedInput.length() - 2).trim());","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(\"\");","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"LeeHanYongAndy"},"content":"        } else {","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(trimmedInput.trim());","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"LeeHanYongAndy"},"content":"        return checkFirstBlock(extracted);","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Check and parse if first block in pre final ArrayList of String starts with help or creditscore.","lastModifiedDate":"2021-03-19"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Add relevant string after the help or creditscore block.","lastModifiedDate":"2021-03-19"},{"lineNumber":69,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param extracted ArrayList of String containing the pre-final parsed option or argument.","lastModifiedDate":"2021-03-19"},{"lineNumber":70,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return the final parsed ArrayList of String containing the options and arguments.","lastModifiedDate":"2021-03-19"},{"lineNumber":71,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":72,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static ArrayList\u003cString\u003e checkFirstBlock(ArrayList\u003cString\u003e extracted) {","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"LeeHanYongAndy"},"content":"        String firstblock \u003d extracted.get(0);","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"LeeHanYongAndy"},"content":"        if (StringUtils.startsWithAny(firstblock, \"help \", \"creditscore \")) {","lastModifiedDate":"2021-03-19"},{"lineNumber":75,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] splitBlock \u003d firstblock.split(\" \", 2);","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.remove(0);","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(splitBlock[0]);","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(splitBlock[1].trim());","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"LeeHanYongAndy"},"content":"        if (StringUtils.startsWith(firstblock, \"help\") \u0026\u0026 firstblock.length() \u003d\u003d 4) {","lastModifiedDate":"2021-03-19"},{"lineNumber":81,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(1,\"all\");","lastModifiedDate":"2021-03-19"},{"lineNumber":82,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":83,"author":{"gitId":"LeeHanYongAndy"},"content":"        if (StringUtils.startsWith(firstblock, \"creditscore\") \u0026\u0026 firstblock.length() \u003d\u003d 11) {","lastModifiedDate":"2021-03-19"},{"lineNumber":84,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(1,\"\");","lastModifiedDate":"2021-03-19"},{"lineNumber":85,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":86,"author":{"gitId":"LeeHanYongAndy"},"content":"        return extracted;","lastModifiedDate":"2021-03-08"},{"lineNumber":87,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":88,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":89,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Check if the input starts with valid options.","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param input string that is needed to be checked against.","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return true if input starts with valid options, else otherwise.","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static boolean checkOptionStartWith(String input) {","lastModifiedDate":"2021-03-09"},{"lineNumber":95,"author":{"gitId":"LeeHanYongAndy"},"content":"        return StringUtils.startsWithAny(input, \"-e\", \"-l\", \"-s\", \"-d\", \"-a\", \"-i\", \"-p\");","lastModifiedDate":"2021-03-18"},{"lineNumber":96,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":97,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":98,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Check if the input ends with valid options.","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param input string that is needed to be checked against.","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return true if input ends with valid options, else otherwise.","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static boolean checkOptionEndWith(String input) {","lastModifiedDate":"2021-03-09"},{"lineNumber":104,"author":{"gitId":"LeeHanYongAndy"},"content":"        return  StringUtils.endsWithAny(input, \" -e\", \" -l\", \" -s\", \" -d\", \" -a\", \" -i\", \" -p\");","lastModifiedDate":"2021-03-18"},{"lineNumber":105,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":106,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":107,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Check the next valid option index.","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param leftOverString containing the remaining input to be checked against.","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return the first index if matches any valid options in input, else -1.","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static int getNextOptionIndex(String leftOverString) {","lastModifiedDate":"2021-03-09"},{"lineNumber":113,"author":{"gitId":"LeeHanYongAndy"},"content":"        return StringUtils.indexOfAny(leftOverString, \" -e \", \" -l \", \" -s \", \" -d \", \" -a \", \" -i \", \" -p \");","lastModifiedDate":"2021-03-18"},{"lineNumber":114,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":115,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"LeeHanYongAndy":115}},{"path":"src/main/java/seedu/duke/record/Expense.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"/**","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":" * A type of record for expenses.","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":" */","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"public class Expense extends Record {","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"    private static final String TYPE_EXPENSE \u003d \"E\";","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"    private static final String FILE_OUTPUT_STRING_FORMAT \u003d \"%s | %s | %f | %s\";","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"     * Constructor to create expense record.","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"     * @param amount expense amount.","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"     * @param issuedDate date of expenditure.","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"     * @param description expense details.","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"    public Expense(BigDecimal amount, LocalDate issuedDate, String description) {","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"        super(amount, issuedDate, description);","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"     * Rearrange the expense information to the format to be saved in the file.","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":"     * @return the formatted string of an expense record.","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"    public String convertFileFormat() {","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"        return String.format(FILE_OUTPUT_STRING_FORMAT, TYPE_EXPENSE, super.getDescription(),","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"                super.getAmount(), super.getIssueDate());","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"     * Refine expense information to be printed when the object is printed.","lastModifiedDate":"2021-03-19"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"     * The type of record is added.","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":"     * @return the formatted string of an expense record.","lastModifiedDate":"2021-03-19"},{"lineNumber":40,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"gerardtwk"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"gerardtwk"},"content":"    public String toString() {","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"tzexern"},"content":"        String formattedRecordType \u003d \"[\" + TYPE_EXPENSE + \"]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"tzexern"},"content":"        return formattedRecordType + super.toString();","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"tzexern":26,"jonahtwl":9,"LeeHanYongAndy":5,"marklowsk":2,"gerardtwk":4}},{"path":"src/main/java/seedu/duke/record/Loan.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"/**","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":" * A type of record for loans.","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":" */","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"public class Loan extends Record {","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"    private static final String TYPE_LOAN \u003d \"L\";","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"    private static final String FILE_OUTPUT_STRING_FORMAT \u003d \"%s | %s | %f | %s | %d\";","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"    private boolean isReturn;","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"     * Constructor to create loan record.","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"     * @param amount loan amount.","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"     * @param issuedDate date of loan.","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"     * @param description loan details.","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"    public Loan(BigDecimal amount, LocalDate issuedDate, String description) {","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"tzexern"},"content":"        super(amount, issuedDate, description);","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"        isReturn \u003d false;","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"     * Constructor to create loan record with predefined isReturn.","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"     * @param amount loan amount.","lastModifiedDate":"2021-03-19"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"     * @param issuedDate date of loan.","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":"     * @param description loan details.","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"tzexern"},"content":"     * @param isReturn if the loan has been returned.","lastModifiedDate":"2021-03-19"},{"lineNumber":34,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"jonahtwl"},"content":"    public Loan(BigDecimal amount, LocalDate issuedDate, String description, boolean isReturn) {","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"        super(amount, issuedDate, description);","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":"        this.isReturn \u003d isReturn;","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"tzexern"},"content":"     * Marks a loan as returned.","lastModifiedDate":"2021-03-19"},{"lineNumber":42,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":43,"author":{"gitId":"tzexern"},"content":"    public void markAsReturned() {","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"LeeHanYongAndy"},"content":"        isReturn \u003d true;","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":48,"author":{"gitId":"tzexern"},"content":"     * Rearrange the loan information to the format to be saved in the file.","lastModifiedDate":"2021-03-19"},{"lineNumber":49,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":50,"author":{"gitId":"tzexern"},"content":"     * @return the formatted string of each loan record.","lastModifiedDate":"2021-03-19"},{"lineNumber":51,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":52,"author":{"gitId":"jonahtwl"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"jonahtwl"},"content":"    public String convertFileFormat() {","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"jonahtwl"},"content":"        return String.format(FILE_OUTPUT_STRING_FORMAT, TYPE_LOAN, super.getDescription(),","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"jonahtwl"},"content":"                super.getAmount(), super.getIssueDate(), this.isReturn ? 1 : 0);","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":59,"author":{"gitId":"tzexern"},"content":"     * Refine loan information to be printed when the object is printed.","lastModifiedDate":"2021-03-19"},{"lineNumber":60,"author":{"gitId":"tzexern"},"content":"     * The type of record is added.","lastModifiedDate":"2021-03-19"},{"lineNumber":61,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":62,"author":{"gitId":"tzexern"},"content":"     * @return the formatted string of a loan record.","lastModifiedDate":"2021-03-19"},{"lineNumber":63,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":64,"author":{"gitId":"gerardtwk"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":65,"author":{"gitId":"gerardtwk"},"content":"    public String toString() {","lastModifiedDate":"2021-03-11"},{"lineNumber":66,"author":{"gitId":"tzexern"},"content":"        String formattedRecordType \u003d \"[\" + TYPE_LOAN + \"]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"tzexern"},"content":"        String formattedLoanStatus \u003d \"[\" + (isReturn ? \"v\" : \" \") + \"]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"tzexern"},"content":"        return formattedRecordType + super.toString() + formattedLoanStatus;","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":70,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"tzexern":43,"jonahtwl":14,"LeeHanYongAndy":7,"marklowsk":2,"gerardtwk":4}},{"path":"src/main/java/seedu/duke/record/Record.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"/**","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":" * Represents a financial-related record to be stored in a list.","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":" */","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"public abstract class Record {","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"    private BigDecimal amount;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"    private LocalDate issueDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"    private String description;","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"    private static final String FILE_OUTPUT_STRING_FORMAT \u003d \"%s | %f | %s\";","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"     * Constructor to create a record.","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"     * @param amount amount to record.","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"     * @param issueDate date of issue to record.","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"     * @param description description of record.","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"    public Record(BigDecimal amount, LocalDate issueDate, String description) {","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"gerardtwk"},"content":"        this.issueDate \u003d issueDate;","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"gerardtwk"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"     * Gets the description or details of a record.","lastModifiedDate":"2021-03-19"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"     * @return description of record.","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"    public String getDescription() {","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"        return description;","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"     * Gets the amount in dollars of the record.","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":40,"author":{"gitId":"tzexern"},"content":"     * @return amount of the record.","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"    public BigDecimal getAmount() {","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"marklowsk"},"content":"        return amount;","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":47,"author":{"gitId":"tzexern"},"content":"     * Gets the date of issuance of the record.","lastModifiedDate":"2021-03-19"},{"lineNumber":48,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":49,"author":{"gitId":"tzexern"},"content":"     * @return issue date of the record.","lastModifiedDate":"2021-03-19"},{"lineNumber":50,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":51,"author":{"gitId":"marklowsk"},"content":"    public LocalDate getIssueDate() {","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"marklowsk"},"content":"        return issueDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":56,"author":{"gitId":"tzexern"},"content":"     * Rearrange the record information to the format to be saved in the file.","lastModifiedDate":"2021-03-19"},{"lineNumber":57,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":58,"author":{"gitId":"tzexern"},"content":"     * @return the formatted string of a record.","lastModifiedDate":"2021-03-19"},{"lineNumber":59,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":60,"author":{"gitId":"jonahtwl"},"content":"    public String convertFileFormat() {","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"jonahtwl"},"content":"        return String.format(FILE_OUTPUT_STRING_FORMAT, description, amount, issueDate);","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":65,"author":{"gitId":"tzexern"},"content":"     * Rearrange record information to be printed when the object is printed.","lastModifiedDate":"2021-03-19"},{"lineNumber":66,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":67,"author":{"gitId":"tzexern"},"content":"     * @return the formatted string of a record.","lastModifiedDate":"2021-03-19"},{"lineNumber":68,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":69,"author":{"gitId":"gerardtwk"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":70,"author":{"gitId":"gerardtwk"},"content":"    public String toString() {","lastModifiedDate":"2021-03-11"},{"lineNumber":71,"author":{"gitId":"tzexern"},"content":"        String formattedDate \u003d \"[\" + this.issueDate + \"]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"tzexern"},"content":"        String formattedDescription \u003d \" \" + this.description + \" \";","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"tzexern"},"content":"        return formattedDate + formattedDescription;","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":75,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"tzexern":38,"jonahtwl":12,"LeeHanYongAndy":7,"marklowsk":7,"gerardtwk":11}},{"path":"src/main/java/seedu/duke/record/RecordList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"public class RecordList {","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"    private ArrayList\u003cRecord\u003e recordList;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"    public RecordList() {","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"        this(new ArrayList\u003cRecord\u003e());","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"    public RecordList(ArrayList\u003cRecord\u003e recordList) {","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"        this.recordList \u003d recordList;","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"    public void addRecord(Record recordToAdd) {","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"        recordList.add(recordToAdd);","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"    public Record getRecordAt(int recordIndex) {","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"        return recordList.get(recordIndex);","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":"    public Record deleteRecordAt(int recordIndex) {","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"        return recordList.remove(recordIndex);","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"    public void deleteAllRecords() {","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"        recordList.clear();","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"tzexern"},"content":"        return recordList.isEmpty();","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"    public int getRecordCount() {","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"        return recordList.size();","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"tzexern":29,"jonahtwl":5,"LeeHanYongAndy":3,"marklowsk":1,"gerardtwk":2}},{"path":"src/main/java/seedu/duke/record/Saving.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"/**","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":" * A type of record for savings.","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":" */","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"public class Saving extends Record {","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"    private static final String TYPE_SAVING \u003d \"S\";","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"    private static final String FILE_OUTPUT_STRING_FORMAT \u003d \"%s | %s | %f | %s\";","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"     * Constructor to create saving record.","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"     * @param amount saving amount.","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"     * @param issueDate date of saving.","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"     * @param description saving details.","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"    public Saving(BigDecimal amount, LocalDate issueDate, String description) {","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":"        super(amount, issueDate, description);","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"     * Rearrange the saving information to the format to be saved in the file.","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":"     * @return the formatted string of a saving record.","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"    public String convertFileFormat() {","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"        return String.format(FILE_OUTPUT_STRING_FORMAT, TYPE_SAVING, super.getDescription(),","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"                super.getAmount(), super.getIssueDate());","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"     * Refine saving information to be printed when the object is printed.","lastModifiedDate":"2021-03-19"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"     * The type of record is added.","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":"     * @return the formatted string of a saving record.","lastModifiedDate":"2021-03-19"},{"lineNumber":40,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"gerardtwk"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"gerardtwk"},"content":"    public String toString() {","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"tzexern"},"content":"        String formattedRecordType \u003d \"[\" + TYPE_SAVING + \"]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"tzexern"},"content":"        return formattedRecordType + super.toString();","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"tzexern":23,"jonahtwl":9,"LeeHanYongAndy":5,"marklowsk":2,"gerardtwk":7}},{"path":"src/main/java/seedu/duke/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.exception.FileLoadingException;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.exception.InvalidFileInputException;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.Expense;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.Loan;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.Record;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.Saving;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"import java.io.File;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"jonahtwl"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"LeeHanYongAndy"},"content":"public class Storage {","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":"    private static final Path SAVED_FILE_PATH \u003d Paths.get(\"finux.txt\");","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"    private static final String REGEX_PATTERN_EXPENSE \u003d \"[E]\\\\s\\\\|\\\\s[^|]+\\\\s\\\\|\\\\s[^|]+\\\\s\\\\|\\\\s[^|]+\";","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"    private static final String REGEX_PATTERN_LOAN \u003d \"[L]\\\\s\\\\|\\\\s[^|]+\\\\s\\\\|\\\\s[^|]+\\\\s\\\\|\\\\s[^|]+\\\\s\\\\|\\\\s[01]\";","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"    private static final String REGEX_PATTERN_SAVING \u003d \"[S]\\\\s\\\\|\\\\s[^|]+\\\\s\\\\|\\\\s[^|]+\\\\s\\\\|\\\\s[^|]+\";","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"    private static final int INDEX_OF_DESCRIPTION \u003d 1;","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"    private static final int INDEX_OF_AMOUNT \u003d 2;","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":"    private static final int INDEX_OF_DATE \u003d 3;","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"jonahtwl"},"content":"    private static final int INDEX_OF_ISRETURN \u003d 4;","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":"    public Path dataFilePath;","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"jonahtwl"},"content":"    public Storage() {","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"jonahtwl"},"content":"        this(SAVED_FILE_PATH);","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"jonahtwl"},"content":"    public Storage(Path dataFilePath) {","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"jonahtwl"},"content":"        this.dataFilePath \u003d dataFilePath;","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"jonahtwl"},"content":"    private boolean saveFileExists() {","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"jonahtwl"},"content":"        return Files.exists(SAVED_FILE_PATH);","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"gerardtwk"},"content":"    public void saveRecordListData(RecordList records) {","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"gerardtwk"},"content":"        try {","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"gerardtwk"},"content":"            writeToSaveFile(records);","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"gerardtwk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"gerardtwk"},"content":"            System.out.println(\"Error in writeToSaveFile()\");","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"gerardtwk"},"content":"    private void writeToSaveFile(RecordList records) throws IOException {","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"jonahtwl"},"content":"        FileWriter fw \u003d new FileWriter(dataFilePath.toString(), false);","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"gerardtwk"},"content":"        for (int i \u003d 0; i \u003c records.getRecordCount(); i++) {","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"gerardtwk"},"content":"            Record currentRecord \u003d records.getRecordAt(i);","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"gerardtwk"},"content":"            fw.write(currentRecord.convertFileFormat() + System.lineSeparator());","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"jonahtwl"},"content":"        fw.close();","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":69,"author":{"gitId":"jonahtwl"},"content":"     * Loads the RecordList from the file into FINUX.","lastModifiedDate":"2021-03-11"},{"lineNumber":70,"author":{"gitId":"jonahtwl"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":71,"author":{"gitId":"jonahtwl"},"content":"     * @return a RecordList from the loaded file.","lastModifiedDate":"2021-03-11"},{"lineNumber":72,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":73,"author":{"gitId":"jonahtwl"},"content":"    public ArrayList\u003cRecord\u003e loadFile() throws FileLoadingException {","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"jonahtwl"},"content":"        ArrayList\u003cRecord\u003e records \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-11"},{"lineNumber":75,"author":{"gitId":"jonahtwl"},"content":"        try {","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"jonahtwl"},"content":"            if (!saveFileExists()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"jonahtwl"},"content":"                initSaveFile();","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"jonahtwl"},"content":"                return records;","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"jonahtwl"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"jonahtwl"},"content":"            File loadFile \u003d dataFilePath.toFile();","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"jonahtwl"},"content":"            Scanner sc \u003d new Scanner(loadFile);","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"jonahtwl"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"jonahtwl"},"content":"                String rawData \u003d sc.nextLine();","lastModifiedDate":"2021-03-09"},{"lineNumber":84,"author":{"gitId":"jonahtwl"},"content":"                Record record \u003d parseRecord(rawData);","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"jonahtwl"},"content":"                if (record !\u003d null) {","lastModifiedDate":"2021-03-11"},{"lineNumber":86,"author":{"gitId":"jonahtwl"},"content":"                    records.add(record);","lastModifiedDate":"2021-03-11"},{"lineNumber":87,"author":{"gitId":"jonahtwl"},"content":"                }","lastModifiedDate":"2021-03-09"},{"lineNumber":88,"author":{"gitId":"jonahtwl"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":89,"author":{"gitId":"jonahtwl"},"content":"        } catch (InvalidFileInputException | IOException e) {","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"jonahtwl"},"content":"            throw new FileLoadingException();","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":92,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"jonahtwl"},"content":"        return records;","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":95,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":96,"author":{"gitId":"jonahtwl"},"content":"    private void initSaveFile() throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"jonahtwl"},"content":"        File newSaveFile \u003d new File(String.valueOf(SAVED_FILE_PATH));","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"jonahtwl"},"content":"        if (newSaveFile.createNewFile()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"jonahtwl"},"content":"            Ui.printSuccessfulFileCreation();","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"jonahtwl"},"content":"        } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"jonahtwl"},"content":"            throw new IOException(\"File creation unsuccessful!\");","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"jonahtwl"},"content":"    private Record parseRecord(String rawData) throws InvalidFileInputException {","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"jonahtwl"},"content":"        if (Pattern.matches(REGEX_PATTERN_EXPENSE, rawData)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":107,"author":{"gitId":"jonahtwl"},"content":"            return loadExpense(rawData);","lastModifiedDate":"2021-03-11"},{"lineNumber":108,"author":{"gitId":"jonahtwl"},"content":"        } else if (Pattern.matches(REGEX_PATTERN_LOAN, rawData)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":109,"author":{"gitId":"jonahtwl"},"content":"            return loadLoan(rawData);","lastModifiedDate":"2021-03-11"},{"lineNumber":110,"author":{"gitId":"jonahtwl"},"content":"        } else if (Pattern.matches(REGEX_PATTERN_SAVING, rawData)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":111,"author":{"gitId":"jonahtwl"},"content":"            return loadSaving(rawData);","lastModifiedDate":"2021-03-11"},{"lineNumber":112,"author":{"gitId":"jonahtwl"},"content":"        } else {","lastModifiedDate":"2021-03-11"},{"lineNumber":113,"author":{"gitId":"jonahtwl"},"content":"            throw new InvalidFileInputException();","lastModifiedDate":"2021-03-13"},{"lineNumber":114,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":115,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":116,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":117,"author":{"gitId":"jonahtwl"},"content":"    private String extractArg(String rawData, int index) throws InvalidFileInputException {","lastModifiedDate":"2021-03-11"},{"lineNumber":118,"author":{"gitId":"jonahtwl"},"content":"        String[] args \u003d rawData.split(\"\\\\|\");","lastModifiedDate":"2021-03-11"},{"lineNumber":119,"author":{"gitId":"jonahtwl"},"content":"        if (index \u003c 0 || index \u003e args.length) {","lastModifiedDate":"2021-03-11"},{"lineNumber":120,"author":{"gitId":"jonahtwl"},"content":"            throw new InvalidFileInputException();","lastModifiedDate":"2021-03-13"},{"lineNumber":121,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":122,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":123,"author":{"gitId":"jonahtwl"},"content":"        return args[index].strip();","lastModifiedDate":"2021-03-11"},{"lineNumber":124,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":125,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":126,"author":{"gitId":"jonahtwl"},"content":"    private Record loadExpense(String rawData) throws InvalidFileInputException {","lastModifiedDate":"2021-03-11"},{"lineNumber":127,"author":{"gitId":"jonahtwl"},"content":"        BigDecimal amount;","lastModifiedDate":"2021-03-13"},{"lineNumber":128,"author":{"gitId":"jonahtwl"},"content":"        LocalDate issueDate;","lastModifiedDate":"2021-03-12"},{"lineNumber":129,"author":{"gitId":"jonahtwl"},"content":"        String description \u003d extractArg(rawData, INDEX_OF_DESCRIPTION);","lastModifiedDate":"2021-03-11"},{"lineNumber":130,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":131,"author":{"gitId":"jonahtwl"},"content":"        try {","lastModifiedDate":"2021-03-11"},{"lineNumber":132,"author":{"gitId":"jonahtwl"},"content":"            amount \u003d new BigDecimal(extractArg(rawData, INDEX_OF_AMOUNT));","lastModifiedDate":"2021-03-13"},{"lineNumber":133,"author":{"gitId":"jonahtwl"},"content":"            issueDate \u003d LocalDate.parse(extractArg(rawData, INDEX_OF_DATE),","lastModifiedDate":"2021-03-12"},{"lineNumber":134,"author":{"gitId":"jonahtwl"},"content":"                    DateTimeFormatter.ofPattern(\"yyyy-M-d\"));","lastModifiedDate":"2021-03-13"},{"lineNumber":135,"author":{"gitId":"jonahtwl"},"content":"        } catch (NumberFormatException | DateTimeParseException e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":136,"author":{"gitId":"jonahtwl"},"content":"            throw new InvalidFileInputException();","lastModifiedDate":"2021-03-13"},{"lineNumber":137,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":138,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":139,"author":{"gitId":"jonahtwl"},"content":"        return new Expense(amount, issueDate, description);","lastModifiedDate":"2021-03-11"},{"lineNumber":140,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":141,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":142,"author":{"gitId":"jonahtwl"},"content":"    private Record loadLoan(String rawData) throws InvalidFileInputException {","lastModifiedDate":"2021-03-11"},{"lineNumber":143,"author":{"gitId":"jonahtwl"},"content":"        BigDecimal amount;","lastModifiedDate":"2021-03-13"},{"lineNumber":144,"author":{"gitId":"jonahtwl"},"content":"        boolean isReturn;","lastModifiedDate":"2021-03-13"},{"lineNumber":145,"author":{"gitId":"jonahtwl"},"content":"        String description \u003d extractArg(rawData, INDEX_OF_DESCRIPTION);","lastModifiedDate":"2021-03-11"},{"lineNumber":146,"author":{"gitId":"jonahtwl"},"content":"        LocalDate issueDate \u003d LocalDate.parse(extractArg(rawData, INDEX_OF_DATE),","lastModifiedDate":"2021-03-12"},{"lineNumber":147,"author":{"gitId":"jonahtwl"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-M-d\"));","lastModifiedDate":"2021-03-13"},{"lineNumber":148,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":149,"author":{"gitId":"jonahtwl"},"content":"        try {","lastModifiedDate":"2021-03-11"},{"lineNumber":150,"author":{"gitId":"jonahtwl"},"content":"            amount \u003d new BigDecimal(extractArg(rawData, INDEX_OF_AMOUNT));","lastModifiedDate":"2021-03-13"},{"lineNumber":151,"author":{"gitId":"jonahtwl"},"content":"            isReturn \u003d Integer.parseInt(extractArg(rawData, INDEX_OF_ISRETURN)) \u003d\u003d 1;","lastModifiedDate":"2021-03-13"},{"lineNumber":152,"author":{"gitId":"jonahtwl"},"content":"        } catch (NumberFormatException | DateTimeParseException e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":153,"author":{"gitId":"jonahtwl"},"content":"            throw new InvalidFileInputException();","lastModifiedDate":"2021-03-13"},{"lineNumber":154,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":155,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":156,"author":{"gitId":"jonahtwl"},"content":"        return new Loan(amount, issueDate, description, isReturn);","lastModifiedDate":"2021-03-13"},{"lineNumber":157,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":158,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":159,"author":{"gitId":"jonahtwl"},"content":"    private Record loadSaving(String rawData) throws InvalidFileInputException {","lastModifiedDate":"2021-03-11"},{"lineNumber":160,"author":{"gitId":"jonahtwl"},"content":"        BigDecimal amount;","lastModifiedDate":"2021-03-13"},{"lineNumber":161,"author":{"gitId":"jonahtwl"},"content":"        String description \u003d extractArg(rawData, INDEX_OF_DESCRIPTION);","lastModifiedDate":"2021-03-11"},{"lineNumber":162,"author":{"gitId":"jonahtwl"},"content":"        LocalDate issueDate \u003d LocalDate.parse(extractArg(rawData, INDEX_OF_DATE),","lastModifiedDate":"2021-03-12"},{"lineNumber":163,"author":{"gitId":"jonahtwl"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-M-d\"));","lastModifiedDate":"2021-03-13"},{"lineNumber":164,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":165,"author":{"gitId":"jonahtwl"},"content":"        try {","lastModifiedDate":"2021-03-11"},{"lineNumber":166,"author":{"gitId":"jonahtwl"},"content":"            amount \u003d new BigDecimal(extractArg(rawData, INDEX_OF_AMOUNT));","lastModifiedDate":"2021-03-13"},{"lineNumber":167,"author":{"gitId":"jonahtwl"},"content":"        } catch (NumberFormatException | DateTimeParseException e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":168,"author":{"gitId":"jonahtwl"},"content":"            throw new InvalidFileInputException();","lastModifiedDate":"2021-03-13"},{"lineNumber":169,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":170,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":171,"author":{"gitId":"jonahtwl"},"content":"        return new Saving(amount, issueDate, description);","lastModifiedDate":"2021-03-11"},{"lineNumber":172,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":173,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"jonahtwl":156,"LeeHanYongAndy":4,"gerardtwk":13}},{"path":"src/main/java/seedu/duke/ui/HelpPage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"import static seedu.duke.ui.Ui.DIVIDER;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"LeeHanYongAndy"},"content":" * Handles all printing of help related command messages to the console.","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"LeeHanYongAndy"},"content":"public class HelpPage {","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String TAB_1SPACE \u003d \"\\t\";","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String TAB_2SPACE \u003d \"\\t\\t\";","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_HEADER_ADD \u003d \"add - add a record to the program\";","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_SYNOPSIS_ADD \u003d \"add [OPTION] [ARGUMENT]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_HEADER_LIST \u003d \"list - list all the records of chosen record type\";","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_SYNOPSIS_LIST \u003d \"list [OPTION]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_HEADER_VIEW \u003d \"view - view the total amount of chosen record type\";","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_SYNOPSIS_VIEW \u003d \"view [OPTION]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_HEADER_REMOVE \u003d \"remove - remove a record in the program\";","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_SYNOPSIS_REMOVE \u003d \"remove [OPTION] [ARGUMENT]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_HEADER_RETURN \u003d \"return - record a loan as returned\";","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_SYNOPSIS_RETURN \u003d \"return [OPTION] [ARGUMENT]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_HEADER_EXIT \u003d \"exit - terminate the program\";","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_SYNOPSIS_EXIT \u003d \"exit (no option/argument needed)\";","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_RECORD_TYPE \u003d \"-e, -l, -s\";","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_RECORD_TYPE_DESCRIPTION \u003d \"[ARGUMENT] used as record description\";","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_RECORD_TYPE_LISTING \u003d \"used to list the chosen record types\";","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_RECORD_TYPE_VIEWING \u003d \"used to view total amount of choose record type\";","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_AMOUNT \u003d \"-a\";","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_AMOUNT_DESCRIPTION \u003d \"[ARGUMENT] positive non zero numeric \"","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"LeeHanYongAndy"},"content":"            + \"amount associated with the record\";","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_DATE \u003d \"-d\";","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_DATE_DESCRIPTION \u003d \"[ARGUMENT] date associated with the record\";","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_DATE_RETURN_DESCRIPTION \u003d \"[ARGUMENT] date of loan return\";","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_NO_ARGUMENT \u003d \"arguments are not needed\";","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_OPTION_INDEX \u003d \"-i\";","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_OPTION_INDEX_DESCRIPTION \u003d \"[ARGUMENT] positive non zero integer \"","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"            + \"used to reference to index in program\";","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_PERSON \u003d \"-p \";","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_PERSON_DESCRIPTION \u003d \"[ARGUMENT] the person name\";","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_PERSON_IN_ADD_DESCRIPTION \u003d \", use only with \u0027-l\u0027 option\";","lastModifiedDate":"2021-03-19"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the respective help messages based on the command given.","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param command contains the command that help is needed to be printed.","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printHelp(String command) {","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"        switch (command) {","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"        case \"all\":","lastModifiedDate":"2021-03-19"},{"lineNumber":48,"author":{"gitId":"LeeHanYongAndy"},"content":"            printManPageMaster();","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"LeeHanYongAndy"},"content":"            break;","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"        case \"add\":","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"LeeHanYongAndy"},"content":"            printManPageAdd();","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"LeeHanYongAndy"},"content":"            break;","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"LeeHanYongAndy"},"content":"        case \"list\":","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"LeeHanYongAndy"},"content":"            printManPageList();","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"LeeHanYongAndy"},"content":"            break;","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"LeeHanYongAndy"},"content":"        case \"view\":","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"LeeHanYongAndy"},"content":"            printManPageView();","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"LeeHanYongAndy"},"content":"            break;","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"LeeHanYongAndy"},"content":"        case \"remove\":","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"LeeHanYongAndy"},"content":"            printManPageRemove();","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"LeeHanYongAndy"},"content":"            break;","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"LeeHanYongAndy"},"content":"        case \"return\":","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"LeeHanYongAndy"},"content":"            printManPageReturn();","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"            break;","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"LeeHanYongAndy"},"content":"        case \"exit\":","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"            // Fallthrough","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"        default:","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"            printManPageExit();","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the man page header format.","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param header contains the description of the command.","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManHeader(String header) {","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"NAME\");","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + header);","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println();","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":82,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the man page synopsis format.","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param synopsis contains the availability options and argument.","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManSynopsis(String synopsis) {","lastModifiedDate":"2021-03-12"},{"lineNumber":87,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"SYNOPSIS\");","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + synopsis);","lastModifiedDate":"2021-03-12"},{"lineNumber":89,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println();","lastModifiedDate":"2021-03-12"},{"lineNumber":90,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":91,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":92,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the entire man page for all commands.","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManPageMaster() {","lastModifiedDate":"2021-03-12"},{"lineNumber":96,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManPageAdd();","lastModifiedDate":"2021-03-12"},{"lineNumber":97,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManPageView();","lastModifiedDate":"2021-03-12"},{"lineNumber":98,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManPageList();","lastModifiedDate":"2021-03-12"},{"lineNumber":99,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManPageRemove();","lastModifiedDate":"2021-03-12"},{"lineNumber":100,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManPageReturn();","lastModifiedDate":"2021-03-12"},{"lineNumber":101,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManPageExit();","lastModifiedDate":"2021-03-12"},{"lineNumber":102,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":103,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":104,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the man page for add command.","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManPageAdd() {","lastModifiedDate":"2021-03-12"},{"lineNumber":108,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManHeader(MAN_HEADER_ADD);","lastModifiedDate":"2021-03-12"},{"lineNumber":109,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManSynopsis(MAN_SYNOPSIS_ADD);","lastModifiedDate":"2021-03-12"},{"lineNumber":110,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManDescriptionAdd();","lastModifiedDate":"2021-03-12"},{"lineNumber":111,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":112,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":113,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the add command options and arguments description.","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManDescriptionAdd() {","lastModifiedDate":"2021-03-12"},{"lineNumber":117,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"DESCRIPTION\");","lastModifiedDate":"2021-03-12"},{"lineNumber":118,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_RECORD_TYPE);","lastModifiedDate":"2021-03-12"},{"lineNumber":119,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_2SPACE + MAN_OPTION_RECORD_TYPE_DESCRIPTION);","lastModifiedDate":"2021-03-12"},{"lineNumber":120,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_AMOUNT);","lastModifiedDate":"2021-03-12"},{"lineNumber":121,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_2SPACE + MAN_OPTION_AMOUNT_DESCRIPTION);","lastModifiedDate":"2021-03-12"},{"lineNumber":122,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_DATE);","lastModifiedDate":"2021-03-12"},{"lineNumber":123,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_2SPACE + MAN_OPTION_DATE_DESCRIPTION);","lastModifiedDate":"2021-03-12"},{"lineNumber":124,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_PERSON);","lastModifiedDate":"2021-03-19"},{"lineNumber":125,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_2SPACE + MAN_OPTION_PERSON_DESCRIPTION + MAN_OPTION_PERSON_IN_ADD_DESCRIPTION);","lastModifiedDate":"2021-03-19"},{"lineNumber":126,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(Ui.DIVIDER);","lastModifiedDate":"2021-03-12"},{"lineNumber":127,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":128,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":129,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":130,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the man page for list command.","lastModifiedDate":"2021-03-14"},{"lineNumber":131,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManPageList() {","lastModifiedDate":"2021-03-12"},{"lineNumber":133,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManHeader(MAN_HEADER_LIST);","lastModifiedDate":"2021-03-12"},{"lineNumber":134,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManSynopsis(MAN_SYNOPSIS_LIST);","lastModifiedDate":"2021-03-12"},{"lineNumber":135,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManDescriptionList();","lastModifiedDate":"2021-03-12"},{"lineNumber":136,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":137,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":138,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":139,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the list command options and arguments description.","lastModifiedDate":"2021-03-14"},{"lineNumber":140,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":141,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManDescriptionList() {","lastModifiedDate":"2021-03-12"},{"lineNumber":142,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"DESCRIPTION\");","lastModifiedDate":"2021-03-12"},{"lineNumber":143,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_RECORD_TYPE);","lastModifiedDate":"2021-03-12"},{"lineNumber":144,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println((TAB_2SPACE + MAN_OPTION_RECORD_TYPE_LISTING));","lastModifiedDate":"2021-03-12"},{"lineNumber":145,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(Ui.DIVIDER);","lastModifiedDate":"2021-03-12"},{"lineNumber":146,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":147,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":148,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":149,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the man page for view command.","lastModifiedDate":"2021-03-14"},{"lineNumber":150,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":151,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManPageView() {","lastModifiedDate":"2021-03-12"},{"lineNumber":152,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManHeader(MAN_HEADER_VIEW);","lastModifiedDate":"2021-03-12"},{"lineNumber":153,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManSynopsis(MAN_SYNOPSIS_VIEW);","lastModifiedDate":"2021-03-12"},{"lineNumber":154,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManDescriptionView();","lastModifiedDate":"2021-03-12"},{"lineNumber":155,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":156,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":157,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":158,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the view command options and arguments description.","lastModifiedDate":"2021-03-14"},{"lineNumber":159,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":160,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManDescriptionView() {","lastModifiedDate":"2021-03-12"},{"lineNumber":161,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"DESCRIPTION\");","lastModifiedDate":"2021-03-12"},{"lineNumber":162,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_RECORD_TYPE);","lastModifiedDate":"2021-03-12"},{"lineNumber":163,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println((TAB_2SPACE + MAN_OPTION_RECORD_TYPE_VIEWING));","lastModifiedDate":"2021-03-12"},{"lineNumber":164,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-12"},{"lineNumber":165,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":166,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":167,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":168,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the man page for remove command.","lastModifiedDate":"2021-03-14"},{"lineNumber":169,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":170,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManPageRemove() {","lastModifiedDate":"2021-03-12"},{"lineNumber":171,"author":{"gitId":"tzexern"},"content":"        printManHeader(MAN_HEADER_REMOVE);","lastModifiedDate":"2021-03-12"},{"lineNumber":172,"author":{"gitId":"tzexern"},"content":"        printManSynopsis(MAN_SYNOPSIS_REMOVE);","lastModifiedDate":"2021-03-12"},{"lineNumber":173,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManDescriptionRemove();","lastModifiedDate":"2021-03-12"},{"lineNumber":174,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":175,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":176,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":177,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the remove command options and arguments description.","lastModifiedDate":"2021-03-14"},{"lineNumber":178,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":179,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManDescriptionRemove() {","lastModifiedDate":"2021-03-12"},{"lineNumber":180,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"DESCRIPTION\");","lastModifiedDate":"2021-03-12"},{"lineNumber":181,"author":{"gitId":"tzexern"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_INDEX);","lastModifiedDate":"2021-03-12"},{"lineNumber":182,"author":{"gitId":"tzexern"},"content":"        System.out.println((TAB_2SPACE + MAN_OPTION_INDEX_DESCRIPTION));","lastModifiedDate":"2021-03-12"},{"lineNumber":183,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-12"},{"lineNumber":184,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":185,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":186,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":187,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the man page for return command.","lastModifiedDate":"2021-03-14"},{"lineNumber":188,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":189,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManPageReturn() {","lastModifiedDate":"2021-03-12"},{"lineNumber":190,"author":{"gitId":"tzexern"},"content":"        printManHeader(MAN_HEADER_RETURN);","lastModifiedDate":"2021-03-12"},{"lineNumber":191,"author":{"gitId":"tzexern"},"content":"        printManSynopsis(MAN_SYNOPSIS_RETURN);","lastModifiedDate":"2021-03-12"},{"lineNumber":192,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManDescriptionReturn();","lastModifiedDate":"2021-03-12"},{"lineNumber":193,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":194,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":195,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":196,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the return command options and arguments description.","lastModifiedDate":"2021-03-14"},{"lineNumber":197,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":198,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManDescriptionReturn() {","lastModifiedDate":"2021-03-12"},{"lineNumber":199,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"DESCRIPTION\");","lastModifiedDate":"2021-03-12"},{"lineNumber":200,"author":{"gitId":"tzexern"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_INDEX);","lastModifiedDate":"2021-03-12"},{"lineNumber":201,"author":{"gitId":"tzexern"},"content":"        System.out.println((TAB_2SPACE + MAN_OPTION_INDEX_DESCRIPTION));","lastModifiedDate":"2021-03-12"},{"lineNumber":202,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_DATE);","lastModifiedDate":"2021-03-19"},{"lineNumber":203,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_2SPACE + MAN_OPTION_DATE_RETURN_DESCRIPTION);","lastModifiedDate":"2021-03-19"},{"lineNumber":204,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-12"},{"lineNumber":205,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":206,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":207,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":208,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the man page for exit command.","lastModifiedDate":"2021-03-14"},{"lineNumber":209,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":210,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManPageExit() {","lastModifiedDate":"2021-03-12"},{"lineNumber":211,"author":{"gitId":"tzexern"},"content":"        printManHeader(MAN_HEADER_EXIT);","lastModifiedDate":"2021-03-12"},{"lineNumber":212,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"SYNOPSIS\");","lastModifiedDate":"2021-03-12"},{"lineNumber":213,"author":{"gitId":"tzexern"},"content":"        System.out.println(TAB_1SPACE + MAN_SYNOPSIS_EXIT);","lastModifiedDate":"2021-03-12"},{"lineNumber":214,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-12"},{"lineNumber":215,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":216,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"tzexern":19,"LeeHanYongAndy":197}},{"path":"src/main/java/seedu/duke/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.Record;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Expense;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Saving;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Loan;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.math.RoundingMode;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":" * Handles all user interactions and printing of text to the console.","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"LeeHanYongAndy"},"content":"public class Ui {","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":"    protected static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"    private static final String logo \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"            + \"||    $$$$$$  $$$$$$  $$    $$  $$    $$   $$    $$    ||\\n\"","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"            + \"||    $$        $$    $$$   $$  $$    $$    $$  $$     ||\\n\"","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":"            + \"||    $$$$$$    $$    $$ $$ $$  $$    $$      $$       ||\\n\"","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"            + \"||    $$        $$    $$   $$$  $$    $$    $$  $$     ||\\n\"","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":"            + \"||    $$      $$$$$$  $$    $$   $$$$$$    $$    $$    ||\\n\"","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"jonahtwl"},"content":"            + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"    private static final String MESSAGE_GOODBYE \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":"            \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"            + \"||   $$  $$  $$    $$   $$$$$   $$$$$$$$     $$$$$   $$  $$  $$    ||\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"            + \"||   $$  $$  $$    $$  $$   $$     $$       $$   $$  $$  $$  $$    ||\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"            + \"||   $$$$$$  $$    $$  $$$$$$$     $$       $$$$$$$  $$$$$$  $$    ||\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"            + \"||   $$  $$  $$    $$  $$   $$     $$       $$   $$  $$  $$        ||\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"            + \"||   $$  $$   $$$$$$   $$   $$     $$       $$   $$  $$  $$  $$    ||\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":"            + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"    private static final String MESSAGE_LOADING \u003d \"Loading from save file... \";","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":"    private static final String MESSAGE_FILE_CREATION_SUCCESS \u003d \"New save file created!\";","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"    private static final String MESSAGE_EXPENSE_SUCCESSFULLY_ADDED \u003d \"Expense has been added...\";","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":"    private static final String MESSAGE_LOAN_SUCCESSFULLY_ADDED \u003d \"Loan has been added...\";","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"tzexern"},"content":"    private static final String MESSAGE_SAVING_SUCCESSFULLY_ADDED \u003d \"Saving has been added...\";","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MESSAGE_TOTAL_EXPENSE \u003d \"The total amount for expense is \";","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MESSAGE_TOTAL_LOAN \u003d \"The total amount for loan is \";","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MESSAGE_TOTAL_SAVING \u003d \"The total amount for saving is \";","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"jonahtwl"},"content":"    private static final String MESSAGE_FAILED_INIT \u003d \"File or contents corrupted! Bad Init!\";","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"gerardtwk"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"gerardtwk"},"content":"     * Decorative prefix for the FINUX Interface.","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"gerardtwk"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"jonahtwl"},"content":"    private static final String FINUX_PREFIX \u003d \"$$\";","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"jonahtwl"},"content":"    private final Scanner input;","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"jonahtwl"},"content":"    public Ui() {","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"jonahtwl"},"content":"        this(System.in);","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"jonahtwl"},"content":"    public Ui(InputStream in) {","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"jonahtwl"},"content":"        this.input \u003d new Scanner(in);","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"jonahtwl"},"content":"    public static void printInitError() {","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"jonahtwl"},"content":"        System.out.println();","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(MESSAGE_FAILED_INIT);","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"jonahtwl"},"content":"        System.out.println();","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"jonahtwl"},"content":"    public static void printSuccessfulFileCreation() {","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(MESSAGE_FILE_CREATION_SUCCESS);","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"tzexern"},"content":"    public void printSuccessfulAdd(Record recordAdded, int index) {","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"jonahtwl"},"content":"        System.out.println();","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"tzexern"},"content":"        if (recordAdded instanceof Expense) {","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"tzexern"},"content":"            System.out.println(MESSAGE_EXPENSE_SUCCESSFULLY_ADDED);","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"tzexern"},"content":"        } else if (recordAdded instanceof Loan) {","lastModifiedDate":"2021-03-12"},{"lineNumber":82,"author":{"gitId":"tzexern"},"content":"            System.out.println(MESSAGE_LOAN_SUCCESSFULLY_ADDED);","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"tzexern"},"content":"        } else {","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"tzexern"},"content":"            System.out.println(MESSAGE_SAVING_SUCCESSFULLY_ADDED);","lastModifiedDate":"2021-03-12"},{"lineNumber":85,"author":{"gitId":"tzexern"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"tzexern"},"content":"        int formattedIndex \u003d index - 1;","lastModifiedDate":"2021-03-12"},{"lineNumber":87,"author":{"gitId":"tzexern"},"content":"        System.out.println();","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"tzexern"},"content":"        printIndex(formattedIndex);","lastModifiedDate":"2021-03-12"},{"lineNumber":89,"author":{"gitId":"tzexern"},"content":"        System.out.println(recordAdded);","lastModifiedDate":"2021-03-12"},{"lineNumber":90,"author":{"gitId":"jonahtwl"},"content":"        System.out.println();","lastModifiedDate":"2021-03-09"},{"lineNumber":91,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-09"},{"lineNumber":92,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":93,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":94,"author":{"gitId":"jonahtwl"},"content":"    public String getUserInput() {","lastModifiedDate":"2021-03-08"},{"lineNumber":95,"author":{"gitId":"jonahtwl"},"content":"        System.out.print(FINUX_PREFIX + \" \");","lastModifiedDate":"2021-03-08"},{"lineNumber":96,"author":{"gitId":"jonahtwl"},"content":"        return input.nextLine().strip();","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":98,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":99,"author":{"gitId":"jonahtwl"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2021-03-08"},{"lineNumber":100,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-03-08"},{"lineNumber":101,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(MESSAGE_LOADING);","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":105,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":106,"author":{"gitId":"jonahtwl"},"content":"    public void printGoodByeMessage() {","lastModifiedDate":"2021-03-08"},{"lineNumber":107,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(MESSAGE_GOODBYE);","lastModifiedDate":"2021-03-08"},{"lineNumber":108,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":109,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":110,"author":{"gitId":"marklowsk"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2021-03-09"},{"lineNumber":111,"author":{"gitId":"marklowsk"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-09"},{"lineNumber":112,"author":{"gitId":"marklowsk"},"content":"        System.out.println(message);","lastModifiedDate":"2021-03-09"},{"lineNumber":113,"author":{"gitId":"marklowsk"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-09"},{"lineNumber":114,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":115,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":116,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void printExpenses(RecordList recordList) {","lastModifiedDate":"2021-03-11"},{"lineNumber":117,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":118,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\"Here is your Expense list:\");","lastModifiedDate":"2021-03-15"},{"lineNumber":119,"author":{"gitId":"gerardtwk"},"content":"        for (int i \u003d 0; i \u003c recordList.getRecordCount(); i++) {","lastModifiedDate":"2021-03-11"},{"lineNumber":120,"author":{"gitId":"gerardtwk"},"content":"            Record currentRecord \u003d recordList.getRecordAt(i);","lastModifiedDate":"2021-03-11"},{"lineNumber":121,"author":{"gitId":"gerardtwk"},"content":"            if (currentRecord instanceof Expense) {","lastModifiedDate":"2021-03-11"},{"lineNumber":122,"author":{"gitId":"tzexern"},"content":"                printIndex(i);","lastModifiedDate":"2021-03-12"},{"lineNumber":123,"author":{"gitId":"gerardtwk"},"content":"                System.out.println(currentRecord);","lastModifiedDate":"2021-03-11"},{"lineNumber":124,"author":{"gitId":"gerardtwk"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":125,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":126,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":127,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":128,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":129,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void printLoans(RecordList recordList) {","lastModifiedDate":"2021-03-11"},{"lineNumber":130,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":131,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\"Here is your Loan list:\");","lastModifiedDate":"2021-03-15"},{"lineNumber":132,"author":{"gitId":"gerardtwk"},"content":"        for (int i \u003d 0; i \u003c recordList.getRecordCount(); i++) {","lastModifiedDate":"2021-03-11"},{"lineNumber":133,"author":{"gitId":"gerardtwk"},"content":"            Record currentRecord \u003d recordList.getRecordAt(i);","lastModifiedDate":"2021-03-11"},{"lineNumber":134,"author":{"gitId":"gerardtwk"},"content":"            if (currentRecord instanceof Loan) {","lastModifiedDate":"2021-03-11"},{"lineNumber":135,"author":{"gitId":"tzexern"},"content":"                printIndex(i);","lastModifiedDate":"2021-03-12"},{"lineNumber":136,"author":{"gitId":"gerardtwk"},"content":"                System.out.println(currentRecord);","lastModifiedDate":"2021-03-11"},{"lineNumber":137,"author":{"gitId":"gerardtwk"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":138,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":139,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":140,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":141,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":142,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void printSavings(RecordList recordList) {","lastModifiedDate":"2021-03-11"},{"lineNumber":143,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":144,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\"Here is your Saving list:\");","lastModifiedDate":"2021-03-15"},{"lineNumber":145,"author":{"gitId":"gerardtwk"},"content":"        for (int i \u003d 0; i \u003c recordList.getRecordCount(); i++) {","lastModifiedDate":"2021-03-11"},{"lineNumber":146,"author":{"gitId":"gerardtwk"},"content":"            Record currentRecord \u003d recordList.getRecordAt(i);","lastModifiedDate":"2021-03-11"},{"lineNumber":147,"author":{"gitId":"gerardtwk"},"content":"            if (currentRecord instanceof Saving) {","lastModifiedDate":"2021-03-11"},{"lineNumber":148,"author":{"gitId":"tzexern"},"content":"                printIndex(i);","lastModifiedDate":"2021-03-12"},{"lineNumber":149,"author":{"gitId":"gerardtwk"},"content":"                System.out.println(currentRecord);","lastModifiedDate":"2021-03-11"},{"lineNumber":150,"author":{"gitId":"gerardtwk"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":151,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":152,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":153,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":154,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":155,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":156,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the total expenses in 2 decimal place.","lastModifiedDate":"2021-03-14"},{"lineNumber":157,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList contains the full list of records.","lastModifiedDate":"2021-03-14"},{"lineNumber":158,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":159,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void printTotalAmountExpense(RecordList recordList) {","lastModifiedDate":"2021-03-11"},{"lineNumber":160,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":161,"author":{"gitId":"LeeHanYongAndy"},"content":"        BigDecimal totalAmount \u003d new BigDecimal(\"0\");","lastModifiedDate":"2021-03-13"},{"lineNumber":162,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (int i \u003d 0; i \u003c recordList.getRecordCount(); i++) {","lastModifiedDate":"2021-03-11"},{"lineNumber":163,"author":{"gitId":"LeeHanYongAndy"},"content":"            Record currentRecord \u003d recordList.getRecordAt(i);","lastModifiedDate":"2021-03-11"},{"lineNumber":164,"author":{"gitId":"LeeHanYongAndy"},"content":"            if (currentRecord instanceof Expense) {","lastModifiedDate":"2021-03-11"},{"lineNumber":165,"author":{"gitId":"LeeHanYongAndy"},"content":"                totalAmount \u003d totalAmount.add(currentRecord.getAmount());","lastModifiedDate":"2021-03-13"},{"lineNumber":166,"author":{"gitId":"LeeHanYongAndy"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":167,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":168,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(MESSAGE_TOTAL_EXPENSE + totalAmount.setScale(2, RoundingMode.HALF_EVEN));","lastModifiedDate":"2021-03-13"},{"lineNumber":169,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":170,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":171,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":172,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":173,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the total loan in 2 decimal place.","lastModifiedDate":"2021-03-14"},{"lineNumber":174,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList contains the full list of records.","lastModifiedDate":"2021-03-14"},{"lineNumber":175,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":176,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void printTotalAmountLoan(RecordList recordList) {","lastModifiedDate":"2021-03-11"},{"lineNumber":177,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":178,"author":{"gitId":"LeeHanYongAndy"},"content":"        BigDecimal totalAmount \u003d new BigDecimal(\"0\");","lastModifiedDate":"2021-03-13"},{"lineNumber":179,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (int i \u003d 0; i \u003c recordList.getRecordCount(); i++) {","lastModifiedDate":"2021-03-11"},{"lineNumber":180,"author":{"gitId":"LeeHanYongAndy"},"content":"            Record currentRecord \u003d recordList.getRecordAt(i);","lastModifiedDate":"2021-03-11"},{"lineNumber":181,"author":{"gitId":"LeeHanYongAndy"},"content":"            if (currentRecord instanceof Loan) {","lastModifiedDate":"2021-03-11"},{"lineNumber":182,"author":{"gitId":"LeeHanYongAndy"},"content":"                totalAmount \u003d totalAmount.add(currentRecord.getAmount());","lastModifiedDate":"2021-03-13"},{"lineNumber":183,"author":{"gitId":"LeeHanYongAndy"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":184,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":185,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(MESSAGE_TOTAL_LOAN + totalAmount.setScale(2, RoundingMode.HALF_EVEN));","lastModifiedDate":"2021-03-13"},{"lineNumber":186,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":187,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":188,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":189,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":190,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the total saving in 2 decimal place.","lastModifiedDate":"2021-03-14"},{"lineNumber":191,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList contains the full list of records.","lastModifiedDate":"2021-03-14"},{"lineNumber":192,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":193,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void printTotalAmountSaving(RecordList recordList) {","lastModifiedDate":"2021-03-11"},{"lineNumber":194,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":195,"author":{"gitId":"LeeHanYongAndy"},"content":"        BigDecimal totalAmount \u003d new BigDecimal(\"0\");","lastModifiedDate":"2021-03-13"},{"lineNumber":196,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (int i \u003d 0; i \u003c recordList.getRecordCount(); i++) {","lastModifiedDate":"2021-03-11"},{"lineNumber":197,"author":{"gitId":"LeeHanYongAndy"},"content":"            Record currentRecord \u003d recordList.getRecordAt(i);","lastModifiedDate":"2021-03-11"},{"lineNumber":198,"author":{"gitId":"LeeHanYongAndy"},"content":"            if (currentRecord instanceof Saving) {","lastModifiedDate":"2021-03-11"},{"lineNumber":199,"author":{"gitId":"LeeHanYongAndy"},"content":"                totalAmount \u003d totalAmount.add(currentRecord.getAmount());","lastModifiedDate":"2021-03-13"},{"lineNumber":200,"author":{"gitId":"LeeHanYongAndy"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":201,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":202,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(MESSAGE_TOTAL_SAVING + totalAmount.setScale(2, RoundingMode.HALF_EVEN));","lastModifiedDate":"2021-03-13"},{"lineNumber":203,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":204,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":205,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":206,"author":{"gitId":"tzexern"},"content":"    public void printIndex(int index) {","lastModifiedDate":"2021-03-12"},{"lineNumber":207,"author":{"gitId":"tzexern"},"content":"        int formattedIndex \u003d index + 1;","lastModifiedDate":"2021-03-12"},{"lineNumber":208,"author":{"gitId":"tzexern"},"content":"        System.out.print(formattedIndex + \". \");","lastModifiedDate":"2021-03-12"},{"lineNumber":209,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":210,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"tzexern":23,"jonahtwl":71,"LeeHanYongAndy":71,"marklowsk":6,"gerardtwk":39}},{"path":"src/test/java/seedu/duke/RecordListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"package seedu.duke;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Expense;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Saving;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Loan;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"import static seedu.duke.common.Validators.validateDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"public class RecordListTest {","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":"    public void addRecord_expenseLoanSavingObjs_success() {","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"        RecordList records \u003d getPopulatedRecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"gerardtwk"},"content":"        assertEquals(3, records.getRecordCount(),","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"gerardtwk"},"content":"                \"Failed test \u0027addRecord_expenseLoanSavingObjs_success\u0027, expected a record count of 3 but \"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":"                        + \"RecordList::getRecordCount() returned \" + records.getRecordCount());","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"gerardtwk"},"content":"        assertEquals(\"[E][2020-01-01] electric bills \", records.getRecordAt(0).toString(),","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"                \"Failed test \u0027addRecord_expenseLoanSavingObjs_success\u0027, wrong record object at index 0 of \"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"gerardtwk"},"content":"                        + \"record list\");","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"gerardtwk"},"content":"        assertEquals(\"[L][2020-01-01] loan to bob [ ]\", records.getRecordAt(1).toString(),","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"gerardtwk"},"content":"                \"Failed test \u0027addRecord_expenseLoanSavingObjs_success\u0027, wrong record object at index 1 of \"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"gerardtwk"},"content":"                        + \"record list\");","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"gerardtwk"},"content":"        assertEquals(\"[S][2020-01-01] red packet \", records.getRecordAt(2).toString(),","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"gerardtwk"},"content":"                \"Failed test \u0027addRecord_expenseLoanSavingObjs_success\u0027, wrong record object at index 2 of \"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"gerardtwk"},"content":"                        + \"record list\");","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"gerardtwk"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"gerardtwk"},"content":"    public void deleteRecordAt_indexOfAddedRecordToDelete_success() {","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"gerardtwk"},"content":"        RecordList records \u003d getPopulatedRecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"gerardtwk"},"content":"        records.deleteRecordAt(1);","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"gerardtwk"},"content":"        assertEquals(2, records.getRecordCount(),","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"gerardtwk"},"content":"                \"Failed test \u0027deleteRecordAt_indexOfAddedRecordToDelete_success\u0027, expected a record count of 2 but \"","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"gerardtwk"},"content":"                        + \"RecordList::getRecordCount() returned \" + records.getRecordCount());","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"gerardtwk"},"content":"        assertEquals(\"[E][2020-01-01] electric bills \", records.getRecordAt(0).toString(),","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"gerardtwk"},"content":"                \"Failed test \u0027deleteRecordAt_indexOfAddedRecordToDelete_success\u0027, wrong record object at index 0 of \"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"gerardtwk"},"content":"                        + \"record list\");","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"gerardtwk"},"content":"        assertEquals(\"[S][2020-01-01] red packet \", records.getRecordAt(1).toString(),","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"gerardtwk"},"content":"                \"Failed test \u0027deleteRecordAt_indexOfAddedRecordToDelete_success\u0027, wrong record object at index 1 of \"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"gerardtwk"},"content":"                        + \"record list\");","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"gerardtwk"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"gerardtwk"},"content":"    public void deleteAllRecords_noTestInputs_success() {","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"gerardtwk"},"content":"        RecordList records \u003d getPopulatedRecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"gerardtwk"},"content":"        records.deleteAllRecords();","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"gerardtwk"},"content":"        assertTrue(records.isEmpty(), \"Failed test \u0027deleteAllRecords_noTestInputs_success\u0027, expected an empty \"","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"gerardtwk"},"content":"                + \"record list but RecordList::isEmpty() returned false\");","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"gerardtwk"},"content":"        assertEquals(0, records.getRecordCount(),","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"gerardtwk"},"content":"                \"Failed test \u0027deleteAllRecords_noTestInputs_success\u0027, expected a record count of 0 but \"","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"gerardtwk"},"content":"                        + \"RecordList::getRecordCount() returned \" + records.getRecordCount());","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"gerardtwk"},"content":"    private RecordList getPopulatedRecordList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"gerardtwk"},"content":"        RecordList records \u003d new RecordList();","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"LeeHanYongAndy"},"content":"        records.addRecord(new Expense(new BigDecimal(\"220.50\"), validateDate(\"2020/01/01\"), \"electric bills\"));","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"LeeHanYongAndy"},"content":"        records.addRecord(new Loan(new BigDecimal(\"100\"), validateDate(\"2020/01/01\"), \"loan to bob\"));","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"LeeHanYongAndy"},"content":"        records.addRecord(new Saving(new BigDecimal(\"20\"), validateDate(\"2020/01/01\"), \"red packet\"));","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"gerardtwk"},"content":"        return records;","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":66,"author":{"gitId":"gerardtwk"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"LeeHanYongAndy":6,"gerardtwk":60}},{"path":"src/test/java/seedu/duke/command/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.parser.ParserHandler;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Expense;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Loan;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Saving;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.common.Validators.validateDate;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"gerardtwk"},"content":"class ListCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"gerardtwk"},"content":"    public void executeListExpense_listExpenseCmd_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"gerardtwk"},"content":"                + \"Here is your Expense list:\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"gerardtwk"},"content":"                + \"1. [E][2020-01-01] electric bills \" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"gerardtwk"},"content":"                + \"2. [E][2020-01-02] phone bills \" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"gerardtwk"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"gerardtwk"},"content":"        runListCmdTest(\"executeListExpense_listExpenseCmd_success\", \"expense\", \"list -e\", expectedOutput);","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"gerardtwk"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"gerardtwk"},"content":"    public void executeListLoan_listLoanCmd_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"gerardtwk"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"gerardtwk"},"content":"                + \"Here is your Loan list:\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"gerardtwk"},"content":"                + \"2. [L][2020-01-01] loan to bob [ ]\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"gerardtwk"},"content":"                + \"3. [L][2020-01-02] loan to alice [ ]\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"gerardtwk"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"gerardtwk"},"content":"        runListCmdTest(\"executeListLoan_listLoanCmd_success\", \"loan\", \"list -l\", expectedOutput);","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"gerardtwk"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"gerardtwk"},"content":"    public void executeListSaving_listSavingCmd_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"gerardtwk"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"gerardtwk"},"content":"                + \"Here is your Saving list:\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"gerardtwk"},"content":"                + \"3. [S][2020-01-01] red packet \" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"gerardtwk"},"content":"                + \"4. [S][2020-01-02] pocket money \" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"gerardtwk"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"gerardtwk"},"content":"        runListCmdTest(\"executeListSaving_listSavingCmd_success\", \"saving\", \"list -s\", expectedOutput);","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"gerardtwk"},"content":"    private void runListCmdTest(String listCmdTestName, String listCmdTypeToTest,","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"gerardtwk"},"content":"                                String listCmdStr, String expectedOutput) {","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"gerardtwk"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"gerardtwk"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"gerardtwk"},"content":"        RecordList records \u003d getPopulatedRecordList(listCmdTypeToTest);","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"gerardtwk"},"content":"        Command command \u003d CommandHandler.parseCommand(ParserHandler.getParseInput(listCmdStr), records);","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"gerardtwk"},"content":"        assertTrue(command instanceof ListCommand, String.format(\"Failed test \u0027%s\u0027, \"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"gerardtwk"},"content":"                + \"command object returned by parseCommand() is not an instance of ListCommand.\", listCmdTestName));","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"gerardtwk"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"gerardtwk"},"content":"        ByteArrayOutputStream listCmdBos \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"gerardtwk"},"content":"        System.setOut(new PrintStream(listCmdBos));","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"gerardtwk"},"content":"        command.execute(records, ui, storage);","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"gerardtwk"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"gerardtwk"},"content":"        assertTrue(listCmdBos.toString().equals(expectedOutput), String.format(\"Failed test \u0027%s\u0027, wrong output.\",","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"gerardtwk"},"content":"                listCmdTestName));","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"gerardtwk"},"content":"    private RecordList getPopulatedRecordList(String listCmdTypeToTest) {","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"gerardtwk"},"content":"        RecordList records \u003d new RecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"gerardtwk"},"content":"        records.addRecord(new Expense(new BigDecimal(\"220.50\"), validateDate(\"2020/01/01\"), \"electric bills\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"gerardtwk"},"content":"        if (listCmdTypeToTest.equals(\"expense\")) {","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"gerardtwk"},"content":"            records.addRecord(new Expense(new BigDecimal(\"420.50\"), validateDate(\"2020/01/02\"), \"phone bills\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"gerardtwk"},"content":"        records.addRecord(new Loan(new BigDecimal(\"100\"), validateDate(\"2020/01/01\"), \"loan to bob\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"gerardtwk"},"content":"        if (listCmdTypeToTest.equals(\"loan\")) {","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"gerardtwk"},"content":"            records.addRecord(new Loan(new BigDecimal(\"300\"), validateDate(\"2020/01/02\"), \"loan to alice\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"gerardtwk"},"content":"        records.addRecord(new Saving(new BigDecimal(\"20\"), validateDate(\"2020/01/01\"), \"red packet\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"gerardtwk"},"content":"        if (listCmdTypeToTest.equals(\"saving\")) {","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"gerardtwk"},"content":"            records.addRecord(new Saving(new BigDecimal(\"40\"), validateDate(\"2020/01/02\"), \"pocket money\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"gerardtwk"},"content":"        return records;","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"gerardtwk"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"gerardtwk":88}},{"path":"src/test/java/seedu/duke/command/RemoveCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"import seedu.duke.parser.ParserHandler;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":"import seedu.duke.record.Expense;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"import seedu.duke.record.Loan;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":"import seedu.duke.record.Saving;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"tzexern"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"import static seedu.duke.common.Validators.validateDate;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"class RemoveCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":"    void executeRemoveExpense_removeExpenseCmd_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"tzexern"},"content":"        RecordList records \u003d new RecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":"        records.addRecord(new Expense(new BigDecimal(\"220.50\"), validateDate(\"2020/01/01\"), \"electric bills\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"        records.addRecord(new Expense(new BigDecimal(\"420.50\"), validateDate(\"2020/01/02\"), \"phone bills\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"        records.addRecord(new Loan(new BigDecimal(\"100\"), validateDate(\"2020/01/01\"), \"loan to bob\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":"        records.addRecord(new Saving(new BigDecimal(\"20\"), validateDate(\"2020/01/01\"), \"red packet\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"        String removeExpenseCmd \u003d \"remove -i 1\";","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"        Command command \u003d CommandHandler.parseCommand(ParserHandler.getParseInput(removeExpenseCmd), records);","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"        assertTrue(command instanceof RemoveCommand, \"Failed test \u0027executeRemoveExpense_removeExpenseCmd_success\u0027, \"","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":"                + \"command object returned by parseCommand() is not an instance of RemoveCommand\");","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"tzexern"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"        ByteArrayOutputStream removeCmdBos \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"        System.setOut(new PrintStream(removeCmdBos));","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"tzexern"},"content":"                + \"This record will be removed: [E][2020-01-01] electric bills \" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"tzexern"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"tzexern"},"content":"        command.execute(records, ui, storage);","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"tzexern"},"content":"        assertTrue(removeCmdBos.toString().equals(expectedOutput), \"Failed test \"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"tzexern"},"content":"                + \"\u0027executeRemoveExpense_removeExpenseCmd_success\u0027, wrong output.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"tzexern"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"tzexern"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"tzexern"},"content":"    void executeRemoveLoan_removeLoanCmd_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"tzexern"},"content":"        RecordList records \u003d new RecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"tzexern"},"content":"        records.addRecord(new Expense(new BigDecimal(\"220.50\"), validateDate(\"2020/01/01\"), \"electric bills\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"tzexern"},"content":"        records.addRecord(new Expense(new BigDecimal(\"420.50\"), validateDate(\"2020/01/02\"), \"phone bills\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"tzexern"},"content":"        records.addRecord(new Loan(new BigDecimal(\"100\"), validateDate(\"2020/01/01\"), \"loan to bob\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"tzexern"},"content":"        records.addRecord(new Saving(new BigDecimal(\"20\"), validateDate(\"2020/01/01\"), \"red packet\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"tzexern"},"content":"        String removeLoanCmd \u003d \"remove -i 3\";","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"tzexern"},"content":"        Command command \u003d CommandHandler.parseCommand(ParserHandler.getParseInput(removeLoanCmd), records);","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"tzexern"},"content":"        assertTrue(command instanceof RemoveCommand, \"Failed test \u0027executeRemoveLoan_removeLoanCmd_success\u0027, \"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"tzexern"},"content":"                + \"command object returned by parseCommand() is not an instance of RemoveCommand\");","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"tzexern"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"tzexern"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"tzexern"},"content":"        ByteArrayOutputStream removeCmdBos \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"tzexern"},"content":"        System.setOut(new PrintStream(removeCmdBos));","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"tzexern"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"tzexern"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"tzexern"},"content":"                + \"This record will be removed: [L][2020-01-01] loan to bob [ ]\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"tzexern"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"tzexern"},"content":"        command.execute(records, ui, storage);","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"tzexern"},"content":"        assertTrue(removeCmdBos.toString().equals(expectedOutput), \"Failed test \"","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"tzexern"},"content":"                + \"\u0027executeRemoveLoan_removeLoanCmd_success\u0027, wrong output.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"tzexern"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"tzexern"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"tzexern"},"content":"    void executeRemoveSaving_removeSavingCmd_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"tzexern"},"content":"        RecordList records \u003d new RecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"tzexern"},"content":"        records.addRecord(new Expense(new BigDecimal(\"220.50\"), validateDate(\"2020/01/01\"), \"electric bills\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"tzexern"},"content":"        records.addRecord(new Expense(new BigDecimal(\"420.50\"), validateDate(\"2020/01/02\"), \"phone bills\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"tzexern"},"content":"        records.addRecord(new Loan(new BigDecimal(\"100\"), validateDate(\"2020/01/01\"), \"loan to bob\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"tzexern"},"content":"        records.addRecord(new Saving(new BigDecimal(\"20\"), validateDate(\"2020/01/01\"), \"red packet\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"tzexern"},"content":"        String removeSavingCmd \u003d \"remove -i 4\";","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"tzexern"},"content":"        Command command \u003d CommandHandler.parseCommand(ParserHandler.getParseInput(removeSavingCmd), records);","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"tzexern"},"content":"        assertTrue(command instanceof RemoveCommand, \"Failed test \u0027executeRemoveSaving_removeSavingCmd_success\u0027, \"","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"tzexern"},"content":"                + \"command object returned by parseCommand() is not an instance of RemoveCommand\");","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"tzexern"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"tzexern"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"tzexern"},"content":"        ByteArrayOutputStream removeCmdBos \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"tzexern"},"content":"        System.setOut(new PrintStream(removeCmdBos));","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"tzexern"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"tzexern"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"tzexern"},"content":"                + \"This record will be removed: [S][2020-01-01] red packet \" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"tzexern"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"tzexern"},"content":"        command.execute(records, ui, storage);","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"tzexern"},"content":"        assertTrue(removeCmdBos.toString().equals(expectedOutput), \"Failed test \"","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"tzexern"},"content":"                + \"\u0027executeRemoveSaving_removeSavingCmd_success\u0027, wrong output.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"tzexern"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"tzexern"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"tzexern":101}},{"path":"src/test/java/seedu/duke/command/ReturnCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.parser.ParserHandler;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.Loan;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":"import static seedu.duke.common.Validators.validateDate;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"public class ReturnCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"    public void executeReturnCommand_returnCmd_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"        String testName \u003d \"executeReturnCommand_returnCmd_success\";","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"                + \"Loan marked as returned: [L][2021-03-15] Loan to Andy [v]\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"jonahtwl"},"content":"        String returnCmdInput \u003d \"return -i 1\";","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":"        runReturnCmdTest(expectedOutput, returnCmdInput, testName);","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"    public void executeReturnCommand_returnCmdTwo_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"        String testName \u003d \"executeReturnCommand_returnCmdTwo_success\";","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"                + \"Loan marked as returned: [L][2021-03-16] Loan to Jason [v]\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"jonahtwl"},"content":"        String returnCmdInput \u003d \"return -i 3\";","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"        runReturnCmdTest(expectedOutput, returnCmdInput, testName);","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"jonahtwl"},"content":"    private void runReturnCmdTest(String expectedOutput, String returnCmdInput, String testName) {","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"jonahtwl"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"jonahtwl"},"content":"        RecordList loans \u003d getLoanList();","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"jonahtwl"},"content":"        ByteArrayOutputStream returnCmdBos \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"jonahtwl"},"content":"        System.setOut(new PrintStream(returnCmdBos));","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"jonahtwl"},"content":"        Command command \u003d CommandHandler.parseCommand(ParserHandler.getParseInput(returnCmdInput), loans);","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"jonahtwl"},"content":"        assertTrue(command instanceof ReturnCommand,","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"jonahtwl"},"content":"                String.format(\"Failed test \u0027%s\u0027 command object \"","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"jonahtwl"},"content":"                        + \"returned by parseCommand() is not an instance of ReturnCommand\", testName));","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"jonahtwl"},"content":"        command.execute(loans, ui, storage);","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"jonahtwl"},"content":"        System.setOut(System.out);","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"jonahtwl"},"content":"        assertTrue(returnCmdBos.toString().equals(expectedOutput), String.format(\"Failed test \"","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"jonahtwl"},"content":"            + \"\u0027%s\u0027, wrong output.\", testName));","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"jonahtwl"},"content":"    private RecordList getLoanList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"jonahtwl"},"content":"        RecordList loans \u003d new RecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"jonahtwl"},"content":"        loans.addRecord(new Loan(new BigDecimal(\"43.28\"), validateDate(\"2021/03/15\"), \"Loan to Andy\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"jonahtwl"},"content":"        loans.addRecord(new Loan(new BigDecimal(\"89.23\"), validateDate(\"2021/03/17\"), \"Loan to Mark\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"jonahtwl"},"content":"        loans.addRecord(new Loan(new BigDecimal(\"5.67\"), validateDate(\"2021/03/16\"), \"Loan to Jason\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"jonahtwl"},"content":"        return loans;","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"jonahtwl"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"jonahtwl":65}},{"path":"src/test/java/seedu/duke/command/UtilsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.ArgumentType;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.parser.ParserHandler;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.AddCommand.COMMAND_ADD;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.HelpCommand.COMMAND_HELP;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.getOptionValue;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.isOption;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateArguments;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateOptions;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.ViewCommand.COMMAND_VIEW;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_AMOUNT;","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_DATE;","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_EXPENSE;","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_LOAN;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_SAVING;","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"class UtilsTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final ArgumentType[] ARG_TYPE_ORDER_CMD_HELP \u003d {","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArgumentType.COMMAND,","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArgumentType.VALUE","lastModifiedDate":"2021-03-19"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"    };","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"    private static final ArgumentType[] ARG_TYPE_ORDER_CMD_VIEW \u003d {","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.COMMAND,","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.OPTION,","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.EMPTY_VALUE","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"    };","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"marklowsk"},"content":"    private static final String[] OR_OPTIONS \u003d {OPTION_EXPENSE, OPTION_LOAN, OPTION_SAVING};","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"marklowsk"},"content":"    private static final String[] VALID_OPTIONS_ADD \u003d {","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"marklowsk"},"content":"        OPTION_EXPENSE, OPTION_LOAN, OPTION_SAVING, OPTION_AMOUNT, OPTION_DATE","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"marklowsk"},"content":"    };","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"marklowsk"},"content":"    @DisplayName(\"[isOption] - Valid Options - success:\")","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"marklowsk"},"content":"    public void isOption_optionMatch_success() {","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"marklowsk"},"content":"        assertAll(","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-e\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-l\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-s\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-d\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-a\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-i\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-E\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-L\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-S\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-D\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-A\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-I\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-p\"))","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"marklowsk"},"content":"        );","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"marklowsk"},"content":"    @DisplayName(\"[isOption] - Invalid Options - failure:\")","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"marklowsk"},"content":"    public void isOption_invalidOptions() {","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"marklowsk"},"content":"        assertAll(","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertFalse(isOption(\"--\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertFalse(isOption(\"-[\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertFalse(isOption(\"- \")),","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertFalse(isOption(\"-1\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertFalse(isOption(\"-9\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertFalse(isOption(\"-hello\"))","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"marklowsk"},"content":"        );","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"marklowsk"},"content":"    private void validateArguments_improperCommand_helper(ArrayList\u003cString\u003e arguments,","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"marklowsk"},"content":"                                                          ArgumentType[] argumentTypeOrder,","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"marklowsk"},"content":"                                                          String expected,","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"marklowsk"},"content":"                                                          String command) {","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"marklowsk"},"content":"        CommandException e \u003d assertThrows(","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"marklowsk"},"content":"                CommandException.class,","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"marklowsk"},"content":"            () -\u003e validateArguments(arguments, argumentTypeOrder, command)","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"marklowsk"},"content":"        );","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"marklowsk"},"content":"        if (!e.getMessage().equals(expected)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"marklowsk"},"content":"            fail(arguments.toString() + \" - Error: \" + e.getMessage());","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"marklowsk"},"content":"    @DisplayName(\"[validateArguments] - help Command - success:\")","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"marklowsk"},"content":"    public void validateArguments_properHelp_success() {","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"marklowsk"},"content":"        ArrayList\u003cString\u003e command \u003d ParserHandler.getParseInput(\"help\");","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"marklowsk"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"marklowsk"},"content":"            validateArguments(command, ARG_TYPE_ORDER_CMD_HELP, COMMAND_HELP);","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"marklowsk"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"marklowsk"},"content":"            fail(e.getMessage());","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"marklowsk"},"content":"    @DisplayName(\"[validateArguments] - help Command - failure:\")","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":104,"author":{"gitId":"marklowsk"},"content":"    public void validateArguments_improperHelp() {","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"LeeHanYongAndy"},"content":"        // new test case to be written.","lastModifiedDate":"2021-03-19"},{"lineNumber":106,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"marklowsk"},"content":"    @DisplayName(\"[validateArguments] - view Command - success:\")","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"marklowsk"},"content":"    public void validateArguments_properView_success() {","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"marklowsk"},"content":"        // By assumption that options are valid and order is correct.","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"marklowsk"},"content":"        ArrayList\u003cString\u003e command1 \u003d ParserHandler.getParseInput(\"view -e\");","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"marklowsk"},"content":"        ArrayList\u003cString\u003e command2 \u003d ParserHandler.getParseInput(\"view -l\");","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"marklowsk"},"content":"        ArrayList\u003cString\u003e command3 \u003d ParserHandler.getParseInput(\"view -s\");","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"marklowsk"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"marklowsk"},"content":"            validateArguments(command1, ARG_TYPE_ORDER_CMD_VIEW, COMMAND_VIEW);","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"marklowsk"},"content":"            validateArguments(command2, ARG_TYPE_ORDER_CMD_VIEW, COMMAND_VIEW);","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"marklowsk"},"content":"            validateArguments(command3, ARG_TYPE_ORDER_CMD_VIEW, COMMAND_VIEW);","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"marklowsk"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"marklowsk"},"content":"            fail(e.getMessage());","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":123,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"marklowsk"},"content":"    @DisplayName(\"[validateArguments] - view Command - failure:\")","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"marklowsk"},"content":"    public void validateArguments_improperView() {","lastModifiedDate":"2021-03-14"},{"lineNumber":127,"author":{"gitId":"marklowsk"},"content":"        String expected1 \u003d \"view Command - invalid input: \";","lastModifiedDate":"2021-03-14"},{"lineNumber":128,"author":{"gitId":"marklowsk"},"content":"        String expected25 \u003d \"view Command - not enough arguments.\";","lastModifiedDate":"2021-03-14"},{"lineNumber":129,"author":{"gitId":"marklowsk"},"content":"        String expected34 \u003d \"view Command - too many arguments.\";","lastModifiedDate":"2021-03-14"},{"lineNumber":130,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":131,"author":{"gitId":"marklowsk"},"content":"        ArrayList\u003cString\u003e command1 \u003d ParserHandler.getParseInput(\"view -l abc\");","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"marklowsk"},"content":"        validateArguments_improperCommand_helper(command1, ARG_TYPE_ORDER_CMD_VIEW,","lastModifiedDate":"2021-03-14"},{"lineNumber":133,"author":{"gitId":"marklowsk"},"content":"                expected1 + \"abc\", COMMAND_VIEW);","lastModifiedDate":"2021-03-14"},{"lineNumber":134,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":135,"author":{"gitId":"marklowsk"},"content":"        ArrayList\u003cString\u003e command2 \u003d ParserHandler.getParseInput(\"view -z -z\");","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"marklowsk"},"content":"        validateArguments_improperCommand_helper(command2, ARG_TYPE_ORDER_CMD_VIEW,","lastModifiedDate":"2021-03-14"},{"lineNumber":137,"author":{"gitId":"marklowsk"},"content":"                expected25, COMMAND_VIEW);","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":139,"author":{"gitId":"marklowsk"},"content":"        ArrayList\u003cString\u003e command3 \u003d ParserHandler.getParseInput(\"view -s -s\");","lastModifiedDate":"2021-03-14"},{"lineNumber":140,"author":{"gitId":"marklowsk"},"content":"        validateArguments_improperCommand_helper(command3, ARG_TYPE_ORDER_CMD_VIEW,","lastModifiedDate":"2021-03-14"},{"lineNumber":141,"author":{"gitId":"marklowsk"},"content":"                expected34, COMMAND_VIEW);","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":143,"author":{"gitId":"marklowsk"},"content":"        ArrayList\u003cString\u003e command4 \u003d ParserHandler.getParseInput(\"view -l -l\");","lastModifiedDate":"2021-03-14"},{"lineNumber":144,"author":{"gitId":"marklowsk"},"content":"        validateArguments_improperCommand_helper(command4, ARG_TYPE_ORDER_CMD_VIEW,","lastModifiedDate":"2021-03-14"},{"lineNumber":145,"author":{"gitId":"marklowsk"},"content":"                expected34, COMMAND_VIEW);","lastModifiedDate":"2021-03-14"},{"lineNumber":146,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":147,"author":{"gitId":"marklowsk"},"content":"        ArrayList\u003cString\u003e command5 \u003d ParserHandler.getParseInput(\"view\");","lastModifiedDate":"2021-03-14"},{"lineNumber":148,"author":{"gitId":"marklowsk"},"content":"        validateArguments_improperCommand_helper(command5, ARG_TYPE_ORDER_CMD_VIEW,","lastModifiedDate":"2021-03-14"},{"lineNumber":149,"author":{"gitId":"marklowsk"},"content":"                expected25, COMMAND_VIEW);","lastModifiedDate":"2021-03-14"},{"lineNumber":150,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":151,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":152,"author":{"gitId":"marklowsk"},"content":"    @DisplayName(\"[validateOptions] - Valid options - success:\")","lastModifiedDate":"2021-03-14"},{"lineNumber":153,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":154,"author":{"gitId":"marklowsk"},"content":"    public void validateOptions_validOptions_success() {","lastModifiedDate":"2021-03-14"},{"lineNumber":155,"author":{"gitId":"marklowsk"},"content":"        ArrayList\u003cString\u003e command1 \u003d ParserHandler.getParseInput(\"view -l\");","lastModifiedDate":"2021-03-14"},{"lineNumber":156,"author":{"gitId":"marklowsk"},"content":"        ArrayList\u003cString\u003e command2 \u003d ParserHandler.getParseInput(\"add -s savings -a 200.00 -d 20/1/2021\");","lastModifiedDate":"2021-03-14"},{"lineNumber":157,"author":{"gitId":"marklowsk"},"content":"        ArrayList\u003cString\u003e command3 \u003d ParserHandler.getParseInput(\"add -a 200.00 -d 20/1/2021 -s savings\");","lastModifiedDate":"2021-03-14"},{"lineNumber":158,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":159,"author":{"gitId":"marklowsk"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":160,"author":{"gitId":"marklowsk"},"content":"            validateOptions(command1, COMMAND_VIEW, OR_OPTIONS, OR_OPTIONS);","lastModifiedDate":"2021-03-14"},{"lineNumber":161,"author":{"gitId":"marklowsk"},"content":"            validateOptions(command2, COMMAND_ADD, VALID_OPTIONS_ADD, OR_OPTIONS);","lastModifiedDate":"2021-03-14"},{"lineNumber":162,"author":{"gitId":"marklowsk"},"content":"            validateOptions(command3, COMMAND_ADD, VALID_OPTIONS_ADD, OR_OPTIONS);","lastModifiedDate":"2021-03-14"},{"lineNumber":163,"author":{"gitId":"marklowsk"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":164,"author":{"gitId":"marklowsk"},"content":"            fail();","lastModifiedDate":"2021-03-14"},{"lineNumber":165,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":166,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":167,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":168,"author":{"gitId":"marklowsk"},"content":"    @DisplayName(\"[validateOptions] - Invalid options - failure:\")","lastModifiedDate":"2021-03-14"},{"lineNumber":169,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":170,"author":{"gitId":"marklowsk"},"content":"    public void validateOptions_invalidOptions() {","lastModifiedDate":"2021-03-14"},{"lineNumber":171,"author":{"gitId":"marklowsk"},"content":"        ArrayList\u003cString\u003e command1 \u003d ParserHandler.getParseInput(\"view -l -z\");","lastModifiedDate":"2021-03-14"},{"lineNumber":172,"author":{"gitId":"marklowsk"},"content":"        ArrayList\u003cString\u003e command2 \u003d ParserHandler.getParseInput(\"add -s -a 200.00 -d -d\");","lastModifiedDate":"2021-03-14"},{"lineNumber":173,"author":{"gitId":"marklowsk"},"content":"        ArrayList\u003cString\u003e command3 \u003d ParserHandler.getParseInput(\"add -a -s -s -d\");","lastModifiedDate":"2021-03-14"},{"lineNumber":174,"author":{"gitId":"marklowsk"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":175,"author":{"gitId":"marklowsk"},"content":"                validateOptions(command1, COMMAND_VIEW, OR_OPTIONS, OR_OPTIONS));","lastModifiedDate":"2021-03-14"},{"lineNumber":176,"author":{"gitId":"marklowsk"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":177,"author":{"gitId":"marklowsk"},"content":"                validateOptions(command2, COMMAND_ADD, VALID_OPTIONS_ADD, OR_OPTIONS));","lastModifiedDate":"2021-03-14"},{"lineNumber":178,"author":{"gitId":"marklowsk"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":179,"author":{"gitId":"marklowsk"},"content":"                validateOptions(command3, COMMAND_ADD, VALID_OPTIONS_ADD, OR_OPTIONS));","lastModifiedDate":"2021-03-14"},{"lineNumber":180,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":181,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":182,"author":{"gitId":"marklowsk"},"content":"    @DisplayName(\"[getOptionValue] - Option exists - success:\")","lastModifiedDate":"2021-03-14"},{"lineNumber":183,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":184,"author":{"gitId":"marklowsk"},"content":"    public void getOptionValue_optionExists_success() {","lastModifiedDate":"2021-03-14"},{"lineNumber":185,"author":{"gitId":"marklowsk"},"content":"        ArrayList\u003cString\u003e command1 \u003d ParserHandler.getParseInput(\"add -s savings -a 200.00 -d 20/1/2021\");","lastModifiedDate":"2021-03-14"},{"lineNumber":186,"author":{"gitId":"marklowsk"},"content":"        ArrayList\u003cString\u003e command2 \u003d ParserHandler.getParseInput(\"add -a 200.00 -d 20/1/2021 -s savings\");","lastModifiedDate":"2021-03-14"},{"lineNumber":187,"author":{"gitId":"marklowsk"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":188,"author":{"gitId":"marklowsk"},"content":"            assertEquals(\"200.00\", getOptionValue(command1, COMMAND_ADD, \"-a\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":189,"author":{"gitId":"marklowsk"},"content":"            assertEquals(\"20/1/2021\", getOptionValue(command1, COMMAND_ADD, \"-d\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":190,"author":{"gitId":"marklowsk"},"content":"            assertEquals(\"savings\", getOptionValue(command1, COMMAND_ADD, \"-s\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":191,"author":{"gitId":"marklowsk"},"content":"            assertEquals(\"200.00\", getOptionValue(command2, COMMAND_ADD, \"-a\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":192,"author":{"gitId":"marklowsk"},"content":"            assertEquals(\"20/1/2021\", getOptionValue(command2, COMMAND_ADD, \"-d\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":193,"author":{"gitId":"marklowsk"},"content":"            assertEquals(\"savings\", getOptionValue(command2, COMMAND_ADD, \"-s\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":194,"author":{"gitId":"marklowsk"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":195,"author":{"gitId":"marklowsk"},"content":"            fail();","lastModifiedDate":"2021-03-14"},{"lineNumber":196,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":197,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":198,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":199,"author":{"gitId":"marklowsk"},"content":"    @DisplayName(\"[getOptionValue] - Option empty - failure:\")","lastModifiedDate":"2021-03-14"},{"lineNumber":200,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":201,"author":{"gitId":"marklowsk"},"content":"    public void getOptionValue_optionEmpty() {","lastModifiedDate":"2021-03-14"},{"lineNumber":202,"author":{"gitId":"marklowsk"},"content":"        ArrayList\u003cString\u003e command1 \u003d ParserHandler.getParseInput(\"add -s -a -d\");","lastModifiedDate":"2021-03-14"},{"lineNumber":203,"author":{"gitId":"marklowsk"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":204,"author":{"gitId":"marklowsk"},"content":"                getOptionValue(command1, COMMAND_ADD, \"-a\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":205,"author":{"gitId":"marklowsk"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":206,"author":{"gitId":"marklowsk"},"content":"                getOptionValue(command1, COMMAND_ADD, \"-d\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":207,"author":{"gitId":"marklowsk"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":208,"author":{"gitId":"marklowsk"},"content":"                getOptionValue(command1, COMMAND_ADD, \"-s\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":209,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":210,"author":{"gitId":"marklowsk"},"content":"        ArrayList\u003cString\u003e command2 \u003d ParserHandler.getParseInput(\"add -a 200.00 -d -s savings\");","lastModifiedDate":"2021-03-14"},{"lineNumber":211,"author":{"gitId":"marklowsk"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":212,"author":{"gitId":"marklowsk"},"content":"                getOptionValue(command2, COMMAND_ADD, \"-d\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":213,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":214,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"marklowsk":209,"LeeHanYongAndy":5}},{"path":"src/test/java/seedu/duke/common/ValidatorsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.common;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"import seedu.duke.exception.CustomException;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"LeeHanYongAndy"},"content":"import static seedu.duke.common.Validators.validateAmount;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Validators.validateDate;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"class ValidatorsTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"    void validateDate_properDateFormat_success() {","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"        String[] dateStrings \u003d {","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"            \"13122011\", \"13.1.2011\", \"13-1-2011\", \"13/1/2011\",","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"            \"2011.1.13\", \"2011-1-13\", \"2011/1/13\", \"today\"","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"        };","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"        try {","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"            for (String d : dateStrings) {","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"                validateDate(d);","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"            fail();","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"    void validateDate_improperDateFormat() {","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":"        final int finalCount \u003d 8;","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"        int counter \u003d 0;","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":"        String[] dateStrings \u003d {","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"            \"12345678\", \"13.13.2011\", \"13-13-2011\", \"13 13 2011\",","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"            \"2011 1 13\", \"2011-1/13\", \"2011/1.13\", \"today123\"","lastModifiedDate":"2021-03-19"},{"lineNumber":36,"author":{"gitId":"marklowsk"},"content":"        };","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"marklowsk"},"content":"        for (String d : dateStrings) {","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"            try {","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"                validateDate(d);","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"marklowsk"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"marklowsk"},"content":"                counter++;","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"marklowsk"},"content":"        if (finalCount !\u003d counter) {","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"marklowsk"},"content":"            fail();","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"    void validateAmount_properFormat_expectSuccess() {","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfAmount \u003d {\"0.1\", \"1.0\", \"1\", \"987654321\", \"0.987654321\"};","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"LeeHanYongAndy"},"content":"        try {","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"LeeHanYongAndy"},"content":"            for (String testAmount : arrayOfAmount) {","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"LeeHanYongAndy"},"content":"                validateAmount(testAmount);","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"LeeHanYongAndy"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"LeeHanYongAndy"},"content":"        } catch (NumberFormatException | CustomException e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"LeeHanYongAndy"},"content":"            fail();","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"LeeHanYongAndy"},"content":"    void validateAmount_wrongFormat_expectFailure() {","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"LeeHanYongAndy"},"content":"        int numFailCase \u003d 0;","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfAmount \u003d {\"0\", \"-1\", \"1num1word\", \"wordonly\"};","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (String testAmount : arrayOfAmount) {","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"            try {","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"                validateAmount(testAmount);","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"            } catch (NumberFormatException | CustomException e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"LeeHanYongAndy"},"content":"                numFailCase++;","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"LeeHanYongAndy"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"LeeHanYongAndy"},"content":"        if (arrayOfAmount.length !\u003d numFailCase) {","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"LeeHanYongAndy"},"content":"            fail();","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"marklowsk":46,"LeeHanYongAndy":30}},{"path":"src/test/java/seedu/duke/parser/ParserHandlerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"LeeHanYongAndy"},"content":"import static seedu.duke.parser.ParserHandler.getParseInput;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"class ParserHandlerTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_emptyInput() {","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"LeeHanYongAndy"},"content":"        String input \u003d \"\";","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] expected \u003d {\"\"};","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] actual \u003d getParseInput(input).toArray(new String[0]);","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"LeeHanYongAndy"},"content":"        assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_oneWord() {","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfTestCase \u003d {\"add\", \"add \", \" add\", \" add \"};","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] expected \u003d {\"add\"};","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (String testCase : arrayOfTestCase) {","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] actual \u003d getParseInput(testCase).toArray(new String[0]);","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"LeeHanYongAndy"},"content":"            assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_oneOption_noArgument() {","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfTestCase \u003d {\"-e\", \"-e \", \" -e\", \" -e \"};","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] expected \u003d {\"-e\", \"\"};","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (String testCase : arrayOfTestCase) {","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] actual \u003d getParseInput(testCase).toArray(new String[0]);","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"LeeHanYongAndy"},"content":"            assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_TwoOption_noArgument() {","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfTestCase \u003d {\"-e -s\", \"-e -s \", \" -e -s\", \" -e -s \", \" -e   -s \"};","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] expected \u003d {\"-e\", \"\", \"-s\", \"\"};","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (String testCase : arrayOfTestCase) {","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] actual \u003d getParseInput(testCase).toArray(new String[0]);","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"            assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_gotOption_noArgument() {","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfTestCase \u003d {\"add -e\", \"add -e \", \" add -e\", \" add -e \"};","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] expected \u003d {\"add\", \"-e\", \"\"};","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (String testCase : arrayOfTestCase) {","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] actual \u003d getParseInput(testCase).toArray(new String[0]);","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"LeeHanYongAndy"},"content":"            assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_TwoOption_noArgument_inMiddle() {","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfTestCase \u003d {\"add -e -s -a 10\", \"add -e -s -a 10 \",","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"LeeHanYongAndy"},"content":"            \" add -e -s -a 10\", \" add -e -s -a 10 \"};","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] expected \u003d {\"add\", \"-e\", \"\", \"-s\", \"\", \"-a\", \"10\"};","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (String testCase : arrayOfTestCase) {","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] actual \u003d getParseInput(testCase).toArray(new String[0]);","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"            assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_manyWhiteSpace() {","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfTestCase \u003d {\"            add   -e   beer -a     10    -d   2020-01-01       \"};","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] expected \u003d {\"add\", \"-e\", \"beer\", \"-a\", \"10\", \"-d\", \"2020-01-01\"};","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (String testCase : arrayOfTestCase) {","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] actual \u003d getParseInput(testCase).toArray(new String[0]);","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"LeeHanYongAndy"},"content":"            assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":81,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":82,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_help_noArgument() {","lastModifiedDate":"2021-03-19"},{"lineNumber":83,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfTestCase \u003d {\"help\", \"help \", \"help  \", \" help\", \"  help\", \" help \"};","lastModifiedDate":"2021-03-19"},{"lineNumber":84,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] expected \u003d {\"help\", \"all\"};","lastModifiedDate":"2021-03-19"},{"lineNumber":85,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (String testCase : arrayOfTestCase) {","lastModifiedDate":"2021-03-19"},{"lineNumber":86,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] actual \u003d getParseInput(testCase).toArray(new String[0]);","lastModifiedDate":"2021-03-19"},{"lineNumber":87,"author":{"gitId":"LeeHanYongAndy"},"content":"            assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-19"},{"lineNumber":88,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":89,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":90,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":91,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":92,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_help_withArguments() {","lastModifiedDate":"2021-03-19"},{"lineNumber":93,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfTestCase \u003d {\"help add\", \"help     asd\", \"help    asd\", \" help asd   \"};","lastModifiedDate":"2021-03-19"},{"lineNumber":94,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[][] preExpected \u003d {{\"help\", \"add\"}, {\"help\", \"asd\"}, {\"help\", \"asd\"}, {\"help\", \"asd\"}};","lastModifiedDate":"2021-03-19"},{"lineNumber":95,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (int i \u003d 0; i \u003c arrayOfTestCase.length; i++) {","lastModifiedDate":"2021-03-19"},{"lineNumber":96,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] actual \u003d getParseInput(arrayOfTestCase[i]).toArray(new String[0]);","lastModifiedDate":"2021-03-19"},{"lineNumber":97,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] expected \u003d preExpected[i];","lastModifiedDate":"2021-03-19"},{"lineNumber":98,"author":{"gitId":"LeeHanYongAndy"},"content":"            assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-19"},{"lineNumber":99,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":100,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":101,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":102,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":103,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_creditscore_noArgument() {","lastModifiedDate":"2021-03-19"},{"lineNumber":104,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfTestCase \u003d {\"creditscore\", \"creditscore \", \"creditscore  \",","lastModifiedDate":"2021-03-19"},{"lineNumber":105,"author":{"gitId":"LeeHanYongAndy"},"content":"            \" creditscore\", \"  creditscore\", \" creditscore \"};","lastModifiedDate":"2021-03-19"},{"lineNumber":106,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] expected \u003d {\"creditscore\", \"\"};","lastModifiedDate":"2021-03-19"},{"lineNumber":107,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (String testCase : arrayOfTestCase) {","lastModifiedDate":"2021-03-19"},{"lineNumber":108,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] actual \u003d getParseInput(testCase).toArray(new String[0]);","lastModifiedDate":"2021-03-19"},{"lineNumber":109,"author":{"gitId":"LeeHanYongAndy"},"content":"            assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-19"},{"lineNumber":110,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":111,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":112,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":113,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":114,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_creditscore_withArguments() {","lastModifiedDate":"2021-03-19"},{"lineNumber":115,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfTestCase \u003d {\"creditscore andy\", \"creditscore     asd\",","lastModifiedDate":"2021-03-19"},{"lineNumber":116,"author":{"gitId":"LeeHanYongAndy"},"content":"            \"creditscore    asd\", \" creditscore asd   \"};","lastModifiedDate":"2021-03-19"},{"lineNumber":117,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[][] preExpected \u003d {{\"creditscore\", \"andy\"}, {\"creditscore\", \"asd\"},","lastModifiedDate":"2021-03-19"},{"lineNumber":118,"author":{"gitId":"LeeHanYongAndy"},"content":"            {\"creditscore\", \"asd\"}, {\"creditscore\", \"asd\"}};","lastModifiedDate":"2021-03-19"},{"lineNumber":119,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (int i \u003d 0; i \u003c arrayOfTestCase.length; i++) {","lastModifiedDate":"2021-03-19"},{"lineNumber":120,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] actual \u003d getParseInput(arrayOfTestCase[i]).toArray(new String[0]);","lastModifiedDate":"2021-03-19"},{"lineNumber":121,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] expected \u003d preExpected[i];","lastModifiedDate":"2021-03-19"},{"lineNumber":122,"author":{"gitId":"LeeHanYongAndy"},"content":"            assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-19"},{"lineNumber":123,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":124,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":125,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"LeeHanYongAndy":125}}]
