[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":"    implementation group: \u0027org.apache.commons\u0027, name: \u0027commons-lang3\u0027, version: \u00273.11\u0027","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"gerardtwk"},"content":"    mainClassName \u003d \"seedu.duke.Finux\"","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"gerardtwk"},"content":"    archiveBaseName \u003d \"finux\"","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LeeHanYongAndy":2,"gerardtwk":2,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"Name | Github Profile | Portfolio ","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":":----:|:--------------:|:---------:","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":" Jonah Tham | [Github](https://github.com/jonahtwl) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":" Gerard Tan | [Github](https://github.com/gerardtwk) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":" Lee Han Yong Andy | [Github](https://github.com/LeeHanYongAndy) | [Portfolio](docs/team/LeeHanYongAndy.md)","lastModifiedDate":"2021-04-06"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":" Mark Low | [Github](https://github.com/marklowsk) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":" Tan Tze Xern | [Github](https://github.com/tzexern/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"LeeHanYongAndy":1,"gerardtwk":6,"-":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"# *FINUX*","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":"## Table of Content","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":"---","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"1. [Introduction](#1-introduction)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":"   1.1 [Purpose](#11-purpose)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"tzexern"},"content":"   1.2 [Using this Guide](#12-using-this-guide)","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"tzexern"},"content":"2. [Setting Up](#2-setting-up)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"   2.1 [Setting up the project in your computer](#21-setting-up-the-project-in-your-computer)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"   2.2 [Before writing code](#22-before-writing-code)","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"3. [Design](#3-design)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"   3.1 [Architecture](#31-architecture)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"   3.2 [UI Component](#32-ui-component)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"   3.3 [Parser Component](#33-parser-component)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"   3.4 [CommandHandler Component](#34-commandhandler-component)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"   3.5 [Command Component](#35-command-component)\\","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"   3.6 [RecordList Component](#36-recordlist-component)\\","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"   3.7 [Storage Component](#37-storage-component)","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"tzexern"},"content":"4. [Implementation](#4-implementation)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":"   4.1 [Add Feature](#41-add-feature)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"   4.2 [List Feature](#42-list-feature)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"   4.3 [View Feature](#43-view-feature)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":"   4.4 [Return Feature](#44-return-feature)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"   4.5 [Remove Feature](#45-remove-feature)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"   4.6 [Storage Feature](#46-storage-feature)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"   4.7 [Credit Score Feature](#47-credit-score-feature)","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"LeeHanYongAndy"},"content":"5. [Documentation, Logging, Testing, and DevOps](#5-documentation-logging-testing-and-devops)","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"tzexern"},"content":"[Appendix A: Product Scope](#appendix-a-product-scope)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"tzexern"},"content":"\\","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"[Appendix B: User Stories](#appendix-b-user-stories)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"\\","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"[Appendix C: Non-Functional Requirements](#appendix-c-non-functional-requirements)\\","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"\\","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":"[Appendix D: Instructions For Manual Testing](#appendix-d-instructions-for-manual-testing)","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"tzexern"},"content":"## 1. Introduction","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"tzexern"},"content":"---","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"tzexern"},"content":"**Greetings from Finux!**","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"tzexern"},"content":"**Finux** is a CLI Style application that allows the user to make better financial","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"tzexern"},"content":"decisions based on the information recorded in the application. If you’re familiar","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"tzexern"},"content":"with the CLI command interface, you will enjoy the benefit of speeding up your","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"tzexern"},"content":"finance management rather than using the traditional management system.","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"tzexern"},"content":"**Finux** is written in Java 11 and uses the Object-Oriented Programming (OOP) paradigm.","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"tzexern"},"content":"OOP enables us to produce organized and reusable codes, allowing efficient improvements","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"tzexern"},"content":"and revisions in the future.","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"tzexern"},"content":"### 1.1 Purpose","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"tzexern"},"content":"This guide is for new and current developers of **Finux**. It describes the overall architecture","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"tzexern"},"content":"design of **Finux** and describes the current implementation details of our main features","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"tzexern"},"content":"with the thought process behind each of them. The current edition of this guide is meant for","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"tzexern"},"content":"the `v2.1` release.","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"tzexern"},"content":"### 1.2 Using this Guide","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"tzexern"},"content":"Throughout the guide, you might encounter several icons, refer to the following consolidate","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"tzexern"},"content":"list of icons:","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"tzexern"},"content":"\u003e 💡 It indicates that this is an important piece of information.\\","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"tzexern"},"content":"\u003e ❗  It indicates that this is a warning and you should be aware of it while developing.\\","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"tzexern"},"content":"\u003e 📝 It indicates that this is a tip and you may find it useful when using our application or guide.","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"tzexern"},"content":"\u003e 📝 Text that are blue like this [example(jumps to 1.2)](#12-using-this-guide), are clickable links","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"tzexern"},"content":"\u003e that will move you to the relevant section of the guide.\\","lastModifiedDate":"2021-04-03"},{"lineNumber":76,"author":{"gitId":"tzexern"},"content":"\u003e 📝 Records refer to either expenses, loans or savings.","lastModifiedDate":"2021-04-03"},{"lineNumber":77,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"tzexern"},"content":"## 2. Setting Up","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"tzexern"},"content":"---","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"tzexern"},"content":"### 2.1 Setting up the project in your computer","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"tzexern"},"content":"Ensure that you have the following installed:","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"tzexern"},"content":"* JDK 11","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"tzexern"},"content":"* Intellij IDEA (Highly Recommended)","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"tzexern"},"content":"Firstly, **fork** this [repo](https://github.com/AY2021S2-CS2113T-W09-1/tp) and **clone** a copy into your computer.","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"tzexern"},"content":"If you plan to use IntelliJ IDEA:","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"tzexern"},"content":"1. **Ensure IntelliJ is configured to develop in JDK 11.**","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"tzexern"},"content":"   1. If you are not at the welcome screen, click `File` \u003e `Close Projects` to close any currently opened projects.","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"tzexern"},"content":"   1. Click on `Configure` \u003e `Structure for New Projects` \u003e `Project Settings` \u003e `Project`, ensure","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"tzexern"},"content":"      the `Project SDK` is using **JDK 11**.","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"tzexern"},"content":"1. **Import the project as a Gradle Project.**","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"tzexern"},"content":"   1. Click on `Import Project` and locate the `build.gradle` file and select it. Click `OK`.","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"tzexern"},"content":"   1. If prompted, choose to `Open as Project` (not `Open as File`).","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"tzexern"},"content":"   1. Click `OK` to accept the default settings but do ensure that the selected version of `Gradle JVM`","lastModifiedDate":"2021-03-25"},{"lineNumber":99,"author":{"gitId":"tzexern"},"content":"      matches the JDK being used for the project.","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"tzexern"},"content":"   1. Wait for the importing process to finish (it could take a few minutes).","lastModifiedDate":"2021-03-25"},{"lineNumber":101,"author":{"gitId":"tzexern"},"content":"1. **Verify the setup.**","lastModifiedDate":"2021-03-25"},{"lineNumber":102,"author":{"gitId":"tzexern"},"content":"   1. After importing successfully, locate the `src/main/java/seedu.duke/Duke.java` file, right click it, ","lastModifiedDate":"2021-03-25"},{"lineNumber":103,"author":{"gitId":"tzexern"},"content":"      and choose `Run...`. If the setup is correct, you should see the following:","lastModifiedDate":"2021-03-25"},{"lineNumber":104,"author":{"gitId":"tzexern"},"content":"   ![Login_Page](img/LoginPageExampleOutput.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":105,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":106,"author":{"gitId":"tzexern"},"content":"### 2.2 Before writing code","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"tzexern"},"content":"#### 2.2.1 Configuring the Coding Style","lastModifiedDate":"2021-03-25"},{"lineNumber":109,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":110,"author":{"gitId":"tzexern"},"content":"If you are using IDEA, follow this guide ","lastModifiedDate":"2021-03-25"},{"lineNumber":111,"author":{"gitId":"tzexern"},"content":"[IDEA: Configuring the code style](https://se-education.org/guides/tutorials/intellijCodeStyle.html)","lastModifiedDate":"2021-03-25"},{"lineNumber":112,"author":{"gitId":"tzexern"},"content":"to setup IDEA\u0027s coding style to match ours.","lastModifiedDate":"2021-03-25"},{"lineNumber":113,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":114,"author":{"gitId":"tzexern"},"content":"#### 2.2.2 Set up CI","lastModifiedDate":"2021-03-25"},{"lineNumber":115,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":116,"author":{"gitId":"tzexern"},"content":"There is no set up required as the project comes with GitHub Actions config files, located in `.github/workflows`","lastModifiedDate":"2021-03-25"},{"lineNumber":117,"author":{"gitId":"tzexern"},"content":"folder. When GitHub detects these files, it will run the CI for the project automatically at each push to the master","lastModifiedDate":"2021-03-25"},{"lineNumber":118,"author":{"gitId":"tzexern"},"content":"branch or to any PR.","lastModifiedDate":"2021-03-25"},{"lineNumber":119,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":120,"author":{"gitId":"tzexern"},"content":"#### 2.2.3 Learn the Design","lastModifiedDate":"2021-03-25"},{"lineNumber":121,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":122,"author":{"gitId":"tzexern"},"content":"Before starting to write any code, we recommend that you have a look at Finux\u0027s overall design by reading","lastModifiedDate":"2021-03-25"},{"lineNumber":123,"author":{"gitId":"tzexern"},"content":"[Finux\u0027s Architecture](#31-architecture) section.","lastModifiedDate":"2021-03-25"},{"lineNumber":124,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":125,"author":{"gitId":"tzexern"},"content":"## 3. Design","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"tzexern"},"content":"---","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"tzexern"},"content":"### 3.1 Architecture","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":131,"author":{"gitId":"marklowsk"},"content":"![ArchitectureDiagram](img/ArchitectureDiagram.png)\\","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"marklowsk"},"content":"_Figure 1: **Finux** Architecture Diagram_","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":134,"author":{"gitId":"marklowsk"},"content":"\u003e 💡 The diagrams are built with [PlantUML](https://plantuml.com/).","lastModifiedDate":"2021-03-25"},{"lineNumber":135,"author":{"gitId":"marklowsk"},"content":"\u003e The `.puml` files can be found in the [diagrams](https://github.com/AY2021S2-CS2113T-W09-1/tp/tree/master/docs/diagrams) folder and","lastModifiedDate":"2021-03-25"},{"lineNumber":136,"author":{"gitId":"marklowsk"},"content":"\u003e the generated picture diagrams are in the [img](https://github.com/AY2021S2-CS2113T-W09-1/tp/tree/master/docs/img) folder.","lastModifiedDate":"2021-03-25"},{"lineNumber":137,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":138,"author":{"gitId":"marklowsk"},"content":"The _**Architecture Diagram**_ above details the high-level design of the **Finux** Application.","lastModifiedDate":"2021-03-25"},{"lineNumber":139,"author":{"gitId":"marklowsk"},"content":"Brief explanations of the components involved are given below.","lastModifiedDate":"2021-03-25"},{"lineNumber":140,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":141,"author":{"gitId":"marklowsk"},"content":"The `Finux` component is the object class itself, It is responsible for,","lastModifiedDate":"2021-04-02"},{"lineNumber":142,"author":{"gitId":"marklowsk"},"content":"* At launch: Initializes the components in the correct sequence and attempts to load data from file.  ","lastModifiedDate":"2021-03-25"},{"lineNumber":143,"author":{"gitId":"marklowsk"},"content":"* At shut down: Shuts down the components and invokes cleanup method where necessary.","lastModifiedDate":"2021-03-25"},{"lineNumber":144,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":145,"author":{"gitId":"marklowsk"},"content":"The rest of the Application consists of six main components.","lastModifiedDate":"2021-04-02"},{"lineNumber":146,"author":{"gitId":"marklowsk"},"content":"* `Ui`: The user interface (Ui) of the App which handles all user input and Application output.","lastModifiedDate":"2021-03-30"},{"lineNumber":147,"author":{"gitId":"marklowsk"},"content":"* `Parser`: The user input parser of the CLI.","lastModifiedDate":"2021-03-25"},{"lineNumber":148,"author":{"gitId":"marklowsk"},"content":"* `CommandHandler`: The handler of parsed arguments for conversion into appropriate `Commands`.","lastModifiedDate":"2021-03-25"},{"lineNumber":149,"author":{"gitId":"marklowsk"},"content":"* `Command`: The appropriate command to be executed.","lastModifiedDate":"2021-03-25"},{"lineNumber":150,"author":{"gitId":"marklowsk"},"content":"* `RecordList`: The list of records of the Application stored in-memory.","lastModifiedDate":"2021-03-25"},{"lineNumber":151,"author":{"gitId":"marklowsk"},"content":"* `Storage`: The storage manager that handles the saving of data, or data retrieval to/from file. ","lastModifiedDate":"2021-03-25"},{"lineNumber":152,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":153,"author":{"gitId":"marklowsk"},"content":"Given below are sequence diagrams describing the general Application flow and how the different objects","lastModifiedDate":"2021-03-25"},{"lineNumber":154,"author":{"gitId":"marklowsk"},"content":"interact with each other.","lastModifiedDate":"2021-03-25"},{"lineNumber":155,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":156,"author":{"gitId":"marklowsk"},"content":"![Initialization](img/InitializationSequenceDiagram.png)\\","lastModifiedDate":"2021-03-30"},{"lineNumber":157,"author":{"gitId":"marklowsk"},"content":"_Figure 2: Initialization_","lastModifiedDate":"2021-03-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":159,"author":{"gitId":"marklowsk"},"content":"The initialization sequence diagram above shows the systematic flow of object creation and record","lastModifiedDate":"2021-03-25"},{"lineNumber":160,"author":{"gitId":"marklowsk"},"content":"retrieval from storage file for creation of the `RecordList` object.","lastModifiedDate":"2021-03-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":162,"author":{"gitId":"marklowsk"},"content":"![Main program flow](img/CommandLooperSequenceDiagram.png)\\","lastModifiedDate":"2021-03-30"},{"lineNumber":163,"author":{"gitId":"marklowsk"},"content":"_Figure 3: Main Application Loop \u0026 Exit Sequence_","lastModifiedDate":"2021-03-30"},{"lineNumber":164,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":165,"author":{"gitId":"marklowsk"},"content":"\u003e 💡 The lifeline all objects should end at the destroy marker (X) but due to a limitation of PlantUML, ","lastModifiedDate":"2021-03-25"},{"lineNumber":166,"author":{"gitId":"marklowsk"},"content":"\u003e the lifeline reaches the end of diagram. This limitation persists throughout all sequence diagram in ","lastModifiedDate":"2021-04-02"},{"lineNumber":167,"author":{"gitId":"marklowsk"},"content":"\u003e this guide.","lastModifiedDate":"2021-04-02"},{"lineNumber":168,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":169,"author":{"gitId":"marklowsk"},"content":"This sequence diagram follows suit after initialization in _Figure 2_.\\","lastModifiedDate":"2021-03-25"},{"lineNumber":170,"author":{"gitId":"marklowsk"},"content":"This shows the main flow until the `exit` command is input by the user.","lastModifiedDate":"2021-03-25"},{"lineNumber":171,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":172,"author":{"gitId":"marklowsk"},"content":"The following sections below will provide more details of each component.","lastModifiedDate":"2021-03-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":174,"author":{"gitId":"tzexern"},"content":"### 3.2 UI Component","lastModifiedDate":"2021-03-23"},{"lineNumber":175,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":176,"author":{"gitId":"tzexern"},"content":"![UIComponentDiagram](img/UIComponentDiagram.png)\\","lastModifiedDate":"2021-03-25"},{"lineNumber":177,"author":{"gitId":"marklowsk"},"content":"*Figure 4: **Ui** Class Diagram*","lastModifiedDate":"2021-03-30"},{"lineNumber":178,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":179,"author":{"gitId":"tzexern"},"content":"The Ui Component consists of a `Ui` class which handles all user input and system output.","lastModifiedDate":"2021-03-25"},{"lineNumber":180,"author":{"gitId":"tzexern"},"content":"The Ui is only dependent on the `Finux` class and does not interact directly with other classes,","lastModifiedDate":"2021-03-31"},{"lineNumber":181,"author":{"gitId":"tzexern"},"content":"ensuring a high level of cohesiveness, low level of coupling and separation of roles.","lastModifiedDate":"2021-03-25"},{"lineNumber":182,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":183,"author":{"gitId":"tzexern"},"content":"The `Ui` component actively listens for:","lastModifiedDate":"2021-03-25"},{"lineNumber":184,"author":{"gitId":"tzexern"},"content":"* the execution of commands to print the result of a `command`","lastModifiedDate":"2021-03-25"},{"lineNumber":185,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":186,"author":{"gitId":"tzexern"},"content":"### 3.3 Parser Component","lastModifiedDate":"2021-03-23"},{"lineNumber":187,"author":{"gitId":"LeeHanYongAndy"},"content":"![ParserHandlerClassDiagram](img/ParserHandlerClassDiagram.png)\\","lastModifiedDate":"2021-04-01"},{"lineNumber":188,"author":{"gitId":"marklowsk"},"content":"_Figure 5: **ParserHandler** Class Diagram_","lastModifiedDate":"2021-03-30"},{"lineNumber":189,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":190,"author":{"gitId":"LeeHanYongAndy"},"content":"#### Description","lastModifiedDate":"2021-03-24"},{"lineNumber":191,"author":{"gitId":"LeeHanYongAndy"},"content":"The Parser component consist of one class called `ParserHandler`.","lastModifiedDate":"2021-03-31"},{"lineNumber":192,"author":{"gitId":"LeeHanYongAndy"},"content":"The role of `ParserHandler` can be interpreted as a \"manager\" or \"middle man\" to parse","lastModifiedDate":"2021-03-24"},{"lineNumber":193,"author":{"gitId":"LeeHanYongAndy"},"content":"the user input from the console into an `ArrayList\u003cString\u003e` format.","lastModifiedDate":"2021-03-24"},{"lineNumber":194,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":195,"author":{"gitId":"LeeHanYongAndy"},"content":"#### Design","lastModifiedDate":"2021-03-24"},{"lineNumber":196,"author":{"gitId":"LeeHanYongAndy"},"content":"In the main program, `ParserHandler` is instantiated through the constructor `new ParserHandler()`,","lastModifiedDate":"2021-03-24"},{"lineNumber":197,"author":{"gitId":"LeeHanYongAndy"},"content":"finalizing the startOptionArray, endOptionArray, and middleOptionArray. Whenever the program needs","lastModifiedDate":"2021-03-24"},{"lineNumber":198,"author":{"gitId":"LeeHanYongAndy"},"content":"to parse a user input, the ParserHandler calls the method `getParseInput` and returns an `ArrayList\u003cString\u003e`.","lastModifiedDate":"2021-03-24"},{"lineNumber":199,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":200,"author":{"gitId":"LeeHanYongAndy"},"content":"1. `getParseInput` will trim the leading white space before calling `startExtraction`.","lastModifiedDate":"2021-03-24"},{"lineNumber":201,"author":{"gitId":"LeeHanYongAndy"},"content":"2. `startExtraction` will check if the trimmed input starts with option. If yes, extract the option and","lastModifiedDate":"2021-03-24"},{"lineNumber":202,"author":{"gitId":"LeeHanYongAndy"},"content":"   remove the option from the trimmed input before calling `extractSubsequencePart`.","lastModifiedDate":"2021-03-24"},{"lineNumber":203,"author":{"gitId":"LeeHanYongAndy"},"content":"3. `extractSubsequencePart` will check for the next option index and extract whatever is in between the start of the","lastModifiedDate":"2021-03-24"},{"lineNumber":204,"author":{"gitId":"LeeHanYongAndy"},"content":"   trimmed input to the start of the next option index. This is the argument tagged after the option.Afterward, ","lastModifiedDate":"2021-04-01"},{"lineNumber":205,"author":{"gitId":"LeeHanYongAndy"},"content":"   the checking mechanism will loop until no valid next options are left in the input before calling `extractFinalPart`.","lastModifiedDate":"2021-04-01"},{"lineNumber":206,"author":{"gitId":"LeeHanYongAndy"},"content":"   * Any leading or trailing white space of the argument field will be removed.","lastModifiedDate":"2021-03-24"},{"lineNumber":207,"author":{"gitId":"LeeHanYongAndy"},"content":"   * If no argument is provided, the argument would be stored an empty string.","lastModifiedDate":"2021-03-24"},{"lineNumber":208,"author":{"gitId":"LeeHanYongAndy"},"content":"4. `extractFinalPart` will check if the last trimmed input ends with option. If yes, extract the option and","lastModifiedDate":"2021-03-24"},{"lineNumber":209,"author":{"gitId":"LeeHanYongAndy"},"content":"   add an empty string as the argument, else just add the last trimmed input to the ArrayList\u003cString\u003e.","lastModifiedDate":"2021-03-31"},{"lineNumber":210,"author":{"gitId":"LeeHanYongAndy"},"content":"5. Finally, after the extraction to ArrayList\u003cString\u003e is complete, `extractFinalPart` will","lastModifiedDate":"2021-03-24"},{"lineNumber":211,"author":{"gitId":"LeeHanYongAndy"},"content":"   call `checkFirstBlock` for the final check to parse any `help` or `creditscore` in the first argument block.","lastModifiedDate":"2021-03-24"},{"lineNumber":212,"author":{"gitId":"LeeHanYongAndy"},"content":"   ","lastModifiedDate":"2021-03-24"},{"lineNumber":213,"author":{"gitId":"LeeHanYongAndy"},"content":"#### Parser Component Design Consideration","lastModifiedDate":"2021-03-24"},{"lineNumber":214,"author":{"gitId":"LeeHanYongAndy"},"content":"1. Leading and trailing whitespace should be considered carefully especially with options involve.","lastModifiedDate":"2021-03-24"},{"lineNumber":215,"author":{"gitId":"LeeHanYongAndy"},"content":"   * Input starting with valid option should consider the possibility of multiple leading whitespaces, ","lastModifiedDate":"2021-03-24"},{"lineNumber":216,"author":{"gitId":"LeeHanYongAndy"},"content":"   thus `stripLeading()` should be applied.","lastModifiedDate":"2021-03-24"},{"lineNumber":217,"author":{"gitId":"LeeHanYongAndy"},"content":"   * Input ending with valid option should also be considered with possibility of multiple trailing whitespaces,","lastModifiedDate":"2021-03-24"},{"lineNumber":218,"author":{"gitId":"LeeHanYongAndy"},"content":"   thus `stripTrailing()` should be applied as well.","lastModifiedDate":"2021-03-24"},{"lineNumber":219,"author":{"gitId":"LeeHanYongAndy"},"content":"2. Checking of options in the start, end, and during the processing should be considered carefully with accordance ","lastModifiedDate":"2021-03-24"},{"lineNumber":220,"author":{"gitId":"LeeHanYongAndy"},"content":"   to consideration 1.","lastModifiedDate":"2021-03-24"},{"lineNumber":221,"author":{"gitId":"LeeHanYongAndy"},"content":"   * Starting option should be in the form of `\u0027\u003coption\u003e \u0027` with no leading whitespace and 1 trailing whitespace. ","lastModifiedDate":"2021-03-24"},{"lineNumber":222,"author":{"gitId":"LeeHanYongAndy"},"content":"     e.g. `\u0027-e \u0027`","lastModifiedDate":"2021-03-24"},{"lineNumber":223,"author":{"gitId":"LeeHanYongAndy"},"content":"   * Ending option should be in the form of `\u0027 \u003coption\u003e\u0027` with 1 leading whitespace and no trailing whitespace.","lastModifiedDate":"2021-03-24"},{"lineNumber":224,"author":{"gitId":"LeeHanYongAndy"},"content":"     e.g. `\u0027 -e\u0027`","lastModifiedDate":"2021-03-24"},{"lineNumber":225,"author":{"gitId":"LeeHanYongAndy"},"content":"   * During the extraction, the next option should be in the form of `\u0027 \u003coption\u003e \u0027` with 1 leading and trailing whitespace.","lastModifiedDate":"2021-03-31"},{"lineNumber":226,"author":{"gitId":"LeeHanYongAndy"},"content":"     e.g. `\u0027 -e \u0027`","lastModifiedDate":"2021-03-24"},{"lineNumber":227,"author":{"gitId":"LeeHanYongAndy"},"content":"3. As rearrangement of options is allowed, option detection should cater to non-fixed option order.","lastModifiedDate":"2021-03-24"},{"lineNumber":228,"author":{"gitId":"LeeHanYongAndy"},"content":"   Apache Commons Lang, 3.11, providing the `StringUtils` class is used to cater to consideration 2.","lastModifiedDate":"2021-03-31"},{"lineNumber":229,"author":{"gitId":"LeeHanYongAndy"},"content":"   * `StringUtils.startsWithAny()` - detection of start option with non-fixed order.","lastModifiedDate":"2021-03-31"},{"lineNumber":230,"author":{"gitId":"LeeHanYongAndy"},"content":"   * `StringUtils.endsWithAny()`   - detection of end option with non-fixed order.","lastModifiedDate":"2021-03-31"},{"lineNumber":231,"author":{"gitId":"LeeHanYongAndy"},"content":"   * `StringUtils.indexOfAny()`    - detection of during processing option with non-fixed order.","lastModifiedDate":"2021-03-31"},{"lineNumber":232,"author":{"gitId":"LeeHanYongAndy"},"content":"4. As multiple whitespaces is allowed, options and arguments should be fully trimmed (leading and trailing).","lastModifiedDate":"2021-03-24"},{"lineNumber":233,"author":{"gitId":"LeeHanYongAndy"},"content":"5. As the ArrayList\u003cString\u003e is passed back to the main program and is being used by CommandHandler,","lastModifiedDate":"2021-03-24"},{"lineNumber":234,"author":{"gitId":"LeeHanYongAndy"},"content":"   the argument field should compulsory and appended with empty string if empty to facilitate validations and option-argument","lastModifiedDate":"2021-03-24"},{"lineNumber":235,"author":{"gitId":"LeeHanYongAndy"},"content":"   pairwise logic.","lastModifiedDate":"2021-03-24"},{"lineNumber":236,"author":{"gitId":"marklowsk"},"content":"6. `getParseInput(String)` should always return a new ArrayList\u003cString\u003e per new input.","lastModifiedDate":"2021-04-02"},{"lineNumber":237,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":238,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":239,"author":{"gitId":"tzexern"},"content":"### 3.4 CommandHandler Component","lastModifiedDate":"2021-03-23"},{"lineNumber":240,"author":{"gitId":"marklowsk"},"content":"![CommandHandlerClassDiagram](img/CommandHandlerClassDiagram.png)\\","lastModifiedDate":"2021-03-30"},{"lineNumber":241,"author":{"gitId":"marklowsk"},"content":"_Figure 6: CommandHandler Class Diagram_\\","lastModifiedDate":"2021-03-30"},{"lineNumber":242,"author":{"gitId":"marklowsk"},"content":"![CommandHandlerSequenceDiagram](img/CommandHandlerSequenceDiagram.png)\\","lastModifiedDate":"2021-03-30"},{"lineNumber":243,"author":{"gitId":"marklowsk"},"content":"_Figure 7: CommandHandler Sequence Diagram_","lastModifiedDate":"2021-03-30"},{"lineNumber":244,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":245,"author":{"gitId":"marklowsk"},"content":"#### Description","lastModifiedDate":"2021-03-25"},{"lineNumber":246,"author":{"gitId":"marklowsk"},"content":"The `CommandHandler` component is the object class itself.","lastModifiedDate":"2021-03-25"},{"lineNumber":247,"author":{"gitId":"marklowsk"},"content":"The role of the `CommandHandler` is to convert `parsedArguments` from the `ParserHandler`","lastModifiedDate":"2021-03-30"},{"lineNumber":248,"author":{"gitId":"marklowsk"},"content":"into subsequent `Command` objects which will be executed thereafter.","lastModifiedDate":"2021-03-25"},{"lineNumber":249,"author":{"gitId":"marklowsk"},"content":"The `XYZCommand` in _Figure 7_ represents a valid command word (e.g. `\"xyz\"`) from the input","lastModifiedDate":"2021-03-30"},{"lineNumber":250,"author":{"gitId":"marklowsk"},"content":"parsed earlier from the `ParserHandler`. More on the actual valid commands, please refer to","lastModifiedDate":"2021-03-30"},{"lineNumber":251,"author":{"gitId":"marklowsk"},"content":"the [Command Component](#35-command-component) below.","lastModifiedDate":"2021-03-30"},{"lineNumber":252,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":253,"author":{"gitId":"marklowsk"},"content":"#### Design","lastModifiedDate":"2021-03-25"},{"lineNumber":254,"author":{"gitId":"marklowsk"},"content":"It functions as a mapping from `parsedArguments[0]` to a set of predefined command words ","lastModifiedDate":"2021-03-25"},{"lineNumber":255,"author":{"gitId":"marklowsk"},"content":"(the actual commands of the Application).\\","lastModifiedDate":"2021-03-30"},{"lineNumber":256,"author":{"gitId":"marklowsk"},"content":"With reference to the above _Figure 7_, ","lastModifiedDate":"2021-03-30"},{"lineNumber":257,"author":{"gitId":"marklowsk"},"content":"In the case of `\"xyz\"` being mapped to `XYZCommand`, depending on the other data in the ","lastModifiedDate":"2021-03-30"},{"lineNumber":258,"author":{"gitId":"marklowsk"},"content":"`parsedArguments`,","lastModifiedDate":"2021-03-30"},{"lineNumber":259,"author":{"gitId":"marklowsk"},"content":"* arguments are valid: the `XYZCommand` object is successfully returned.","lastModifiedDate":"2021-03-30"},{"lineNumber":260,"author":{"gitId":"marklowsk"},"content":"* arguments are erroneous/invalid: `CommandException` is thrown.","lastModifiedDate":"2021-03-30"},{"lineNumber":261,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":262,"author":{"gitId":"marklowsk"},"content":"If `parsedArguments[0]` maps to an empty String `\"\"`, a `null` is returned, allowing the ","lastModifiedDate":"2021-03-30"},{"lineNumber":263,"author":{"gitId":"marklowsk"},"content":"`Finux` to continue prompting for user input.","lastModifiedDate":"2021-03-30"},{"lineNumber":264,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":265,"author":{"gitId":"marklowsk"},"content":"Finally, if `parsedArguments[0]` cannot be mapped to any command, a `CommandException` is ","lastModifiedDate":"2021-03-30"},{"lineNumber":266,"author":{"gitId":"marklowsk"},"content":"thrown to `Finux` to handle.","lastModifiedDate":"2021-03-30"},{"lineNumber":267,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":268,"author":{"gitId":"marklowsk"},"content":"Not stated explicitly in the diagrams, when the `exit` command is entered, the `CommandHandler`","lastModifiedDate":"2021-03-30"},{"lineNumber":269,"author":{"gitId":"marklowsk"},"content":"sets the `isExit \u003d true`, ending control of the `commandLooper()` and resulting in `Finux` proceeding to call `end()` to exit the Application.","lastModifiedDate":"2021-04-02"},{"lineNumber":270,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":271,"author":{"gitId":"marklowsk"},"content":"### 3.5 Command Component","lastModifiedDate":"2021-03-30"},{"lineNumber":272,"author":{"gitId":"LeeHanYongAndy"},"content":"![CommandClassDiagram](img/CommandClassDiagram.png)\\","lastModifiedDate":"2021-04-01"},{"lineNumber":273,"author":{"gitId":"marklowsk"},"content":"_Figure 8: Command Class Diagram_","lastModifiedDate":"2021-03-30"},{"lineNumber":274,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":275,"author":{"gitId":"marklowsk"},"content":"All Commands contain a command word constant named as `COMMAND_*` (as underlined in _Figure 8_),\\","lastModifiedDate":"2021-03-30"},{"lineNumber":276,"author":{"gitId":"marklowsk"},"content":"e.g. `protected static final String COMMAND_XYZ \u003d \"xyz\";`\\","lastModifiedDate":"2021-03-30"},{"lineNumber":277,"author":{"gitId":"marklowsk"},"content":"These constants are used by the `CommandHandler` to map to each `Command`.\\","lastModifiedDate":"2021-04-02"},{"lineNumber":278,"author":{"gitId":"marklowsk"},"content":"In the case of `AddCommand` in _Figure 8_, the resultant constant is `...final String COMMAND_ADD \u003d \"add\";`.\\","lastModifiedDate":"2021-04-02"},{"lineNumber":279,"author":{"gitId":"marklowsk"},"content":"More on the different types of commands and usages, please refer to our [User Guide](UserGuide.md).","lastModifiedDate":"2021-04-02"},{"lineNumber":280,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":281,"author":{"gitId":"marklowsk"},"content":"#### Description","lastModifiedDate":"2021-03-30"},{"lineNumber":282,"author":{"gitId":"marklowsk"},"content":"The `Command` component contains the `abstract Command` class and its extensions (child classes).","lastModifiedDate":"2021-04-02"},{"lineNumber":283,"author":{"gitId":"marklowsk"},"content":"Each child class inherits the `Command` class.","lastModifiedDate":"2021-04-02"},{"lineNumber":284,"author":{"gitId":"marklowsk"},"content":"The child classes of `Command` are the `AddCommand`, `CreditScoreCommand`, `ViewCommand`, etc...","lastModifiedDate":"2021-04-02"},{"lineNumber":285,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":286,"author":{"gitId":"marklowsk"},"content":"#### Design","lastModifiedDate":"2021-03-30"},{"lineNumber":287,"author":{"gitId":"marklowsk"},"content":"The only `abstract` method of `Command` is `execute(...)`, where it is called by `Finux` everytime a `Command`","lastModifiedDate":"2021-04-02"},{"lineNumber":288,"author":{"gitId":"marklowsk"},"content":"object is successfully created. Most of the input validation is done in the constructor of each Command object. ","lastModifiedDate":"2021-04-02"},{"lineNumber":289,"author":{"gitId":"marklowsk"},"content":"1. Firstly, arguments are checked for validity (if any):","lastModifiedDate":"2021-03-30"},{"lineNumber":290,"author":{"gitId":"marklowsk"},"content":"   1. Valid options: options only for each `Command`. E.g. `-a` for the amount `add` is valid.","lastModifiedDate":"2021-03-30"},{"lineNumber":291,"author":{"gitId":"marklowsk"},"content":"   2. No duplicate options: options are not repeated. E.g. `-a 200 -a 200` or `-l -l` is invalid.","lastModifiedDate":"2021-03-30"},{"lineNumber":292,"author":{"gitId":"marklowsk"},"content":"   3. No conflict options: mutually exclusive options, options that cannot be input at the same time.","lastModifiedDate":"2021-03-30"},{"lineNumber":293,"author":{"gitId":"marklowsk"},"content":"      E.g. ViewCommand implements `{-e | -l | -s}` options, `view -s -l` is considered a conflict of options.","lastModifiedDate":"2021-03-30"},{"lineNumber":294,"author":{"gitId":"marklowsk"},"content":"2. Secondly, option values are validated (if any):","lastModifiedDate":"2021-03-30"},{"lineNumber":295,"author":{"gitId":"marklowsk"},"content":"   * E.g. The input `return -i 2 -d 20122012` has option values of `\"2\"` for `-i` and `\"20122012\"` for `-d`.","lastModifiedDate":"2021-03-30"},{"lineNumber":296,"author":{"gitId":"marklowsk"},"content":"     Each option value is validated based on the input validation methods for each data type.","lastModifiedDate":"2021-03-30"},{"lineNumber":297,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":298,"author":{"gitId":"marklowsk"},"content":"In the case of `AddCommand`, which supports options of `{-e | -l | -s}`, the constructor will check which option","lastModifiedDate":"2021-04-02"},{"lineNumber":299,"author":{"gitId":"marklowsk"},"content":"was given, and sets the `RecordType` enumeration, `recordType` to the following:","lastModifiedDate":"2021-04-02"},{"lineNumber":300,"author":{"gitId":"marklowsk"},"content":"* `-e` sets `recordType` to `EXPENSE`.","lastModifiedDate":"2021-04-02"},{"lineNumber":301,"author":{"gitId":"marklowsk"},"content":"* `-l` sets `recordType` to `LOAN`.","lastModifiedDate":"2021-04-02"},{"lineNumber":302,"author":{"gitId":"marklowsk"},"content":"* `-s` sets `recordType` to `SAVING`.","lastModifiedDate":"2021-04-02"},{"lineNumber":303,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":304,"author":{"gitId":"marklowsk"},"content":"If no violations are present in the arguments, then the subsequent `Command` object is returned.\\","lastModifiedDate":"2021-03-30"},{"lineNumber":305,"author":{"gitId":"marklowsk"},"content":"If violations occur at any point of the input validation, the `Command` is not created and `CommandException` ","lastModifiedDate":"2021-03-30"},{"lineNumber":306,"author":{"gitId":"marklowsk"},"content":"is thrown back to the `CommandHandler`.","lastModifiedDate":"2021-03-30"},{"lineNumber":307,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":308,"author":{"gitId":"marklowsk"},"content":"### 3.6 RecordList Component","lastModifiedDate":"2021-03-30"},{"lineNumber":309,"author":{"gitId":"gerardtwk"},"content":"The `recordlist` class maintains an internal arraylist of record objects used throughout Finux\u0027s execution.","lastModifiedDate":"2021-03-25"},{"lineNumber":310,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":311,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":312,"author":{"gitId":"marklowsk"},"content":"### 3.7 Storage Component","lastModifiedDate":"2021-03-30"},{"lineNumber":313,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":314,"author":{"gitId":"LeeHanYongAndy"},"content":"![StorageClassDiagram](img/StorageClassDiagram.png)\\","lastModifiedDate":"2021-04-01"},{"lineNumber":315,"author":{"gitId":"jonahtwl"},"content":"_Figure X: Storage Class Diagram_","lastModifiedDate":"2021-03-31"},{"lineNumber":316,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":317,"author":{"gitId":"jonahtwl"},"content":"#### Description","lastModifiedDate":"2021-03-24"},{"lineNumber":318,"author":{"gitId":"jonahtwl"},"content":"The `storage` component consists of only 1 class called `Storage`. The role of the `Storage` is to translate all","lastModifiedDate":"2021-03-29"},{"lineNumber":319,"author":{"gitId":"jonahtwl"},"content":"`records` from the `RecordList` and `creditScoreHashMap` (a `HashMap`) into a text format in a text output file and ","lastModifiedDate":"2021-03-30"},{"lineNumber":320,"author":{"gitId":"jonahtwl"},"content":"vice versa.","lastModifiedDate":"2021-03-30"},{"lineNumber":321,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":322,"author":{"gitId":"jonahtwl"},"content":"#### Design","lastModifiedDate":"2021-03-24"},{"lineNumber":323,"author":{"gitId":"jonahtwl"},"content":"In the application, `Storage` is instantiated in classes that requires the use of the save or load function, this","lastModifiedDate":"2021-03-24"},{"lineNumber":324,"author":{"gitId":"jonahtwl"},"content":"is done through the constructor `new Storage()`. Whenever a new `record` gets added, removed, or marked as returned, ","lastModifiedDate":"2021-03-30"},{"lineNumber":325,"author":{"gitId":"jonahtwl"},"content":"the `saveData` method will be called and all `record` up to that point will be converted into a text output","lastModifiedDate":"2021-03-30"},{"lineNumber":326,"author":{"gitId":"jonahtwl"},"content":"and saved into the `finux.txt` file. The `creditScoreHashMap` will also be translated into a user readable text format ","lastModifiedDate":"2021-03-30"},{"lineNumber":327,"author":{"gitId":"jonahtwl"},"content":"and stored in the same file as the `records`. The `loadFile` method will do the exact opposite, and load the data from ","lastModifiedDate":"2021-03-30"},{"lineNumber":328,"author":{"gitId":"jonahtwl"},"content":"the `finux.txt` file back into the Finux application.","lastModifiedDate":"2021-03-30"},{"lineNumber":329,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":330,"author":{"gitId":"jonahtwl"},"content":"1. `saveData` is the method that is called after any `records` are added, deleted, or marked as returned. It ","lastModifiedDate":"2021-03-30"},{"lineNumber":331,"author":{"gitId":"jonahtwl"},"content":"   will then call the `writeToSaveFile` method.","lastModifiedDate":"2021-03-24"},{"lineNumber":332,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":333,"author":{"gitId":"jonahtwl"},"content":"2. `writeRecordListToSaveFile` will add the currently addressed `recordList` and all its stored `records` into the ","lastModifiedDate":"2021-03-30"},{"lineNumber":334,"author":{"gitId":"jonahtwl"},"content":"   `finux.txt` file after calling the `convertFileFormat` method from the Record class. The `writeToSaveFile` method ","lastModifiedDate":"2021-03-30"},{"lineNumber":335,"author":{"gitId":"jonahtwl"},"content":"   will also output each individual records in separate lines.","lastModifiedDate":"2021-03-30"},{"lineNumber":336,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":337,"author":{"gitId":"jonahtwl"},"content":"3. `writeCreditScoreMapToSaveFile` will convert all key:value pairs, in this case, `borrowerName`:`creditScore` pairs","lastModifiedDate":"2021-03-30"},{"lineNumber":338,"author":{"gitId":"jonahtwl"},"content":"   in the `creditScoreHashMap` into a user readable format and store them in the same `finux.txt` file as the `records`. ","lastModifiedDate":"2021-03-30"},{"lineNumber":339,"author":{"gitId":"jonahtwl"},"content":"  ","lastModifiedDate":"2021-03-30"},{"lineNumber":340,"author":{"gitId":"jonahtwl"},"content":"4. `loadFile` method does the opposite of the `writeRecordListToSaveFile` method. In the `loadFile` method, a new ","lastModifiedDate":"2021-03-30"},{"lineNumber":341,"author":{"gitId":"jonahtwl"},"content":"   ArrayList of `record` is instantiated. It will then call the `saveFileExist` method. If the method returns false, ","lastModifiedDate":"2021-03-30"},{"lineNumber":342,"author":{"gitId":"jonahtwl"},"content":"   `initSaveFile` method will be called and a new `finux.txt` will be created in the same directory of the FINUX ","lastModifiedDate":"2021-03-30"},{"lineNumber":343,"author":{"gitId":"jonahtwl"},"content":"   application. The `loadFile` method will then return a new and empty ArrayList of `record` back to the `start` method ","lastModifiedDate":"2021-03-30"},{"lineNumber":344,"author":{"gitId":"jonahtwl"},"content":"   in the `Duke` class. Should the `saveFileExist` returns true, for each line of text in the `finux.txt` file will be ","lastModifiedDate":"2021-03-30"},{"lineNumber":345,"author":{"gitId":"jonahtwl"},"content":"   parsed into the `parseRecord` method which will call the individual load methods `loadExpense`, `loadLoan`, ","lastModifiedDate":"2021-03-30"},{"lineNumber":346,"author":{"gitId":"jonahtwl"},"content":"   `loadSaving` based on a REGEX expression of the text data. Should the pattern be unrecognisable, or the file is ","lastModifiedDate":"2021-03-30"},{"lineNumber":347,"author":{"gitId":"jonahtwl"},"content":"   unable to be read, an exception will be thrown to the `start` method and FINUX will terminate. If all the text data ","lastModifiedDate":"2021-03-30"},{"lineNumber":348,"author":{"gitId":"jonahtwl"},"content":"   is properly loaded, the `loadFile` method will return the ArrayList of `record` to the `RecordList` object in the ","lastModifiedDate":"2021-03-30"},{"lineNumber":349,"author":{"gitId":"jonahtwl"},"content":"   `start` method.","lastModifiedDate":"2021-03-30"},{"lineNumber":350,"author":{"gitId":"jonahtwl"},"content":"   ","lastModifiedDate":"2021-03-30"},{"lineNumber":351,"author":{"gitId":"jonahtwl"},"content":"5. `initSaveFile` method will create a new `finux.txt` specified by the constant `SAVED_FILE_PATH`. It will call ","lastModifiedDate":"2021-03-30"},{"lineNumber":352,"author":{"gitId":"jonahtwl"},"content":"   `Ui#printSuccessfulFileCreation` on a successful creation of the file, but will throw an `IOExcpetion` if there was","lastModifiedDate":"2021-03-30"},{"lineNumber":353,"author":{"gitId":"jonahtwl"},"content":"   an error in creating the file.","lastModifiedDate":"2021-03-30"},{"lineNumber":354,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":355,"author":{"gitId":"jonahtwl"},"content":"6. `parseRawData` method will compare the pattern of the text in the `finux.txt` and call the respective methods ","lastModifiedDate":"2021-03-30"},{"lineNumber":356,"author":{"gitId":"jonahtwl"},"content":"   `loadExpense`, `loadLoan`, `loadSaving`, `loadCreditScoreRawData` based on the pattern that matches the `Expense`, ","lastModifiedDate":"2021-03-30"},{"lineNumber":357,"author":{"gitId":"jonahtwl"},"content":"   `Loan`, `Saving`, or the `creditScore` pattern in the saved file. This method will throw an exception back to ","lastModifiedDate":"2021-03-30"},{"lineNumber":358,"author":{"gitId":"jonahtwl"},"content":"   the `loadFile` method if any of the REGEX pattern does not match. (Add stuff here!)","lastModifiedDate":"2021-03-30"},{"lineNumber":359,"author":{"gitId":"jonahtwl"},"content":"   ","lastModifiedDate":"2021-03-30"},{"lineNumber":360,"author":{"gitId":"jonahtwl"},"content":"7. `extractArg` is a \"micro\" parser component of the `Storage` class. This method simply splits the raw data from the ","lastModifiedDate":"2021-03-30"},{"lineNumber":361,"author":{"gitId":"jonahtwl"},"content":"   `finux.txt` file into an array and returns the argument that is referenced by the index to its caller method with ","lastModifiedDate":"2021-03-30"},{"lineNumber":362,"author":{"gitId":"jonahtwl"},"content":"   their leading and trailing white spaces removed.","lastModifiedDate":"2021-03-30"},{"lineNumber":363,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":364,"author":{"gitId":"jonahtwl"},"content":"8. `loadExpense` will extract the individual components from the raw data parsed into it. This method will call the","lastModifiedDate":"2021-03-30"},{"lineNumber":365,"author":{"gitId":"jonahtwl"},"content":"   `extractArg` method which returns the components that are addressed by the index after splitting up the raw save","lastModifiedDate":"2021-03-25"},{"lineNumber":366,"author":{"gitId":"jonahtwl"},"content":"   file. The `amount` object in this method will be converted into a `BigInteger` type and the `issueDate` will be ","lastModifiedDate":"2021-03-25"},{"lineNumber":367,"author":{"gitId":"jonahtwl"},"content":"   parsed in the `localDate` type. An exception will be thrown if either `amount` or `issueDate` is not in the right ","lastModifiedDate":"2021-03-25"},{"lineNumber":368,"author":{"gitId":"jonahtwl"},"content":"   format which prevents them from being parsed into their respective types. It will then return a new `Expense` object","lastModifiedDate":"2021-03-25"},{"lineNumber":369,"author":{"gitId":"jonahtwl"},"content":"   to the `parseRecord` method.","lastModifiedDate":"2021-03-25"},{"lineNumber":370,"author":{"gitId":"jonahtwl"},"content":"   ","lastModifiedDate":"2021-03-25"},{"lineNumber":371,"author":{"gitId":"jonahtwl"},"content":"9. `loadSaving` works similar to `loadExpense` method, where the only difference is that it returns a new `Saving`","lastModifiedDate":"2021-03-30"},{"lineNumber":372,"author":{"gitId":"jonahtwl"},"content":"   object to the `parseRecord` method.","lastModifiedDate":"2021-03-25"},{"lineNumber":373,"author":{"gitId":"jonahtwl"},"content":"   ","lastModifiedDate":"2021-03-25"},{"lineNumber":374,"author":{"gitId":"jonahtwl"},"content":"10. `loadLoan` also works similar to both `loadExpense` and `loadSaving` method, but in the `loadLoan` method, ","lastModifiedDate":"2021-03-30"},{"lineNumber":375,"author":{"gitId":"jonahtwl"},"content":"   it has a few extra parameters. The first being a boolean `isReturn`, where `1` signifies returned and `0` not ","lastModifiedDate":"2021-03-30"},{"lineNumber":376,"author":{"gitId":"jonahtwl"},"content":"    returned. The `borrowerName` is the next variable in the `Loan` object. And lastly, the `returnDate`, the ","lastModifiedDate":"2021-03-30"},{"lineNumber":377,"author":{"gitId":"jonahtwl"},"content":"    `returnDate` will only return not null if the `isReturn` boolean has a value of `true`. This method then returns a ","lastModifiedDate":"2021-03-30"},{"lineNumber":378,"author":{"gitId":"jonahtwl"},"content":"    new `Loan` object to the `parseRecord` method.","lastModifiedDate":"2021-03-30"},{"lineNumber":379,"author":{"gitId":"jonahtwl"},"content":"   ","lastModifiedDate":"2021-03-25"},{"lineNumber":380,"author":{"gitId":"jonahtwl"},"content":"#### Storage Component Design Consideration","lastModifiedDate":"2021-03-25"},{"lineNumber":381,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":382,"author":{"gitId":"jonahtwl"},"content":"1. Regex pattern has to be strictly adhered to.","lastModifiedDate":"2021-03-25"},{"lineNumber":383,"author":{"gitId":"jonahtwl"},"content":"   * Spacings between the `|` and components have to be separated clearly.","lastModifiedDate":"2021-03-25"},{"lineNumber":384,"author":{"gitId":"jonahtwl"},"content":"   * Components in the `finux.txt` file should not contain any extraneous `|`.","lastModifiedDate":"2021-03-25"},{"lineNumber":385,"author":{"gitId":"jonahtwl"},"content":"   * Each component\u0027s index must be the same regardless of the instance of the object.","lastModifiedDate":"2021-03-25"},{"lineNumber":386,"author":{"gitId":"jonahtwl"},"content":"   ","lastModifiedDate":"2021-03-25"},{"lineNumber":387,"author":{"gitId":"jonahtwl"},"content":"2. Save file has to exist.","lastModifiedDate":"2021-03-25"},{"lineNumber":388,"author":{"gitId":"jonahtwl"},"content":"   * `finux.txt` has to be created upon the first time start of the application .","lastModifiedDate":"2021-03-25"},{"lineNumber":389,"author":{"gitId":"jonahtwl"},"content":"   * `finux.txt` is to be checked if exist before loading or creating a new file.","lastModifiedDate":"2021-03-25"},{"lineNumber":390,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":391,"author":{"gitId":"jonahtwl"},"content":"3. Variable components of each `record` object has to be parsed properly.","lastModifiedDate":"2021-03-25"},{"lineNumber":392,"author":{"gitId":"jonahtwl"},"content":"   * As the save function saves these `record` in a particular regex pattern and type, users who edit the save file","lastModifiedDate":"2021-03-25"},{"lineNumber":393,"author":{"gitId":"jonahtwl"},"content":"   directly may enter ambiguous characters like the `|`, thus each variable has to be parsed without any error thrown. ","lastModifiedDate":"2021-03-25"},{"lineNumber":394,"author":{"gitId":"jonahtwl"},"content":"   * Error has to be thrown if the saved text is unable to be parsed, as by allowing ambiguous values to be parsed into","lastModifiedDate":"2021-03-25"},{"lineNumber":395,"author":{"gitId":"jonahtwl"},"content":"   the application may cause unknown and unwanted outputs.","lastModifiedDate":"2021-03-25"},{"lineNumber":396,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":397,"author":{"gitId":"tzexern"},"content":"## 4. Implementation","lastModifiedDate":"2021-03-23"},{"lineNumber":398,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":399,"author":{"gitId":"tzexern"},"content":"---","lastModifiedDate":"2021-03-23"},{"lineNumber":400,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":401,"author":{"gitId":"tzexern"},"content":"This section introduces the specific implementation details and design thought processes","lastModifiedDate":"2021-03-25"},{"lineNumber":402,"author":{"gitId":"tzexern"},"content":"of some features in **Finux**.","lastModifiedDate":"2021-03-25"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":404,"author":{"gitId":"tzexern"},"content":"### 4.1 Add Feature","lastModifiedDate":"2021-03-23"},{"lineNumber":405,"author":{"gitId":"marklowsk"},"content":"The `add` feature aims to allow users to add *expense*, *loan*, and *saving* records.","lastModifiedDate":"2021-03-30"},{"lineNumber":406,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":407,"author":{"gitId":"marklowsk"},"content":"#### 4.1.1 Current Implementation","lastModifiedDate":"2021-04-02"},{"lineNumber":408,"author":{"gitId":"marklowsk"},"content":"The `add` feature is facilitated by `AddCommand`.\\","lastModifiedDate":"2021-04-02"},{"lineNumber":409,"author":{"gitId":"marklowsk"},"content":"When adding an expense `add -e bread loaf -a 2.50 -d today`, or\\","lastModifiedDate":"2021-03-30"},{"lineNumber":410,"author":{"gitId":"marklowsk"},"content":"adding a savings `add -s week\u0027s savings -a 100 -d 28/03/2021`, or\\","lastModifiedDate":"2021-03-30"},{"lineNumber":411,"author":{"gitId":"marklowsk"},"content":"adding a loan `add -l loan to gerard -a 200 -d 12012021 -p Gerard`,","lastModifiedDate":"2021-03-30"},{"lineNumber":412,"author":{"gitId":"marklowsk"},"content":"the `ParserHandler` will parse the input for `CommandHandler` to create the `AddCommand` object.","lastModifiedDate":"2021-03-30"},{"lineNumber":413,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":414,"author":{"gitId":"marklowsk"},"content":"By calling the `execute()` method,","lastModifiedDate":"2021-04-02"},{"lineNumber":415,"author":{"gitId":"marklowsk"},"content":"* the respective `Expense`, `Saving` or `Loan` object is added into the `RecordList` by invoking","lastModifiedDate":"2021-04-02"},{"lineNumber":416,"author":{"gitId":"marklowsk"},"content":"  `addRecord(Record)`.","lastModifiedDate":"2021-04-02"},{"lineNumber":417,"author":{"gitId":"marklowsk"},"content":"* Next, the `saveData(...)` from the `Storage` object is invoked to store the records to file.","lastModifiedDate":"2021-04-02"},{"lineNumber":418,"author":{"gitId":"marklowsk"},"content":"* Finally, a notification is printed onto the console with the help of `Ui`.","lastModifiedDate":"2021-04-02"},{"lineNumber":419,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":420,"author":{"gitId":"marklowsk"},"content":"![AddFeatureSequenceDiagram](img/AddFeatureSequenceDiagram.png)\\","lastModifiedDate":"2021-04-02"},{"lineNumber":421,"author":{"gitId":"marklowsk"},"content":"_Figure x: Sequence Diagram for `add {-e | -l | -s}`_","lastModifiedDate":"2021-04-02"},{"lineNumber":422,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":423,"author":{"gitId":"marklowsk"},"content":"\u003e 📝 The sequence diagram starts from Step 2 onward.","lastModifiedDate":"2021-04-02"},{"lineNumber":424,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":425,"author":{"gitId":"marklowsk"},"content":"Given below is an example usage scenario of how `AddCommand` behaves at each step.","lastModifiedDate":"2021-04-02"},{"lineNumber":426,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":427,"author":{"gitId":"marklowsk"},"content":"***Step 1:***\\","lastModifiedDate":"2021-04-02"},{"lineNumber":428,"author":{"gitId":"marklowsk"},"content":"User executes the command `add -e Company lunch -a 20.00 -d 02-04-2021`.\\","lastModifiedDate":"2021-04-02"},{"lineNumber":429,"author":{"gitId":"marklowsk"},"content":"The application invokes `ParserHandler#getParseInput()` to provide the parsed","lastModifiedDate":"2021-04-02"},{"lineNumber":430,"author":{"gitId":"marklowsk"},"content":"input to `CommandHandler#createCommand()`. This checks for the command type, `add`, and proceeds to validate the","lastModifiedDate":"2021-04-02"},{"lineNumber":431,"author":{"gitId":"marklowsk"},"content":"parsed input in the `new AddCommand()` constructor before returning the constructed `AddCommand` object to `Finux`.","lastModifiedDate":"2021-04-02"},{"lineNumber":432,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":433,"author":{"gitId":"marklowsk"},"content":"***Step 2:***\\","lastModifiedDate":"2021-04-02"},{"lineNumber":434,"author":{"gitId":"marklowsk"},"content":"The application next invokes the `AddCommand#execute()` to execute the user\u0027s instruction.","lastModifiedDate":"2021-04-02"},{"lineNumber":435,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":436,"author":{"gitId":"marklowsk"},"content":"***Step 3:***\\","lastModifiedDate":"2021-04-02"},{"lineNumber":437,"author":{"gitId":"marklowsk"},"content":"Inside the `AddCommand#execute()`, the method conducts a check on the `RecordType` enumeration before creating","lastModifiedDate":"2021-04-02"},{"lineNumber":438,"author":{"gitId":"marklowsk"},"content":"the `Record` object.","lastModifiedDate":"2021-04-02"},{"lineNumber":439,"author":{"gitId":"marklowsk"},"content":"\u003e ✔️ `EXPENSE` type creates a `new Expense(String,LocalDate,String)`","lastModifiedDate":"2021-04-02"},{"lineNumber":440,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":441,"author":{"gitId":"marklowsk"},"content":"\u003e ✔️ `LOAN` type creates a `new Loan(String,LocalDate,String,String)`","lastModifiedDate":"2021-04-02"},{"lineNumber":442,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":443,"author":{"gitId":"marklowsk"},"content":"\u003e ✔️ `SAVING` type creates a `new Saving(String,LocalDate,String)`","lastModifiedDate":"2021-04-02"},{"lineNumber":444,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":445,"author":{"gitId":"marklowsk"},"content":"***Step 4:***\\","lastModifiedDate":"2021-04-02"},{"lineNumber":446,"author":{"gitId":"marklowsk"},"content":"The `Record` object is added to into the `RecordList` object by invoking `RecordList#addRecord(Record)`.","lastModifiedDate":"2021-04-02"},{"lineNumber":447,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":448,"author":{"gitId":"marklowsk"},"content":"***Step 5:***\\","lastModifiedDate":"2021-04-02"},{"lineNumber":449,"author":{"gitId":"marklowsk"},"content":"The `RecordList` object is written to file by invoking `Storage#saveData(RecordList, CreditScoreReturnedLoansMap)`.","lastModifiedDate":"2021-04-02"},{"lineNumber":450,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":451,"author":{"gitId":"marklowsk"},"content":"***Step 6:***\\","lastModifiedDate":"2021-04-02"},{"lineNumber":452,"author":{"gitId":"marklowsk"},"content":"Lastly, a successful add message is printed by invoking `Ui#printSuccessfulAdd(Record,int)`.","lastModifiedDate":"2021-04-02"},{"lineNumber":453,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":454,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":455,"author":{"gitId":"marklowsk"},"content":"#### 4.1.2 Design Consideration","lastModifiedDate":"2021-04-02"},{"lineNumber":456,"author":{"gitId":"marklowsk"},"content":"This section shows the design considerations taken when implementing the add feature.","lastModifiedDate":"2021-04-02"},{"lineNumber":457,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":458,"author":{"gitId":"marklowsk"},"content":"Aspect: **How to manage so many different options**","lastModifiedDate":"2021-04-02"},{"lineNumber":459,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":460,"author":{"gitId":"marklowsk"},"content":"For record types such as `Expense` and `Saving`, they do not require additional options.","lastModifiedDate":"2021-04-02"},{"lineNumber":461,"author":{"gitId":"marklowsk"},"content":"But for `Loan` record type, it requires an extra option `-p` for the borrower name. Since the `add` command","lastModifiedDate":"2021-04-02"},{"lineNumber":462,"author":{"gitId":"marklowsk"},"content":"supports many different options and option ordering is not strict, this will complicate validation.","lastModifiedDate":"2021-04-02"},{"lineNumber":463,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":464,"author":{"gitId":"marklowsk"},"content":"The two choices to consider would be:","lastModifiedDate":"2021-04-02"},{"lineNumber":465,"author":{"gitId":"marklowsk"},"content":"* Use regular expressions (regex)","lastModifiedDate":"2021-04-02"},{"lineNumber":466,"author":{"gitId":"marklowsk"},"content":"* Use systematic validation","lastModifiedDate":"2021-04-02"},{"lineNumber":467,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":468,"author":{"gitId":"marklowsk"},"content":"|Approach | Pros | Cons| ","lastModifiedDate":"2021-04-02"},{"lineNumber":469,"author":{"gitId":"marklowsk"},"content":"|---------|------|-----|","lastModifiedDate":"2021-04-02"},{"lineNumber":470,"author":{"gitId":"marklowsk"},"content":"|Regular expressions|Less complicated validation procedure.|May need a very complicated regex String or multiple ones, for each Command|","lastModifiedDate":"2021-04-02"},{"lineNumber":471,"author":{"gitId":"marklowsk"},"content":"|Systematic validation|Option validation methods can be shared with other Commands|Many option violations to check|","lastModifiedDate":"2021-04-02"},{"lineNumber":472,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":473,"author":{"gitId":"marklowsk"},"content":"Having considered two of the approaches, we have decided to adopt the second approach.","lastModifiedDate":"2021-04-02"},{"lineNumber":474,"author":{"gitId":"marklowsk"},"content":"Systematic validation is better in the long run. It allows for code re-usability and addition for more","lastModifiedDate":"2021-04-02"},{"lineNumber":475,"author":{"gitId":"marklowsk"},"content":"modular changes,","lastModifiedDate":"2021-04-02"},{"lineNumber":476,"author":{"gitId":"marklowsk"},"content":"* i.e. addition of new options, tweaking validation procedures, etc...","lastModifiedDate":"2021-04-02"},{"lineNumber":477,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":478,"author":{"gitId":"marklowsk"},"content":"Other than increased complexity of regex Strings, any changes to command and option structure requires a completely","lastModifiedDate":"2021-04-02"},{"lineNumber":479,"author":{"gitId":"marklowsk"},"content":"new regex String. Therefore, systematic validation is the preferred approach, for the current and future developers.","lastModifiedDate":"2021-04-02"},{"lineNumber":480,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":481,"author":{"gitId":"tzexern"},"content":"### 4.2 List Feature","lastModifiedDate":"2021-03-23"},{"lineNumber":482,"author":{"gitId":"gerardtwk"},"content":"The `list` feature allows Finux users to list records that they have entered into the system.","lastModifiedDate":"2021-03-25"},{"lineNumber":483,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":484,"author":{"gitId":"gerardtwk"},"content":"To list loans:","lastModifiedDate":"2021-03-25"},{"lineNumber":485,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":486,"author":{"gitId":"gerardtwk"},"content":"`list -l`","lastModifiedDate":"2021-03-25"},{"lineNumber":487,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":488,"author":{"gitId":"gerardtwk"},"content":"To list expenses:","lastModifiedDate":"2021-03-25"},{"lineNumber":489,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":490,"author":{"gitId":"gerardtwk"},"content":"`list -e`","lastModifiedDate":"2021-03-25"},{"lineNumber":491,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":492,"author":{"gitId":"gerardtwk"},"content":"To list savings:","lastModifiedDate":"2021-03-25"},{"lineNumber":493,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":494,"author":{"gitId":"gerardtwk"},"content":"`list -s`","lastModifiedDate":"2021-03-25"},{"lineNumber":495,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":496,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":497,"author":{"gitId":"tzexern"},"content":"### 4.3 View Feature","lastModifiedDate":"2021-03-23"},{"lineNumber":498,"author":{"gitId":"jonahtwl"},"content":"The `view` feature aims to allow the users to view the total expenditures, loans, and savings for the respective ","lastModifiedDate":"2021-03-29"},{"lineNumber":499,"author":{"gitId":"LeeHanYongAndy"},"content":"category of *expense*, *loan*, and *saving* of the added records.  ","lastModifiedDate":"2021-03-26"},{"lineNumber":500,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":501,"author":{"gitId":"LeeHanYongAndy"},"content":"#### 4.3.1 Current Implementation","lastModifiedDate":"2021-03-26"},{"lineNumber":502,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":503,"author":{"gitId":"jonahtwl"},"content":"The `view` feature is facilitated by `ViewCommand`. By typing in `view` and following up with the record type, ","lastModifiedDate":"2021-03-29"},{"lineNumber":504,"author":{"gitId":"LeeHanYongAndy"},"content":"`{-e, -l, -s}`, the `ParserHandler` will parse the input for `CommandHandler` to create the `ViewCommand` object.","lastModifiedDate":"2021-03-26"},{"lineNumber":505,"author":{"gitId":"LeeHanYongAndy"},"content":"By calling the `execute()` method, the total amount will be printed onto the console with the help of `Ui`.","lastModifiedDate":"2021-03-26"},{"lineNumber":506,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":507,"author":{"gitId":"LeeHanYongAndy"},"content":"![ViewFeatureSequenceDiagram](img/ViewFeatureSequenceDiagram.png)\\","lastModifiedDate":"2021-04-01"},{"lineNumber":508,"author":{"gitId":"LeeHanYongAndy"},"content":"_Figure x: Sequence Diagram for **`view -e`**_","lastModifiedDate":"2021-03-30"},{"lineNumber":509,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":510,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e 📝 The sequence diagram starts from Step 2 onward.","lastModifiedDate":"2021-03-26"},{"lineNumber":511,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":512,"author":{"gitId":"LeeHanYongAndy"},"content":"Given below is an example usage scenario of how `ViewCommand` behaves at each step.","lastModifiedDate":"2021-03-26"},{"lineNumber":513,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":514,"author":{"gitId":"LeeHanYongAndy"},"content":"***Step 1:***\\","lastModifiedDate":"2021-03-26"},{"lineNumber":515,"author":{"gitId":"LeeHanYongAndy"},"content":"User executes the command `view -e`. The application invokes `ParserHandler#getParseInput()` to provide the parsed","lastModifiedDate":"2021-03-26"},{"lineNumber":516,"author":{"gitId":"LeeHanYongAndy"},"content":"input to `CommandHandler#createCommand()`. This checks for the command type, `view`, and proceeds to validate the","lastModifiedDate":"2021-03-26"},{"lineNumber":517,"author":{"gitId":"LeeHanYongAndy"},"content":"parsed input in the `new ViewCommand()` constructor before returning the constructed `ViewCommand` object to `Finux`.","lastModifiedDate":"2021-03-26"},{"lineNumber":518,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":519,"author":{"gitId":"LeeHanYongAndy"},"content":"***Step 2:***\\","lastModifiedDate":"2021-03-26"},{"lineNumber":520,"author":{"gitId":"LeeHanYongAndy"},"content":"The application next invokes the `ViewCommand#execute()` to execute the user\u0027s instruction.","lastModifiedDate":"2021-03-26"},{"lineNumber":521,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":522,"author":{"gitId":"LeeHanYongAndy"},"content":"***Step 3:***\\","lastModifiedDate":"2021-03-26"},{"lineNumber":523,"author":{"gitId":"marklowsk"},"content":"Inside the `ViewCommand#execute()`, the method conducts a check on the `RecordType` enumeration before executing the ","lastModifiedDate":"2021-04-02"},{"lineNumber":524,"author":{"gitId":"LeeHanYongAndy"},"content":"respective method.","lastModifiedDate":"2021-03-26"},{"lineNumber":525,"author":{"gitId":"marklowsk"},"content":"\u003e ✔️ `EXPENSE` type invokes `Ui#printTotalAmountExpense()`","lastModifiedDate":"2021-04-02"},{"lineNumber":526,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":527,"author":{"gitId":"marklowsk"},"content":"\u003e ✔️ `LOAN` type invokes `Ui#printTotalAmountLoan()`","lastModifiedDate":"2021-04-02"},{"lineNumber":528,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":529,"author":{"gitId":"marklowsk"},"content":"\u003e ✔️ `SAVING` type invokes `Ui#printTotalAmountSaving()`","lastModifiedDate":"2021-04-02"},{"lineNumber":530,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":531,"author":{"gitId":"LeeHanYongAndy"},"content":"***Step 4:***\\","lastModifiedDate":"2021-03-26"},{"lineNumber":532,"author":{"gitId":"LeeHanYongAndy"},"content":"The `Ui` will handle the respective invocation call. The basis for the three methods utilizes the `for` loop to","lastModifiedDate":"2021-03-26"},{"lineNumber":533,"author":{"gitId":"LeeHanYongAndy"},"content":"iterate through the `recordList` and will only add to the `totalAmount` if it is an instance of the respective","lastModifiedDate":"2021-03-26"},{"lineNumber":534,"author":{"gitId":"LeeHanYongAndy"},"content":"record type.","lastModifiedDate":"2021-03-26"},{"lineNumber":535,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e 📝 The `Ui#printTotalAmountLoan()` will imposed additional check on whether the record is returned.","lastModifiedDate":"2021-03-26"},{"lineNumber":536,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e Only records that are not returned will be added to the `totalAmount`","lastModifiedDate":"2021-03-26"},{"lineNumber":537,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":538,"author":{"gitId":"LeeHanYongAndy"},"content":"***Step 5:***\\","lastModifiedDate":"2021-03-26"},{"lineNumber":539,"author":{"gitId":"LeeHanYongAndy"},"content":"Finally, the `totalAmount` will be rounded off to two decimal place before printing onto the console.","lastModifiedDate":"2021-03-26"},{"lineNumber":540,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":541,"author":{"gitId":"LeeHanYongAndy"},"content":"#### 4.3.2 Design Consideration","lastModifiedDate":"2021-03-26"},{"lineNumber":542,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":543,"author":{"gitId":"LeeHanYongAndy"},"content":"This section shows the design considerations taken when implementing the view feature.","lastModifiedDate":"2021-03-26"},{"lineNumber":544,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":545,"author":{"gitId":"LeeHanYongAndy"},"content":"Aspect: **How many figures should the amount be allowed up to**","lastModifiedDate":"2021-03-26"},{"lineNumber":546,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":547,"author":{"gitId":"LeeHanYongAndy"},"content":"Since it is entirely possible that the amount provided by user to be very large or very small, the two choices to","lastModifiedDate":"2021-03-26"},{"lineNumber":548,"author":{"gitId":"LeeHanYongAndy"},"content":"consider would be:","lastModifiedDate":"2021-03-26"},{"lineNumber":549,"author":{"gitId":"LeeHanYongAndy"},"content":"* Integer (Classic approach)","lastModifiedDate":"2021-03-26"},{"lineNumber":550,"author":{"gitId":"LeeHanYongAndy"},"content":"* BigDecimal (Non-classic approach)","lastModifiedDate":"2021-03-26"},{"lineNumber":551,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":552,"author":{"gitId":"LeeHanYongAndy"},"content":"|Approach | Pros | Cons| ","lastModifiedDate":"2021-03-26"},{"lineNumber":553,"author":{"gitId":"LeeHanYongAndy"},"content":"|---------|------|-----|","lastModifiedDate":"2021-03-26"},{"lineNumber":554,"author":{"gitId":"LeeHanYongAndy"},"content":"|Integer|No additional class required|Limited to a fix amount of digit available to enter|","lastModifiedDate":"2021-03-26"},{"lineNumber":555,"author":{"gitId":"LeeHanYongAndy"},"content":"|BigDecimal|Allow more digits than classic approach|Need to create a BigDecimal object|","lastModifiedDate":"2021-03-26"},{"lineNumber":556,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":557,"author":{"gitId":"LeeHanYongAndy"},"content":"Having considered two of the approaches, we have decided to adopt the second approach. ","lastModifiedDate":"2021-03-26"},{"lineNumber":558,"author":{"gitId":"LeeHanYongAndy"},"content":"The deterministic factor was the possibility of very large number such as 1000 billions. Thus, covering more than","lastModifiedDate":"2021-03-26"},{"lineNumber":559,"author":{"gitId":"LeeHanYongAndy"},"content":"what the integer data type provided can cater to higher flexibility of the application.","lastModifiedDate":"2021-03-26"},{"lineNumber":560,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":561,"author":{"gitId":"LeeHanYongAndy"},"content":"Aspect: **When to round off the amount to two decimal place**","lastModifiedDate":"2021-03-26"},{"lineNumber":562,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":563,"author":{"gitId":"LeeHanYongAndy"},"content":"As the user can enter decimal into the amount field, the `ViewCommand` has two options of when to round off the value:","lastModifiedDate":"2021-03-26"},{"lineNumber":564,"author":{"gitId":"LeeHanYongAndy"},"content":"* When assigning value to the amount variable","lastModifiedDate":"2021-03-26"},{"lineNumber":565,"author":{"gitId":"LeeHanYongAndy"},"content":"* When printing the final computed value","lastModifiedDate":"2021-03-26"},{"lineNumber":566,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":567,"author":{"gitId":"LeeHanYongAndy"},"content":"|Approach|Pros|Cons|","lastModifiedDate":"2021-03-26"},{"lineNumber":568,"author":{"gitId":"LeeHanYongAndy"},"content":"|--------|----|----|","lastModifiedDate":"2021-03-26"},{"lineNumber":569,"author":{"gitId":"LeeHanYongAndy"},"content":"|Assigning value to the amount variable|Round off early to avoid complication|Additional time per assignment to round off|","lastModifiedDate":"2021-03-26"},{"lineNumber":570,"author":{"gitId":"LeeHanYongAndy"},"content":"|Printing the final computed value|Only round off once|Rounding off might be couple to other method which needs the amount field|","lastModifiedDate":"2021-03-26"},{"lineNumber":571,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":572,"author":{"gitId":"LeeHanYongAndy"},"content":"With the two approaches considered, we have decided to adopt the second approach as it is more efficient to round off","lastModifiedDate":"2021-03-26"},{"lineNumber":573,"author":{"gitId":"LeeHanYongAndy"},"content":"at the end and to preserve the accuracy for two decimal place. Since no other method is accessing the amount variable,","lastModifiedDate":"2021-03-26"},{"lineNumber":574,"author":{"gitId":"LeeHanYongAndy"},"content":"is it possible avoid rounding off during each value assignment until new or existing features requires it.","lastModifiedDate":"2021-03-26"},{"lineNumber":575,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":576,"author":{"gitId":"tzexern"},"content":"### 4.4 Return Feature","lastModifiedDate":"2021-03-23"},{"lineNumber":577,"author":{"gitId":"gerardtwk"},"content":"The `return` feature allows Finux users to mark a loan as returned.","lastModifiedDate":"2021-03-25"},{"lineNumber":578,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":579,"author":{"gitId":"gerardtwk"},"content":"`return -i \u003cindex of loan to return\u003e -d \u003creturn date\u003e`","lastModifiedDate":"2021-03-25"},{"lineNumber":580,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":581,"author":{"gitId":"gerardtwk"},"content":"Upon marking the loan as returned, *creditscore* for the borrower who loaned the book will be updated and saved into `finux.txt`","lastModifiedDate":"2021-03-25"},{"lineNumber":582,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":583,"author":{"gitId":"gerardtwk"},"content":"Example:","lastModifiedDate":"2021-03-25"},{"lineNumber":584,"author":{"gitId":"gerardtwk"},"content":"`return -i 2 -d 2021-03-16`","lastModifiedDate":"2021-03-25"},{"lineNumber":585,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":586,"author":{"gitId":"gerardtwk"},"content":"Output:","lastModifiedDate":"2021-03-25"},{"lineNumber":587,"author":{"gitId":"marklowsk"},"content":"Loan marked as returned: `[L][2021-03-16] Loan to Tom [v]`","lastModifiedDate":"2021-04-02"},{"lineNumber":588,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":589,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":590,"author":{"gitId":"tzexern"},"content":"### 4.5 Remove Feature","lastModifiedDate":"2021-03-23"},{"lineNumber":591,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":592,"author":{"gitId":"jonahtwl"},"content":"The `remove` feature aims to allow users to remove records after querying the record\u0027s","lastModifiedDate":"2021-03-29"},{"lineNumber":593,"author":{"gitId":"tzexern"},"content":"index number with the `list` command. The users will be able to then use the `remove`","lastModifiedDate":"2021-03-25"},{"lineNumber":594,"author":{"gitId":"tzexern"},"content":"command to delete certain records that they deem obsolete or is incorrect. Hence, this feature","lastModifiedDate":"2021-03-25"},{"lineNumber":595,"author":{"gitId":"tzexern"},"content":"allows them to amend their mistakes or edit their list with constraints.","lastModifiedDate":"2021-03-25"},{"lineNumber":596,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":597,"author":{"gitId":"tzexern"},"content":"#### 4.5.1 Current Implementation","lastModifiedDate":"2021-03-25"},{"lineNumber":598,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":599,"author":{"gitId":"jonahtwl"},"content":"The `remove` feature is facilitated by `RemoveCommand`. By running the command with required options and relevant ","lastModifiedDate":"2021-03-29"},{"lineNumber":600,"author":{"gitId":"tzexern"},"content":"parameters, our `CommandHandler` will construct the `RemoveCommand` object which will validate the input and provide","lastModifiedDate":"2021-04-01"},{"lineNumber":601,"author":{"gitId":"tzexern"},"content":"relevant parameters that will be used in the execute function.","lastModifiedDate":"2021-03-25"},{"lineNumber":602,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":603,"author":{"gitId":"tzexern"},"content":"![RemoveFeatureSequenceDiagram](img/RemoveFeatureSequenceDiagram.png)","lastModifiedDate":"2021-04-01"},{"lineNumber":604,"author":{"gitId":"tzexern"},"content":"*Figure x: Sequence Diagram for `remove -i 1`*","lastModifiedDate":"2021-04-01"},{"lineNumber":605,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":606,"author":{"gitId":"tzexern"},"content":"Given below is an example usage scenario of how `RemoveCommand` behaves at each step.","lastModifiedDate":"2021-03-25"},{"lineNumber":607,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":608,"author":{"gitId":"tzexern"},"content":"***Step 1:***\\","lastModifiedDate":"2021-03-25"},{"lineNumber":609,"author":{"gitId":"tzexern"},"content":"User executes the command `remove -i 1`. The application invokes `CommandHandler#createCommand()`, and since the ","lastModifiedDate":"2021-03-25"},{"lineNumber":610,"author":{"gitId":"tzexern"},"content":"command type is `remove`, the `createCommand` constructs a `RemoveCommand` object. The validation of the constructed","lastModifiedDate":"2021-03-25"},{"lineNumber":611,"author":{"gitId":"tzexern"},"content":"`RemoveCommand` is done in the constructor. The created command is then returned to `Finux`.","lastModifiedDate":"2021-03-25"},{"lineNumber":612,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":613,"author":{"gitId":"tzexern"},"content":"***Step 2:***\\","lastModifiedDate":"2021-03-25"},{"lineNumber":614,"author":{"gitId":"tzexern"},"content":"The `CommandHandler` terminates after parsing user input and creating the corresponding Command object. The application","lastModifiedDate":"2021-03-25"},{"lineNumber":615,"author":{"gitId":"tzexern"},"content":"invokes `RemoveCommand#execute()` to execute the user\u0027s instruction.","lastModifiedDate":"2021-03-25"},{"lineNumber":616,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":617,"author":{"gitId":"tzexern"},"content":"***Step 3:***\\","lastModifiedDate":"2021-03-25"},{"lineNumber":618,"author":{"gitId":"tzexern"},"content":"The `RemoveCommand` first invokes `RecordList#getRecordAt(recordNumberInt)` to get the record located at index","lastModifiedDate":"2021-03-25"},{"lineNumber":619,"author":{"gitId":"tzexern"},"content":"`recordNumberInt`. The record retrieved will be used in the next step.","lastModifiedDate":"2021-03-25"},{"lineNumber":620,"author":{"gitId":"tzexern"},"content":"\u003e 📝 `recordNumberInt` is the index number that you will see on the list minus by one.","lastModifiedDate":"2021-03-25"},{"lineNumber":621,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":622,"author":{"gitId":"tzexern"},"content":"***Step 4:***\\","lastModifiedDate":"2021-03-25"},{"lineNumber":623,"author":{"gitId":"tzexern"},"content":"The application invokes `Ui#printMessage()` and prints the record that will be removed with their respective ","lastModifiedDate":"2021-03-25"},{"lineNumber":624,"author":{"gitId":"tzexern"},"content":"`toString()` method. ","lastModifiedDate":"2021-03-25"},{"lineNumber":625,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":626,"author":{"gitId":"tzexern"},"content":"***Step 5:***\\","lastModifiedDate":"2021-03-25"},{"lineNumber":627,"author":{"gitId":"tzexern"},"content":"The application invokes `RecordList#deleteRecordAt(recordNumberInt)` which removes the record located at the index ","lastModifiedDate":"2021-03-25"},{"lineNumber":628,"author":{"gitId":"tzexern"},"content":"`recordNumberInt`.","lastModifiedDate":"2021-03-25"},{"lineNumber":629,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":630,"author":{"gitId":"tzexern"},"content":"***Step 6:***\\","lastModifiedDate":"2021-03-25"},{"lineNumber":631,"author":{"gitId":"tzexern"},"content":"The application invokes `Storage#saveData()` to save the modification on the record list onto the save file after the","lastModifiedDate":"2021-03-25"},{"lineNumber":632,"author":{"gitId":"tzexern"},"content":"removal of the record is successful. This will then enable future file loading to be accurate and there are no mismatch","lastModifiedDate":"2021-03-25"},{"lineNumber":633,"author":{"gitId":"tzexern"},"content":"of information or records.","lastModifiedDate":"2021-03-25"},{"lineNumber":634,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":635,"author":{"gitId":"tzexern"},"content":"The sequence diagram presented below depicts the interaction between the components for running the command.","lastModifiedDate":"2021-03-25"},{"lineNumber":636,"author":{"gitId":"tzexern"},"content":"`remove -i 1`.","lastModifiedDate":"2021-03-25"},{"lineNumber":637,"author":{"gitId":"tzexern"},"content":"\u003e 📝 The sequence diagram starts from Step 2 onward.","lastModifiedDate":"2021-03-25"},{"lineNumber":638,"author":{"gitId":"tzexern"},"content":"\u003e ","lastModifiedDate":"2021-03-25"},{"lineNumber":639,"author":{"gitId":"marklowsk"},"content":"\u003e 📝 The `commandLooper()` only serves as a user input reader here and takes certain actions when certain allowed ","lastModifiedDate":"2021-04-02"},{"lineNumber":640,"author":{"gitId":"marklowsk"},"content":"\u003e commands are given.","lastModifiedDate":"2021-04-02"},{"lineNumber":641,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":642,"author":{"gitId":"tzexern"},"content":"#### 4.5.2 Design Consideration","lastModifiedDate":"2021-03-25"},{"lineNumber":643,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":644,"author":{"gitId":"tzexern"},"content":"This section shows the design considerations taken when implementing the remove feature.","lastModifiedDate":"2021-03-25"},{"lineNumber":645,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":646,"author":{"gitId":"tzexern"},"content":"Aspect: **When should the application validate the user input index**","lastModifiedDate":"2021-03-25"},{"lineNumber":647,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":648,"author":{"gitId":"tzexern"},"content":"Since it is entirely possible that the index provided by the user can be invalid where the indices may be one of the","lastModifiedDate":"2021-03-25"},{"lineNumber":649,"author":{"gitId":"tzexern"},"content":"following:","lastModifiedDate":"2021-03-25"},{"lineNumber":650,"author":{"gitId":"tzexern"},"content":"* negative numbers","lastModifiedDate":"2021-03-25"},{"lineNumber":651,"author":{"gitId":"tzexern"},"content":"* numbers that refer to non-existent records","lastModifiedDate":"2021-03-25"},{"lineNumber":652,"author":{"gitId":"tzexern"},"content":"* non-numerics (e.g. alphabets, symbols, etc.)\\","lastModifiedDate":"2021-03-25"},{"lineNumber":653,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":654,"author":{"gitId":"tzexern"},"content":"There is a need to validate the index given by the user to ensure that the application does not terminate unexpectedly","lastModifiedDate":"2021-03-25"},{"lineNumber":655,"author":{"gitId":"tzexern"},"content":"and that suitable error messages are printed to notify the user of their intentional or unintentional parameter inputs.","lastModifiedDate":"2021-03-25"},{"lineNumber":656,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":657,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":658,"author":{"gitId":"tzexern"},"content":"|Approach | Pros | Cons| ","lastModifiedDate":"2021-03-25"},{"lineNumber":659,"author":{"gitId":"tzexern"},"content":"|---------|------|-----|","lastModifiedDate":"2021-03-25"},{"lineNumber":660,"author":{"gitId":"tzexern"},"content":"|During command execution.|No additional class required.|A new argument for the `execute()` method is needed. It also increases coupling and decreases cohesion.|","lastModifiedDate":"2021-03-25"},{"lineNumber":661,"author":{"gitId":"tzexern"},"content":"|During command creation.|Decreases coupling and increases cohesion as there is a clear cut in between responsibilities. The arguments of `execute()` can remain consistent with other command types.|Duplication of validation may occur in other commands.|","lastModifiedDate":"2021-03-25"},{"lineNumber":662,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":663,"author":{"gitId":"tzexern"},"content":"Having considered two of the approaches, we have decided to adopt the second approach which is to validate the index","lastModifiedDate":"2021-03-25"},{"lineNumber":664,"author":{"gitId":"tzexern"},"content":"during command creation. The lower coupling and higher cohesion was the deterministic factor here and also the","lastModifiedDate":"2021-03-25"},{"lineNumber":665,"author":{"gitId":"tzexern"},"content":"consistency of the arguments in `execute()` can also be maintained.","lastModifiedDate":"2021-03-25"},{"lineNumber":666,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":667,"author":{"gitId":"tzexern"},"content":"Aspect: **The way the index is specified(option)**","lastModifiedDate":"2021-03-25"},{"lineNumber":668,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":669,"author":{"gitId":"tzexern"},"content":"As the user has to specify the index of which record to remove, the index has to be provided but is `-i` required?","lastModifiedDate":"2021-03-25"},{"lineNumber":670,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":671,"author":{"gitId":"tzexern"},"content":"|Approach|Pros|Cons|","lastModifiedDate":"2021-03-25"},{"lineNumber":672,"author":{"gitId":"tzexern"},"content":"|--------|----|----|","lastModifiedDate":"2021-03-25"},{"lineNumber":673,"author":{"gitId":"tzexern"},"content":"|Have to use `-i`|The options will be consistent with the `return` command as it requires the user to input an index as well|Extra time is used to enter 2 more characters just to satisfy the application requirement where the `remove` command actually only need one parameter.|","lastModifiedDate":"2021-03-25"},{"lineNumber":674,"author":{"gitId":"tzexern"},"content":"|Do not have to use `-i`|Saves the time needed to input the 2 characters.|It will be inconsistent to require users to include `-i` for the `return` command but not for the `remove` command.|","lastModifiedDate":"2021-03-25"},{"lineNumber":675,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":676,"author":{"gitId":"tzexern"},"content":"With the two approaches considered, we have decided to adopt the first approach as it gives consistency for the","lastModifiedDate":"2021-03-25"},{"lineNumber":677,"author":{"gitId":"tzexern"},"content":"user experience, and it will not cause any confusion. The time wasted is negligible, and the consistency provides","lastModifiedDate":"2021-03-25"},{"lineNumber":678,"author":{"gitId":"tzexern"},"content":"long-term benefit.","lastModifiedDate":"2021-03-25"},{"lineNumber":679,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":680,"author":{"gitId":"tzexern"},"content":"### 4.6 Storage Feature","lastModifiedDate":"2021-03-23"},{"lineNumber":681,"author":{"gitId":"jonahtwl"},"content":"The `storage` feature allows all `records` and `creditScoreHashMap` to be stored locally on the device and for `records` and ","lastModifiedDate":"2021-03-30"},{"lineNumber":682,"author":{"gitId":"jonahtwl"},"content":"and `creditScoreHashMap` to be loaded from a saved file into the Finux application. This is the only feature implemented ","lastModifiedDate":"2021-03-30"},{"lineNumber":683,"author":{"gitId":"jonahtwl"},"content":"that does not have an explicit command to call it.","lastModifiedDate":"2021-03-29"},{"lineNumber":684,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":685,"author":{"gitId":"jonahtwl"},"content":"#### 4.6.1 Current Implementation","lastModifiedDate":"2021-03-29"},{"lineNumber":686,"author":{"gitId":"jonahtwl"},"content":"As the saving and loading methods have no explicit command calls, these methods are invoked by methods from the other","lastModifiedDate":"2021-03-29"},{"lineNumber":687,"author":{"gitId":"jonahtwl"},"content":"classes. During the launch of the Finux application, in the `start` method, `getRecordListData` is called to load the","lastModifiedDate":"2021-03-29"},{"lineNumber":688,"author":{"gitId":"jonahtwl"},"content":"data from the saved file: `finux.txt`. ","lastModifiedDate":"2021-03-29"},{"lineNumber":689,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":690,"author":{"gitId":"jonahtwl"},"content":"![SavingFeatureSequenceDiagram](img/StorageSequenceDiagramSave.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":691,"author":{"gitId":"jonahtwl"},"content":"*Figure x: Sequence Diagram for Storage\u0027s save function*","lastModifiedDate":"2021-03-31"},{"lineNumber":692,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":693,"author":{"gitId":"jonahtwl"},"content":"Saving of data works differently, the data will be automatically saved into `finux.txt` only with a few ","lastModifiedDate":"2021-04-04"},{"lineNumber":694,"author":{"gitId":"jonahtwl"},"content":"particular command calls, these calls are the commands that will alter the `records` in the `RecordList`. As","lastModifiedDate":"2021-04-04"},{"lineNumber":695,"author":{"gitId":"jonahtwl"},"content":"the `creditScoreReturnLoansMap` is also altered by changes in the `Loans` object. It will also be stored and updated","lastModifiedDate":"2021-04-04"},{"lineNumber":696,"author":{"gitId":"jonahtwl"},"content":"together with the commands below.","lastModifiedDate":"2021-04-04"},{"lineNumber":697,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":698,"author":{"gitId":"jonahtwl"},"content":"The following commands and scenarios where these `records` will be saved locally into the save file:","lastModifiedDate":"2021-03-29"},{"lineNumber":699,"author":{"gitId":"jonahtwl"},"content":"* `add`","lastModifiedDate":"2021-03-29"},{"lineNumber":700,"author":{"gitId":"jonahtwl"},"content":"* `remove`","lastModifiedDate":"2021-03-29"},{"lineNumber":701,"author":{"gitId":"jonahtwl"},"content":"* `return`","lastModifiedDate":"2021-03-29"},{"lineNumber":702,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":703,"author":{"gitId":"jonahtwl"},"content":"The sequence below will show you how the `Storage` class behaves at each step. As all three methods above generally","lastModifiedDate":"2021-03-29"},{"lineNumber":704,"author":{"gitId":"jonahtwl"},"content":"behave similarly in the way they call the `saveData` method, the following will be generalised to prevent repetition","lastModifiedDate":"2021-03-29"},{"lineNumber":705,"author":{"gitId":"jonahtwl"},"content":"for all the three methods above.","lastModifiedDate":"2021-03-29"},{"lineNumber":706,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":707,"author":{"gitId":"jonahtwl"},"content":"***Step 1***\\","lastModifiedDate":"2021-04-04"},{"lineNumber":708,"author":{"gitId":"jonahtwl"},"content":"Before the end of the `add`, `remove` or `return` command, the `saveData()` method will be invoked.","lastModifiedDate":"2021-04-04"},{"lineNumber":709,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":710,"author":{"gitId":"jonahtwl"},"content":"***Step 2***\\","lastModifiedDate":"2021-04-04"},{"lineNumber":711,"author":{"gitId":"jonahtwl"},"content":"The `saveData()` method will then call on the `writeRecordListToSaveFile()` method. This method will pass the","lastModifiedDate":"2021-04-04"},{"lineNumber":712,"author":{"gitId":"jonahtwl"},"content":"recordList back to the `RecordList` class to invoke the `getRecordAt()` method.","lastModifiedDate":"2021-04-04"},{"lineNumber":713,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":714,"author":{"gitId":"jonahtwl"},"content":"***Step 3***\\","lastModifiedDate":"2021-04-04"},{"lineNumber":715,"author":{"gitId":"jonahtwl"},"content":"The `getRecordAt()` method will return the `record` that is identified by its index. With this `record`, the","lastModifiedDate":"2021-04-04"},{"lineNumber":716,"author":{"gitId":"jonahtwl"},"content":"method `writeRecordListToSaveFile` will then call on the `convertFileFormat()` method in the `RecordList` class. This","lastModifiedDate":"2021-04-04"},{"lineNumber":717,"author":{"gitId":"jonahtwl"},"content":"method will convert the `record` that is stored in the `recordList` into a text readable format.","lastModifiedDate":"2021-04-04"},{"lineNumber":718,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":719,"author":{"gitId":"jonahtwl"},"content":"***Step 4***\\","lastModifiedDate":"2021-04-04"},{"lineNumber":720,"author":{"gitId":"jonahtwl"},"content":"The text format of the `record` will then be written into the `finux.txt` file through the `FileWriter` write method.","lastModifiedDate":"2021-04-04"},{"lineNumber":721,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":722,"author":{"gitId":"jonahtwl"},"content":"***Step 5***\\","lastModifiedDate":"2021-04-04"},{"lineNumber":723,"author":{"gitId":"jonahtwl"},"content":"The `writeRecordListToSaveFile()` will repeat Steps 2 to 4 until the last `record` in the `recordList`. And each ","lastModifiedDate":"2021-04-04"},{"lineNumber":724,"author":{"gitId":"jonahtwl"},"content":"`record` will be written and separated by a newline.","lastModifiedDate":"2021-04-04"},{"lineNumber":725,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":726,"author":{"gitId":"jonahtwl"},"content":"---","lastModifiedDate":"2021-04-04"},{"lineNumber":727,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":728,"author":{"gitId":"jonahtwl"},"content":"![LoadingFeatureSequenceDiagram](img/StorageSequenceDiagramLoad.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":729,"author":{"gitId":"jonahtwl"},"content":"*Figure x: Sequence Diagram for Storage\u0027s load function*","lastModifiedDate":"2021-03-31"},{"lineNumber":730,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":731,"author":{"gitId":"jonahtwl"},"content":"Finux will automatically load the data from the save file: `finux.txt`. When the Finux application is launched, the","lastModifiedDate":"2021-04-04"},{"lineNumber":732,"author":{"gitId":"jonahtwl"},"content":"data from the file will be loaded during the initialising phase, even before the welcome message is printed. The error","lastModifiedDate":"2021-04-04"},{"lineNumber":733,"author":{"gitId":"jonahtwl"},"content":"and exception handling is omitted from the diagram above as the application will print a failed initialization message","lastModifiedDate":"2021-04-04"},{"lineNumber":734,"author":{"gitId":"jonahtwl"},"content":"and terminate.","lastModifiedDate":"2021-04-04"},{"lineNumber":735,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":736,"author":{"gitId":"jonahtwl"},"content":"***Step 1***\\","lastModifiedDate":"2021-04-04"},{"lineNumber":737,"author":{"gitId":"jonahtwl"},"content":"When the user launches the `finux.jar` application, in the `start` method. The `loadFile` method will be invoked.","lastModifiedDate":"2021-04-04"},{"lineNumber":738,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":739,"author":{"gitId":"jonahtwl"},"content":"***Step 2***\\","lastModifiedDate":"2021-04-04"},{"lineNumber":740,"author":{"gitId":"jonahtwl"},"content":"The `loadFile` method will first check for the save file, if it exists it will then call upon the `parseRawData` method","lastModifiedDate":"2021-04-04"},{"lineNumber":741,"author":{"gitId":"jonahtwl"},"content":"which will read and match the contents of the `finux.txt` file with the regex patterns. It will then call on the ","lastModifiedDate":"2021-04-04"},{"lineNumber":742,"author":{"gitId":"jonahtwl"},"content":"respective methods to return the object type of it. (In this case, `Expense`, `Loan`, `Savings`, ","lastModifiedDate":"2021-04-04"},{"lineNumber":743,"author":{"gitId":"jonahtwl"},"content":"`creditScoreReturnLoansMap`)","lastModifiedDate":"2021-04-04"},{"lineNumber":744,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":745,"author":{"gitId":"jonahtwl"},"content":"***Step 3***\\","lastModifiedDate":"2021-04-04"},{"lineNumber":746,"author":{"gitId":"jonahtwl"},"content":"With the returned objects, they are now parsed into the `processParsedObject` method to be added into their respective","lastModifiedDate":"2021-04-04"},{"lineNumber":747,"author":{"gitId":"jonahtwl"},"content":"classes. With the instances of `Record` being added into the `RecordList` and the `creditScoreReturnedLoansMap` into","lastModifiedDate":"2021-04-04"},{"lineNumber":748,"author":{"gitId":"jonahtwl"},"content":"the `HashMap` of itself.","lastModifiedDate":"2021-04-04"},{"lineNumber":749,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":750,"author":{"gitId":"jonahtwl"},"content":"***Step 4***\\","lastModifiedDate":"2021-04-04"},{"lineNumber":751,"author":{"gitId":"jonahtwl"},"content":"The `start` method in the `Finux` class will then call the `getRecordListData` method to retrieve the loaded ","lastModifiedDate":"2021-04-04"},{"lineNumber":752,"author":{"gitId":"jonahtwl"},"content":"`RecordList` from the `Storage` class, this is also the same with the `creditScoreReturnedLoansMap` where the `start`","lastModifiedDate":"2021-04-04"},{"lineNumber":753,"author":{"gitId":"jonahtwl"},"content":"method in the `Finux` class will call the `getMapData` method from the `Storage` class which will then return the","lastModifiedDate":"2021-04-04"},{"lineNumber":754,"author":{"gitId":"jonahtwl"},"content":"`HashMap`.","lastModifiedDate":"2021-04-04"},{"lineNumber":755,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":756,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":757,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":758,"author":{"gitId":"jonahtwl"},"content":"#### 4.6.2 Design Consideration","lastModifiedDate":"2021-03-29"},{"lineNumber":759,"author":{"gitId":"jonahtwl"},"content":"This section will walk you through the design considerations taken when implementing the remove feature.","lastModifiedDate":"2021-03-29"},{"lineNumber":760,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":761,"author":{"gitId":"jonahtwl"},"content":"Aspect: **When should the data be saved into a local file**","lastModifiedDate":"2021-03-29"},{"lineNumber":762,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":763,"author":{"gitId":"jonahtwl"},"content":"Since we do not have an explicit function call to save the files, the data should be automatically saved but there are","lastModifiedDate":"2021-03-29"},{"lineNumber":764,"author":{"gitId":"jonahtwl"},"content":"multiple occasions that this can be invoked:","lastModifiedDate":"2021-03-29"},{"lineNumber":765,"author":{"gitId":"jonahtwl"},"content":"* On exit","lastModifiedDate":"2021-03-29"},{"lineNumber":766,"author":{"gitId":"jonahtwl"},"content":"* After each command call","lastModifiedDate":"2021-03-29"},{"lineNumber":767,"author":{"gitId":"jonahtwl"},"content":"* After any command call that edits data in `RecordList`","lastModifiedDate":"2021-03-29"},{"lineNumber":768,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":769,"author":{"gitId":"jonahtwl"},"content":"|Approach|Pros|Cons|","lastModifiedDate":"2021-03-29"},{"lineNumber":770,"author":{"gitId":"jonahtwl"},"content":"|--------|----|----|","lastModifiedDate":"2021-03-29"},{"lineNumber":771,"author":{"gitId":"jonahtwl"},"content":"|On Exit|Save just has to be called exactly once, minimal coupling|If program crashes before `exit` is called, all data will be lost|","lastModifiedDate":"2021-03-29"},{"lineNumber":772,"author":{"gitId":"jonahtwl"},"content":"|After each command call|Guaranteed save after every successful command call, users can \"save\" the data by simply entering any legal commands|Extraneous calls of save, high coupling, a lot of passing of data around|","lastModifiedDate":"2021-03-29"},{"lineNumber":773,"author":{"gitId":"jonahtwl"},"content":"|After any command call that edits data in `RecordList`|Allows data to be saved after every update to the `RecordList`|Some coupling between the methods that updates the `records` and calling the save method.|","lastModifiedDate":"2021-03-29"},{"lineNumber":774,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":775,"author":{"gitId":"jonahtwl"},"content":"\u003e 💡 Note that data in the HashMap `creditScoreHashMap` is related directly to the `Loan` object in the `RecordList`, thus","lastModifiedDate":"2021-03-30"},{"lineNumber":776,"author":{"gitId":"jonahtwl"},"content":"\u003e we have omitted the mention of it here as any changes to the `creditScoreHashMap` will also be reflected in the `Loan`","lastModifiedDate":"2021-03-30"},{"lineNumber":777,"author":{"gitId":"jonahtwl"},"content":"\u003e object which is a part of the `RecordList`.","lastModifiedDate":"2021-03-29"},{"lineNumber":778,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":779,"author":{"gitId":"jonahtwl"},"content":"After considering the above approaches, we have decided to adopt the third approach even though there might be more","lastModifiedDate":"2021-03-29"},{"lineNumber":780,"author":{"gitId":"jonahtwl"},"content":"coupling than the first method. By choosing the third approach, we can ensure that our data is stored safely and as ","lastModifiedDate":"2021-03-29"},{"lineNumber":781,"author":{"gitId":"jonahtwl"},"content":"compared to the second approach, the third approach minimises the coupling within our methods.","lastModifiedDate":"2021-03-29"},{"lineNumber":782,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":783,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":784,"author":{"gitId":"tzexern"},"content":"### 4.7 Credit Score Feature","lastModifiedDate":"2021-03-23"},{"lineNumber":785,"author":{"gitId":"gerardtwk"},"content":"The `creditscore` feature aims to provide users with a computation of borrowers\u0027 credibility via a point scoring system.","lastModifiedDate":"2021-03-25"},{"lineNumber":786,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":787,"author":{"gitId":"gerardtwk"},"content":"`creditscore \u003cborrower_name\u003e`","lastModifiedDate":"2021-03-25"},{"lineNumber":788,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":789,"author":{"gitId":"gerardtwk"},"content":"With this score, Finux users can view and assess the credibility of the borrowers.","lastModifiedDate":"2021-03-25"},{"lineNumber":790,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":791,"author":{"gitId":"gerardtwk"},"content":"Example:","lastModifiedDate":"2021-03-25"},{"lineNumber":792,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":793,"author":{"gitId":"gerardtwk"},"content":"`creditscore Tom`","lastModifiedDate":"2021-03-25"},{"lineNumber":794,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":795,"author":{"gitId":"gerardtwk"},"content":"Output:","lastModifiedDate":"2021-03-25"},{"lineNumber":796,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":797,"author":{"gitId":"gerardtwk"},"content":"Credit score for Tom is 90","lastModifiedDate":"2021-03-25"},{"lineNumber":798,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":799,"author":{"gitId":"tzexern"},"content":"## 5. Documentation, Logging, Testing, and DevOps","lastModifiedDate":"2021-03-23"},{"lineNumber":800,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":801,"author":{"gitId":"tzexern"},"content":"---","lastModifiedDate":"2021-03-23"},{"lineNumber":802,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":803,"author":{"gitId":"tzexern"},"content":"...","lastModifiedDate":"2021-03-23"},{"lineNumber":804,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":805,"author":{"gitId":"tzexern"},"content":"## Appendix A: Product Scope","lastModifiedDate":"2021-03-23"},{"lineNumber":806,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":807,"author":{"gitId":"tzexern"},"content":"### A.1 Target User Profile","lastModifiedDate":"2021-03-23"},{"lineNumber":808,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":809,"author":{"gitId":"LeeHanYongAndy"},"content":"* Computing students","lastModifiedDate":"2021-03-24"},{"lineNumber":810,"author":{"gitId":"LeeHanYongAndy"},"content":"* Background in CLI interface","lastModifiedDate":"2021-03-24"},{"lineNumber":811,"author":{"gitId":"LeeHanYongAndy"},"content":"* Prefer typing in CLI over traditional GUI clicking","lastModifiedDate":"2021-03-24"},{"lineNumber":812,"author":{"gitId":"LeeHanYongAndy"},"content":"* Need to track expenditure and saving","lastModifiedDate":"2021-03-24"},{"lineNumber":813,"author":{"gitId":"LeeHanYongAndy"},"content":"* Borrowed some money to their friends","lastModifiedDate":"2021-03-24"},{"lineNumber":814,"author":{"gitId":"LeeHanYongAndy"},"content":"* Need to track borrowings and loans ","lastModifiedDate":"2021-03-24"},{"lineNumber":815,"author":{"gitId":"LeeHanYongAndy"},"content":"* Good with typing","lastModifiedDate":"2021-03-24"},{"lineNumber":816,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":817,"author":{"gitId":"tzexern"},"content":"### A.2 Value proposition","lastModifiedDate":"2021-03-23"},{"lineNumber":818,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":819,"author":{"gitId":"LeeHanYongAndy"},"content":"#### A.2.1 Problem Identification","lastModifiedDate":"2021-03-26"},{"lineNumber":820,"author":{"gitId":"LeeHanYongAndy"},"content":"Problems faced by students that Finux aim to assist with.","lastModifiedDate":"2021-03-24"},{"lineNumber":821,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e * [Problem] Wastage of time due to connection/latency issues went accessing finance tracking website.","lastModifiedDate":"2021-03-24"},{"lineNumber":822,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e * [Solution] Use a local based application.","lastModifiedDate":"2021-03-24"},{"lineNumber":823,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":824,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e * [Problem] Hassle to use different applications to keep track of various stuff.","lastModifiedDate":"2021-03-24"},{"lineNumber":825,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e * [Solution] Provide an integrated platform to record any expenses, loans, or saving.","lastModifiedDate":"2021-03-24"},{"lineNumber":826,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":827,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e * [Problem] Disorganization issues arising from keep multiple tracking applications.","lastModifiedDate":"2021-03-24"},{"lineNumber":828,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e * [Solution] Provide the option to view each category of records within an integrated platform.","lastModifiedDate":"2021-03-24"},{"lineNumber":829,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":830,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e * [Problem] Spending time to gauge whether to borrow money to a friend.","lastModifiedDate":"2021-03-24"},{"lineNumber":831,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e * [Solution] Provide a soft gauge through credit score indicators.","lastModifiedDate":"2021-03-24"},{"lineNumber":832,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":833,"author":{"gitId":"LeeHanYongAndy"},"content":"#### A.2.2 Value Adding","lastModifiedDate":"2021-03-26"},{"lineNumber":834,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":835,"author":{"gitId":"LeeHanYongAndy"},"content":"Finux aims to integrate the process of managing and keeping track of finance movements without the need to access online","lastModifiedDate":"2021-03-24"},{"lineNumber":836,"author":{"gitId":"LeeHanYongAndy"},"content":"websites and using different applications to keep track various movement such as loans and expenditure. Finux","lastModifiedDate":"2021-03-24"},{"lineNumber":837,"author":{"gitId":"LeeHanYongAndy"},"content":"provide an all-in-one platform for students who are usually in front of their computers. The student\u0027s expertises in ","lastModifiedDate":"2021-03-24"},{"lineNumber":838,"author":{"gitId":"LeeHanYongAndy"},"content":"coding and typing can speed up the process of their finance management through familiarity with the CLI interface.","lastModifiedDate":"2021-03-24"},{"lineNumber":839,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":840,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e ❗ **CAUTION:** Finux does not provide any finance advise.","lastModifiedDate":"2021-03-24"},{"lineNumber":841,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":842,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":843,"author":{"gitId":"tzexern"},"content":"## Appendix B: User Stories","lastModifiedDate":"2021-03-23"},{"lineNumber":844,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":845,"author":{"gitId":"tzexern"},"content":"---","lastModifiedDate":"2021-03-23"},{"lineNumber":846,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":847,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":848,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":849,"author":{"gitId":"tzexern"},"content":"|v1.0|user|be able to add a record (expense) with dates|record each expense into the app.|","lastModifiedDate":"2021-03-23"},{"lineNumber":850,"author":{"gitId":"tzexern"},"content":"|v1.0|clumsy user|be able to delete wrong inputs|easily rectify errors in the record list.|","lastModifiedDate":"2021-03-23"},{"lineNumber":851,"author":{"gitId":"tzexern"},"content":"|v1.0|debt collector (Student)|list down a list of people who owes me money with a deadline|make sure that they return their money.|","lastModifiedDate":"2021-03-23"},{"lineNumber":852,"author":{"gitId":"tzexern"},"content":"|v1.0|student|list each and every incurred expense|better manage my daily/weekly expenses.|","lastModifiedDate":"2021-03-23"},{"lineNumber":853,"author":{"gitId":"tzexern"},"content":"|v1.0|SOC student|have a CLI style money management system|accomplish tasks faster typing on a CLI compared to clicking on a GUI.|","lastModifiedDate":"2021-03-23"},{"lineNumber":854,"author":{"gitId":"tzexern"},"content":"|v1.0|user|be able to view the total expenditure, saving and loan credit|know the total amount of each category for planning and viewing.|","lastModifiedDate":"2021-03-23"},{"lineNumber":855,"author":{"gitId":"tzexern"},"content":"|v1.0|debt collector (Student)|mark a loan as returned|know which loans are returned to me.|","lastModifiedDate":"2021-03-23"},{"lineNumber":856,"author":{"gitId":"tzexern"},"content":"|v1.0|new user|know the list of commands|use the app correctly.|","lastModifiedDate":"2021-03-23"},{"lineNumber":857,"author":{"gitId":"tzexern"},"content":"|v2.0|new user|know what function I can use|tell what are the valid inputs for the application.|","lastModifiedDate":"2021-03-23"},{"lineNumber":858,"author":{"gitId":"tzexern"},"content":"|v2.0|lender|know the loanee\u0027s punctuality on returning the loan|gauge who to continue lending money the next time.|","lastModifiedDate":"2021-03-23"},{"lineNumber":859,"author":{"gitId":"tzexern"},"content":"|v2.0|student|know how trustworthy a person is according to a score indicator|decide how risk-free it is to lend money to the said person.|","lastModifiedDate":"2021-03-23"},{"lineNumber":860,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":861,"author":{"gitId":"tzexern"},"content":"## Appendix C: Non-Functional Requirements","lastModifiedDate":"2021-03-23"},{"lineNumber":862,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":863,"author":{"gitId":"tzexern"},"content":"---","lastModifiedDate":"2021-03-23"},{"lineNumber":864,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":865,"author":{"gitId":"tzexern"},"content":"1. The application should be responsive.","lastModifiedDate":"2021-03-23"},{"lineNumber":866,"author":{"gitId":"tzexern"},"content":"1. The application should work on most operating systems (OS) such as Windows and Linux with `Java 11` installed.","lastModifiedDate":"2021-03-23"},{"lineNumber":867,"author":{"gitId":"tzexern"},"content":"1. Users who can type fast should be able to complete equivalent tasks faster as compared to using a mouse.","lastModifiedDate":"2021-03-23"},{"lineNumber":868,"author":{"gitId":"tzexern"},"content":"1. Users should be able to use the application with ease with the help of the User Guide (UG) and the Developer\u0027s Guide (DG).","lastModifiedDate":"2021-03-23"},{"lineNumber":869,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":870,"author":{"gitId":"tzexern"},"content":"## Appendix D: Instructions for manual testing","lastModifiedDate":"2021-03-23"},{"lineNumber":871,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":872,"author":{"gitId":"tzexern"},"content":"---","lastModifiedDate":"2021-03-23"},{"lineNumber":873,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":874,"author":{"gitId":"tzexern"},"content":"### D.1: Launch and Shutdown","lastModifiedDate":"2021-04-03"},{"lineNumber":875,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":876,"author":{"gitId":"tzexern"},"content":"**Initial Launch**","lastModifiedDate":"2021-04-03"},{"lineNumber":877,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":878,"author":{"gitId":"tzexern"},"content":"1. Download the jar file and copy it into an empty folder where the application will save its files in.","lastModifiedDate":"2021-04-03"},{"lineNumber":879,"author":{"gitId":"tzexern"},"content":"1. Open a new command prompt (Windows) or terminal (MacOS) and navigate to the directory containing `Finux.jar`.","lastModifiedDate":"2021-04-03"},{"lineNumber":880,"author":{"gitId":"tzexern"},"content":"1. Enter the command `java -jar Finux.jar` to launch Finux.","lastModifiedDate":"2021-04-03"},{"lineNumber":881,"author":{"gitId":"tzexern"},"content":"1. Program will create a new save file if there are no existing one or load a previously saved file, thereafter Finux","lastModifiedDate":"2021-04-03"},{"lineNumber":882,"author":{"gitId":"tzexern"},"content":"will be ready for use.","lastModifiedDate":"2021-04-03"},{"lineNumber":883,"author":{"gitId":"tzexern"},"content":"   ","lastModifiedDate":"2021-04-03"},{"lineNumber":884,"author":{"gitId":"tzexern"},"content":"**Shutdown**","lastModifiedDate":"2021-04-03"},{"lineNumber":885,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":886,"author":{"gitId":"tzexern"},"content":"1. To exit Finux, enter the `exit` command.","lastModifiedDate":"2021-04-03"},{"lineNumber":887,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":888,"author":{"gitId":"tzexern"},"content":"### D.2: Adding an expense to the record list","lastModifiedDate":"2021-04-03"},{"lineNumber":889,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":890,"author":{"gitId":"tzexern"},"content":"1. Prerequisite: None.","lastModifiedDate":"2021-04-03"},{"lineNumber":891,"author":{"gitId":"tzexern"},"content":"1. Test case: `add -e Plain bread loaf -a 2.50 -d 28/03/2021`","lastModifiedDate":"2021-04-03"},{"lineNumber":892,"author":{"gitId":"tzexern"},"content":"   Expected: Adds an `expense` with the description \u0027`Plain bread loaf`\u0027 with an amount of `2.50` dollars on `28th March 2021`.","lastModifiedDate":"2021-04-03"},{"lineNumber":893,"author":{"gitId":"tzexern"},"content":"1. Test case: `add -e Gym equipment -a 500 -d 02/04/2021`","lastModifiedDate":"2021-04-03"},{"lineNumber":894,"author":{"gitId":"tzexern"},"content":"   Expected: Adds an `expense` with the description \u0027`Gym equipment`\u0027 with an amount of `500`. dollars on `2nd April 2021`.","lastModifiedDate":"2021-04-03"},{"lineNumber":895,"author":{"gitId":"tzexern"},"content":"1. Other incorrect commands to try:","lastModifiedDate":"2021-04-03"},{"lineNumber":896,"author":{"gitId":"tzexern"},"content":"   1. `add`","lastModifiedDate":"2021-04-03"},{"lineNumber":897,"author":{"gitId":"tzexern"},"content":"   1. `add -e`","lastModifiedDate":"2021-04-03"},{"lineNumber":898,"author":{"gitId":"tzexern"},"content":"   1. `add -e -a`","lastModifiedDate":"2021-04-03"},{"lineNumber":899,"author":{"gitId":"tzexern"},"content":"   1. `add -e -a -d`","lastModifiedDate":"2021-04-03"},{"lineNumber":900,"author":{"gitId":"tzexern"},"content":"   1. `add -e lunch -a x -d 28/03/2021`","lastModifiedDate":"2021-04-03"},{"lineNumber":901,"author":{"gitId":"tzexern"},"content":"      (where `x` is a negative number or a word)","lastModifiedDate":"2021-04-03"},{"lineNumber":902,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":903,"author":{"gitId":"tzexern"},"content":"### D.3: Adding a loan to the record list","lastModifiedDate":"2021-04-03"},{"lineNumber":904,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":905,"author":{"gitId":"tzexern"},"content":"1. Prerequisite: None.","lastModifiedDate":"2021-04-03"},{"lineNumber":906,"author":{"gitId":"tzexern"},"content":"1. Test case: `add -l 1st loan to Mark -a 200 -d 20/03/2021 -p Mark`","lastModifiedDate":"2021-04-03"},{"lineNumber":907,"author":{"gitId":"tzexern"},"content":"   Expected: Adds a `loan` with the description \u0027`1st loan to Mark`\u0027 with an amount of `200` dollars on `20th March 2021`. ","lastModifiedDate":"2021-04-03"},{"lineNumber":908,"author":{"gitId":"tzexern"},"content":"   The loan is associated with `Mark`.","lastModifiedDate":"2021-04-03"},{"lineNumber":909,"author":{"gitId":"tzexern"},"content":"1. Test case: `add -l 1st loan to Jason -a 520 -d 01/04/2021 -p Jason`","lastModifiedDate":"2021-04-03"},{"lineNumber":910,"author":{"gitId":"tzexern"},"content":"   Expected: Adds a `loan` with the description \u0027`1st loan to Jason`\u0027 with an amount of `520` dollars on `1st April 2021`.","lastModifiedDate":"2021-04-03"},{"lineNumber":911,"author":{"gitId":"tzexern"},"content":"   The loan is associated with `Jason`.","lastModifiedDate":"2021-04-03"},{"lineNumber":912,"author":{"gitId":"tzexern"},"content":"1. Other incorrect commands to try:","lastModifiedDate":"2021-04-03"},{"lineNumber":913,"author":{"gitId":"tzexern"},"content":"   1. `add`","lastModifiedDate":"2021-04-03"},{"lineNumber":914,"author":{"gitId":"tzexern"},"content":"   1. `add -l`","lastModifiedDate":"2021-04-03"},{"lineNumber":915,"author":{"gitId":"tzexern"},"content":"   1. `add -l -a`","lastModifiedDate":"2021-04-03"},{"lineNumber":916,"author":{"gitId":"tzexern"},"content":"   1. `add -l -a -d`","lastModifiedDate":"2021-04-03"},{"lineNumber":917,"author":{"gitId":"tzexern"},"content":"   1. `add -l -a -d -p`","lastModifiedDate":"2021-04-03"},{"lineNumber":918,"author":{"gitId":"tzexern"},"content":"   1. `add -l loan to Andy -a x -d 28/03/2021 -p Andy`","lastModifiedDate":"2021-04-03"},{"lineNumber":919,"author":{"gitId":"tzexern"},"content":"      (where `x` is a negative number or a word)","lastModifiedDate":"2021-04-03"},{"lineNumber":920,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":921,"author":{"gitId":"tzexern"},"content":"### D.4: Adding a saving to the record list","lastModifiedDate":"2021-04-03"},{"lineNumber":922,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":923,"author":{"gitId":"tzexern"},"content":"1. Prerequisite: None.","lastModifiedDate":"2021-04-03"},{"lineNumber":924,"author":{"gitId":"tzexern"},"content":"1. Test case: `add -s Savings from March -a 1000 -d 29/03/2021`","lastModifiedDate":"2021-04-03"},{"lineNumber":925,"author":{"gitId":"tzexern"},"content":"   Expected: Adds a `saving` with the description \u0027`Savings from March`\u0027 with an amount of `1000` dollars on `29th March 2021`.","lastModifiedDate":"2021-04-03"},{"lineNumber":926,"author":{"gitId":"tzexern"},"content":"1. Test case: `add -s Savings from April -a 1200 -d 29/04/2021`","lastModifiedDate":"2021-04-03"},{"lineNumber":927,"author":{"gitId":"tzexern"},"content":"   Expected: Adds a `saving` with the description \u0027`Savings from April`\u0027 with an amount of `1200` dollars on `29th April 2021`.","lastModifiedDate":"2021-04-03"},{"lineNumber":928,"author":{"gitId":"tzexern"},"content":"1. Other incorrect commands to try:","lastModifiedDate":"2021-04-03"},{"lineNumber":929,"author":{"gitId":"tzexern"},"content":"   1. `add`","lastModifiedDate":"2021-04-03"},{"lineNumber":930,"author":{"gitId":"tzexern"},"content":"   1. `add -s`","lastModifiedDate":"2021-04-03"},{"lineNumber":931,"author":{"gitId":"tzexern"},"content":"   1. `add -s -a`","lastModifiedDate":"2021-04-03"},{"lineNumber":932,"author":{"gitId":"tzexern"},"content":"   1. `add -s -a -d`","lastModifiedDate":"2021-04-03"},{"lineNumber":933,"author":{"gitId":"tzexern"},"content":"   1. `add -s Savings from Intern -a x -d 30/05/2021`","lastModifiedDate":"2021-04-03"},{"lineNumber":934,"author":{"gitId":"tzexern"},"content":"      (where `x` is a negative number or a word)","lastModifiedDate":"2021-04-03"},{"lineNumber":935,"author":{"gitId":"tzexern"},"content":"   ","lastModifiedDate":"2021-04-03"},{"lineNumber":936,"author":{"gitId":"tzexern"},"content":"### D.5 Listing expense(s) in the record list","lastModifiedDate":"2021-04-03"},{"lineNumber":937,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":938,"author":{"gitId":"tzexern"},"content":"1. Prerequisite: None.","lastModifiedDate":"2021-04-03"},{"lineNumber":939,"author":{"gitId":"tzexern"},"content":"1. Test case: `list -e`","lastModifiedDate":"2021-04-03"},{"lineNumber":940,"author":{"gitId":"tzexern"},"content":"   Expected: Lists all the `expenses` currently in the record list.","lastModifiedDate":"2021-04-03"},{"lineNumber":941,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":942,"author":{"gitId":"tzexern"},"content":"### D.6 Listing loan(s) in the record list","lastModifiedDate":"2021-04-03"},{"lineNumber":943,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":944,"author":{"gitId":"tzexern"},"content":"1. Prerequisite: None.","lastModifiedDate":"2021-04-03"},{"lineNumber":945,"author":{"gitId":"tzexern"},"content":"1. Test case: `list -l`","lastModifiedDate":"2021-04-03"},{"lineNumber":946,"author":{"gitId":"tzexern"},"content":"   Expected: Lists all the `loans` currently in the record list.","lastModifiedDate":"2021-04-03"},{"lineNumber":947,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":948,"author":{"gitId":"tzexern"},"content":"### D.7 Listing saving(s) in the record list","lastModifiedDate":"2021-04-03"},{"lineNumber":949,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":950,"author":{"gitId":"tzexern"},"content":"1. Prerequisite: None.","lastModifiedDate":"2021-04-03"},{"lineNumber":951,"author":{"gitId":"tzexern"},"content":"1. Test case: `list -s`","lastModifiedDate":"2021-04-03"},{"lineNumber":952,"author":{"gitId":"tzexern"},"content":"   Expected: Lists all the `savings` currently in the record list.","lastModifiedDate":"2021-04-03"},{"lineNumber":953,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":954,"author":{"gitId":"tzexern"},"content":"### D.8 Listing all records in the record list","lastModifiedDate":"2021-04-03"},{"lineNumber":955,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":956,"author":{"gitId":"tzexern"},"content":"1. Prerequisite: None.","lastModifiedDate":"2021-04-03"},{"lineNumber":957,"author":{"gitId":"tzexern"},"content":"1. Test case: `list -a`","lastModifiedDate":"2021-04-03"},{"lineNumber":958,"author":{"gitId":"tzexern"},"content":"   Expected: Lists all the records currently in the record list.","lastModifiedDate":"2021-04-03"},{"lineNumber":959,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":960,"author":{"gitId":"tzexern"},"content":"### D.9 Viewing total expense amount in the record list","lastModifiedDate":"2021-04-03"},{"lineNumber":961,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":962,"author":{"gitId":"tzexern"},"content":"1. Prerequisite: None.","lastModifiedDate":"2021-04-03"},{"lineNumber":963,"author":{"gitId":"tzexern"},"content":"1. Test case: `view -e`","lastModifiedDate":"2021-04-03"},{"lineNumber":964,"author":{"gitId":"tzexern"},"content":"   Expected: Views the total amount of expenses currently in the record list.","lastModifiedDate":"2021-04-03"},{"lineNumber":965,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":966,"author":{"gitId":"tzexern"},"content":"### D.10 Viewing total loan amount in the record list","lastModifiedDate":"2021-04-03"},{"lineNumber":967,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":968,"author":{"gitId":"tzexern"},"content":"1. Prerequisite: None.","lastModifiedDate":"2021-04-03"},{"lineNumber":969,"author":{"gitId":"tzexern"},"content":"1. Test case: `view -l`","lastModifiedDate":"2021-04-03"},{"lineNumber":970,"author":{"gitId":"tzexern"},"content":"   Expected: Views the total amount of loans currently in the record list.","lastModifiedDate":"2021-04-03"},{"lineNumber":971,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":972,"author":{"gitId":"tzexern"},"content":"### D.11 Viewing total saving amount in the record list","lastModifiedDate":"2021-04-03"},{"lineNumber":973,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":974,"author":{"gitId":"tzexern"},"content":"1. Prerequisite: None.","lastModifiedDate":"2021-04-03"},{"lineNumber":975,"author":{"gitId":"tzexern"},"content":"1. Test case: `view -s`","lastModifiedDate":"2021-04-03"},{"lineNumber":976,"author":{"gitId":"tzexern"},"content":"   Expected: Views the total amount of savings currently in the record list.","lastModifiedDate":"2021-04-03"},{"lineNumber":977,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":978,"author":{"gitId":"tzexern"},"content":"### D.12 Viewing total record amount in the record list","lastModifiedDate":"2021-04-03"},{"lineNumber":979,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":980,"author":{"gitId":"tzexern"},"content":"1. Prerequisite: None.","lastModifiedDate":"2021-04-03"},{"lineNumber":981,"author":{"gitId":"tzexern"},"content":"1. Test case: `view -a`","lastModifiedDate":"2021-04-03"},{"lineNumber":982,"author":{"gitId":"tzexern"},"content":"   Expected: Views the total amount of all records currently in the record list.","lastModifiedDate":"2021-04-03"},{"lineNumber":983,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":984,"author":{"gitId":"tzexern"},"content":"### D.13 Mark a loan as returned","lastModifiedDate":"2021-04-03"},{"lineNumber":985,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":986,"author":{"gitId":"tzexern"},"content":"1. Prerequisite:","lastModifiedDate":"2021-04-03"},{"lineNumber":987,"author":{"gitId":"tzexern"},"content":"   1. Assuming your current record list is empty.","lastModifiedDate":"2021-04-03"},{"lineNumber":988,"author":{"gitId":"tzexern"},"content":"   1. The record list must contain a loan record.","lastModifiedDate":"2021-04-03"},{"lineNumber":989,"author":{"gitId":"tzexern"},"content":"   1. Add a loan into the list `add -l Loan to Jason -a 500 -d 28/03/2021 -p Jason`","lastModifiedDate":"2021-04-03"},{"lineNumber":990,"author":{"gitId":"tzexern"},"content":"1. Test case: `return -i 1 -d 02/04/2021`","lastModifiedDate":"2021-04-03"},{"lineNumber":991,"author":{"gitId":"tzexern"},"content":"   Expected: The loan with index 1 will be marked as returned and will be indicated with `[v]` at the end of the entry","lastModifiedDate":"2021-04-03"},{"lineNumber":992,"author":{"gitId":"tzexern"},"content":"   in the record list.","lastModifiedDate":"2021-04-03"},{"lineNumber":993,"author":{"gitId":"tzexern"},"content":"1. Other incorrect commands to try:","lastModifiedDate":"2021-04-03"},{"lineNumber":994,"author":{"gitId":"tzexern"},"content":"   1. `return`","lastModifiedDate":"2021-04-03"},{"lineNumber":995,"author":{"gitId":"tzexern"},"content":"   1. `return -i`","lastModifiedDate":"2021-04-03"},{"lineNumber":996,"author":{"gitId":"tzexern"},"content":"   1. `return -i -d`","lastModifiedDate":"2021-04-03"},{"lineNumber":997,"author":{"gitId":"tzexern"},"content":"   1. `return -i x -d y`","lastModifiedDate":"2021-04-03"},{"lineNumber":998,"author":{"gitId":"tzexern"},"content":"      (where `x` is a negative number or a word, `y` is an invalid date)","lastModifiedDate":"2021-04-03"},{"lineNumber":999,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":1000,"author":{"gitId":"tzexern"},"content":"### D.14 Remove a record from the record list","lastModifiedDate":"2021-04-03"},{"lineNumber":1001,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":1002,"author":{"gitId":"jonahtwl"},"content":"1. Prerequisite: ","lastModifiedDate":"2021-04-05"},{"lineNumber":1003,"author":{"gitId":"jonahtwl"},"content":"   1. Assuming your current record list is empty.","lastModifiedDate":"2021-04-05"},{"lineNumber":1004,"author":{"gitId":"jonahtwl"},"content":"   1. The record list must contain any instance of record (`Expense`, `Loan`, `Saving`)","lastModifiedDate":"2021-04-05"},{"lineNumber":1005,"author":{"gitId":"jonahtwl"},"content":"   1. Add a record into the list `add -e Chicken Rice Lunch at Deck -a 2.50 -d 30/03/2021`","lastModifiedDate":"2021-04-05"},{"lineNumber":1006,"author":{"gitId":"jonahtwl"},"content":"1. Test case: `remove -i 1` Expected: The record with index 1 will be removed from the record list.","lastModifiedDate":"2021-04-05"},{"lineNumber":1007,"author":{"gitId":"tzexern"},"content":"1. Other incorrect commands to try:","lastModifiedDate":"2021-04-03"},{"lineNumber":1008,"author":{"gitId":"jonahtwl"},"content":"   1. `remove`","lastModifiedDate":"2021-04-05"},{"lineNumber":1009,"author":{"gitId":"jonahtwl"},"content":"   1. `remove -i`","lastModifiedDate":"2021-04-05"},{"lineNumber":1010,"author":{"gitId":"jonahtwl"},"content":"   1. `remove -i 0`","lastModifiedDate":"2021-04-05"},{"lineNumber":1011,"author":{"gitId":"jonahtwl"},"content":"   1. `remove -i -x` (where x is any integer)","lastModifiedDate":"2021-04-05"},{"lineNumber":1012,"author":{"gitId":"jonahtwl"},"content":"   1. `remove -i y` (where y is any integer that is greater than the size of the array)","lastModifiedDate":"2021-04-05"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":1014,"author":{"gitId":"jonahtwl"},"content":"### D.15 Checking the CreditScore of a person","lastModifiedDate":"2021-04-05"},{"lineNumber":1015,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":1016,"author":{"gitId":"jonahtwl"},"content":"1. Prerequisite:","lastModifiedDate":"2021-04-05"},{"lineNumber":1017,"author":{"gitId":"jonahtwl"},"content":"   1. Assuming your current record list is empty.","lastModifiedDate":"2021-04-05"},{"lineNumber":1018,"author":{"gitId":"jonahtwl"},"content":"   1. The record list must contain a loan record.","lastModifiedDate":"2021-04-05"},{"lineNumber":1019,"author":{"gitId":"jonahtwl"},"content":"   1. Add a loan into the list `add -l Loan to Jason -a 500 -d 28/03/2021 -p Jason`","lastModifiedDate":"2021-04-05"},{"lineNumber":1020,"author":{"gitId":"jonahtwl"},"content":"   1. Mark the loan as returned `return -i 1 -d 10/04/2021`","lastModifiedDate":"2021-04-05"},{"lineNumber":1021,"author":{"gitId":"jonahtwl"},"content":"1. Test case: `creditscore jason`","lastModifiedDate":"2021-04-05"},{"lineNumber":1022,"author":{"gitId":"jonahtwl"},"content":"   Expected: The credit score shown should be 90 instead of 100 (default).","lastModifiedDate":"2021-04-05"},{"lineNumber":1023,"author":{"gitId":"jonahtwl"},"content":"1. Other incorrect commands to try:","lastModifiedDate":"2021-04-05"},{"lineNumber":1024,"author":{"gitId":"jonahtwl"},"content":"   1. `creditscore`","lastModifiedDate":"2021-04-05"},{"lineNumber":1025,"author":{"gitId":"jonahtwl"},"content":"   1. `creditscore -p jason`","lastModifiedDate":"2021-04-05"},{"lineNumber":1026,"author":{"gitId":"jonahtwl"},"content":"   1. `creditscore -i x` (where x is any integer)","lastModifiedDate":"2021-04-05"},{"lineNumber":1027,"author":{"gitId":"jonahtwl"},"content":"   ","lastModifiedDate":"2021-04-05"},{"lineNumber":1028,"author":{"gitId":"jonahtwl"},"content":"Note: The `creditscore` command will also calculate the person\u0027s credit score should the loan not be returned.","lastModifiedDate":"2021-04-05"},{"lineNumber":1029,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":1030,"author":{"gitId":"jonahtwl"},"content":"### D.16 Displaying the help list","lastModifiedDate":"2021-04-05"},{"lineNumber":1031,"author":{"gitId":"jonahtwl"},"content":"1. Prerequisite: None.","lastModifiedDate":"2021-04-05"},{"lineNumber":1032,"author":{"gitId":"jonahtwl"},"content":"1. Test case: `help` Expected: The summary table of all commands and  format will be displayed.","lastModifiedDate":"2021-04-05"},{"lineNumber":1033,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":1034,"author":{"gitId":"jonahtwl"},"content":"### D.17 Exiting Finux application","lastModifiedDate":"2021-04-05"},{"lineNumber":1035,"author":{"gitId":"jonahtwl"},"content":"1. Prerequisite: None.","lastModifiedDate":"2021-04-05"},{"lineNumber":1036,"author":{"gitId":"jonahtwl"},"content":"1. Test case: `exit` Expected: Finux application exits and displays the exit message.","lastModifiedDate":"2021-04-05"}],"authorContributionMap":{"tzexern":391,"jonahtwl":218,"marklowsk":201,"LeeHanYongAndy":153,"gerardtwk":40,"-":33}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"# Finux","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"Finux is a desktop application for tracking and managing your finance status.","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"It tracks your expenses, savings and also any loans to your friends.","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"LeeHanYongAndy"},"content":"Most of the user interactions happen using a CLI (Command Line Interface). ","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"LeeHanYongAndy"},"content":"* If you are interested in using Finux, head over to the Quick Start section of the [User Guide](UserGuide.md).","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"LeeHanYongAndy"},"content":"* If you are interested about developing Finux, the [Developer Guide](DeveloperGuide.md) is a good place to start.","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"* Get to know more about the [team](AboutUs.md).","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"LeeHanYongAndy":8,"-":2}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"# Finux User Guide","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"By: `Jonah Tham`, `Gerard Tan`, `Lee Han Yong Andy`, `Mark Low`, `Tan Tze Xern`","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"Since: `March 2021`","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"LeeHanYongAndy"},"content":"---","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"LeeHanYongAndy"},"content":"# Table of Contents","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"---","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"LeeHanYongAndy"},"content":"1. [Introduction](#1-introduction)","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"1. [Quick Start](#2-quick-start)\\","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"LeeHanYongAndy"},"content":"   2.1 [Understanding the guide](#21-understanding-the-guide)\\","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":"   2.2 [Explanation for Command formats](#22-explanation-for-command-formats)\\","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"   2.3 [Explanation for Date and Date formats](#23-explanation-for-date-and-date-formats)\\","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":"   2.4 [Explanation for Expense, Loan, and Saving output formats](#24-explanation-for-expense-loan-and-saving-record-output-formats)","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"LeeHanYongAndy"},"content":"1. [Features](#3-features)\\","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"LeeHanYongAndy"},"content":"   3.1 [Add a record: `add`](#31-add-a-record-add)\\","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.1.1 [Add an expense record](#311-add-an-expense-record)\\","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.1.2 [Add an loan record](#312-add-a-loan-record)\\","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.1.3 [Add an saving record](#313-add-a-saving-record)\\","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"   3.2 [List the records details: `list`](#32-list-the-records-details-list)\\","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.2.1 [List all expense records](#321-list-all-expense-records)\\","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.2.2 [List all loan records](#322-list-all-loan-records)\\","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"LeeHanYongAndy"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.2.3 [List all saving records](#323-list-all-saving-records)\\","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"LeeHanYongAndy"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.2.4 [List all records](#324-list-all-records)\\","lastModifiedDate":"2021-04-03"},{"lineNumber":28,"author":{"gitId":"LeeHanYongAndy"},"content":"   3.3 [View category total amount: `view`](#33-view-category-total-amount-view)\\","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"LeeHanYongAndy"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.3.1 [View total expenses](#331-view-total-expenses)\\","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"LeeHanYongAndy"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.3.2 [View total unreturned loans](#332-view-total-unreturned-loans)\\","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"LeeHanYongAndy"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.3.3 [View total savings](#333-view-total-savings)\\","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"LeeHanYongAndy"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.3.4 [View total amount in every category](#334-view-total-amount-in-every-category)\\","lastModifiedDate":"2021-04-03"},{"lineNumber":33,"author":{"gitId":"gerardtwk"},"content":"   3.4 [Mark a loan as return: `return`](#34-mark-a-loan-as-returned-return)\\","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"   3.5 [Remove a record: `remove`](#35-remove-a-record-remove)\\","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"LeeHanYongAndy"},"content":"   3.6 [Check a person credit score: `creditscore`](#36-check-a-persons-credit-score-creditscore)\\","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"LeeHanYongAndy"},"content":"   3.7 [Exit the program: `exit`](#37-exit-the-program-exit)\\","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"LeeHanYongAndy"},"content":"   3.8 [Help function: `help`](#38-help-function-help)\\","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"LeeHanYongAndy"},"content":"   3.9 [Records Storage](#39-records-storage)\\","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.9.1 [Saving Data](#391-saving-data)\\","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;3.9.2 [Loading Data](#392-loading-data)","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"LeeHanYongAndy"},"content":"1. [Frequently Asked Questions](#4-frequently-asked-questions)","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"1. [Command Summary](#5-command-summary)","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"LeeHanYongAndy"},"content":"## 1. Introduction","lastModifiedDate":"2021-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"---","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"jonahtwl"},"content":"Finux is a Command-Line Interface (CLI) application that allows you to record your expenses, savings and loans all in","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"jonahtwl"},"content":"one consolidated platform. With these information made readily available at your fingertips, it will allow you to ","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"jonahtwl"},"content":"better adjust your expenditure or work harder towards your savings goal. Finux also includes a way for you to keep","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"jonahtwl"},"content":"track of the loans you have made to your friends, or the tabs for the dinners you have paid for first. ","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"jonahtwl"},"content":"As the Finux application is inspired entirely by the *Nix operating systems, and if you are familiar with the CLI","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"jonahtwl"},"content":"command interface, you will definitely enjoy the benefits of the application. You will also be able to speed up your","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"jonahtwl"},"content":"financial management and planning with the Finux application as compared to the traditional finance management ","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"jonahtwl"},"content":"applications in the market.","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"LeeHanYongAndy"},"content":"## 2. Quick Start","lastModifiedDate":"2021-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"LeeHanYongAndy"},"content":"---","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"LeeHanYongAndy"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2021-03-20"},{"lineNumber":64,"author":{"gitId":"jonahtwl"},"content":"2. Download the latest `finux.jar` from [here](https://github.com/AY2021S2-CS2113T-W09-1/tp/releases/tag/v2.0).","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"jonahtwl"},"content":"3. Copy the `finux.jar` file to the folder you want to use as the *home folder* of Finux.","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"4. For Windows users, pull up your **Command Prompt**.\\","lastModifiedDate":"2021-03-20"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"   For Mac users, pull up your **Terminal**.\\","lastModifiedDate":"2021-03-20"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"   Navigate to the directory containing the `finux.jar` file.\\","lastModifiedDate":"2021-03-20"},{"lineNumber":69,"author":{"gitId":"gerardtwk"},"content":"   i.e. `cd FILEPATH`, `FILEPATH` is the absolute address to the home folder of Finux.","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"gerardtwk"},"content":"5. Run the `finux.jar` file by executing the command `java -jar finux.jar`.","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":72,"author":{"gitId":"LeeHanYongAndy"},"content":"---","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"jonahtwl"},"content":"### 2.1 Understanding the guide","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"gerardtwk"},"content":"Now that you are here, congratulations on taking the first step to embark on your finance management journey! But before you proceed, there are a few tips and tricks that you should know in order to better understand our guide.","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"jonahtwl"},"content":"Throughout the guide, you will come across various symbols, each has a different meaning:","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"jonahtwl"},"content":"\u003e 💡: The light bulb will precede information that may be important when using the app.","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"jonahtwl"},"content":"\u003e ❗: The exclamation will precede warnings for commands and inputs that may hinder your use of the app.","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"jonahtwl"},"content":"\u003e 📝: The notepad will precede information that may improve the flexibility of using the app. ","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"jonahtwl"},"content":"---","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"LeeHanYongAndy"},"content":"### 2.2 Explanation for Command formats","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"jonahtwl"},"content":"There are the argument types and notation used in Finux:","lastModifiedDate":"2021-04-06"},{"lineNumber":90,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e * `CMD` - a valid command.","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"jonahtwl"},"content":"\u003e * `-OPT` - an option, a letter preceded by a dash. E.g. `-i`.","lastModifiedDate":"2021-04-06"},{"lineNumber":92,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e * `\u003cFIELD\u003e` - an area where data is required.","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"jonahtwl"},"content":" ","lastModifiedDate":"2021-04-06"},{"lineNumber":94,"author":{"gitId":"jonahtwl"},"content":"The Commands in Finux follow these argument orders (depending on the command):","lastModifiedDate":"2021-04-06"},{"lineNumber":95,"author":{"gitId":"jonahtwl"},"content":"\u003e * `CMD -OPT \u003cFIELD\u003e`","lastModifiedDate":"2021-04-06"},{"lineNumber":96,"author":{"gitId":"jonahtwl"},"content":"\u003e * `CMD -OPT \u003cFIELD\u003e -OPT \u003cFIELD\u003e ...`","lastModifiedDate":"2021-04-06"},{"lineNumber":97,"author":{"gitId":"jonahtwl"},"content":"\u003e * `CMD \u003cFIELD\u003e`","lastModifiedDate":"2021-04-06"},{"lineNumber":98,"author":{"gitId":"jonahtwl"},"content":"\u003e * `CMD`","lastModifiedDate":"2021-04-06"},{"lineNumber":99,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"LeeHanYongAndy"},"content":"---","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"LeeHanYongAndy"},"content":"❗ **Commands and options are case-sensitive**","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e * E.g. `exit` will work, whereas `Exit`, `EXIT` or other variations will not be recognised.","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e * E.g. `view -s` will work, but using `-S` will not be recognised as a valid option.","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"LeeHanYongAndy"},"content":"❗ **All options are single letter and followed by 1 space at the front and back**","lastModifiedDate":"2021-04-03"},{"lineNumber":107,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e * E.g. `_-a_` would be a valid option format after replacing `_` with space at the front and back.  ","lastModifiedDate":"2021-04-03"},{"lineNumber":108,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e * E.g. `add -e Plain bread loaf -a 10` will work, whereas `add -e Plain bread loaf -a10` will not be","lastModifiedDate":"2021-04-03"},{"lineNumber":109,"author":{"gitId":"LeeHanYongAndy"},"content":"    recognized as valid option due to missing space in between ` -a` and `10`.","lastModifiedDate":"2021-04-03"},{"lineNumber":110,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":111,"author":{"gitId":"LeeHanYongAndy"},"content":"---","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"LeeHanYongAndy"},"content":"### 2.3 Explanation for Date and Date formats","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"LeeHanYongAndy"},"content":"Date input is required when you specify the option `-d`.","lastModifiedDate":"2021-03-31"},{"lineNumber":116,"author":{"gitId":"gerardtwk"},"content":"You are required to enter a date that follows a valid Date format.","lastModifiedDate":"2021-04-01"},{"lineNumber":117,"author":{"gitId":"LeeHanYongAndy"},"content":"Finux supports multiple Date formats, for ease of use:","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e * `DDMMYYYY`","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e * `D.M.YYYY`","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e * `D-M-YYYY`","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e * `D/M/YYYY`","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e * `YYYY.M.D`","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e * `YYYY-M-D`","lastModifiedDate":"2021-03-31"},{"lineNumber":124,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e * `YYYY/M/D`","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e 📝 `today` keyword specifies today\u0027s date, replacing the need for you to type in the actual date for date inputs.","lastModifiedDate":"2021-03-31"},{"lineNumber":127,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"gerardtwk"},"content":"---","lastModifiedDate":"2021-04-01"},{"lineNumber":129,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":130,"author":{"gitId":"gerardtwk"},"content":"### 2.4 Explanation for Expense, Loan, and Saving record output formats","lastModifiedDate":"2021-04-01"},{"lineNumber":131,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":132,"author":{"gitId":"jonahtwl"},"content":"The general output format used by Finux in displaying an expense and saving record is as follows:","lastModifiedDate":"2021-04-06"},{"lineNumber":133,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":134,"author":{"gitId":"jonahtwl"},"content":"`[record_type][issue_date][amount] description`","lastModifiedDate":"2021-04-06"},{"lineNumber":135,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":136,"author":{"gitId":"jonahtwl"},"content":"Whereas the general output format for loan record is:","lastModifiedDate":"2021-04-06"},{"lineNumber":137,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":138,"author":{"gitId":"jonahtwl"},"content":"`[record_type][issue_date][amount] description [return_status]`","lastModifiedDate":"2021-04-06"},{"lineNumber":139,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":140,"author":{"gitId":"jonahtwl"},"content":"\u003e * record_type","lastModifiedDate":"2021-04-06"},{"lineNumber":141,"author":{"gitId":"jonahtwl"},"content":"\u003e    * A single character denoting the type of the record. ","lastModifiedDate":"2021-04-06"},{"lineNumber":142,"author":{"gitId":"jonahtwl"},"content":"\u003e    * `E` for expense record, `L` for loan record and `S` for saving record.","lastModifiedDate":"2021-04-06"},{"lineNumber":143,"author":{"gitId":"gerardtwk"},"content":"\u003e * issue_date","lastModifiedDate":"2021-04-01"},{"lineNumber":144,"author":{"gitId":"jonahtwl"},"content":"\u003e    * Date of record supplied by the user.","lastModifiedDate":"2021-04-06"},{"lineNumber":145,"author":{"gitId":"gerardtwk"},"content":"\u003e * description","lastModifiedDate":"2021-04-01"},{"lineNumber":146,"author":{"gitId":"jonahtwl"},"content":"\u003e    * Description of the record supplied by the user.","lastModifiedDate":"2021-04-06"},{"lineNumber":147,"author":{"gitId":"gerardtwk"},"content":"\u003e * return_status","lastModifiedDate":"2021-04-01"},{"lineNumber":148,"author":{"gitId":"gerardtwk"},"content":"\u003e    * This field is only applicable to loan records.","lastModifiedDate":"2021-04-01"},{"lineNumber":149,"author":{"gitId":"jonahtwl"},"content":"\u003e    * A character denoting the return status of the loan record.","lastModifiedDate":"2021-04-06"},{"lineNumber":150,"author":{"gitId":"jonahtwl"},"content":"\u003e    * `v` for returned loan record and ` ` (an empty space) for unreturned loan record.","lastModifiedDate":"2021-04-06"},{"lineNumber":151,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":152,"author":{"gitId":"jonahtwl"},"content":"For example, let\u0027s say you bought a plain loaf of bread for $2.75 on 3rd March 2021. The output format of this *expense* record ","lastModifiedDate":"2021-04-06"},{"lineNumber":153,"author":{"gitId":"gerardtwk"},"content":"will be:","lastModifiedDate":"2021-04-01"},{"lineNumber":154,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":155,"author":{"gitId":"jonahtwl"},"content":"`[E][2021-03-20][2.75] Plain bread loaf`","lastModifiedDate":"2021-04-06"},{"lineNumber":156,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":157,"author":{"gitId":"jonahtwl"},"content":"Another example is suppose you made a loan $500 to Mark on 20th March 2021. The output format of this *unreturned loan* ","lastModifiedDate":"2021-04-06"},{"lineNumber":158,"author":{"gitId":"gerardtwk"},"content":"record will be:","lastModifiedDate":"2021-04-01"},{"lineNumber":159,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":160,"author":{"gitId":"jonahtwl"},"content":"`[L][2021-03-20][500] 1st loan to Mark [ ]`","lastModifiedDate":"2021-04-06"},{"lineNumber":161,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":162,"author":{"gitId":"gerardtwk"},"content":"After Mark returns this loan to you, the output format of this *returned loan* record will be:","lastModifiedDate":"2021-04-01"},{"lineNumber":163,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":164,"author":{"gitId":"jonahtwl"},"content":"`[L][2021-03-20][500] 1st loan to Mark [v]`","lastModifiedDate":"2021-04-06"},{"lineNumber":165,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":166,"author":{"gitId":"gerardtwk"},"content":"For the `add` and `list` commands, each displayed record will be preceded with a number, referred to as the *index* of","lastModifiedDate":"2021-04-01"},{"lineNumber":167,"author":{"gitId":"gerardtwk"},"content":"the record with respect to the combined list of expense, loan, and saving records. Let\u0027s say you have added the records","lastModifiedDate":"2021-04-01"},{"lineNumber":168,"author":{"gitId":"gerardtwk"},"content":"shown above to Finux one after another, then doing a `list -l` operation will display the above loan record to you as","lastModifiedDate":"2021-04-01"},{"lineNumber":169,"author":{"gitId":"gerardtwk"},"content":"follows:","lastModifiedDate":"2021-04-01"},{"lineNumber":170,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":171,"author":{"gitId":"jonahtwl"},"content":"`2. [L][2021-03-20][500] 1st loan to Mark [v]`","lastModifiedDate":"2021-04-06"},{"lineNumber":172,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":173,"author":{"gitId":"jonahtwl"},"content":"This means that the $500 loan you have made to Mark on 20th March 2021 has been returned and this loan is the second ","lastModifiedDate":"2021-04-06"},{"lineNumber":174,"author":{"gitId":"jonahtwl"},"content":"record added to Finux.","lastModifiedDate":"2021-04-06"},{"lineNumber":175,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":176,"author":{"gitId":"marklowsk"},"content":"## 3. Features","lastModifiedDate":"2021-03-30"},{"lineNumber":177,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":178,"author":{"gitId":"marklowsk"},"content":"---","lastModifiedDate":"2021-03-30"},{"lineNumber":179,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":180,"author":{"gitId":"LeeHanYongAndy"},"content":"### 3.1 Add a record: `add`","lastModifiedDate":"2021-03-20"},{"lineNumber":181,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":182,"author":{"gitId":"LeeHanYongAndy"},"content":"---","lastModifiedDate":"2021-03-30"},{"lineNumber":183,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":184,"author":{"gitId":"marklowsk"},"content":"\u003e 📝 For the `add` command, there is no strict ordering for options.\\","lastModifiedDate":"2021-03-30"},{"lineNumber":185,"author":{"gitId":"marklowsk"},"content":"\u003e i.e. options `-a` can come before/after option `-d`.","lastModifiedDate":"2021-03-20"},{"lineNumber":186,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":187,"author":{"gitId":"LeeHanYongAndy"},"content":"#### 3.1.1 Add an expense record","lastModifiedDate":"2021-03-20"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":189,"author":{"gitId":"jonahtwl"},"content":"Suppose you bought a plain loaf of bread for $2.90 on 3rd March 2021, you would want to enter","lastModifiedDate":"2021-03-30"},{"lineNumber":190,"author":{"gitId":"jonahtwl"},"content":"your `expense` as the example shown below.","lastModifiedDate":"2021-03-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":192,"author":{"gitId":"marklowsk"},"content":"Format: `add -e \u003cdescription\u003e -a \u003camount\u003e -d \u003cdate\u003e`","lastModifiedDate":"2021-03-20"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":194,"author":{"gitId":"marklowsk"},"content":"Example: `add -e Plain bread loaf -a 2.90 -d 20.3.2021`","lastModifiedDate":"2021-03-30"},{"lineNumber":195,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":196,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-20"},{"lineNumber":197,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":198,"author":{"gitId":"tzexern"},"content":"![add expense example output](img/AddExpenseExampleOutput.jpg)","lastModifiedDate":"2021-03-29"},{"lineNumber":199,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":200,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":201,"author":{"gitId":"LeeHanYongAndy"},"content":"#### 3.1.2 Add a loan record","lastModifiedDate":"2021-03-20"},{"lineNumber":202,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":203,"author":{"gitId":"jonahtwl"},"content":"It is the 20th of March 2021, and your friend Mark borrows a large sum of $200 from you . You will","lastModifiedDate":"2021-03-30"},{"lineNumber":204,"author":{"gitId":"jonahtwl"},"content":"have to enter the following into Finux to record this `loan`.","lastModifiedDate":"2021-03-30"},{"lineNumber":205,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":206,"author":{"gitId":"jonahtwl"},"content":"You may want to add a _description_ of the `loan`, in this scenario, it will be `1st loan to Mark`","lastModifiedDate":"2021-03-30"},{"lineNumber":207,"author":{"gitId":"jonahtwl"},"content":"and to include his _name_ as to keep track of Mark\u0027s `loan`.","lastModifiedDate":"2021-03-30"},{"lineNumber":208,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":209,"author":{"gitId":"marklowsk"},"content":"Format: `add -l \u003cdescription\u003e -a \u003camount\u003e -d \u003cdate\u003e -p \u003cperson\u003e`","lastModifiedDate":"2021-03-24"},{"lineNumber":210,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":211,"author":{"gitId":"tzexern"},"content":"Example: `add -l 1st loan to Mark -a 200 -d 20.3.2021 -p Mark`","lastModifiedDate":"2021-03-30"},{"lineNumber":212,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":213,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-20"},{"lineNumber":214,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":215,"author":{"gitId":"tzexern"},"content":"![add loan example output](img/AddLoanExampleOutput.jpg)","lastModifiedDate":"2021-03-29"},{"lineNumber":216,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":217,"author":{"gitId":"LeeHanYongAndy"},"content":"#### 3.1.3 Add a saving record","lastModifiedDate":"2021-03-20"},{"lineNumber":218,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":219,"author":{"gitId":"jonahtwl"},"content":"Lastly, you may have saved a sum of money over the past month of March and you recorded your `saving`","lastModifiedDate":"2021-03-30"},{"lineNumber":220,"author":{"gitId":"jonahtwl"},"content":"on the 5th of April.","lastModifiedDate":"2021-03-30"},{"lineNumber":221,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":222,"author":{"gitId":"marklowsk"},"content":"Format: `add -s \u003cdescription\u003e -a \u003camount\u003e -d \u003cdate\u003e`","lastModifiedDate":"2021-03-20"},{"lineNumber":223,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":224,"author":{"gitId":"tzexern"},"content":"Example: `add -s Savings from March -a 1000 -d 05/04/2021`","lastModifiedDate":"2021-03-30"},{"lineNumber":225,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":226,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-20"},{"lineNumber":227,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":228,"author":{"gitId":"tzexern"},"content":"![add saving example output](img/AddSavingExampleOutput.jpg)","lastModifiedDate":"2021-03-29"},{"lineNumber":229,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":230,"author":{"gitId":"jonahtwl"},"content":"\u003e 💡 Do note that for an `expense`, you will have to use `-e` as the option. This follows for `loan` with `-l` and","lastModifiedDate":"2021-03-30"},{"lineNumber":231,"author":{"gitId":"jonahtwl"},"content":"\u003e `saving` with `-s`.","lastModifiedDate":"2021-03-30"},{"lineNumber":232,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":233,"author":{"gitId":"LeeHanYongAndy"},"content":"### 3.2 List the records details: `list`","lastModifiedDate":"2021-03-20"},{"lineNumber":234,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":235,"author":{"gitId":"LeeHanYongAndy"},"content":"---","lastModifiedDate":"2021-03-30"},{"lineNumber":236,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":237,"author":{"gitId":"gerardtwk"},"content":"#### 3.2.1 List all expense records","lastModifiedDate":"2021-03-30"},{"lineNumber":238,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":239,"author":{"gitId":"gerardtwk"},"content":"You may want to list all your saved expense records in Finux. By entering the `list` command","lastModifiedDate":"2021-04-01"},{"lineNumber":240,"author":{"gitId":"gerardtwk"},"content":"along with the `expense` option `-e`, Finux will display all your saved expenses.","lastModifiedDate":"2021-04-01"},{"lineNumber":241,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":242,"author":{"gitId":"gerardtwk"},"content":"Format: `list -e`","lastModifiedDate":"2021-03-30"},{"lineNumber":243,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":244,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-20"},{"lineNumber":245,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":246,"author":{"gitId":"gerardtwk"},"content":"![list example output](img/ListExpenseExampleOutput.jpg)","lastModifiedDate":"2021-03-30"},{"lineNumber":247,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":248,"author":{"gitId":"gerardtwk"},"content":"#### 3.2.2 List all loan records","lastModifiedDate":"2021-03-30"},{"lineNumber":249,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":250,"author":{"gitId":"gerardtwk"},"content":"Likewise with listing your saved expenses, Finux is also able to list all saved loans. You will have","lastModifiedDate":"2021-04-01"},{"lineNumber":251,"author":{"gitId":"jonahtwl"},"content":"to use the `loan` option `-l` in this scenario.","lastModifiedDate":"2021-03-30"},{"lineNumber":252,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":253,"author":{"gitId":"gerardtwk"},"content":"Format: `list -l`","lastModifiedDate":"2021-03-30"},{"lineNumber":254,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":255,"author":{"gitId":"gerardtwk"},"content":"Output:","lastModifiedDate":"2021-03-30"},{"lineNumber":256,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":257,"author":{"gitId":"tzexern"},"content":"![list loan example output](img/ListLoanExampleOutput.jpg)","lastModifiedDate":"2021-04-03"},{"lineNumber":258,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":259,"author":{"gitId":"gerardtwk"},"content":"#### 3.2.3 List all saving records","lastModifiedDate":"2021-03-30"},{"lineNumber":260,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":261,"author":{"gitId":"tzexern"},"content":"Furthermore, all your saved savings can also be listed with the `saving` option `-s`. ","lastModifiedDate":"2021-04-03"},{"lineNumber":262,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":263,"author":{"gitId":"gerardtwk"},"content":"Format: `list -s`","lastModifiedDate":"2021-03-30"},{"lineNumber":264,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":265,"author":{"gitId":"gerardtwk"},"content":"Output:","lastModifiedDate":"2021-03-30"},{"lineNumber":266,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":267,"author":{"gitId":"tzexern"},"content":"![list saving example output](img/ListSavingExampleOutput.jpg)","lastModifiedDate":"2021-04-03"},{"lineNumber":268,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":269,"author":{"gitId":"tzexern"},"content":"#### 3.2.4 List all records","lastModifiedDate":"2021-04-03"},{"lineNumber":270,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":271,"author":{"gitId":"tzexern"},"content":"Lastly, you can list all of your records with the `all` option `-a`.","lastModifiedDate":"2021-04-03"},{"lineNumber":272,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":273,"author":{"gitId":"tzexern"},"content":"Format: `list -a`","lastModifiedDate":"2021-04-03"},{"lineNumber":274,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":275,"author":{"gitId":"tzexern"},"content":"Output:","lastModifiedDate":"2021-04-03"},{"lineNumber":276,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":277,"author":{"gitId":"tzexern"},"content":"![list all example output](img/ListAllExampleOutput.jpg)","lastModifiedDate":"2021-04-03"},{"lineNumber":278,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":279,"author":{"gitId":"LeeHanYongAndy"},"content":"### 3.3 View category total amount: `view`","lastModifiedDate":"2021-03-20"},{"lineNumber":280,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":281,"author":{"gitId":"LeeHanYongAndy"},"content":"---","lastModifiedDate":"2021-03-30"},{"lineNumber":282,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":283,"author":{"gitId":"LeeHanYongAndy"},"content":"#### 3.3.1 View total expenses","lastModifiedDate":"2021-03-30"},{"lineNumber":284,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":285,"author":{"gitId":"jonahtwl"},"content":"At this point, you may also want to `view` your total expenses incurred till now. ","lastModifiedDate":"2021-03-30"},{"lineNumber":286,"author":{"gitId":"jonahtwl"},"content":"So instead of listing as explained above, you would have to use the `view` command instead.","lastModifiedDate":"2021-03-30"},{"lineNumber":287,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":288,"author":{"gitId":"LeeHanYongAndy"},"content":"Format: `view -e`","lastModifiedDate":"2021-03-30"},{"lineNumber":289,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":290,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-30"},{"lineNumber":291,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":292,"author":{"gitId":"LeeHanYongAndy"},"content":"![view expense example output](img/ViewExpenseExampleOutput.jpg)","lastModifiedDate":"2021-03-30"},{"lineNumber":293,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":294,"author":{"gitId":"LeeHanYongAndy"},"content":"#### 3.3.2 View total unreturned loans","lastModifiedDate":"2021-03-30"},{"lineNumber":295,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":296,"author":{"gitId":"jonahtwl"},"content":"You can also view your total **unreturned** loan using `view` and the option `-l`.","lastModifiedDate":"2021-03-30"},{"lineNumber":297,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":298,"author":{"gitId":"LeeHanYongAndy"},"content":"\u003e 📝 The total amount shown only includes the unreturned loans","lastModifiedDate":"2021-03-30"},{"lineNumber":299,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":300,"author":{"gitId":"LeeHanYongAndy"},"content":"Format: `view -l`","lastModifiedDate":"2021-03-30"},{"lineNumber":301,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":302,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-20"},{"lineNumber":303,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":304,"author":{"gitId":"LeeHanYongAndy"},"content":"![view loan example output](img/ViewLoanExampleOutput.jpg)","lastModifiedDate":"2021-03-30"},{"lineNumber":305,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":306,"author":{"gitId":"LeeHanYongAndy"},"content":"#### 3.3.3 View total savings","lastModifiedDate":"2021-03-30"},{"lineNumber":307,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":308,"author":{"gitId":"jonahtwl"},"content":"Your total savings can also be calculated using `view` and the option `-s`.","lastModifiedDate":"2021-03-30"},{"lineNumber":309,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":310,"author":{"gitId":"LeeHanYongAndy"},"content":"Format: `view -s`","lastModifiedDate":"2021-03-30"},{"lineNumber":311,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":312,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-30"},{"lineNumber":313,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":314,"author":{"gitId":"LeeHanYongAndy"},"content":"![view saving example output](img/ViewSavingExampleOutput.jpg)","lastModifiedDate":"2021-03-30"},{"lineNumber":315,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":316,"author":{"gitId":"LeeHanYongAndy"},"content":"#### 3.3.4 View total amount in every category","lastModifiedDate":"2021-04-03"},{"lineNumber":317,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":318,"author":{"gitId":"LeeHanYongAndy"},"content":"To see the amount of each category (`expense`, `loan` and `saving`) in a summarized format,","lastModifiedDate":"2021-04-03"},{"lineNumber":319,"author":{"gitId":"LeeHanYongAndy"},"content":"you can use `view` and the option `-a`.","lastModifiedDate":"2021-04-03"},{"lineNumber":320,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":321,"author":{"gitId":"LeeHanYongAndy"},"content":"Format: `view -a`","lastModifiedDate":"2021-04-03"},{"lineNumber":322,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":323,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-04-03"},{"lineNumber":324,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":325,"author":{"gitId":"LeeHanYongAndy"},"content":"![view all example output](img/ViewAllExampleOutput.jpg)","lastModifiedDate":"2021-04-03"},{"lineNumber":326,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":327,"author":{"gitId":"gerardtwk"},"content":"### 3.4 Mark a loan as returned: `return`","lastModifiedDate":"2021-03-30"},{"lineNumber":328,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":329,"author":{"gitId":"LeeHanYongAndy"},"content":"---","lastModifiedDate":"2021-03-30"},{"lineNumber":330,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":331,"author":{"gitId":"gerardtwk"},"content":"Let\u0027s say Mark returns the loan he borrowed on 20th March 2021, and his `loan` record is the second record in the ","lastModifiedDate":"2021-04-01"},{"lineNumber":332,"author":{"gitId":"gerardtwk"},"content":"combined list of expense, loan and saving records.","lastModifiedDate":"2021-04-01"},{"lineNumber":333,"author":{"gitId":"gerardtwk"},"content":"Then to mark this loan as *returned*, the `index_of_loan` to be included in this case is `2` and the `return_date` is ","lastModifiedDate":"2021-04-01"},{"lineNumber":334,"author":{"gitId":"gerardtwk"},"content":"the date of return which is `28/03/21`.","lastModifiedDate":"2021-04-01"},{"lineNumber":335,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":336,"author":{"gitId":"gerardtwk"},"content":"Format: `return -i \u003cindex_of_loan\u003e -d \u003creturn_date\u003e`","lastModifiedDate":"2021-04-01"},{"lineNumber":337,"author":{"gitId":"gerardtwk"},"content":"* `\u003cindex_of_loan\u003e` refers to the index number shown on the [displayed list of loans](#322-list-all-loan-records).","lastModifiedDate":"2021-04-01"},{"lineNumber":338,"author":{"gitId":"gerardtwk"},"content":"* `\u003creturn_date\u003e` refers to the date on which the borrower has returned the loan.","lastModifiedDate":"2021-04-01"},{"lineNumber":339,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":340,"author":{"gitId":"LeeHanYongAndy"},"content":"Example: `return -i 2 -d 28/03/2021`","lastModifiedDate":"2021-04-05"},{"lineNumber":341,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":342,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-20"},{"lineNumber":343,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":344,"author":{"gitId":"tzexern"},"content":"![return example output](img/ReturnExampleOutput.jpg)","lastModifiedDate":"2021-03-29"},{"lineNumber":345,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":346,"author":{"gitId":"LeeHanYongAndy"},"content":"### 3.5 Remove a record: `remove`","lastModifiedDate":"2021-03-20"},{"lineNumber":347,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":348,"author":{"gitId":"LeeHanYongAndy"},"content":"---","lastModifiedDate":"2021-03-30"},{"lineNumber":349,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":350,"author":{"gitId":"jonahtwl"},"content":"In a scenario that you realised that the `expense` record of Plain bread loaf added on 20th March 2021 was wrong,","lastModifiedDate":"2021-03-30"},{"lineNumber":351,"author":{"gitId":"jonahtwl"},"content":"you can `remove` the record by entering the `remove` command with the _index_ of the `expense`, this is case, it would","lastModifiedDate":"2021-03-30"},{"lineNumber":352,"author":{"gitId":"jonahtwl"},"content":"be the first record in the list.","lastModifiedDate":"2021-03-30"},{"lineNumber":353,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":354,"author":{"gitId":"tzexern"},"content":"Format: `remove -i \u003cindex\u003e`","lastModifiedDate":"2021-03-23"},{"lineNumber":355,"author":{"gitId":"tzexern"},"content":"* `\u003cindex\u003e` refers to the index number shown on the record list.","lastModifiedDate":"2021-03-30"},{"lineNumber":356,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":357,"author":{"gitId":"LeeHanYongAndy"},"content":"Example: `remove -i 1`","lastModifiedDate":"2021-04-05"},{"lineNumber":358,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":359,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-20"},{"lineNumber":360,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":361,"author":{"gitId":"tzexern"},"content":"![remove example output](img/RemoveExampleOutput.jpg)","lastModifiedDate":"2021-03-29"},{"lineNumber":362,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":363,"author":{"gitId":"jonahtwl"},"content":"\u003e 💡 To find the index of a record, you can simply `list` the record type (`-e`, `-l`, `-s`) and the number that","lastModifiedDate":"2021-03-30"},{"lineNumber":364,"author":{"gitId":"jonahtwl"},"content":"\u003e precedes the record is the index.","lastModifiedDate":"2021-03-30"},{"lineNumber":365,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":366,"author":{"gitId":"tzexern"},"content":"### 3.6 Check a person\u0027s credit score: `creditscore`","lastModifiedDate":"2021-03-23"},{"lineNumber":367,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":368,"author":{"gitId":"LeeHanYongAndy"},"content":"---","lastModifiedDate":"2021-03-30"},{"lineNumber":369,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":370,"author":{"gitId":"jonahtwl"},"content":"Let\u0027s say that Mark wants to borrow money from you again, but you will want to know his \"credit-worthiness\" ","lastModifiedDate":"2021-03-30"},{"lineNumber":371,"author":{"gitId":"jonahtwl"},"content":"(`creditScore`) before lending him money again, you can simply enter his _name_ after the `creditScore` command.","lastModifiedDate":"2021-03-30"},{"lineNumber":372,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":373,"author":{"gitId":"tzexern"},"content":"Format: `creditscore \u003cperson\u003e`","lastModifiedDate":"2021-03-23"},{"lineNumber":374,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":375,"author":{"gitId":"tzexern"},"content":"* `\u003cperson\u003e` refers to any person including those in the list and not in the list.","lastModifiedDate":"2021-03-30"},{"lineNumber":376,"author":{"gitId":"tzexern"},"content":"* `\u003cperson\u003e` is case-insensitive, e.g. `jason` is the same as `Jason`","lastModifiedDate":"2021-03-30"},{"lineNumber":377,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":378,"author":{"gitId":"LeeHanYongAndy"},"content":"Example: `creditscore mark`","lastModifiedDate":"2021-04-05"},{"lineNumber":379,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":380,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-20"},{"lineNumber":381,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":382,"author":{"gitId":"tzexern"},"content":"![creditscore example output](img/CreditScoreExampleOutput.jpg)","lastModifiedDate":"2021-03-25"},{"lineNumber":383,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":384,"author":{"gitId":"jonahtwl"},"content":"\u003e 📝 As of version 2.1, a score of `5` will be added if returned within a week, `10`, `20` and `50` will be deducted","lastModifiedDate":"2021-04-06"},{"lineNumber":385,"author":{"gitId":"jonahtwl"},"content":"\u003e when a loan is returned after one week and before the second week, two weeks and before the fourth week and ","lastModifiedDate":"2021-04-06"},{"lineNumber":386,"author":{"gitId":"jonahtwl"},"content":"\u003e after four weeks respectively.","lastModifiedDate":"2021-04-06"},{"lineNumber":387,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":388,"author":{"gitId":"jonahtwl"},"content":"\u003e 💡 A credit score of `100` will be shown from a person who has not borrowed money from you as they can still","lastModifiedDate":"2021-04-06"},{"lineNumber":389,"author":{"gitId":"jonahtwl"},"content":"\u003e considered trustworthy. The Finux application will display a credit score of `100` for people whom you have not added ","lastModifiedDate":"2021-04-06"},{"lineNumber":390,"author":{"gitId":"jonahtwl"},"content":"\u003e any loans prior.","lastModifiedDate":"2021-04-06"},{"lineNumber":391,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":392,"author":{"gitId":"LeeHanYongAndy"},"content":"### 3.7 Exit the program: `exit`","lastModifiedDate":"2021-03-20"},{"lineNumber":393,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":394,"author":{"gitId":"LeeHanYongAndy"},"content":"---","lastModifiedDate":"2021-03-30"},{"lineNumber":395,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":396,"author":{"gitId":"LeeHanYongAndy"},"content":"You can exit the application by typing the `exit` command.","lastModifiedDate":"2021-03-30"},{"lineNumber":397,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":398,"author":{"gitId":"tzexern"},"content":"Format: `exit`","lastModifiedDate":"2021-03-23"},{"lineNumber":399,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":400,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-30"},{"lineNumber":401,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":402,"author":{"gitId":"LeeHanYongAndy"},"content":"![exit example output](img/ExitExampleOutput.jpg)","lastModifiedDate":"2021-03-30"},{"lineNumber":403,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":404,"author":{"gitId":"LeeHanYongAndy"},"content":"### 3.8 Help function: `help`","lastModifiedDate":"2021-03-20"},{"lineNumber":405,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":406,"author":{"gitId":"LeeHanYongAndy"},"content":"---","lastModifiedDate":"2021-03-30"},{"lineNumber":407,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":408,"author":{"gitId":"jonahtwl"},"content":"If you do not know how to use any of the features in Finux, and would like to know their specifications, simply type","lastModifiedDate":"2021-03-30"},{"lineNumber":409,"author":{"gitId":"LeeHanYongAndy"},"content":"`help` followed by the command name of the available features listed below:","lastModifiedDate":"2021-03-31"},{"lineNumber":410,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":411,"author":{"gitId":"LeeHanYongAndy"},"content":"* `add`: display the help section for `add` command.","lastModifiedDate":"2021-04-05"},{"lineNumber":412,"author":{"gitId":"LeeHanYongAndy"},"content":"* `list`: display the help section for `list` command.","lastModifiedDate":"2021-04-05"},{"lineNumber":413,"author":{"gitId":"LeeHanYongAndy"},"content":"* `view`: display the help section for `view` command.","lastModifiedDate":"2021-04-05"},{"lineNumber":414,"author":{"gitId":"LeeHanYongAndy"},"content":"* `return`: display the help section for `return` command.","lastModifiedDate":"2021-04-05"},{"lineNumber":415,"author":{"gitId":"LeeHanYongAndy"},"content":"* `remove`: display the help section for `remove` command.","lastModifiedDate":"2021-04-05"},{"lineNumber":416,"author":{"gitId":"LeeHanYongAndy"},"content":"* `creditscore`: display the help section for `creditscore` command.","lastModifiedDate":"2021-04-05"},{"lineNumber":417,"author":{"gitId":"LeeHanYongAndy"},"content":"* `exit`: display the help section for `exit` command.","lastModifiedDate":"2021-04-05"},{"lineNumber":418,"author":{"gitId":"LeeHanYongAndy"},"content":"* `all`: display will all the features, brief description and format.","lastModifiedDate":"2021-04-05"},{"lineNumber":419,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":420,"author":{"gitId":"LeeHanYongAndy"},"content":"💡 Typing `help` is also equivalent to typing `help all`.","lastModifiedDate":"2021-04-05"},{"lineNumber":421,"author":{"gitId":"jonahtwl"},"content":" ","lastModifiedDate":"2021-03-30"},{"lineNumber":422,"author":{"gitId":"jonahtwl"},"content":"Each help section is divided into three parts:","lastModifiedDate":"2021-03-30"},{"lineNumber":423,"author":{"gitId":"LeeHanYongAndy"},"content":"* `NAME` will show you the feature name and its brief description.","lastModifiedDate":"2021-03-31"},{"lineNumber":424,"author":{"gitId":"LeeHanYongAndy"},"content":"* `SYNOPSIS` will show you the format to follow. \u003cbr\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":425,"author":{"gitId":"LeeHanYongAndy"},"content":"* `DESCRIPTION` will explain the usage of any arguments or options.","lastModifiedDate":"2021-03-31"},{"lineNumber":426,"author":{"gitId":"LeeHanYongAndy"},"content":"* 📝 The `exit` section will only show the `NAME` and `SYNOPSIS` as no argument is needed.","lastModifiedDate":"2021-03-31"},{"lineNumber":427,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":428,"author":{"gitId":"LeeHanYongAndy"},"content":"Format: `help \u003cFEATURE\u003e`","lastModifiedDate":"2021-03-21"},{"lineNumber":429,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":430,"author":{"gitId":"tzexern"},"content":"Example: `help remove`","lastModifiedDate":"2021-03-30"},{"lineNumber":431,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":432,"author":{"gitId":"LeeHanYongAndy"},"content":"Output:","lastModifiedDate":"2021-03-20"},{"lineNumber":433,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":434,"author":{"gitId":"tzexern"},"content":"![help example output](img/HelpExampleOutput.jpg)","lastModifiedDate":"2021-03-29"},{"lineNumber":435,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":436,"author":{"gitId":"jonahtwl"},"content":"### 3.9 Records storage","lastModifiedDate":"2021-03-22"},{"lineNumber":437,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":438,"author":{"gitId":"LeeHanYongAndy"},"content":"---","lastModifiedDate":"2021-03-30"},{"lineNumber":439,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":440,"author":{"gitId":"LeeHanYongAndy"},"content":"#### 3.9.1 Saving Data","lastModifiedDate":"2021-04-01"},{"lineNumber":441,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":442,"author":{"gitId":"LeeHanYongAndy"},"content":"* All your records are automatically saved into `finux.txt` after the following commands: `add`, `remove`, `return`.","lastModifiedDate":"2021-04-01"},{"lineNumber":443,"author":{"gitId":"jonahtwl"},"content":"* Records will **NOT** be saved after the following commands: `help`, `list`, `view`, `creditscore`, `exit`.","lastModifiedDate":"2021-03-30"},{"lineNumber":444,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":445,"author":{"gitId":"jonahtwl"},"content":"\u003e ❗ Do ensure that permissions are given for Finux to write into the folder it is in,","lastModifiedDate":"2021-03-30"},{"lineNumber":446,"author":{"gitId":"jonahtwl"},"content":"\u003e Finux will exit upon unsuccessful file creation.","lastModifiedDate":"2021-03-30"},{"lineNumber":447,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":448,"author":{"gitId":"LeeHanYongAndy"},"content":"#### 3.9.2 Loading Data","lastModifiedDate":"2021-04-01"},{"lineNumber":449,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":450,"author":{"gitId":"LeeHanYongAndy"},"content":"* Finux will automatically load your data from `finux.txt` when it finds the text","lastModifiedDate":"2021-04-01"},{"lineNumber":451,"author":{"gitId":"jonahtwl"},"content":"  file in the same home folder as mentioned in the [Quick Start](#2-quick-start). \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":452,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":453,"author":{"gitId":"jonahtwl"},"content":"* Expected output for new file creation: \u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":455,"author":{"gitId":"tzexern"},"content":"  ![new_file_creation_output](img/NewFileCreationExampleOutput.jpg)","lastModifiedDate":"2021-03-29"},{"lineNumber":456,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":457,"author":{"gitId":"jonahtwl"},"content":"* Expected output if successful load: \u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":458,"author":{"gitId":"tzexern"},"content":"  ![load success example output](img/SuccessfulLoadExampleOutput.jpg)","lastModifiedDate":"2021-03-29"},{"lineNumber":459,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":460,"author":{"gitId":"jonahtwl"},"content":"* Expected output if not successfully loaded: \u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":461,"author":{"gitId":"tzexern"},"content":"  ![load fail example output](img/FailedLoadExampleOutput.jpg)","lastModifiedDate":"2021-03-29"},{"lineNumber":462,"author":{"gitId":"jonahtwl"},"content":"  ","lastModifiedDate":"2021-03-22"},{"lineNumber":463,"author":{"gitId":"jonahtwl"},"content":"\u003e ❗ Do **NOT** modify the contents of the `finux.txt` save file.","lastModifiedDate":"2021-03-31"},{"lineNumber":464,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":465,"author":{"gitId":"LeeHanYongAndy"},"content":"## 4. Frequently Asked Questions","lastModifiedDate":"2021-03-30"},{"lineNumber":466,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":467,"author":{"gitId":"LeeHanYongAndy"},"content":"---","lastModifiedDate":"2021-03-30"},{"lineNumber":468,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":469,"author":{"gitId":"gerardtwk"},"content":"**Q1**: How can I transfer my saved tasks information to another computer?","lastModifiedDate":"2021-03-30"},{"lineNumber":470,"author":{"gitId":"gerardtwk"},"content":"\u003e Run Finux on the other computer and overwrite the empty `finux.txt` created, with the `finux.txt` that","lastModifiedDate":"2021-03-30"},{"lineNumber":471,"author":{"gitId":"gerardtwk"},"content":"\u003e contains the data of your previous Finux usage.","lastModifiedDate":"2021-03-30"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":473,"author":{"gitId":"gerardtwk"},"content":"**Q2**: Does the `view -l` shows the total loan amount? \u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":474,"author":{"gitId":"gerardtwk"},"content":"\u003e No. `view -l` only shows the total amount of unreturned loans.","lastModifiedDate":"2021-03-30"},{"lineNumber":475,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":476,"author":{"gitId":"jonahtwl"},"content":"**Q3**: What happens if Finux crashes unexpectedly? \u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":477,"author":{"gitId":"gerardtwk"},"content":"\u003e All records are saved upon addition, deletion, or returned. Hence chances of data losses are minimized.","lastModifiedDate":"2021-04-01"},{"lineNumber":478,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":479,"author":{"gitId":"jonahtwl"},"content":"**Q4**: Finux keeps having a `bad init` error message, but it is my first time launching Finux. \u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":480,"author":{"gitId":"jonahtwl"},"content":"\u003e Do check and ensure that Finux has the proper write permissions in the directory.","lastModifiedDate":"2021-03-30"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":482,"author":{"gitId":"LeeHanYongAndy"},"content":"## 5. Command Summary","lastModifiedDate":"2021-03-20"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":484,"author":{"gitId":"LeeHanYongAndy"},"content":"---","lastModifiedDate":"2021-03-30"},{"lineNumber":485,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":486,"author":{"gitId":"gerardtwk"},"content":"| Feature                                | Command                                                  | Example                                              |","lastModifiedDate":"2021-03-30"},{"lineNumber":487,"author":{"gitId":"gerardtwk"},"content":"| -------------------------------------- | -------------------------------------------------------- |------------------------------------------------------|","lastModifiedDate":"2021-03-30"},{"lineNumber":488,"author":{"gitId":"gerardtwk"},"content":"| Add an expense record                  | `add -e \u003cdescription\u003e -a \u003camount\u003e -d \u003cdate\u003e`             | `add -e Plain bread loaf -a 2.90 -d 20.3.2021`       |","lastModifiedDate":"2021-03-30"},{"lineNumber":489,"author":{"gitId":"gerardtwk"},"content":"| Add a loan record                      | `add -l \u003cdescription\u003e -a \u003camount\u003e -d \u003cdate\u003e -p \u003cperson\u003e` | `add -l 1st loan to Mark -a 200 -d 20.3.2021 -p Mark`|","lastModifiedDate":"2021-03-30"},{"lineNumber":490,"author":{"gitId":"gerardtwk"},"content":"| Add a saving record                    | `add -s \u003cdescription\u003e -a \u003camount\u003e -d \u003cdate\u003e`             | `add -s Savings from March -a 1000 -d 05/04/2021`    |","lastModifiedDate":"2021-03-30"},{"lineNumber":491,"author":{"gitId":"gerardtwk"},"content":"| List all expense records               | `list -e`                                                | -                                                    |","lastModifiedDate":"2021-03-30"},{"lineNumber":492,"author":{"gitId":"gerardtwk"},"content":"| List all loan records                  | `list -l`                                                | -                                                    |","lastModifiedDate":"2021-03-30"},{"lineNumber":493,"author":{"gitId":"gerardtwk"},"content":"| List all saving records                | `list -s`                                                | -                                                    |","lastModifiedDate":"2021-03-30"},{"lineNumber":494,"author":{"gitId":"tzexern"},"content":"| List all records                       | `list -a`                                                | -                                                    |","lastModifiedDate":"2021-04-03"},{"lineNumber":495,"author":{"gitId":"LeeHanYongAndy"},"content":"| View total expense                     | `view -e`                                                | -                                                    |","lastModifiedDate":"2021-04-01"},{"lineNumber":496,"author":{"gitId":"LeeHanYongAndy"},"content":"| View total unreturned loans            | `view -l`                                                | -                                                    |","lastModifiedDate":"2021-04-01"},{"lineNumber":497,"author":{"gitId":"LeeHanYongAndy"},"content":"| View total savings                     | `view -s`                                                | -                                                    |","lastModifiedDate":"2021-04-01"},{"lineNumber":498,"author":{"gitId":"gerardtwk"},"content":"| Mark a loan as returned                | `return -i \u003cindex_of_loan\u003e -d \u003creturn_date\u003e`             | `return -i 2 -d 28/03/2021`                          |","lastModifiedDate":"2021-04-01"},{"lineNumber":499,"author":{"gitId":"gerardtwk"},"content":"| Remove a record (expense/savings/loan) | `remove -i \u003cindex\u003e`                                      | `remove -i 1`                                        |","lastModifiedDate":"2021-04-01"},{"lineNumber":500,"author":{"gitId":"gerardtwk"},"content":"| Check a person\u0027s credit score          | `creditscore \u003cperson\u003e`                                   | `creditscore mark`                                   |","lastModifiedDate":"2021-04-01"},{"lineNumber":501,"author":{"gitId":"gerardtwk"},"content":"| Exit the application                   | `exit`                                                   | -                                                    |","lastModifiedDate":"2021-03-30"},{"lineNumber":502,"author":{"gitId":"gerardtwk"},"content":"| Help (selected command)                | `help \u003cfeature\u003e`                                         | `help remove`                                        |","lastModifiedDate":"2021-04-01"},{"lineNumber":503,"author":{"gitId":"gerardtwk"},"content":"| Help (all commands)                    | `help`                                                   | -                                                    |","lastModifiedDate":"2021-03-30"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"tzexern":35,"jonahtwl":100,"LeeHanYongAndy":247,"marklowsk":12,"gerardtwk":84,"-":26}},{"path":"docs/diagrams/AddFeatureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"@startuml","lastModifiedDate":"2021-04-02"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"!include style.puml","lastModifiedDate":"2021-04-02"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"Participant \":AddCommand\" as AddCommand","lastModifiedDate":"2021-04-02"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"Participant \":Expense\" as Expense","lastModifiedDate":"2021-04-02"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"Participant \":Loan\" as Loan","lastModifiedDate":"2021-04-02"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"Participant \":Saving\" as Saving","lastModifiedDate":"2021-04-02"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"Participant \":RecordList\" as RecordList","lastModifiedDate":"2021-04-02"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"Participant \":Storage\" as Storage","lastModifiedDate":"2021-04-02"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"Participant \":Ui\" as UI","lastModifiedDate":"2021-04-02"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"[-\u003e AddCommand : execute()","lastModifiedDate":"2021-04-02"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"activate AddCommand","lastModifiedDate":"2021-04-02"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"alt EXPENSE","lastModifiedDate":"2021-04-02"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"    create Expense","lastModifiedDate":"2021-04-02"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"    AddCommand -\u003e Expense : Expense(amount, issueDate, description)","lastModifiedDate":"2021-04-02"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"    activate Expense","lastModifiedDate":"2021-04-02"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"    Expense --\u003e AddCommand : record : Record","lastModifiedDate":"2021-04-02"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"    deactivate Expense","lastModifiedDate":"2021-04-02"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"else LOAN","lastModifiedDate":"2021-04-02"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"    create Loan","lastModifiedDate":"2021-04-02"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"    AddCommand -\u003e Loan : Loan(amount, issueDate, description, borrowerName)","lastModifiedDate":"2021-04-02"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"    activate Loan","lastModifiedDate":"2021-04-02"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"    Loan --\u003e AddCommand : record : Record","lastModifiedDate":"2021-04-02"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"    deactivate Loan","lastModifiedDate":"2021-04-02"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"else SAVING","lastModifiedDate":"2021-04-02"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"    create Saving","lastModifiedDate":"2021-04-02"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"    AddCommand -\u003e Saving : Saving(amount, issueDate, description)","lastModifiedDate":"2021-04-02"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":"    activate Saving","lastModifiedDate":"2021-04-02"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"    Saving --\u003e AddCommand : record : Record","lastModifiedDate":"2021-04-02"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":"    deactivate Saving","lastModifiedDate":"2021-04-02"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"end","lastModifiedDate":"2021-04-02"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":36,"author":{"gitId":"marklowsk"},"content":"AddCommand -\u003e RecordList : addRecord(record)","lastModifiedDate":"2021-04-02"},{"lineNumber":37,"author":{"gitId":"marklowsk"},"content":"activate RecordList","lastModifiedDate":"2021-04-02"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"RecordList --\u003e AddCommand","lastModifiedDate":"2021-04-02"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"deactivate RecordList","lastModifiedDate":"2021-04-02"},{"lineNumber":40,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":41,"author":{"gitId":"marklowsk"},"content":"AddCommand -\u003e Storage : saveData(recordList, creditScoreReturnedLoansMap)","lastModifiedDate":"2021-04-02"},{"lineNumber":42,"author":{"gitId":"marklowsk"},"content":"activate Storage","lastModifiedDate":"2021-04-02"},{"lineNumber":43,"author":{"gitId":"marklowsk"},"content":"Storage --\u003e AddCommand","lastModifiedDate":"2021-04-02"},{"lineNumber":44,"author":{"gitId":"marklowsk"},"content":"deactivate Storage","lastModifiedDate":"2021-04-02"},{"lineNumber":45,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":46,"author":{"gitId":"marklowsk"},"content":"AddCommand -\u003e UI : printSuccessfulAdd(record)","lastModifiedDate":"2021-04-02"},{"lineNumber":47,"author":{"gitId":"marklowsk"},"content":"activate UI","lastModifiedDate":"2021-04-02"},{"lineNumber":48,"author":{"gitId":"marklowsk"},"content":"UI --\u003e AddCommand","lastModifiedDate":"2021-04-02"},{"lineNumber":49,"author":{"gitId":"marklowsk"},"content":"deactivate UI","lastModifiedDate":"2021-04-02"},{"lineNumber":50,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":51,"author":{"gitId":"marklowsk"},"content":"[\u003c-- AddCommand","lastModifiedDate":"2021-04-02"},{"lineNumber":52,"author":{"gitId":"marklowsk"},"content":"deactivate AddCommand","lastModifiedDate":"2021-04-02"},{"lineNumber":53,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":54,"author":{"gitId":"marklowsk"},"content":"@enduml","lastModifiedDate":"2021-04-02"}],"authorContributionMap":{"marklowsk":54}},{"path":"docs/diagrams/ArchitectureDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"@startuml","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"!include \u003coffice/Concepts/globe_internet\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"!include \u003coffice/Concepts/document\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"!include \u003coffice/Users/user\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"!include style.puml","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"\u0027Need to rework current Finux Architecture","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"Package \" \"\u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"    Class UI #green","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"    Class Storage #magenta","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"    Class RecordList #indigo","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"    Class Finux #grey","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"    Class CommandHandler #orange","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"    Class Parser #olivedrab","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"    Class Command #purple","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"    Class HiddenRecordList #white","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"    Class HiddenUI #white","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"    Class Hidden #white","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"Class \"\u003c$user\u003e\" as User #black","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"Class \"\u003c$document\u003e\" as File #skyblue","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"User ..\u003e UI","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"UI -[#green]-\u003e Parser","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"Parser -[#olivedrab]-\u003e CommandHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"CommandHandler -[#orange]-\u003e Command","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"Command -[#purple]-\u003e RecordList","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"Command -right[#purple]-\u003e Storage","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":"Storage -[#magenta]-\u003e RecordList","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":"Storage .[#magenta].\u003e File","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"File .[#skyblue].\u003e Storage","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"marklowsk"},"content":"Finux -down-\u003e Hidden","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"marklowsk"},"content":"Finux -left-\u003e HiddenUI","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"Finux -down-\u003e HiddenRecordList","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"@enduml","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"marklowsk":39}},{"path":"docs/diagrams/CommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"@startuml","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"hide circle","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"abstract class \"{abstract}\\nCommand\" as Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"    {abstract} +execute()","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"enum RecordType \u003c\u003cenumeration\u003e\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"    EXPENSE","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"    LOAN","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"    SAVING","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"class AddCommand {","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"    {static} #COMMAND_ADD: String","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"    -amount: BigDecimal","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"    -issueDate: LocalDate","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"    -description: String","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"    -borrowerName: String","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"    -recordType: RecordType","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"    +AddCommand(:ArrayList\u003cString\u003e)","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"    +execute()","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"note right of Command::execute","lastModifiedDate":"2021-04-02"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"    Parameters omitted for brevity.","lastModifiedDate":"2021-04-02"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"end note","lastModifiedDate":"2021-04-02"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"Command \u003c|-- AddCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"hide RecordType empty members","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":"Command -left[hidden] RecordType","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"note \"Other child Command objects omitted for brevity.\\nPrivate methods are omitted.\" as N1","lastModifiedDate":"2021-04-02"},{"lineNumber":36,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":37,"author":{"gitId":"marklowsk"},"content":"@enduml","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"marklowsk":37}},{"path":"docs/diagrams/CommandHandlerClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"@startuml","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"hide circle","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"note \"Private attributes and methods are omitted.\" as N1","lastModifiedDate":"2021-04-02"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"class CommandHandler {","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"    -isExit : boolean","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"    +CommandHandler()","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"    +isExit() : boolean","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"    +setExit(:boolean)","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"    +parseCommand(:ArrayList\u003cString\u003e, :RecordList): Command","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"    -createCommand(:ArrayList\u003cString\u003e, :RecordList): Command","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"class Finux {","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"    +main()","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"CommandHandler\"1\" \u003c-- Finux","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"Finux -right\u003e N1","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"@enduml","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"marklowsk":22}},{"path":"docs/diagrams/CommandHandlerSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"@startuml","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"!include style.puml","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"Participant \":Finux\" as Finux","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"Participant \":CommandHandler\" as CommandHandler","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"Participant \":XYZCommand\" as XYZCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"activate Finux","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"Finux -\u003e CommandHandler : parseCommand(parsedArguments)","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"activate CommandHandler","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"CommandHandler -\u003e CommandHandler :createCommand(parsedArguments)","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"activate CommandHandler","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"alt parsedArguments[0] is \"xyz\"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"    create XYZCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"    CommandHandler -\u003e XYZCommand : XYZCommand(parsedArguments)","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"    activate XYZCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"    alt no error","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"    XYZCommand --\u003e CommandHandler","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"    deactivate XYZCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"    CommandHandler --\u003e CommandHandler","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"    deactivate CommandHandler","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"    CommandHandler --\u003e Finux : command : Command","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"    deactivate CommandHandler","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"    else exception - argument error","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"        Finux --[hidden]\u003e CommandHandler","lastModifiedDate":"2021-04-02"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"        activate CommandHandler","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"        CommandHandler -[hidden]\u003e CommandHandler","lastModifiedDate":"2021-04-02"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"        activate CommandHandler","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"        CommandHandler --[hidden]\u003e XYZCommand","lastModifiedDate":"2021-04-02"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"        activate XYZCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":"        XYZCommand --\u003e CommandHandler : CommandException","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"        deactivate XYZCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":"        destroy XYZCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"        CommandHandler --\u003e CommandHandler","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"        deactivate CommandHandler","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"marklowsk"},"content":"        CommandHandler --\u003e Finux : CommandException","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"marklowsk"},"content":"        deactivate CommandHandler","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"    end","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"else parsedArguments[0] is empty string","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"marklowsk"},"content":"    Finux --[hidden]\u003e CommandHandler","lastModifiedDate":"2021-04-02"},{"lineNumber":41,"author":{"gitId":"marklowsk"},"content":"    activate CommandHandler","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"marklowsk"},"content":"    CommandHandler -[hidden]\u003e CommandHandler","lastModifiedDate":"2021-04-02"},{"lineNumber":43,"author":{"gitId":"marklowsk"},"content":"    activate CommandHandler","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"marklowsk"},"content":"    CommandHandler --\u003e CommandHandler","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"marklowsk"},"content":"    deactivate CommandHandler","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"marklowsk"},"content":"    CommandHandler --\u003e Finux : null","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"marklowsk"},"content":"    deactivate CommandHandler","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"marklowsk"},"content":"else exception - parsedArguments[0] invalid command","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"marklowsk"},"content":"    Finux --[hidden]\u003e CommandHandler","lastModifiedDate":"2021-04-02"},{"lineNumber":50,"author":{"gitId":"marklowsk"},"content":"    activate CommandHandler","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"marklowsk"},"content":"    CommandHandler -[hidden]\u003e CommandHandler","lastModifiedDate":"2021-04-02"},{"lineNumber":52,"author":{"gitId":"marklowsk"},"content":"    activate CommandHandler","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"marklowsk"},"content":"    CommandHandler --\u003e CommandHandler","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"marklowsk"},"content":"    deactivate CommandHandler","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"marklowsk"},"content":"    CommandHandler --\u003e Finux : CommandException","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"marklowsk"},"content":"    deactivate CommandHandler","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"marklowsk"},"content":"end","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"marklowsk"},"content":"@enduml","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"marklowsk":59}},{"path":"docs/diagrams/CommandLooperSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"!include style.puml","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"Participant \":Finux\" as Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"Participant \":ParserHandler\" as ParserHandler","lastModifiedDate":"2021-04-02"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"Participant \":CommandHandler\" as CommandHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"Participant \":Ui\" as UI","lastModifiedDate":"2021-04-02"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"Participant \":Command\" as Command","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"Participant \":RecordList\" as RecordList","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"Participant \":Storage\" as Storage","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"activate Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"Finux -\u003e Finux : commandLooper()","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"activate Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"loop while not exit","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"    Finux -\u003e UI : getUserInput()","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"    activate UI","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"    UI --\u003e Finux : rawInput : String","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"    deactivate UI","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"    Finux -\u003e ParserHandler : getParseInput(rawInput)","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"    activate ParserHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"    ParserHandler --\u003e Finux : parsedArguments : ArrayList\u003cString\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"    deactivate ParserHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"    Finux -\u003e CommandHandler : parseCommand(parsedArguments)","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"    activate CommandHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"    CommandHandler -\u003e CommandHandler :createCommand(parsedArguments)","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":"    activate CommandHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"    create Command","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":"    CommandHandler -\u003e Command : Command(parsedArguments)","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"    activate Command","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"    Command --\u003e CommandHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"marklowsk"},"content":"    deactivate Command","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"marklowsk"},"content":"    CommandHandler --\u003e CommandHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"    deactivate CommandHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"    CommandHandler --\u003e Finux : command : Command","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"marklowsk"},"content":"    deactivate CommandHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"marklowsk"},"content":"    Finux -\u003e Command : execute()","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"marklowsk"},"content":"    activate Command","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"marklowsk"},"content":"    ref over Command, RecordList, Storage, UI : Command execute logic","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"marklowsk"},"content":"    Command --\u003e Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"marklowsk"},"content":"    deactivate Command","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"marklowsk"},"content":"    Command --[hidden]\u003e Finux","lastModifiedDate":"2021-04-02"},{"lineNumber":48,"author":{"gitId":"marklowsk"},"content":"    destroy Command","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"marklowsk"},"content":"end","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"marklowsk"},"content":"Finux --\u003e Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"marklowsk"},"content":"deactivate Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"marklowsk"},"content":"destroy ParserHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"marklowsk"},"content":"destroy CommandHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"marklowsk"},"content":"destroy RecordList","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"marklowsk"},"content":"destroy Storage","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"marklowsk"},"content":"Finux -\u003e Finux : end()","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"marklowsk"},"content":"activate Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"marklowsk"},"content":"Finux -\u003e UI : printGoodByeMessage()","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"marklowsk"},"content":"activate UI","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"marklowsk"},"content":"UI --\u003e Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"marklowsk"},"content":"deactivate UI","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"marklowsk"},"content":"Finux --\u003e Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"marklowsk"},"content":"deactivate Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"marklowsk"},"content":"destroy UI","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"marklowsk"},"content":"Finux --[hidden]\u003e Finux","lastModifiedDate":"2021-04-02"},{"lineNumber":69,"author":{"gitId":"marklowsk"},"content":"destroy Finux","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"marklowsk"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"marklowsk":71}},{"path":"docs/diagrams/InitializationSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"!include style.puml","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"Participant \":Finux\" as Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"Participant \":Ui\" as UI","lastModifiedDate":"2021-04-02"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"Participant \":Storage\" as Storage","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"Participant \":RecordList\" as RecordList","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"Participant \":ParserHandler\" as ParserHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"Participant \":CommandHandler\" as CommandHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"activate Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"Finux -\u003e Finux : start()","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"activate Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"create UI","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"Finux -\u003e UI : Ui()","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"activate UI","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"UI --\u003e Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"deactivate UI","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"create Storage","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"Finux -\u003e Storage : Storage()","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"activate Storage","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"Storage --\u003e Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"deactivate Storage","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"create ParserHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"Finux -\u003e ParserHandler : ParserHandler()","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"activate ParserHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":"ParserHandler --\u003e Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"deactivate ParserHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"create CommandHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"Finux -\u003e CommandHandler : CommandHandler()","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"marklowsk"},"content":"activate CommandHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"marklowsk"},"content":"CommandHandler --\u003e Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"deactivate CommandHandler","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"marklowsk"},"content":"Finux -\u003e Storage : loadFile()","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"marklowsk"},"content":"activate Storage","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"marklowsk"},"content":"Storage --\u003e Finux","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"marklowsk"},"content":"deactivate Storage","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"marklowsk"},"content":"Finux -\u003e Storage : getRecordListData()","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"marklowsk"},"content":"activate Storage","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"marklowsk"},"content":"Storage --\u003e Finux : records : ArrayList\u003cRecord\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"marklowsk"},"content":"deactivate Storage","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"marklowsk"},"content":"create RecordList","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"marklowsk"},"content":"Finux -\u003e RecordList : RecordList(records : ArrayList\u003cRecord\u003e)","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"marklowsk"},"content":"activate RecordList","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"marklowsk"},"content":"RecordList --\u003e Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"marklowsk"},"content":"deactivate RecordList","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"marklowsk"},"content":"Finux -\u003e UI : printWelcomeMessage()","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"marklowsk"},"content":"activate UI","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"marklowsk"},"content":"UI --\u003e Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"marklowsk"},"content":"deactivate UI","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"marklowsk"},"content":"Finux --\u003e Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"marklowsk"},"content":"deactivate Finux","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"marklowsk"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"marklowsk":65}},{"path":"docs/diagrams/ParserHandlerClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"hide circle","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"LeeHanYongAndy"},"content":"skinparam monochrome false","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":"note \"Some private attributes and methods are omitted.\" as N1","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"LeeHanYongAndy"},"content":"class ParserHandler {","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"    +ParserHandler()","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"LeeHanYongAndy"},"content":"    +getParseInput(:String): ArrayList\u003cString\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"LeeHanYongAndy"},"content":"    -startExtraction(:ArrayList\u003cString\u003e, :String): ArrayList\u003cString\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"    -extractSubsequentPart(:ArrayList\u003cString\u003e, :String): ArrayList\u003cString\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"LeeHanYongAndy"},"content":"    -extractFinalPart(:ArrayList\u003cString\u003e, :String): ArrayList\u003cString\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":"    -checkFirstBlock(:ArrayList\u003cString\u003e): ArrayList\u003cString\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"LeeHanYongAndy"},"content":"class Finux {","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"    +main()","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"Finux -\u003e \"1\"ParserHandler","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"LeeHanYongAndy":25}},{"path":"docs/diagrams/RemoveFeatureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"!include style.puml","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":"[-\u003e \":RemoveCommand\": execute()","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"activate \":RemoveCommand\"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":"\":RemoveCommand\" -\u003e \":RecordList\" : getRecordAt(recordNumberInt)","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"activate \":RecordList\"","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":"\":RecordList\" --\u003e \":RemoveCommand\"","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"tzexern"},"content":"deactivate \":RecordList\"","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"\":RemoveCommand\" -\u003e \":Ui\" : printMessage()","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"activate \":Ui\"","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"\":Ui\" --\u003e \":RemoveCommand\"","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"deactivate \":Ui\"","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"\":RemoveCommand\" -\u003e \":RecordList\" : deleteRecordAt(recordNumberInt)","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"activate \":RecordList\"","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"\":RecordList\" --\u003e \":RemoveCommand\"","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":"deactivate \":RecordList\"","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":"\":RemoveCommand\" -\u003e \":Storage\" : saveData()","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"activate \":Storage\"","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"\":Storage\" --\u003e \":RemoveCommand\"","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":"deactivate \":Storage\"","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"[\u003c-- \":RemoveCommand\"","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"deactivate \":RemoveCommand\"","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"destroy \":RemoveCommand\"","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"tzexern"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"tzexern":33}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"@startuml","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"hide circle","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"class Storage {","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"- recordList: ArrayList","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"- creditScoreReturnedLoansMap: HashMap","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"- dataFilePath: Path","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"+ saveData(recordList, creditScoreReturnedLoansMap)","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"+ loadFile()","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"+ getRecordListData()","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"+ getMapData()","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"note \"Private methods are omitted.\" as N1","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"class AddCommand {","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":"class ReturnCommand {","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"jonahtwl"},"content":"class RemoveCommand {","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":"Storage\"1\" \u003c-- Finux","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"Storage\"1\" \u003c-- AddCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"Storage\"1\" \u003c-- ReturnCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"Storage\"1\" \u003c-- RemoveCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"@enduml","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"jonahtwl":32}},{"path":"docs/diagrams/StorageSequenceDiagramLoad.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"@startuml","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"!include style.puml","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"note left of Storage","lastModifiedDate":"2021-04-03"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"Methods called by the parseRawData","lastModifiedDate":"2021-04-03"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"method are omitted to reduce clutter","lastModifiedDate":"2021-04-03"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"in the sequence diagram.","lastModifiedDate":"2021-04-03"},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"end note","lastModifiedDate":"2021-04-03"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"Participant \":Finux\" as Finux","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"Participant \":Storage\" as Storage","lastModifiedDate":"2021-04-03"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"Participant \":RecordList\" as RecordList","lastModifiedDate":"2021-04-03"},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"Participant \":CreditScoreReturnedLoansMap\" as CSRLM","lastModifiedDate":"2021-04-03"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"Finux -\u003e Storage : loadFile()","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"activate Storage","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":"Storage -\u003e Storage : parseRawData(rawData)","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"activate Storage","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"Storage -\u003e Storage : processParsedObject(parsedObject)","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"deactivate Storage","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":"alt is instance of Record","lastModifiedDate":"2021-04-03"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"    Storage -\u003e RecordList : add(Record)","lastModifiedDate":"2021-04-03"},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":"    activate RecordList","lastModifiedDate":"2021-04-03"},{"lineNumber":25,"author":{"gitId":"jonahtwl"},"content":"    Storage -[#white]\u003e RecordList","lastModifiedDate":"2021-04-03"},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":"    Storage -[#white]\u003e RecordList","lastModifiedDate":"2021-04-03"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"    destroy RecordList","lastModifiedDate":"2021-04-03"},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"else instance of CreditScore","lastModifiedDate":"2021-04-03"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"    Storage -\u003e CSRLM : put(BorrowerName)","lastModifiedDate":"2021-04-03"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"    activate CSRLM","lastModifiedDate":"2021-04-03"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"    Storage -[#white]\u003e CSRLM","lastModifiedDate":"2021-04-03"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"    Storage -[#white]\u003e CSRLM","lastModifiedDate":"2021-04-03"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":"    destroy CSRLM","lastModifiedDate":"2021-04-03"},{"lineNumber":35,"author":{"gitId":"jonahtwl"},"content":"end","lastModifiedDate":"2021-04-03"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":"Finux -\u003e Storage : getRecordListData()","lastModifiedDate":"2021-04-03"},{"lineNumber":38,"author":{"gitId":"jonahtwl"},"content":"Storage -\u003e Finux : recordList : RecordList","lastModifiedDate":"2021-04-03"},{"lineNumber":39,"author":{"gitId":"jonahtwl"},"content":"Finux -\u003e Storage : getMapData()","lastModifiedDate":"2021-04-03"},{"lineNumber":40,"author":{"gitId":"jonahtwl"},"content":"Storage -\u003e Finux : creditScoreReturnedLoansMap : creditScoreReturnedLoansMap","lastModifiedDate":"2021-04-03"},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"destroy Storage","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"jonahtwl"},"content":"@enduml","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"jonahtwl":43}},{"path":"docs/diagrams/StorageSequenceDiagramSave.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"@startuml","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"!include style.puml","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"Participant \":XYZCommand\" as XYZCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"Participant \":Storage\" as Storage","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"Participant \":CreditScoreReturnedLoansMap\" as CSRLM","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"Participant \":RecordList\" as RecordList","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"note right of XYZCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"Add, Remove, and Return Commands","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"calls the same saveData method,we will","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"simplify it by grouping them together.","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"end note","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"XYZCommand -\u003e Storage : saveData(recordList, (creditScoreReturnedLoansMap))","lastModifiedDate":"2021-04-04"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"activate Storage","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":"Storage -\u003e Storage : writeRecordListToSaveFile(recordList)","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"activate Storage","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"Loop all records","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"Storage -\u003e RecordList : getRecordAt()","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":"RecordList --\u003e Storage : currentRecord : Record","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"Storage -\u003e RecordList : convertFileFormat()","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":"RecordList --\u003e Storage","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"jonahtwl"},"content":"end loop","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":"destroy RecordList","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":"activate Storage","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"Storage --\u003e Storage","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"deactivate Storage","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"Storage -\u003e Storage : writeMapToSaveFile(creditScoreReturnedLoansMap)","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"activate Storage","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":"Loop Each borrowersName in creditScore","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"jonahtwl"},"content":"Storage -\u003e CSRLM : getBorrowersNames()","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"activate CSRLM","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":"CSRLM --\u003e Storage : borrowerName : Set\u003cString\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"jonahtwl"},"content":"Storage -\u003e CSRLM : getCreditScoreOf(borrowerName)","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"jonahtwl"},"content":"CSRLM --\u003e Storage : creditScore : int","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"jonahtwl"},"content":"end loop","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"destroy CSRLM","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"jonahtwl"},"content":"Storage --\u003e Storage","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"jonahtwl"},"content":"deactivate Storage","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"jonahtwl"},"content":"@enduml","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"jonahtwl":45}},{"path":"docs/diagrams/UIComponentDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":"hide circle","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"skinparam monochrome false","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"note \"Some private attributes and methods are omitted.\" as N1","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":"class Finux {","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":"    +main()","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"tzexern"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"class Ui {","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"Finux -\u003e \"1\"Ui","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"tzexern":18}},{"path":"docs/diagrams/ViewFeatureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"!include style.puml","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"LeeHanYongAndy"},"content":"[-\u003e \":ViewCommand\": execute()","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"LeeHanYongAndy"},"content":"activate \":ViewCommand\"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"LeeHanYongAndy"},"content":"alt EXPENSE","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"    \":ViewCommand\" -\u003e \":Ui\": printTotalAmountExpense(:RecordList)","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"LeeHanYongAndy"},"content":"    activate \":Ui\"","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"LeeHanYongAndy"},"content":"    \":Ui\" --\u003e \":ViewCommand\"","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"    deactivate \":Ui\"","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":"else LOAN","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"LeeHanYongAndy"},"content":"    \":ViewCommand\" -\u003e \":Ui\": printTotalAmountLoan(:RecordList)","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"LeeHanYongAndy"},"content":"    activate \":Ui\"","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"LeeHanYongAndy"},"content":"    \":Ui\" --\u003e \":ViewCommand\"","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"    deactivate \":Ui\"","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"else SAVING","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"    \":ViewCommand\" -\u003e \":Ui\": printTotalAmountSaving(:RecordList)","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":"    activate \":Ui\"","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"LeeHanYongAndy"},"content":"    \":Ui\" --\u003e \":ViewCommand\"","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"LeeHanYongAndy"},"content":"    deactivate \":Ui\"","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"LeeHanYongAndy"},"content":"end","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"LeeHanYongAndy"},"content":"[\u003c-- \":ViewCommand\"","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"LeeHanYongAndy"},"content":"deactivate \":ViewCommand\"","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"LeeHanYongAndy":34}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"skinparam BackgroundColor #FFFFFFF","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"skinparam Shadowing false","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"skinparam Class {","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"    FontColor #white","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"    BorderThickness 1","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"    BorderColor #white","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"    StereotypeFontColor #white","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"    FontName Arial","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"skinparam Sequence {","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"    MessageAlign center","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"    BoxFontSize 15","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"    BoxPadding 0","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"    BoxFontColor #white","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"    FontName Arial","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"skinparam Shadowing false","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"hide footbox","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"hide members","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"hide circle","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"marklowsk":29}},{"path":"docs/team/JonahThamWenLong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"# Jonah Tham Wen Long\u0027s Project Portfolio Page","lastModifiedDate":"2021-04-07"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"---","lastModifiedDate":"2021-04-07"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"## Overview","lastModifiedDate":"2021-04-07"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"Finux is a Command-Line Interface (CLI) application that allows you to record your expenses, savings and loans all ","lastModifiedDate":"2021-04-07"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"in one consolidated platform. With these information made readily available at your fingertips, it will allow you to ","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"better adjust your expenditure or work harder towards your savings goal. Finux also includes a way for you to keep ","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"track of the loans you have made to your friends, or the tabs for the dinners you have paid for first.","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"As the Finux application is inspired entirely by the *Nix operating systems, and if you are familiar with the CLI ","lastModifiedDate":"2021-04-07"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"command interface, you will definitely enjoy the benefits of the application. You will also be able to speed up your ","lastModifiedDate":"2021-04-07"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"financial management and planning with the Finux application as compared to the traditional finance management ","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"applications in the market.","lastModifiedDate":"2021-04-07"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"Finux was designed with the intention of speeding up one\u0027s finance management by integrating the usual fields in","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"finance management applications with a new loan and creditscore feature that is implemented by us. Coupled with the","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":"fact that Finux is also made to be cross-platform, users can easily use and port their data over should they decide to","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"use another personal computer.","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"---","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"## Summary of Contributions","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"jonahtwl"},"content":"### Code Contribution","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"Contributions can be found on [RepoSense](https://nus-cs2113-ay2021s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003djonahtwl\u0026tabRepo\u003dAY2021S2-CS2113T-W09-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code).","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"---","lastModifiedDate":"2021-04-07"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"### Contribution to Implementation","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"#### Storage class","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":"As with all applications, our finance management application, Finux, would also require a feature to store its data","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"jonahtwl"},"content":"locally. I took up this feature during the team\u0027s initial discussion when splitting the work. As I had previously found","lastModifiedDate":"2021-04-07"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"ways to break my own code during the iP, I have worked around those flaws and strengthened Finux\u0027s storage feature.","lastModifiedDate":"2021-04-07"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":"Instead of solely just checking the identifier of the type, I have augmented it such that the data in the local saved","lastModifiedDate":"2021-04-07"},{"lineNumber":38,"author":{"gitId":"jonahtwl"},"content":"text file follow a strict regex pattern. By doing so, this will in return prevent the many problems the application","lastModifiedDate":"2021-04-07"},{"lineNumber":39,"author":{"gitId":"jonahtwl"},"content":"will face when loading the saved file. This method was learnt and adapted from my teammate Mark, and I strengthened his","lastModifiedDate":"2021-04-07"},{"lineNumber":40,"author":{"gitId":"jonahtwl"},"content":"previous implementation into the one that is currently used by the team. As with the save function, the load function","lastModifiedDate":"2021-04-07"},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"of the storage class was also implemented by myself. Building on the regex pattern previously, the load function was","lastModifiedDate":"2021-04-07"},{"lineNumber":42,"author":{"gitId":"jonahtwl"},"content":"designed to only and successfully start when all data are loaded correctly. The intention of that was so that the user\u0027s","lastModifiedDate":"2021-04-07"},{"lineNumber":43,"author":{"gitId":"jonahtwl"},"content":"data have minimal chance of breaking the program nor corrupting his other data. The parts that saved and loaded the ","lastModifiedDate":"2021-04-07"},{"lineNumber":44,"author":{"gitId":"jonahtwl"},"content":"Hashmap was done up by Gerard when he included the credit score feature in the later iterations of our application. ","lastModifiedDate":"2021-04-07"},{"lineNumber":45,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":46,"author":{"gitId":"jonahtwl"},"content":"#### UI \u0026 Finux classes","lastModifiedDate":"2021-04-07"},{"lineNumber":47,"author":{"gitId":"jonahtwl"},"content":"As I had to start with a working application to write the storage functions and methods, I created the base skeleton","lastModifiedDate":"2021-04-07"},{"lineNumber":48,"author":{"gitId":"jonahtwl"},"content":"code of both the UI and Finux classes. This is then later also used by the team to be improved and work on to our final","lastModifiedDate":"2021-04-07"},{"lineNumber":49,"author":{"gitId":"jonahtwl"},"content":"product.","lastModifiedDate":"2021-04-07"},{"lineNumber":50,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":51,"author":{"gitId":"jonahtwl"},"content":"#### Record types and Commands","lastModifiedDate":"2021-04-07"},{"lineNumber":52,"author":{"gitId":"jonahtwl"},"content":"I have also worked with Mark to come up with a very raw and base commands and record types (expenses, savings, ","lastModifiedDate":"2021-04-07"},{"lineNumber":53,"author":{"gitId":"jonahtwl"},"content":"loans), as these are also required initially to enable my storage feature to be tested.","lastModifiedDate":"2021-04-07"},{"lineNumber":54,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":55,"author":{"gitId":"jonahtwl"},"content":"---","lastModifiedDate":"2021-04-07"},{"lineNumber":56,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":57,"author":{"gitId":"jonahtwl"},"content":"### Contributions to UG","lastModifiedDate":"2021-04-07"},{"lineNumber":58,"author":{"gitId":"jonahtwl"},"content":"As with the features implemented, I have documented the storage feature of our application and wrote the introduction","lastModifiedDate":"2021-04-07"},{"lineNumber":59,"author":{"gitId":"jonahtwl"},"content":"of our application.","lastModifiedDate":"2021-04-07"},{"lineNumber":60,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":61,"author":{"gitId":"jonahtwl"},"content":"Other contributions to the UG are:","lastModifiedDate":"2021-04-07"},{"lineNumber":62,"author":{"gitId":"jonahtwl"},"content":"* Rewritten the UG to be more user-friendly (added personal touches to the UG) ","lastModifiedDate":"2021-04-07"},{"lineNumber":63,"author":{"gitId":"jonahtwl"},"content":"* Simplified some explanations","lastModifiedDate":"2021-04-07"},{"lineNumber":64,"author":{"gitId":"jonahtwl"},"content":"* Added relatable examples to the features (e.g. Mark bought a bread for lunch at $3.45)","lastModifiedDate":"2021-04-07"},{"lineNumber":65,"author":{"gitId":"jonahtwl"},"content":"* Frequently Asked Questions","lastModifiedDate":"2021-04-07"},{"lineNumber":66,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":67,"author":{"gitId":"jonahtwl"},"content":"---","lastModifiedDate":"2021-04-07"},{"lineNumber":68,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":69,"author":{"gitId":"jonahtwl"},"content":"### Contributions to the DG","lastModifiedDate":"2021-04-07"},{"lineNumber":70,"author":{"gitId":"jonahtwl"},"content":"I have also documented on the same features implemented by myself on the DG. That being the storage component, this","lastModifiedDate":"2021-04-07"},{"lineNumber":71,"author":{"gitId":"jonahtwl"},"content":"also includes the object and sequence diagrams. I have also worked with Jason to do up the manual testing section in","lastModifiedDate":"2021-04-07"},{"lineNumber":72,"author":{"gitId":"jonahtwl"},"content":"Appendix D","lastModifiedDate":"2021-04-07"},{"lineNumber":73,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":74,"author":{"gitId":"jonahtwl"},"content":"---","lastModifiedDate":"2021-04-07"},{"lineNumber":75,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":76,"author":{"gitId":"jonahtwl"},"content":"### Contributions to Team-based Tasks","lastModifiedDate":"2021-04-07"},{"lineNumber":77,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":78,"author":{"gitId":"jonahtwl"},"content":"1. Vetting of UG \u0026 DG","lastModifiedDate":"2021-04-07"},{"lineNumber":79,"author":{"gitId":"jonahtwl"},"content":"1. General code enhancements","lastModifiedDate":"2021-04-07"},{"lineNumber":80,"author":{"gitId":"jonahtwl"},"content":"1. General editing of language in UG","lastModifiedDate":"2021-04-07"},{"lineNumber":81,"author":{"gitId":"jonahtwl"},"content":"1. Worked as a shadow for Andy (There to advice and discuss what\u0027s next, but behind the scenes) ","lastModifiedDate":"2021-04-07"},{"lineNumber":82,"author":{"gitId":"jonahtwl"},"content":"1. Bug hunting the team\u0027s features and components.","lastModifiedDate":"2021-04-07"},{"lineNumber":83,"author":{"gitId":"jonahtwl"},"content":"1. Maintained a small portion of issues in the issue tracker ","lastModifiedDate":"2021-04-07"},{"lineNumber":84,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":85,"author":{"gitId":"jonahtwl"},"content":"---","lastModifiedDate":"2021-04-07"},{"lineNumber":86,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":87,"author":{"gitId":"jonahtwl"},"content":"### Contributions Beyond Project Team","lastModifiedDate":"2021-04-07"},{"lineNumber":88,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":89,"author":{"gitId":"jonahtwl"},"content":"1. Bug hunting on other team\u0027s applications","lastModifiedDate":"2021-04-07"},{"lineNumber":90,"author":{"gitId":"jonahtwl"},"content":"1. Discussed with other teams on better ways to improve both our applications","lastModifiedDate":"2021-04-07"}],"authorContributionMap":{"jonahtwl":90}},{"path":"docs/team/LeeHanYongAndy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"# Lee Han Yong Andy\u0027s Project Portfolio Page","lastModifiedDate":"2021-04-06"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"---","lastModifiedDate":"2021-04-06"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":5,"author":{"gitId":"LeeHanYongAndy"},"content":"## Overview","lastModifiedDate":"2021-04-06"},{"lineNumber":6,"author":{"gitId":"LeeHanYongAndy"},"content":"Finux is a Command-Line Interface (CLI) application that allows you to record your expenses, savings and loans all ","lastModifiedDate":"2021-04-06"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":"in one consolidated platform. With these information made readily available at your fingertips, it will allow you to ","lastModifiedDate":"2021-04-06"},{"lineNumber":8,"author":{"gitId":"LeeHanYongAndy"},"content":"better adjust your expenditure or work harder towards your savings goal. Finux also includes a way for you to keep ","lastModifiedDate":"2021-04-06"},{"lineNumber":9,"author":{"gitId":"LeeHanYongAndy"},"content":"track of the loans you have made to your friends, or the tabs for the dinners you have paid for first.","lastModifiedDate":"2021-04-06"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":11,"author":{"gitId":"LeeHanYongAndy"},"content":"As the Finux application is inspired entirely by the *Nix operating systems, and if you are familiar with the CLI ","lastModifiedDate":"2021-04-06"},{"lineNumber":12,"author":{"gitId":"LeeHanYongAndy"},"content":"command interface, you will definitely enjoy the benefits of the application. You will also be able to speed up your ","lastModifiedDate":"2021-04-06"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"financial management and planning with the Finux application as compared to the traditional finance management ","lastModifiedDate":"2021-04-06"},{"lineNumber":14,"author":{"gitId":"LeeHanYongAndy"},"content":"applications in the market.","lastModifiedDate":"2021-04-06"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":"---","lastModifiedDate":"2021-04-06"},{"lineNumber":17,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":18,"author":{"gitId":"LeeHanYongAndy"},"content":"## Summary of Contributions","lastModifiedDate":"2021-04-06"},{"lineNumber":19,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"### Code Contribution","lastModifiedDate":"2021-04-06"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"Contributions can be found on [RepoSense](https://nus-cs2113-ay2021s2.github.io/tp-dashboard/?search\u003dleehanyongandy\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByAuthors\u0026breakdown\u003dfalse\u0026since\u003d2021-03-05\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dLeeHanYongAndy\u0026tabRepo\u003dAY2021S2-CS2113T-W09-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003dfunctional-code).","lastModifiedDate":"2021-04-06"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"---","lastModifiedDate":"2021-04-06"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":26,"author":{"gitId":"LeeHanYongAndy"},"content":"### Contribution to Implementation","lastModifiedDate":"2021-04-06"},{"lineNumber":27,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":28,"author":{"gitId":"LeeHanYongAndy"},"content":"#### ParserHandler","lastModifiedDate":"2021-04-06"},{"lineNumber":29,"author":{"gitId":"LeeHanYongAndy"},"content":"During the discussion phase, Mark and I have decided that the ParserHandler logic will contain no form of validation.","lastModifiedDate":"2021-04-06"},{"lineNumber":30,"author":{"gitId":"LeeHanYongAndy"},"content":"The validation will be done when we are creating each command object itself. Following this approach, we reduce the ","lastModifiedDate":"2021-04-06"},{"lineNumber":31,"author":{"gitId":"LeeHanYongAndy"},"content":"coupling arising from validation to only under the command creation period via the constructor. Fore seeing future ","lastModifiedDate":"2021-04-06"},{"lineNumber":32,"author":{"gitId":"LeeHanYongAndy"},"content":"development of Finux, I have decided to follow the pairwise logic of how a command line interface would work. ","lastModifiedDate":"2021-04-06"},{"lineNumber":33,"author":{"gitId":"LeeHanYongAndy"},"content":"The pairwise logic ensure that, every option is followed by an argument with an empty string to indicate no ","lastModifiedDate":"2021-04-06"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"argument provided. This will facilitate the validation process. I have also decided to use a third-party ","lastModifiedDate":"2021-04-06"},{"lineNumber":35,"author":{"gitId":"LeeHanYongAndy"},"content":"API, [Apache Commons Lang 3.11](https://mvnrepository.com/artifact/org.apache.commons/commons-lang3/3.11),","lastModifiedDate":"2021-04-06"},{"lineNumber":36,"author":{"gitId":"LeeHanYongAndy"},"content":"as it was easier to detect a collection of string containing the options.","lastModifiedDate":"2021-04-06"},{"lineNumber":37,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":38,"author":{"gitId":"LeeHanYongAndy"},"content":"#### ViewCommand","lastModifiedDate":"2021-04-06"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"I have also implemented the ViewCommand where it would display each individual category amount. ","lastModifiedDate":"2021-04-06"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"This was implemented via the options available to the user which are `-e`, `-l`, and `-s`. ","lastModifiedDate":"2021-04-06"},{"lineNumber":41,"author":{"gitId":"LeeHanYongAndy"},"content":"The initial thought was to only allow the view of each category but based on the feedback received, I decided to ","lastModifiedDate":"2021-04-06"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"enhance the feature to display all the amount of with each category in a single command, introducing the 4th option `-a`.","lastModifiedDate":"2021-04-06"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"This feature also has a tight bound to the amount field as we decided to show the amount in a fixed 2 decimal place ","lastModifiedDate":"2021-04-06"},{"lineNumber":44,"author":{"gitId":"LeeHanYongAndy"},"content":"display.","lastModifiedDate":"2021-04-06"},{"lineNumber":45,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"#### ValidateAmount","lastModifiedDate":"2021-04-06"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"Working with Mark, I was in charge of the validation of the amount during the construction of the command object since","lastModifiedDate":"2021-04-06"},{"lineNumber":48,"author":{"gitId":"LeeHanYongAndy"},"content":"it was linked to the ViewCommand feature. The idea was to avoid any integer overflow and allow the large figures and","lastModifiedDate":"2021-04-06"},{"lineNumber":49,"author":{"gitId":"LeeHanYongAndy"},"content":"hence BigDecimal was adopted. This feature was implemented to ensure that amount cannot be more than 2 decimal place,","lastModifiedDate":"2021-04-06"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"no negative value and the dollar/cent field must be present.","lastModifiedDate":"2021-04-06"},{"lineNumber":51,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":52,"author":{"gitId":"LeeHanYongAndy"},"content":"#### HelpCommand","lastModifiedDate":"2021-04-06"},{"lineNumber":53,"author":{"gitId":"LeeHanYongAndy"},"content":"Since our product is similar to that of a CLI, I have decided to implement the help feature to display similarly to","lastModifiedDate":"2021-04-06"},{"lineNumber":54,"author":{"gitId":"LeeHanYongAndy"},"content":"the man page of a CLI. The initial thought was to allow the target user to have a sense of CLI environment. However,","lastModifiedDate":"2021-04-06"},{"lineNumber":55,"author":{"gitId":"LeeHanYongAndy"},"content":"after receiving some feedbacks on having aa less detailed help feature, I decided to allow the mixture of both","lastModifiedDate":"2021-04-06"},{"lineNumber":56,"author":{"gitId":"LeeHanYongAndy"},"content":"user-friendly and CLI-based help feature. The more user-friendly approach will display the name, brief description, and","lastModifiedDate":"2021-04-06"},{"lineNumber":57,"author":{"gitId":"LeeHanYongAndy"},"content":"format of the command while the CLI-based will display the name, synopsis, and description of the option and argument.","lastModifiedDate":"2021-04-06"},{"lineNumber":58,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":59,"author":{"gitId":"LeeHanYongAndy"},"content":"---","lastModifiedDate":"2021-04-06"},{"lineNumber":60,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":61,"author":{"gitId":"LeeHanYongAndy"},"content":"### Contributions to UG","lastModifiedDate":"2021-04-06"},{"lineNumber":62,"author":{"gitId":"LeeHanYongAndy"},"content":"I have provided the team with a UG skeleton based on everyone User Guide from previous project. Apart from the skeleton,","lastModifiedDate":"2021-04-06"},{"lineNumber":63,"author":{"gitId":"LeeHanYongAndy"},"content":"I have also documented the section on view feature and help feature.","lastModifiedDate":"2021-04-06"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":65,"author":{"gitId":"LeeHanYongAndy"},"content":"Other contributions to the UG are:","lastModifiedDate":"2021-04-06"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"* Hyperlinking and standardizing the table of contents","lastModifiedDate":"2021-04-06"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"* Formatting for section 2","lastModifiedDate":"2021-04-06"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"* Frequently Asked Questions","lastModifiedDate":"2021-04-06"},{"lineNumber":69,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":70,"author":{"gitId":"LeeHanYongAndy"},"content":"---","lastModifiedDate":"2021-04-06"},{"lineNumber":71,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":72,"author":{"gitId":"LeeHanYongAndy"},"content":"### Contributions to the DG","lastModifiedDate":"2021-04-06"},{"lineNumber":73,"author":{"gitId":"LeeHanYongAndy"},"content":"I have documented the section on ParserHandler Component and ViewCommand Implementation. This includes the UML class, ","lastModifiedDate":"2021-04-06"},{"lineNumber":74,"author":{"gitId":"LeeHanYongAndy"},"content":"object and sequence diagrams.","lastModifiedDate":"2021-04-06"},{"lineNumber":75,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":76,"author":{"gitId":"LeeHanYongAndy"},"content":"Other contributions to the DG are:","lastModifiedDate":"2021-04-06"},{"lineNumber":77,"author":{"gitId":"LeeHanYongAndy"},"content":"* Appendix A consisting of Target User Profile and Value Proposition","lastModifiedDate":"2021-04-06"},{"lineNumber":78,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":79,"author":{"gitId":"LeeHanYongAndy"},"content":"---","lastModifiedDate":"2021-04-06"},{"lineNumber":80,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":81,"author":{"gitId":"LeeHanYongAndy"},"content":"### Contributions to Team-based Tasks","lastModifiedDate":"2021-04-06"},{"lineNumber":82,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":83,"author":{"gitId":"LeeHanYongAndy"},"content":"1. Delegating of UG, DG, JavaDoc","lastModifiedDate":"2021-04-06"},{"lineNumber":84,"author":{"gitId":"LeeHanYongAndy"},"content":"1. Creating of Project Agenda (with Jason)","lastModifiedDate":"2021-04-06"},{"lineNumber":85,"author":{"gitId":"LeeHanYongAndy"},"content":"1. Documenting of Meeting Notes (with Jason)","lastModifiedDate":"2021-04-06"},{"lineNumber":86,"author":{"gitId":"LeeHanYongAndy"},"content":"1. Maintaining document sharing space (with Jason)","lastModifiedDate":"2021-04-06"},{"lineNumber":87,"author":{"gitId":"LeeHanYongAndy"},"content":"1. Updating Project Log (Along with Jason)","lastModifiedDate":"2021-04-06"},{"lineNumber":88,"author":{"gitId":"LeeHanYongAndy"},"content":"1. Setting up project environment on Github \\","lastModifiedDate":"2021-04-06"},{"lineNumber":89,"author":{"gitId":"LeeHanYongAndy"},"content":"   6.1 Creating labels \\","lastModifiedDate":"2021-04-06"},{"lineNumber":90,"author":{"gitId":"LeeHanYongAndy"},"content":"   6.2 Creating milestones \\","lastModifiedDate":"2021-04-06"},{"lineNumber":91,"author":{"gitId":"LeeHanYongAndy"},"content":"   6.3 Creating issue tracker","lastModifiedDate":"2021-04-06"},{"lineNumber":92,"author":{"gitId":"LeeHanYongAndy"},"content":"1. Facilitating of project meeting","lastModifiedDate":"2021-04-06"},{"lineNumber":93,"author":{"gitId":"LeeHanYongAndy"},"content":"1. Vetting of UG","lastModifiedDate":"2021-04-06"},{"lineNumber":94,"author":{"gitId":"LeeHanYongAndy"},"content":"1. Demoing of team\u0027s work flow process","lastModifiedDate":"2021-04-06"},{"lineNumber":95,"author":{"gitId":"LeeHanYongAndy"},"content":"1. Deadline tracking and management","lastModifiedDate":"2021-04-06"},{"lineNumber":96,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":97,"author":{"gitId":"LeeHanYongAndy"},"content":"---","lastModifiedDate":"2021-04-06"},{"lineNumber":98,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":99,"author":{"gitId":"LeeHanYongAndy"},"content":"### Contributions Beyond Project Team","lastModifiedDate":"2021-04-06"},{"lineNumber":100,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":101,"author":{"gitId":"LeeHanYongAndy"},"content":"1. Testing other team\u0027s application - iGraduate, HealthVault","lastModifiedDate":"2021-04-06"},{"lineNumber":102,"author":{"gitId":"LeeHanYongAndy"},"content":"1. Suggesting improvement to other team\u0027s application","lastModifiedDate":"2021-04-06"},{"lineNumber":103,"author":{"gitId":"LeeHanYongAndy"},"content":"1. Providing multiple conceptual ways of handling parsing logic in general","lastModifiedDate":"2021-04-06"}],"authorContributionMap":{"LeeHanYongAndy":103}},{"path":"src/main/java/seedu/duke/Finux.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.command.CreditScoreReturnedLoansMap;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.command.CommandHandler;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.command.ExitCommand;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.exception.FileLoadingException;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.parser.ParserHandler;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":"import static seedu.duke.common.Constant.FINUX_LOGGER;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":"public class Finux {","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":"    private Ui ui;","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"    private Storage storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"    private ParserHandler parserHandler;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":"    private CommandHandler commandHandler;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"gerardtwk"},"content":"    private RecordList recordList;","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"    private CreditScoreReturnedLoansMap creditScoreReturnedLoansMap;","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"gerardtwk"},"content":"     * Main entry-point for Finux application.","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"gerardtwk"},"content":"        new Finux().run();","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"     * Runner for the FINUX Application.","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"jonahtwl"},"content":"    private void run() {","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"        start();","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":"        commandLooper();","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"jonahtwl"},"content":"        end();","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"jonahtwl"},"content":"     * Starts the main application.","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"jonahtwl"},"content":"    private void start() {","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"jonahtwl"},"content":"        try {","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"marklowsk"},"content":"            ui \u003d new Ui();","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"marklowsk"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"LeeHanYongAndy"},"content":"            parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"marklowsk"},"content":"            commandHandler \u003d new CommandHandler();","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"gerardtwk"},"content":"            storage.loadFile();","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"gerardtwk"},"content":"            recordList \u003d new RecordList(storage.getRecordListData());","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"gerardtwk"},"content":"            creditScoreReturnedLoansMap \u003d new CreditScoreReturnedLoansMap(storage.getMapData());","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"jonahtwl"},"content":"            ui.printWelcomeMessage();","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"jonahtwl"},"content":"        } catch (FileLoadingException e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"jonahtwl"},"content":"            ui.printInitError();","lastModifiedDate":"2021-04-06"},{"lineNumber":56,"author":{"gitId":"jonahtwl"},"content":"            FINUX_LOGGER.logWarning(\"Unable to load finux.txt!\");","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"jonahtwl"},"content":"            System.exit(-1);","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"jonahtwl"},"content":"     * Loops the application until an EXIT command is parsed.","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"jonahtwl"},"content":"    private void commandLooper() {","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"marklowsk"},"content":"        while (!commandHandler.isExit()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"marklowsk"},"content":"            String rawInput \u003d ui.getUserInput();","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"            ArrayList\u003cString\u003e parsedStringList \u003d parserHandler.getParseInput(rawInput);","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"            assert parsedStringList.size() !\u003d 0 : \"Empty Parser Error\";","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"gerardtwk"},"content":"            Command command \u003d commandHandler.parseCommand(parsedStringList, recordList);","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"marklowsk"},"content":"            if (command \u003d\u003d null) {","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"marklowsk"},"content":"                continue;","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"gerardtwk"},"content":"            command.execute(recordList, ui, storage, creditScoreReturnedLoansMap);","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":75,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":77,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":78,"author":{"gitId":"jonahtwl"},"content":"     * Exits the application.","lastModifiedDate":"2021-03-26"},{"lineNumber":79,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":80,"author":{"gitId":"jonahtwl"},"content":"    private void end() {","lastModifiedDate":"2021-03-26"},{"lineNumber":81,"author":{"gitId":"jonahtwl"},"content":"        ui.printGoodByeMessage();","lastModifiedDate":"2021-03-26"},{"lineNumber":82,"author":{"gitId":"jonahtwl"},"content":"        System.exit(0);","lastModifiedDate":"2021-03-26"},{"lineNumber":83,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jonahtwl":52,"LeeHanYongAndy":4,"marklowsk":8,"gerardtwk":13,"-":7}},{"path":"src/main/java/seedu/duke/command/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.common.RecordType;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"LeeHanYongAndy"},"content":"import seedu.duke.exception.CustomException;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.Expense;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.record.Loan;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.record.Saving;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"import static seedu.duke.command.Utils.getOptionValue;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"import static seedu.duke.command.Utils.hasOption;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateOptions;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_AMOUNT;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"import static seedu.duke.common.Constant.OPTION_DATE;","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_EXPENSE;","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_LOAN;","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_PERSON;","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_SAVING;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.common.Constant.FILE_DELIMITER_CHAR;","lastModifiedDate":"2021-04-06"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"import static seedu.duke.common.Validators.validateAmount;","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"import static seedu.duke.common.Validators.validateDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"LeeHanYongAndy"},"content":" * Handles all operations related to the add command.","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"    protected static final String COMMAND_ADD \u003d \"add\";","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"marklowsk"},"content":"    private static final String[] VALID_OPTIONS \u003d {","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"marklowsk"},"content":"        OPTION_EXPENSE, OPTION_LOAN, OPTION_SAVING, OPTION_AMOUNT, OPTION_DATE, OPTION_PERSON","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"    };","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"    private static final String[] CONFLICT_OPTIONS \u003d {OPTION_EXPENSE, OPTION_LOAN, OPTION_SAVING};","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"    private final BigDecimal amount;","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"marklowsk"},"content":"    private final LocalDate issueDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"jonahtwl"},"content":"    private final String description;","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"gerardtwk"},"content":"    private final String borrowerName;","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"jonahtwl"},"content":"    private RecordType recordType;","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Constructor to validate the format for add command.","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":49,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"jonahtwl"},"content":"    public AddCommand(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"marklowsk"},"content":"        validateOptions(arguments, COMMAND_ADD, VALID_OPTIONS, CONFLICT_OPTIONS);","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"LeeHanYongAndy"},"content":"        description \u003d getDescription(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"LeeHanYongAndy"},"content":"        amount \u003d getAmount(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"LeeHanYongAndy"},"content":"        issueDate \u003d getDate(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"gerardtwk"},"content":"        borrowerName \u003d getPerson(arguments);","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"marklowsk"},"content":"     * Gets the description field.","lastModifiedDate":"2021-03-19"},{"lineNumber":63,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a String containing the description of the record.","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"    private String getDescription(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"marklowsk"},"content":"        return getOptionValue(arguments, COMMAND_ADD, checkRecordType(arguments));","lastModifiedDate":"2021-03-19"},{"lineNumber":70,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"marklowsk"},"content":"     * Gets the amount field.","lastModifiedDate":"2021-03-19"},{"lineNumber":74,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":75,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a BigDecimal object containing the amount of the record.","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"LeeHanYongAndy"},"content":"    private BigDecimal getAmount(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"LeeHanYongAndy"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"LeeHanYongAndy"},"content":"            return validateAmount(getOptionValue(arguments, COMMAND_ADD, OPTION_AMOUNT));","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"LeeHanYongAndy"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"LeeHanYongAndy"},"content":"            throw new CommandException(\"amount contains a non numeric value.\", COMMAND_ADD);","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"LeeHanYongAndy"},"content":"        } catch (CustomException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"LeeHanYongAndy"},"content":"            throw new CommandException(e.getMessage(), COMMAND_ADD);","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"marklowsk"},"content":"     * Gets the date field.","lastModifiedDate":"2021-03-19"},{"lineNumber":91,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":92,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a LocalDate object containing the date of the record.","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"LeeHanYongAndy"},"content":"    private LocalDate getDate(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"LeeHanYongAndy"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"jonahtwl"},"content":"            LocalDate issueDate \u003d validateDate(getOptionValue(arguments, COMMAND_ADD, OPTION_DATE));","lastModifiedDate":"2021-04-07"},{"lineNumber":99,"author":{"gitId":"jonahtwl"},"content":"            if (issueDate.compareTo(LocalDate.now()) \u003e 0) {","lastModifiedDate":"2021-04-07"},{"lineNumber":100,"author":{"gitId":"jonahtwl"},"content":"                throw new CommandException(\"Issue date cannot be in the future!\", COMMAND_ADD);","lastModifiedDate":"2021-04-07"},{"lineNumber":101,"author":{"gitId":"jonahtwl"},"content":"            }","lastModifiedDate":"2021-04-07"},{"lineNumber":102,"author":{"gitId":"jonahtwl"},"content":"            return issueDate;","lastModifiedDate":"2021-04-07"},{"lineNumber":103,"author":{"gitId":"LeeHanYongAndy"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"LeeHanYongAndy"},"content":"            throw new CommandException(e.getMessage(), COMMAND_ADD);","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"marklowsk"},"content":"     * Gets the person field.","lastModifiedDate":"2021-03-19"},{"lineNumber":110,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":111,"author":{"gitId":"marklowsk"},"content":"     * @param arguments parsed input containing the options and arguments.","lastModifiedDate":"2021-03-19"},{"lineNumber":112,"author":{"gitId":"marklowsk"},"content":"     * @return the option value of person, or {@code null} if {@code recordType} is not a loan.","lastModifiedDate":"2021-03-19"},{"lineNumber":113,"author":{"gitId":"marklowsk"},"content":"     * @throws CommandException if {@code recordType} is not a loan but arguments contains the person option,","lastModifiedDate":"2021-03-19"},{"lineNumber":114,"author":{"gitId":"marklowsk"},"content":"     *                          or if the option value of person is empty.","lastModifiedDate":"2021-03-19"},{"lineNumber":115,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":116,"author":{"gitId":"marklowsk"},"content":"    private String getPerson(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-19"},{"lineNumber":117,"author":{"gitId":"marklowsk"},"content":"        if (recordType \u003d\u003d RecordType.LOAN) {","lastModifiedDate":"2021-03-19"},{"lineNumber":118,"author":{"gitId":"gerardtwk"},"content":"            String borrowerName \u003d getOptionValue(arguments, COMMAND_ADD, OPTION_PERSON);","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"gerardtwk"},"content":"            if (borrowerName.contains(FILE_DELIMITER_CHAR)) {","lastModifiedDate":"2021-04-06"},{"lineNumber":120,"author":{"gitId":"gerardtwk"},"content":"                throw new CommandException(\"Borrower name cannot contain \u0027\" + FILE_DELIMITER_CHAR + \"\u0027 as input.\",","lastModifiedDate":"2021-04-06"},{"lineNumber":121,"author":{"gitId":"gerardtwk"},"content":"                        COMMAND_ADD);","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"gerardtwk"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"gerardtwk"},"content":"            return borrowerName;","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"marklowsk"},"content":"        } else if (hasOption(arguments, OPTION_PERSON)) {","lastModifiedDate":"2021-03-19"},{"lineNumber":125,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(\"option -p not valid for this record type.\", COMMAND_ADD);","lastModifiedDate":"2021-03-19"},{"lineNumber":126,"author":{"gitId":"marklowsk"},"content":"        } else {","lastModifiedDate":"2021-03-19"},{"lineNumber":127,"author":{"gitId":"marklowsk"},"content":"            return null;","lastModifiedDate":"2021-03-19"},{"lineNumber":128,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":129,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":130,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":131,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":132,"author":{"gitId":"marklowsk"},"content":"     * Checks if the input contains the correct record type and options.","lastModifiedDate":"2021-03-19"},{"lineNumber":133,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":134,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing the options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"LeeHanYongAndy"},"content":"    private String checkRecordType(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"jonahtwl"},"content":"        if (hasOption(arguments, OPTION_EXPENSE)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":139,"author":{"gitId":"jonahtwl"},"content":"            recordType \u003d RecordType.EXPENSE;","lastModifiedDate":"2021-03-09"},{"lineNumber":140,"author":{"gitId":"LeeHanYongAndy"},"content":"            return OPTION_EXPENSE;","lastModifiedDate":"2021-03-14"},{"lineNumber":141,"author":{"gitId":"jonahtwl"},"content":"        } else if (hasOption(arguments, OPTION_LOAN)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":142,"author":{"gitId":"jonahtwl"},"content":"            recordType \u003d RecordType.LOAN;","lastModifiedDate":"2021-03-09"},{"lineNumber":143,"author":{"gitId":"LeeHanYongAndy"},"content":"            return OPTION_LOAN;","lastModifiedDate":"2021-03-14"},{"lineNumber":144,"author":{"gitId":"marklowsk"},"content":"        } else if (hasOption(arguments, OPTION_SAVING)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":145,"author":{"gitId":"jonahtwl"},"content":"            recordType \u003d RecordType.SAVING;","lastModifiedDate":"2021-03-09"},{"lineNumber":146,"author":{"gitId":"LeeHanYongAndy"},"content":"            return OPTION_SAVING;","lastModifiedDate":"2021-03-14"},{"lineNumber":147,"author":{"gitId":"jonahtwl"},"content":"        } else {","lastModifiedDate":"2021-03-09"},{"lineNumber":148,"author":{"gitId":"jonahtwl"},"content":"            throw new CommandException(\"missing option: [-e | -l | -s]\", COMMAND_ADD);","lastModifiedDate":"2021-03-09"},{"lineNumber":149,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":150,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":151,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":152,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Executes the add function.","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"LeeHanYongAndy"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param ui      is the Ui object that interacts with the user.","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param storage is the Storage object that reads and writes to the save file.","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"jonahtwl"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":160,"author":{"gitId":"gerardtwk"},"content":"    public void execute(RecordList recordList, Ui ui, Storage storage, CreditScoreReturnedLoansMap","lastModifiedDate":"2021-03-30"},{"lineNumber":161,"author":{"gitId":"gerardtwk"},"content":"            creditScoreReturnedLoansMap) {","lastModifiedDate":"2021-03-30"},{"lineNumber":162,"author":{"gitId":"jonahtwl"},"content":"        switch (recordType) {","lastModifiedDate":"2021-03-09"},{"lineNumber":163,"author":{"gitId":"jonahtwl"},"content":"        case EXPENSE:","lastModifiedDate":"2021-03-09"},{"lineNumber":164,"author":{"gitId":"gerardtwk"},"content":"            Expense expenseObj \u003d new Expense(amount, issueDate, description);","lastModifiedDate":"2021-03-11"},{"lineNumber":165,"author":{"gitId":"LeeHanYongAndy"},"content":"            recordList.addRecord(expenseObj);","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"gerardtwk"},"content":"            storage.saveData(recordList, creditScoreReturnedLoansMap);","lastModifiedDate":"2021-03-30"},{"lineNumber":167,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printSuccessfulAdd(expenseObj, recordList.getRecordCount());","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"jonahtwl"},"content":"            break;","lastModifiedDate":"2021-03-09"},{"lineNumber":169,"author":{"gitId":"jonahtwl"},"content":"        case LOAN:","lastModifiedDate":"2021-03-09"},{"lineNumber":170,"author":{"gitId":"gerardtwk"},"content":"            Loan loanObj \u003d new Loan(amount, issueDate, description, borrowerName);","lastModifiedDate":"2021-03-21"},{"lineNumber":171,"author":{"gitId":"LeeHanYongAndy"},"content":"            recordList.addRecord(loanObj);","lastModifiedDate":"2021-03-17"},{"lineNumber":172,"author":{"gitId":"gerardtwk"},"content":"            storage.saveData(recordList, creditScoreReturnedLoansMap);","lastModifiedDate":"2021-03-30"},{"lineNumber":173,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printSuccessfulAdd(loanObj, recordList.getRecordCount());","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"jonahtwl"},"content":"            break;","lastModifiedDate":"2021-03-09"},{"lineNumber":175,"author":{"gitId":"jonahtwl"},"content":"        case SAVING:","lastModifiedDate":"2021-03-09"},{"lineNumber":176,"author":{"gitId":"marklowsk"},"content":"            // Fallthrough","lastModifiedDate":"2021-03-11"},{"lineNumber":177,"author":{"gitId":"jonahtwl"},"content":"        default:","lastModifiedDate":"2021-03-09"},{"lineNumber":178,"author":{"gitId":"LeeHanYongAndy"},"content":"            Saving savingObj \u003d new Saving(amount, issueDate, description);","lastModifiedDate":"2021-03-11"},{"lineNumber":179,"author":{"gitId":"LeeHanYongAndy"},"content":"            recordList.addRecord(savingObj);","lastModifiedDate":"2021-03-17"},{"lineNumber":180,"author":{"gitId":"gerardtwk"},"content":"            storage.saveData(recordList, creditScoreReturnedLoansMap);","lastModifiedDate":"2021-03-30"},{"lineNumber":181,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printSuccessfulAdd(savingObj, recordList.getRecordCount());","lastModifiedDate":"2021-03-17"},{"lineNumber":182,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":183,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":184,"author":{"gitId":"jonahtwl"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"jonahtwl":44,"marklowsk":48,"LeeHanYongAndy":75,"gerardtwk":17}},{"path":"src/main/java/seedu/duke/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"public abstract class Command {","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"    public abstract void execute(RecordList recordList, Ui ui, Storage storage, CreditScoreReturnedLoansMap","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"            creditScoreReturnedLoansMap);","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"jonahtwl":8,"gerardtwk":2}},{"path":"src/main/java/seedu/duke/command/CommandHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.ListCommand.COMMAND_LIST;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.AddCommand.COMMAND_ADD;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.command.ReturnCommand.COMMAND_RETURN;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.RemoveCommand.COMMAND_REMOVE;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.ViewCommand.COMMAND_VIEW;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.HelpCommand.COMMAND_HELP;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.ExitCommand.COMMAND_EXIT;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"import static seedu.duke.command.CreditScoreCommand.COMMAND_CREDIT_SCORE;","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.common.Constant.FINUX_LOGGER;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"LeeHanYongAndy"},"content":"public class CommandHandler {","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_INVALID_COMMAND \u003d \"Invalid command: \";","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"    private static final String LOGGER_OKAY_MESSAGE \u003d \"command object successfully created.\";","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"    private static final int INDEX_OF_COMMAND \u003d 0;","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"    private boolean isExit;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"    private Command createCommand(ArrayList\u003cString\u003e parsedArguments, RecordList recordList)","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"            throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":"        String commandWord \u003d parsedArguments.get(INDEX_OF_COMMAND);","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"            return new ListCommand(parsedArguments);","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":"        case COMMAND_ADD:","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"            return new AddCommand(parsedArguments);","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"gerardtwk"},"content":"        case COMMAND_RETURN:","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"            return new ReturnCommand(parsedArguments, recordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"        case COMMAND_REMOVE:","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"LeeHanYongAndy"},"content":"            return new RemoveCommand(parsedArguments, recordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"marklowsk"},"content":"        case COMMAND_VIEW:","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"            return new ViewCommand(parsedArguments);","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"        case COMMAND_HELP:","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"marklowsk"},"content":"            return new HelpCommand(parsedArguments);","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"marklowsk"},"content":"        case COMMAND_EXIT:","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"marklowsk"},"content":"            setExit(true);","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"marklowsk"},"content":"            return new ExitCommand(parsedArguments);","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"tzexern"},"content":"        case COMMAND_CREDIT_SCORE:","lastModifiedDate":"2021-03-19"},{"lineNumber":45,"author":{"gitId":"tzexern"},"content":"            return new CreditScoreCommand(parsedArguments);","lastModifiedDate":"2021-03-19"},{"lineNumber":46,"author":{"gitId":"marklowsk"},"content":"        case \"\":","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"marklowsk"},"content":"            return null;","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"jonahtwl"},"content":"        default:","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(ERROR_INVALID_COMMAND + commandWord);","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"marklowsk"},"content":"    public Command parseCommand(ArrayList\u003cString\u003e parsedArguments, RecordList recordList) {","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"jonahtwl"},"content":"        try {","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"marklowsk"},"content":"            Command command \u003d createCommand(parsedArguments, recordList);","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"gerardtwk"},"content":"            FINUX_LOGGER.logInfo(LOGGER_OKAY_MESSAGE);","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"gerardtwk"},"content":"            return command;","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"jonahtwl"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"jonahtwl"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"gerardtwk"},"content":"            FINUX_LOGGER.logWarning(e.getMessage());","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"jonahtwl"},"content":"            return null;","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"marklowsk"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"marklowsk"},"content":"        return isExit;","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"marklowsk"},"content":"    public void setExit(boolean isExit) {","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"marklowsk"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"tzexern":4,"jonahtwl":16,"LeeHanYongAndy":6,"marklowsk":40,"gerardtwk":6}},{"path":"src/main/java/seedu/duke/command/CreditScoreCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.ArgumentType;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Loan;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Record;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"tzexern"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.getValue;","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateArguments;","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.command.Utils.getDaysDifference;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.command.Utils.computeCreditScore;","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"/**","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":" * Handles all operations related to the credit score command.","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":" */","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"public class CreditScoreCommand extends Command {","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"    private static final ArgumentType[] ARGUMENT_TYPE_ORDER \u003d {","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.COMMAND,","lastModifiedDate":"2021-03-19"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.VALUE","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"    };","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"    protected static final String COMMAND_CREDIT_SCORE \u003d \"creditscore\";","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"gerardtwk"},"content":"    private final String borrowerName;","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"     * Constructor to validate the format for credit score command.","lastModifiedDate":"2021-03-19"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":"     * @param arguments parsed input containing arguments.","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"tzexern"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-19"},{"lineNumber":34,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"    public CreditScoreCommand(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"gerardtwk"},"content":"        borrowerName \u003d getValue(arguments, COMMAND_CREDIT_SCORE);","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"marklowsk"},"content":"        validateArguments(arguments, ARGUMENT_TYPE_ORDER, COMMAND_CREDIT_SCORE);","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"tzexern"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"gerardtwk"},"content":"    public void execute(RecordList recordList, Ui ui, Storage storage, CreditScoreReturnedLoansMap","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"gerardtwk"},"content":"            creditScoreReturnedLoansMap) {","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"gerardtwk"},"content":"        int creditScore \u003d creditScoreReturnedLoansMap.getCreditScoreOf(borrowerName.toLowerCase());","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"gerardtwk"},"content":"        for (int i \u003d 0; i \u003c recordList.getRecordCount(); i++) {","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"gerardtwk"},"content":"            Record currentRecord \u003d recordList.getRecordAt(i);","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"gerardtwk"},"content":"            if (currentRecord instanceof Loan) {","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"gerardtwk"},"content":"                Loan currentLoan \u003d (Loan) currentRecord;","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"gerardtwk"},"content":"                boolean isLoanedToCurrentBorrower \u003d currentLoan.getBorrowerName().equalsIgnoreCase(borrowerName);","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"gerardtwk"},"content":"                boolean isNotReturned \u003d !currentLoan.isReturn();","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"gerardtwk"},"content":"                boolean isLoanedToCurrentBorrowerAndNotReturned \u003d isLoanedToCurrentBorrower \u0026\u0026 isNotReturned;","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"gerardtwk"},"content":"                if (isLoanedToCurrentBorrowerAndNotReturned) {","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"gerardtwk"},"content":"                    long daysDifference \u003d getDaysDifference(currentLoan.getIssueDate(), currentLoan.getReturnDate());","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"gerardtwk"},"content":"                    creditScore \u003d computeCreditScore(daysDifference, creditScore, currentLoan.isReturn());","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"gerardtwk"},"content":"                }","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"gerardtwk"},"content":"            }","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":59,"author":{"gitId":"gerardtwk"},"content":"        ui.printMessage(\"Credit score for \" + borrowerName + \" is: \" + creditScore);","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"tzexern"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"tzexern":27,"marklowsk":10,"gerardtwk":24}},{"path":"src/main/java/seedu/duke/command/CreditScoreReturnedLoansMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.common.Constant.MAX_CREDIT_SCORE;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"public class CreditScoreReturnedLoansMap {","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"    private HashMap\u003cString,Integer\u003e creditScoreReturnedLoansMap;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"    public CreditScoreReturnedLoansMap(HashMap\u003cString, Integer\u003e mapData) {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"        this.creditScoreReturnedLoansMap \u003d mapData;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"    public int getCreditScoreOf(String borrowerName) {","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"        if (creditScoreReturnedLoansMap.containsKey(borrowerName)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":"            return creditScoreReturnedLoansMap.get(borrowerName);","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"gerardtwk"},"content":"        return (int) MAX_CREDIT_SCORE;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"gerardtwk"},"content":"    public void insertCreditScoreOf(String borrowerName, int creditScore) {","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"        creditScoreReturnedLoansMap.put(borrowerName, creditScore);","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"gerardtwk"},"content":"    public Set\u003cString\u003e getBorrowersNames() {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"gerardtwk"},"content":"        return creditScoreReturnedLoansMap.keySet();","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"gerardtwk"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"gerardtwk":29}},{"path":"src/main/java/seedu/duke/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.ArgumentType;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateArguments;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"LeeHanYongAndy"},"content":" * Handles all operations related to the exit command.","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"    private static final ArgumentType[] ARGUMENT_TYPE_ORDER \u003d { ArgumentType.COMMAND };","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"    protected static final String COMMAND_EXIT \u003d \"exit\";","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"    private static final String MESSAGE_EXITING \u003d \"You are exiting FINUX now...\";","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Constructor to validate the format for exit command.","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"    public ExitCommand(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"        validateArguments(arguments, ARGUMENT_TYPE_ORDER, COMMAND_EXIT);","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"     * Executes the exit function.","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param ui      is the Ui object that interacts with the user.","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param storage is the Storage object that reads and writes to the save file.","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"gerardtwk"},"content":"    public void execute(RecordList recordList, Ui ui, Storage storage, CreditScoreReturnedLoansMap","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"gerardtwk"},"content":"            creditScoreReturnedLoansMap) {","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(MESSAGE_EXITING);","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"jonahtwl"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"jonahtwl":17,"marklowsk":12,"LeeHanYongAndy":11,"gerardtwk":2}},{"path":"src/main/java/seedu/duke/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.ArgumentType;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":"import seedu.duke.ui.HelpPage;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateArguments;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"import static seedu.duke.command.Utils.validateHelpType;","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":" * Handles all operations related to the help command.","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final ArgumentType[] ARGUMENT_TYPE_ORDER \u003d {","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArgumentType.COMMAND,","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArgumentType.VALUE","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"    };","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"    protected static final String COMMAND_HELP \u003d \"help\";","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":"    private final String helpType;","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Constructor to validate the format for help command.","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"    public HelpCommand(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":"        validateArguments(arguments, ARGUMENT_TYPE_ORDER, COMMAND_HELP);","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"        helpType \u003d validateHelpType(arguments, COMMAND_HELP);","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Executes the help function.","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param ui      is the Ui object that interacts with the user.","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param storage is the Storage object that reads and writes to the save file.","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"marklowsk"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"gerardtwk"},"content":"    public void execute(RecordList recordList, Ui ui, Storage storage, CreditScoreReturnedLoansMap","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"gerardtwk"},"content":"            creditScoreReturnedLoansMap) {","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"        HelpPage.printHelp(helpType);","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"jonahtwl":1,"marklowsk":21,"LeeHanYongAndy":25,"gerardtwk":2}},{"path":"src/main/java/seedu/duke/command/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.ArgumentType;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.RecordType;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.hasOption;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateArguments;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateOptions;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_EXPENSE;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_LOAN;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_SAVING;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"import static seedu.duke.common.Constant.OPTION_ALL;","lastModifiedDate":"2021-04-03"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":" * Handles all operations related to the list command.","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":"    private static final String[] VALID_OPTIONS \u003d {OPTION_EXPENSE, OPTION_LOAN, OPTION_SAVING, OPTION_ALL};","lastModifiedDate":"2021-04-03"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"    private static final ArgumentType[] ARGUMENT_TYPE_ORDER \u003d {","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.COMMAND,","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.OPTION,","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.EMPTY_VALUE","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"    };","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"    protected static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"    private RecordType recordType;","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Constructor to validate the format for list command.","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"    public ListCommand(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"marklowsk"},"content":"        validateOptions(arguments, COMMAND_LIST, VALID_OPTIONS, VALID_OPTIONS);","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"LeeHanYongAndy"},"content":"        checkRecordType(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"        validateArguments(arguments, ARGUMENT_TYPE_ORDER, COMMAND_LIST);","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Check if the input contains the correct record type and options.","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing the options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"    private void checkRecordType(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"marklowsk"},"content":"        if (hasOption(arguments, OPTION_EXPENSE)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"marklowsk"},"content":"            recordType \u003d RecordType.EXPENSE;","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"marklowsk"},"content":"        } else if (hasOption(arguments, OPTION_LOAN)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"marklowsk"},"content":"            recordType \u003d RecordType.LOAN;","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"marklowsk"},"content":"        } else if (hasOption(arguments, OPTION_SAVING)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"marklowsk"},"content":"            recordType \u003d RecordType.SAVING;","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"tzexern"},"content":"        } else if (hasOption(arguments, OPTION_ALL)) {","lastModifiedDate":"2021-04-03"},{"lineNumber":58,"author":{"gitId":"tzexern"},"content":"            recordType \u003d RecordType.ALL;","lastModifiedDate":"2021-04-03"},{"lineNumber":59,"author":{"gitId":"marklowsk"},"content":"        } else {","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"tzexern"},"content":"            throw new CommandException(\"missing option: [-e | -l | -s | -a]\", COMMAND_LIST);","lastModifiedDate":"2021-04-03"},{"lineNumber":61,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Executes the list function.","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param ui      is the Ui object that interacts with the user.","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param storage is the Storage object that reads and writes to the save file.","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"marklowsk"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"gerardtwk"},"content":"    public void execute(RecordList recordList, Ui ui, Storage storage, CreditScoreReturnedLoansMap","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"gerardtwk"},"content":"            creditScoreReturnedLoansMap) {","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"gerardtwk"},"content":"        assert recordList !\u003d null : \"recordList should not be null\";","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"gerardtwk"},"content":"        assert ui !\u003d null : \"ui should not be null\";","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"gerardtwk"},"content":"        assert storage !\u003d null : \"storage should not be null\";","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"marklowsk"},"content":"        switch (recordType) {","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"marklowsk"},"content":"        case EXPENSE:","lastModifiedDate":"2021-03-09"},{"lineNumber":80,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printExpenses(recordList);","lastModifiedDate":"2021-03-11"},{"lineNumber":81,"author":{"gitId":"marklowsk"},"content":"            break;","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"marklowsk"},"content":"        case LOAN:","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printLoans(recordList);","lastModifiedDate":"2021-03-11"},{"lineNumber":84,"author":{"gitId":"marklowsk"},"content":"            break;","lastModifiedDate":"2021-03-09"},{"lineNumber":85,"author":{"gitId":"marklowsk"},"content":"        case SAVING:","lastModifiedDate":"2021-03-09"},{"lineNumber":86,"author":{"gitId":"tzexern"},"content":"            ui.printSavings(recordList);","lastModifiedDate":"2021-04-03"},{"lineNumber":87,"author":{"gitId":"tzexern"},"content":"            break;","lastModifiedDate":"2021-04-03"},{"lineNumber":88,"author":{"gitId":"tzexern"},"content":"        case ALL:","lastModifiedDate":"2021-04-03"},{"lineNumber":89,"author":{"gitId":"marklowsk"},"content":"            // Fallthrough","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"marklowsk"},"content":"        default:","lastModifiedDate":"2021-03-09"},{"lineNumber":91,"author":{"gitId":"tzexern"},"content":"            ui.printAllRecords(recordList);","lastModifiedDate":"2021-04-03"},{"lineNumber":92,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":93,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":94,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"tzexern":9,"jonahtwl":1,"marklowsk":52,"LeeHanYongAndy":26,"gerardtwk":6}},{"path":"src/main/java/seedu/duke/command/RemoveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.ArgumentType;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":"import seedu.duke.record.Record;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.getOptionValue;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.hasOption;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateArguments;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateOptions;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_INDEX;","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"import static seedu.duke.common.Validators.validateIndex;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":" * Handles all operations related to the remove command.","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"public class RemoveCommand extends Command {","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"    private static final String[] VALID_OPTIONS \u003d {OPTION_INDEX};","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"    private static final ArgumentType[] ARGUMENT_TYPE_ORDER \u003d {","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.COMMAND,","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.OPTION,","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.VALUE","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"    };","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"    protected static final String COMMAND_REMOVE \u003d \"remove\";","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"    private String recordNumberStr;","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":"    private int recordNumberInt;","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Constructor to validate the format for remove command.","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"    public RemoveCommand(ArrayList\u003cString\u003e arguments, RecordList recordList) throws CommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"marklowsk"},"content":"        validateOptions(arguments, COMMAND_REMOVE, VALID_OPTIONS, VALID_OPTIONS);","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"        recordNumberStr \u003d getIndexInString(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"        recordNumberInt \u003d getIndexInInteger(arguments, recordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"marklowsk"},"content":"        validateArguments(arguments, ARGUMENT_TYPE_ORDER, COMMAND_REMOVE);","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Get the index field in String.","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a String containing the index of the record.","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"LeeHanYongAndy"},"content":"    private String getIndexInString(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"tzexern"},"content":"        if (!hasOption(arguments, OPTION_INDEX)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(\"missing option: -i\", COMMAND_REMOVE);","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"tzexern"},"content":"        return getOptionValue(arguments, COMMAND_REMOVE, OPTION_INDEX);","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Get the index field in Integer.","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a Integer containing the index of the record.","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"    private int getIndexInInteger(ArrayList\u003cString\u003e arguments, RecordList recordList) throws CommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"tzexern"},"content":"        try {","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"LeeHanYongAndy"},"content":"            return validateIndex(getOptionValue(arguments, COMMAND_REMOVE, OPTION_INDEX), recordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"tzexern"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"tzexern"},"content":"            throw new CommandException(\"Index \\\"\" + recordNumberStr + \"\\\" is not an integer!\", COMMAND_REMOVE);","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"tzexern"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"tzexern"},"content":"            throw new CommandException(\"Index \\\"\" + recordNumberStr + \"\\\" is out of bounds!\", COMMAND_REMOVE);","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"tzexern"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":79,"author":{"gitId":"tzexern"},"content":"     * Executes the delete function.","lastModifiedDate":"2021-03-11"},{"lineNumber":80,"author":{"gitId":"tzexern"},"content":"     * Prints a message containing the record that will be removed.","lastModifiedDate":"2021-03-11"},{"lineNumber":81,"author":{"gitId":"tzexern"},"content":"     * Removes the record at the specified index.","lastModifiedDate":"2021-03-11"},{"lineNumber":82,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":83,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"tzexern"},"content":"     * @param ui      is the Ui object that interacts with the user.","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"tzexern"},"content":"     * @param storage is the Storage object that reads and writes to the save file.","lastModifiedDate":"2021-03-11"},{"lineNumber":86,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":87,"author":{"gitId":"marklowsk"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":88,"author":{"gitId":"gerardtwk"},"content":"    public void execute(RecordList recordList, Ui ui, Storage storage, CreditScoreReturnedLoansMap","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"gerardtwk"},"content":"            creditScoreReturnedLoansMap) {","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"LeeHanYongAndy"},"content":"        Record currentRecord \u003d recordList.getRecordAt(recordNumberInt);","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"tzexern"},"content":"        ui.printMessage(\"This record will be removed: \" + currentRecord);","lastModifiedDate":"2021-03-12"},{"lineNumber":92,"author":{"gitId":"LeeHanYongAndy"},"content":"        recordList.deleteRecordAt(recordNumberInt);","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"gerardtwk"},"content":"        storage.saveData(recordList, creditScoreReturnedLoansMap);","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":95,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"tzexern":23,"jonahtwl":1,"marklowsk":35,"LeeHanYongAndy":33,"gerardtwk":3}},{"path":"src/main/java/seedu/duke/command/ReturnCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Loan;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Record;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.command.Utils.getOptionValue;","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.command.Utils.hasOption;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateOptions;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.common.Constant.OPTION_DATE;","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.common.Constant.OPTION_INDEX;","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.common.Validators.validateDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"import static seedu.duke.common.Validators.validateIndex;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.command.Utils.getDaysDifference;","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.command.Utils.computeCreditScore;","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":" * Handles all operations related to the return command.","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"gerardtwk"},"content":"public class ReturnCommand extends Command {","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"gerardtwk"},"content":"    private static final String[] VALID_OPTIONS \u003d {OPTION_INDEX, OPTION_DATE};","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"gerardtwk"},"content":"    private static final String[] CONFLICT_OPTIONS \u003d {};","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"gerardtwk"},"content":"    protected static final String COMMAND_RETURN \u003d \"return\";","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"gerardtwk"},"content":"    private final String recordNumberStr;","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"gerardtwk"},"content":"    private final int recordNumberInt;","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"gerardtwk"},"content":"    private final LocalDate returnDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Constructor to validate the format for return command.","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"gerardtwk"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments  parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"    public ReturnCommand(ArrayList\u003cString\u003e arguments, RecordList recordList) throws CommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"gerardtwk"},"content":"        validateOptions(arguments, COMMAND_RETURN, VALID_OPTIONS, CONFLICT_OPTIONS);","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"LeeHanYongAndy"},"content":"        recordNumberStr \u003d getIndexInString(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"LeeHanYongAndy"},"content":"        recordNumberInt \u003d getIndexInInteger(arguments, recordList);","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"gerardtwk"},"content":"        returnDate \u003d getDate(arguments, recordList.getRecordAt(recordNumberInt));","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Get the index field in String.","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"gerardtwk"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a String containing the index of the record.","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"LeeHanYongAndy"},"content":"    private String getIndexInString(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"tzexern"},"content":"        if (!hasOption(arguments, OPTION_INDEX)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"gerardtwk"},"content":"            throw new CommandException(\"missing option: -i\", COMMAND_RETURN);","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"tzexern"},"content":"        return getOptionValue(arguments, COMMAND_RETURN, OPTION_INDEX);","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Get the index field in Integer.","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"gerardtwk"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments  parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a Integer containing the index of the record.","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"LeeHanYongAndy"},"content":"    private int getIndexInInteger(ArrayList\u003cString\u003e arguments, RecordList recordList) throws CommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"tzexern"},"content":"        try {","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"gerardtwk"},"content":"            int index \u003d validateIndex(getOptionValue(arguments, COMMAND_RETURN, OPTION_INDEX), recordList);","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"gerardtwk"},"content":"            Record currentRecord \u003d recordList.getRecordAt(index);","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"gerardtwk"},"content":"            if (!(currentRecord instanceof Loan)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"gerardtwk"},"content":"                throw new CommandException(\"Index \\\"\" + recordNumberStr + \"\\\" is not an index of Loan!\",","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"gerardtwk"},"content":"                        COMMAND_RETURN);","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"gerardtwk"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"gerardtwk"},"content":"            return index;","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"tzexern"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"tzexern"},"content":"            throw new CommandException(\"Index \\\"\" + recordNumberStr + \"\\\" is not an integer!\", COMMAND_RETURN);","lastModifiedDate":"2021-03-12"},{"lineNumber":82,"author":{"gitId":"tzexern"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"tzexern"},"content":"            throw new CommandException(\"Index \\\"\" + recordNumberStr + \"\\\" is out of bounds!\", COMMAND_RETURN);","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"tzexern"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":85,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":86,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":87,"author":{"gitId":"gerardtwk"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"gerardtwk"},"content":"     * Gets the date field.","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"gerardtwk"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"gerardtwk"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"gerardtwk"},"content":"     * @return a LocalDate object containing the date of the record.","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"gerardtwk"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"gerardtwk"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"gerardtwk"},"content":"    private LocalDate getDate(ArrayList\u003cString\u003e arguments, Record currentRecord) throws CommandException {","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"gerardtwk"},"content":"        try {","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"gerardtwk"},"content":"            LocalDate returnDate \u003d validateDate(getOptionValue(arguments, COMMAND_RETURN, OPTION_DATE));","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"gerardtwk"},"content":"            if (currentRecord.getIssueDate().compareTo(returnDate) \u003e 0) {","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"gerardtwk"},"content":"                throw new CommandException(\"Return date cannot be before Loan\u0027s issue date!\", COMMAND_RETURN);","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"gerardtwk"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"jonahtwl"},"content":"            if (returnDate.compareTo(LocalDate.now()) \u003e 0) {","lastModifiedDate":"2021-04-07"},{"lineNumber":101,"author":{"gitId":"jonahtwl"},"content":"                throw new CommandException(\"Return date cannot be in the future!\", COMMAND_RETURN);","lastModifiedDate":"2021-04-07"},{"lineNumber":102,"author":{"gitId":"jonahtwl"},"content":"            }","lastModifiedDate":"2021-04-07"},{"lineNumber":103,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":104,"author":{"gitId":"gerardtwk"},"content":"            return returnDate;","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"gerardtwk"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"gerardtwk"},"content":"            throw new CommandException(e.getMessage(), COMMAND_RETURN);","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"gerardtwk"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":111,"author":{"gitId":"gerardtwk"},"content":"     * Executes the return function.","lastModifiedDate":"2021-03-11"},{"lineNumber":112,"author":{"gitId":"gerardtwk"},"content":"     * Prints a message containing the loan that will be marked as returned.","lastModifiedDate":"2021-03-11"},{"lineNumber":113,"author":{"gitId":"gerardtwk"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":114,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"gerardtwk"},"content":"     * @param ui         is the Ui object that interacts with the user.","lastModifiedDate":"2021-03-11"},{"lineNumber":116,"author":{"gitId":"gerardtwk"},"content":"     * @param storage    is the Storage object that reads and writes to the save file.","lastModifiedDate":"2021-03-11"},{"lineNumber":117,"author":{"gitId":"gerardtwk"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":118,"author":{"gitId":"gerardtwk"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":119,"author":{"gitId":"gerardtwk"},"content":"    public void execute(RecordList recordList, Ui ui, Storage storage, CreditScoreReturnedLoansMap","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"gerardtwk"},"content":"            creditScoreReturnedLoansMap) {","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"LeeHanYongAndy"},"content":"        Record currentRecord \u003d recordList.getRecordAt(recordNumberInt);","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"gerardtwk"},"content":"        Loan currentLoan \u003d (Loan) currentRecord;","lastModifiedDate":"2021-03-11"},{"lineNumber":123,"author":{"gitId":"gerardtwk"},"content":"        if (!currentLoan.isReturn()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"gerardtwk"},"content":"            currentLoan.markAsReturned(returnDate);","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"gerardtwk"},"content":"            String borrowerNameInLowerCase \u003d currentLoan.getBorrowerName().toLowerCase();","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"gerardtwk"},"content":"            int creditScore \u003d creditScoreReturnedLoansMap.getCreditScoreOf(borrowerNameInLowerCase);","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"gerardtwk"},"content":"            long daysDifference \u003d getDaysDifference(currentLoan.getIssueDate(), currentLoan.getReturnDate());","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"gerardtwk"},"content":"            creditScore \u003d computeCreditScore(daysDifference, creditScore, currentLoan.isReturn());","lastModifiedDate":"2021-03-24"},{"lineNumber":129,"author":{"gitId":"gerardtwk"},"content":"            creditScoreReturnedLoansMap.insertCreditScoreOf(borrowerNameInLowerCase, creditScore);","lastModifiedDate":"2021-03-30"},{"lineNumber":130,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":131,"author":{"gitId":"gerardtwk"},"content":"        ui.printMessage(\"Loan marked as returned: \" + currentLoan);","lastModifiedDate":"2021-03-11"},{"lineNumber":132,"author":{"gitId":"gerardtwk"},"content":"        storage.saveData(recordList, creditScoreReturnedLoansMap);","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":134,"author":{"gitId":"gerardtwk"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"tzexern":11,"jonahtwl":4,"marklowsk":1,"LeeHanYongAndy":31,"gerardtwk":87}},{"path":"src/main/java/seedu/duke/command/Utils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"import org.apache.commons.lang3.StringUtils;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.ArgumentType;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"import org.apache.commons.lang3.ArrayUtils;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.common.Constant.MAX_CREDIT_SCORE;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.common.Constant.MIN_CREDIT_SCORE;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":" * Provides common validation methods for {@code Command} validation.","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"public class Utils {","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_MISSING_OPTION \u003d \"missing option: \";","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_INVALID_OPTION \u003d \"invalid option: \";","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_MISSING_OPTION_VALUE \u003d \"value of option %s is missing.\";","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_MISSING_ARGUMENT_VALUE \u003d \"missing argument value.\";","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_MISSING_VALUE \u003d \"missing value after command.\";","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_DUPLICATE_OPTION \u003d \"duplicate option: \";","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_CONFLICT_OPTION \u003d \"conflict with options: \";","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_TOO_MANY_ARGUMENTS \u003d \"too many arguments.\";","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_TOO_FEW_ARGUMENTS \u003d \"not enough arguments.\";","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_INVALID_ORDER \u003d \"invalid command order, \";","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":"    private static final String ERROR_INVALID_INPUT \u003d \"invalid input: \";","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"    private static final String REGEX_OPTION \u003d \"^-[a-zA-Z]$\";","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String ERROR_WRONG_HELP_TYPE \u003d \"invalid help type: \";","lastModifiedDate":"2021-03-19"},{"lineNumber":36,"author":{"gitId":"marklowsk"},"content":"    private static final int VALUE_INDEX \u003d 1;","lastModifiedDate":"2021-03-19"},{"lineNumber":37,"author":{"gitId":"gerardtwk"},"content":"    private static final long RETURN_REWARD_FIRST_WEEK \u003d 5;","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"gerardtwk"},"content":"    private static final long RETURN_PENALTY_SECOND_WEEK \u003d -10;","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"gerardtwk"},"content":"    private static final long RETURN_PENALTY_FORTH_WEEK \u003d -20;","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"gerardtwk"},"content":"    private static final long RETURN_PENALTY_FORTH_WEEK_ONWARDS \u003d -50;","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"gerardtwk"},"content":"    private static final long FIRST_WEEK \u003d 7;","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"gerardtwk"},"content":"    private static final long SECOND_WEEK \u003d 14;","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"gerardtwk"},"content":"    private static final long FORTH_WEEK \u003d 28;","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"marklowsk"},"content":"     * Checks {@code value} to see if it is not {@code null} and not empty.","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"marklowsk"},"content":"     * @param value        the String to check.","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"marklowsk"},"content":"     * @param errorMessage the exception message to print.","lastModifiedDate":"2021-03-19"},{"lineNumber":50,"author":{"gitId":"marklowsk"},"content":"     * @throws CommandException if {@code value} is {@code null} or empty.","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"marklowsk"},"content":"    private static void validateNotEmpty(String value, String errorMessage) throws CommandException {","lastModifiedDate":"2021-03-19"},{"lineNumber":53,"author":{"gitId":"marklowsk"},"content":"        if (value \u003d\u003d null || value.length() \u003d\u003d 0) {","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(errorMessage);","lastModifiedDate":"2021-03-19"},{"lineNumber":55,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"marklowsk"},"content":"     * Checks {@code value} to see if it is not {@code null} and not empty,","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"marklowsk"},"content":"     * and returns it if {@code true}.","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"marklowsk"},"content":"     * @param value   the {@code String} to check.","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"marklowsk"},"content":"     * @param command the name of the {@code Command} calling it.","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"marklowsk"},"content":"     * @param option  the name of the {@code option} pertaining to the {@code value}.","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"marklowsk"},"content":"     * @return the {@code value} if not empty","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"marklowsk"},"content":"     * @throws CommandException if {@code value} is null or empty.","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"marklowsk"},"content":"    private static String validateNotEmpty(String value, String command, String option)","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"marklowsk"},"content":"            throws CommandException {","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"marklowsk"},"content":"        if (value !\u003d null \u0026\u0026 value.length() \u003e 0) {","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"marklowsk"},"content":"            return value;","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"marklowsk"},"content":"        String errorMessage \u003d String.format(ERROR_MISSING_OPTION_VALUE, option);","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"marklowsk"},"content":"        throw new CommandException(errorMessage, command);","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"marklowsk"},"content":"     * Extracts the {@code option}\u0027s {@code value} from {@code arguments} {@code ArrayList}.\u003cbr\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"marklowsk"},"content":"     * Example: {@code [\"return\", \"-i\", \"2\"], option \u003d \"-i\", value \u003d \"2\"}.\u003cbr\u003e","lastModifiedDate":"2021-03-19"},{"lineNumber":80,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"marklowsk"},"content":"     * @param arguments an {@code ArrayList} containing {@code Command} arguments.","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"marklowsk"},"content":"     * @param command   the name of the {@code Command} calling it.","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"marklowsk"},"content":"     * @param option    the name of the {@code option} pertaining to the {@code value}.","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"marklowsk"},"content":"     * @return the {@code option}\u0027s {@code value}","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"marklowsk"},"content":"     * @throws CommandException if {@code option} does not exist, or {@code value} is missing or empty.","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"marklowsk"},"content":"     * @see #validateNotEmpty(String, String, String)","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"marklowsk"},"content":"    public static String getOptionValue(ArrayList\u003cString\u003e arguments, String command,","lastModifiedDate":"2021-03-09"},{"lineNumber":89,"author":{"gitId":"marklowsk"},"content":"                                        String option) throws CommandException {","lastModifiedDate":"2021-03-09"},{"lineNumber":90,"author":{"gitId":"marklowsk"},"content":"        if (!hasOption(arguments, option)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":91,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(ERROR_MISSING_OPTION + option, command);","lastModifiedDate":"2021-03-09"},{"lineNumber":92,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":93,"author":{"gitId":"marklowsk"},"content":"        int index \u003d arguments.indexOf(option);","lastModifiedDate":"2021-03-09"},{"lineNumber":94,"author":{"gitId":"marklowsk"},"content":"        if (index \u003c arguments.size() - 1) {","lastModifiedDate":"2021-03-09"},{"lineNumber":95,"author":{"gitId":"marklowsk"},"content":"            String value \u003d arguments.get(index + 1);","lastModifiedDate":"2021-03-10"},{"lineNumber":96,"author":{"gitId":"marklowsk"},"content":"            return validateNotEmpty(value, command, option);","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":98,"author":{"gitId":"marklowsk"},"content":"        // Below return results in an ERROR_MISSING_OPTION_VALUE exception thrown.","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"marklowsk"},"content":"        return validateNotEmpty(\"\", command, option);","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":101,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":102,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":103,"author":{"gitId":"marklowsk"},"content":"     * Gets the value of the second argument from {@code arguments}.","lastModifiedDate":"2021-03-19"},{"lineNumber":104,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":105,"author":{"gitId":"marklowsk"},"content":"     * @param arguments an {@code ArrayList} containing {@code Command} arguments.","lastModifiedDate":"2021-03-19"},{"lineNumber":106,"author":{"gitId":"marklowsk"},"content":"     * @param command   the name of the {@code Command} calling it.","lastModifiedDate":"2021-03-19"},{"lineNumber":107,"author":{"gitId":"marklowsk"},"content":"     * @return the non-empty value.","lastModifiedDate":"2021-03-19"},{"lineNumber":108,"author":{"gitId":"marklowsk"},"content":"     * @throws CommandException if value is missing or empty.","lastModifiedDate":"2021-03-19"},{"lineNumber":109,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":110,"author":{"gitId":"marklowsk"},"content":"    public static String getValue(ArrayList\u003cString\u003e arguments, String command)","lastModifiedDate":"2021-03-19"},{"lineNumber":111,"author":{"gitId":"marklowsk"},"content":"            throws CommandException {","lastModifiedDate":"2021-03-19"},{"lineNumber":112,"author":{"gitId":"marklowsk"},"content":"        assert arguments !\u003d null : \"arguments is null!\";","lastModifiedDate":"2021-03-19"},{"lineNumber":113,"author":{"gitId":"marklowsk"},"content":"        boolean isValuable \u003d (arguments.size() \u003e VALUE_INDEX)","lastModifiedDate":"2021-03-19"},{"lineNumber":114,"author":{"gitId":"marklowsk"},"content":"                \u0026\u0026 (arguments.get(VALUE_INDEX).length() !\u003d 0);","lastModifiedDate":"2021-03-19"},{"lineNumber":115,"author":{"gitId":"marklowsk"},"content":"        if (isValuable) {","lastModifiedDate":"2021-03-19"},{"lineNumber":116,"author":{"gitId":"marklowsk"},"content":"            return arguments.get(VALUE_INDEX);","lastModifiedDate":"2021-03-19"},{"lineNumber":117,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":118,"author":{"gitId":"marklowsk"},"content":"        throw new CommandException(ERROR_MISSING_VALUE, command);","lastModifiedDate":"2021-03-19"},{"lineNumber":119,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":120,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":121,"author":{"gitId":"marklowsk"},"content":"    // This hasOption method is only meant to improve readability.","lastModifiedDate":"2021-03-13"},{"lineNumber":122,"author":{"gitId":"marklowsk"},"content":"    public static boolean hasOption(ArrayList\u003cString\u003e arguments, String option) {","lastModifiedDate":"2021-03-09"},{"lineNumber":123,"author":{"gitId":"marklowsk"},"content":"        assert arguments !\u003d null : \"arguments is null!\";","lastModifiedDate":"2021-03-18"},{"lineNumber":124,"author":{"gitId":"marklowsk"},"content":"        return arguments.contains(option);","lastModifiedDate":"2021-03-09"},{"lineNumber":125,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":126,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":127,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":128,"author":{"gitId":"marklowsk"},"content":"     * Checks {@code arguments} for invalid, duplicate and conflict options.","lastModifiedDate":"2021-03-14"},{"lineNumber":129,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":130,"author":{"gitId":"marklowsk"},"content":"     * @param arguments    an {@code ArrayList} containing {@code Command} arguments.","lastModifiedDate":"2021-03-13"},{"lineNumber":131,"author":{"gitId":"marklowsk"},"content":"     * @param command      the name of the {@code Command} calling it.","lastModifiedDate":"2021-03-13"},{"lineNumber":132,"author":{"gitId":"marklowsk"},"content":"     * @param validOptions a {@code String} array containing valid options pertaining to {@code command}.","lastModifiedDate":"2021-03-13"},{"lineNumber":133,"author":{"gitId":"marklowsk"},"content":"     * @param orOptions    a {@code String} array containing conflict options pertaining to {@code command}.","lastModifiedDate":"2021-03-13"},{"lineNumber":134,"author":{"gitId":"marklowsk"},"content":"     * @throws CommandException if {@code arguments} contains invalid/duplicate options and conflict options.","lastModifiedDate":"2021-03-14"},{"lineNumber":135,"author":{"gitId":"marklowsk"},"content":"     * @see #checkInvalidOptions(ArrayList, String, String...)","lastModifiedDate":"2021-03-13"},{"lineNumber":136,"author":{"gitId":"marklowsk"},"content":"     * @see #checkOptionConflict(ArrayList, String, String...)","lastModifiedDate":"2021-03-13"},{"lineNumber":137,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":138,"author":{"gitId":"marklowsk"},"content":"    public static void validateOptions(ArrayList\u003cString\u003e arguments, String command,","lastModifiedDate":"2021-03-13"},{"lineNumber":139,"author":{"gitId":"marklowsk"},"content":"                                       String[] validOptions, String[] orOptions) throws CommandException {","lastModifiedDate":"2021-03-13"},{"lineNumber":140,"author":{"gitId":"marklowsk"},"content":"        assert arguments !\u003d null : \"arguments is null!\";","lastModifiedDate":"2021-03-18"},{"lineNumber":141,"author":{"gitId":"marklowsk"},"content":"        checkInvalidOptions(arguments, command, validOptions);","lastModifiedDate":"2021-03-13"},{"lineNumber":142,"author":{"gitId":"marklowsk"},"content":"        checkOptionConflict(arguments, command, orOptions);","lastModifiedDate":"2021-03-13"},{"lineNumber":143,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":144,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":145,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":146,"author":{"gitId":"marklowsk"},"content":"     * Checks {@code arguments} for invalid/duplicate options.","lastModifiedDate":"2021-03-14"},{"lineNumber":147,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":148,"author":{"gitId":"marklowsk"},"content":"     * @param arguments    an {@code ArrayList} containing {@code Command} arguments.","lastModifiedDate":"2021-03-13"},{"lineNumber":149,"author":{"gitId":"marklowsk"},"content":"     * @param command      the name of the {@code Command} calling it.","lastModifiedDate":"2021-03-13"},{"lineNumber":150,"author":{"gitId":"marklowsk"},"content":"     * @param validOptions valid options pertaining to {@code command}.","lastModifiedDate":"2021-03-13"},{"lineNumber":151,"author":{"gitId":"marklowsk"},"content":"     * @throws CommandException if {@code arguments} contains an invalid or a duplicate option.","lastModifiedDate":"2021-03-14"},{"lineNumber":152,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":153,"author":{"gitId":"marklowsk"},"content":"    public static void checkInvalidOptions(ArrayList\u003cString\u003e arguments, String command,","lastModifiedDate":"2021-03-09"},{"lineNumber":154,"author":{"gitId":"marklowsk"},"content":"                                           String... validOptions) throws CommandException {","lastModifiedDate":"2021-03-09"},{"lineNumber":155,"author":{"gitId":"marklowsk"},"content":"        Set\u003cString\u003e nonDuplicates \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-09"},{"lineNumber":156,"author":{"gitId":"marklowsk"},"content":"        for (String arg : arguments) {","lastModifiedDate":"2021-03-09"},{"lineNumber":157,"author":{"gitId":"marklowsk"},"content":"            if (!isOption(arg)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":158,"author":{"gitId":"marklowsk"},"content":"                continue;","lastModifiedDate":"2021-03-09"},{"lineNumber":159,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":160,"author":{"gitId":"marklowsk"},"content":"            if (!ArrayUtils.contains(validOptions, arg)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":161,"author":{"gitId":"marklowsk"},"content":"                throw new CommandException(ERROR_INVALID_OPTION + arg, command);","lastModifiedDate":"2021-03-09"},{"lineNumber":162,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":163,"author":{"gitId":"marklowsk"},"content":"            if (!nonDuplicates.add(arg)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":164,"author":{"gitId":"marklowsk"},"content":"                throw new CommandException(ERROR_DUPLICATE_OPTION + arg, command);","lastModifiedDate":"2021-03-09"},{"lineNumber":165,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":166,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":167,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":168,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":169,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":170,"author":{"gitId":"marklowsk"},"content":"     * Checks {@code arguments} for conflict options.","lastModifiedDate":"2021-03-13"},{"lineNumber":171,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":172,"author":{"gitId":"marklowsk"},"content":"     * @param arguments an {@code ArrayList} containing {@code Command} arguments.","lastModifiedDate":"2021-03-13"},{"lineNumber":173,"author":{"gitId":"marklowsk"},"content":"     * @param command   the name of the {@code Command} calling it.","lastModifiedDate":"2021-03-13"},{"lineNumber":174,"author":{"gitId":"marklowsk"},"content":"     * @param orOptions conflict options pertaining to {@code command}.","lastModifiedDate":"2021-03-13"},{"lineNumber":175,"author":{"gitId":"marklowsk"},"content":"     * @throws CommandException if {@code arguments} contains a conflict option.","lastModifiedDate":"2021-03-13"},{"lineNumber":176,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":177,"author":{"gitId":"marklowsk"},"content":"    public static void checkOptionConflict(ArrayList\u003cString\u003e arguments, String command,","lastModifiedDate":"2021-03-09"},{"lineNumber":178,"author":{"gitId":"marklowsk"},"content":"                                           String... orOptions) throws CommandException {","lastModifiedDate":"2021-03-09"},{"lineNumber":179,"author":{"gitId":"marklowsk"},"content":"        String option \u003d null;","lastModifiedDate":"2021-03-09"},{"lineNumber":180,"author":{"gitId":"marklowsk"},"content":"        for (String arg : arguments) {","lastModifiedDate":"2021-03-09"},{"lineNumber":181,"author":{"gitId":"marklowsk"},"content":"            if (!isOption(arg)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":182,"author":{"gitId":"marklowsk"},"content":"                continue;","lastModifiedDate":"2021-03-09"},{"lineNumber":183,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":184,"author":{"gitId":"marklowsk"},"content":"            if (!ArrayUtils.contains(orOptions, arg)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":185,"author":{"gitId":"marklowsk"},"content":"                continue;","lastModifiedDate":"2021-03-09"},{"lineNumber":186,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":187,"author":{"gitId":"marklowsk"},"content":"            if (option \u003d\u003d null) {","lastModifiedDate":"2021-03-09"},{"lineNumber":188,"author":{"gitId":"marklowsk"},"content":"                option \u003d arg;","lastModifiedDate":"2021-03-09"},{"lineNumber":189,"author":{"gitId":"marklowsk"},"content":"            } else {","lastModifiedDate":"2021-03-09"},{"lineNumber":190,"author":{"gitId":"marklowsk"},"content":"                throw new CommandException(ERROR_CONFLICT_OPTION + option + \", \" + arg, command);","lastModifiedDate":"2021-03-09"},{"lineNumber":191,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":192,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":193,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":194,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":195,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":196,"author":{"gitId":"marklowsk"},"content":"     * Checks the {@code Command}\u0027s {@code arguments} ordering based on the {@code argumentTypeOrder}.\u003cbr\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":197,"author":{"gitId":"marklowsk"},"content":"     * Recommended for {@code Command}s with strict argument order.\u003cbr\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":198,"author":{"gitId":"marklowsk"},"content":"     * This method should be used only when:\u003cbr\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":199,"author":{"gitId":"marklowsk"},"content":"     * \u003cul\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":200,"author":{"gitId":"marklowsk"},"content":"     *     \u003cli\u003e{@link #validateOptions(ArrayList, String, String[], String[])} has been called, or\u003c/li\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":201,"author":{"gitId":"marklowsk"},"content":"     *     \u003cli\u003e{@code Command} does not require option validation.\u003c/li\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":202,"author":{"gitId":"marklowsk"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":203,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":204,"author":{"gitId":"marklowsk"},"content":"     * @param arguments         an {@code ArrayList} containing {@code Command} arguments.","lastModifiedDate":"2021-03-13"},{"lineNumber":205,"author":{"gitId":"marklowsk"},"content":"     * @param argumentTypeOrder an Enumeration array of type {@code ArgumentType} containing the argument","lastModifiedDate":"2021-03-13"},{"lineNumber":206,"author":{"gitId":"marklowsk"},"content":"     *                          type order.","lastModifiedDate":"2021-03-13"},{"lineNumber":207,"author":{"gitId":"marklowsk"},"content":"     * @param command           the name of the {@code Command} calling it.","lastModifiedDate":"2021-03-13"},{"lineNumber":208,"author":{"gitId":"marklowsk"},"content":"     * @throws CommandException if there is a violation to the argument type order.","lastModifiedDate":"2021-03-13"},{"lineNumber":209,"author":{"gitId":"marklowsk"},"content":"     * @see ArgumentType","lastModifiedDate":"2021-03-13"},{"lineNumber":210,"author":{"gitId":"marklowsk"},"content":"     * @see #validateArgument(String, ArgumentType, String)","lastModifiedDate":"2021-03-13"},{"lineNumber":211,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":212,"author":{"gitId":"marklowsk"},"content":"    public static void validateArguments(ArrayList\u003cString\u003e arguments, ArgumentType[] argumentTypeOrder,","lastModifiedDate":"2021-03-10"},{"lineNumber":213,"author":{"gitId":"marklowsk"},"content":"                                         String command) throws CommandException {","lastModifiedDate":"2021-03-10"},{"lineNumber":214,"author":{"gitId":"marklowsk"},"content":"        assert arguments !\u003d null : \"arguments is null!\";","lastModifiedDate":"2021-03-18"},{"lineNumber":215,"author":{"gitId":"marklowsk"},"content":"        assert argumentTypeOrder !\u003d null : \"argumentTypeOrder is null!\";","lastModifiedDate":"2021-03-18"},{"lineNumber":216,"author":{"gitId":"marklowsk"},"content":"        if (arguments.size() \u003e argumentTypeOrder.length) {","lastModifiedDate":"2021-03-10"},{"lineNumber":217,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(ERROR_TOO_MANY_ARGUMENTS, command);","lastModifiedDate":"2021-03-10"},{"lineNumber":218,"author":{"gitId":"marklowsk"},"content":"        } else if (arguments.size() \u003c argumentTypeOrder.length) {","lastModifiedDate":"2021-03-10"},{"lineNumber":219,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(ERROR_TOO_FEW_ARGUMENTS, command);","lastModifiedDate":"2021-03-10"},{"lineNumber":220,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":221,"author":{"gitId":"marklowsk"},"content":"        for (int i \u003d 0; i \u003c arguments.size(); i++) {","lastModifiedDate":"2021-03-10"},{"lineNumber":222,"author":{"gitId":"marklowsk"},"content":"            validateArgument(arguments.get(i), argumentTypeOrder[i], command);","lastModifiedDate":"2021-03-10"},{"lineNumber":223,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":224,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":225,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":226,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":227,"author":{"gitId":"marklowsk"},"content":"     * Checks {@code argument}\u0027s type matches {@code argumentType}.","lastModifiedDate":"2021-03-13"},{"lineNumber":228,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":229,"author":{"gitId":"marklowsk"},"content":"     * @param argument     a portion of the {@code Command}\u0027s arguments.","lastModifiedDate":"2021-03-13"},{"lineNumber":230,"author":{"gitId":"marklowsk"},"content":"     * @param argumentType an Enumeration of ArgumentType to match with.","lastModifiedDate":"2021-03-13"},{"lineNumber":231,"author":{"gitId":"marklowsk"},"content":"     * @param command      the name of the {@code Command} calling it.","lastModifiedDate":"2021-03-13"},{"lineNumber":232,"author":{"gitId":"marklowsk"},"content":"     * @throws CommandException if {@code argument}\u0027s type does not match {@code argumentType}.","lastModifiedDate":"2021-03-13"},{"lineNumber":233,"author":{"gitId":"marklowsk"},"content":"     * @see ArgumentType","lastModifiedDate":"2021-03-13"},{"lineNumber":234,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":235,"author":{"gitId":"marklowsk"},"content":"    private static void validateArgument(String argument, ArgumentType argumentType, String command)","lastModifiedDate":"2021-03-10"},{"lineNumber":236,"author":{"gitId":"marklowsk"},"content":"            throws CommandException {","lastModifiedDate":"2021-03-10"},{"lineNumber":237,"author":{"gitId":"marklowsk"},"content":"        switch (argumentType) {","lastModifiedDate":"2021-03-10"},{"lineNumber":238,"author":{"gitId":"marklowsk"},"content":"        case VALUE:","lastModifiedDate":"2021-03-10"},{"lineNumber":239,"author":{"gitId":"marklowsk"},"content":"            validateNotEmpty(argument, ERROR_MISSING_ARGUMENT_VALUE);","lastModifiedDate":"2021-03-19"},{"lineNumber":240,"author":{"gitId":"marklowsk"},"content":"            break;","lastModifiedDate":"2021-03-10"},{"lineNumber":241,"author":{"gitId":"marklowsk"},"content":"        case OPTION:","lastModifiedDate":"2021-03-10"},{"lineNumber":242,"author":{"gitId":"marklowsk"},"content":"            if (isOption(argument)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":243,"author":{"gitId":"marklowsk"},"content":"                break;","lastModifiedDate":"2021-03-10"},{"lineNumber":244,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-10"},{"lineNumber":245,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(ERROR_INVALID_ORDER + \"expected an option instead of \" + argument,","lastModifiedDate":"2021-03-10"},{"lineNumber":246,"author":{"gitId":"marklowsk"},"content":"                    command);","lastModifiedDate":"2021-03-10"},{"lineNumber":247,"author":{"gitId":"marklowsk"},"content":"        case COMMAND:","lastModifiedDate":"2021-03-10"},{"lineNumber":248,"author":{"gitId":"marklowsk"},"content":"            if (argument.equals(command)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":249,"author":{"gitId":"marklowsk"},"content":"                break;","lastModifiedDate":"2021-03-10"},{"lineNumber":250,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-10"},{"lineNumber":251,"author":{"gitId":"marklowsk"},"content":"            throw new CommandException(ERROR_INVALID_ORDER + \"expected command word.\");","lastModifiedDate":"2021-03-10"},{"lineNumber":252,"author":{"gitId":"marklowsk"},"content":"        case EMPTY_VALUE:","lastModifiedDate":"2021-03-10"},{"lineNumber":253,"author":{"gitId":"marklowsk"},"content":"            // Fallthrough","lastModifiedDate":"2021-03-10"},{"lineNumber":254,"author":{"gitId":"marklowsk"},"content":"        default:","lastModifiedDate":"2021-03-10"},{"lineNumber":255,"author":{"gitId":"marklowsk"},"content":"            if (argument.length() \u003e 0) {","lastModifiedDate":"2021-03-10"},{"lineNumber":256,"author":{"gitId":"marklowsk"},"content":"                throw new CommandException(ERROR_INVALID_INPUT + argument, command);","lastModifiedDate":"2021-03-10"},{"lineNumber":257,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-10"},{"lineNumber":258,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":259,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":260,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":261,"author":{"gitId":"LeeHanYongAndy"},"content":"    protected static String validateHelpType(ArrayList\u003cString\u003e argument, String command)","lastModifiedDate":"2021-03-19"},{"lineNumber":262,"author":{"gitId":"LeeHanYongAndy"},"content":"            throws CommandException {","lastModifiedDate":"2021-03-19"},{"lineNumber":263,"author":{"gitId":"LeeHanYongAndy"},"content":"        String helpType \u003d argument.get(1);","lastModifiedDate":"2021-03-19"},{"lineNumber":264,"author":{"gitId":"LeeHanYongAndy"},"content":"        if (StringUtils.equalsAny(helpType, \"all\", \"add\", \"creditscore\", \"exit\",","lastModifiedDate":"2021-03-19"},{"lineNumber":265,"author":{"gitId":"LeeHanYongAndy"},"content":"            \"list\", \"remove\", \"return\", \"view\")) {","lastModifiedDate":"2021-03-19"},{"lineNumber":266,"author":{"gitId":"LeeHanYongAndy"},"content":"            return helpType;","lastModifiedDate":"2021-03-19"},{"lineNumber":267,"author":{"gitId":"LeeHanYongAndy"},"content":"        } else {","lastModifiedDate":"2021-03-19"},{"lineNumber":268,"author":{"gitId":"LeeHanYongAndy"},"content":"            throw new CommandException(ERROR_WRONG_HELP_TYPE + helpType, command);","lastModifiedDate":"2021-03-19"},{"lineNumber":269,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":270,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":271,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":272,"author":{"gitId":"marklowsk"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":273,"author":{"gitId":"marklowsk"},"content":"     * Checks if {@code argument} is an option.\u003cbr\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":274,"author":{"gitId":"marklowsk"},"content":"     * An option can be in the form {@code \"-L\"}, where {@code L} is a letter of any case.","lastModifiedDate":"2021-03-13"},{"lineNumber":275,"author":{"gitId":"marklowsk"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":276,"author":{"gitId":"marklowsk"},"content":"     * @param argument a {@code String} to be checked.","lastModifiedDate":"2021-03-13"},{"lineNumber":277,"author":{"gitId":"marklowsk"},"content":"     * @return {@code true} if {@code argument} matches the {@link #REGEX_OPTION} {@code Pattern}.","lastModifiedDate":"2021-03-13"},{"lineNumber":278,"author":{"gitId":"marklowsk"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":279,"author":{"gitId":"marklowsk"},"content":"    public static boolean isOption(String argument) {","lastModifiedDate":"2021-03-13"},{"lineNumber":280,"author":{"gitId":"marklowsk"},"content":"        assert argument !\u003d null : \"argument is null!\";","lastModifiedDate":"2021-03-18"},{"lineNumber":281,"author":{"gitId":"marklowsk"},"content":"        return Pattern.matches(REGEX_OPTION, argument);","lastModifiedDate":"2021-03-13"},{"lineNumber":282,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":283,"author":{"gitId":"gerardtwk"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":284,"author":{"gitId":"gerardtwk"},"content":"    public static long getDaysDifference(LocalDate issueDate, LocalDate returnDate) {","lastModifiedDate":"2021-03-24"},{"lineNumber":285,"author":{"gitId":"tzexern"},"content":"        LocalDate fromDate \u003d issueDate;","lastModifiedDate":"2021-03-25"},{"lineNumber":286,"author":{"gitId":"tzexern"},"content":"        LocalDate toDate;","lastModifiedDate":"2021-03-25"},{"lineNumber":287,"author":{"gitId":"tzexern"},"content":"        if (returnDate \u003d\u003d null) {","lastModifiedDate":"2021-03-25"},{"lineNumber":288,"author":{"gitId":"tzexern"},"content":"            toDate \u003d LocalDate.now();","lastModifiedDate":"2021-03-25"},{"lineNumber":289,"author":{"gitId":"tzexern"},"content":"        } else {","lastModifiedDate":"2021-03-25"},{"lineNumber":290,"author":{"gitId":"tzexern"},"content":"            assert returnDate !\u003d null : \"returnDate should not be empty\";","lastModifiedDate":"2021-03-25"},{"lineNumber":291,"author":{"gitId":"tzexern"},"content":"            toDate \u003d returnDate;","lastModifiedDate":"2021-03-25"},{"lineNumber":292,"author":{"gitId":"tzexern"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":293,"author":{"gitId":"tzexern"},"content":"        long daysDifference \u003d ChronoUnit.DAYS.between(fromDate, toDate);","lastModifiedDate":"2021-03-25"},{"lineNumber":294,"author":{"gitId":"tzexern"},"content":"        return daysDifference;","lastModifiedDate":"2021-03-25"},{"lineNumber":295,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":296,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":297,"author":{"gitId":"gerardtwk"},"content":"    public static int computeCreditScore(long daysDifference, int currentCreditScore, boolean isReturn) {","lastModifiedDate":"2021-03-24"},{"lineNumber":298,"author":{"gitId":"gerardtwk"},"content":"        long computedCreditScore \u003d currentCreditScore;","lastModifiedDate":"2021-03-24"},{"lineNumber":299,"author":{"gitId":"gerardtwk"},"content":"        if (daysDifference \u003c FIRST_WEEK) {","lastModifiedDate":"2021-03-24"},{"lineNumber":300,"author":{"gitId":"gerardtwk"},"content":"            if (isReturn) {","lastModifiedDate":"2021-03-24"},{"lineNumber":301,"author":{"gitId":"gerardtwk"},"content":"                computedCreditScore +\u003d RETURN_REWARD_FIRST_WEEK;","lastModifiedDate":"2021-03-24"},{"lineNumber":302,"author":{"gitId":"gerardtwk"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":303,"author":{"gitId":"gerardtwk"},"content":"        } else if (daysDifference \u003c\u003d SECOND_WEEK) {","lastModifiedDate":"2021-03-24"},{"lineNumber":304,"author":{"gitId":"gerardtwk"},"content":"            computedCreditScore +\u003d RETURN_PENALTY_SECOND_WEEK;","lastModifiedDate":"2021-03-24"},{"lineNumber":305,"author":{"gitId":"gerardtwk"},"content":"        } else if (daysDifference \u003c\u003d FORTH_WEEK) {","lastModifiedDate":"2021-03-24"},{"lineNumber":306,"author":{"gitId":"gerardtwk"},"content":"            computedCreditScore +\u003d RETURN_PENALTY_FORTH_WEEK;","lastModifiedDate":"2021-03-24"},{"lineNumber":307,"author":{"gitId":"gerardtwk"},"content":"        } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":308,"author":{"gitId":"gerardtwk"},"content":"            computedCreditScore +\u003d RETURN_PENALTY_FORTH_WEEK_ONWARDS;","lastModifiedDate":"2021-03-24"},{"lineNumber":309,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":310,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":311,"author":{"gitId":"gerardtwk"},"content":"        if (computedCreditScore \u003e MAX_CREDIT_SCORE) {","lastModifiedDate":"2021-03-24"},{"lineNumber":312,"author":{"gitId":"gerardtwk"},"content":"            computedCreditScore \u003d MAX_CREDIT_SCORE;","lastModifiedDate":"2021-03-24"},{"lineNumber":313,"author":{"gitId":"gerardtwk"},"content":"        } else if (computedCreditScore \u003c MIN_CREDIT_SCORE) {","lastModifiedDate":"2021-03-24"},{"lineNumber":314,"author":{"gitId":"gerardtwk"},"content":"            computedCreditScore \u003d MIN_CREDIT_SCORE;","lastModifiedDate":"2021-03-24"},{"lineNumber":315,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":316,"author":{"gitId":"gerardtwk"},"content":"        return (int) computedCreditScore;","lastModifiedDate":"2021-03-24"},{"lineNumber":317,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":318,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"tzexern":10,"marklowsk":256,"LeeHanYongAndy":15,"gerardtwk":37}},{"path":"src/main/java/seedu/duke/command/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.ArgumentType;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.RecordType;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.hasOption;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateArguments;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateOptions;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_EXPENSE;","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_LOAN;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_SAVING;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"LeeHanYongAndy"},"content":"import static seedu.duke.common.Constant.OPTION_ALL;","lastModifiedDate":"2021-04-03"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":" * Handles all operations related to the view command.","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String[] VALID_OPTIONS \u003d {OPTION_EXPENSE, OPTION_LOAN, OPTION_SAVING, OPTION_ALL};","lastModifiedDate":"2021-04-03"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"    private static final ArgumentType[] ARGUMENT_TYPE_ORDER \u003d {","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.COMMAND,","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.OPTION,","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.EMPTY_VALUE","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"    };","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"    protected static final String COMMAND_VIEW \u003d \"view\";","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"    private RecordType recordType;","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Constructor to validate the format for view command.","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"    public ViewCommand(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"marklowsk"},"content":"        validateOptions(arguments, COMMAND_VIEW, VALID_OPTIONS, VALID_OPTIONS);","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"LeeHanYongAndy"},"content":"        checkRecordType(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"        validateArguments(arguments, ARGUMENT_TYPE_ORDER, COMMAND_VIEW);","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Check if the input contains the correct record type and options.","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param arguments parsed input containing the options and arguments.","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @throws CommandException contains the error messages when a incorrect format is detected.","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"    private void checkRecordType(ArrayList\u003cString\u003e arguments) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"marklowsk"},"content":"        if (hasOption(arguments, OPTION_EXPENSE)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"marklowsk"},"content":"            recordType \u003d RecordType.EXPENSE;","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"marklowsk"},"content":"        } else if (hasOption(arguments, OPTION_LOAN)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"marklowsk"},"content":"            recordType \u003d RecordType.LOAN;","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"marklowsk"},"content":"        } else if (hasOption(arguments, OPTION_SAVING)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"marklowsk"},"content":"            recordType \u003d RecordType.SAVING;","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"LeeHanYongAndy"},"content":"        } else if (hasOption(arguments, OPTION_ALL)) {","lastModifiedDate":"2021-04-03"},{"lineNumber":58,"author":{"gitId":"LeeHanYongAndy"},"content":"            recordType \u003d RecordType.ALL;","lastModifiedDate":"2021-04-03"},{"lineNumber":59,"author":{"gitId":"marklowsk"},"content":"        } else {","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"LeeHanYongAndy"},"content":"            throw new CommandException(\"missing option: [-e | -l | -s | -a]\", COMMAND_VIEW);","lastModifiedDate":"2021-04-03"},{"lineNumber":61,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Executes the view function.","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param ui      is the Ui object that interacts with the user.","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param storage is the Storage object that reads and writes to the save file.","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"marklowsk"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"gerardtwk"},"content":"    public void execute(RecordList recordList, Ui ui, Storage storage, CreditScoreReturnedLoansMap","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"gerardtwk"},"content":"            creditScoreReturnedLoansMap) {","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"marklowsk"},"content":"        switch (recordType) {","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"marklowsk"},"content":"        case EXPENSE:","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printTotalAmountExpense(recordList);","lastModifiedDate":"2021-03-11"},{"lineNumber":77,"author":{"gitId":"marklowsk"},"content":"            break;","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"marklowsk"},"content":"        case LOAN:","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printTotalAmountLoan(recordList);","lastModifiedDate":"2021-03-11"},{"lineNumber":80,"author":{"gitId":"marklowsk"},"content":"            break;","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"marklowsk"},"content":"        case SAVING:","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printTotalAmountSaving(recordList);","lastModifiedDate":"2021-04-03"},{"lineNumber":83,"author":{"gitId":"LeeHanYongAndy"},"content":"            break;","lastModifiedDate":"2021-04-03"},{"lineNumber":84,"author":{"gitId":"LeeHanYongAndy"},"content":"        case ALL:","lastModifiedDate":"2021-04-03"},{"lineNumber":85,"author":{"gitId":"marklowsk"},"content":"            // Fallthrough","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"marklowsk"},"content":"        default:","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"LeeHanYongAndy"},"content":"            ui.printTotalAmountAllType(recordList);","lastModifiedDate":"2021-04-03"},{"lineNumber":88,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":90,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"jonahtwl":1,"marklowsk":52,"LeeHanYongAndy":35,"gerardtwk":2}},{"path":"src/main/java/seedu/duke/common/ArgumentType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.common;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"public enum ArgumentType {","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"    COMMAND, OPTION, VALUE, EMPTY_VALUE","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"marklowsk":5}},{"path":"src/main/java/seedu/duke/common/Constant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.common;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"public class Constant {","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"    public static final String OPTION_ALL \u003d \"-a\";","lastModifiedDate":"2021-04-03"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"    public static final String OPTION_EXPENSE \u003d \"-e\";","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"    public static final String OPTION_LOAN \u003d \"-l\";","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"    public static final String OPTION_SAVING \u003d \"-s\";","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"    public static final String OPTION_AMOUNT \u003d \"-a\";","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"    public static final String OPTION_DATE \u003d \"-d\";","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"    public static final String OPTION_INDEX \u003d \"-i\";","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"    public static final String OPTION_PERSON \u003d \"-p\";","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"    public static final String FILE_DELIMITER_CHAR \u003d \"|\";","lastModifiedDate":"2021-04-06"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"    public static final long MAX_CREDIT_SCORE \u003d 100;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"    public static final long MIN_CREDIT_SCORE \u003d 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"    public static final FinuxLogger FINUX_LOGGER \u003d new FinuxLogger(\"Finux Logger\");","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"tzexern":1,"LeeHanYongAndy":4,"marklowsk":7,"gerardtwk":4}},{"path":"src/main/java/seedu/duke/common/FinuxLogger.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"package seedu.duke.common;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"public class FinuxLogger {","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"    private Logger logger;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"    public FinuxLogger(String loggerName) {","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"        try {","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"            logger \u003d Logger.getLogger(loggerName);","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"            FileHandler logFileHandler \u003d new FileHandler(\"finuxLog.txt\", true);","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"            logFileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"            logger.addHandler(logFileHandler);","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":"            logger.setUseParentHandlers(false);","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"        } catch (IOException | SecurityException e) {","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"gerardtwk"},"content":"            logger \u003d null;","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"gerardtwk"},"content":"            System.out.println(\"Error occurred in setting up finux logger!\");","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"gerardtwk"},"content":"    public void logInfo(String infoMsg) {","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"gerardtwk"},"content":"        if (logger !\u003d null) {","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"gerardtwk"},"content":"            logger.info(infoMsg);","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"gerardtwk"},"content":"    public void logWarning(String warningMsg) {","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"gerardtwk"},"content":"        if (logger !\u003d null) {","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"gerardtwk"},"content":"            logger.warning(warningMsg);","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"gerardtwk"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"gerardtwk":35}},{"path":"src/main/java/seedu/duke/common/RecordType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.common;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"public enum RecordType {","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"    EXPENSE, LOAN, SAVING, ALL","lastModifiedDate":"2021-04-03"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"tzexern":1,"marklowsk":4}},{"path":"src/main/java/seedu/duke/common/Validators.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"package seedu.duke.common;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2021-04-03"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-04-03"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2021-04-03"},{"lineNumber":11,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"LeeHanYongAndy"},"content":"import org.apache.commons.lang3.StringUtils;","lastModifiedDate":"2021-04-05"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"import seedu.duke.exception.CustomException;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"import static seedu.duke.common.Constant.FINUX_LOGGER;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"public class Validators {","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"    private static final String KEYWORD_TODAY \u003d \"today\";","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"    private static final String LOGGER_OKAY_MESSAGE \u003d \"index validation success\";","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"    private static final long ERA_AD \u003d 1;","lastModifiedDate":"2021-04-03"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"    private static final DateTimeFormatter[] POSSIBLE_DATE_FORMATS \u003d {","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"        new DateTimeFormatterBuilder().appendPattern(\"ddMMyyyy\")","lastModifiedDate":"2021-04-03"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"                                      .parseDefaulting(ChronoField.ERA, ERA_AD)","lastModifiedDate":"2021-04-03"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"                                      .toFormatter()","lastModifiedDate":"2021-04-03"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"                                      .withResolverStyle(ResolverStyle.STRICT),","lastModifiedDate":"2021-04-03"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"        new DateTimeFormatterBuilder().appendPattern(\"d.M.yyyy\")","lastModifiedDate":"2021-04-03"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"                                      .parseDefaulting(ChronoField.ERA, ERA_AD)","lastModifiedDate":"2021-04-03"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"                                      .toFormatter()","lastModifiedDate":"2021-04-03"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"                                      .withResolverStyle(ResolverStyle.STRICT),","lastModifiedDate":"2021-04-03"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":"        new DateTimeFormatterBuilder().appendPattern(\"d-M-yyyy\")","lastModifiedDate":"2021-04-03"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"                                      .parseDefaulting(ChronoField.ERA, ERA_AD)","lastModifiedDate":"2021-04-03"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":"                                      .toFormatter()","lastModifiedDate":"2021-04-03"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"                                      .withResolverStyle(ResolverStyle.STRICT),","lastModifiedDate":"2021-04-03"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"        new DateTimeFormatterBuilder().appendPattern(\"d/M/yyyy\")","lastModifiedDate":"2021-04-03"},{"lineNumber":36,"author":{"gitId":"marklowsk"},"content":"                                      .parseDefaulting(ChronoField.ERA, ERA_AD)","lastModifiedDate":"2021-04-03"},{"lineNumber":37,"author":{"gitId":"marklowsk"},"content":"                                      .toFormatter()","lastModifiedDate":"2021-04-03"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"                                      .withResolverStyle(ResolverStyle.STRICT),","lastModifiedDate":"2021-04-03"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"        new DateTimeFormatterBuilder().appendPattern(\"yyyy.M.d\")","lastModifiedDate":"2021-04-03"},{"lineNumber":40,"author":{"gitId":"marklowsk"},"content":"                                      .parseDefaulting(ChronoField.ERA, ERA_AD)","lastModifiedDate":"2021-04-03"},{"lineNumber":41,"author":{"gitId":"marklowsk"},"content":"                                      .toFormatter()","lastModifiedDate":"2021-04-03"},{"lineNumber":42,"author":{"gitId":"marklowsk"},"content":"                                      .withResolverStyle(ResolverStyle.STRICT),","lastModifiedDate":"2021-04-03"},{"lineNumber":43,"author":{"gitId":"marklowsk"},"content":"        new DateTimeFormatterBuilder().appendPattern(\"yyyy-M-d\")","lastModifiedDate":"2021-04-03"},{"lineNumber":44,"author":{"gitId":"marklowsk"},"content":"                                      .parseDefaulting(ChronoField.ERA, ERA_AD)","lastModifiedDate":"2021-04-03"},{"lineNumber":45,"author":{"gitId":"marklowsk"},"content":"                                      .toFormatter()","lastModifiedDate":"2021-04-03"},{"lineNumber":46,"author":{"gitId":"marklowsk"},"content":"                                      .withResolverStyle(ResolverStyle.STRICT),","lastModifiedDate":"2021-04-03"},{"lineNumber":47,"author":{"gitId":"marklowsk"},"content":"        new DateTimeFormatterBuilder().appendPattern(\"yyyy/M/d\")","lastModifiedDate":"2021-04-03"},{"lineNumber":48,"author":{"gitId":"marklowsk"},"content":"                                      .parseDefaulting(ChronoField.ERA, ERA_AD)","lastModifiedDate":"2021-04-03"},{"lineNumber":49,"author":{"gitId":"marklowsk"},"content":"                                      .toFormatter()","lastModifiedDate":"2021-04-03"},{"lineNumber":50,"author":{"gitId":"marklowsk"},"content":"                                      .withResolverStyle(ResolverStyle.STRICT)","lastModifiedDate":"2021-04-03"},{"lineNumber":51,"author":{"gitId":"marklowsk"},"content":"    };","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // @@author marklowsk-reused","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    // Reused from https://github.com/marklowsk/ip/blob/master/src/main/java/duke/common/Utils.java","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static LocalDate parseDateString(DateTimeFormatter format, String dateInput) {","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return LocalDate.parse(dateInput, format);","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return null;","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    // @@author marklowsk-reused","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    // Reused from https://github.com/marklowsk/ip/blob/master/src/main/java/duke/common/Utils.java","lastModifiedDate":"2021-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    //   Utils.parseDate(String) with new additions.","lastModifiedDate":"2021-03-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Parses dateInput into a LocalDateTime object.","lastModifiedDate":"2021-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns null if dateInput cannot be parsed into a LocalDateTime object.","lastModifiedDate":"2021-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param dateInput a string containing the date supplied from the user.","lastModifiedDate":"2021-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @return a LocalDateTime object or null if failed to parse dateInput.","lastModifiedDate":"2021-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @see #parseDateString(DateTimeFormatter, String)","lastModifiedDate":"2021-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static LocalDate validateDate(String dateInput) throws DateTimeException {","lastModifiedDate":"2021-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assert dateInput !\u003d null : \"dateInput is null!\";","lastModifiedDate":"2021-03-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (dateInput.trim().equals(KEYWORD_TODAY)) {","lastModifiedDate":"2021-03-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return LocalDate.now();","lastModifiedDate":"2021-03-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        for (DateTimeFormatter dtf : POSSIBLE_DATE_FORMATS) {","lastModifiedDate":"2021-03-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            LocalDate date \u003d parseDateString(dtf, dateInput);","lastModifiedDate":"2021-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (date !\u003d null) {","lastModifiedDate":"2021-03-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                return date;","lastModifiedDate":"2021-03-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        throw new DateTimeException(\"input \\\"\" + dateInput + \"\\\" is an invalid date.\");","lastModifiedDate":"2021-04-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Validates the index supplied by the user.","lastModifiedDate":"2021-03-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Throws exception if the index is out of range or is negative.","lastModifiedDate":"2021-03-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @param inputToCheck index supplied by user to be validated.","lastModifiedDate":"2021-03-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @param records list of all records.","lastModifiedDate":"2021-03-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @return validated index.","lastModifiedDate":"2021-03-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @throws NumberFormatException when the inputToCheck contains non numeric.","lastModifiedDate":"2021-03-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws IndexOutOfBoundsException when the inputToCheck is less than zero, equals to zero or greater than the","lastModifiedDate":"2021-03-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *     size of the records.","lastModifiedDate":"2021-03-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static int validateIndex(String inputToCheck, RecordList records) throws NumberFormatException,","lastModifiedDate":"2021-03-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            IndexOutOfBoundsException {","lastModifiedDate":"2021-03-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        int recordNumberInList \u003d Integer.parseInt(inputToCheck) - 1;","lastModifiedDate":"2021-03-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        records.getRecordAt(recordNumberInList);","lastModifiedDate":"2021-03-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assert recordNumberInList \u003e -1 : \"recordNumberInList should be greater than 0 and non-negative\";","lastModifiedDate":"2021-03-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        FINUX_LOGGER.logInfo(LOGGER_OKAY_MESSAGE);","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return recordNumberInList;","lastModifiedDate":"2021-03-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Parse the stringAmount into a BigDecimal object.","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @param stringAmount contains a string representing the amount entered.","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @return a BigDecimal object.","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @throws NumberFormatException when the stringAmount contains non numeric.","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @throws CustomException when the numeric amount is negative or incorrect format.","lastModifiedDate":"2021-04-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static BigDecimal validateAmount(String stringAmount) throws NumberFormatException,","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            CustomException {","lastModifiedDate":"2021-03-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        BigDecimal amount \u003d new BigDecimal(stringAmount);","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!(amount.compareTo(new BigDecimal(\"0\")) \u003d\u003d 1)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new CustomException(\"amount must be greater than 0.\");","lastModifiedDate":"2021-03-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (amount.scale() \u003e 2) {","lastModifiedDate":"2021-04-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new CustomException(\"amount should be at most 2 decimal place.\");","lastModifiedDate":"2021-04-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (StringUtils.countMatches(stringAmount,\".\") \u003d\u003d 1) {","lastModifiedDate":"2021-04-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            validateDollarAndCent(stringAmount);","lastModifiedDate":"2021-04-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return amount;","lastModifiedDate":"2021-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-04-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Validate that the dollar and cent are in proper format.","lastModifiedDate":"2021-04-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @param stringAmount contains a string representing the amount entered.","lastModifiedDate":"2021-04-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @throws CustomException when the dollar or cent amount is missing.","lastModifiedDate":"2021-04-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-04-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private static void validateDollarAndCent(String stringAmount) throws CustomException {","lastModifiedDate":"2021-04-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        int decimalIndex \u003d StringUtils.indexOf(stringAmount,\".\");","lastModifiedDate":"2021-04-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (decimalIndex \u003d\u003d 0) {","lastModifiedDate":"2021-04-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new CustomException(\"please enter the dollar amount.\");","lastModifiedDate":"2021-04-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (decimalIndex \u003d\u003d stringAmount.length() - 1) {","lastModifiedDate":"2021-04-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new CustomException(\"please enter the cent amount.\");","lastModifiedDate":"2021-04-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"tzexern":9,"LeeHanYongAndy":4,"marklowsk":39,"-":92}},{"path":"src/main/java/seedu/duke/exception/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"    public CommandException(String message) {","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"        super(message);","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"    public CommandException(String message, String command) {","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"        this(command + \" Command - \" + message);","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"marklowsk":11}},{"path":"src/main/java/seedu/duke/exception/CustomException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"public class CustomException extends Exception {","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"    public CustomException(String message) {","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"        super(message);","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"LeeHanYongAndy":3,"marklowsk":4}},{"path":"src/main/java/seedu/duke/exception/FileLoadingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"public class FileLoadingException extends Exception {","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"jonahtwl":4}},{"path":"src/main/java/seedu/duke/exception/InvalidFileInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"public class InvalidFileInputException extends Exception {","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"jonahtwl":4}},{"path":"src/main/java/seedu/duke/parser/ParserHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"import org.apache.commons.lang3.StringUtils;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":" * Parser class to handle parsing of userInput.","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"LeeHanYongAndy"},"content":"public class ParserHandler {","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"    private final String[] startOptionArray;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"LeeHanYongAndy"},"content":"    private final String[] endOptionArray;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"LeeHanYongAndy"},"content":"    private final String[] middleOptionArray;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"LeeHanYongAndy"},"content":"    public ParserHandler() {","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":"        startOptionArray \u003d new String[]{\"-e\", \"-l\", \"-s\", \"-d\", \"-a\", \"-i\", \"-p\"};","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":"        endOptionArray \u003d new String[]{\" -e\", \" -l\", \" -s\", \" -d\", \" -a\", \" -i\", \" -p\"};","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"LeeHanYongAndy"},"content":"        middleOptionArray \u003d new String[]{\" -e \", \" -l \", \" -s \", \" -d \", \" -a \", \" -i \", \" -p \"};","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Parse the input into an ArrayList of String.","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param userInput contains a single string to be parsed.","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a ArrayList of String containing trimmed options and arguments.","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":"    public ArrayList\u003cString\u003e getParseInput(String userInput) {","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e extracted \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"LeeHanYongAndy"},"content":"        String trimmedInput \u003d userInput.stripLeading();","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"LeeHanYongAndy"},"content":"        return startExtraction(extracted, trimmedInput);","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Check if first block starts of option, then continue with extracting the input.","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param extracted ArrayList of String containing the initial parsed option or argument.","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param trimmedInput contains the remaining input that is needed to be parse.","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a ArrayList of String containing trimmed options and arguments.","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"LeeHanYongAndy"},"content":"    private ArrayList\u003cString\u003e startExtraction(ArrayList\u003cString\u003e extracted, String trimmedInput) {","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"LeeHanYongAndy"},"content":"        if (checkOptionStartWith(trimmedInput)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(trimmedInput.substring(0,2));","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"            trimmedInput \u003d trimmedInput.substring(2);","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"        return extractSubsequentPart(extracted, trimmedInput);","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"     * parse the remaining trimmed input before checking for last block.","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param extracted ArrayList of String containing the initial parsed option or argument.","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param trimmedInput contains the remaining input that is needed to be parse.","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a ArrayList of String containing trimmed options and arguments.","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"LeeHanYongAndy"},"content":"    private ArrayList\u003cString\u003e extractSubsequentPart(ArrayList\u003cString\u003e extracted, String trimmedInput) {","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"LeeHanYongAndy"},"content":"        int optionIndex \u003d getNextOptionIndex(trimmedInput);","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"LeeHanYongAndy"},"content":"        while (optionIndex !\u003d -1) {","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"LeeHanYongAndy"},"content":"            String argument \u003d trimmedInput.substring(0,optionIndex).trim();","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(argument);","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"LeeHanYongAndy"},"content":"            trimmedInput \u003d trimmedInput.substring(optionIndex).stripLeading();","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(trimmedInput.substring(0,2));","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"LeeHanYongAndy"},"content":"            trimmedInput \u003d trimmedInput.substring(2);","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"LeeHanYongAndy"},"content":"            optionIndex \u003d getNextOptionIndex(trimmedInput);","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"LeeHanYongAndy"},"content":"        return extractFinalPart(extracted, trimmedInput);","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Check and parse if last block in ArrayList of String ends with option.","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Add a empty string after the last block if last block ends with option.","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param extracted ArrayList of String containing the parsed option or argument.","lastModifiedDate":"2021-03-19"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param trimmedInput contains the final remaining input that is needed to be parse.","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return a ArrayList of String containing trimmed options and arguments.","lastModifiedDate":"2021-03-19"},{"lineNumber":70,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"LeeHanYongAndy"},"content":"    private ArrayList\u003cString\u003e extractFinalPart(ArrayList\u003cString\u003e extracted, String trimmedInput) {","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"LeeHanYongAndy"},"content":"        if (checkOptionEndWith(trimmedInput)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"LeeHanYongAndy"},"content":"            String argument \u003d trimmedInput.substring(0, (trimmedInput.length() - 2)).trim();","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(argument);","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(trimmedInput.substring(trimmedInput.length() - 2).trim());","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(\"\");","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"LeeHanYongAndy"},"content":"        } else {","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(trimmedInput.trim());","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":80,"author":{"gitId":"LeeHanYongAndy"},"content":"        return checkFirstBlock(extracted);","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":82,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":84,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Check and parse if first block in pre final ArrayList of String starts with help or creditscore.","lastModifiedDate":"2021-03-19"},{"lineNumber":85,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Add relevant string after the help or creditscore block.","lastModifiedDate":"2021-03-19"},{"lineNumber":86,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param extracted ArrayList of String containing the pre-final parsed option or argument.","lastModifiedDate":"2021-03-19"},{"lineNumber":87,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return the final parsed ArrayList of String containing the options and arguments.","lastModifiedDate":"2021-03-19"},{"lineNumber":88,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":89,"author":{"gitId":"LeeHanYongAndy"},"content":"    private ArrayList\u003cString\u003e checkFirstBlock(ArrayList\u003cString\u003e extracted) {","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"LeeHanYongAndy"},"content":"        String firstblock \u003d extracted.get(0);","lastModifiedDate":"2021-03-12"},{"lineNumber":91,"author":{"gitId":"LeeHanYongAndy"},"content":"        if (StringUtils.startsWithAny(firstblock, \"help \", \"creditscore \")) {","lastModifiedDate":"2021-03-19"},{"lineNumber":92,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] splitBlock \u003d firstblock.split(\" \", 2);","lastModifiedDate":"2021-03-12"},{"lineNumber":93,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.remove(0);","lastModifiedDate":"2021-03-12"},{"lineNumber":94,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(splitBlock[0]);","lastModifiedDate":"2021-03-12"},{"lineNumber":95,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(splitBlock[1].trim());","lastModifiedDate":"2021-03-12"},{"lineNumber":96,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":97,"author":{"gitId":"LeeHanYongAndy"},"content":"        if (StringUtils.startsWith(firstblock, \"help\") \u0026\u0026 firstblock.length() \u003d\u003d 4) {","lastModifiedDate":"2021-03-19"},{"lineNumber":98,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(1,\"all\");","lastModifiedDate":"2021-03-19"},{"lineNumber":99,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":100,"author":{"gitId":"LeeHanYongAndy"},"content":"        if (StringUtils.startsWith(firstblock, \"creditscore\") \u0026\u0026 firstblock.length() \u003d\u003d 11) {","lastModifiedDate":"2021-03-19"},{"lineNumber":101,"author":{"gitId":"LeeHanYongAndy"},"content":"            extracted.add(1,\"\");","lastModifiedDate":"2021-03-19"},{"lineNumber":102,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":103,"author":{"gitId":"LeeHanYongAndy"},"content":"        return extracted;","lastModifiedDate":"2021-03-08"},{"lineNumber":104,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":105,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":106,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Check if the input starts with valid options.","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param input string that is needed to be checked against.","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return true if input starts with valid options, else otherwise.","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"LeeHanYongAndy"},"content":"    private boolean checkOptionStartWith(String input) {","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"LeeHanYongAndy"},"content":"        return StringUtils.startsWithAny(input, startOptionArray);","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":114,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":115,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Check if the input ends with valid options.","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param input string that is needed to be checked against.","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return true if input ends with valid options, else otherwise.","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"LeeHanYongAndy"},"content":"    private boolean checkOptionEndWith(String input) {","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"LeeHanYongAndy"},"content":"        return StringUtils.endsWithAny(input, endOptionArray);","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":123,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":124,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Check the next valid option index.","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param leftOverString containing the remaining input to be checked against.","lastModifiedDate":"2021-03-14"},{"lineNumber":127,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return the first index if matches any valid options in input, else -1.","lastModifiedDate":"2021-03-14"},{"lineNumber":128,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":129,"author":{"gitId":"LeeHanYongAndy"},"content":"    private int getNextOptionIndex(String leftOverString) {","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"LeeHanYongAndy"},"content":"        return StringUtils.indexOfAny(leftOverString, middleOptionArray);","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":132,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"LeeHanYongAndy":132}},{"path":"src/main/java/seedu/duke/record/Expense.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"/**","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":" * A type of record for expenses.","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":" */","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"public class Expense extends Record {","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"    private static final String TYPE_EXPENSE \u003d \"E\";","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"    private static final String FILE_OUTPUT_STRING_FORMAT \u003d \"%s | %s | %f | %s\";","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"     * Constructor to create expense record.","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"     * @param amount expense amount.","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"     * @param issuedDate date of expenditure.","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"     * @param description expense details.","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"    public Expense(BigDecimal amount, LocalDate issuedDate, String description) {","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"        super(amount, issuedDate, description);","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"     * Rearrange the expense information to the format to be saved in the file.","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":"     * @return the formatted string of an expense record.","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"    public String convertFileFormat() {","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"        return String.format(FILE_OUTPUT_STRING_FORMAT, TYPE_EXPENSE, super.getDescription(),","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"                super.getAmount(), super.getIssueDate());","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"     * Refine expense information to be printed when the object is printed.","lastModifiedDate":"2021-03-19"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"     * The type of record is added.","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":"     * @return the formatted string of an expense record.","lastModifiedDate":"2021-03-19"},{"lineNumber":40,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"gerardtwk"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"gerardtwk"},"content":"    public String toString() {","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"tzexern"},"content":"        String formattedRecordType \u003d \"[\" + TYPE_EXPENSE + \"]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"tzexern"},"content":"        return formattedRecordType + super.toString();","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"tzexern":26,"jonahtwl":9,"LeeHanYongAndy":5,"marklowsk":2,"gerardtwk":4}},{"path":"src/main/java/seedu/duke/record/Loan.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"/**","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":" * A type of record for loans.","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":" */","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"public class Loan extends Record {","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"    private static final String TYPE_LOAN \u003d \"L\";","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"    private static final String FILE_OUTPUT_STRING_FORMAT \u003d \"%s | %s | %f | %s | %d | %s | %s\";","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"    private String borrowerName;","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"    private LocalDate returnDate;","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"    private boolean isReturn;","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"     * Constructor to create loan record.","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"     * @param amount      loan amount.","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"     * @param issuedDate  date of loan.","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"     * @param description loan details.","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"    public Loan(BigDecimal amount, LocalDate issuedDate, String description, String borrowerName) {","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"gerardtwk"},"content":"        this(amount, issuedDate, description, borrowerName, null, false);","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"     * Constructor to create loan record with predefined isReturn.","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"     * @param amount      loan amount.","lastModifiedDate":"2021-03-19"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"     * @param issuedDate  date of loan.","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":"     * @param description loan details.","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"tzexern"},"content":"     * @param isReturn    if the loan has been returned.","lastModifiedDate":"2021-03-19"},{"lineNumber":34,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"gerardtwk"},"content":"    public Loan(BigDecimal amount, LocalDate issuedDate, String description, String borrowerName, LocalDate returnDate,","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"gerardtwk"},"content":"                boolean isReturn) {","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":"        super(amount, issuedDate, description);","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"gerardtwk"},"content":"        this.borrowerName \u003d borrowerName;","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"gerardtwk"},"content":"        this.returnDate \u003d returnDate;","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"jonahtwl"},"content":"        this.isReturn \u003d isReturn;","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"gerardtwk"},"content":"    public String getBorrowerName() {","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"gerardtwk"},"content":"        return borrowerName;","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"gerardtwk"},"content":"    public LocalDate getReturnDate() {","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"gerardtwk"},"content":"        return returnDate;","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":52,"author":{"gitId":"tzexern"},"content":"     * Marks a loan as returned.","lastModifiedDate":"2021-03-19"},{"lineNumber":53,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":54,"author":{"gitId":"gerardtwk"},"content":"    public void markAsReturned(LocalDate returnDate) {","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"gerardtwk"},"content":"        this.isReturn \u003d true;","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"gerardtwk"},"content":"        this.returnDate \u003d returnDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Method to check if the loan have been returned.","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"LeeHanYongAndy"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @return true if loan is returned, false if loan is not return.","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"gerardtwk"},"content":"    public boolean isReturn() {","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"gerardtwk"},"content":"        return isReturn;","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":68,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":69,"author":{"gitId":"tzexern"},"content":"     * Rearrange the loan information to the format to be saved in the file.","lastModifiedDate":"2021-03-19"},{"lineNumber":70,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":71,"author":{"gitId":"tzexern"},"content":"     * @return the formatted string of each loan record.","lastModifiedDate":"2021-03-19"},{"lineNumber":72,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":73,"author":{"gitId":"jonahtwl"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"jonahtwl"},"content":"    public String convertFileFormat() {","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"jonahtwl"},"content":"        return String.format(FILE_OUTPUT_STRING_FORMAT, TYPE_LOAN, super.getDescription(),","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"jonahtwl"},"content":"                super.getAmount(), super.getIssueDate(), this.isReturn ? 1 : 0,","lastModifiedDate":"2021-03-26"},{"lineNumber":77,"author":{"gitId":"jonahtwl"},"content":"                this.borrowerName.toLowerCase(), this.returnDate);","lastModifiedDate":"2021-03-26"},{"lineNumber":78,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":81,"author":{"gitId":"tzexern"},"content":"     * Refine loan information to be printed when the object is printed.","lastModifiedDate":"2021-03-19"},{"lineNumber":82,"author":{"gitId":"tzexern"},"content":"     * The type of record is added.","lastModifiedDate":"2021-03-19"},{"lineNumber":83,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":84,"author":{"gitId":"tzexern"},"content":"     * @return the formatted string of a loan record.","lastModifiedDate":"2021-03-19"},{"lineNumber":85,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":86,"author":{"gitId":"gerardtwk"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":87,"author":{"gitId":"gerardtwk"},"content":"    public String toString() {","lastModifiedDate":"2021-03-11"},{"lineNumber":88,"author":{"gitId":"tzexern"},"content":"        String formattedRecordType \u003d \"[\" + TYPE_LOAN + \"]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":89,"author":{"gitId":"tzexern"},"content":"        String formattedLoanStatus \u003d \"[\" + (isReturn ? \"v\" : \" \") + \"]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":90,"author":{"gitId":"tzexern"},"content":"        return formattedRecordType + super.toString() + formattedLoanStatus;","lastModifiedDate":"2021-03-12"},{"lineNumber":91,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":92,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"tzexern":41,"jonahtwl":13,"LeeHanYongAndy":9,"marklowsk":2,"gerardtwk":27}},{"path":"src/main/java/seedu/duke/record/Record.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"/**","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":" * Represents a financial-related record to be stored in a list.","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":" */","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"public abstract class Record {","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"    private BigDecimal amount;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"    private LocalDate issueDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"    private String description;","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"    private static final String FILE_OUTPUT_STRING_FORMAT \u003d \"%s | %f | %s\";","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"     * Constructor to create a record.","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"     * @param amount amount to record.","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"     * @param issueDate date of issue to record.","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"     * @param description description of record.","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"    public Record(BigDecimal amount, LocalDate issueDate, String description) {","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"gerardtwk"},"content":"        this.issueDate \u003d issueDate;","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"gerardtwk"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"     * Gets the description or details of a record.","lastModifiedDate":"2021-03-19"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"     * @return description of record.","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"    public String getDescription() {","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"        return description;","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"     * Gets the amount in dollars of the record.","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":40,"author":{"gitId":"tzexern"},"content":"     * @return amount of the record.","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"    public BigDecimal getAmount() {","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"marklowsk"},"content":"        return amount;","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":47,"author":{"gitId":"tzexern"},"content":"     * Gets the date of issuance of the record.","lastModifiedDate":"2021-03-19"},{"lineNumber":48,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":49,"author":{"gitId":"tzexern"},"content":"     * @return issue date of the record.","lastModifiedDate":"2021-03-19"},{"lineNumber":50,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":51,"author":{"gitId":"marklowsk"},"content":"    public LocalDate getIssueDate() {","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"marklowsk"},"content":"        return issueDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":56,"author":{"gitId":"tzexern"},"content":"     * Rearrange the record information to the format to be saved in the file.","lastModifiedDate":"2021-03-19"},{"lineNumber":57,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":58,"author":{"gitId":"tzexern"},"content":"     * @return the formatted string of a record.","lastModifiedDate":"2021-03-19"},{"lineNumber":59,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":60,"author":{"gitId":"tzexern"},"content":"    public abstract String convertFileFormat();","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":63,"author":{"gitId":"tzexern"},"content":"     * Rearrange record information to be printed when the object is printed.","lastModifiedDate":"2021-03-19"},{"lineNumber":64,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":65,"author":{"gitId":"tzexern"},"content":"     * @return the formatted string of a record.","lastModifiedDate":"2021-03-19"},{"lineNumber":66,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":67,"author":{"gitId":"gerardtwk"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":68,"author":{"gitId":"gerardtwk"},"content":"    public String toString() {","lastModifiedDate":"2021-03-11"},{"lineNumber":69,"author":{"gitId":"tzexern"},"content":"        String formattedDate \u003d \"[\" + this.issueDate + \"]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"tzexern"},"content":"        String formattedDescription \u003d \" \" + this.description + \" \";","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"tzexern"},"content":"        return formattedDate + formattedDescription;","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":73,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"tzexern":39,"jonahtwl":9,"LeeHanYongAndy":7,"marklowsk":7,"gerardtwk":11}},{"path":"src/main/java/seedu/duke/record/RecordList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"public class RecordList {","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"    private ArrayList\u003cRecord\u003e recordList;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"    public RecordList() {","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"        this(new ArrayList\u003cRecord\u003e());","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"    public RecordList(ArrayList\u003cRecord\u003e recordListData) {","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"        this.recordList \u003d recordListData;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"    public void addRecord(Record recordToAdd) {","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"        recordList.add(recordToAdd);","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"    public Record getRecordAt(int recordIndex) {","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"        return recordList.get(recordIndex);","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":"    public Record deleteRecordAt(int recordIndex) {","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"        return recordList.remove(recordIndex);","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"    public void deleteAllRecords() {","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"        recordList.clear();","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"tzexern"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"tzexern"},"content":"        return recordList.isEmpty();","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"    public int getRecordCount() {","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"        return recordList.size();","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"tzexern":28,"jonahtwl":4,"LeeHanYongAndy":3,"marklowsk":1,"gerardtwk":4}},{"path":"src/main/java/seedu/duke/record/Saving.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"/**","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":" * A type of record for savings.","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":" */","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"public class Saving extends Record {","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"    private static final String TYPE_SAVING \u003d \"S\";","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"    private static final String FILE_OUTPUT_STRING_FORMAT \u003d \"%s | %s | %f | %s\";","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"     * Constructor to create saving record.","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"     * @param amount saving amount.","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"     * @param issueDate date of saving.","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"     * @param description saving details.","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"    public Saving(BigDecimal amount, LocalDate issueDate, String description) {","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":"        super(amount, issueDate, description);","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"tzexern"},"content":"     * Rearrange the saving information to the format to be saved in the file.","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":"     * @return the formatted string of a saving record.","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"    public String convertFileFormat() {","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"        return String.format(FILE_OUTPUT_STRING_FORMAT, TYPE_SAVING, super.getDescription(),","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"                super.getAmount(), super.getIssueDate());","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"     * Refine saving information to be printed when the object is printed.","lastModifiedDate":"2021-03-19"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"     * The type of record is added.","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":"     * @return the formatted string of a saving record.","lastModifiedDate":"2021-03-19"},{"lineNumber":40,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"gerardtwk"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"gerardtwk"},"content":"    public String toString() {","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"tzexern"},"content":"        String formattedRecordType \u003d \"[\" + TYPE_SAVING + \"]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"tzexern"},"content":"        return formattedRecordType + super.toString();","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"tzexern":23,"jonahtwl":9,"LeeHanYongAndy":5,"marklowsk":2,"gerardtwk":7}},{"path":"src/main/java/seedu/duke/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.command.CreditScoreReturnedLoansMap;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.exception.FileLoadingException;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.exception.InvalidFileInputException;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.Expense;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.Loan;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.Record;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.Saving;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"import java.io.File;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"gerardtwk"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"jonahtwl"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.common.Constant.MAX_CREDIT_SCORE;","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.common.Constant.MIN_CREDIT_SCORE;","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.common.Constant.FILE_DELIMITER_CHAR;","lastModifiedDate":"2021-04-06"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"import static seedu.duke.common.Constant.FINUX_LOGGER;","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"LeeHanYongAndy"},"content":"public class Storage {","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":"    private static final Path SAVED_FILE_PATH \u003d Paths.get(\"finux.txt\");","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"jonahtwl"},"content":"    private static final String REGEX_PATTERN_EXPENSE \u003d \"[E]\\\\s\\\\|\\\\s[^|]+\\\\s\\\\|\\\\s[^|]+\\\\s\\\\|\\\\s[^|]+\";","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"    private static final String REGEX_PATTERN_LOAN \u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":"            \"[L]\\\\s\\\\|\\\\s[^|]+\\\\s\\\\|\\\\s[^|]+\\\\s\\\\|\\\\s[^|]+\\\\s\\\\|\\\\s[01]\\\\s\\\\|\\\\s[^|]+\\\\s\\\\|\\\\s[^|]+\";","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"jonahtwl"},"content":"    private static final String REGEX_PATTERN_SAVING \u003d \"[S]\\\\s\\\\|\\\\s[^|]+\\\\s\\\\|\\\\s[^|]+\\\\s\\\\|\\\\s[^|]+\";","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"gerardtwk"},"content":"    private static final String REGEX_PATTERN_MAP_ENTRY_RAW_DATA \u003d \"[^|]+\\\\s\\\\|\\\\s\\\\d{1,3}\";","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"gerardtwk"},"content":"    private static final String FILE_DELIMITER_CHAR_REGEX \u003d \"\\\\|\";","lastModifiedDate":"2021-04-06"},{"lineNumber":41,"author":{"gitId":"gerardtwk"},"content":"    private static final String WHITESPACE_CHAR \u003d \" \";","lastModifiedDate":"2021-04-06"},{"lineNumber":42,"author":{"gitId":"gerardtwk"},"content":"    private static final int BORROWER_NAME_INDEX \u003d 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"gerardtwk"},"content":"    private static final int CREDIT_SCORE_RETURNED_LOANS_INDEX \u003d 1;","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"jonahtwl"},"content":"    private static final int INDEX_OF_DESCRIPTION \u003d 1;","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"jonahtwl"},"content":"    private static final int INDEX_OF_AMOUNT \u003d 2;","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"jonahtwl"},"content":"    private static final int INDEX_OF_DATE \u003d 3;","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"jonahtwl"},"content":"    private static final int INDEX_OF_IS_RETURN \u003d 4;","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"jonahtwl"},"content":"    private static final int INDEX_OF_NAME \u003d 5;","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"jonahtwl"},"content":"    private static final int INDEX_OF_RETURN_DATE \u003d 6;","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"gerardtwk"},"content":"    private ArrayList\u003cRecord\u003e recordList;","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"gerardtwk"},"content":"    private HashMap\u003cString, Integer\u003e creditScoreReturnedLoansMap;","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"gerardtwk"},"content":"    private Path dataFilePath;","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"jonahtwl"},"content":"    public Storage() {","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"jonahtwl"},"content":"        this(SAVED_FILE_PATH);","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"jonahtwl"},"content":"    public Storage(Path dataFilePath) {","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"jonahtwl"},"content":"        this.dataFilePath \u003d dataFilePath;","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"jonahtwl"},"content":"    private boolean saveFileExists() {","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"jonahtwl"},"content":"        return Files.exists(SAVED_FILE_PATH);","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"jonahtwl"},"content":"     * Saves the data in the recordList and creditScoreRetrunedLoansMap into a local text file.","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"jonahtwl"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"jonahtwl"},"content":"     * @param recordList is the recordList.","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"jonahtwl"},"content":"     * @param creditScoreReturnedLoansMap is the creditScoreReturnedLoansMap.","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"gerardtwk"},"content":"    public void saveData(RecordList recordList, CreditScoreReturnedLoansMap creditScoreReturnedLoansMap) {","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"gerardtwk"},"content":"        try {","lastModifiedDate":"2021-03-11"},{"lineNumber":74,"author":{"gitId":"gerardtwk"},"content":"            writeRecordListToSaveFile(recordList);","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"gerardtwk"},"content":"            writeMapToSaveFile(creditScoreReturnedLoansMap);","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"gerardtwk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-11"},{"lineNumber":77,"author":{"gitId":"jonahtwl"},"content":"            System.out.println(\"Error in saving data!\");","lastModifiedDate":"2021-04-05"},{"lineNumber":78,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":79,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":80,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":81,"author":{"gitId":"gerardtwk"},"content":"    private void writeRecordListToSaveFile(RecordList recordList) throws IOException {","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"jonahtwl"},"content":"        FileWriter fw \u003d new FileWriter(dataFilePath.toString(), false);","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"gerardtwk"},"content":"        for (int i \u003d 0; i \u003c recordList.getRecordCount(); i++) {","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"gerardtwk"},"content":"            Record currentRecord \u003d recordList.getRecordAt(i);","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"gerardtwk"},"content":"            fw.write(currentRecord.convertFileFormat() + System.lineSeparator());","lastModifiedDate":"2021-03-11"},{"lineNumber":86,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":87,"author":{"gitId":"jonahtwl"},"content":"        fw.close();","lastModifiedDate":"2021-03-09"},{"lineNumber":88,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":89,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":90,"author":{"gitId":"gerardtwk"},"content":"    private void writeMapToSaveFile(CreditScoreReturnedLoansMap creditScoreReturnedLoansMap) throws IOException {","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"gerardtwk"},"content":"        FileWriter fw \u003d new FileWriter(dataFilePath.toString(), true);","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"gerardtwk"},"content":"        for (String borrowerName : creditScoreReturnedLoansMap.getBorrowersNames()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"gerardtwk"},"content":"            int creditScore \u003d creditScoreReturnedLoansMap.getCreditScoreOf(borrowerName);","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"gerardtwk"},"content":"            fw.write(borrowerName + WHITESPACE_CHAR + FILE_DELIMITER_CHAR + WHITESPACE_CHAR + creditScore","lastModifiedDate":"2021-04-06"},{"lineNumber":95,"author":{"gitId":"gerardtwk"},"content":"                    + System.lineSeparator());","lastModifiedDate":"2021-04-06"},{"lineNumber":96,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"gerardtwk"},"content":"        fw.close();","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":101,"author":{"gitId":"jonahtwl"},"content":"     * Loads the RecordList from the file into FINUX.","lastModifiedDate":"2021-03-11"},{"lineNumber":102,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":103,"author":{"gitId":"gerardtwk"},"content":"    public void loadFile() throws FileLoadingException {","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"gerardtwk"},"content":"        recordList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"gerardtwk"},"content":"        creditScoreReturnedLoansMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"jonahtwl"},"content":"        try {","lastModifiedDate":"2021-03-09"},{"lineNumber":108,"author":{"gitId":"jonahtwl"},"content":"            if (!saveFileExists()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"jonahtwl"},"content":"                initSaveFile();","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"gerardtwk"},"content":"                return;","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"jonahtwl"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"jonahtwl"},"content":"            File loadFile \u003d dataFilePath.toFile();","lastModifiedDate":"2021-03-09"},{"lineNumber":113,"author":{"gitId":"jonahtwl"},"content":"            Scanner sc \u003d new Scanner(loadFile);","lastModifiedDate":"2021-03-09"},{"lineNumber":114,"author":{"gitId":"jonahtwl"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":115,"author":{"gitId":"jonahtwl"},"content":"                String rawData \u003d sc.nextLine();","lastModifiedDate":"2021-03-09"},{"lineNumber":116,"author":{"gitId":"gerardtwk"},"content":"                Object parsedObject \u003d parseRawData(rawData);","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"jonahtwl"},"content":"                processParsedObject(parsedObject);","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"jonahtwl"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"jonahtwl"},"content":"        } catch (InvalidFileInputException | IOException e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"jonahtwl"},"content":"            throw new FileLoadingException();","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":124,"author":{"gitId":"jonahtwl"},"content":"    private void processParsedObject(Object parsedObject) {","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"gerardtwk"},"content":"        if (parsedObject instanceof Record) {","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"gerardtwk"},"content":"            recordList.add((Record) parsedObject);","lastModifiedDate":"2021-03-31"},{"lineNumber":127,"author":{"gitId":"gerardtwk"},"content":"            assert !recordList.isEmpty() : \"RecordList should have data!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"gerardtwk"},"content":"        } else if (parsedObject !\u003d null) {","lastModifiedDate":"2021-03-24"},{"lineNumber":129,"author":{"gitId":"gerardtwk"},"content":"            String[] mapEntryRawData \u003d (String[]) parsedObject;","lastModifiedDate":"2021-03-31"},{"lineNumber":130,"author":{"gitId":"gerardtwk"},"content":"            creditScoreReturnedLoansMap.put(mapEntryRawData[BORROWER_NAME_INDEX],","lastModifiedDate":"2021-03-31"},{"lineNumber":131,"author":{"gitId":"gerardtwk"},"content":"                    Integer.parseInt(mapEntryRawData[CREDIT_SCORE_RETURNED_LOANS_INDEX]));","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":133,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":134,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":135,"author":{"gitId":"jonahtwl"},"content":"    private void initSaveFile() throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":136,"author":{"gitId":"jonahtwl"},"content":"        File newSaveFile \u003d new File(String.valueOf(SAVED_FILE_PATH));","lastModifiedDate":"2021-03-15"},{"lineNumber":137,"author":{"gitId":"jonahtwl"},"content":"        if (!newSaveFile.createNewFile()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"jonahtwl"},"content":"            FINUX_LOGGER.logWarning(\"File creation unsuccessful!\");","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"jonahtwl"},"content":"            throw new IOException(\"File creation unsuccessful!\");","lastModifiedDate":"2021-03-15"},{"lineNumber":140,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":141,"author":{"gitId":"jonahtwl"},"content":"        Ui.printSuccessfulFileCreation();","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":143,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":144,"author":{"gitId":"gerardtwk"},"content":"    private Object parseRawData(String rawData) throws InvalidFileInputException {","lastModifiedDate":"2021-03-24"},{"lineNumber":145,"author":{"gitId":"jonahtwl"},"content":"        if (Pattern.matches(REGEX_PATTERN_EXPENSE, rawData)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":146,"author":{"gitId":"jonahtwl"},"content":"            return loadExpense(rawData);","lastModifiedDate":"2021-03-11"},{"lineNumber":147,"author":{"gitId":"jonahtwl"},"content":"        } else if (Pattern.matches(REGEX_PATTERN_LOAN, rawData)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":148,"author":{"gitId":"jonahtwl"},"content":"            return loadLoan(rawData);","lastModifiedDate":"2021-03-11"},{"lineNumber":149,"author":{"gitId":"jonahtwl"},"content":"        } else if (Pattern.matches(REGEX_PATTERN_SAVING, rawData)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":150,"author":{"gitId":"jonahtwl"},"content":"            return loadSaving(rawData);","lastModifiedDate":"2021-03-11"},{"lineNumber":151,"author":{"gitId":"gerardtwk"},"content":"        } else if (Pattern.matches(REGEX_PATTERN_MAP_ENTRY_RAW_DATA, rawData)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":152,"author":{"gitId":"gerardtwk"},"content":"            return loadMapEntryRawData(rawData);","lastModifiedDate":"2021-03-31"},{"lineNumber":153,"author":{"gitId":"jonahtwl"},"content":"        } else {","lastModifiedDate":"2021-03-11"},{"lineNumber":154,"author":{"gitId":"jonahtwl"},"content":"            FINUX_LOGGER.logWarning(\"Invalid File Inputs!\");","lastModifiedDate":"2021-03-30"},{"lineNumber":155,"author":{"gitId":"jonahtwl"},"content":"            throw new InvalidFileInputException();","lastModifiedDate":"2021-03-13"},{"lineNumber":156,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":157,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":158,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":159,"author":{"gitId":"jonahtwl"},"content":"    private String extractArg(String rawData, int index) throws InvalidFileInputException {","lastModifiedDate":"2021-03-11"},{"lineNumber":160,"author":{"gitId":"gerardtwk"},"content":"        String[] args \u003d rawData.split(FILE_DELIMITER_CHAR_REGEX);","lastModifiedDate":"2021-04-06"},{"lineNumber":161,"author":{"gitId":"jonahtwl"},"content":"        if (index \u003c 0 || index \u003e args.length) {","lastModifiedDate":"2021-03-11"},{"lineNumber":162,"author":{"gitId":"jonahtwl"},"content":"            throw new InvalidFileInputException();","lastModifiedDate":"2021-03-13"},{"lineNumber":163,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":164,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":165,"author":{"gitId":"jonahtwl"},"content":"        return args[index].strip();","lastModifiedDate":"2021-03-11"},{"lineNumber":166,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":167,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":168,"author":{"gitId":"jonahtwl"},"content":"    private Record loadExpense(String rawData) throws InvalidFileInputException {","lastModifiedDate":"2021-03-11"},{"lineNumber":169,"author":{"gitId":"jonahtwl"},"content":"        BigDecimal amount;","lastModifiedDate":"2021-03-13"},{"lineNumber":170,"author":{"gitId":"jonahtwl"},"content":"        LocalDate issueDate;","lastModifiedDate":"2021-03-12"},{"lineNumber":171,"author":{"gitId":"jonahtwl"},"content":"        String description \u003d extractArg(rawData, INDEX_OF_DESCRIPTION);","lastModifiedDate":"2021-03-11"},{"lineNumber":172,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":173,"author":{"gitId":"jonahtwl"},"content":"        try {","lastModifiedDate":"2021-03-11"},{"lineNumber":174,"author":{"gitId":"jonahtwl"},"content":"            amount \u003d new BigDecimal(extractArg(rawData, INDEX_OF_AMOUNT));","lastModifiedDate":"2021-03-13"},{"lineNumber":175,"author":{"gitId":"jonahtwl"},"content":"            issueDate \u003d LocalDate.parse(extractArg(rawData, INDEX_OF_DATE), DateTimeFormatter.ofPattern(\"yyyy-M-d\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"jonahtwl"},"content":"        } catch (NumberFormatException | DateTimeParseException e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":177,"author":{"gitId":"jonahtwl"},"content":"            FINUX_LOGGER.logWarning(\"[E] Invalid data format!\");","lastModifiedDate":"2021-03-30"},{"lineNumber":178,"author":{"gitId":"jonahtwl"},"content":"            throw new InvalidFileInputException();","lastModifiedDate":"2021-03-13"},{"lineNumber":179,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":180,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":181,"author":{"gitId":"jonahtwl"},"content":"        return new Expense(amount, issueDate, description);","lastModifiedDate":"2021-03-11"},{"lineNumber":182,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":183,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":184,"author":{"gitId":"jonahtwl"},"content":"    private Record loadLoan(String rawData) throws InvalidFileInputException {","lastModifiedDate":"2021-03-11"},{"lineNumber":185,"author":{"gitId":"jonahtwl"},"content":"        BigDecimal amount;","lastModifiedDate":"2021-03-13"},{"lineNumber":186,"author":{"gitId":"jonahtwl"},"content":"        boolean isReturn;","lastModifiedDate":"2021-03-13"},{"lineNumber":187,"author":{"gitId":"jonahtwl"},"content":"        String description \u003d extractArg(rawData, INDEX_OF_DESCRIPTION);","lastModifiedDate":"2021-03-11"},{"lineNumber":188,"author":{"gitId":"jonahtwl"},"content":"        LocalDate issueDate;","lastModifiedDate":"2021-03-26"},{"lineNumber":189,"author":{"gitId":"jonahtwl"},"content":"        String borrowerName \u003d extractArg(rawData, INDEX_OF_NAME);","lastModifiedDate":"2021-03-26"},{"lineNumber":190,"author":{"gitId":"jonahtwl"},"content":"        LocalDate returnDate;","lastModifiedDate":"2021-03-26"},{"lineNumber":191,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":192,"author":{"gitId":"jonahtwl"},"content":"        try {","lastModifiedDate":"2021-03-11"},{"lineNumber":193,"author":{"gitId":"jonahtwl"},"content":"            amount \u003d new BigDecimal(extractArg(rawData, INDEX_OF_AMOUNT));","lastModifiedDate":"2021-03-13"},{"lineNumber":194,"author":{"gitId":"jonahtwl"},"content":"            isReturn \u003d Integer.parseInt(extractArg(rawData, INDEX_OF_IS_RETURN)) \u003d\u003d 1;","lastModifiedDate":"2021-03-31"},{"lineNumber":195,"author":{"gitId":"jonahtwl"},"content":"            issueDate \u003d LocalDate.parse(extractArg(rawData, INDEX_OF_DATE), DateTimeFormatter.ofPattern(\"yyyy-M-d\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":196,"author":{"gitId":"jonahtwl"},"content":"            if (extractArg(rawData, INDEX_OF_RETURN_DATE).equals(\"null\")) {","lastModifiedDate":"2021-03-26"},{"lineNumber":197,"author":{"gitId":"jonahtwl"},"content":"                returnDate \u003d null;","lastModifiedDate":"2021-03-26"},{"lineNumber":198,"author":{"gitId":"jonahtwl"},"content":"            } else {","lastModifiedDate":"2021-03-26"},{"lineNumber":199,"author":{"gitId":"jonahtwl"},"content":"                returnDate \u003d LocalDate.parse(extractArg(rawData, INDEX_OF_RETURN_DATE),","lastModifiedDate":"2021-03-26"},{"lineNumber":200,"author":{"gitId":"jonahtwl"},"content":"                        DateTimeFormatter.ofPattern(\"yyyy-M-d\"));","lastModifiedDate":"2021-03-26"},{"lineNumber":201,"author":{"gitId":"jonahtwl"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":202,"author":{"gitId":"jonahtwl"},"content":"        } catch (NumberFormatException | DateTimeParseException e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":203,"author":{"gitId":"jonahtwl"},"content":"            FINUX_LOGGER.logWarning(\"[L] Invalid data format!\");","lastModifiedDate":"2021-03-30"},{"lineNumber":204,"author":{"gitId":"jonahtwl"},"content":"            throw new InvalidFileInputException();","lastModifiedDate":"2021-03-13"},{"lineNumber":205,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":206,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":207,"author":{"gitId":"jonahtwl"},"content":"        return new Loan(amount, issueDate, description, borrowerName, returnDate, isReturn);","lastModifiedDate":"2021-03-26"},{"lineNumber":208,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":209,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":210,"author":{"gitId":"jonahtwl"},"content":"    private Record loadSaving(String rawData) throws InvalidFileInputException {","lastModifiedDate":"2021-03-11"},{"lineNumber":211,"author":{"gitId":"jonahtwl"},"content":"        BigDecimal amount;","lastModifiedDate":"2021-03-13"},{"lineNumber":212,"author":{"gitId":"jonahtwl"},"content":"        String description \u003d extractArg(rawData, INDEX_OF_DESCRIPTION);","lastModifiedDate":"2021-03-11"},{"lineNumber":213,"author":{"gitId":"jonahtwl"},"content":"        LocalDate issueDate;","lastModifiedDate":"2021-03-31"},{"lineNumber":214,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":215,"author":{"gitId":"jonahtwl"},"content":"        try {","lastModifiedDate":"2021-03-11"},{"lineNumber":216,"author":{"gitId":"jonahtwl"},"content":"            amount \u003d new BigDecimal(extractArg(rawData, INDEX_OF_AMOUNT));","lastModifiedDate":"2021-03-13"},{"lineNumber":217,"author":{"gitId":"jonahtwl"},"content":"            issueDate \u003d LocalDate.parse(extractArg(rawData, INDEX_OF_DATE), DateTimeFormatter.ofPattern(\"yyyy-M-d\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":218,"author":{"gitId":"jonahtwl"},"content":"        } catch (NumberFormatException | DateTimeParseException e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":219,"author":{"gitId":"jonahtwl"},"content":"            FINUX_LOGGER.logWarning(\"[S] Invalid data format!\");","lastModifiedDate":"2021-03-30"},{"lineNumber":220,"author":{"gitId":"jonahtwl"},"content":"            throw new InvalidFileInputException();","lastModifiedDate":"2021-03-13"},{"lineNumber":221,"author":{"gitId":"jonahtwl"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":222,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":223,"author":{"gitId":"jonahtwl"},"content":"        return new Saving(amount, issueDate, description);","lastModifiedDate":"2021-03-11"},{"lineNumber":224,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":225,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":226,"author":{"gitId":"gerardtwk"},"content":"    private String[] loadMapEntryRawData(String rawData) throws InvalidFileInputException {","lastModifiedDate":"2021-03-31"},{"lineNumber":227,"author":{"gitId":"gerardtwk"},"content":"        String[] mapEntryRawData \u003d rawData.split(FILE_DELIMITER_CHAR_REGEX);","lastModifiedDate":"2021-04-06"},{"lineNumber":228,"author":{"gitId":"gerardtwk"},"content":"        mapEntryRawData[BORROWER_NAME_INDEX] \u003d mapEntryRawData[BORROWER_NAME_INDEX].strip();","lastModifiedDate":"2021-03-31"},{"lineNumber":229,"author":{"gitId":"gerardtwk"},"content":"        mapEntryRawData[CREDIT_SCORE_RETURNED_LOANS_INDEX] \u003d mapEntryRawData[CREDIT_SCORE_RETURNED_LOANS_INDEX].strip();","lastModifiedDate":"2021-03-31"},{"lineNumber":230,"author":{"gitId":"gerardtwk"},"content":"        String borrowerNameInLowerCase \u003d mapEntryRawData[BORROWER_NAME_INDEX].toLowerCase();","lastModifiedDate":"2021-03-31"},{"lineNumber":231,"author":{"gitId":"gerardtwk"},"content":"        if (!borrowerNameInLowerCase.equals(mapEntryRawData[BORROWER_NAME_INDEX])) {","lastModifiedDate":"2021-03-31"},{"lineNumber":232,"author":{"gitId":"gerardtwk"},"content":"            throw new InvalidFileInputException();","lastModifiedDate":"2021-03-26"},{"lineNumber":233,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":234,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":235,"author":{"gitId":"gerardtwk"},"content":"        if (creditScoreReturnedLoansMap.containsKey(mapEntryRawData[BORROWER_NAME_INDEX])) {","lastModifiedDate":"2021-03-31"},{"lineNumber":236,"author":{"gitId":"gerardtwk"},"content":"            throw new InvalidFileInputException();","lastModifiedDate":"2021-03-26"},{"lineNumber":237,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":238,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":239,"author":{"gitId":"gerardtwk"},"content":"        int creditScore \u003d Integer.parseInt(mapEntryRawData[CREDIT_SCORE_RETURNED_LOANS_INDEX]);","lastModifiedDate":"2021-03-31"},{"lineNumber":240,"author":{"gitId":"gerardtwk"},"content":"        if (creditScore \u003c ((int) MIN_CREDIT_SCORE) || creditScore \u003e ((int) MAX_CREDIT_SCORE)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":241,"author":{"gitId":"gerardtwk"},"content":"            throw new InvalidFileInputException();","lastModifiedDate":"2021-03-26"},{"lineNumber":242,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":243,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":244,"author":{"gitId":"gerardtwk"},"content":"        return mapEntryRawData;","lastModifiedDate":"2021-03-31"},{"lineNumber":245,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":246,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":247,"author":{"gitId":"gerardtwk"},"content":"    public ArrayList\u003cRecord\u003e getRecordListData() {","lastModifiedDate":"2021-03-24"},{"lineNumber":248,"author":{"gitId":"gerardtwk"},"content":"        return recordList;","lastModifiedDate":"2021-03-31"},{"lineNumber":249,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":250,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":251,"author":{"gitId":"gerardtwk"},"content":"    public HashMap\u003cString, Integer\u003e getMapData() {","lastModifiedDate":"2021-03-31"},{"lineNumber":252,"author":{"gitId":"gerardtwk"},"content":"        return creditScoreReturnedLoansMap;","lastModifiedDate":"2021-03-31"},{"lineNumber":253,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":254,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"jonahtwl":166,"LeeHanYongAndy":4,"gerardtwk":84}},{"path":"src/main/java/seedu/duke/ui/HelpPage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"import static seedu.duke.ui.Ui.DIVIDER;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"LeeHanYongAndy"},"content":" * Handles all printing of help related command messages to the console.","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"LeeHanYongAndy"},"content":"public class HelpPage {","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String TAB_1SPACE \u003d \"\\t\";","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String TAB_2SPACE \u003d \"\\t\\t\";","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_HEADER_ADD \u003d \"add a record to the program\";","lastModifiedDate":"2021-04-05"},{"lineNumber":12,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_SYNOPSIS_ADD \u003d \"add [OPTION] [ARGUMENT]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_HEADER_LIST \u003d \"list all the records\";","lastModifiedDate":"2021-04-05"},{"lineNumber":14,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_SYNOPSIS_LIST \u003d \"list [OPTION]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_HEADER_VIEW \u003d \"view the total amount\";","lastModifiedDate":"2021-04-05"},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_SYNOPSIS_VIEW \u003d \"view [OPTION]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_HEADER_REMOVE \u003d \"remove a record in the program\";","lastModifiedDate":"2021-04-05"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_SYNOPSIS_REMOVE \u003d \"remove [OPTION] [ARGUMENT]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_HEADER_RETURN \u003d \"record a loan as returned\";","lastModifiedDate":"2021-04-05"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_SYNOPSIS_RETURN \u003d \"return [OPTION] [ARGUMENT]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_HEADER_EXIT \u003d \"terminate the program\";","lastModifiedDate":"2021-04-05"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_SYNOPSIS_EXIT \u003d \"exit (no option/argument needed)\";","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_HEADER_CREDITSCORE \u003d \"check a person credit rating\";","lastModifiedDate":"2021-04-05"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_SYNOPSIS_CREDITSCORE \u003d \"creditscore [ARGUMENT]\";","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_RECORD_TYPE \u003d \"-e, -l, -s\";","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_RECORD_TYPE_ALL \u003d \"-e, -l, -s, -a\";","lastModifiedDate":"2021-04-05"},{"lineNumber":27,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_RECORD_TYPE_DESCRIPTION \u003d \"[ARGUMENT] used as record description\";","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_RECORD_TYPE_LISTING \u003d \"used to list the chosen record type, \"","lastModifiedDate":"2021-04-05"},{"lineNumber":29,"author":{"gitId":"LeeHanYongAndy"},"content":"            + \"-a will list all records\";","lastModifiedDate":"2021-04-05"},{"lineNumber":30,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_RECORD_TYPE_VIEWING \u003d \"used to view total amount of chosen record type, \"","lastModifiedDate":"2021-04-05"},{"lineNumber":31,"author":{"gitId":"LeeHanYongAndy"},"content":"            + \"-a will show all category amount\";","lastModifiedDate":"2021-04-05"},{"lineNumber":32,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_AMOUNT \u003d \"-a\";","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_AMOUNT_DESCRIPTION \u003d \"[ARGUMENT] positive non zero numeric \"","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"            + \"amount associated with the record\";","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_DATE \u003d \"-d\";","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_DATE_DESCRIPTION \u003d \"[ARGUMENT] date associated with the record\";","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_DATE_RETURN_DESCRIPTION \u003d \"[ARGUMENT] date of loan return\";","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_OPTION_INDEX \u003d \"-i\";","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_OPTION_INDEX_DESCRIPTION \u003d \"[ARGUMENT] positive non zero integer \"","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"tzexern"},"content":"            + \"used to reference to index in program\";","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_PERSON \u003d \"-p \";","lastModifiedDate":"2021-03-19"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_PERSON_DESCRIPTION \u003d \"[ARGUMENT] the person name\";","lastModifiedDate":"2021-03-19"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_OPTION_PERSON_IN_ADD_DESCRIPTION \u003d \", use only with \u0027-l\u0027 option\";","lastModifiedDate":"2021-03-19"},{"lineNumber":44,"author":{"gitId":"tzexern"},"content":"    private static final String MAN_ARGUMENT_CREDITSCORE_DESCRIPTION \u003d \"[ARGUMENT] name of the person \"","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"tzexern"},"content":"            + \"to check their credit score\";","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_FORMAT_ADD \u003d \"add {-e | -l | -s} \u003cdescription\u003e -a \u003camount\u003e -d \u003cdate\u003e\";","lastModifiedDate":"2021-04-05"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_FORMAT_LIST \u003d \"list {-e | -l | -s | -a}\";","lastModifiedDate":"2021-04-05"},{"lineNumber":48,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_FORMAT_VIEW \u003d \"view {-e | -l | -s | -a}\";","lastModifiedDate":"2021-04-05"},{"lineNumber":49,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_FORMAT_RETURN \u003d \"return -i \u003cindex_of_loan\u003e -d \u003creturn_date\u003e\";","lastModifiedDate":"2021-04-05"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_FORMAT_REMOVE \u003d \"remove -i \u003cindex\u003e\";","lastModifiedDate":"2021-04-05"},{"lineNumber":51,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_FORMAT_CREDITSCORE \u003d \"creditscore \u003cperson\u003e\";","lastModifiedDate":"2021-04-05"},{"lineNumber":52,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_FORMAT_EXIT \u003d \"exit\";","lastModifiedDate":"2021-04-05"},{"lineNumber":53,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_HEADER_HELP \u003d \"see feature details\";","lastModifiedDate":"2021-04-05"},{"lineNumber":54,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MAN_FORMAT_HELP \u003d \"help \u003cfeature\u003e\";","lastModifiedDate":"2021-04-05"},{"lineNumber":55,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the respective help messages based on the command given.","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param command contains the command that help is needed to be printed.","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printHelp(String command) {","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"LeeHanYongAndy"},"content":"        switch (command) {","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"LeeHanYongAndy"},"content":"        case \"all\":","lastModifiedDate":"2021-03-19"},{"lineNumber":63,"author":{"gitId":"LeeHanYongAndy"},"content":"            printManPageAllShort();","lastModifiedDate":"2021-04-05"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"            break;","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"LeeHanYongAndy"},"content":"        case \"add\":","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"            printManPageAdd();","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"            break;","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"        case \"list\":","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"LeeHanYongAndy"},"content":"            printManPageList();","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"LeeHanYongAndy"},"content":"            break;","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"LeeHanYongAndy"},"content":"        case \"view\":","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"LeeHanYongAndy"},"content":"            printManPageView();","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"LeeHanYongAndy"},"content":"            break;","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"LeeHanYongAndy"},"content":"        case \"remove\":","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"LeeHanYongAndy"},"content":"            printManPageRemove();","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"LeeHanYongAndy"},"content":"            break;","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"LeeHanYongAndy"},"content":"        case \"return\":","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"LeeHanYongAndy"},"content":"            printManPageReturn();","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"LeeHanYongAndy"},"content":"            break;","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"tzexern"},"content":"        case \"creditscore\":","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"tzexern"},"content":"            printManPageCreditscore();","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"tzexern"},"content":"            break;","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"LeeHanYongAndy"},"content":"        case \"exit\":","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"LeeHanYongAndy"},"content":"            // Fallthrough","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"LeeHanYongAndy"},"content":"        default:","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"LeeHanYongAndy"},"content":"            printManPageExit();","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":89,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":90,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the man page header format.","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param header contains the description of the command.","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManHeader(String header) {","lastModifiedDate":"2021-03-12"},{"lineNumber":95,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(Ui.DIVIDER);","lastModifiedDate":"2021-04-05"},{"lineNumber":96,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"NAME\");","lastModifiedDate":"2021-03-12"},{"lineNumber":97,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + header);","lastModifiedDate":"2021-03-12"},{"lineNumber":98,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println();","lastModifiedDate":"2021-03-12"},{"lineNumber":99,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":100,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":101,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the man page synopsis format.","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param synopsis contains the availability options and argument.","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManSynopsis(String synopsis) {","lastModifiedDate":"2021-03-12"},{"lineNumber":106,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"SYNOPSIS\");","lastModifiedDate":"2021-03-12"},{"lineNumber":107,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + synopsis);","lastModifiedDate":"2021-03-12"},{"lineNumber":108,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println();","lastModifiedDate":"2021-03-12"},{"lineNumber":109,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":110,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":111,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the entire man page for all commands.","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManPageAllShort() {","lastModifiedDate":"2021-04-05"},{"lineNumber":115,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(Ui.DIVIDER);","lastModifiedDate":"2021-04-05"},{"lineNumber":116,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.printf(\"%-15s%-35s%-30s\\n\", \"Command\", \"Description\", \"Format\");","lastModifiedDate":"2021-04-05"},{"lineNumber":117,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(Ui.DIVIDER);","lastModifiedDate":"2021-04-05"},{"lineNumber":118,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.printf(\"%-15s%-35s%-30s\\n\", \"add\", MAN_HEADER_ADD, MAN_FORMAT_ADD);","lastModifiedDate":"2021-04-05"},{"lineNumber":119,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.printf(\"%-15s%-35s%-30s\\n\", \"list\", MAN_HEADER_LIST, MAN_FORMAT_LIST);","lastModifiedDate":"2021-04-05"},{"lineNumber":120,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.printf(\"%-15s%-35s%-30s\\n\", \"view\", MAN_HEADER_VIEW, MAN_FORMAT_VIEW);","lastModifiedDate":"2021-04-05"},{"lineNumber":121,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.printf(\"%-15s%-35s%-30s\\n\", \"return\", MAN_HEADER_RETURN, MAN_FORMAT_RETURN);","lastModifiedDate":"2021-04-05"},{"lineNumber":122,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.printf(\"%-15s%-35s%-30s\\n\", \"remove\", MAN_HEADER_REMOVE, MAN_FORMAT_REMOVE);","lastModifiedDate":"2021-04-05"},{"lineNumber":123,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.printf(\"%-15s%-35s%-30s\\n\", \"creditscore\", MAN_HEADER_CREDITSCORE, MAN_FORMAT_CREDITSCORE);","lastModifiedDate":"2021-04-05"},{"lineNumber":124,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.printf(\"%-15s%-35s%-30s\\n\", \"exit\", MAN_HEADER_EXIT, MAN_FORMAT_EXIT);","lastModifiedDate":"2021-04-05"},{"lineNumber":125,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.printf(\"%-15s%-35s%-30s\\n\", \"help\", MAN_HEADER_HELP, MAN_FORMAT_HELP);","lastModifiedDate":"2021-04-05"},{"lineNumber":126,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(Ui.DIVIDER);","lastModifiedDate":"2021-04-05"},{"lineNumber":127,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":128,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":129,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":130,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the man page for add command.","lastModifiedDate":"2021-03-14"},{"lineNumber":131,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManPageAdd() {","lastModifiedDate":"2021-03-12"},{"lineNumber":133,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManHeader(\"add - \" + MAN_HEADER_ADD);","lastModifiedDate":"2021-04-05"},{"lineNumber":134,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManSynopsis(MAN_SYNOPSIS_ADD);","lastModifiedDate":"2021-03-12"},{"lineNumber":135,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManDescriptionAdd();","lastModifiedDate":"2021-03-12"},{"lineNumber":136,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":137,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":138,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":139,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the add command options and arguments description.","lastModifiedDate":"2021-03-14"},{"lineNumber":140,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":141,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManDescriptionAdd() {","lastModifiedDate":"2021-03-12"},{"lineNumber":142,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"DESCRIPTION\");","lastModifiedDate":"2021-03-12"},{"lineNumber":143,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_RECORD_TYPE);","lastModifiedDate":"2021-03-12"},{"lineNumber":144,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_2SPACE + MAN_OPTION_RECORD_TYPE_DESCRIPTION);","lastModifiedDate":"2021-03-12"},{"lineNumber":145,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_AMOUNT);","lastModifiedDate":"2021-03-12"},{"lineNumber":146,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_2SPACE + MAN_OPTION_AMOUNT_DESCRIPTION);","lastModifiedDate":"2021-03-12"},{"lineNumber":147,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_DATE);","lastModifiedDate":"2021-03-12"},{"lineNumber":148,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_2SPACE + MAN_OPTION_DATE_DESCRIPTION);","lastModifiedDate":"2021-03-12"},{"lineNumber":149,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_PERSON);","lastModifiedDate":"2021-03-19"},{"lineNumber":150,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_2SPACE + MAN_OPTION_PERSON_DESCRIPTION + MAN_OPTION_PERSON_IN_ADD_DESCRIPTION);","lastModifiedDate":"2021-03-19"},{"lineNumber":151,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(Ui.DIVIDER);","lastModifiedDate":"2021-03-12"},{"lineNumber":152,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":153,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":154,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":155,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the man page for list command.","lastModifiedDate":"2021-03-14"},{"lineNumber":156,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":157,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManPageList() {","lastModifiedDate":"2021-03-12"},{"lineNumber":158,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManHeader(\"list - \" + MAN_HEADER_LIST);","lastModifiedDate":"2021-04-05"},{"lineNumber":159,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManSynopsis(MAN_SYNOPSIS_LIST);","lastModifiedDate":"2021-03-12"},{"lineNumber":160,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManDescriptionList();","lastModifiedDate":"2021-03-12"},{"lineNumber":161,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":162,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":163,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":164,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the list command options and arguments description.","lastModifiedDate":"2021-03-14"},{"lineNumber":165,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":166,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManDescriptionList() {","lastModifiedDate":"2021-03-12"},{"lineNumber":167,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"DESCRIPTION\");","lastModifiedDate":"2021-03-12"},{"lineNumber":168,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_RECORD_TYPE_ALL);","lastModifiedDate":"2021-04-05"},{"lineNumber":169,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println((TAB_2SPACE + MAN_OPTION_RECORD_TYPE_LISTING));","lastModifiedDate":"2021-03-12"},{"lineNumber":170,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(Ui.DIVIDER);","lastModifiedDate":"2021-03-12"},{"lineNumber":171,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":172,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":173,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":174,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the man page for view command.","lastModifiedDate":"2021-03-14"},{"lineNumber":175,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":176,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManPageView() {","lastModifiedDate":"2021-03-12"},{"lineNumber":177,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManHeader(\"view - \" + MAN_HEADER_VIEW);","lastModifiedDate":"2021-04-05"},{"lineNumber":178,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManSynopsis(MAN_SYNOPSIS_VIEW);","lastModifiedDate":"2021-03-12"},{"lineNumber":179,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManDescriptionView();","lastModifiedDate":"2021-03-12"},{"lineNumber":180,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":181,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":182,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":183,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the view command options and arguments description.","lastModifiedDate":"2021-03-14"},{"lineNumber":184,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":185,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManDescriptionView() {","lastModifiedDate":"2021-03-12"},{"lineNumber":186,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"DESCRIPTION\");","lastModifiedDate":"2021-03-12"},{"lineNumber":187,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_RECORD_TYPE_ALL);","lastModifiedDate":"2021-04-05"},{"lineNumber":188,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println((TAB_2SPACE + MAN_OPTION_RECORD_TYPE_VIEWING));","lastModifiedDate":"2021-03-12"},{"lineNumber":189,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-12"},{"lineNumber":190,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":191,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":192,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":193,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the man page for remove command.","lastModifiedDate":"2021-03-14"},{"lineNumber":194,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":195,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManPageRemove() {","lastModifiedDate":"2021-03-12"},{"lineNumber":196,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManHeader(\"remove - \" + MAN_HEADER_REMOVE);","lastModifiedDate":"2021-04-05"},{"lineNumber":197,"author":{"gitId":"tzexern"},"content":"        printManSynopsis(MAN_SYNOPSIS_REMOVE);","lastModifiedDate":"2021-03-12"},{"lineNumber":198,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManDescriptionRemove();","lastModifiedDate":"2021-03-12"},{"lineNumber":199,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":200,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":201,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":202,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the remove command options and arguments description.","lastModifiedDate":"2021-03-14"},{"lineNumber":203,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":204,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManDescriptionRemove() {","lastModifiedDate":"2021-03-12"},{"lineNumber":205,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"DESCRIPTION\");","lastModifiedDate":"2021-03-12"},{"lineNumber":206,"author":{"gitId":"tzexern"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_INDEX);","lastModifiedDate":"2021-03-12"},{"lineNumber":207,"author":{"gitId":"tzexern"},"content":"        System.out.println((TAB_2SPACE + MAN_OPTION_INDEX_DESCRIPTION));","lastModifiedDate":"2021-03-12"},{"lineNumber":208,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-12"},{"lineNumber":209,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":210,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":211,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":212,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the man page for return command.","lastModifiedDate":"2021-03-14"},{"lineNumber":213,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":214,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManPageReturn() {","lastModifiedDate":"2021-03-12"},{"lineNumber":215,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManHeader(\"return - \" + MAN_HEADER_RETURN);","lastModifiedDate":"2021-04-05"},{"lineNumber":216,"author":{"gitId":"tzexern"},"content":"        printManSynopsis(MAN_SYNOPSIS_RETURN);","lastModifiedDate":"2021-03-12"},{"lineNumber":217,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManDescriptionReturn();","lastModifiedDate":"2021-03-12"},{"lineNumber":218,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":219,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":220,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":221,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the return command options and arguments description.","lastModifiedDate":"2021-03-14"},{"lineNumber":222,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":223,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManDescriptionReturn() {","lastModifiedDate":"2021-03-12"},{"lineNumber":224,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"DESCRIPTION\");","lastModifiedDate":"2021-03-12"},{"lineNumber":225,"author":{"gitId":"tzexern"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_INDEX);","lastModifiedDate":"2021-03-12"},{"lineNumber":226,"author":{"gitId":"tzexern"},"content":"        System.out.println((TAB_2SPACE + MAN_OPTION_INDEX_DESCRIPTION));","lastModifiedDate":"2021-03-12"},{"lineNumber":227,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_1SPACE + MAN_OPTION_DATE);","lastModifiedDate":"2021-03-19"},{"lineNumber":228,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(TAB_2SPACE + MAN_OPTION_DATE_RETURN_DESCRIPTION);","lastModifiedDate":"2021-03-19"},{"lineNumber":229,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-12"},{"lineNumber":230,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":231,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":232,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":233,"author":{"gitId":"tzexern"},"content":"     * Prints the man page for creditscore command.","lastModifiedDate":"2021-03-23"},{"lineNumber":234,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":235,"author":{"gitId":"tzexern"},"content":"    public static void printManPageCreditscore() {","lastModifiedDate":"2021-03-23"},{"lineNumber":236,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManHeader(\"creditscore - \" + MAN_HEADER_CREDITSCORE);","lastModifiedDate":"2021-04-05"},{"lineNumber":237,"author":{"gitId":"tzexern"},"content":"        printManSynopsis(MAN_SYNOPSIS_CREDITSCORE);","lastModifiedDate":"2021-03-23"},{"lineNumber":238,"author":{"gitId":"tzexern"},"content":"        printManDescriptionCreditscore();","lastModifiedDate":"2021-03-23"},{"lineNumber":239,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":240,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":241,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":242,"author":{"gitId":"tzexern"},"content":"     * Prints the creditscore command options arguments description.","lastModifiedDate":"2021-03-23"},{"lineNumber":243,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":244,"author":{"gitId":"tzexern"},"content":"    public static void printManDescriptionCreditscore() {","lastModifiedDate":"2021-03-23"},{"lineNumber":245,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"DESCRIPTION\");","lastModifiedDate":"2021-03-23"},{"lineNumber":246,"author":{"gitId":"tzexern"},"content":"        System.out.println(TAB_1SPACE + MAN_ARGUMENT_CREDITSCORE_DESCRIPTION);","lastModifiedDate":"2021-03-23"},{"lineNumber":247,"author":{"gitId":"tzexern"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-23"},{"lineNumber":248,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":249,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":250,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":251,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the man page for exit command.","lastModifiedDate":"2021-03-14"},{"lineNumber":252,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":253,"author":{"gitId":"LeeHanYongAndy"},"content":"    public static void printManPageExit() {","lastModifiedDate":"2021-03-12"},{"lineNumber":254,"author":{"gitId":"LeeHanYongAndy"},"content":"        printManHeader(\"exit - \" + MAN_HEADER_EXIT);","lastModifiedDate":"2021-04-05"},{"lineNumber":255,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(\"SYNOPSIS\");","lastModifiedDate":"2021-03-12"},{"lineNumber":256,"author":{"gitId":"tzexern"},"content":"        System.out.println(TAB_1SPACE + MAN_SYNOPSIS_EXIT);","lastModifiedDate":"2021-03-12"},{"lineNumber":257,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-12"},{"lineNumber":258,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":259,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"tzexern":36,"LeeHanYongAndy":223}},{"path":"src/main/java/seedu/duke/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.Record;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Expense;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Saving;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Loan;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.math.RoundingMode;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":" * Handles all user interactions and printing of text to the console.","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"LeeHanYongAndy"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"LeeHanYongAndy"},"content":"public class Ui {","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"    protected static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"    private static final String logo \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"            + \"||    $$$$$$  $$$$$$  $$    $$  $$    $$   $$    $$    ||\\n\"","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":"            + \"||    $$        $$    $$$   $$  $$    $$    $$  $$     ||\\n\"","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"            + \"||    $$$$$$    $$    $$ $$ $$  $$    $$      $$       ||\\n\"","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":"            + \"||    $$        $$    $$   $$$  $$    $$    $$  $$     ||\\n\"","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"jonahtwl"},"content":"            + \"||    $$      $$$$$$  $$    $$   $$$$$$    $$    $$    ||\\n\"","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":"            + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":"    private static final String MESSAGE_GOODBYE \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"            \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"            + \"||   $$  $$  $$    $$   $$$$$   $$$$$$$$     $$$$$   $$  $$  $$    ||\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"            + \"||   $$  $$  $$    $$  $$   $$     $$       $$   $$  $$  $$  $$    ||\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"            + \"||   $$$$$$  $$    $$  $$$$$$$     $$       $$$$$$$  $$$$$$  $$    ||\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"            + \"||   $$  $$  $$    $$  $$   $$     $$       $$   $$  $$  $$        ||\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":"            + \"||   $$  $$   $$$$$$   $$   $$     $$       $$   $$  $$  $$  $$    ||\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"jonahtwl"},"content":"            + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":"    private static final String MESSAGE_LOADING \u003d \"Loading from save file... \";","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"jonahtwl"},"content":"    private static final String MESSAGE_FILE_CREATION_SUCCESS \u003d \"New save file created!\";","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":"    private static final String MESSAGE_EXPENSE_SUCCESSFULLY_ADDED \u003d \"Expense has been added...\";","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"tzexern"},"content":"    private static final String MESSAGE_LOAN_SUCCESSFULLY_ADDED \u003d \"Loan has been added...\";","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"tzexern"},"content":"    private static final String MESSAGE_SAVING_SUCCESSFULLY_ADDED \u003d \"Saving has been added...\";","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MESSAGE_TOTAL_EXPENSE \u003d \"The total amount for expense is $\";","lastModifiedDate":"2021-04-03"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MESSAGE_TOTAL_LOAN \u003d \"The total amount for loan is $\";","lastModifiedDate":"2021-04-03"},{"lineNumber":44,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final String MESSAGE_TOTAL_SAVING \u003d \"The total amount for saving is $\";","lastModifiedDate":"2021-04-03"},{"lineNumber":45,"author":{"gitId":"jonahtwl"},"content":"    private static final String MESSAGE_FAILED_INIT \u003d \"File or contents corrupted! Bad Init!\\nSystem will now exit!\";","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"gerardtwk"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"gerardtwk"},"content":"     * Decorative prefix for the FINUX Interface.","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"gerardtwk"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"jonahtwl"},"content":"    private static final String FINUX_PREFIX \u003d \"$$\";","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"jonahtwl"},"content":"    private final Scanner input;","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"jonahtwl"},"content":"    public Ui() {","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"jonahtwl"},"content":"        this(System.in);","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"jonahtwl"},"content":"    public Ui(InputStream in) {","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"jonahtwl"},"content":"        this.input \u003d new Scanner(in);","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":64,"author":{"gitId":"jonahtwl"},"content":"     * Prints the initialization error with the application UI.","lastModifiedDate":"2021-03-20"},{"lineNumber":65,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":66,"author":{"gitId":"jonahtwl"},"content":"    public void printInitError() {","lastModifiedDate":"2021-04-06"},{"lineNumber":67,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"jonahtwl"},"content":"        System.out.println();","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(MESSAGE_FAILED_INIT);","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"jonahtwl"},"content":"        System.out.println();","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":75,"author":{"gitId":"jonahtwl"},"content":"     * Prints the success message when the file is created.","lastModifiedDate":"2021-03-20"},{"lineNumber":76,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":77,"author":{"gitId":"jonahtwl"},"content":"    public static void printSuccessfulFileCreation() {","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(MESSAGE_FILE_CREATION_SUCCESS);","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":84,"author":{"gitId":"jonahtwl"},"content":"     * Prints the current input that is added into the RecordList.","lastModifiedDate":"2021-03-20"},{"lineNumber":85,"author":{"gitId":"jonahtwl"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":86,"author":{"gitId":"jonahtwl"},"content":"     * @param recordAdded is the current record that is added into the RecordList.","lastModifiedDate":"2021-03-20"},{"lineNumber":87,"author":{"gitId":"jonahtwl"},"content":"     * @param index is the index of the current record that is added into the RecordList.","lastModifiedDate":"2021-03-20"},{"lineNumber":88,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":89,"author":{"gitId":"tzexern"},"content":"    public void printSuccessfulAdd(Record recordAdded, int index) {","lastModifiedDate":"2021-03-12"},{"lineNumber":90,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-09"},{"lineNumber":91,"author":{"gitId":"jonahtwl"},"content":"        System.out.println();","lastModifiedDate":"2021-03-09"},{"lineNumber":92,"author":{"gitId":"tzexern"},"content":"        if (recordAdded instanceof Expense) {","lastModifiedDate":"2021-03-12"},{"lineNumber":93,"author":{"gitId":"tzexern"},"content":"            System.out.println(MESSAGE_EXPENSE_SUCCESSFULLY_ADDED);","lastModifiedDate":"2021-03-12"},{"lineNumber":94,"author":{"gitId":"tzexern"},"content":"        } else if (recordAdded instanceof Loan) {","lastModifiedDate":"2021-03-12"},{"lineNumber":95,"author":{"gitId":"tzexern"},"content":"            System.out.println(MESSAGE_LOAN_SUCCESSFULLY_ADDED);","lastModifiedDate":"2021-03-12"},{"lineNumber":96,"author":{"gitId":"tzexern"},"content":"        } else {","lastModifiedDate":"2021-03-12"},{"lineNumber":97,"author":{"gitId":"tzexern"},"content":"            System.out.println(MESSAGE_SAVING_SUCCESSFULLY_ADDED);","lastModifiedDate":"2021-03-12"},{"lineNumber":98,"author":{"gitId":"tzexern"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":99,"author":{"gitId":"tzexern"},"content":"        int formattedIndex \u003d index - 1;","lastModifiedDate":"2021-03-12"},{"lineNumber":100,"author":{"gitId":"tzexern"},"content":"        System.out.println();","lastModifiedDate":"2021-03-12"},{"lineNumber":101,"author":{"gitId":"tzexern"},"content":"        printIndex(formattedIndex);","lastModifiedDate":"2021-03-12"},{"lineNumber":102,"author":{"gitId":"tzexern"},"content":"        System.out.println(recordAdded);","lastModifiedDate":"2021-03-12"},{"lineNumber":103,"author":{"gitId":"jonahtwl"},"content":"        System.out.println();","lastModifiedDate":"2021-03-09"},{"lineNumber":104,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-09"},{"lineNumber":105,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":106,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":107,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":108,"author":{"gitId":"jonahtwl"},"content":"     * Prints the FINUX CLI prefix and gets the user input.","lastModifiedDate":"2021-03-20"},{"lineNumber":109,"author":{"gitId":"jonahtwl"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":110,"author":{"gitId":"jonahtwl"},"content":"     * @return the current user input.","lastModifiedDate":"2021-03-20"},{"lineNumber":111,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":112,"author":{"gitId":"jonahtwl"},"content":"    public String getUserInput() {","lastModifiedDate":"2021-03-08"},{"lineNumber":113,"author":{"gitId":"jonahtwl"},"content":"        System.out.print(FINUX_PREFIX + \" \");","lastModifiedDate":"2021-03-08"},{"lineNumber":114,"author":{"gitId":"gerardtwk"},"content":"        try {","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"jonahtwl"},"content":"            return input.nextLine().strip();","lastModifiedDate":"2021-03-13"},{"lineNumber":116,"author":{"gitId":"gerardtwk"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"gerardtwk"},"content":"            return \"exit\";","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":120,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":121,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":122,"author":{"gitId":"jonahtwl"},"content":"     * Prints the FINUX welcome message with the FINUX logo.","lastModifiedDate":"2021-03-20"},{"lineNumber":123,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":124,"author":{"gitId":"jonahtwl"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2021-03-08"},{"lineNumber":125,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-03-08"},{"lineNumber":126,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(MESSAGE_LOADING);","lastModifiedDate":"2021-03-15"},{"lineNumber":128,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":130,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":131,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":132,"author":{"gitId":"jonahtwl"},"content":"     * Prints the exit message.","lastModifiedDate":"2021-03-20"},{"lineNumber":133,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":134,"author":{"gitId":"jonahtwl"},"content":"    public void printGoodByeMessage() {","lastModifiedDate":"2021-03-08"},{"lineNumber":135,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(MESSAGE_GOODBYE);","lastModifiedDate":"2021-03-08"},{"lineNumber":136,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":137,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":138,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":139,"author":{"gitId":"jonahtwl"},"content":"     * Prints the message parsed into it with the dividers.","lastModifiedDate":"2021-03-20"},{"lineNumber":140,"author":{"gitId":"jonahtwl"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":141,"author":{"gitId":"jonahtwl"},"content":"     * @param message is the concatenated message and the Record object string.","lastModifiedDate":"2021-03-20"},{"lineNumber":142,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":143,"author":{"gitId":"marklowsk"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2021-03-09"},{"lineNumber":144,"author":{"gitId":"marklowsk"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-09"},{"lineNumber":145,"author":{"gitId":"marklowsk"},"content":"        System.out.println(message);","lastModifiedDate":"2021-03-09"},{"lineNumber":146,"author":{"gitId":"marklowsk"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-09"},{"lineNumber":147,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":148,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":149,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":150,"author":{"gitId":"jonahtwl"},"content":"     * Prints the entire list of all Expenses from the RecordList.","lastModifiedDate":"2021-03-20"},{"lineNumber":151,"author":{"gitId":"jonahtwl"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":152,"author":{"gitId":"jonahtwl"},"content":"     * @param recordList is the RecordList of all Records.","lastModifiedDate":"2021-03-20"},{"lineNumber":153,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":154,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void printExpenses(RecordList recordList) {","lastModifiedDate":"2021-03-11"},{"lineNumber":155,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":156,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\"Here is your Expense list:\");","lastModifiedDate":"2021-03-15"},{"lineNumber":157,"author":{"gitId":"gerardtwk"},"content":"        for (int i \u003d 0; i \u003c recordList.getRecordCount(); i++) {","lastModifiedDate":"2021-03-11"},{"lineNumber":158,"author":{"gitId":"gerardtwk"},"content":"            Record currentRecord \u003d recordList.getRecordAt(i);","lastModifiedDate":"2021-03-11"},{"lineNumber":159,"author":{"gitId":"gerardtwk"},"content":"            if (currentRecord instanceof Expense) {","lastModifiedDate":"2021-03-11"},{"lineNumber":160,"author":{"gitId":"tzexern"},"content":"                printIndex(i);","lastModifiedDate":"2021-03-12"},{"lineNumber":161,"author":{"gitId":"gerardtwk"},"content":"                System.out.println(currentRecord);","lastModifiedDate":"2021-03-11"},{"lineNumber":162,"author":{"gitId":"gerardtwk"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":163,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":164,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":165,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":166,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":167,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":168,"author":{"gitId":"jonahtwl"},"content":"     * Prints the entire list of all Loans from the RecordList.","lastModifiedDate":"2021-03-20"},{"lineNumber":169,"author":{"gitId":"jonahtwl"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":170,"author":{"gitId":"jonahtwl"},"content":"     * @param recordList is the RecordList of all Records.","lastModifiedDate":"2021-03-20"},{"lineNumber":171,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":172,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void printLoans(RecordList recordList) {","lastModifiedDate":"2021-03-11"},{"lineNumber":173,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":174,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\"Here is your Loan list:\");","lastModifiedDate":"2021-03-15"},{"lineNumber":175,"author":{"gitId":"gerardtwk"},"content":"        for (int i \u003d 0; i \u003c recordList.getRecordCount(); i++) {","lastModifiedDate":"2021-03-11"},{"lineNumber":176,"author":{"gitId":"gerardtwk"},"content":"            Record currentRecord \u003d recordList.getRecordAt(i);","lastModifiedDate":"2021-03-11"},{"lineNumber":177,"author":{"gitId":"gerardtwk"},"content":"            if (currentRecord instanceof Loan) {","lastModifiedDate":"2021-03-11"},{"lineNumber":178,"author":{"gitId":"tzexern"},"content":"                printIndex(i);","lastModifiedDate":"2021-03-12"},{"lineNumber":179,"author":{"gitId":"gerardtwk"},"content":"                System.out.println(currentRecord);","lastModifiedDate":"2021-03-11"},{"lineNumber":180,"author":{"gitId":"gerardtwk"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":181,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":182,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":183,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":184,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":185,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":186,"author":{"gitId":"jonahtwl"},"content":"     * Prints the entire list of all Savings from the RecordList.","lastModifiedDate":"2021-03-20"},{"lineNumber":187,"author":{"gitId":"jonahtwl"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":188,"author":{"gitId":"jonahtwl"},"content":"     * @param recordList is the RecordList of all Records.","lastModifiedDate":"2021-03-20"},{"lineNumber":189,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":190,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void printSavings(RecordList recordList) {","lastModifiedDate":"2021-03-11"},{"lineNumber":191,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":192,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(\"Here is your Saving list:\");","lastModifiedDate":"2021-03-15"},{"lineNumber":193,"author":{"gitId":"gerardtwk"},"content":"        for (int i \u003d 0; i \u003c recordList.getRecordCount(); i++) {","lastModifiedDate":"2021-03-11"},{"lineNumber":194,"author":{"gitId":"gerardtwk"},"content":"            Record currentRecord \u003d recordList.getRecordAt(i);","lastModifiedDate":"2021-03-11"},{"lineNumber":195,"author":{"gitId":"gerardtwk"},"content":"            if (currentRecord instanceof Saving) {","lastModifiedDate":"2021-03-11"},{"lineNumber":196,"author":{"gitId":"tzexern"},"content":"                printIndex(i);","lastModifiedDate":"2021-03-12"},{"lineNumber":197,"author":{"gitId":"gerardtwk"},"content":"                System.out.println(currentRecord);","lastModifiedDate":"2021-03-11"},{"lineNumber":198,"author":{"gitId":"gerardtwk"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":199,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":200,"author":{"gitId":"gerardtwk"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":201,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":202,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":203,"author":{"gitId":"tzexern"},"content":"    /**","lastModifiedDate":"2021-04-03"},{"lineNumber":204,"author":{"gitId":"tzexern"},"content":"     * Prints the entire list of all Records from the RecordList.","lastModifiedDate":"2021-04-03"},{"lineNumber":205,"author":{"gitId":"tzexern"},"content":"     *","lastModifiedDate":"2021-04-03"},{"lineNumber":206,"author":{"gitId":"tzexern"},"content":"     * @param recordList is the RecordList of all Records.","lastModifiedDate":"2021-04-03"},{"lineNumber":207,"author":{"gitId":"tzexern"},"content":"     */","lastModifiedDate":"2021-04-03"},{"lineNumber":208,"author":{"gitId":"tzexern"},"content":"    public void printAllRecords(RecordList recordList) {","lastModifiedDate":"2021-04-03"},{"lineNumber":209,"author":{"gitId":"tzexern"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-04-03"},{"lineNumber":210,"author":{"gitId":"tzexern"},"content":"        System.out.println(\"Here is you Records list:\");","lastModifiedDate":"2021-04-03"},{"lineNumber":211,"author":{"gitId":"tzexern"},"content":"        for (int i \u003d 0; i \u003c recordList.getRecordCount(); i++) {","lastModifiedDate":"2021-04-03"},{"lineNumber":212,"author":{"gitId":"tzexern"},"content":"            Record currentRecord \u003d recordList.getRecordAt(i);","lastModifiedDate":"2021-04-03"},{"lineNumber":213,"author":{"gitId":"tzexern"},"content":"            printIndex(i);","lastModifiedDate":"2021-04-03"},{"lineNumber":214,"author":{"gitId":"tzexern"},"content":"            System.out.println(currentRecord);","lastModifiedDate":"2021-04-03"},{"lineNumber":215,"author":{"gitId":"tzexern"},"content":"        }","lastModifiedDate":"2021-04-03"},{"lineNumber":216,"author":{"gitId":"tzexern"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-04-03"},{"lineNumber":217,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-04-03"},{"lineNumber":218,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":219,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":220,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the total expenses in 2 decimal place.","lastModifiedDate":"2021-03-14"},{"lineNumber":221,"author":{"gitId":"jonahtwl"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":222,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList contains the full list of records.","lastModifiedDate":"2021-03-14"},{"lineNumber":223,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":224,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void printTotalAmountExpense(RecordList recordList) {","lastModifiedDate":"2021-03-11"},{"lineNumber":225,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":226,"author":{"gitId":"LeeHanYongAndy"},"content":"        BigDecimal totalAmount \u003d new BigDecimal(\"0\");","lastModifiedDate":"2021-03-13"},{"lineNumber":227,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (int i \u003d 0; i \u003c recordList.getRecordCount(); i++) {","lastModifiedDate":"2021-03-11"},{"lineNumber":228,"author":{"gitId":"LeeHanYongAndy"},"content":"            Record currentRecord \u003d recordList.getRecordAt(i);","lastModifiedDate":"2021-03-11"},{"lineNumber":229,"author":{"gitId":"LeeHanYongAndy"},"content":"            if (currentRecord instanceof Expense) {","lastModifiedDate":"2021-03-11"},{"lineNumber":230,"author":{"gitId":"LeeHanYongAndy"},"content":"                totalAmount \u003d totalAmount.add(currentRecord.getAmount());","lastModifiedDate":"2021-03-13"},{"lineNumber":231,"author":{"gitId":"LeeHanYongAndy"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":232,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":233,"author":{"gitId":"jonahtwl"},"content":"        assert !(totalAmount.compareTo(BigDecimal.ZERO) \u003d\u003d -1) : \"Expenses cannot be negative!\";","lastModifiedDate":"2021-03-20"},{"lineNumber":234,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(MESSAGE_TOTAL_EXPENSE + totalAmount.setScale(2, RoundingMode.HALF_EVEN));","lastModifiedDate":"2021-03-13"},{"lineNumber":235,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":236,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":237,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":238,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":239,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the total loan in 2 decimal place.","lastModifiedDate":"2021-03-14"},{"lineNumber":240,"author":{"gitId":"jonahtwl"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":241,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList contains the full list of records.","lastModifiedDate":"2021-03-14"},{"lineNumber":242,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":243,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void printTotalAmountLoan(RecordList recordList) {","lastModifiedDate":"2021-03-11"},{"lineNumber":244,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":245,"author":{"gitId":"LeeHanYongAndy"},"content":"        BigDecimal totalAmount \u003d new BigDecimal(\"0\");","lastModifiedDate":"2021-03-13"},{"lineNumber":246,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (int i \u003d 0; i \u003c recordList.getRecordCount(); i++) {","lastModifiedDate":"2021-03-11"},{"lineNumber":247,"author":{"gitId":"LeeHanYongAndy"},"content":"            Record currentRecord \u003d recordList.getRecordAt(i);","lastModifiedDate":"2021-03-11"},{"lineNumber":248,"author":{"gitId":"LeeHanYongAndy"},"content":"            if (currentRecord instanceof Loan \u0026\u0026 !((Loan) currentRecord).isReturn()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":249,"author":{"gitId":"LeeHanYongAndy"},"content":"                totalAmount \u003d totalAmount.add(currentRecord.getAmount());","lastModifiedDate":"2021-03-13"},{"lineNumber":250,"author":{"gitId":"LeeHanYongAndy"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":251,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":252,"author":{"gitId":"jonahtwl"},"content":"        assert !(totalAmount.compareTo(BigDecimal.ZERO) \u003d\u003d -1) : \"Loans cannot be negative!\";","lastModifiedDate":"2021-03-20"},{"lineNumber":253,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(MESSAGE_TOTAL_LOAN + totalAmount.setScale(2, RoundingMode.HALF_EVEN));","lastModifiedDate":"2021-03-13"},{"lineNumber":254,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":255,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":256,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":257,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":258,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the total saving in 2 decimal place.","lastModifiedDate":"2021-03-14"},{"lineNumber":259,"author":{"gitId":"jonahtwl"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":260,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList contains the full list of records.","lastModifiedDate":"2021-03-14"},{"lineNumber":261,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":262,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void printTotalAmountSaving(RecordList recordList) {","lastModifiedDate":"2021-03-11"},{"lineNumber":263,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":264,"author":{"gitId":"LeeHanYongAndy"},"content":"        BigDecimal totalAmount \u003d new BigDecimal(\"0\");","lastModifiedDate":"2021-03-13"},{"lineNumber":265,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (int i \u003d 0; i \u003c recordList.getRecordCount(); i++) {","lastModifiedDate":"2021-03-11"},{"lineNumber":266,"author":{"gitId":"LeeHanYongAndy"},"content":"            Record currentRecord \u003d recordList.getRecordAt(i);","lastModifiedDate":"2021-03-11"},{"lineNumber":267,"author":{"gitId":"LeeHanYongAndy"},"content":"            if (currentRecord instanceof Saving) {","lastModifiedDate":"2021-03-11"},{"lineNumber":268,"author":{"gitId":"LeeHanYongAndy"},"content":"                totalAmount \u003d totalAmount.add(currentRecord.getAmount());","lastModifiedDate":"2021-03-13"},{"lineNumber":269,"author":{"gitId":"LeeHanYongAndy"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":270,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":271,"author":{"gitId":"jonahtwl"},"content":"        assert !(totalAmount.compareTo(BigDecimal.ZERO) \u003d\u003d -1) : \"Savings cannot be negative!\";","lastModifiedDate":"2021-03-20"},{"lineNumber":272,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(MESSAGE_TOTAL_SAVING + totalAmount.setScale(2, RoundingMode.HALF_EVEN));","lastModifiedDate":"2021-03-13"},{"lineNumber":273,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-03-11"},{"lineNumber":274,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":275,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":276,"author":{"gitId":"LeeHanYongAndy"},"content":"    /**","lastModifiedDate":"2021-04-03"},{"lineNumber":277,"author":{"gitId":"LeeHanYongAndy"},"content":"     * Prints the amount of all record type in 2 decimal place.","lastModifiedDate":"2021-04-03"},{"lineNumber":278,"author":{"gitId":"LeeHanYongAndy"},"content":"     *","lastModifiedDate":"2021-04-03"},{"lineNumber":279,"author":{"gitId":"LeeHanYongAndy"},"content":"     * @param recordList contains the full list of records.","lastModifiedDate":"2021-04-03"},{"lineNumber":280,"author":{"gitId":"LeeHanYongAndy"},"content":"     */","lastModifiedDate":"2021-04-03"},{"lineNumber":281,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void printTotalAmountAllType(RecordList recordList) {","lastModifiedDate":"2021-04-03"},{"lineNumber":282,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-04-03"},{"lineNumber":283,"author":{"gitId":"LeeHanYongAndy"},"content":"        BigDecimal totalExpense \u003d new BigDecimal(\"0\");","lastModifiedDate":"2021-04-03"},{"lineNumber":284,"author":{"gitId":"LeeHanYongAndy"},"content":"        BigDecimal totalLoan \u003d new BigDecimal(\"0\");","lastModifiedDate":"2021-04-03"},{"lineNumber":285,"author":{"gitId":"LeeHanYongAndy"},"content":"        BigDecimal totalSaving \u003d new BigDecimal(\"0\");","lastModifiedDate":"2021-04-03"},{"lineNumber":286,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (int i \u003d 0; i \u003c recordList.getRecordCount(); i++) {","lastModifiedDate":"2021-04-03"},{"lineNumber":287,"author":{"gitId":"LeeHanYongAndy"},"content":"            Record currentRecord \u003d recordList.getRecordAt(i);","lastModifiedDate":"2021-04-03"},{"lineNumber":288,"author":{"gitId":"LeeHanYongAndy"},"content":"            if (currentRecord instanceof Expense) {","lastModifiedDate":"2021-04-03"},{"lineNumber":289,"author":{"gitId":"LeeHanYongAndy"},"content":"                totalExpense \u003d totalExpense.add(currentRecord.getAmount());","lastModifiedDate":"2021-04-03"},{"lineNumber":290,"author":{"gitId":"LeeHanYongAndy"},"content":"            }","lastModifiedDate":"2021-04-03"},{"lineNumber":291,"author":{"gitId":"LeeHanYongAndy"},"content":"            if (currentRecord instanceof Loan \u0026\u0026 !((Loan) currentRecord).isReturn()) {","lastModifiedDate":"2021-04-03"},{"lineNumber":292,"author":{"gitId":"LeeHanYongAndy"},"content":"                totalLoan \u003d totalLoan.add(currentRecord.getAmount());","lastModifiedDate":"2021-04-03"},{"lineNumber":293,"author":{"gitId":"LeeHanYongAndy"},"content":"            }","lastModifiedDate":"2021-04-03"},{"lineNumber":294,"author":{"gitId":"LeeHanYongAndy"},"content":"            if (currentRecord instanceof Saving) {","lastModifiedDate":"2021-04-03"},{"lineNumber":295,"author":{"gitId":"LeeHanYongAndy"},"content":"                totalSaving \u003d totalSaving.add(currentRecord.getAmount());","lastModifiedDate":"2021-04-03"},{"lineNumber":296,"author":{"gitId":"LeeHanYongAndy"},"content":"            }","lastModifiedDate":"2021-04-03"},{"lineNumber":297,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-04-03"},{"lineNumber":298,"author":{"gitId":"LeeHanYongAndy"},"content":"        assert !(totalExpense.compareTo(BigDecimal.ZERO) \u003d\u003d -1) : \"Expenses cannot be negative!\";","lastModifiedDate":"2021-04-03"},{"lineNumber":299,"author":{"gitId":"LeeHanYongAndy"},"content":"        assert !(totalLoan.compareTo(BigDecimal.ZERO) \u003d\u003d -1) : \"Loans cannot be negative!\";","lastModifiedDate":"2021-04-03"},{"lineNumber":300,"author":{"gitId":"LeeHanYongAndy"},"content":"        assert !(totalSaving.compareTo(BigDecimal.ZERO) \u003d\u003d -1) : \"Savings cannot be negative!\";","lastModifiedDate":"2021-04-03"},{"lineNumber":301,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(MESSAGE_TOTAL_EXPENSE + totalExpense.setScale(2, RoundingMode.HALF_EVEN));","lastModifiedDate":"2021-04-03"},{"lineNumber":302,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(MESSAGE_TOTAL_LOAN + totalLoan.setScale(2, RoundingMode.HALF_EVEN));","lastModifiedDate":"2021-04-03"},{"lineNumber":303,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(MESSAGE_TOTAL_SAVING + totalSaving.setScale(2, RoundingMode.HALF_EVEN));","lastModifiedDate":"2021-04-03"},{"lineNumber":304,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-04-03"},{"lineNumber":305,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-04-03"},{"lineNumber":306,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":307,"author":{"gitId":"jonahtwl"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":308,"author":{"gitId":"jonahtwl"},"content":"     * Prints the commonly understood index of the record.","lastModifiedDate":"2021-03-20"},{"lineNumber":309,"author":{"gitId":"jonahtwl"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":310,"author":{"gitId":"jonahtwl"},"content":"     * @param index is the index of the record.","lastModifiedDate":"2021-03-20"},{"lineNumber":311,"author":{"gitId":"jonahtwl"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":312,"author":{"gitId":"tzexern"},"content":"    public void printIndex(int index) {","lastModifiedDate":"2021-03-12"},{"lineNumber":313,"author":{"gitId":"tzexern"},"content":"        int formattedIndex \u003d index + 1;","lastModifiedDate":"2021-03-12"},{"lineNumber":314,"author":{"gitId":"tzexern"},"content":"        System.out.print(formattedIndex + \". \");","lastModifiedDate":"2021-03-12"},{"lineNumber":315,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":316,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"tzexern":39,"jonahtwl":125,"LeeHanYongAndy":102,"marklowsk":6,"gerardtwk":44}},{"path":"src/test/java/seedu/duke/FinuxTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"class FinuxTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"gerardtwk":1,"-":11}},{"path":"src/test/java/seedu/duke/command/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-04-07"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-07"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.parser.ParserHandler;","lastModifiedDate":"2021-04-07"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-04-07"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-04-07"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-04-07"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-04-07"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":"public class AddCommandTest {","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"    public void executeAddCommand_addExpenseCmd_success() {","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":"        String testName \u003d \"executeAddExpense_addExpenseCmd_success\";","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-04-07"},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"                + \"Expense has been added...\" + System.lineSeparator()","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"                + \"1. [E][2021-04-07] Dinner \" + System.lineSeparator()","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"jonahtwl"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":"        String addExpInput \u003d \"add -e Dinner -a 5.00 -d 07/04/2021\";","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"        runAddExpTest(expectedOutput, addExpInput, testName);","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"    private void runAddExpTest(String expectedOutput, String addExpInput, String testName) {","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-04-07"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"        RecordList recordList \u003d new RecordList();","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":"        CreditScoreReturnedLoansMap creditScoreReturnedLoansMap \u003d new CreditScoreReturnedLoansMap(new HashMap\u003c\u003e());","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"jonahtwl"},"content":"        ParserHandler parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-04-07"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"        CommandHandler commandHandler \u003d new CommandHandler();","lastModifiedDate":"2021-04-07"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":38,"author":{"gitId":"jonahtwl"},"content":"        Command command \u003d commandHandler.parseCommand(parserHandler.getParseInput(addExpInput), recordList);","lastModifiedDate":"2021-04-07"},{"lineNumber":39,"author":{"gitId":"jonahtwl"},"content":"        assertTrue(command instanceof AddCommand, String.format(\"Failed test \u0027%s\u0027 command object \"","lastModifiedDate":"2021-04-07"},{"lineNumber":40,"author":{"gitId":"jonahtwl"},"content":"                + \"returned by parseCommand() is not an instance of AddCommand\", testName));","lastModifiedDate":"2021-04-07"},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":42,"author":{"gitId":"jonahtwl"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-04-07"},{"lineNumber":43,"author":{"gitId":"jonahtwl"},"content":"        ByteArrayOutputStream tempBos \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-04-07"},{"lineNumber":44,"author":{"gitId":"jonahtwl"},"content":"        System.setOut(new PrintStream(tempBos));","lastModifiedDate":"2021-04-07"},{"lineNumber":45,"author":{"gitId":"jonahtwl"},"content":"        command.execute(recordList, ui, storage, creditScoreReturnedLoansMap);","lastModifiedDate":"2021-04-07"},{"lineNumber":46,"author":{"gitId":"jonahtwl"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-04-07"},{"lineNumber":47,"author":{"gitId":"jonahtwl"},"content":"        assertTrue(tempBos.toString().equals(expectedOutput), String.format(\"Failed test \"","lastModifiedDate":"2021-04-07"},{"lineNumber":48,"author":{"gitId":"jonahtwl"},"content":"                + \"\u0027%s\u0027, wrong output.\", testName));","lastModifiedDate":"2021-04-07"},{"lineNumber":49,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":50,"author":{"gitId":"jonahtwl"},"content":"}","lastModifiedDate":"2021-04-07"}],"authorContributionMap":{"jonahtwl":50}},{"path":"src/test/java/seedu/duke/command/CreditScoreCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-04-07"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-07"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.parser.ParserHandler;","lastModifiedDate":"2021-04-07"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.Loan;","lastModifiedDate":"2021-04-07"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-04-07"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-04-07"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-04-07"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-04-07"},{"lineNumber":13,"author":{"gitId":"jonahtwl"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"import static seedu.duke.common.Validators.validateDate;","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":"public class CreditScoreCommandTest {","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"    public void executeCredScoreCommand_returnCmd_success() {","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":"        String testName \u003d \"executeCredScoreCommand_returnCmd_success\";","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":"                + \"Credit score for andy is: 50\" + System.lineSeparator()","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"jonahtwl"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"jonahtwl"},"content":"        String credScoreCmdInput \u003d \"creditscore andy\";","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"        runCredScoreCmdTest(expectedOutput, credScoreCmdInput, testName);","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"    private void runCredScoreCmdTest(String expectedOutput, String credScoreCmdInput, String testName) {","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-04-07"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"        RecordList loans \u003d getLoanList();","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":"        CreditScoreReturnedLoansMap creditScoreReturnedLoansMap \u003d new CreditScoreReturnedLoansMap(new HashMap\u003c\u003e());","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"jonahtwl"},"content":"        ParserHandler parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-04-07"},{"lineNumber":36,"author":{"gitId":"jonahtwl"},"content":"        CommandHandler commandHandler \u003d new CommandHandler();","lastModifiedDate":"2021-04-07"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":38,"author":{"gitId":"jonahtwl"},"content":"        Command command \u003d commandHandler.parseCommand(parserHandler.getParseInput(credScoreCmdInput), loans);","lastModifiedDate":"2021-04-07"},{"lineNumber":39,"author":{"gitId":"jonahtwl"},"content":"        assertTrue(command instanceof CreditScoreCommand, String.format(\"Failed test \u0027%s\u0027 command object \"","lastModifiedDate":"2021-04-07"},{"lineNumber":40,"author":{"gitId":"jonahtwl"},"content":"                + \"returned by parseCommand() is not an instance of CreditScoreCommand\", testName));","lastModifiedDate":"2021-04-07"},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":42,"author":{"gitId":"jonahtwl"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-04-07"},{"lineNumber":43,"author":{"gitId":"jonahtwl"},"content":"        ByteArrayOutputStream tempBos \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-04-07"},{"lineNumber":44,"author":{"gitId":"jonahtwl"},"content":"        System.setOut(new PrintStream(tempBos));","lastModifiedDate":"2021-04-07"},{"lineNumber":45,"author":{"gitId":"jonahtwl"},"content":"        command.execute(loans, ui, storage, creditScoreReturnedLoansMap);","lastModifiedDate":"2021-04-07"},{"lineNumber":46,"author":{"gitId":"jonahtwl"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-04-07"},{"lineNumber":47,"author":{"gitId":"jonahtwl"},"content":"        System.out.println(expectedOutput);","lastModifiedDate":"2021-04-07"},{"lineNumber":48,"author":{"gitId":"jonahtwl"},"content":"        assertTrue(tempBos.toString().equals(expectedOutput), String.format(\"Failed test \"","lastModifiedDate":"2021-04-07"},{"lineNumber":49,"author":{"gitId":"jonahtwl"},"content":"                + \"\u0027%s\u0027, wrong output.\", testName));","lastModifiedDate":"2021-04-07"},{"lineNumber":50,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":51,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":52,"author":{"gitId":"jonahtwl"},"content":"    private RecordList getLoanList() {","lastModifiedDate":"2021-04-07"},{"lineNumber":53,"author":{"gitId":"jonahtwl"},"content":"        RecordList loans \u003d new RecordList();","lastModifiedDate":"2021-04-07"},{"lineNumber":54,"author":{"gitId":"jonahtwl"},"content":"        loans.addRecord(new Loan(new BigDecimal(\"500.00\"), validateDate(\"2021/01/15\"),","lastModifiedDate":"2021-04-07"},{"lineNumber":55,"author":{"gitId":"jonahtwl"},"content":"                \"Loan to Andy\", \"andy\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":56,"author":{"gitId":"jonahtwl"},"content":"        return loans;","lastModifiedDate":"2021-04-07"},{"lineNumber":57,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":58,"author":{"gitId":"jonahtwl"},"content":"}","lastModifiedDate":"2021-04-07"}],"authorContributionMap":{"jonahtwl":58}},{"path":"src/test/java/seedu/duke/command/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.parser.ParserHandler;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Expense;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Loan;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.record.Saving;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"import static seedu.duke.common.Validators.validateDate;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"gerardtwk"},"content":"class ListCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"gerardtwk"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"    public void executeListExpense_listExpenseCmd_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"gerardtwk"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"gerardtwk"},"content":"                + \"Here is your Expense list:\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"gerardtwk"},"content":"                + \"1. [E][2020-01-01] electric bills \" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"gerardtwk"},"content":"                + \"2. [E][2020-01-02] phone bills \" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"gerardtwk"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"gerardtwk"},"content":"        runListCmdTest(\"executeListExpense_listExpenseCmd_success\", \"expense\", \"list -e\", expectedOutput);","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"gerardtwk"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"gerardtwk"},"content":"    public void executeListLoan_listLoanCmd_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"gerardtwk"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"gerardtwk"},"content":"                + \"Here is your Loan list:\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"gerardtwk"},"content":"                + \"2. [L][2020-01-01] loan to bob [ ]\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"gerardtwk"},"content":"                + \"3. [L][2020-01-02] loan to alice [ ]\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"gerardtwk"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"gerardtwk"},"content":"        runListCmdTest(\"executeListLoan_listLoanCmd_success\", \"loan\", \"list -l\", expectedOutput);","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"gerardtwk"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"gerardtwk"},"content":"    public void executeListSaving_listSavingCmd_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"gerardtwk"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"gerardtwk"},"content":"                + \"Here is your Saving list:\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"gerardtwk"},"content":"                + \"3. [S][2020-01-01] red packet \" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"gerardtwk"},"content":"                + \"4. [S][2020-01-02] pocket money \" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"gerardtwk"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"gerardtwk"},"content":"        runListCmdTest(\"executeListSaving_listSavingCmd_success\", \"saving\", \"list -s\", expectedOutput);","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"gerardtwk"},"content":"    private void runListCmdTest(String listCmdTestName, String listCmdTypeToTest,","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"gerardtwk"},"content":"                                String listCmdStr, String expectedOutput) {","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"gerardtwk"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"gerardtwk"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"LeeHanYongAndy"},"content":"        ParserHandler parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"gerardtwk"},"content":"        RecordList records \u003d getPopulatedRecordList(listCmdTypeToTest);","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"gerardtwk"},"content":"        CreditScoreReturnedLoansMap creditScoreReturnedLoansMap \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"gerardtwk"},"content":"                new CreditScoreReturnedLoansMap(new HashMap\u003c\u003e());","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"marklowsk"},"content":"        CommandHandler commandHandler \u003d new CommandHandler();","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"marklowsk"},"content":"        Command command \u003d commandHandler.parseCommand(parserHandler.getParseInput(listCmdStr), records);","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"gerardtwk"},"content":"        assertTrue(command instanceof ListCommand, String.format(\"Failed test \u0027%s\u0027, \"","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"gerardtwk"},"content":"                + \"command object returned by parseCommand() is not an instance of ListCommand.\", listCmdTestName));","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"gerardtwk"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"gerardtwk"},"content":"        ByteArrayOutputStream listCmdBos \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"gerardtwk"},"content":"        System.setOut(new PrintStream(listCmdBos));","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"gerardtwk"},"content":"        command.execute(records, ui, storage, creditScoreReturnedLoansMap);","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"gerardtwk"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"gerardtwk"},"content":"        assertTrue(listCmdBos.toString().equals(expectedOutput), String.format(\"Failed test \u0027%s\u0027, wrong output.\",","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"gerardtwk"},"content":"                listCmdTestName));","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"gerardtwk"},"content":"    private RecordList getPopulatedRecordList(String listCmdTypeToTest) {","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"gerardtwk"},"content":"        RecordList records \u003d new RecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"gerardtwk"},"content":"        records.addRecord(new Expense(new BigDecimal(\"220.50\"), validateDate(\"2020/01/01\"), \"electric bills\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"gerardtwk"},"content":"        if (listCmdTypeToTest.equals(\"expense\")) {","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"gerardtwk"},"content":"            records.addRecord(new Expense(new BigDecimal(\"420.50\"), validateDate(\"2020/01/02\"), \"phone bills\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"gerardtwk"},"content":"        records.addRecord(new Loan(new BigDecimal(\"100\"), validateDate(\"2020/01/01\"), \"loan to bob\", \"bob\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":83,"author":{"gitId":"gerardtwk"},"content":"        if (listCmdTypeToTest.equals(\"loan\")) {","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"gerardtwk"},"content":"            records.addRecord(new Loan(new BigDecimal(\"300\"), validateDate(\"2020/01/02\"), \"loan to alice\", \"alice\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":85,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"gerardtwk"},"content":"        records.addRecord(new Saving(new BigDecimal(\"20\"), validateDate(\"2020/01/01\"), \"red packet\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"gerardtwk"},"content":"        if (listCmdTypeToTest.equals(\"saving\")) {","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"gerardtwk"},"content":"            records.addRecord(new Saving(new BigDecimal(\"40\"), validateDate(\"2020/01/02\"), \"pocket money\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"gerardtwk"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"gerardtwk"},"content":"        return records;","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"gerardtwk"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"LeeHanYongAndy":1,"marklowsk":2,"gerardtwk":90}},{"path":"src/test/java/seedu/duke/command/RemoveCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzexern"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"tzexern"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"tzexern"},"content":"import seedu.duke.parser.ParserHandler;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"tzexern"},"content":"import seedu.duke.record.Expense;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"tzexern"},"content":"import seedu.duke.record.Loan;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"tzexern"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"tzexern"},"content":"import seedu.duke.record.Saving;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"tzexern"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"tzexern"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"tzexern"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"tzexern"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"tzexern"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"tzexern"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"tzexern"},"content":"import static seedu.duke.common.Validators.validateDate;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"tzexern"},"content":"class RemoveCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"tzexern"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"tzexern"},"content":"    void executeRemoveExpense_removeExpenseCmd_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"tzexern"},"content":"        RecordList records \u003d new RecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"        CommandHandler commandHandler \u003d new CommandHandler();","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"tzexern"},"content":"        records.addRecord(new Expense(new BigDecimal(\"220.50\"), validateDate(\"2020/01/01\"), \"electric bills\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"tzexern"},"content":"        records.addRecord(new Expense(new BigDecimal(\"420.50\"), validateDate(\"2020/01/02\"), \"phone bills\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"gerardtwk"},"content":"        records.addRecord(new Loan(new BigDecimal(\"100\"), validateDate(\"2020/01/01\"), \"loan to bob\", \"bob\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"tzexern"},"content":"        records.addRecord(new Saving(new BigDecimal(\"20\"), validateDate(\"2020/01/01\"), \"red packet\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"tzexern"},"content":"        String removeExpenseCmd \u003d \"remove -i 1\";","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"LeeHanYongAndy"},"content":"        ParserHandler parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":"        Command command \u003d commandHandler.parseCommand(parserHandler.getParseInput(removeExpenseCmd), records);","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"tzexern"},"content":"        assertTrue(command instanceof RemoveCommand, \"Failed test \u0027executeRemoveExpense_removeExpenseCmd_success\u0027, \"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"tzexern"},"content":"                + \"command object returned by parseCommand() is not an instance of RemoveCommand\");","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"tzexern"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"tzexern"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"gerardtwk"},"content":"        CreditScoreReturnedLoansMap creditScoreReturnedLoansMap \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"gerardtwk"},"content":"                new CreditScoreReturnedLoansMap(new HashMap\u003c\u003e());","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"tzexern"},"content":"        ByteArrayOutputStream removeCmdBos \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"tzexern"},"content":"        System.setOut(new PrintStream(removeCmdBos));","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"tzexern"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"tzexern"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"tzexern"},"content":"                + \"This record will be removed: [E][2020-01-01] electric bills \" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"tzexern"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"gerardtwk"},"content":"        command.execute(records, ui, storage, creditScoreReturnedLoansMap);","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"tzexern"},"content":"        assertTrue(removeCmdBos.toString().equals(expectedOutput), \"Failed test \"","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"tzexern"},"content":"                + \"\u0027executeRemoveExpense_removeExpenseCmd_success\u0027, wrong output.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"tzexern"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"tzexern"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"tzexern"},"content":"    void executeRemoveLoan_removeLoanCmd_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"tzexern"},"content":"        RecordList records \u003d new RecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"marklowsk"},"content":"        CommandHandler commandHandler \u003d new CommandHandler();","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"tzexern"},"content":"        records.addRecord(new Expense(new BigDecimal(\"220.50\"), validateDate(\"2020/01/01\"), \"electric bills\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"tzexern"},"content":"        records.addRecord(new Expense(new BigDecimal(\"420.50\"), validateDate(\"2020/01/02\"), \"phone bills\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"gerardtwk"},"content":"        records.addRecord(new Loan(new BigDecimal(\"100\"), validateDate(\"2020/01/01\"), \"loan to bob\", \"bob\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"tzexern"},"content":"        records.addRecord(new Saving(new BigDecimal(\"20\"), validateDate(\"2020/01/01\"), \"red packet\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"tzexern"},"content":"        String removeLoanCmd \u003d \"remove -i 3\";","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"        ParserHandler parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"marklowsk"},"content":"        Command command \u003d commandHandler.parseCommand(parserHandler.getParseInput(removeLoanCmd), records);","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"tzexern"},"content":"        assertTrue(command instanceof RemoveCommand, \"Failed test \u0027executeRemoveLoan_removeLoanCmd_success\u0027, \"","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"tzexern"},"content":"                + \"command object returned by parseCommand() is not an instance of RemoveCommand\");","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"tzexern"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"tzexern"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"gerardtwk"},"content":"        CreditScoreReturnedLoansMap creditScoreReturnedLoansMap \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"gerardtwk"},"content":"                new CreditScoreReturnedLoansMap(new HashMap\u003c\u003e());","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"tzexern"},"content":"        ByteArrayOutputStream removeCmdBos \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"tzexern"},"content":"        System.setOut(new PrintStream(removeCmdBos));","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"tzexern"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"tzexern"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"tzexern"},"content":"                + \"This record will be removed: [L][2020-01-01] loan to bob [ ]\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"tzexern"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"gerardtwk"},"content":"        command.execute(records, ui, storage, creditScoreReturnedLoansMap);","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"tzexern"},"content":"        assertTrue(removeCmdBos.toString().equals(expectedOutput), \"Failed test \"","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"tzexern"},"content":"                + \"\u0027executeRemoveLoan_removeLoanCmd_success\u0027, wrong output.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"tzexern"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"tzexern"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"tzexern"},"content":"    void executeRemoveSaving_removeSavingCmd_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"tzexern"},"content":"        RecordList records \u003d new RecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"marklowsk"},"content":"        CommandHandler commandHandler \u003d new CommandHandler();","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"tzexern"},"content":"        records.addRecord(new Expense(new BigDecimal(\"220.50\"), validateDate(\"2020/01/01\"), \"electric bills\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"tzexern"},"content":"        records.addRecord(new Expense(new BigDecimal(\"420.50\"), validateDate(\"2020/01/02\"), \"phone bills\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"gerardtwk"},"content":"        records.addRecord(new Loan(new BigDecimal(\"100\"), validateDate(\"2020/01/01\"), \"loan to bob\", \"bob\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":93,"author":{"gitId":"tzexern"},"content":"        records.addRecord(new Saving(new BigDecimal(\"20\"), validateDate(\"2020/01/01\"), \"red packet\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"tzexern"},"content":"        String removeSavingCmd \u003d \"remove -i 4\";","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"LeeHanYongAndy"},"content":"        ParserHandler parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"marklowsk"},"content":"        Command command \u003d commandHandler.parseCommand(parserHandler.getParseInput(removeSavingCmd), records);","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"tzexern"},"content":"        assertTrue(command instanceof RemoveCommand, \"Failed test \u0027executeRemoveSaving_removeSavingCmd_success\u0027, \"","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"tzexern"},"content":"                + \"command object returned by parseCommand() is not an instance of RemoveCommand\");","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"tzexern"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"tzexern"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"tzexern"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"gerardtwk"},"content":"        CreditScoreReturnedLoansMap creditScoreReturnedLoansMap \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"gerardtwk"},"content":"                new CreditScoreReturnedLoansMap(new HashMap\u003c\u003e());","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"tzexern"},"content":"        ByteArrayOutputStream removeCmdBos \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"tzexern"},"content":"        System.setOut(new PrintStream(removeCmdBos));","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"tzexern"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"tzexern"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"tzexern"},"content":"                + \"This record will be removed: [S][2020-01-01] red packet \" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"tzexern"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"gerardtwk"},"content":"        command.execute(records, ui, storage, creditScoreReturnedLoansMap);","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"tzexern"},"content":"        assertTrue(removeCmdBos.toString().equals(expectedOutput), \"Failed test \"","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"tzexern"},"content":"                + \"\u0027executeRemoveSaving_removeSavingCmd_success\u0027, wrong output.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"tzexern"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"tzexern"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"tzexern"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"tzexern":92,"marklowsk":8,"LeeHanYongAndy":3,"gerardtwk":13}},{"path":"src/test/java/seedu/duke/command/ReturnCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonahtwl"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"jonahtwl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.parser.ParserHandler;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.record.Loan;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"jonahtwl"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"jonahtwl"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"jonahtwl"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"jonahtwl"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"jonahtwl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"jonahtwl"},"content":"import static seedu.duke.common.Validators.validateDate;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"jonahtwl"},"content":"public class ReturnCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"jonahtwl"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"jonahtwl"},"content":"    public void executeReturnCommand_returnCmd_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"jonahtwl"},"content":"        String testName \u003d \"executeReturnCommand_returnCmd_success\";","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"jonahtwl"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"jonahtwl"},"content":"                + \"Loan marked as returned: [L][2021-03-15] Loan to Andy [v]\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"jonahtwl"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"gerardtwk"},"content":"        String returnCmdInput \u003d \"return -i 1 -d 2021-03-16\";","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"jonahtwl"},"content":"        runReturnCmdTest(expectedOutput, returnCmdInput, testName);","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"jonahtwl"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"jonahtwl"},"content":"    public void executeReturnCommand_returnCmdTwo_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"jonahtwl"},"content":"        String testName \u003d \"executeReturnCommand_returnCmdTwo_success\";","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"jonahtwl"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"jonahtwl"},"content":"                + \"Loan marked as returned: [L][2021-03-16] Loan to Jason [v]\" + System.lineSeparator()","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"jonahtwl"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"gerardtwk"},"content":"        String returnCmdInput \u003d \"return -i 3 -d 2021-03-16\";","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"jonahtwl"},"content":"        runReturnCmdTest(expectedOutput, returnCmdInput, testName);","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"jonahtwl"},"content":"    private void runReturnCmdTest(String expectedOutput, String returnCmdInput, String testName) {","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"jonahtwl"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"jonahtwl"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"jonahtwl"},"content":"        RecordList loans \u003d getLoanList();","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"jonahtwl"},"content":"        CreditScoreReturnedLoansMap creditScoreReturnedLoansMap \u003d new CreditScoreReturnedLoansMap(new HashMap\u003c\u003e());","lastModifiedDate":"2021-04-07"},{"lineNumber":45,"author":{"gitId":"jonahtwl"},"content":"        ParserHandler parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-04-07"},{"lineNumber":46,"author":{"gitId":"marklowsk"},"content":"        CommandHandler commandHandler \u003d new CommandHandler();","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"marklowsk"},"content":"        Command command \u003d commandHandler.parseCommand(parserHandler.getParseInput(returnCmdInput), loans);","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"jonahtwl"},"content":"        assertTrue(command instanceof ReturnCommand, String.format(\"Failed test \u0027%s\u0027 command object \"","lastModifiedDate":"2021-04-07"},{"lineNumber":50,"author":{"gitId":"jonahtwl"},"content":"                        + \"returned by parseCommand() is not an instance of ReturnCommand\", testName));","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"jonahtwl"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-04-07"},{"lineNumber":53,"author":{"gitId":"jonahtwl"},"content":"        ByteArrayOutputStream tempBos \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-04-07"},{"lineNumber":54,"author":{"gitId":"jonahtwl"},"content":"        System.setOut(new PrintStream(tempBos));","lastModifiedDate":"2021-04-07"},{"lineNumber":55,"author":{"gitId":"gerardtwk"},"content":"        command.execute(loans, ui, storage, creditScoreReturnedLoansMap);","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"jonahtwl"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-04-07"},{"lineNumber":57,"author":{"gitId":"jonahtwl"},"content":"        assertTrue(tempBos.toString().equals(expectedOutput), String.format(\"Failed test \"","lastModifiedDate":"2021-04-07"},{"lineNumber":58,"author":{"gitId":"jonahtwl"},"content":"            + \"\u0027%s\u0027, wrong output.\", testName));","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"jonahtwl"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"jonahtwl"},"content":"    private RecordList getLoanList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"jonahtwl"},"content":"        RecordList loans \u003d new RecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"jonahtwl"},"content":"        loans.addRecord(new Loan(new BigDecimal(\"43.28\"), validateDate(\"2021/03/15\"),","lastModifiedDate":"2021-04-07"},{"lineNumber":64,"author":{"gitId":"jonahtwl"},"content":"                \"Loan to Andy\", \"Andy\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":65,"author":{"gitId":"jonahtwl"},"content":"        loans.addRecord(new Loan(new BigDecimal(\"89.23\"), validateDate(\"2021/03/17\"),","lastModifiedDate":"2021-04-07"},{"lineNumber":66,"author":{"gitId":"jonahtwl"},"content":"                \"Loan to Mark\", \"Mark\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":67,"author":{"gitId":"jonahtwl"},"content":"        loans.addRecord(new Loan(new BigDecimal(\"5.67\"), validateDate(\"2021/03/16\"),","lastModifiedDate":"2021-04-07"},{"lineNumber":68,"author":{"gitId":"jonahtwl"},"content":"                \"Loan to Jason\", \"Jason\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":69,"author":{"gitId":"jonahtwl"},"content":"        return loans;","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"jonahtwl"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"jonahtwl"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"jonahtwl":65,"marklowsk":2,"gerardtwk":4}},{"path":"src/test/java/seedu/duke/command/UtilsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"marklowsk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.common.ArgumentType;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.exception.CommandException;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"import seedu.duke.parser.ParserHandler;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"marklowsk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.AddCommand.COMMAND_ADD;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.HelpCommand.COMMAND_HELP;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.getOptionValue;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.isOption;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateArguments;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.Utils.validateOptions;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.command.ViewCommand.COMMAND_VIEW;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_AMOUNT;","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_DATE;","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_EXPENSE;","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_LOAN;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Constant.OPTION_SAVING;","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"class UtilsTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"LeeHanYongAndy"},"content":"    private static final ArgumentType[] ARG_TYPE_ORDER_CMD_HELP \u003d {","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArgumentType.COMMAND,","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArgumentType.VALUE","lastModifiedDate":"2021-03-19"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"    };","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"    private static final ArgumentType[] ARG_TYPE_ORDER_CMD_VIEW \u003d {","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.COMMAND,","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.OPTION,","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"        ArgumentType.EMPTY_VALUE","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"    };","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"marklowsk"},"content":"    private static final String[] OR_OPTIONS \u003d {OPTION_EXPENSE, OPTION_LOAN, OPTION_SAVING};","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"marklowsk"},"content":"    private static final String[] VALID_OPTIONS_ADD \u003d {","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"marklowsk"},"content":"        OPTION_EXPENSE, OPTION_LOAN, OPTION_SAVING, OPTION_AMOUNT, OPTION_DATE","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"marklowsk"},"content":"    };","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"marklowsk"},"content":"    @DisplayName(\"[isOption] - Valid Options - success:\")","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"marklowsk"},"content":"    public void isOption_optionMatch_success() {","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"marklowsk"},"content":"        assertAll(","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-e\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-l\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-s\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-d\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-a\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-i\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-E\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-L\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-S\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-D\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-A\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-I\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertTrue(isOption(\"-p\"))","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"marklowsk"},"content":"        );","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"marklowsk"},"content":"    @DisplayName(\"[isOption] - Invalid Options - failure:\")","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"marklowsk"},"content":"    public void isOption_invalidOptions() {","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"marklowsk"},"content":"        assertAll(","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertFalse(isOption(\"--\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertFalse(isOption(\"-[\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertFalse(isOption(\"- \")),","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertFalse(isOption(\"-1\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertFalse(isOption(\"-9\")),","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"marklowsk"},"content":"            () -\u003e assertFalse(isOption(\"-hello\"))","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"marklowsk"},"content":"        );","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"marklowsk"},"content":"    private void validateArguments_improperCommand_helper(ArrayList\u003cString\u003e arguments,","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"marklowsk"},"content":"                                                          ArgumentType[] argumentTypeOrder,","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"marklowsk"},"content":"                                                          String expected,","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"marklowsk"},"content":"                                                          String command) {","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"marklowsk"},"content":"        CommandException e \u003d assertThrows(","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"marklowsk"},"content":"                CommandException.class,","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"marklowsk"},"content":"            () -\u003e validateArguments(arguments, argumentTypeOrder, command)","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"marklowsk"},"content":"        );","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"marklowsk"},"content":"        if (!e.getMessage().equals(expected)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"marklowsk"},"content":"            fail(arguments.toString() + \" - Error: \" + e.getMessage());","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"marklowsk"},"content":"    @DisplayName(\"[validateArguments] - help Command - success:\")","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"marklowsk"},"content":"    public void validateArguments_properHelp_success() {","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"LeeHanYongAndy"},"content":"        ParserHandler parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command \u003d parserHandler.getParseInput(\"help\");","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"marklowsk"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"marklowsk"},"content":"            validateArguments(command, ARG_TYPE_ORDER_CMD_HELP, COMMAND_HELP);","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"marklowsk"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"marklowsk"},"content":"            fail(e.getMessage());","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"marklowsk"},"content":"    @DisplayName(\"[validateArguments] - help Command - failure:\")","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":105,"author":{"gitId":"marklowsk"},"content":"    public void validateArguments_improperHelp() {","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"LeeHanYongAndy"},"content":"        // new test case to be written.","lastModifiedDate":"2021-03-19"},{"lineNumber":107,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"marklowsk"},"content":"    @DisplayName(\"[validateArguments] - view Command - success:\")","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"marklowsk"},"content":"    public void validateArguments_properView_success() {","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"LeeHanYongAndy"},"content":"        ParserHandler parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"marklowsk"},"content":"        // By assumption that options are valid and order is correct.","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command1 \u003d parserHandler.getParseInput(\"view -e\");","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command2 \u003d parserHandler.getParseInput(\"view -l\");","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command3 \u003d parserHandler.getParseInput(\"view -s\");","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"marklowsk"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"marklowsk"},"content":"            validateArguments(command1, ARG_TYPE_ORDER_CMD_VIEW, COMMAND_VIEW);","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"marklowsk"},"content":"            validateArguments(command2, ARG_TYPE_ORDER_CMD_VIEW, COMMAND_VIEW);","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"marklowsk"},"content":"            validateArguments(command3, ARG_TYPE_ORDER_CMD_VIEW, COMMAND_VIEW);","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"marklowsk"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"marklowsk"},"content":"            fail(e.getMessage());","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":125,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"marklowsk"},"content":"    @DisplayName(\"[validateArguments] - view Command - failure:\")","lastModifiedDate":"2021-03-14"},{"lineNumber":127,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":128,"author":{"gitId":"marklowsk"},"content":"    public void validateArguments_improperView() {","lastModifiedDate":"2021-03-14"},{"lineNumber":129,"author":{"gitId":"marklowsk"},"content":"        String expected1 \u003d \"view Command - invalid input: \";","lastModifiedDate":"2021-03-14"},{"lineNumber":130,"author":{"gitId":"marklowsk"},"content":"        String expected25 \u003d \"view Command - not enough arguments.\";","lastModifiedDate":"2021-03-14"},{"lineNumber":131,"author":{"gitId":"marklowsk"},"content":"        String expected34 \u003d \"view Command - too many arguments.\";","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":133,"author":{"gitId":"LeeHanYongAndy"},"content":"        ParserHandler parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command1 \u003d parserHandler.getParseInput(\"view -l abc\");","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"marklowsk"},"content":"        validateArguments_improperCommand_helper(command1, ARG_TYPE_ORDER_CMD_VIEW,","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"marklowsk"},"content":"                expected1 + \"abc\", COMMAND_VIEW);","lastModifiedDate":"2021-03-14"},{"lineNumber":137,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command2 \u003d parserHandler.getParseInput(\"view -z -z\");","lastModifiedDate":"2021-03-23"},{"lineNumber":139,"author":{"gitId":"marklowsk"},"content":"        validateArguments_improperCommand_helper(command2, ARG_TYPE_ORDER_CMD_VIEW,","lastModifiedDate":"2021-03-14"},{"lineNumber":140,"author":{"gitId":"marklowsk"},"content":"                expected25, COMMAND_VIEW);","lastModifiedDate":"2021-03-14"},{"lineNumber":141,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command3 \u003d parserHandler.getParseInput(\"view -s -s\");","lastModifiedDate":"2021-03-23"},{"lineNumber":143,"author":{"gitId":"marklowsk"},"content":"        validateArguments_improperCommand_helper(command3, ARG_TYPE_ORDER_CMD_VIEW,","lastModifiedDate":"2021-03-14"},{"lineNumber":144,"author":{"gitId":"marklowsk"},"content":"                expected34, COMMAND_VIEW);","lastModifiedDate":"2021-03-14"},{"lineNumber":145,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":146,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command4 \u003d parserHandler.getParseInput(\"view -l -l\");","lastModifiedDate":"2021-03-23"},{"lineNumber":147,"author":{"gitId":"marklowsk"},"content":"        validateArguments_improperCommand_helper(command4, ARG_TYPE_ORDER_CMD_VIEW,","lastModifiedDate":"2021-03-14"},{"lineNumber":148,"author":{"gitId":"marklowsk"},"content":"                expected34, COMMAND_VIEW);","lastModifiedDate":"2021-03-14"},{"lineNumber":149,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":150,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command5 \u003d parserHandler.getParseInput(\"view\");","lastModifiedDate":"2021-03-23"},{"lineNumber":151,"author":{"gitId":"marklowsk"},"content":"        validateArguments_improperCommand_helper(command5, ARG_TYPE_ORDER_CMD_VIEW,","lastModifiedDate":"2021-03-14"},{"lineNumber":152,"author":{"gitId":"marklowsk"},"content":"                expected25, COMMAND_VIEW);","lastModifiedDate":"2021-03-14"},{"lineNumber":153,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":154,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":155,"author":{"gitId":"marklowsk"},"content":"    @DisplayName(\"[validateOptions] - Valid options - success:\")","lastModifiedDate":"2021-03-14"},{"lineNumber":156,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":157,"author":{"gitId":"marklowsk"},"content":"    public void validateOptions_validOptions_success() {","lastModifiedDate":"2021-03-14"},{"lineNumber":158,"author":{"gitId":"LeeHanYongAndy"},"content":"        ParserHandler parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":159,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command1 \u003d parserHandler.getParseInput(\"view -l\");","lastModifiedDate":"2021-03-23"},{"lineNumber":160,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command2 \u003d parserHandler.getParseInput(\"add -s savings -a 200.00 -d 20/1/2021\");","lastModifiedDate":"2021-03-23"},{"lineNumber":161,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command3 \u003d parserHandler.getParseInput(\"add -a 200.00 -d 20/1/2021 -s savings\");","lastModifiedDate":"2021-03-23"},{"lineNumber":162,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":163,"author":{"gitId":"marklowsk"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":164,"author":{"gitId":"marklowsk"},"content":"            validateOptions(command1, COMMAND_VIEW, OR_OPTIONS, OR_OPTIONS);","lastModifiedDate":"2021-03-14"},{"lineNumber":165,"author":{"gitId":"marklowsk"},"content":"            validateOptions(command2, COMMAND_ADD, VALID_OPTIONS_ADD, OR_OPTIONS);","lastModifiedDate":"2021-03-14"},{"lineNumber":166,"author":{"gitId":"marklowsk"},"content":"            validateOptions(command3, COMMAND_ADD, VALID_OPTIONS_ADD, OR_OPTIONS);","lastModifiedDate":"2021-03-14"},{"lineNumber":167,"author":{"gitId":"marklowsk"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":168,"author":{"gitId":"marklowsk"},"content":"            fail();","lastModifiedDate":"2021-03-14"},{"lineNumber":169,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":170,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":171,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":172,"author":{"gitId":"marklowsk"},"content":"    @DisplayName(\"[validateOptions] - Invalid options - failure:\")","lastModifiedDate":"2021-03-14"},{"lineNumber":173,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":174,"author":{"gitId":"marklowsk"},"content":"    public void validateOptions_invalidOptions() {","lastModifiedDate":"2021-03-14"},{"lineNumber":175,"author":{"gitId":"LeeHanYongAndy"},"content":"        ParserHandler parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":176,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command1 \u003d parserHandler.getParseInput(\"view -l -z\");","lastModifiedDate":"2021-03-23"},{"lineNumber":177,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command2 \u003d parserHandler.getParseInput(\"add -s -a 200.00 -d -d\");","lastModifiedDate":"2021-03-23"},{"lineNumber":178,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command3 \u003d parserHandler.getParseInput(\"add -a -s -s -d\");","lastModifiedDate":"2021-03-23"},{"lineNumber":179,"author":{"gitId":"marklowsk"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":180,"author":{"gitId":"marklowsk"},"content":"                validateOptions(command1, COMMAND_VIEW, OR_OPTIONS, OR_OPTIONS));","lastModifiedDate":"2021-03-14"},{"lineNumber":181,"author":{"gitId":"marklowsk"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":182,"author":{"gitId":"marklowsk"},"content":"                validateOptions(command2, COMMAND_ADD, VALID_OPTIONS_ADD, OR_OPTIONS));","lastModifiedDate":"2021-03-14"},{"lineNumber":183,"author":{"gitId":"marklowsk"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":184,"author":{"gitId":"marklowsk"},"content":"                validateOptions(command3, COMMAND_ADD, VALID_OPTIONS_ADD, OR_OPTIONS));","lastModifiedDate":"2021-03-14"},{"lineNumber":185,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":186,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":187,"author":{"gitId":"marklowsk"},"content":"    @DisplayName(\"[getOptionValue] - Option exists - success:\")","lastModifiedDate":"2021-03-14"},{"lineNumber":188,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":189,"author":{"gitId":"marklowsk"},"content":"    public void getOptionValue_optionExists_success() {","lastModifiedDate":"2021-03-14"},{"lineNumber":190,"author":{"gitId":"LeeHanYongAndy"},"content":"        ParserHandler parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":191,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command1 \u003d parserHandler.getParseInput(\"add -s savings -a 200.00 -d 20/1/2021\");","lastModifiedDate":"2021-03-23"},{"lineNumber":192,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command2 \u003d parserHandler.getParseInput(\"add -a 200.00 -d 20/1/2021 -s savings\");","lastModifiedDate":"2021-03-23"},{"lineNumber":193,"author":{"gitId":"marklowsk"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":194,"author":{"gitId":"marklowsk"},"content":"            assertEquals(\"200.00\", getOptionValue(command1, COMMAND_ADD, \"-a\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":195,"author":{"gitId":"marklowsk"},"content":"            assertEquals(\"20/1/2021\", getOptionValue(command1, COMMAND_ADD, \"-d\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":196,"author":{"gitId":"marklowsk"},"content":"            assertEquals(\"savings\", getOptionValue(command1, COMMAND_ADD, \"-s\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":197,"author":{"gitId":"marklowsk"},"content":"            assertEquals(\"200.00\", getOptionValue(command2, COMMAND_ADD, \"-a\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":198,"author":{"gitId":"marklowsk"},"content":"            assertEquals(\"20/1/2021\", getOptionValue(command2, COMMAND_ADD, \"-d\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":199,"author":{"gitId":"marklowsk"},"content":"            assertEquals(\"savings\", getOptionValue(command2, COMMAND_ADD, \"-s\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":200,"author":{"gitId":"marklowsk"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":201,"author":{"gitId":"marklowsk"},"content":"            fail();","lastModifiedDate":"2021-03-14"},{"lineNumber":202,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":203,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":204,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":205,"author":{"gitId":"marklowsk"},"content":"    @DisplayName(\"[getOptionValue] - Option empty - failure:\")","lastModifiedDate":"2021-03-14"},{"lineNumber":206,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":207,"author":{"gitId":"marklowsk"},"content":"    public void getOptionValue_optionEmpty() {","lastModifiedDate":"2021-03-14"},{"lineNumber":208,"author":{"gitId":"LeeHanYongAndy"},"content":"        ParserHandler parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":209,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command1 \u003d parserHandler.getParseInput(\"add -s -a -d\");","lastModifiedDate":"2021-03-23"},{"lineNumber":210,"author":{"gitId":"marklowsk"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":211,"author":{"gitId":"marklowsk"},"content":"                getOptionValue(command1, COMMAND_ADD, \"-a\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":212,"author":{"gitId":"marklowsk"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":213,"author":{"gitId":"marklowsk"},"content":"                getOptionValue(command1, COMMAND_ADD, \"-d\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":214,"author":{"gitId":"marklowsk"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":215,"author":{"gitId":"marklowsk"},"content":"                getOptionValue(command1, COMMAND_ADD, \"-s\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":216,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":217,"author":{"gitId":"LeeHanYongAndy"},"content":"        ArrayList\u003cString\u003e command2 \u003d parserHandler.getParseInput(\"add -a 200.00 -d -s savings\");","lastModifiedDate":"2021-03-23"},{"lineNumber":218,"author":{"gitId":"marklowsk"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":219,"author":{"gitId":"marklowsk"},"content":"                getOptionValue(command2, COMMAND_ADD, \"-d\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":220,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":221,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"marklowsk":190,"LeeHanYongAndy":31}},{"path":"src/test/java/seedu/duke/command/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"import seedu.duke.parser.ParserHandler;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"LeeHanYongAndy"},"content":"import seedu.duke.record.Expense;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"LeeHanYongAndy"},"content":"import seedu.duke.record.Loan;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"LeeHanYongAndy"},"content":"import seedu.duke.record.Saving;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"LeeHanYongAndy"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"LeeHanYongAndy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"LeeHanYongAndy"},"content":"import static seedu.duke.common.Validators.validateDate;","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"class ViewCommandTest {","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":"    private ParserHandler parserHandler;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void executeViewExpense_viewExpenseCmd_success() {","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"LeeHanYongAndy"},"content":"                + \"The total amount for expense is $12.88\" + System.lineSeparator()","lastModifiedDate":"2021-04-03"},{"lineNumber":27,"author":{"gitId":"LeeHanYongAndy"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"LeeHanYongAndy"},"content":"        runViewCmdTest(\"executeViewExpense_viewExpenseCmd_success\", \"expense\", \"view -e\", expectedOutput);","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void executeViewLoan_viewLoanCmd_success() {","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"LeeHanYongAndy"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"                + \"The total amount for loan is $14.35\" + System.lineSeparator()","lastModifiedDate":"2021-04-05"},{"lineNumber":35,"author":{"gitId":"LeeHanYongAndy"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"LeeHanYongAndy"},"content":"        runViewCmdTest(\"executeViewLoan_viewLoanCmd_success\", \"loan\", \"view -l\", expectedOutput);","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void executeViewSaving_viewSavingCmd_success() {","lastModifiedDate":"2021-03-20"},{"lineNumber":41,"author":{"gitId":"LeeHanYongAndy"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-03-20"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"                + \"The total amount for saving is $9876543211.54\" + System.lineSeparator()","lastModifiedDate":"2021-04-03"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-03-20"},{"lineNumber":44,"author":{"gitId":"LeeHanYongAndy"},"content":"        runViewCmdTest(\"executeViewSaving_viewSavingCmd_success\", \"saving\", \"view -s\", expectedOutput);","lastModifiedDate":"2021-03-20"},{"lineNumber":45,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":48,"author":{"gitId":"LeeHanYongAndy"},"content":"    public void executeViewSaving_viewAllCmd_success() {","lastModifiedDate":"2021-04-05"},{"lineNumber":49,"author":{"gitId":"LeeHanYongAndy"},"content":"        String expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator()","lastModifiedDate":"2021-04-05"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"                + \"The total amount for expense is $2.00\" + System.lineSeparator()","lastModifiedDate":"2021-04-05"},{"lineNumber":51,"author":{"gitId":"LeeHanYongAndy"},"content":"                + \"The total amount for loan is $10.60\" + System.lineSeparator()","lastModifiedDate":"2021-04-05"},{"lineNumber":52,"author":{"gitId":"LeeHanYongAndy"},"content":"                + \"The total amount for saving is $9876543210.54\" + System.lineSeparator()","lastModifiedDate":"2021-04-05"},{"lineNumber":53,"author":{"gitId":"LeeHanYongAndy"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + System.lineSeparator();","lastModifiedDate":"2021-04-05"},{"lineNumber":54,"author":{"gitId":"LeeHanYongAndy"},"content":"        runViewCmdTest(\"executeViewSaving_viewAllCmd_success\", \"all\", \"view -a\", expectedOutput);","lastModifiedDate":"2021-04-05"},{"lineNumber":55,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":56,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":57,"author":{"gitId":"LeeHanYongAndy"},"content":"    private void runViewCmdTest(String viewCmdTestName, String viewCmdTypeToTest,","lastModifiedDate":"2021-03-20"},{"lineNumber":58,"author":{"gitId":"LeeHanYongAndy"},"content":"                                String viewCmdStr, String expectedOutput) {","lastModifiedDate":"2021-03-20"},{"lineNumber":59,"author":{"gitId":"LeeHanYongAndy"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-03-20"},{"lineNumber":60,"author":{"gitId":"LeeHanYongAndy"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-03-20"},{"lineNumber":61,"author":{"gitId":"LeeHanYongAndy"},"content":"        ParserHandler parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"gerardtwk"},"content":"        CreditScoreReturnedLoansMap creditScoreReturnedLoansMap \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"gerardtwk"},"content":"                new CreditScoreReturnedLoansMap(new HashMap\u003c\u003e());","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"        RecordList records \u003d getPopulatedRecordList(viewCmdTypeToTest);","lastModifiedDate":"2021-03-20"},{"lineNumber":65,"author":{"gitId":"marklowsk"},"content":"        CommandHandler commandHandler \u003d new CommandHandler();","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":67,"author":{"gitId":"marklowsk"},"content":"        Command command \u003d commandHandler.parseCommand(parserHandler.getParseInput(viewCmdStr), records);","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":69,"author":{"gitId":"LeeHanYongAndy"},"content":"        assertTrue(command instanceof ViewCommand, String.format(\"Failed test \u0027%s\u0027, \"","lastModifiedDate":"2021-03-20"},{"lineNumber":70,"author":{"gitId":"LeeHanYongAndy"},"content":"                + \"command object returned by parseCommand() is not an instance of ViewCommand.\", viewCmdTestName));","lastModifiedDate":"2021-03-20"},{"lineNumber":71,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":72,"author":{"gitId":"LeeHanYongAndy"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-03-20"},{"lineNumber":73,"author":{"gitId":"LeeHanYongAndy"},"content":"        ByteArrayOutputStream viewCmdBos \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-03-20"},{"lineNumber":74,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.setOut(new PrintStream(viewCmdBos));","lastModifiedDate":"2021-03-20"},{"lineNumber":75,"author":{"gitId":"gerardtwk"},"content":"        command.execute(records, ui, storage, creditScoreReturnedLoansMap);","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"LeeHanYongAndy"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-03-20"},{"lineNumber":77,"author":{"gitId":"LeeHanYongAndy"},"content":"        assertTrue(viewCmdBos.toString().equals(expectedOutput), String.format(\"Failed test \u0027%s\u0027, wrong output.\",","lastModifiedDate":"2021-03-20"},{"lineNumber":78,"author":{"gitId":"LeeHanYongAndy"},"content":"                viewCmdTestName));","lastModifiedDate":"2021-03-20"},{"lineNumber":79,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":80,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":81,"author":{"gitId":"LeeHanYongAndy"},"content":"    private RecordList getPopulatedRecordList(String viewCmdTypeToTest) {","lastModifiedDate":"2021-03-20"},{"lineNumber":82,"author":{"gitId":"LeeHanYongAndy"},"content":"        RecordList records \u003d new RecordList();","lastModifiedDate":"2021-03-20"},{"lineNumber":83,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":84,"author":{"gitId":"LeeHanYongAndy"},"content":"        if (viewCmdTypeToTest.equals(\"expense\")) {","lastModifiedDate":"2021-03-20"},{"lineNumber":85,"author":{"gitId":"LeeHanYongAndy"},"content":"            records.addRecord(new Expense(new BigDecimal(\"2\"), validateDate(\"2020/01/01\"), \"electric bills\"));","lastModifiedDate":"2021-04-05"},{"lineNumber":86,"author":{"gitId":"LeeHanYongAndy"},"content":"            records.addRecord(new Expense(new BigDecimal(\"10.88\"), validateDate(\"2020/01/02\"), \"phone bills\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":87,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":88,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":89,"author":{"gitId":"LeeHanYongAndy"},"content":"        if (viewCmdTypeToTest.equals(\"loan\")) {","lastModifiedDate":"2021-03-20"},{"lineNumber":90,"author":{"gitId":"LeeHanYongAndy"},"content":"            records.addRecord(new Loan(new BigDecimal(\"10.60\"), validateDate(\"2020/01/01\"), \"loan to bob\", \"bob\"));","lastModifiedDate":"2021-04-05"},{"lineNumber":91,"author":{"gitId":"LeeHanYongAndy"},"content":"            records.addRecord(new Loan(new BigDecimal(\"3.75\"), validateDate(\"2020/01/02\"), \"loan to alice\", \"alice\"));","lastModifiedDate":"2021-04-05"},{"lineNumber":92,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":93,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":94,"author":{"gitId":"LeeHanYongAndy"},"content":"        if (viewCmdTypeToTest.equals(\"saving\")) {","lastModifiedDate":"2021-03-20"},{"lineNumber":95,"author":{"gitId":"LeeHanYongAndy"},"content":"            records.addRecord(new Saving(new BigDecimal(\"9876543210.54\"), validateDate(\"2020/01/01\"), \"red packet\"));","lastModifiedDate":"2021-04-05"},{"lineNumber":96,"author":{"gitId":"LeeHanYongAndy"},"content":"            records.addRecord(new Saving(new BigDecimal(\"1.00\"), validateDate(\"2020/01/02\"), \"pocket money\"));","lastModifiedDate":"2021-04-05"},{"lineNumber":97,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":98,"author":{"gitId":"LeeHanYongAndy"},"content":"        if (viewCmdTypeToTest.equals(\"all\")) {","lastModifiedDate":"2021-04-05"},{"lineNumber":99,"author":{"gitId":"LeeHanYongAndy"},"content":"            records.addRecord(new Expense(new BigDecimal(\"2\"), validateDate(\"2020/01/01\"), \"electric bills\"));","lastModifiedDate":"2021-04-05"},{"lineNumber":100,"author":{"gitId":"LeeHanYongAndy"},"content":"            records.addRecord(new Loan(new BigDecimal(\"10.60\"), validateDate(\"2020/01/01\"), \"loan to bob\", \"bob\"));","lastModifiedDate":"2021-04-05"},{"lineNumber":101,"author":{"gitId":"LeeHanYongAndy"},"content":"            records.addRecord(new Saving(new BigDecimal(\"9876543210.54\"), validateDate(\"2020/01/01\"), \"red packet\"));","lastModifiedDate":"2021-04-05"},{"lineNumber":102,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":103,"author":{"gitId":"LeeHanYongAndy"},"content":"        return records;","lastModifiedDate":"2021-03-20"},{"lineNumber":104,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":105,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"LeeHanYongAndy":99,"marklowsk":2,"gerardtwk":4}},{"path":"src/test/java/seedu/duke/common/ValidatorsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"marklowsk"},"content":"package seedu.duke.common;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"marklowsk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"import seedu.duke.exception.CustomException;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"marklowsk"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"marklowsk"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"LeeHanYongAndy"},"content":"import static seedu.duke.common.Validators.validateAmount;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"marklowsk"},"content":"import static seedu.duke.common.Validators.validateDate;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"marklowsk"},"content":"class ValidatorsTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"marklowsk"},"content":"    void validateDate_properDateFormat_success() {","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"marklowsk"},"content":"        String[] dateStrings \u003d {","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"marklowsk"},"content":"            \"13122011\", \"13.1.2011\", \"13-1-2011\", \"13/1/2011\", \"30120001\",","lastModifiedDate":"2021-04-03"},{"lineNumber":18,"author":{"gitId":"marklowsk"},"content":"            \"2011.1.13\", \"2011-1-13\", \"2011/1/13\", \"2020.2.29\", \"today\"","lastModifiedDate":"2021-04-03"},{"lineNumber":19,"author":{"gitId":"marklowsk"},"content":"        };","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"marklowsk"},"content":"        try {","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"marklowsk"},"content":"            for (String d : dateStrings) {","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"marklowsk"},"content":"                validateDate(d);","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"marklowsk"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"marklowsk"},"content":"            fail();","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"marklowsk"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"marklowsk"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"marklowsk"},"content":"    void validateDate_improperDateFormat() {","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"marklowsk"},"content":"        int counter \u003d 0;","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"marklowsk"},"content":"        String[] dateStrings \u003d {","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"marklowsk"},"content":"            \"12345678\", \"13.13.2011\", \"13-13-2011\", \"13 13 2011\", \"30120000\",","lastModifiedDate":"2021-04-03"},{"lineNumber":34,"author":{"gitId":"marklowsk"},"content":"            \"2011 1 13\", \"2011-1/13\", \"2011/1.13\", \"2020.2.30\", \"today123\"","lastModifiedDate":"2021-04-03"},{"lineNumber":35,"author":{"gitId":"marklowsk"},"content":"        };","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"marklowsk"},"content":"        for (String d : dateStrings) {","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"marklowsk"},"content":"            try {","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"marklowsk"},"content":"                validateDate(d);","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"marklowsk"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"marklowsk"},"content":"                counter++;","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"marklowsk"},"content":"            }","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"marklowsk"},"content":"        if (dateStrings.length !\u003d counter) {","lastModifiedDate":"2021-04-03"},{"lineNumber":44,"author":{"gitId":"marklowsk"},"content":"            fail();","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"marklowsk"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"marklowsk"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"LeeHanYongAndy"},"content":"    void validateAmount_properFormat_expectSuccess() {","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfAmount \u003d {\"1\", \"1.0\", \"1.00\", \"0.1\", \"0.10\", \"987654321\"};","lastModifiedDate":"2021-04-05"},{"lineNumber":51,"author":{"gitId":"LeeHanYongAndy"},"content":"        try {","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"LeeHanYongAndy"},"content":"            for (String testAmount : arrayOfAmount) {","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"LeeHanYongAndy"},"content":"                validateAmount(testAmount);","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"LeeHanYongAndy"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"LeeHanYongAndy"},"content":"        } catch (NumberFormatException | CustomException e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"LeeHanYongAndy"},"content":"            fail();","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"LeeHanYongAndy"},"content":"    void validateAmount_wrongFormat_expectFailure() {","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"LeeHanYongAndy"},"content":"        int numFailCase \u003d 0;","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfAmount \u003d {\"0\", \"-1\", \"1num1word\", \"wordonly\", \".50\", \"5.\", \"5.123\"};","lastModifiedDate":"2021-04-05"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (String testAmount : arrayOfAmount) {","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"LeeHanYongAndy"},"content":"            try {","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"                validateAmount(testAmount);","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"            } catch (NumberFormatException | CustomException e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"                numFailCase++;","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"LeeHanYongAndy"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"LeeHanYongAndy"},"content":"        if (arrayOfAmount.length !\u003d numFailCase) {","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"LeeHanYongAndy"},"content":"            fail();","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"marklowsk"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"marklowsk":45,"LeeHanYongAndy":30}},{"path":"src/test/java/seedu/duke/parser/ParserHandlerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LeeHanYongAndy"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"LeeHanYongAndy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"LeeHanYongAndy"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"LeeHanYongAndy"},"content":"class ParserHandlerTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"LeeHanYongAndy"},"content":"    private ParserHandler parserHandler;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_emptyInput() {","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"LeeHanYongAndy"},"content":"        parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"LeeHanYongAndy"},"content":"        String input \u003d \"\";","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] expected \u003d {\"\"};","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] actual \u003d parserHandler.getParseInput(input).toArray(new String[0]);","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"LeeHanYongAndy"},"content":"        assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_oneWord() {","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"LeeHanYongAndy"},"content":"        parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfTestCase \u003d {\"add\", \"add \", \" add\", \" add \"};","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] expected \u003d {\"add\"};","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (String testCase : arrayOfTestCase) {","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] actual \u003d parserHandler.getParseInput(testCase).toArray(new String[0]);","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"LeeHanYongAndy"},"content":"            assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_oneOption_noArgument() {","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"LeeHanYongAndy"},"content":"        parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfTestCase \u003d {\"-e\", \"-e \", \" -e\", \" -e \"};","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] expected \u003d {\"-e\", \"\"};","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (String testCase : arrayOfTestCase) {","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] actual \u003d parserHandler.getParseInput(testCase).toArray(new String[0]);","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"LeeHanYongAndy"},"content":"            assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_TwoOption_noArgument() {","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"LeeHanYongAndy"},"content":"        parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfTestCase \u003d {\"-e -s\", \"-e -s \", \" -e -s\", \" -e -s \", \" -e   -s \"};","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] expected \u003d {\"-e\", \"\", \"-s\", \"\"};","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (String testCase : arrayOfTestCase) {","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] actual \u003d parserHandler.getParseInput(testCase).toArray(new String[0]);","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"LeeHanYongAndy"},"content":"            assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_gotOption_noArgument() {","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"LeeHanYongAndy"},"content":"        parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfTestCase \u003d {\"add -e\", \"add -e \", \" add -e\", \" add -e \"};","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] expected \u003d {\"add\", \"-e\", \"\"};","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (String testCase : arrayOfTestCase) {","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] actual \u003d parserHandler.getParseInput(testCase).toArray(new String[0]);","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"LeeHanYongAndy"},"content":"            assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_TwoOption_noArgument_inMiddle() {","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"LeeHanYongAndy"},"content":"        parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfTestCase \u003d {\"add -e -s -a 10\", \"add -e -s -a 10 \",","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"LeeHanYongAndy"},"content":"            \" add -e -s -a 10\", \" add -e -s -a 10 \"};","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] expected \u003d {\"add\", \"-e\", \"\", \"-s\", \"\", \"-a\", \"10\"};","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (String testCase : arrayOfTestCase) {","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] actual \u003d parserHandler.getParseInput(testCase).toArray(new String[0]);","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"LeeHanYongAndy"},"content":"            assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_manyWhiteSpace() {","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"LeeHanYongAndy"},"content":"        parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfTestCase \u003d {\"            add   -e   beer -a     10    -d   2020-01-01       \"};","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] expected \u003d {\"add\", \"-e\", \"beer\", \"-a\", \"10\", \"-d\", \"2020-01-01\"};","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (String testCase : arrayOfTestCase) {","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] actual \u003d parserHandler.getParseInput(testCase).toArray(new String[0]);","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"LeeHanYongAndy"},"content":"            assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":85,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":86,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":87,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_help_noArgument() {","lastModifiedDate":"2021-03-19"},{"lineNumber":88,"author":{"gitId":"LeeHanYongAndy"},"content":"        parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfTestCase \u003d {\"help\", \"help \", \"help  \", \" help\", \"  help\", \" help \"};","lastModifiedDate":"2021-03-19"},{"lineNumber":90,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] expected \u003d {\"help\", \"all\"};","lastModifiedDate":"2021-03-19"},{"lineNumber":91,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (String testCase : arrayOfTestCase) {","lastModifiedDate":"2021-03-19"},{"lineNumber":92,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] actual \u003d parserHandler.getParseInput(testCase).toArray(new String[0]);","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"LeeHanYongAndy"},"content":"            assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-19"},{"lineNumber":94,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":95,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":96,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":97,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":98,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_help_withArguments() {","lastModifiedDate":"2021-03-19"},{"lineNumber":99,"author":{"gitId":"LeeHanYongAndy"},"content":"        parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfTestCase \u003d {\"help add\", \"help     asd\", \"help    asd\", \" help asd   \"};","lastModifiedDate":"2021-03-19"},{"lineNumber":101,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[][] preExpected \u003d {{\"help\", \"add\"}, {\"help\", \"asd\"}, {\"help\", \"asd\"}, {\"help\", \"asd\"}};","lastModifiedDate":"2021-03-19"},{"lineNumber":102,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (int i \u003d 0; i \u003c arrayOfTestCase.length; i++) {","lastModifiedDate":"2021-03-19"},{"lineNumber":103,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] actual \u003d parserHandler.getParseInput(arrayOfTestCase[i]).toArray(new String[0]);","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] expected \u003d preExpected[i];","lastModifiedDate":"2021-03-19"},{"lineNumber":105,"author":{"gitId":"LeeHanYongAndy"},"content":"            assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-19"},{"lineNumber":106,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":107,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":108,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":109,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":110,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_creditscore_noArgument() {","lastModifiedDate":"2021-03-19"},{"lineNumber":111,"author":{"gitId":"LeeHanYongAndy"},"content":"        parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfTestCase \u003d {\"creditscore\", \"creditscore \", \"creditscore  \",","lastModifiedDate":"2021-03-19"},{"lineNumber":113,"author":{"gitId":"LeeHanYongAndy"},"content":"            \" creditscore\", \"  creditscore\", \" creditscore \"};","lastModifiedDate":"2021-03-19"},{"lineNumber":114,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] expected \u003d {\"creditscore\", \"\"};","lastModifiedDate":"2021-03-19"},{"lineNumber":115,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (String testCase : arrayOfTestCase) {","lastModifiedDate":"2021-03-19"},{"lineNumber":116,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] actual \u003d parserHandler.getParseInput(testCase).toArray(new String[0]);","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"LeeHanYongAndy"},"content":"            assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-19"},{"lineNumber":118,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":119,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":120,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":121,"author":{"gitId":"LeeHanYongAndy"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":122,"author":{"gitId":"LeeHanYongAndy"},"content":"    void parse_testCase_creditscore_withArguments() {","lastModifiedDate":"2021-03-19"},{"lineNumber":123,"author":{"gitId":"LeeHanYongAndy"},"content":"        parserHandler \u003d new ParserHandler();","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[] arrayOfTestCase \u003d {\"creditscore andy\", \"creditscore     asd\",","lastModifiedDate":"2021-03-19"},{"lineNumber":125,"author":{"gitId":"LeeHanYongAndy"},"content":"            \"creditscore    asd\", \" creditscore asd   \"};","lastModifiedDate":"2021-03-19"},{"lineNumber":126,"author":{"gitId":"LeeHanYongAndy"},"content":"        String[][] preExpected \u003d {{\"creditscore\", \"andy\"}, {\"creditscore\", \"asd\"},","lastModifiedDate":"2021-03-19"},{"lineNumber":127,"author":{"gitId":"LeeHanYongAndy"},"content":"            {\"creditscore\", \"asd\"}, {\"creditscore\", \"asd\"}};","lastModifiedDate":"2021-03-19"},{"lineNumber":128,"author":{"gitId":"LeeHanYongAndy"},"content":"        for (int i \u003d 0; i \u003c arrayOfTestCase.length; i++) {","lastModifiedDate":"2021-03-19"},{"lineNumber":129,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] actual \u003d parserHandler.getParseInput(arrayOfTestCase[i]).toArray(new String[0]);","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"LeeHanYongAndy"},"content":"            String[] expected \u003d preExpected[i];","lastModifiedDate":"2021-03-19"},{"lineNumber":131,"author":{"gitId":"LeeHanYongAndy"},"content":"            assertArrayEquals(expected, actual);","lastModifiedDate":"2021-03-19"},{"lineNumber":132,"author":{"gitId":"LeeHanYongAndy"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":133,"author":{"gitId":"LeeHanYongAndy"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":134,"author":{"gitId":"LeeHanYongAndy"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"LeeHanYongAndy":134}},{"path":"src/test/java/seedu/duke/record/RecordListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gerardtwk"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"gerardtwk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"LeeHanYongAndy"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"LeeHanYongAndy"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"gerardtwk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"gerardtwk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"LeeHanYongAndy"},"content":"import static seedu.duke.common.Validators.validateDate;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"gerardtwk"},"content":"public class RecordListTest {","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"gerardtwk"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"gerardtwk"},"content":"    public void addRecord_expenseLoanSavingObjs_success() {","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"gerardtwk"},"content":"        RecordList records \u003d getPopulatedRecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"gerardtwk"},"content":"        assertEquals(3, records.getRecordCount(),","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"gerardtwk"},"content":"                \"Failed test \u0027addRecord_expenseLoanSavingObjs_success\u0027, expected a record count of 3 but \"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"gerardtwk"},"content":"                        + \"RecordList::getRecordCount() returned \" + records.getRecordCount());","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"gerardtwk"},"content":"        assertEquals(\"[E][2020-01-01] electric bills \", records.getRecordAt(0).toString(),","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"gerardtwk"},"content":"                \"Failed test \u0027addRecord_expenseLoanSavingObjs_success\u0027, wrong record object at index 0 of \"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"gerardtwk"},"content":"                        + \"record list\");","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"gerardtwk"},"content":"        assertEquals(\"[L][2020-01-01] loan to bob [ ]\", records.getRecordAt(1).toString(),","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"gerardtwk"},"content":"                \"Failed test \u0027addRecord_expenseLoanSavingObjs_success\u0027, wrong record object at index 1 of \"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"gerardtwk"},"content":"                        + \"record list\");","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"gerardtwk"},"content":"        assertEquals(\"[S][2020-01-01] red packet \", records.getRecordAt(2).toString(),","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"gerardtwk"},"content":"                \"Failed test \u0027addRecord_expenseLoanSavingObjs_success\u0027, wrong record object at index 2 of \"","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"gerardtwk"},"content":"                        + \"record list\");","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"gerardtwk"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"gerardtwk"},"content":"    public void deleteRecordAt_indexOfAddedRecordToDelete_success() {","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"gerardtwk"},"content":"        RecordList records \u003d getPopulatedRecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"gerardtwk"},"content":"        records.deleteRecordAt(1);","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"gerardtwk"},"content":"        assertEquals(2, records.getRecordCount(),","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"gerardtwk"},"content":"                \"Failed test \u0027deleteRecordAt_indexOfAddedRecordToDelete_success\u0027, expected a record count of 2 but \"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"gerardtwk"},"content":"                        + \"RecordList::getRecordCount() returned \" + records.getRecordCount());","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"gerardtwk"},"content":"        assertEquals(\"[E][2020-01-01] electric bills \", records.getRecordAt(0).toString(),","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"gerardtwk"},"content":"                \"Failed test \u0027deleteRecordAt_indexOfAddedRecordToDelete_success\u0027, wrong record object at index 0 of \"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"gerardtwk"},"content":"                        + \"record list\");","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"gerardtwk"},"content":"        assertEquals(\"[S][2020-01-01] red packet \", records.getRecordAt(1).toString(),","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"gerardtwk"},"content":"                \"Failed test \u0027deleteRecordAt_indexOfAddedRecordToDelete_success\u0027, wrong record object at index 1 of \"","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"gerardtwk"},"content":"                        + \"record list\");","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"gerardtwk"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"gerardtwk"},"content":"    public void deleteAllRecords_noTestInputs_success() {","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"gerardtwk"},"content":"        RecordList records \u003d getPopulatedRecordList();","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"gerardtwk"},"content":"        records.deleteAllRecords();","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"gerardtwk"},"content":"        assertTrue(records.isEmpty(), \"Failed test \u0027deleteAllRecords_noTestInputs_success\u0027, expected an empty \"","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"gerardtwk"},"content":"                + \"record list but RecordList::isEmpty() returned false\");","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"gerardtwk"},"content":"        assertEquals(0, records.getRecordCount(),","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"gerardtwk"},"content":"                \"Failed test \u0027deleteAllRecords_noTestInputs_success\u0027, expected a record count of 0 but \"","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"gerardtwk"},"content":"                        + \"RecordList::getRecordCount() returned \" + records.getRecordCount());","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"gerardtwk"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"gerardtwk"},"content":"    private RecordList getPopulatedRecordList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"gerardtwk"},"content":"        RecordList records \u003d new RecordList();","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"LeeHanYongAndy"},"content":"        records.addRecord(new Expense(new BigDecimal(\"220.50\"), validateDate(\"2020/01/01\"), \"electric bills\"));","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"gerardtwk"},"content":"        records.addRecord(new Loan(new BigDecimal(\"100\"), validateDate(\"2020/01/01\"), \"loan to bob\", \"bob\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"LeeHanYongAndy"},"content":"        records.addRecord(new Saving(new BigDecimal(\"20\"), validateDate(\"2020/01/01\"), \"red packet\"));","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"gerardtwk"},"content":"        return records;","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"gerardtwk"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"gerardtwk"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"LeeHanYongAndy":5,"gerardtwk":56}}]
