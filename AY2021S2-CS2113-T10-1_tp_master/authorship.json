[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"    mainClassName \u003d \"seedu.fridgefriend.FridgeFriend\"","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"    archiveBaseName \u003d \"fridgefriend\"","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":44,"SimJJ96":2}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"# ABOUT US","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"We are a team based in [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg/).","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"## Project Team","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"----------|:------:|:--------------:|:---------:","lastModifiedDate":"2021-03-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"![Hu Wen Qi](team/hwq_pic.png) | Hu Wenqi | [Github](https://github.com/Vinci-Hu) | [Portfolio](team/wenqihu.md)","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"![Kim Joohwan](team/jw_pic.png) | Kim Joohwan | [Github](https://github.com/joohwan58) | [Portfolio](team/joohwan.md)","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"![Lee Yang Peng](team/lyp_pic.png)| Lee Yang Peng | [Github](https://github.com/Leeyp) | [Portfolio](team/leeyp.md)","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"![Ryan Kwok](team/kwokyto_pic.jpg) | Ryan Kwok | [Github](https://github.com/kwokyto) | [Portfolio](team/kwokyto.md)","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"![Sim Jing Jie](team/sjj_pic.png) | Sim Jing Jie | [Github](https://github.com/SimJJ96/) | [Portfolio](team/simjingjie.md)","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"kwokyto":9,"-":9}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"# FridgeFriend","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"{Give product intro here}","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"joohwan58":1,"-":7}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"`FridgeFriend` is an app for managing food in the fridge, optimised for use via a Command Line Interface (CLI).","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"If you can type fast, `FridgeFriend` can track your cold or frozen groceries faster and easier than any other apps.","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"It is written in Java, and has more than 1.5kLoC.","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"1. Download the latest version of `FridgeFriend` from [here](https://github.com/AY2021S2-CS2113-T10-1/tp/releases/tag/v1.0).","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"{Give detailed description of each feature}","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"**Notes about the command format:**","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":"* Words in UPPER_CASE are the parameters to be supplied by the user.\\","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"  e.g. `add FOOD_NAME`, `FOOD_NAME` is a parameter which can be used as `add chicken`.","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"  ","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"### Adding a food item: `add`","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":"Adds a food item into the fridge.","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"Format: `add FOOD_NAME /cat FOOD_CATEGORY /exp EXPIRY_DATE /loc LOCATION_IN_THE_FRIDGE`","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":"* The `FOOD_NAME` can be the name of a food but not an empty description.","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"* The `FOOD_CATEGORY` can be the basic food groups otherwise it will be categorised as others.","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":"* The `EXPIRY_DATE` must be in the format `dd-mm-yyyy`.","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":"* The `LOCATION_IN_THE_FRIDGE` can be a general compartment in a fridge.","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"Additional info:","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"* Basic Food Groups:`MEAT`, `SEAFOOD`, `EGG`, `DAIRY`, `VEGETABLE`, `FRUIT`,","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"  `BEVERAGE`, `COOKED_DISH`, `READY_TO_EAT`, `FROZEN`, `OTHERS`","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"* Basic fridge location: `FREEZER`, `UPPER_SHELF`, `MIDDLE_SHELF`, `LOWER_SHELF`, ","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"SimJJ96"},"content":"  `DRAWERS`, `FRIDGE_DOOR`, `OTHERS`","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"SimJJ96"},"content":"Example of usage:","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"SimJJ96"},"content":"```","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e add chicken /cat meat /exp 30-06-2021 /loc lower_shelf","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"SimJJ96"},"content":"Great! I have added chicken into your fridge.","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"SimJJ96"},"content":"Details: Food name: chicken, category: MEAT, expiry: 30-06-2021, stored in: LOWER_SHELF","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"SimJJ96"},"content":"```","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"Vinci-Hu"},"content":"### Display the list of all foods: `list`","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"Vinci-Hu"},"content":"Displays the full list of food items stored in the fridge.","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"Vinci-Hu"},"content":"Format: `list`","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"Vinci-Hu"},"content":"* There should not be any descriptions after keyword `list`.  ","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"Vinci-Hu"},"content":"Example of usage:","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"Vinci-Hu"},"content":"```","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e list","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"Vinci-Hu"},"content":"Here are the items in your fridge:","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"Vinci-Hu"},"content":"    1. chicken [MEAT]","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"Vinci-Hu"},"content":"    2. grouper [SEAFOOD]","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"Vinci-Hu"},"content":"```","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"Vinci-Hu"},"content":"### Display the list of foods by category: `list \u003cCATEGORY\u003e`","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"Vinci-Hu"},"content":"Displays the list of food items under specified category stored in the fridge.","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"Vinci-Hu"},"content":"Format: `list CATEGORY_NAME`","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"Vinci-Hu"},"content":"* The `CATEGORY_NAME` can only be recognized if it is in the pre-defined categories:","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"Vinci-Hu"},"content":"`VEGETABLE, FRUIT, MEAT, SEAFOOD, EGG, DAIRY, BEVERAGE, COOKED_DISH, READY_TO_EAT, FROZEN, OTHER`","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"kwokyto"},"content":"* The `CATEGORY_NAME` is case-insensitive.","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"kwokyto"},"content":"* If other category names are detected, `FridgeFriend` would give an error message.","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"Vinci-Hu"},"content":"Example of usage:","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"Vinci-Hu"},"content":"*Situation 1: There is one food called chicken under MEAT category.*","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"Vinci-Hu"},"content":"```","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e list MEAT","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"Vinci-Hu"},"content":"These are the MEAT in your fridge:","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"Vinci-Hu"},"content":"\t1. chicken","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"Vinci-Hu"},"content":"```","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"kwokyto"},"content":"*Situation 2: There are no foods under READY_TO_EAT category.*","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"Vinci-Hu"},"content":"```","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e list ready_to_eat","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"Vinci-Hu"},"content":"These are the READY_TO_EAT in your fridge:","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"Vinci-Hu"},"content":"```","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"kwokyto"},"content":"### Remove a food item: `remove`","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":95,"author":{"gitId":"kwokyto"},"content":"Removes a food item based on its index.","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":97,"author":{"gitId":"kwokyto"},"content":"Format: `remove INDEX`","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"kwokyto"},"content":"* The `INDEX` must be a valid index.","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"kwokyto"},"content":"* If the `INDEX` is out of bounds, `FridgeFriend` will give an error message.","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":102,"author":{"gitId":"kwokyto"},"content":"Example of usage:","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"kwokyto"},"content":"```","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e list","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"kwokyto"},"content":"Here are the items in your fridge:","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"kwokyto"},"content":"        1. chicken [MEAT]","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"kwokyto"},"content":"        2. mango [OTHER]","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"kwokyto"},"content":"        3. milk [OTHER]","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e remove 2","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"kwokyto"},"content":"Noted! I\u0027ve removed mango from your fridge.","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"kwokyto"},"content":"Now you have 2 food in the fridge.","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e list","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"kwokyto"},"content":"Here are the items in your fridge:","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"kwokyto"},"content":"        1. chicken [MEAT]","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"kwokyto"},"content":"        2. milk [OTHER]","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"kwokyto"},"content":"```","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"Leeyp"},"content":"### Search: `search`","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"Leeyp"},"content":"Checks if a certain food item is inside the fridge, and if the item is found, informs user of the food\u0027s storage location.","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"Leeyp"},"content":"Format: `search FOOD_NAME`","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"Leeyp"},"content":"* The `FOOD_NAME` can be the name of a food but not an empty description.","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"Leeyp"},"content":"* The command requires the user to input the exact name of the food item `FOOD_NAME` to be searched for.","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"Leeyp"},"content":"  The names of food items stored in the fridge can be determined with `list`. ","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"Leeyp"},"content":"* If there are multiple items with the same name in the fridge, only the first item added to the fridge","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"Leeyp"},"content":"  in order of the output of `list` will be returned.","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"Leeyp"},"content":"Example of usage:","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"Leeyp"},"content":"*In this example, Fridge contains only one item `grouper` stored in the `FREEZER` location.*","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"kwokyto"},"content":"```","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e search grouper","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"kwokyto"},"content":"You have grouper stored in FREEZER of your fridge.","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e search oyster","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"kwokyto"},"content":"You do not have oyster in your fridge.","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"kwokyto"},"content":"```","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"kwokyto"},"content":"### List expiring foods: `expiring`","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"kwokyto"},"content":"Displays a list of food items that are expiring within a week.","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"kwokyto"},"content":"Format: `expiring`","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"kwokyto"},"content":"Example of usage:","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"kwokyto"},"content":"```","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e expiring","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"kwokyto"},"content":"These are the food expiring in the next week:","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"kwokyto"},"content":"1. Food name: chicken wings, category: MEAT, expiry: 21-03-2021, stored in: MIDDLE_SHELF","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"kwokyto"},"content":"```","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"kwokyto"},"content":"### Get help message: `help`","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"kwokyto"},"content":"Prints a list of available commands and formats.","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"kwokyto"},"content":"Format: `help`","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"kwokyto"},"content":"Example of usage:","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"kwokyto"},"content":"```","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e help","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"kwokyto"},"content":"These are the list of available commands:","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"kwokyto"},"content":"        add foodName /cat categoryName /exp dd-mm-yyyy /loc storageLocation","lastModifiedDate":"2021-03-17"},{"lineNumber":170,"author":{"gitId":"kwokyto"},"content":"        list","lastModifiedDate":"2021-03-17"},{"lineNumber":171,"author":{"gitId":"kwokyto"},"content":"        list categoryName","lastModifiedDate":"2021-03-17"},{"lineNumber":172,"author":{"gitId":"kwokyto"},"content":"        remove index","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"kwokyto"},"content":"        search searchString","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"kwokyto"},"content":"        expiring","lastModifiedDate":"2021-03-17"},{"lineNumber":175,"author":{"gitId":"kwokyto"},"content":"        help","lastModifiedDate":"2021-03-17"},{"lineNumber":176,"author":{"gitId":"kwokyto"},"content":"        bye","lastModifiedDate":"2021-03-17"},{"lineNumber":177,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":178,"author":{"gitId":"kwokyto"},"content":"This is the list of food categories:","lastModifiedDate":"2021-03-17"},{"lineNumber":179,"author":{"gitId":"kwokyto"},"content":"        [VEGETABLE, FRUIT, MEAT, SEAFOOD, EGG, DAIRY, BEVERAGE, COOKED_DISH, READY_TO_EAT, FROZEN, OTHER]","lastModifiedDate":"2021-03-17"},{"lineNumber":180,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":181,"author":{"gitId":"kwokyto"},"content":"This is the list of storage locations:","lastModifiedDate":"2021-03-17"},{"lineNumber":182,"author":{"gitId":"kwokyto"},"content":"        [FREEZER, UPPER_SHELF, MIDDLE_SHELF, LOWER_SHELF, DRAWERS, FRIDGE_DOOR, OTHER]","lastModifiedDate":"2021-03-17"},{"lineNumber":183,"author":{"gitId":"kwokyto"},"content":"```","lastModifiedDate":"2021-03-17"},{"lineNumber":184,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":185,"author":{"gitId":"kwokyto"},"content":"### Exit the application: `bye`","lastModifiedDate":"2021-03-17"},{"lineNumber":186,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":187,"author":{"gitId":"kwokyto"},"content":"Exits the application.","lastModifiedDate":"2021-03-17"},{"lineNumber":188,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":189,"author":{"gitId":"kwokyto"},"content":"Format: `bye`","lastModifiedDate":"2021-03-17"},{"lineNumber":190,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":191,"author":{"gitId":"kwokyto"},"content":"Example of usage:","lastModifiedDate":"2021-03-17"},{"lineNumber":192,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":193,"author":{"gitId":"kwokyto"},"content":"```","lastModifiedDate":"2021-03-17"},{"lineNumber":194,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e bye","lastModifiedDate":"2021-03-17"},{"lineNumber":195,"author":{"gitId":"kwokyto"},"content":"Bye! Hope to see you again soon!","lastModifiedDate":"2021-03-17"},{"lineNumber":196,"author":{"gitId":"kwokyto"},"content":"```","lastModifiedDate":"2021-03-17"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":198,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer?","lastModifiedDate":"2020-05-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":202,"author":{"gitId":"joohwan58"},"content":"**A**: Copy the `.jar` file along with `save` folder to the target computer and place them together into an empty folder.","lastModifiedDate":"2021-03-17"},{"lineNumber":203,"author":{"gitId":"Vinci-Hu"},"content":"As long as the target computer satisfies our project prerequisites, it can run with the saved data as before.","lastModifiedDate":"2021-03-17"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":205,"author":{"gitId":"Vinci-Hu"},"content":"**Q**: What if I forget the correct format of a command?","lastModifiedDate":"2021-03-17"},{"lineNumber":206,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":207,"author":{"gitId":"Vinci-Hu"},"content":"**A**: You will get a tip if you use any of the command keywords incorrectly.","lastModifiedDate":"2021-03-17"},{"lineNumber":208,"author":{"gitId":"Vinci-Hu"},"content":"Plus, you are always welcomed to use `help` command.","lastModifiedDate":"2021-03-17"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":210,"author":{"gitId":"Vinci-Hu"},"content":"**Q**: How do I report a bug?","lastModifiedDate":"2021-03-17"},{"lineNumber":211,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":212,"author":{"gitId":"Vinci-Hu"},"content":"**A**: You can either create a pull request or state in the issues.","lastModifiedDate":"2021-03-17"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":216,"author":{"gitId":"kwokyto"},"content":"* Add food `add FOOD_NAME /cat FOOD_CATEGORY /exp EXPIRY_DATE /loc LOCATION_IN_THE_FRIDGE`","lastModifiedDate":"2021-03-17"},{"lineNumber":217,"author":{"gitId":"kwokyto"},"content":"* List food `list`","lastModifiedDate":"2021-03-17"},{"lineNumber":218,"author":{"gitId":"kwokyto"},"content":"* List food by category `list CATEGORY_NAME`","lastModifiedDate":"2021-03-17"},{"lineNumber":219,"author":{"gitId":"kwokyto"},"content":"* Remove food `remove INDEX`","lastModifiedDate":"2021-03-17"},{"lineNumber":220,"author":{"gitId":"kwokyto"},"content":"* Search for food `search FOOD_NAME`","lastModifiedDate":"2021-03-17"},{"lineNumber":221,"author":{"gitId":"kwokyto"},"content":"* List expiring foods `expiring`","lastModifiedDate":"2021-03-17"},{"lineNumber":222,"author":{"gitId":"kwokyto"},"content":"* Get help message `help`","lastModifiedDate":"2021-03-17"},{"lineNumber":223,"author":{"gitId":"kwokyto"},"content":"* Exit application `bye`","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Leeyp":17,"kwokyto":103,"joohwan58":1,"Vinci-Hu":45,"-":34,"SimJJ96":23}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"/\u0027","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":" \u0027 @@kwokyto-reused","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":" \u0027Reused from https://github.com/nus-cs2113-AY2021S2/addressbook-level3/blob/master/docs/diagrams/style.puml","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":" \u0027/","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"skinparam BackgroundColor #FFFFFFF","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"skinparam Shadowing false","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"skinparam Class {","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":"    BorderThickness 1","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"kwokyto"},"content":"    FontName Arial","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"kwokyto"},"content":"skinparam Actor {","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"kwokyto"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"kwokyto"},"content":"    Color USER_COLOR","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"kwokyto"},"content":"    FontName Arial","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"kwokyto"},"content":"skinparam Sequence {","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"kwokyto"},"content":"    MessageAlign center","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"kwokyto"},"content":"    BoxFontSize 15","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"kwokyto"},"content":"    BoxPadding 0","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"kwokyto"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"kwokyto"},"content":"    FontName Arial","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"kwokyto"},"content":"skinparam Participant {","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"kwokyto"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"kwokyto"},"content":"    Padding 20","lastModifiedDate":"2021-03-21"},{"lineNumber":67,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-21"},{"lineNumber":68,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":69,"author":{"gitId":"kwokyto"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2021-03-21"},{"lineNumber":70,"author":{"gitId":"kwokyto"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2021-03-21"},{"lineNumber":71,"author":{"gitId":"kwokyto"},"content":"skinparam Shadowing false","lastModifiedDate":"2021-03-21"},{"lineNumber":72,"author":{"gitId":"kwokyto"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"kwokyto"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"kwokyto"},"content":"hide footbox","lastModifiedDate":"2021-03-21"},{"lineNumber":76,"author":{"gitId":"kwokyto"},"content":"hide members","lastModifiedDate":"2021-03-21"},{"lineNumber":77,"author":{"gitId":"kwokyto"},"content":"hide circle","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"kwokyto":77}},{"path":"docs/team/joohwan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"# Kim Joohwan - Project Portfolio Page","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2021-03-04"},{"lineNumber":4,"author":{"gitId":"joohwan58"},"content":"This is a student project for university software development course.","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":6,"author":{"gitId":"joohwan58"},"content":"I am one of the contributors to the FridgeFriend project.","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":8,"author":{"gitId":"joohwan58"},"content":"## Project: FridgeFriend","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"joohwan58"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"joohwan58"},"content":"FridgeFriend is an app that helps you keep track of food in your fridge. It is optimised for use on a command line interface(CLI).","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2021-03-04"},{"lineNumber":12,"author":{"gitId":"joohwan58"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"joohwan58"},"content":"v1.0 tasks: implement the ability to save the data across different sessions.","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"joohwan58"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"joohwan58"},"content":"Code contributions:","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"joohwan58"},"content":"- Implemented the \u0027Save\u0027 class to allow for saving of data into a text file","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"joohwan58"},"content":"- Modified the \u0027Food\u0027 class to better work with the \u0027Save\u0027 class","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"joohwan58"},"content":"- Created new exceptions to handle possible errors with \u0027Save\u0027 class","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"joohwan58"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"joohwan58"},"content":"Docs:","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"joohwan58"},"content":"- Added explanation of how to transfer save data between devices","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"joohwan58"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"joohwan58"},"content":"Team contributions:","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"joohwan58"},"content":"- Help review PRs and suggest changes","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"joohwan58"},"content":"- Give suggestions and assist in meetings","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"joohwan58":20,"-":5}},{"path":"docs/team/kwokyto.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Ryan Kwok - Project Portfolio Page","lastModifiedDate":"2021-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"## Project: FridgeFriend","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"FridgeFriend is an app for managing food in the fridge, optimised for use via a Command Line Interface (CLI).","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"If you can type fast, FridgeFriend can track your cold or frozen groceries faster and easier than any other apps.","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"It is written in Java, and have about __kLoC.","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2021-03-04"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"Given below are my contributions to the project","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"- **New Feature**: Added the ability to display a help message","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"  - What it does: Provides the user with a list of available commands and formats.","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"  - Justification: Allows the user the ease of using commands without having to memorise them.","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"  - Pull request: ([#49](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/49))","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"- **New Feature**: Added the ability to search for items that are expiring","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"  - What it does: Allows the user to get a list of all food items that are going to expire in a week.","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"  - Justification: Improves the product signicantly because a user can effectively track the status of","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"  all food items in the fridge with a single command.","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"  - Pull request: ([#66](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/66))","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"- **Code contributed**: [RepoSense Link](https://nus-cs2113-ay2021s2.github.io/tp-dashboard/?search\u003dkwokyto)","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"- **Enhancements to existing features**","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"  - Write and refactored major classes ([#44](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/45))","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"    - `Fridge`","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"    - `Parser`","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"    - `Ui`","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"    - `ByeCommand`","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"    - `InvalidIndexException`","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"    - `InvalidInputException`","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"  - Write additional tests for `Parser` class ([#47](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/47)])","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"  - Write `Logger` class ([#51](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/51))","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"  - Write logging for `FridgeFriend` ([#52](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/52))","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"  - Improve Coding Standards for `Storage` class ([#68](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/68))","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"- **Documentation**","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"  - User Guide","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"    - Added introduction ([#75](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/75/))","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"    - Added documentation for the feature `expiring` ([#69](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/69))","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"    - Added documentation for the feature `remove`, `help`, and `bye` ([#75](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/75/))","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":"    - Standardised input/output format for existing documentation of all features ([#75](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/75/))","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"  - Developer Guide","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"    - Added implementation details of the `xxx` feature ([#xx](placeholder))","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"- **Community**","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"kwokyto"},"content":"  - Pull Requests reviewed with non-trivial review comments (","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"kwokyto"},"content":"      [#38](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/38)","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"kwokyto"},"content":"      [#54](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/54)","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"kwokyto"},"content":"      [#56](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/56)","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"kwokyto"},"content":"      [#61](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/61))","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"kwokyto"},"content":"  - Contributed to forum discussions (","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"kwokyto"},"content":"      examples:","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"kwokyto"},"content":"      [1](https://github.com/nus-cs2113-AY2021S2/forum/issues/45)","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"kwokyto"},"content":"      [2](https://github.com/nus-cs2113-AY2021S2/forum/issues/49))","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"kwokyto"},"content":"  - Reported bugs and suggestions for other teams in the class (","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"kwokyto"},"content":"      examples:","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"kwokyto"},"content":"      [#xx](placeholder))","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"kwokyto":56,"-":4}},{"path":"docs/team/leeyp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Lee Yang Peng- Project Portfolio Page","lastModifiedDate":"2021-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2021-03-04"},{"lineNumber":4,"author":{"gitId":"Leeyp"},"content":"This is a student project for university software development course.","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"Leeyp"},"content":"I am one of the contributors to the FridgeFriend project.","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Leeyp"},"content":"## Project: FridgeFriend","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Leeyp"},"content":"FridgeFriend is an app for managing food in the fridge, optimised for use via a Command Line Interface (CLI).","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"Leeyp"},"content":"If you can type fast, FridgeFriend can track your cold or frozen groceries faster and easier than any other apps.","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"Leeyp"},"content":"It is written in Java.","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Summary of Contributions","lastModifiedDate":"2021-03-04"},{"lineNumber":16,"author":{"gitId":"Leeyp"},"content":"Given below are my contributions to the project:","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Leeyp"},"content":"`v1.0 tasks`: In charge of implementing the skeletal version of FridgeFriend.","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Leeyp"},"content":"**Code contributed**: [RepoSense Link](https://nus-cs2113-ay2021s2.github.io/tp-dashboard/?search\u003dleeyp)","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Leeyp"},"content":"**Version 1.0**","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Leeyp"},"content":"- Implemented the skeletal version of FridgeFriend.","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Leeyp"},"content":"- Created preliminary J-Unit tests for the `Food` Class.","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Leeyp"},"content":"- Contributed to defensive code by adding logging and assertion statements.","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Leeyp"},"content":"**Documentation**","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"Leeyp"},"content":"- User Guide","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"Leeyp"},"content":"    - Added documentation for the command `search` ([#72](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/72))","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"Leeyp"},"content":"**Community**","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"Leeyp"},"content":"- Review pull requests and help maintain group repo","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"Leeyp"},"content":"- Gave suggestions and help debug in weekly meetings","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"Leeyp"},"content":"- [Contributed to Class forum discussions](https://nus-cs2113-ay2021s2.github.io/dashboards/contents/forum-activities.html#1-lee-peng-leeyp-21-posts) ","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Leeyp":27,"-":8}},{"path":"docs/team/simjingjie.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Sim Jing Jie- Project Portfolio Page","lastModifiedDate":"2021-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2021-03-04"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"This is a student project for university software development course.","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"I am one of the contributors to FridgeFriend project.","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"### Summary of Contributions","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"- **Basic Feature** `add`: Added the ability to add a food item to the fridge","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"    * What it does: Add the food item that the user specify into a list.","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"    * Pull request: ","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"        - `add` ([#38](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/38))","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"        - JUnit-Test-Add ([#54](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/54))","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"- **Basic Feature** `remove`: Added the ability to remove a food item from the fridge","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"    * What it does: Remove the index of the food item that the user specify. ","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"    * Pull request:","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":"        - `remove` ([#38](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/38))","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"        - JUnit-Test-Remove ([#56](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/56))","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"- **Basic Feature** `search`: Added the ability to search a specific food item from the fridge","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"    * What it does: Search the specific food item that the user specify.","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":"    * Pull request:","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"        - `search` ([#38](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/38))","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"        - JUnit-Test-Search ([#58](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/58))","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":"- **Basic Feature** `list`: Added the ability to list the item by a category or list all the items","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"    * What it does: list all the food items in the fridge or list the food items by a category. ","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":"    * Pull request:","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":"        - `list` ([#38](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/38))","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"        - JUnit-Test-List([#60](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/60))","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"    ","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"- **Code contributed**: [RepoSense Link](https://nus-cs2113-ay2021s2.github.io/tp-dashboard/?search\u003dSimjj96)","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"- **Documentation**","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"SimJJ96"},"content":"    - User Guide","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"SimJJ96"},"content":"        - Added documentation for the command `add`","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"SimJJ96"},"content":"    ","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"SimJJ96"},"content":"- **Community**","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"SimJJ96"},"content":"    - Review pull requests and maintain group repo","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"-":4,"SimJJ96":37}},{"path":"docs/team/wenqihu.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Hu Wenqi - Project Portfolio Page","lastModifiedDate":"2021-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2021-03-04"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":"This is a student project for university software development course.","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":"I am one of the contributors to the FridgeFriend project.","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2021-03-04"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":"Iter 1: In charge of the food related classes and enums","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":"- **Code contributed**: [RepoSense Link](https://nus-cs2113-ay2021s2.github.io/tp-dashboard/?search\u003dVinci-Hu)","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"- **Version 1.0**","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":"  -  In charge of the food related classes and enums","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"     - `Food`","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":"     - `FoodCategory`","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Vinci-Hu"},"content":"     - `FoodStorageLocation`","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"    - J-Unit tests for `Food`","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Vinci-Hu"},"content":"    - Write logging and add asserts","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Vinci-Hu"},"content":"- **Documentation**","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Vinci-Hu"},"content":"  - User Guide","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Vinci-Hu"},"content":"    - Added documentation for the command `list` ([#]())","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Vinci-Hu"},"content":"    - Added FAQs ([#]())","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Vinci-Hu"},"content":"  - Developer Guide","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Vinci-Hu"},"content":"    - Added implementation details of the `xxx` feature ([]())","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"Vinci-Hu"},"content":"- **Community**","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"Vinci-Hu"},"content":"  - Review pull requests and help maintain group repo","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"Vinci-Hu"},"content":"  - Gave suggestions and help debug in weekly meetings","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Vinci-Hu":24,"-":6}},{"path":"src/main/java/seedu/fridgefriend/FridgeFriend.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.command.Command;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.exception.InvalidIndexException;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidInputException;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.food.Fridge;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.LoggingHandler;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.Parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.Storage;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.Ui;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":" * FridgeFriend is an app for managing food in the fridge, optimised for use via a Command Line Interface (CLI).","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":" * If you can type fast, `FridgeFriend` can track your cold or frozen groceries faster and easier than any other apps.","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":" * It is written in Java, and has more than 1.5kLoC.","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":" * ","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":" * @author Hu Wen Qi","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":" * @author Kim Joohwan","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":" * @author Lee Yang Peng","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":" * @author Ryan Kwok","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":" * @author Sing Jing Jie","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":" * @version 1.0","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":"public class FridgeFriend {","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"    private static boolean isExit \u003d false;","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"    public static Fridge fridge \u003d new Fridge();","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"    public FridgeFriend() {","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"        new Ui();","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"        new LoggingHandler();","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"        LoggingHandler.logInfo(\"FridgeFriend application initialised.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"        new Storage();","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"        Ui.printWelcomeMessage();","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"        Storage.load(fridge);","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"        run();","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"        Storage.save(fridge);","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"        Ui.printByeMessage();","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":"    private static void run() {","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"        LoggingHandler.logInfo(\"Main programme loop started.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"        while (!isExit) {","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"SimJJ96"},"content":"            try {","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"                String input \u003d Ui.getNextLine();","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"kwokyto"},"content":"                Command command \u003d Parser.getCommand(input);","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"kwokyto"},"content":"                executeCommand(command);","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"kwokyto"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"SimJJ96"},"content":"            } catch (Exception exception) {","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"kwokyto"},"content":"                Ui.printExceptionMessage(exception);","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"kwokyto"},"content":"                LoggingHandler.logInfo(\"Error found.\", exception);","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"SimJJ96"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"SimJJ96"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"kwokyto"},"content":"        LoggingHandler.logInfo(\"Main programme loop exited.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"SimJJ96"},"content":"    private static void executeCommand(Command command) throws InvalidInputException, InvalidIndexException {","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"SimJJ96"},"content":"        command.setData(fridge);","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"kwokyto"},"content":"        command.execute();","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"kwokyto":45,"SimJJ96":19}},{"path":"src/main/java/seedu/fridgefriend/command/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidDateException;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.Ui;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":" * Represents a command to add a food item into the Fridge.","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":" * When calling constructor, foodName, category, expiryDate, and location are necessary fields","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"    private final Food foodToAdd;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"    public AddCommand(String foodName, FoodCategory category, String expiryString,","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"            FoodStorageLocation location) throws InvalidDateException {","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"        this.foodToAdd \u003d new Food(category, foodName, expiryString, location);","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"    public void execute() {","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"        addFood();","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"        showResults();","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"    private void addFood() {","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":"        assert foodToAdd !\u003d null : \"Unable to add a null food\";","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":"        fridge.add(foodToAdd);","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"    private void showResults() {","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"        Ui.printMessage(getMessagePrintedToUser());","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"SimJJ96"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"SimJJ96"},"content":"     * Returns the results of add command.","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"SimJJ96"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"SimJJ96"},"content":"     * @return the message shown to the user","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"SimJJ96"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"SimJJ96"},"content":"    public String getMessagePrintedToUser() {","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":"        String message \u003d \"Great! I have added \"","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"                + foodToAdd.getFoodName()","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"                + \" into your fridge.\\n\"","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"kwokyto"},"content":"                + \"Details: \"","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"                + foodToAdd.toString();","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"SimJJ96"},"content":"        return message;","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"kwokyto":15,"Vinci-Hu":2,"SimJJ96":35}},{"path":"src/main/java/seedu/fridgefriend/command/ByeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"    public ByeCommand() {","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"        super();","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"        return isExit;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"    public void setExit(boolean isExit) {","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"    public void execute() {","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"        setExit(true);","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"    ","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"kwokyto":25}},{"path":"src/main/java/seedu/fridgefriend/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.exception.InvalidIndexException;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidInputException;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.Fridge;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":" * Represent an executable command.","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"public abstract class Command {","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"    protected Fridge fridge;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"    protected boolean isExit;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"    public Command() {","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"        isExit \u003d false;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"    ","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"        return isExit;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"    public abstract void execute() throws InvalidInputException, InvalidIndexException;","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"    public void setData(Fridge fridge) {","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"        this.fridge \u003d fridge;","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"kwokyto":12,"SimJJ96":17}},{"path":"src/main/java/seedu/fridgefriend/command/ExpiringCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.Ui;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":" * Represents a command to find food items that are expring within a week.","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"public class ExpiringCommand extends Command {","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"    private static final LocalDate cutOff \u003d LocalDate.now().plusDays(7);","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"    private String message \u003d \"These are the food expiring in the next week:\";","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"    private int index \u003d 1;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"    public ExpiringCommand() {","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"        super();","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"    public void execute() {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"        for (int i \u003d 0; i \u003c fridge.getSize(); i +\u003d 1) {","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"            updateMessage(fridge.getFood(i));","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"        Ui.printMessage(message);","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"     * Updates the message to be shown to the user based on the food\u0027s expiry date.","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"     * ","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"     * @param food food item in the fridge","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"    private void updateMessage(Food food) {","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"        LocalDate expiry \u003d food.getExpiryDate().getExpiry();","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"        if (expiry.isBefore(cutOff)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"            addToMessage(food);","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"     * Adds food description and list index to the return message.","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"     * ","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":"     * @param food food item that is expiring in a week","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"    private void addToMessage(Food food) {","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"kwokyto"},"content":"        String entry \u003d \"\\n\" + index + \". \" + food.toString();","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"        message +\u003d entry;","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"kwokyto"},"content":"        index +\u003d 1;","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"kwokyto":51}},{"path":"src/main/java/seedu/fridgefriend/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import java.util.EnumSet;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.Ui;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"    private static final String COMMANDS \u003d \"These are the list of available commands:\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"            + \"\\tadd foodName /cat categoryName /exp dd-mm-yyyy /loc storageLocation\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"            + \"\\tlist\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"            + \"\\tlist categoryName\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"            + \"\\tremove index\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"            + \"\\tsearch searchString\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"            + \"\\texpiring\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"            + \"\\thelp\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"            + \"\\tbye\";","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"    ","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"    private static final String CATEGORIES \u003d \"This is the list of food categories:\\n\\t\"","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"            + EnumSet.allOf(FoodCategory.class).toString();","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"    private static final String LOCATIONS \u003d \"This is the list of storage locations:\\n\\t\"","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"            + EnumSet.allOf(FoodStorageLocation.class).toString();","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"    public HelpCommand() {","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"        super();","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"    public void execute() {","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"        String helpMessage \u003d COMMANDS + \"\\n\\n\" + CATEGORIES + \"\\n\\n\" + LOCATIONS;","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"        Ui.printMessage(helpMessage);","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"    ","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"kwokyto":40}},{"path":"src/main/java/seedu/fridgefriend/command/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.exception.InvalidInputException;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.Ui;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":" * Represents a command to list the items in the fridge to the user.","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":" * When calling constructor, description is a necessary field","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":" * to specify whether to list everything or list by category.","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":"    private static final int EXTRA_INDEX \u003d 1;","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"    private static final int START_INDEX_SHOWN_TO_USER \u003d 1;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"    private final FoodCategory foodCategory;","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"    private final String category;","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":"    private int indexShownToUserByCategory;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"    public ListCommand(String categoryType) {","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"        this.category \u003d categoryType.toUpperCase();","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"        this.foodCategory \u003d FoodCategory.convertStringToFoodCategory(category);","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":"        this.indexShownToUserByCategory \u003d START_INDEX_SHOWN_TO_USER;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"    public void execute() throws InvalidInputException {","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"        if (category.equals(\"\")) {","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":"            listAll();","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":"        } else {","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"            listByCategory();","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"    private void listByCategory() throws InvalidInputException {","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"SimJJ96"},"content":"        checkIsValidCategory();","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"        String message \u003d getListByCategoryMessage();","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"        Ui.printMessage(message);","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"SimJJ96"},"content":"    private void listAll() {","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"SimJJ96"},"content":"        Ui.printMessage(getListAllMessage());","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"SimJJ96"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"SimJJ96"},"content":"     * Returns the food that match the category that was specified.","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"SimJJ96"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"SimJJ96"},"content":"     * @return string of food that match the category in the fridge","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"SimJJ96"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"SimJJ96"},"content":"    public String getListByCategoryMessage() {","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"SimJJ96"},"content":"        StringBuilder message \u003d new StringBuilder(\"These are the \" + foodCategory + \" in your fridge:\");","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"SimJJ96"},"content":"        for (int i \u003d 0; i \u003c fridge.getSize(); i++) {","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"SimJJ96"},"content":"            message.append(getMatchCategoryFoodDescription(i));","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"SimJJ96"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"Leeyp"},"content":"        assert message !\u003d null : \"message string should not be null\";","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"SimJJ96"},"content":"        return message.toString();","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"SimJJ96"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"SimJJ96"},"content":"     * Returns all the food in the fridge.","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"SimJJ96"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"SimJJ96"},"content":"     * @return string of the food names that are in the fridge","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"SimJJ96"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"SimJJ96"},"content":"    public String getListAllMessage() {","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"SimJJ96"},"content":"        StringBuilder message \u003d new StringBuilder(\"Here are the items in your fridge:\");","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"SimJJ96"},"content":"        for (int i \u003d 0; i \u003c fridge.getSize(); i++) {","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"SimJJ96"},"content":"            message.append(getFoodDescription(i));","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"SimJJ96"},"content":"        return message.toString();","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"SimJJ96"},"content":"    private String getFoodDescription(int index) {","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"SimJJ96"},"content":"        int indexShownToUser \u003d index + EXTRA_INDEX;","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"SimJJ96"},"content":"        Food food \u003d fridge.getFood(index);","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"kwokyto"},"content":"        String foodDescription \u003d ","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"kwokyto"},"content":"                \"\\n\\t\" + indexShownToUser +  \". \"","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"kwokyto"},"content":"                + food.getFoodName() + \" [\"","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"kwokyto"},"content":"                + food.getCategory() + \"]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"kwokyto"},"content":"        return foodDescription;","lastModifiedDate":"2021-03-12"},{"lineNumber":82,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":84,"author":{"gitId":"SimJJ96"},"content":"    private void checkIsValidCategory() throws InvalidInputException {","lastModifiedDate":"2021-03-09"},{"lineNumber":85,"author":{"gitId":"SimJJ96"},"content":"        if (!FoodCategory.contains(category)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":86,"author":{"gitId":"kwokyto"},"content":"            String errorMessage \u003d \"Sorry my friend, please enter a valid food category.\";","lastModifiedDate":"2021-03-12"},{"lineNumber":87,"author":{"gitId":"kwokyto"},"content":"            throw new InvalidInputException(errorMessage);","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"SimJJ96"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":89,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":90,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":91,"author":{"gitId":"SimJJ96"},"content":"    private String getMatchCategoryFoodDescription(int index) {","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"SimJJ96"},"content":"        String foodDescription \u003d \"\";","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"SimJJ96"},"content":"        Food food \u003d fridge.getFood(index);","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"kwokyto"},"content":"        FoodCategory category \u003d food.getCategory();","lastModifiedDate":"2021-03-12"},{"lineNumber":95,"author":{"gitId":"kwokyto"},"content":"        if (category.equals(foodCategory)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":96,"author":{"gitId":"SimJJ96"},"content":"            foodDescription \u003d \"\\n\\t\" + indexShownToUserByCategory + \". \" + food.getFoodName();","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"SimJJ96"},"content":"            ++indexShownToUserByCategory;","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"SimJJ96"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":99,"author":{"gitId":"SimJJ96"},"content":"        return foodDescription;","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":101,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":102,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"Leeyp":2,"kwokyto":21,"SimJJ96":79}},{"path":"src/main/java/seedu/fridgefriend/command/RemoveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidIndexException;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.Ui;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":" * Represents a command to remove a food item from the fridge by index specify by user.","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"public class RemoveCommand extends Command {","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"    private static final int EXTRA_INDEX \u003d 1;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"    private final int indexToRemove;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"    private Food foodToBeRemoved;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"     * Constructor creates a RemoveCommand object.","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"     * ","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"     * @param indexToRemove integer index given by user","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidIndexException if provided index is out of bounds","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"    public RemoveCommand(int indexToRemove) {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"        int actualIndexToRemoved \u003d indexToRemove - EXTRA_INDEX;","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"        this.indexToRemove \u003d actualIndexToRemoved;","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":"    public void execute() throws InvalidIndexException {","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"        removeFood();","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":"        showResults();","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"    private void removeFood() throws InvalidIndexException {","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"            this.foodToBeRemoved \u003d fridge.getFood(indexToRemove);","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"SimJJ96"},"content":"            throw new InvalidIndexException(e);","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"SimJJ96"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"SimJJ96"},"content":"        fridge.removeByIndex(indexToRemove);","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"SimJJ96"},"content":"    private void showResults() {","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"SimJJ96"},"content":"        Ui.printMessage(getMessagePrintedToUser());","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"SimJJ96"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"SimJJ96"},"content":"     * Return the results after remove the item from the fridge.","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"SimJJ96"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"SimJJ96"},"content":"     * @return the message shown to user","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"SimJJ96"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"SimJJ96"},"content":"    public String getMessagePrintedToUser() {","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"SimJJ96"},"content":"        String message \u003d \"Noted! I\u0027ve removed \" + foodToBeRemoved.getFoodName()","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"SimJJ96"},"content":"                + \" from your fridge.\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"SimJJ96"},"content":"                + \"Now you have \" + fridge.getSize()","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"SimJJ96"},"content":"                + \" food in the fridge.\";","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"SimJJ96"},"content":"        return message;","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"kwokyto":14,"SimJJ96":45}},{"path":"src/main/java/seedu/fridgefriend/command/SearchCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.exception.EmptyDescriptionException;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.Ui;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.LoggingHandler;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":" * Represents a command to search for a specific food item in the fridge.","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"public class SearchCommand extends Command {","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"    public static final int NOT_FOUND \u003d -1;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"    private String foodName;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"    public SearchCommand(String foodName) throws EmptyDescriptionException {","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"        if (foodName.isEmpty()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"        this.foodName \u003d foodName;","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"    public void execute() {","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"        showResults();","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":"    private void showResults() {","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"        Ui.printMessage(getMessagePrintedToUser());","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"     * Returns the result of the command.","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"     * @return the message shown to the user","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"SimJJ96"},"content":"    public String getMessagePrintedToUser() {","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"SimJJ96"},"content":"        int indexOfFoodStored \u003d getIndexOfFoodStored();","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"        String message;","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"SimJJ96"},"content":"        if (indexOfFoodStored \u003e\u003d 0) {","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"            LoggingHandler.logInfo(\"Search for food successful: \" + foodName + \" found.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"SimJJ96"},"content":"            message \u003d \"You have \" + foodName + \" stored in \"","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"SimJJ96"},"content":"                    + fridge.getFood(indexOfFoodStored).getStorageLocation()","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"SimJJ96"},"content":"                    + \" of your fridge.\";","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"SimJJ96"},"content":"        } else {","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"            LoggingHandler.logInfo(\"Search for food unsuccessful: No \" + foodName + \" found.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"kwokyto"},"content":"            message \u003d \"You do not have \" + foodName + \" in your fridge.\";","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"SimJJ96"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"Leeyp"},"content":"        assert message !\u003d null : \"message string should not be null\";","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"SimJJ96"},"content":"        return message;","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"SimJJ96"},"content":"    private int getIndexOfFoodStored() {","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"SimJJ96"},"content":"        assert !foodName.equals(null) : \"Unable to search a null food name\";","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"SimJJ96"},"content":"        for (int i \u003d 0; i \u003c fridge.getSize(); i +\u003d 1) {","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"SimJJ96"},"content":"            Food food \u003d fridge.getFood(i);","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"SimJJ96"},"content":"            if (food.getFoodName().equals(foodName)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"SimJJ96"},"content":"                return i;","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"SimJJ96"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"SimJJ96"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"SimJJ96"},"content":"        return NOT_FOUND;","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"Leeyp":1,"kwokyto":8,"SimJJ96":55}},{"path":"src/main/java/seedu/fridgefriend/exception/EmptyDescriptionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.exception;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":" * Signal that the input format given does not fulfill the criteria.","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"    private static final String errorMessage \u003d \"Sorry my friend, the description cannot be empty.\";","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"    public EmptyDescriptionException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"        super(errorMessage);","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"kwokyto":1,"SimJJ96":11}},{"path":"src/main/java/seedu/fridgefriend/exception/InvalidDateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.exception;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":" * Signal that the input format of the date field is incorrect.","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"public class InvalidDateException extends Exception {","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"    private static final String errorMessage \u003d \"Sorry my friend, the date must be in the form \u0027dd-mm-yy\u0027.\\n\";","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"    public InvalidDateException(String message) {","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"        super(errorMessage + message);","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"kwokyto":12}},{"path":"src/main/java/seedu/fridgefriend/exception/InvalidIndexException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.exception;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"public class InvalidIndexException extends Exception {","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"    private static final String errorMessage \u003d \"Please enter a valid index to remove food.\";","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"    public InvalidIndexException(Exception e) {","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"        super(errorMessage);","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"kwokyto":7,"SimJJ96":2}},{"path":"src/main/java/seedu/fridgefriend/exception/InvalidInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.exception;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":" * Signals that the format of the input is incorrect.","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"    private static final String errorMessage \u003d \"Sorry my friend, please give a valid input.\";","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"    public InvalidInputException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"        super(errorMessage);","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"        super(message);","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"kwokyto":5,"SimJJ96":11}},{"path":"src/main/java/seedu/fridgefriend/exception/StorageLoadingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.exception;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":" * Indicates that an error occured while loading the saved data.","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"public class StorageLoadingException extends Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"    private static final String errorMessage \u003d \"There was an error loading the data for FridgeFriend!\\n\";","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"    public StorageLoadingException(Exception e) {","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"        super(errorMessage + e.getLocalizedMessage());","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"kwokyto":12}},{"path":"src/main/java/seedu/fridgefriend/exception/StorageSavingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.exception;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":" * Indicates that an error occured while loading the saved data.","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"public class StorageSavingException extends Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"    private static final String errorMessage \u003d \"There was an error saving the data for FridgeFriend!\\n\";","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"    public StorageSavingException(Exception e) {","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"        super(errorMessage + e.getLocalizedMessage());","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"kwokyto":12}},{"path":"src/main/java/seedu/fridgefriend/food/ExpiryDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.food;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidDateException;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"public class ExpiryDate {","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"    protected LocalDate expiry;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"    public ExpiryDate(String string) throws InvalidDateException {","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"        try {","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"            assert string !\u003d null : \"date string should not be null\";","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"            LocalDate expiry \u003d LocalDate.parse(string, formatter);","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"            this.expiry \u003d expiry;            ","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":"            String message \u003d e.getLocalizedMessage();","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"            throw new InvalidDateException(message);","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"    public LocalDate getExpiry() {","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"        return expiry;","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"    public String toString() {","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"        return this.expiry.format(formatter);","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"kwokyto":30,"Vinci-Hu":1,"SimJJ96":1}},{"path":"src/main/java/seedu/fridgefriend/food/Food.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.food;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidDateException;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.LoggingHandler;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":" * Represents a portion of a specific food that is stored in the smart fridge.","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":" * When calling constructor, FoodCategory and foodName are NECESSARY fields.","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":" * The date fields are represented by strings for now, they are OPTIONAL as well as storage location.","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":"public class Food {","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":"    protected FoodCategory category;","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"    protected String foodName;","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"    protected ExpiryDate expiryDate;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"    protected FoodStorageLocation storageLocation;","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"Vinci-Hu"},"content":"    public Food(FoodCategory category, String foodName) {","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"        LoggingHandler.logInfo(\"Food object initiated. food name: \" + foodName);","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"        this.setCategory(category);","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"        this.setFoodName(foodName);","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"    public Food(FoodCategory category, String foodName, String expiryString,","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"            FoodStorageLocation storageLocation) throws InvalidDateException {","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"        LoggingHandler.logInfo(\"Food object initiated. food name: \" + foodName);","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"        this.setCategory(category);","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"        this.setFoodName(foodName);","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"        this.setExpiryDate(expiryString);","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"        this.setStorageLocation(storageLocation);","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"Vinci-Hu"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"Vinci-Hu"},"content":"    public String toString() {","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"joohwan58"},"content":"        String format \u003d \"Food name: %1$s, category: %2$s, expiry: %3$s, stored in: %4$s\";","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"        return String.format(","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"                format,","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"                getFoodName(),","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"                getCategory().name(), ","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"                getExpiryDate().toString(), ","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"                getStorageLocation().name());","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"Vinci-Hu"},"content":"    public FoodCategory getCategory() {","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"Vinci-Hu"},"content":"        return category;","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"Vinci-Hu"},"content":"    public void setCategory(FoodCategory category) {","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"Vinci-Hu"},"content":"        this.category \u003d category;","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"Vinci-Hu"},"content":"    public String getFoodName() {","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"Vinci-Hu"},"content":"        return foodName;","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"Vinci-Hu"},"content":"    public void setFoodName(String foodName) {","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"Vinci-Hu"},"content":"        this.foodName \u003d foodName;","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"kwokyto"},"content":"    public ExpiryDate getExpiryDate() {","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"Vinci-Hu"},"content":"        return expiryDate;","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"kwokyto"},"content":"    public void setExpiryDate(String expiryString) throws InvalidDateException {","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"kwokyto"},"content":"        ExpiryDate expiryDate \u003d new ExpiryDate(expiryString);","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"Vinci-Hu"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"kwokyto"},"content":"        LoggingHandler.logInfo(\"Expiry date has been changed to \"","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"Vinci-Hu"},"content":"                + expiryDate + \" in food object \" + foodName);","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"Vinci-Hu"},"content":"    public FoodStorageLocation getStorageLocation() {","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"Vinci-Hu"},"content":"        return storageLocation;","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"Vinci-Hu"},"content":"    public void setStorageLocation(FoodStorageLocation storageLocation) {","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"Vinci-Hu"},"content":"        this.storageLocation \u003d storageLocation;","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"kwokyto"},"content":"        LoggingHandler.logInfo(\"Storage location has been changed to \"","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"Vinci-Hu"},"content":"                + storageLocation + \" in food object \" + foodName);","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"Vinci-Hu"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"kwokyto":25,"joohwan58":1,"Vinci-Hu":52,"SimJJ96":1}},{"path":"src/main/java/seedu/fridgefriend/food/FoodCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.food;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":" * Subject to changes with discussion.","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":"public enum FoodCategory {","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":"    VEGETABLE,      // e.g. eggplant, spinach, bok choy, including beans and fungus","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":"    FRUIT,          // e.g. strawberry, apple, grapes","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":"    MEAT,           // e.g. pork, beef, lamb, chicken","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":"    SEAFOOD,        // e.g. salmon, mackerel, crab, prawn","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":"    EGG,            // e.g. egg, duck egg, quail egg","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":"    DAIRY,          // e.g. milk, butter, cheese, yoghurt","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"    BEVERAGE,       // e.g. coke, orange juice","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":"    COOKED_DISH,    // e.g. tomato scrambled eggs, chicken soup","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"    READY_TO_EAT,   // e.g. sandwich","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":"    FROZEN,    // e.g. frozen dumpling, ice cream","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"    OTHER;","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":"    public static boolean contains(String string) {","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"        for (FoodCategory foodCategory : values()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"            if (foodCategory.name().equals(string)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"                return true;","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"        return false;","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"Vinci-Hu"},"content":"    public static FoodCategory convertStringToFoodCategory(String rawCategoryStr) {","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"Vinci-Hu"},"content":"        String processedCategoryStr \u003d rawCategoryStr.toUpperCase();","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"Vinci-Hu"},"content":"        if (FoodCategory.contains(processedCategoryStr)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"Vinci-Hu"},"content":"            return FoodCategory.valueOf(processedCategoryStr);","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"        } else {","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"            return FoodCategory.OTHER;","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"Vinci-Hu":20,"SimJJ96":20}},{"path":"src/main/java/seedu/fridgefriend/food/FoodStorageLocation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.food;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":" * Assume the fridge has these storage locations","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":" * Reference: https://styledegree.sg/the-right-way-to-store-organize-food-in-fridge/","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":"public enum FoodStorageLocation {","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":"    FREEZER,","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":"    UPPER_SHELF,","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":"    MIDDLE_SHELF,","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":"    LOWER_SHELF,","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":"    DRAWERS,","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"    FRIDGE_DOOR,","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":"    OTHER;","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":"    public static boolean contains(String string) {","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"Vinci-Hu"},"content":"        for (FoodStorageLocation location : values()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"            if (location.name().equals(string)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"Vinci-Hu"},"content":"                return true;","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"Vinci-Hu"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"Vinci-Hu"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"Vinci-Hu"},"content":"        return false;","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"Vinci-Hu"},"content":"    public static FoodStorageLocation convertStringToLocation(String rawLocationStr) {","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"Vinci-Hu"},"content":"        String processedLocationStr \u003d rawLocationStr.toUpperCase();","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"Vinci-Hu"},"content":"        if (FoodStorageLocation.contains(processedLocationStr)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"Vinci-Hu"},"content":"            return FoodStorageLocation.valueOf(processedLocationStr);","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"Vinci-Hu"},"content":"        } else {","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"Vinci-Hu"},"content":"            return FoodStorageLocation.OTHER;","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"Vinci-Hu"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"Vinci-Hu"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"Vinci-Hu":32,"SimJJ96":1}},{"path":"src/main/java/seedu/fridgefriend/food/Fridge.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.food;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"public class Fridge {","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"    private ArrayList\u003cFood\u003e fridge \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"    public void add(Food food) {","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"        fridge.add(food);","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"    public int getSize() {","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"        return fridge.size();","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"    public Food getFood(int i) {","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"        return fridge.get(i);","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"    public void removeByIndex(int index) {","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"        fridge.remove(index);","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"kwokyto":18,"SimJJ96":7}},{"path":"src/main/java/seedu/fridgefriend/utilities/LoggingHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.utilities;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":" * Represents a logging object with name FridgeFriend.","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"public class LoggingHandler {","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"    private static Logger logger \u003d Logger.getLogger(\"FridgeFriend\");","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"    ","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"     * Logs a message at level INFO.","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"    public static void logInfo(String message) {","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"        logger.setLevel(Level.WARNING);","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"        logger.log(Level.INFO, message);","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"     * Logs a message at level INFO with an exception.","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"    public static void logInfo(String message, Throwable e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"        logger.setLevel(Level.WARNING);","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"        logger.log(Level.INFO, message, e);","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"     * Logs a message at level WARNING.","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"    public static void logWarning(String message) {","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"        logger.log(Level.WARNING, message);","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"     * Logs a message at level WARNING with an exception.","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"    public static void logWarning(String message, Throwable e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"        logger.log(Level.WARNING, message, e);","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"     * Logs a message at level SEVERE.","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"    public static void logSevere(String message) {","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"        logger.log(Level.SEVERE, message);","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"kwokyto"},"content":"     * Logs a message at level SEVERE with an exception.","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"kwokyto"},"content":"    public static void logSevere(String message, Throwable e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"kwokyto"},"content":"        logger.log(Level.SEVERE, message, e);","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"kwokyto":55}},{"path":"src/main/java/seedu/fridgefriend/utilities/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.utilities;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import static seedu.fridgefriend.food.FoodCategory.convertStringToFoodCategory;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import static seedu.fridgefriend.food.FoodStorageLocation.convertStringToLocation;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.command.AddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.command.ByeCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.command.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.command.ExpiringCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.command.HelpCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.command.ListCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.command.RemoveCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.command.SearchCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.EmptyDescriptionException;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidDateException;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidIndexException;","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidInputException;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":" * Represents an object that deals with making sense of the user command.","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"public class Parser {","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"    public static final int COMMAND_WORD \u003d 0;","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"    public static final int LIMIT \u003d 2;","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"     * Returns a Command object based on the user\u0027s raw input.","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"     * @param input user\u0027s raw input","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"     * @return Command object","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"     * @throws EmptyDescriptionException if the required description field is empty","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidInputException if the command is not recognised","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidIndexException if the index given in description is out of bounds","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidDateException if the date input cannot be parsed","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"    public static Command getCommand(String input)","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"            throws EmptyDescriptionException, InvalidInputException, ","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"            InvalidIndexException, InvalidDateException {","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"        String[] parsedInput \u003d parseInput(input);","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":"        Command command \u003d parseCommand(parsedInput);","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"        return command;","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"kwokyto"},"content":"     * Parses input into command and description.","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"kwokyto"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"kwokyto"},"content":"     * @param input user input string","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"kwokyto"},"content":"     * @return String array of command and description","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidInputException if the input is empty","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"kwokyto"},"content":"    public static String[] parseInput(String input) throws InvalidInputException {","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"kwokyto"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"kwokyto"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"kwokyto"},"content":"        //remove trailing whitespaces and parse input into two separated by a whitespace","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"kwokyto"},"content":"        String[] words \u003d input.trim().split(\"\\\\s+\", Parser.LIMIT);","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"kwokyto"},"content":"        if (words.length \u003d\u003d Parser.LIMIT) {","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"kwokyto"},"content":"            return words;","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"kwokyto"},"content":"        } else {","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"kwokyto"},"content":"            //return an array of command and empty description","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"kwokyto"},"content":"            return new String[] {words[COMMAND_WORD], \"\"};","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"kwokyto"},"content":"     * Returns the appropriate Command object based on command and description.","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"kwokyto"},"content":"     * ","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"kwokyto"},"content":"     * @param parsedInput string array containing command and description","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"kwokyto"},"content":"     * @return Command object","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"kwokyto"},"content":"     * @throws EmptyDescriptionException if the required description field is empty","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidInputException if the command is not recognised","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidIndexException if the index given in description is out of bounds","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidDateException if the date input cannot be parsed","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"kwokyto"},"content":"    public static Command parseCommand(String[] parsedInput)","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"kwokyto"},"content":"            throws EmptyDescriptionException, InvalidInputException, ","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"kwokyto"},"content":"            InvalidIndexException, InvalidDateException {","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"kwokyto"},"content":"        String commandString \u003d parsedInput[COMMAND_WORD];","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"kwokyto"},"content":"        String description \u003d parsedInput[1];","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"kwokyto"},"content":"        Command command;","lastModifiedDate":"2021-03-12"},{"lineNumber":85,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"kwokyto"},"content":"        switch (commandString.toLowerCase()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":87,"author":{"gitId":"kwokyto"},"content":"        case \"add\":","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"kwokyto"},"content":"            command \u003d Parser.getAddCommand(description);","lastModifiedDate":"2021-03-12"},{"lineNumber":89,"author":{"gitId":"kwokyto"},"content":"            break;","lastModifiedDate":"2021-03-12"},{"lineNumber":90,"author":{"gitId":"kwokyto"},"content":"        case \"list\":","lastModifiedDate":"2021-03-12"},{"lineNumber":91,"author":{"gitId":"kwokyto"},"content":"            command \u003d Parser.getListCommand(description);","lastModifiedDate":"2021-03-12"},{"lineNumber":92,"author":{"gitId":"kwokyto"},"content":"            break;","lastModifiedDate":"2021-03-12"},{"lineNumber":93,"author":{"gitId":"kwokyto"},"content":"        case \"remove\":","lastModifiedDate":"2021-03-12"},{"lineNumber":94,"author":{"gitId":"kwokyto"},"content":"            command \u003d Parser.getRemoveCommand(description);","lastModifiedDate":"2021-03-12"},{"lineNumber":95,"author":{"gitId":"kwokyto"},"content":"            break;","lastModifiedDate":"2021-03-12"},{"lineNumber":96,"author":{"gitId":"kwokyto"},"content":"        case \"search\":","lastModifiedDate":"2021-03-12"},{"lineNumber":97,"author":{"gitId":"kwokyto"},"content":"            command \u003d Parser.getSearchCommand(description);","lastModifiedDate":"2021-03-12"},{"lineNumber":98,"author":{"gitId":"kwokyto"},"content":"            break;","lastModifiedDate":"2021-03-12"},{"lineNumber":99,"author":{"gitId":"kwokyto"},"content":"        case \"expiring\":","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"kwokyto"},"content":"            command \u003d Parser.getExpiringCommand();","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"kwokyto"},"content":"            break;","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"kwokyto"},"content":"        case \"help\":","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"kwokyto"},"content":"            command \u003d Parser.getHelpCommand();","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"kwokyto"},"content":"            break;","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"kwokyto"},"content":"        case \"bye\":","lastModifiedDate":"2021-03-12"},{"lineNumber":106,"author":{"gitId":"kwokyto"},"content":"            command \u003d Parser.getByeCommand();","lastModifiedDate":"2021-03-12"},{"lineNumber":107,"author":{"gitId":"kwokyto"},"content":"            break;","lastModifiedDate":"2021-03-12"},{"lineNumber":108,"author":{"gitId":"kwokyto"},"content":"        default:","lastModifiedDate":"2021-03-12"},{"lineNumber":109,"author":{"gitId":"kwokyto"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2021-03-12"},{"lineNumber":110,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":111,"author":{"gitId":"kwokyto"},"content":"        assert command !\u003d null : \"Command should not be null\";","lastModifiedDate":"2021-03-13"},{"lineNumber":112,"author":{"gitId":"kwokyto"},"content":"        return command;","lastModifiedDate":"2021-03-12"},{"lineNumber":113,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":114,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":115,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":116,"author":{"gitId":"kwokyto"},"content":"     * Define arguments format for add food command.","lastModifiedDate":"2021-03-12"},{"lineNumber":117,"author":{"gitId":"kwokyto"},"content":"     * A Pattern object which defines how the input string for food item","lastModifiedDate":"2021-03-12"},{"lineNumber":118,"author":{"gitId":"kwokyto"},"content":"     * that should look like. [^/]+ implies 1 or more characters except for \u0027/\u0027","lastModifiedDate":"2021-03-12"},{"lineNumber":119,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":120,"author":{"gitId":"kwokyto"},"content":"    public static final Pattern FOOD_DATA_ARGS_FORMAT \u003d","lastModifiedDate":"2021-03-12"},{"lineNumber":121,"author":{"gitId":"kwokyto"},"content":"            Pattern.compile(\"(?\u003cname\u003e[^/]+)\"","lastModifiedDate":"2021-03-12"},{"lineNumber":122,"author":{"gitId":"kwokyto"},"content":"                    + \" /cat (?\u003ccategory\u003e[^/]+)\"","lastModifiedDate":"2021-03-13"},{"lineNumber":123,"author":{"gitId":"kwokyto"},"content":"                    + \" /exp (?\u003cexpiryDate\u003e[^/]+)\"","lastModifiedDate":"2021-03-12"},{"lineNumber":124,"author":{"gitId":"kwokyto"},"content":"                    + \" /loc (?\u003cstorageLocation\u003e[^/]+)\");","lastModifiedDate":"2021-03-12"},{"lineNumber":125,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":126,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":127,"author":{"gitId":"kwokyto"},"content":"     * Parses description into name, foodCategory, expiryDate and storageLocation.","lastModifiedDate":"2021-03-12"},{"lineNumber":128,"author":{"gitId":"kwokyto"},"content":"     * Matcher objects will try to parse a string according to the Pattern we define","lastModifiedDate":"2021-03-12"},{"lineNumber":129,"author":{"gitId":"kwokyto"},"content":"     * like above FOOD_DATA_ARGS_FORMAT. For other future parsers can copy the usage here.","lastModifiedDate":"2021-03-12"},{"lineNumber":130,"author":{"gitId":"kwokyto"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":131,"author":{"gitId":"kwokyto"},"content":"     * @param foodDescription the string in the required format of food description","lastModifiedDate":"2021-03-12"},{"lineNumber":132,"author":{"gitId":"kwokyto"},"content":"     * @return a new AddCommand for Food","lastModifiedDate":"2021-03-12"},{"lineNumber":133,"author":{"gitId":"kwokyto"},"content":"     * @throws EmptyDescriptionException if the description is empty","lastModifiedDate":"2021-03-12"},{"lineNumber":134,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidInputException if the description cannot parse","lastModifiedDate":"2021-03-12"},{"lineNumber":135,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidDateException if the date input cannot be parsed","lastModifiedDate":"2021-03-13"},{"lineNumber":136,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":137,"author":{"gitId":"kwokyto"},"content":"    public static Command parseFoodDescription(String foodDescription)","lastModifiedDate":"2021-03-12"},{"lineNumber":138,"author":{"gitId":"kwokyto"},"content":"            throws EmptyDescriptionException, InvalidInputException, InvalidDateException {","lastModifiedDate":"2021-03-13"},{"lineNumber":139,"author":{"gitId":"kwokyto"},"content":"        if (foodDescription.isEmpty()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":140,"author":{"gitId":"kwokyto"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2021-03-12"},{"lineNumber":141,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":142,"author":{"gitId":"kwokyto"},"content":"        final Matcher matcher \u003d FOOD_DATA_ARGS_FORMAT.matcher(foodDescription.trim());","lastModifiedDate":"2021-03-12"},{"lineNumber":143,"author":{"gitId":"kwokyto"},"content":"        // Validate foodDescription string format","lastModifiedDate":"2021-03-12"},{"lineNumber":144,"author":{"gitId":"kwokyto"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":145,"author":{"gitId":"kwokyto"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2021-03-12"},{"lineNumber":146,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":147,"author":{"gitId":"kwokyto"},"content":"        return new AddCommand(matcher.group(\"name\"), convertStringToFoodCategory(matcher.group(\"category\")),","lastModifiedDate":"2021-03-12"},{"lineNumber":148,"author":{"gitId":"kwokyto"},"content":"                matcher.group(\"expiryDate\"), convertStringToLocation(matcher.group(\"storageLocation\")));","lastModifiedDate":"2021-03-12"},{"lineNumber":149,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":150,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":151,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":152,"author":{"gitId":"kwokyto"},"content":"     * Returns an AddCommand object based on description.","lastModifiedDate":"2021-03-12"},{"lineNumber":153,"author":{"gitId":"kwokyto"},"content":"     * ","lastModifiedDate":"2021-03-12"},{"lineNumber":154,"author":{"gitId":"kwokyto"},"content":"     * @param description description for command","lastModifiedDate":"2021-03-12"},{"lineNumber":155,"author":{"gitId":"kwokyto"},"content":"     * @return AddCommand object","lastModifiedDate":"2021-03-12"},{"lineNumber":156,"author":{"gitId":"kwokyto"},"content":"     * @throws EmptyDescriptionException if the description is empty","lastModifiedDate":"2021-03-12"},{"lineNumber":157,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidInputException if the description cannot parse","lastModifiedDate":"2021-03-12"},{"lineNumber":158,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidDateException if the date input cannot be parsed","lastModifiedDate":"2021-03-13"},{"lineNumber":159,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":160,"author":{"gitId":"kwokyto"},"content":"    public static Command getAddCommand(String description) ","lastModifiedDate":"2021-03-12"},{"lineNumber":161,"author":{"gitId":"kwokyto"},"content":"            throws EmptyDescriptionException, InvalidInputException, InvalidDateException {","lastModifiedDate":"2021-03-13"},{"lineNumber":162,"author":{"gitId":"kwokyto"},"content":"        Command addCommand \u003d parseFoodDescription(description);","lastModifiedDate":"2021-03-12"},{"lineNumber":163,"author":{"gitId":"kwokyto"},"content":"        return addCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":164,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":165,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":166,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":167,"author":{"gitId":"kwokyto"},"content":"     * Returns a ListCommand object based on description.","lastModifiedDate":"2021-03-12"},{"lineNumber":168,"author":{"gitId":"kwokyto"},"content":"     * ","lastModifiedDate":"2021-03-12"},{"lineNumber":169,"author":{"gitId":"kwokyto"},"content":"     * @param description description for command","lastModifiedDate":"2021-03-12"},{"lineNumber":170,"author":{"gitId":"kwokyto"},"content":"     * @return ListCommand object","lastModifiedDate":"2021-03-12"},{"lineNumber":171,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":172,"author":{"gitId":"kwokyto"},"content":"    public static Command getListCommand(String description) {","lastModifiedDate":"2021-03-12"},{"lineNumber":173,"author":{"gitId":"kwokyto"},"content":"        Command listCommand \u003d new ListCommand(description);","lastModifiedDate":"2021-03-12"},{"lineNumber":174,"author":{"gitId":"kwokyto"},"content":"        return listCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":175,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":176,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":177,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":178,"author":{"gitId":"kwokyto"},"content":"     * Returns a RemoveCommand object based on description.","lastModifiedDate":"2021-03-12"},{"lineNumber":179,"author":{"gitId":"kwokyto"},"content":"     * ","lastModifiedDate":"2021-03-12"},{"lineNumber":180,"author":{"gitId":"kwokyto"},"content":"     * @param description description for command","lastModifiedDate":"2021-03-12"},{"lineNumber":181,"author":{"gitId":"kwokyto"},"content":"     * @return RemoveCommand object","lastModifiedDate":"2021-03-12"},{"lineNumber":182,"author":{"gitId":"kwokyto"},"content":"     * @throws EmptyDescriptionException if the description is empty","lastModifiedDate":"2021-03-12"},{"lineNumber":183,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidIndexException if the index given in description is out of bounds","lastModifiedDate":"2021-03-12"},{"lineNumber":184,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":185,"author":{"gitId":"kwokyto"},"content":"    public static Command getRemoveCommand(String description)","lastModifiedDate":"2021-03-12"},{"lineNumber":186,"author":{"gitId":"kwokyto"},"content":"            throws EmptyDescriptionException, InvalidIndexException {","lastModifiedDate":"2021-03-12"},{"lineNumber":187,"author":{"gitId":"kwokyto"},"content":"        int index \u003d parseIntegerDescription(description);","lastModifiedDate":"2021-03-12"},{"lineNumber":188,"author":{"gitId":"kwokyto"},"content":"        Command removeCommand \u003d new RemoveCommand(index);","lastModifiedDate":"2021-03-12"},{"lineNumber":189,"author":{"gitId":"kwokyto"},"content":"        return removeCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":190,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":191,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":192,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":193,"author":{"gitId":"kwokyto"},"content":"     * Returns a SearchCommand object based on description.","lastModifiedDate":"2021-03-12"},{"lineNumber":194,"author":{"gitId":"kwokyto"},"content":"     * ","lastModifiedDate":"2021-03-12"},{"lineNumber":195,"author":{"gitId":"kwokyto"},"content":"     * @param description description for command","lastModifiedDate":"2021-03-12"},{"lineNumber":196,"author":{"gitId":"kwokyto"},"content":"     * @return SearchCommand object","lastModifiedDate":"2021-03-12"},{"lineNumber":197,"author":{"gitId":"kwokyto"},"content":"     * @throws EmptyDescriptionException if the description is empty","lastModifiedDate":"2021-03-12"},{"lineNumber":198,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":199,"author":{"gitId":"kwokyto"},"content":"    public static Command getSearchCommand(String description) throws EmptyDescriptionException {","lastModifiedDate":"2021-03-12"},{"lineNumber":200,"author":{"gitId":"kwokyto"},"content":"        Command searchCommand \u003d new SearchCommand(description);","lastModifiedDate":"2021-03-12"},{"lineNumber":201,"author":{"gitId":"kwokyto"},"content":"        return searchCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":202,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":203,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":204,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":205,"author":{"gitId":"kwokyto"},"content":"     * Returns an ExpiringCommand object.","lastModifiedDate":"2021-03-17"},{"lineNumber":206,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":207,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":208,"author":{"gitId":"kwokyto"},"content":"    private static Command getExpiringCommand() {","lastModifiedDate":"2021-03-17"},{"lineNumber":209,"author":{"gitId":"kwokyto"},"content":"        Command expiringCommand \u003d new ExpiringCommand();","lastModifiedDate":"2021-03-17"},{"lineNumber":210,"author":{"gitId":"kwokyto"},"content":"        return expiringCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":211,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":212,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":213,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":214,"author":{"gitId":"kwokyto"},"content":"     * Returns a HelpCommand object.","lastModifiedDate":"2021-03-17"},{"lineNumber":215,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":216,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":217,"author":{"gitId":"kwokyto"},"content":"    public static Command getHelpCommand() {","lastModifiedDate":"2021-03-13"},{"lineNumber":218,"author":{"gitId":"kwokyto"},"content":"        Command helpCommand \u003d new HelpCommand();","lastModifiedDate":"2021-03-13"},{"lineNumber":219,"author":{"gitId":"kwokyto"},"content":"        return helpCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":220,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":221,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":222,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":223,"author":{"gitId":"kwokyto"},"content":"     * Returns a ByeCommand object.","lastModifiedDate":"2021-03-12"},{"lineNumber":224,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":225,"author":{"gitId":"kwokyto"},"content":"    public static Command getByeCommand() {","lastModifiedDate":"2021-03-12"},{"lineNumber":226,"author":{"gitId":"kwokyto"},"content":"        Command byeCommand \u003d new ByeCommand();","lastModifiedDate":"2021-03-12"},{"lineNumber":227,"author":{"gitId":"kwokyto"},"content":"        return byeCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":228,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":229,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":230,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":231,"author":{"gitId":"kwokyto"},"content":"     * Parses the description into an integer.","lastModifiedDate":"2021-03-12"},{"lineNumber":232,"author":{"gitId":"kwokyto"},"content":"     * ","lastModifiedDate":"2021-03-12"},{"lineNumber":233,"author":{"gitId":"kwokyto"},"content":"     * @param description description for command","lastModifiedDate":"2021-03-12"},{"lineNumber":234,"author":{"gitId":"kwokyto"},"content":"     * @return integer index","lastModifiedDate":"2021-03-12"},{"lineNumber":235,"author":{"gitId":"kwokyto"},"content":"     * @throws EmptyDescriptionException if the description is empty","lastModifiedDate":"2021-03-12"},{"lineNumber":236,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidIndexException if the description is not a number","lastModifiedDate":"2021-03-12"},{"lineNumber":237,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":238,"author":{"gitId":"kwokyto"},"content":"    public static int parseIntegerDescription(String description)","lastModifiedDate":"2021-03-12"},{"lineNumber":239,"author":{"gitId":"kwokyto"},"content":"            throws EmptyDescriptionException, InvalidIndexException {","lastModifiedDate":"2021-03-12"},{"lineNumber":240,"author":{"gitId":"kwokyto"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":241,"author":{"gitId":"kwokyto"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2021-03-12"},{"lineNumber":242,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":243,"author":{"gitId":"kwokyto"},"content":"    ","lastModifiedDate":"2021-03-12"},{"lineNumber":244,"author":{"gitId":"kwokyto"},"content":"        try {","lastModifiedDate":"2021-03-12"},{"lineNumber":245,"author":{"gitId":"kwokyto"},"content":"            int index \u003d Integer.parseInt(description);","lastModifiedDate":"2021-03-12"},{"lineNumber":246,"author":{"gitId":"kwokyto"},"content":"            return index;","lastModifiedDate":"2021-03-12"},{"lineNumber":247,"author":{"gitId":"kwokyto"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-12"},{"lineNumber":248,"author":{"gitId":"kwokyto"},"content":"            throw new InvalidIndexException(e);","lastModifiedDate":"2021-03-12"},{"lineNumber":249,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":250,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":251,"author":{"gitId":"kwokyto"},"content":"    ","lastModifiedDate":"2021-03-12"},{"lineNumber":252,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"kwokyto":251,"SimJJ96":1}},{"path":"src/main/java/seedu/fridgefriend/utilities/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.utilities;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidDateException;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.StorageLoadingException;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.StorageSavingException;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.food.Fridge;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"import java.io.File;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"public class Storage {","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"    private static String filePath \u003d \"data/data.txt\";","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"    private static String directory \u003d \"data\";","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"    private static Fridge fridge;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"     * Loads the saved data into a fridge.","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"     * ","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"     * @param fridgeInput fridge to be populated","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"    public static void load(Fridge fridgeInput) {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"        fridge \u003d fridgeInput;","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"            checkDirectory();","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"            StorageLoadingException exception \u003d new StorageLoadingException(e);","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"            Ui.printExceptionMessage(exception);","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"     * Creates a textfile and the folder directory if it does not already exist.","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"     * ","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidDateException if the date cannot be parsed","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":"     * @throws FileNotFoundException if file does not exist","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"    private static void checkDirectory() throws FileNotFoundException, InvalidDateException {","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"kwokyto"},"content":"        Path path \u003d Paths.get(filePath); //creates Path instance","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"kwokyto"},"content":"            Files.createDirectories(Paths.get(directory));","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"kwokyto"},"content":"            Files.createFile(path); //creates file at specified location","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"kwokyto"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"kwokyto"},"content":"            loadData();","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"kwokyto"},"content":"     * Reads the data from the textfile.","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"kwokyto"},"content":"     * ","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"kwokyto"},"content":"     * @throws FileNotFoundException if file does not exist","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidDateException if the date cannot be parsed","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"kwokyto"},"content":"    private static void loadData() throws FileNotFoundException, InvalidDateException {","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"kwokyto"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"kwokyto"},"content":"        Scanner scanner \u003d new Scanner(file); // create a Scanner using the File as the source","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"kwokyto"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"kwokyto"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"kwokyto"},"content":"            readData(line);","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"kwokyto"},"content":"        scanner.close();","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"kwokyto"},"content":"     * Adds a food item to a fridge based on saved data.","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"kwokyto"},"content":"     * ","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"kwokyto"},"content":"     * @param line string in data file to be read","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidDateException if date in data file cannot be parsed","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"kwokyto"},"content":"    private static void readData(String line) throws InvalidDateException {","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"kwokyto"},"content":"        String[] parameters \u003d line.split(\":\");","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"kwokyto"},"content":"        String name \u003d parameters[1].substring(1, parameters[1].indexOf((\",\")));","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"kwokyto"},"content":"        String categoryStr \u003d parameters[2].substring(1, parameters[2].indexOf((\",\")));","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"kwokyto"},"content":"        FoodCategory category \u003d FoodCategory.convertStringToFoodCategory(categoryStr);","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"kwokyto"},"content":"        String expiry \u003d parameters[3].substring(1, parameters[3].indexOf((\",\")));","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"kwokyto"},"content":"        String storageStr \u003d parameters[4];","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"kwokyto"},"content":"        FoodStorageLocation storage \u003d FoodStorageLocation.convertStringToLocation(storageStr);","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"kwokyto"},"content":"        Food food \u003d new Food(category, name, expiry, storage); ","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"kwokyto"},"content":"        fridge.add(food);","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"kwokyto"},"content":"     * Overwrites the current textfile with data from the current session.","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"kwokyto"},"content":"     * ","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"kwokyto"},"content":"     * @param fridgeInput fridge to be populated","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"kwokyto"},"content":"    public static void save(Fridge fridgeInput) {","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"kwokyto"},"content":"        fridge \u003d fridgeInput;","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"kwokyto"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"kwokyto"},"content":"            clearFile();","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"kwokyto"},"content":"            populateData();","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"kwokyto"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"kwokyto"},"content":"            StorageSavingException exception \u003d new StorageSavingException(e);","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"kwokyto"},"content":"            Ui.printExceptionMessage(exception);","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"kwokyto"},"content":"    private static void clearFile() throws IOException {","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"kwokyto"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"kwokyto"},"content":"        fileWriter.write(\"\"); //clear file","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"kwokyto"},"content":"        fileWriter.close();","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"kwokyto"},"content":"    private static void populateData() throws IOException {","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"kwokyto"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"kwokyto"},"content":"        for (int i \u003d 0; i \u003c fridge.getSize(); i++) {","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"kwokyto"},"content":"            fileWriter.write(fridge.getFood(i).toString() + \"\\n\");","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"kwokyto"},"content":"        fileWriter.close();","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"kwokyto":121}},{"path":"src/main/java/seedu/fridgefriend/utilities/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.utilities;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":" * Represents an object that deals with interactions with the user.","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"public class Ui {","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"    public static final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"     * Retrieves the next line of input provided by the user.","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"     * ","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"     * @return string of next input","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"    public static String getNextLine() {","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"        String line \u003d scanner.nextLine();    ","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"        return line;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"    ","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"     * Prints to user a message with an added border below it.","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"     * ","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"     * @param message message to be printed","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"    public static void printMessage(String message) {","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"        System.out.println(message);","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"        System.out.println(\"-----------------------------------------------------------------\");","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"        String logo \u003d","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"                \"  ______    _     _            ______    _                _ \\n\"","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"                + \" |  ____|  (_)   | |          |  ____|  (_)              | |\\n\"","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"                + \" | |__ _ __ _  __| | __ _  ___| |__ _ __ _  ___ _ __   __| |\\n\"","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"                + \" |  __| \u0027__| |/ _` |/ _` |/ _ \\\\  __| \u0027__| |/ _ \\\\ \u0027_ \\\\ / _` |\\n\"","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"                + \" | |  | |  | | (_| | (_| |  __/ |  | |  | |  __/ | | | (_| |\\n\"","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"                + \" |_|  |_|  |_|\\\\__,_|\\\\__, |\\\\___|_|  |_|  |_|\\\\___|_| |_|\\\\__,_|\\n\"","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"                + \"                     __/ |\\n\"","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"                + \"                    |___/\\n\\n\";","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"        String welcomeMessage \u003d \"Hello! I\u0027m FridgeFriend!\\n\" + \"What can I do for you?\";","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"        printMessage(logo + welcomeMessage);","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"    public static void printByeMessage() {","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"        String byeMessage \u003d \"Bye! Hope to see you again soon!\";","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"kwokyto"},"content":"        printMessage(byeMessage);","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"kwokyto"},"content":"    public static void printExceptionMessage(Exception exception) {","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"kwokyto"},"content":"        String exceptionMessage \u003d exception.getMessage();","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"kwokyto"},"content":"        printMessage(exceptionMessage);","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"kwokyto"},"content":"    ","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"kwokyto":55}},{"path":"src/test/java/seedu/fridgefriend/FridgeFriendTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"class FridgeFriendTest {","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"-":10,"SimJJ96":2}},{"path":"src/test/java/seedu/fridgefriend/command/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.exception.InvalidDateException;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.ExpiryDate;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.Fridge;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"class AddCommandTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"    private Fridge fridge;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"        fridge \u003d new Fridge();","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":"    public void addCommand_foodInCorrectFormat_successfullyAdded() throws InvalidDateException {","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"        AddCommand addCommand \u003d new AddCommand(\"chicken\", FoodCategory.MEAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"                \"30-06-2021\", FoodStorageLocation.FREEZER);","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"        addCommand.setData(fridge);","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":"        addCommand.execute();","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"        assertEquals(\"chicken\", fridge.getFood(0).getFoodName());","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":"        assertEquals(FoodCategory.MEAT, fridge.getFood(0).getCategory());","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":"        assertEquals(FoodStorageLocation.FREEZER, fridge.getFood(0).getStorageLocation());","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"        ExpiryDate expiryDate \u003d new ExpiryDate(\"30-06-2021\");","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"        assertEquals(expiryDate.getExpiry(), fridge.getFood(0).getExpiryDate().getExpiry());","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"        String expectedMessage \u003d \"Great! I have added chicken into your fridge.\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"joohwan58"},"content":"                + \"Details: Food name: chicken, category: MEAT, \"","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"joohwan58"},"content":"                + \"expiry: 30-06-2021, stored in: FREEZER\";","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"SimJJ96"},"content":"        String actualMessage \u003d addCommand.getMessagePrintedToUser();","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"SimJJ96"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"SimJJ96"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"SimJJ96"},"content":"    public void addCommand_invalidDate_InvalidDateException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"SimJJ96"},"content":"        assertThrows(InvalidDateException.class, () -\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"SimJJ96"},"content":"            Command addCommand \u003d new AddCommand(\"chicken\", FoodCategory.MEAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"SimJJ96"},"content":"                    \"abcd\", FoodStorageLocation.FREEZER);","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"SimJJ96"},"content":"        });","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"joohwan58":2,"SimJJ96":48}},{"path":"src/test/java/seedu/fridgefriend/command/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.exception.InvalidInputException;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.Fridge;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"class ListCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"    private Fridge fridge;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":"    public void setUp() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"        fridge \u003d new Fridge();","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"        Food chicken \u003d new Food(FoodCategory.MEAT, \"chicken\",","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"                \"31-07-2021\", FoodStorageLocation.LOWER_SHELF);","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"        fridge.add(chicken);","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"        Food lettuce \u003d new Food(FoodCategory.VEGETABLE,\"lettuce\",","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"                \"17-03-2021\", FoodStorageLocation.MIDDLE_SHELF);","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"        fridge.add(lettuce);","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"        Food pork \u003d new Food(FoodCategory.MEAT, \"pork\",","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":"                \"31-07-2021\", FoodStorageLocation.LOWER_SHELF);","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":"        fridge.add(pork);","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"    public void listCommand_listAValidCategory_ListTheCategoryInCorrectSequence() {","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"        ListCommand listCommand \u003d new ListCommand(\"MEAT\");","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"SimJJ96"},"content":"        listCommand.setData(fridge);","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"SimJJ96"},"content":"        String expectedMessage \u003d \"These are the MEAT in your fridge:\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"SimJJ96"},"content":"                + \"\\t1. chicken\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"SimJJ96"},"content":"                + \"\\t2. pork\";","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"SimJJ96"},"content":"        String actualMessage \u003d listCommand.getListByCategoryMessage();","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"SimJJ96"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"SimJJ96"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"SimJJ96"},"content":"    public void listCommand_listAnInvalidCategory_invalidInputException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"SimJJ96"},"content":"        assertThrows(InvalidInputException.class, () -\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"SimJJ96"},"content":"                new ListCommand(\"abc123\").execute());","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"SimJJ96"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"SimJJ96"},"content":"    public void listCommand_listAll_listAllFoodInFridge() {","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"SimJJ96"},"content":"        ListCommand listCommand \u003d new ListCommand(\"\");","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"SimJJ96"},"content":"        listCommand.setData(fridge);","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"SimJJ96"},"content":"        String expectedMessage \u003d \"Here are the items in your fridge:\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"SimJJ96"},"content":"                + \"\\t1. chicken [MEAT]\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"SimJJ96"},"content":"                + \"\\t2. lettuce [VEGETABLE]\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"SimJJ96"},"content":"                + \"\\t3. pork [MEAT]\";","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"SimJJ96"},"content":"        String actualMessage \u003d listCommand.getListAllMessage();","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"SimJJ96"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"SimJJ96":63}},{"path":"src/test/java/seedu/fridgefriend/command/RemoveCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.exception.InvalidIndexException;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.Fridge;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"class RemoveCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"    private Fridge fridge;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"    /*Solution below adapted from https://github.com/se-edu/addressbook-level2/blob/master","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":"            /test/java/seedu/addressbook/commands/DeleteCommandTest.java*/","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"    public void setUp() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"        fridge \u003d new Fridge();","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"        Food chicken \u003d new Food(FoodCategory.MEAT, \"chicken\",","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":"                \"30-06-2021\", FoodStorageLocation.FREEZER);","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"        fridge.add(chicken);","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"        Food pork \u003d new Food(FoodCategory.MEAT, \"pork\",","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":"                \"31-07-2021\",FoodStorageLocation.LOWER_SHELF);","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"        fridge.add(pork);","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":"        Food lettuce \u003d new Food(FoodCategory.VEGETABLE,\"lettuce\",","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"                \"17-03-2021\", FoodStorageLocation.MIDDLE_SHELF);","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"        fridge.add(lettuce);","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"SimJJ96"},"content":"    public void removeCommand_validIndex_successfullyRemove() throws InvalidIndexException {","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"SimJJ96"},"content":"        RemoveCommand removeCommand \u003d new RemoveCommand(1);","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"SimJJ96"},"content":"        removeCommand.setData(fridge);","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"SimJJ96"},"content":"        removeCommand.execute();","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"SimJJ96"},"content":"        String actualMessage \u003d removeCommand.getMessagePrintedToUser();","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"SimJJ96"},"content":"        String expectedMessage \u003d \"Noted! I\u0027ve removed chicken\"","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"SimJJ96"},"content":"                + \" from your fridge.\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"SimJJ96"},"content":"                + \"Now you have 2\"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"SimJJ96"},"content":"                + \" food in the fridge.\";","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"SimJJ96"},"content":"        assertEquals(expectedMessage,actualMessage);","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"SimJJ96"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"SimJJ96"},"content":"    public void removeCommand_invalidIndex_invalidIndexException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"SimJJ96"},"content":"        assertThrows(InvalidIndexException.class, () -\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"SimJJ96"},"content":"                new RemoveCommand(10).execute());","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"SimJJ96":55}},{"path":"src/test/java/seedu/fridgefriend/command/SearchCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.exception.EmptyDescriptionException;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.Fridge;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"class SearchCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"    private Fridge fridge;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":"    public void setUp() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"        fridge \u003d new Fridge();","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"        Food chicken \u003d new Food(FoodCategory.MEAT, \"chicken\",","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"                \"30-06-2021\", FoodStorageLocation.FREEZER);","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"        fridge.add(chicken);","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"        Food pork \u003d new Food(FoodCategory.MEAT, \"pork\",","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"                \"31-07-2021\", FoodStorageLocation.LOWER_SHELF);","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"        fridge.add(pork);","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"        Food lettuce \u003d new Food(FoodCategory.VEGETABLE,\"lettuce\",","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":"                \"17-03-2021\", FoodStorageLocation.MIDDLE_SHELF);","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":"        fridge.add(lettuce);","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"    private SearchCommand searchCommand(String foodName) throws EmptyDescriptionException {","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"        SearchCommand searchCommand \u003d new SearchCommand(foodName);","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"        searchCommand.setData(fridge);","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"SimJJ96"},"content":"        return searchCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"SimJJ96"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"SimJJ96"},"content":"    public void searchCommand_foodInFridge_foodFound() throws EmptyDescriptionException {","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"SimJJ96"},"content":"        String expectedMessage \u003d \"You have chicken stored in FREEZER of your fridge.\";","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"SimJJ96"},"content":"        String actualMessage \u003d searchCommand(\"chicken\").getMessagePrintedToUser();","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"SimJJ96"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"SimJJ96"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"SimJJ96"},"content":"    public void searchCommand_foodNotInFridge_foodNotFound() throws EmptyDescriptionException {","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"SimJJ96"},"content":"        String expectedMessage \u003d \"You do not have oyster in your fridge.\";","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"SimJJ96"},"content":"        String actualMessage \u003d searchCommand(\"oyster\").getMessagePrintedToUser();","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"SimJJ96"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"SimJJ96"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"SimJJ96"},"content":"    public void searchCommand_emptyString_emptyDescriptionException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"SimJJ96"},"content":"        assertThrows(EmptyDescriptionException.class, () -\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"SimJJ96"},"content":"                searchCommand(\"\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"SimJJ96":60}},{"path":"src/test/java/seedu/fridgefriend/food/FoodTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.food;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"Leeyp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"Leeyp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidDateException;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"Leeyp"},"content":"public class FoodTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"Leeyp"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"Leeyp"},"content":"    void testNewFood() {","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"Leeyp"},"content":"        Food pork \u003d new Food(FoodCategory.MEAT, \"pork\");","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"Leeyp"},"content":"        assertEquals(FoodCategory.MEAT, pork.getCategory());","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"Leeyp"},"content":"        assertEquals(\"pork\", pork.getFoodName());","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"Leeyp"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"Vinci-Hu"},"content":"    void invalidDate_wrongDateFormat_exceptionThrown() {","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"        Food chicken \u003d new Food(FoodCategory.MEAT, \"chicken\");","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"        assertThrows(InvalidDateException.class, () -\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"            chicken.setExpiryDate(\"15-3-2021\");","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"        });","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"Leeyp"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"Leeyp"},"content":"    void testStorageLocation() {","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"Leeyp"},"content":"        Food grouper \u003d new Food(FoodCategory.SEAFOOD, \"grouper\");","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"Leeyp"},"content":"        grouper.setStorageLocation(FoodStorageLocation.FREEZER);","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"Leeyp"},"content":"        assertEquals(FoodStorageLocation.FREEZER, grouper.getStorageLocation());","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"Leeyp"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"Leeyp"},"content":"    void testChangeFoodDescriptionCategory() {","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"Leeyp"},"content":"        Food chocolate \u003d new Food(FoodCategory.DAIRY, \"chocolate\");","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"Leeyp"},"content":"        assertEquals(FoodCategory.DAIRY, chocolate.getCategory());","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"Leeyp"},"content":"        assertEquals(\"chocolate\", chocolate.getFoodName());","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"Leeyp"},"content":"        chocolate.setFoodName(\"melted chocolate\");","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"Leeyp"},"content":"        chocolate.setCategory(FoodCategory.OTHER);","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"Leeyp"},"content":"        assertEquals(FoodCategory.OTHER, chocolate.getCategory());","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"Leeyp"},"content":"        assertEquals(\"melted chocolate\", chocolate.getFoodName());","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"Leeyp"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"    void testNewFoodAllParameters() throws InvalidDateException {","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"Vinci-Hu"},"content":"        Food eggs \u003d new Food(FoodCategory.EGG, \"eggs\",","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"                \"20-03-2021\", FoodStorageLocation.UPPER_SHELF);","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"Leeyp"},"content":"        assertEquals(FoodCategory.EGG, eggs.getCategory());","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"Leeyp"},"content":"        assertEquals(\"eggs\", eggs.getFoodName());","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"kwokyto"},"content":"        assertEquals(\"20-03-2021\", eggs.getExpiryDate().toString());","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"Leeyp"},"content":"        assertEquals(FoodStorageLocation.UPPER_SHELF, eggs.getStorageLocation());","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"Vinci-Hu"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"Vinci-Hu"},"content":"    void testUpdateExpiryDate() throws InvalidDateException {","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"Vinci-Hu"},"content":"        Food eggs \u003d new Food(FoodCategory.EGG, \"eggs\",","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"Vinci-Hu"},"content":"                \"20-03-2021\", FoodStorageLocation.UPPER_SHELF);","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"Vinci-Hu"},"content":"        eggs.setExpiryDate(\"12-04-2021\");","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"Vinci-Hu"},"content":"        assertEquals(\"12-04-2021\", eggs.getExpiryDate().toString());","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"Leeyp"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"Leeyp":41,"kwokyto":11,"Vinci-Hu":10}},{"path":"src/test/java/seedu/fridgefriend/utilities/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.utilities;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.EmptyDescriptionException;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidIndexException;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidInputException;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.command.ByeCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.command.Command;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.command.ListCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"// Solution below adapted from https://github.com/se-edu/addressbook-level2/blob/157fcf19c6b73289dc4cc7b2dd1152bc2b8e197a/test/java/seedu/addressbook/parser/ParserTest.java","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"public class ParserTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"    public void parse_emptyInput_InvalidInputException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"        assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"            Parser.parseInput(\"\");","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"        });","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"    public void parse_listCommand_parsedCorrectly() {","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"        try {","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"            assertEquals(Parser.getCommand(\"list\").getClass(), ListCommand.class);","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"            fail();","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"    public void parse_byeCommand_parsedCorrectly() {","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"        try {","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"            assertEquals(Parser.getCommand(\"bye\").getClass(), ByeCommand.class);","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"            fail();","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"    public void parse_addCommandNoArgs_EmptyDescriptionException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"        assertThrows(EmptyDescriptionException.class, () -\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"kwokyto"},"content":"            Parser.getCommand(\"add\");","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"        });","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"kwokyto"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"kwokyto"},"content":"    public void parse_addCommandMissingArgs_InvalidInputException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"kwokyto"},"content":"        assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"kwokyto"},"content":"            Parser.getCommand(\"add /cat meat\");","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"kwokyto"},"content":"        });","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"kwokyto"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"kwokyto"},"content":"    public void parse_removeCommandNoArgs_EmptyDescriptionException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"kwokyto"},"content":"        assertThrows(EmptyDescriptionException.class, () -\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"kwokyto"},"content":"            Parser.getCommand(\"remove\");","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"kwokyto"},"content":"        });","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"kwokyto"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"kwokyto"},"content":"    public void parse_removeCommandAlphabeticalArgs_InvalidIndexException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"kwokyto"},"content":"        assertThrows(InvalidIndexException.class, () -\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"kwokyto"},"content":"            Parser.getCommand(\"remove abc\");","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"kwokyto"},"content":"        });","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"kwokyto"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"kwokyto"},"content":"    public void parse_removeCommandArgOutOfBounds_InvalidIndexException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"kwokyto"},"content":"        assertThrows(InvalidIndexException.class, () -\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"kwokyto"},"content":"            Command command \u003d Parser.getCommand(\"remove -1\");","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"kwokyto"},"content":"            command.execute();","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"kwokyto"},"content":"        });","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"kwokyto"},"content":"        assertThrows(InvalidIndexException.class, () -\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"kwokyto"},"content":"            Command command \u003d Parser.getCommand(\"remove 10000\");","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"kwokyto"},"content":"            command.execute();","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"kwokyto"},"content":"        });","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"kwokyto"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"kwokyto"},"content":"    public void parse_searchCommandNoArg_EmptyDescriptionException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"kwokyto"},"content":"        assertThrows(EmptyDescriptionException.class, () -\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"kwokyto"},"content":"            Parser.getCommand(\"search\");","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"kwokyto"},"content":"        });","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"kwokyto"},"content":"    ","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"kwokyto":91}},{"path":"text-ui-test/runtest.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@echo off","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"setlocal enableextensions","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"pushd %~dp0","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"call gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"cd build\\libs","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"for /f \"tokens\u003d*\" %%a in (","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u0027dir /b *.jar\u0027","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":") do (","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    set jarloc\u003d%%a","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"cd ..\\..\\text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"FC ACTUAL.TXT EXPECTED.TXT ","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"kwokyto":1,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"!/usr/bin/env bash","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"diff EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kwokyto":1,"-":22}}]
