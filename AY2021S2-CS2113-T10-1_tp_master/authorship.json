[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"    mainClassName \u003d \"seedu.fridgefriend.FridgeFriend\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"    archiveBaseName \u003d \"fridgefriend\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":44,"SimJJ96":2}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio "},{"lineNumber":4,"author":{"gitId":"-"},"content":"----------|:------:|:--------------:|:---------:"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"![](https://avatars.githubusercontent.com/u/61216523?s\u003d400\u0026u\u003d14d1ea6c1c7a2dc388293b299eb860859388b309\u0026v\u003d4) | Ryan Kwok | [Github](https://github.com/kwokyto) | [Portfolio](team/kwokyto.md)"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"![alt text](team/hwq_pic.png) | Hu Wenqi | [Github](https://github.com/Vinci-Hu) | [Portfolio](team/wenqihu.md)"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"joohwan58"},"content":"![](team/JoohwanPic.png) | Kim Joohwan | [Github](https://github.com/joohwan58) | [Portfolio](team/joohwan.md)"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"![img.png](team/lyp_pic.png)| Lee Yang Peng | [Github](https://github.com/Leeyp) | [Portfolio](team/leeyp.md)"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"![image](team/sjj_pic.png) | Sim Jing Jie | [Github](https://github.com/SimJJ96/) | [Portfolio](team/simjingjie.md)"}],"authorContributionMap":{"joohwan58":1,"-":12,"SimJJ96":1}},{"path":"src/main/java/seedu/fridgefriend/FridgeFriend.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend;"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.command.Command;"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidInputException;"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.food.Fridge;"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.Parser;"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.Ui;"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"public class FridgeFriend {"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"    private static boolean isExit \u003d false;"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"    public FridgeFriend() {"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"        new Ui();"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"        new Fridge();"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"    public static void main(String[] args) {"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"        Ui.printWelcomeMessage();"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"        run();"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"        Ui.printByeMessage();"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"    private static void run() {"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"        while (!isExit) {"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"            try {"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"                String input \u003d Ui.getNextLine();"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"                Command command \u003d Parser.getCommand(input);"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"                executeCommand(command);"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"                isExit \u003d command.isExit();"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":"            } catch (Exception exception) {"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"                Ui.printExceptionMessage(exception);"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"    private static void executeCommand(Command command) throws InvalidInputException {"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"        command.execute();"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"SimJJ96"},"content":"}"}],"authorContributionMap":{"kwokyto":25,"SimJJ96":15}},{"path":"src/main/java/seedu/fridgefriend/command/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.command;"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidDateException;"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.Food;"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.FoodCategory;"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.food.Fridge;"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.Ui;"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":" * Represents a command to add a food item into the Fridge."},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":" * When calling constructor, foodName, category, expiryDate, and location are necessary fields"},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":" */"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"public class AddCommand extends Command {"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"    private final Food foodToAdd;"},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"    public AddCommand(String foodName, FoodCategory category, String expiryString,"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"            FoodStorageLocation location) throws InvalidDateException {"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"        this.foodToAdd \u003d new Food(category, foodName, expiryString, location);"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"    public void execute() {"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"        addFood();"},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":"        showResults();"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"    private void addFood() {"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"        Fridge.add(foodToAdd);"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"    private void showResults() {"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"        String message \u003d \"Great! I have added \""},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"                + foodToAdd.getFoodName()"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"                + \" into your fridge.\\n\""},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"                + \"Details: \""},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"                + foodToAdd.toString();"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"        Ui.printMessage(message);"},{"lineNumber":42,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":44,"author":{"gitId":"SimJJ96"},"content":"}"}],"authorContributionMap":{"kwokyto":20,"Vinci-Hu":2,"SimJJ96":22}},{"path":"src/main/java/seedu/fridgefriend/command/ByeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.command;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":" * Represents a command to exit the application."},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":" */"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"public class ByeCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"    public ByeCommand() {"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"        super();"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"    public boolean isExit() {"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"        return isExit;"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"    public void setExit(boolean isExit) {"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"        this.isExit \u003d isExit;"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"    public void execute() {"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"        setExit(true);"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"    "},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":25}},{"path":"src/main/java/seedu/fridgefriend/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.command;"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidInputException;"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":" * Represent an executable command."},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":" */"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"public abstract class Command {"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"    protected boolean isExit;"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"    public Command() {"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"        isExit \u003d false;"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"    "},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"    public boolean isExit() {"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"        return isExit;"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"    public abstract void execute() throws InvalidInputException;"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"}"}],"authorContributionMap":{"kwokyto":13,"SimJJ96":9}},{"path":"src/main/java/seedu/fridgefriend/command/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.command;"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.exception.InvalidInputException;"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.Food;"},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.FoodCategory;"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.food.Fridge;"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.Ui;"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":" * Represents a command to list the items in the fridge to the user."},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":" * When calling constructor, description is a necessary field"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":" * to specify whether to list everything or list by category."},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":" */"},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"public class ListCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"    private static final int EXTRA_INDEX \u003d 1;"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"    private final FoodCategory foodCategory;"},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"    private final String category;"},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"    public ListCommand(String description) {"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"        this.category \u003d description.toUpperCase();"},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"        this.foodCategory \u003d FoodCategory.convertStringToFoodCategory(category);"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"    public void execute() throws InvalidInputException {"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"        if (category.equals(\"\")) {"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"            listEverythingInFridge();"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"        } else {"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"            listByCategory();"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"    private void listByCategory() throws InvalidInputException {"},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"        checkIsValidCategory();"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"        String message \u003d getListByCategoryMessage();"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"        Ui.printMessage(message);"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"    private String getListByCategoryMessage() {"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"        String message \u003d \"These are the \" + foodCategory + \" in your fridge:\\n\";"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"        for (int i \u003d 0; i \u003c Fridge.getSize(); i++) {"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"            message +\u003d matchCategory(i);"},{"lineNumber":44,"author":{"gitId":"SimJJ96"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"        return message;"},{"lineNumber":46,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"    private void listEverythingInFridge() {"},{"lineNumber":49,"author":{"gitId":"kwokyto"},"content":"        String message \u003d \"Here are the items in your fridge:\";"},{"lineNumber":50,"author":{"gitId":"kwokyto"},"content":"        for (int i \u003d 0; i \u003c Fridge.getSize(); i++) {"},{"lineNumber":51,"author":{"gitId":"kwokyto"},"content":"            message +\u003d getFoodDescription(i);"},{"lineNumber":52,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"kwokyto"},"content":"        Ui.printMessage(message);"},{"lineNumber":54,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":56,"author":{"gitId":"kwokyto"},"content":"    private String getFoodDescription(int i) {"},{"lineNumber":57,"author":{"gitId":"SimJJ96"},"content":"        int indexShownToUser \u003d i + EXTRA_INDEX;"},{"lineNumber":58,"author":{"gitId":"kwokyto"},"content":"        Food food \u003d Fridge.getFood(i);"},{"lineNumber":59,"author":{"gitId":"kwokyto"},"content":"        String foodDescription \u003d "},{"lineNumber":60,"author":{"gitId":"kwokyto"},"content":"                \"\\n\\t\" + indexShownToUser +  \". \""},{"lineNumber":61,"author":{"gitId":"kwokyto"},"content":"                + food.getFoodName() + \" [\""},{"lineNumber":62,"author":{"gitId":"kwokyto"},"content":"                + food.getCategory() + \"]\";"},{"lineNumber":63,"author":{"gitId":"kwokyto"},"content":"        return foodDescription;"},{"lineNumber":64,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":66,"author":{"gitId":"SimJJ96"},"content":"    private void checkIsValidCategory() throws InvalidInputException {"},{"lineNumber":67,"author":{"gitId":"SimJJ96"},"content":"        if (!FoodCategory.contains(category)) {"},{"lineNumber":68,"author":{"gitId":"kwokyto"},"content":"            String errorMessage \u003d \"Sorry my friend, please enter a valid food category.\";"},{"lineNumber":69,"author":{"gitId":"kwokyto"},"content":"            throw new InvalidInputException(errorMessage);"},{"lineNumber":70,"author":{"gitId":"SimJJ96"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":73,"author":{"gitId":"kwokyto"},"content":"    private String matchCategory(int index) {"},{"lineNumber":74,"author":{"gitId":"kwokyto"},"content":"        String foodAndCategory \u003d \"\";"},{"lineNumber":75,"author":{"gitId":"kwokyto"},"content":"        Food food \u003d Fridge.getFood(index);"},{"lineNumber":76,"author":{"gitId":"kwokyto"},"content":"        FoodCategory category \u003d food.getCategory();"},{"lineNumber":77,"author":{"gitId":"kwokyto"},"content":"        if (category.equals(foodCategory)) {"},{"lineNumber":78,"author":{"gitId":"SimJJ96"},"content":"            int indexShownToUser \u003d index + EXTRA_INDEX;"},{"lineNumber":79,"author":{"gitId":"kwokyto"},"content":"            foodAndCategory \u003d \"\\t\" + indexShownToUser + \". \" + food.getFoodName();"},{"lineNumber":80,"author":{"gitId":"SimJJ96"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"kwokyto"},"content":"        return foodAndCategory;"},{"lineNumber":82,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":84,"author":{"gitId":"SimJJ96"},"content":"}"}],"authorContributionMap":{"kwokyto":40,"SimJJ96":44}},{"path":"src/main/java/seedu/fridgefriend/command/RemoveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.command;"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidIndexException;"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.Food;"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.food.Fridge;"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.Ui;"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":" * Represents a command to remove a food item from the fridge by index specify by user."},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":" */"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"public class RemoveCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"    private static final int EXTRA_INDEX \u003d 1;"},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":"    private final int indexToRemove;"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"    private Food foodToBeRemoved;"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"     * Constructor creates a RemoveCommand object."},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"     * "},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"     * @param indexToRemove integer index given by user"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidIndexException if provided index is out of bounds"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"    public RemoveCommand(int indexToRemove) throws InvalidIndexException {"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"        int actualIndexToRemoved \u003d indexToRemove - EXTRA_INDEX;"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"        this.indexToRemove \u003d actualIndexToRemoved;"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"            this.foodToBeRemoved \u003d Fridge.getFood(actualIndexToRemoved);"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"        } catch (Exception e) {"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"            throw new InvalidIndexException(e);"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"    public void execute() {"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"        removeFood();"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"        showMessage();"},{"lineNumber":38,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"    public void removeFood() {"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"        if (indexToRemove \u003e Fridge.getSize()) {"},{"lineNumber":42,"author":{"gitId":"SimJJ96"},"content":"            throw new IndexOutOfBoundsException();"},{"lineNumber":43,"author":{"gitId":"SimJJ96"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":"        Fridge.removeByIndex(indexToRemove);"},{"lineNumber":45,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":47,"author":{"gitId":"kwokyto"},"content":"    private void showMessage() {"},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"        String message \u003d \"Noted! I\u0027ve removed \" + foodToBeRemoved.getFoodName()"},{"lineNumber":49,"author":{"gitId":"SimJJ96"},"content":"                + \" from your fridge.\\n\""},{"lineNumber":50,"author":{"gitId":"kwokyto"},"content":"                + \"Now you have \" + Fridge.getSize()"},{"lineNumber":51,"author":{"gitId":"kwokyto"},"content":"                + \" food in the fridge.\";"},{"lineNumber":52,"author":{"gitId":"kwokyto"},"content":"        Ui.printMessage(message);"},{"lineNumber":53,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"SimJJ96"},"content":"}"}],"authorContributionMap":{"kwokyto":30,"SimJJ96":24}},{"path":"src/main/java/seedu/fridgefriend/command/SearchCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.command;"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.exception.EmptyDescriptionException;"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.Food;"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.food.Fridge;"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.Ui;"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":" * Represents a command to search for a specific food item in the fridge."},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":" */"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"public class SearchCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"    private String foodName;"},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":"    public SearchCommand(String foodName) throws EmptyDescriptionException {"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"        if (foodName.isEmpty()) {"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"            throw new EmptyDescriptionException();"},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"        this.foodName \u003d foodName;"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"    public void execute() {"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"        showResults(isFound());"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"    private boolean isFound() {"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"        for (int i \u003d 0; i \u003c Fridge.getSize(); i +\u003d 1) {"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"            Food food \u003d Fridge.getFood(i);"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":"            if (food.getFoodName().equals(foodName)) {"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"                return true;"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"        return false;"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":38,"author":{"gitId":"SimJJ96"},"content":"    private void showResults(Boolean isFound) {"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"        String message;"},{"lineNumber":40,"author":{"gitId":"SimJJ96"},"content":"        if (isFound \u003d\u003d true) {"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"            message \u003d \"You have \" + foodName + \" in your fridge.\";"},{"lineNumber":42,"author":{"gitId":"SimJJ96"},"content":"        } else {"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"            message \u003d \"You do not have \" + foodName + \" in your fridge.\";"},{"lineNumber":44,"author":{"gitId":"SimJJ96"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"        Ui.printMessage(message);"},{"lineNumber":46,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"SimJJ96"},"content":"}"}],"authorContributionMap":{"kwokyto":12,"SimJJ96":35}},{"path":"src/main/java/seedu/fridgefriend/exception/EmptyDescriptionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.exception;"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":" * Signal that the input format given does not fulfill the criteria."},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":" */"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"public class EmptyDescriptionException extends Exception {"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"    private static final String errorMessage \u003d \"Sorry my friend, the description cannot be empty.\";"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"    public EmptyDescriptionException() {"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"        super(errorMessage);"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"}"}],"authorContributionMap":{"kwokyto":1,"SimJJ96":11}},{"path":"src/main/java/seedu/fridgefriend/exception/InvalidDateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.exception;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":" * Signal that the input format of the date field is incorrect."},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":" */"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"public class InvalidDateException extends Exception {"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"    private static final String errorMessage \u003d \"Sorry my friend, the date must be in the form \u0027dd-mm-yy\u0027.\\n\";"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"    public InvalidDateException(String message) {"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"        super(errorMessage + message);"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":12}},{"path":"src/main/java/seedu/fridgefriend/exception/InvalidIndexException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.exception;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"public class InvalidIndexException extends Exception {"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"    private static final String errorMessage \u003d \"Please enter a valid index to remove food.\\n\";"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"    public InvalidIndexException(Exception e) {"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"        super(errorMessage + e.getLocalizedMessage());"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":9}},{"path":"src/main/java/seedu/fridgefriend/exception/InvalidInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.exception;"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":" * Signals that the format of the input is incorrect."},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":" */"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"public class InvalidInputException extends Exception {"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"    private static final String errorMessage \u003d \"Sorry my friend, please give a valid input.\";"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"    public InvalidInputException() {"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"        super(errorMessage);"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"    public InvalidInputException(String message) {"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"        super(message);"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"}"}],"authorContributionMap":{"kwokyto":5,"SimJJ96":11}},{"path":"src/main/java/seedu/fridgefriend/food/ExpiryDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.food;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidDateException;"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"public class ExpiryDate {"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"    protected LocalDate expiry;"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"    public ExpiryDate(String string) throws InvalidDateException {"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"        try {"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"            LocalDate expiry \u003d LocalDate.parse(string, formatter);"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"            this.expiry \u003d expiry;            "},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"            String message \u003d e.getLocalizedMessage() + \"\\n\";"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"            throw new InvalidDateException(message);"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"    public LocalDate getExpiry() {"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"        return expiry;"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"        return this.expiry.format(formatter);"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":31}},{"path":"src/main/java/seedu/fridgefriend/food/Food.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.food;"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidDateException;"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":" * Represents a portion of a specific food that is stored in the smart fridge."},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":" * When calling constructor, FoodCategory and foodName are NECESSARY fields."},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":" * The date fields are represented by strings for now, they are OPTIONAL as well as storage location."},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":" * For Jingjie: for now you can use the first constructor."},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":" * todo: If needed, make the class abstract and add children classes(only when necessary unique methods are needed)."},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":" */"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":"public class Food {"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"    protected FoodCategory category;"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":"    protected String foodName;"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"    protected ExpiryDate expiryDate;"},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":"    protected FoodStorageLocation storageLocation;"},{"lineNumber":17,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"    public Food(FoodCategory category, String foodName) {"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"        this.setCategory(category);"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"        this.setFoodName(foodName);"},{"lineNumber":21,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"    public Food(FoodCategory category, String foodName, String expiryString,"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"            FoodStorageLocation storageLocation) throws InvalidDateException {"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"        this.setCategory(category);"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"        this.setFoodName(foodName);"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"        this.setExpiryDate(expiryString);"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"        this.setStorageLocation(storageLocation);"},{"lineNumber":29,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":31,"author":{"gitId":"Vinci-Hu"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"Vinci-Hu"},"content":"    public String toString() {"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"        String format \u003d \"||Food name: %1$s, category: %2$s, expiry: %3$s, stored in: %4$s||\";"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"        return String.format("},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"                format,"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"                getFoodName(),"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"                getCategory().name(), "},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"                getExpiryDate().toString(), "},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"                getStorageLocation().name());"},{"lineNumber":40,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":42,"author":{"gitId":"Vinci-Hu"},"content":"    public FoodCategory getCategory() {"},{"lineNumber":43,"author":{"gitId":"Vinci-Hu"},"content":"        return category;"},{"lineNumber":44,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":46,"author":{"gitId":"Vinci-Hu"},"content":"    public void setCategory(FoodCategory category) {"},{"lineNumber":47,"author":{"gitId":"Vinci-Hu"},"content":"        this.category \u003d category;"},{"lineNumber":48,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":50,"author":{"gitId":"Vinci-Hu"},"content":"    public String getFoodName() {"},{"lineNumber":51,"author":{"gitId":"Vinci-Hu"},"content":"        return foodName;"},{"lineNumber":52,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":54,"author":{"gitId":"Vinci-Hu"},"content":"    public void setFoodName(String foodName) {"},{"lineNumber":55,"author":{"gitId":"Vinci-Hu"},"content":"        this.foodName \u003d foodName;"},{"lineNumber":56,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":58,"author":{"gitId":"kwokyto"},"content":"    public ExpiryDate getExpiryDate() {"},{"lineNumber":59,"author":{"gitId":"Vinci-Hu"},"content":"        return expiryDate;"},{"lineNumber":60,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":62,"author":{"gitId":"kwokyto"},"content":"    public void setExpiryDate(String expiryString) throws InvalidDateException {"},{"lineNumber":63,"author":{"gitId":"kwokyto"},"content":"        ExpiryDate expiryDate \u003d new ExpiryDate(expiryString);"},{"lineNumber":64,"author":{"gitId":"Vinci-Hu"},"content":"        this.expiryDate \u003d expiryDate;"},{"lineNumber":65,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":67,"author":{"gitId":"Vinci-Hu"},"content":"    public FoodStorageLocation getStorageLocation() {"},{"lineNumber":68,"author":{"gitId":"Vinci-Hu"},"content":"        return storageLocation;"},{"lineNumber":69,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":71,"author":{"gitId":"Vinci-Hu"},"content":"    public void setStorageLocation(FoodStorageLocation storageLocation) {"},{"lineNumber":72,"author":{"gitId":"Vinci-Hu"},"content":"        this.storageLocation \u003d storageLocation;"},{"lineNumber":73,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"Vinci-Hu"},"content":"}"}],"authorContributionMap":{"kwokyto":21,"Vinci-Hu":52,"SimJJ96":1}},{"path":"src/main/java/seedu/fridgefriend/food/FoodCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.food;"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":" * Subject to changes with discussion."},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":"public enum FoodCategory {"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":"    VEGETABLE,      // e.g. eggplant, spinach, bok choy, including beans and fungus"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":"    FRUIT,          // e.g. strawberry, apple, grapes"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":"    MEAT,           // e.g. pork, beef, lamb, chicken"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":"    SEAFOOD,        // e.g. salmon, mackerel, crab, prawn"},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":"    EGG,            // e.g. egg, duck egg, quail egg"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":"    DAIRY,          // e.g. milk, butter, cheese, yoghurt"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"    BEVERAGE,       // e.g. coke, orange juice"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":"    COOKED_DISH,    // e.g. tomato scrambled eggs, chicken soup"},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"    READY_TO_EAT,   // e.g. sandwich"},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":"    FROZEN,    // e.g. frozen dumpling, ice cream"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"    OTHER;"},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":"    public static boolean contains(String string) {"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"        for (FoodCategory foodCategory : values()) {"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"            if (foodCategory.name().equals(string)) {"},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"                return true;"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"            }"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"        return false;"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":28,"author":{"gitId":"Vinci-Hu"},"content":"    public static FoodCategory convertStringToFoodCategory(String rawCategoryStr) {"},{"lineNumber":29,"author":{"gitId":"Vinci-Hu"},"content":"        String processedCategoryStr \u003d rawCategoryStr.toUpperCase();"},{"lineNumber":30,"author":{"gitId":"Vinci-Hu"},"content":"        if (FoodCategory.contains(processedCategoryStr)) {"},{"lineNumber":31,"author":{"gitId":"Vinci-Hu"},"content":"            return FoodCategory.valueOf(processedCategoryStr);"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"        } else {"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"            return FoodCategory.OTHER;"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"}"},{"lineNumber":37,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":38,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":39,"author":{"gitId":"SimJJ96"},"content":""},{"lineNumber":40,"author":{"gitId":"SimJJ96"},"content":""}],"authorContributionMap":{"Vinci-Hu":20,"SimJJ96":20}},{"path":"src/main/java/seedu/fridgefriend/food/FoodStorageLocation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.food;"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":" * Assume the fridge has these storage locations"},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":" * Reference: https://styledegree.sg/the-right-way-to-store-organize-food-in-fridge/"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":" */"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":"public enum FoodStorageLocation {"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":"    FREEZER,"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":"    UPPER_SHELF,"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":"    MIDDLE_SHELF,"},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":"    LOWER_SHELF,"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":"    DRAWERS,"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"    FRIDGE_DOOR,"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":"    OTHER;"},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":"    public static boolean contains(String string) {"},{"lineNumber":17,"author":{"gitId":"Vinci-Hu"},"content":"        for (FoodStorageLocation location : values()) {"},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"            if (location.name().equals(string)) {"},{"lineNumber":19,"author":{"gitId":"Vinci-Hu"},"content":"                return true;"},{"lineNumber":20,"author":{"gitId":"Vinci-Hu"},"content":"            }"},{"lineNumber":21,"author":{"gitId":"Vinci-Hu"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"Vinci-Hu"},"content":"        return false;"},{"lineNumber":23,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Vinci-Hu"},"content":""},{"lineNumber":25,"author":{"gitId":"Vinci-Hu"},"content":"    public static FoodStorageLocation convertStringToLocation(String rawLocationStr) {"},{"lineNumber":26,"author":{"gitId":"Vinci-Hu"},"content":"        String processedLocationStr \u003d rawLocationStr.toUpperCase();"},{"lineNumber":27,"author":{"gitId":"Vinci-Hu"},"content":"        if (FoodStorageLocation.contains(processedLocationStr)) {"},{"lineNumber":28,"author":{"gitId":"Vinci-Hu"},"content":"            return FoodStorageLocation.valueOf(processedLocationStr);"},{"lineNumber":29,"author":{"gitId":"Vinci-Hu"},"content":"        } else {"},{"lineNumber":30,"author":{"gitId":"Vinci-Hu"},"content":"            return FoodStorageLocation.OTHER;"},{"lineNumber":31,"author":{"gitId":"Vinci-Hu"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"Vinci-Hu"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Vinci-Hu"},"content":"}"}],"authorContributionMap":{"Vinci-Hu":32,"SimJJ96":1}},{"path":"src/main/java/seedu/fridgefriend/food/Fridge.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.food;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"public class Fridge {"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"    private static ArrayList\u003cFood\u003e fridge \u003d new ArrayList\u003c\u003e();"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"    public static void add(Food food) {"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"        fridge.add(food);"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"    public static int getSize() {"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"        return fridge.size();"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"    public static Food getFood(int i) {"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"        return fridge.get(i);"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"    public static void removeByIndex(int index) {"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"        fridge.remove(index);"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":23}},{"path":"src/main/java/seedu/fridgefriend/utilities/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.utilities;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import static seedu.fridgefriend.food.FoodCategory.convertStringToFoodCategory;"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import static seedu.fridgefriend.food.FoodStorageLocation.convertStringToLocation;"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import java.util.regex.Matcher;"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"import java.util.regex.Pattern;"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.command.AddCommand;"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.command.ByeCommand;"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.command.Command;"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.command.ListCommand;"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.command.RemoveCommand;"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.command.SearchCommand;"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.EmptyDescriptionException;"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidDateException;"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidIndexException;"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidInputException;"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":" * Represents an object that deals with making sense of the user command."},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":" */"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"public class Parser {"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"    public static final int COMMAND_WORD \u003d 0;"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"    public static final int LIMIT \u003d 2;"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"     * Returns a Command object based on the user\u0027s raw input."},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"     * @param input user\u0027s raw input"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"     * @return Command object"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"     * @throws EmptyDescriptionException if the required description field is empty"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidInputException if the command is not recognised"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidIndexException if the index given in description is out of bounds"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidDateException if the date input cannot be parsed"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"    public static Command getCommand(String input)"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"            throws EmptyDescriptionException, InvalidInputException, "},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"            InvalidIndexException, InvalidDateException {"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"        String[] parsedInput \u003d parseInput(input);"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"        Command command \u003d parseCommand(parsedInput);"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"        return command;"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"     * Parses input into command and description."},{"lineNumber":47,"author":{"gitId":"kwokyto"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"     * @param input user input string"},{"lineNumber":49,"author":{"gitId":"kwokyto"},"content":"     * @return String array of command and description"},{"lineNumber":50,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidInputException if the input is empty"},{"lineNumber":51,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"kwokyto"},"content":"    public static String[] parseInput(String input) throws InvalidInputException {"},{"lineNumber":53,"author":{"gitId":"kwokyto"},"content":"        if (input.isEmpty()) {"},{"lineNumber":54,"author":{"gitId":"kwokyto"},"content":"            throw new InvalidInputException();"},{"lineNumber":55,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"kwokyto"},"content":"        //remove trailing whitespaces and parse input into two separated by a whitespace"},{"lineNumber":57,"author":{"gitId":"kwokyto"},"content":"        String[] words \u003d input.trim().split(\"\\\\s+\", Parser.LIMIT);"},{"lineNumber":58,"author":{"gitId":"kwokyto"},"content":"        if (words.length \u003d\u003d Parser.LIMIT) {"},{"lineNumber":59,"author":{"gitId":"kwokyto"},"content":"            return words;"},{"lineNumber":60,"author":{"gitId":"kwokyto"},"content":"        } else {"},{"lineNumber":61,"author":{"gitId":"kwokyto"},"content":"            //return an array of command and empty description"},{"lineNumber":62,"author":{"gitId":"kwokyto"},"content":"            return new String[] {words[COMMAND_WORD], \"\"};"},{"lineNumber":63,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":66,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"kwokyto"},"content":"     * Returns the appropriate Command object based on command and description."},{"lineNumber":68,"author":{"gitId":"kwokyto"},"content":"     * "},{"lineNumber":69,"author":{"gitId":"kwokyto"},"content":"     * @param parsedInput string array containing command and description"},{"lineNumber":70,"author":{"gitId":"kwokyto"},"content":"     * @return Command object"},{"lineNumber":71,"author":{"gitId":"kwokyto"},"content":"     * @throws EmptyDescriptionException if the required description field is empty"},{"lineNumber":72,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidInputException if the command is not recognised"},{"lineNumber":73,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidIndexException if the index given in description is out of bounds"},{"lineNumber":74,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidDateException if the date input cannot be parsed"},{"lineNumber":75,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"kwokyto"},"content":"    public static Command parseCommand(String[] parsedInput)"},{"lineNumber":77,"author":{"gitId":"kwokyto"},"content":"            throws EmptyDescriptionException, InvalidInputException, "},{"lineNumber":78,"author":{"gitId":"kwokyto"},"content":"            InvalidIndexException, InvalidDateException {"},{"lineNumber":79,"author":{"gitId":"kwokyto"},"content":"        String commandString \u003d parsedInput[COMMAND_WORD];"},{"lineNumber":80,"author":{"gitId":"kwokyto"},"content":"        String description \u003d parsedInput[1];"},{"lineNumber":81,"author":{"gitId":"kwokyto"},"content":"        Command command;"},{"lineNumber":82,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":83,"author":{"gitId":"kwokyto"},"content":"        switch (commandString.toLowerCase()) {"},{"lineNumber":84,"author":{"gitId":"kwokyto"},"content":"        case \"add\":"},{"lineNumber":85,"author":{"gitId":"kwokyto"},"content":"            command \u003d Parser.getAddCommand(description);"},{"lineNumber":86,"author":{"gitId":"kwokyto"},"content":"            break;"},{"lineNumber":87,"author":{"gitId":"kwokyto"},"content":"        case \"list\":"},{"lineNumber":88,"author":{"gitId":"kwokyto"},"content":"            command \u003d Parser.getListCommand(description);"},{"lineNumber":89,"author":{"gitId":"kwokyto"},"content":"            break;"},{"lineNumber":90,"author":{"gitId":"kwokyto"},"content":"        case \"remove\":"},{"lineNumber":91,"author":{"gitId":"kwokyto"},"content":"            command \u003d Parser.getRemoveCommand(description);"},{"lineNumber":92,"author":{"gitId":"kwokyto"},"content":"            break;"},{"lineNumber":93,"author":{"gitId":"kwokyto"},"content":"        case \"search\":"},{"lineNumber":94,"author":{"gitId":"kwokyto"},"content":"            command \u003d Parser.getSearchCommand(description);"},{"lineNumber":95,"author":{"gitId":"kwokyto"},"content":"            break;"},{"lineNumber":96,"author":{"gitId":"kwokyto"},"content":"        case \"bye\":"},{"lineNumber":97,"author":{"gitId":"kwokyto"},"content":"            command \u003d Parser.getByeCommand();"},{"lineNumber":98,"author":{"gitId":"kwokyto"},"content":"            break;"},{"lineNumber":99,"author":{"gitId":"kwokyto"},"content":"        default:"},{"lineNumber":100,"author":{"gitId":"kwokyto"},"content":"            throw new InvalidInputException();"},{"lineNumber":101,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"kwokyto"},"content":"        return command;"},{"lineNumber":103,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":105,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"kwokyto"},"content":"     * Define arguments format for add food command."},{"lineNumber":107,"author":{"gitId":"kwokyto"},"content":"     * A Pattern object which defines how the input string for food item"},{"lineNumber":108,"author":{"gitId":"kwokyto"},"content":"     * that should look like. [^/]+ implies 1 or more characters except for \u0027/\u0027"},{"lineNumber":109,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"kwokyto"},"content":"    public static final Pattern FOOD_DATA_ARGS_FORMAT \u003d"},{"lineNumber":111,"author":{"gitId":"kwokyto"},"content":"            Pattern.compile(\"(?\u003cname\u003e[^/]+)\""},{"lineNumber":112,"author":{"gitId":"kwokyto"},"content":"                    + \" /c (?\u003ccategory\u003e[^/]+)\""},{"lineNumber":113,"author":{"gitId":"kwokyto"},"content":"                    + \" /exp (?\u003cexpiryDate\u003e[^/]+)\""},{"lineNumber":114,"author":{"gitId":"kwokyto"},"content":"                    + \" /loc (?\u003cstorageLocation\u003e[^/]+)\");"},{"lineNumber":115,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":116,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"kwokyto"},"content":"     * Parses description into name, foodCategory, expiryDate and storageLocation."},{"lineNumber":118,"author":{"gitId":"kwokyto"},"content":"     * Matcher objects will try to parse a string according to the Pattern we define"},{"lineNumber":119,"author":{"gitId":"kwokyto"},"content":"     * like above FOOD_DATA_ARGS_FORMAT. For other future parsers can copy the usage here."},{"lineNumber":120,"author":{"gitId":"kwokyto"},"content":"     *"},{"lineNumber":121,"author":{"gitId":"kwokyto"},"content":"     * @param foodDescription the string in the required format of food description"},{"lineNumber":122,"author":{"gitId":"kwokyto"},"content":"     * @return a new AddCommand for Food"},{"lineNumber":123,"author":{"gitId":"kwokyto"},"content":"     * @throws EmptyDescriptionException if the description is empty"},{"lineNumber":124,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidInputException if the description cannot parse"},{"lineNumber":125,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidDateException if the date input cannot be parsed"},{"lineNumber":126,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"kwokyto"},"content":"    public static Command parseFoodDescription(String foodDescription)"},{"lineNumber":128,"author":{"gitId":"kwokyto"},"content":"            throws EmptyDescriptionException, InvalidInputException, InvalidDateException {"},{"lineNumber":129,"author":{"gitId":"kwokyto"},"content":"        if (foodDescription.isEmpty()) {"},{"lineNumber":130,"author":{"gitId":"kwokyto"},"content":"            throw new EmptyDescriptionException();"},{"lineNumber":131,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"kwokyto"},"content":"        final Matcher matcher \u003d FOOD_DATA_ARGS_FORMAT.matcher(foodDescription.trim());"},{"lineNumber":133,"author":{"gitId":"kwokyto"},"content":"        // Validate foodDescription string format"},{"lineNumber":134,"author":{"gitId":"kwokyto"},"content":"        if (!matcher.matches()) {"},{"lineNumber":135,"author":{"gitId":"kwokyto"},"content":"            throw new InvalidInputException();"},{"lineNumber":136,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"kwokyto"},"content":"        return new AddCommand(matcher.group(\"name\"), convertStringToFoodCategory(matcher.group(\"category\")),"},{"lineNumber":138,"author":{"gitId":"kwokyto"},"content":"                matcher.group(\"expiryDate\"), convertStringToLocation(matcher.group(\"storageLocation\")));"},{"lineNumber":139,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":141,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":142,"author":{"gitId":"kwokyto"},"content":"     * Returns an AddCommand object based on description."},{"lineNumber":143,"author":{"gitId":"kwokyto"},"content":"     * "},{"lineNumber":144,"author":{"gitId":"kwokyto"},"content":"     * @param description description for command"},{"lineNumber":145,"author":{"gitId":"kwokyto"},"content":"     * @return AddCommand object"},{"lineNumber":146,"author":{"gitId":"kwokyto"},"content":"     * @throws EmptyDescriptionException if the description is empty"},{"lineNumber":147,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidInputException if the description cannot parse"},{"lineNumber":148,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidDateException if the date input cannot be parsed"},{"lineNumber":149,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":150,"author":{"gitId":"kwokyto"},"content":"    public static Command getAddCommand(String description) "},{"lineNumber":151,"author":{"gitId":"kwokyto"},"content":"            throws EmptyDescriptionException, InvalidInputException, InvalidDateException {"},{"lineNumber":152,"author":{"gitId":"kwokyto"},"content":"        Command addCommand \u003d parseFoodDescription(description);"},{"lineNumber":153,"author":{"gitId":"kwokyto"},"content":"        return addCommand;"},{"lineNumber":154,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":156,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":157,"author":{"gitId":"kwokyto"},"content":"     * Returns a ListCommand object based on description."},{"lineNumber":158,"author":{"gitId":"kwokyto"},"content":"     * "},{"lineNumber":159,"author":{"gitId":"kwokyto"},"content":"     * @param description description for command"},{"lineNumber":160,"author":{"gitId":"kwokyto"},"content":"     * @return ListCommand object"},{"lineNumber":161,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":162,"author":{"gitId":"kwokyto"},"content":"    public static Command getListCommand(String description) {"},{"lineNumber":163,"author":{"gitId":"kwokyto"},"content":"        Command listCommand \u003d new ListCommand(description);"},{"lineNumber":164,"author":{"gitId":"kwokyto"},"content":"        return listCommand;"},{"lineNumber":165,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":167,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":168,"author":{"gitId":"kwokyto"},"content":"     * Returns a RemoveCommand object based on description."},{"lineNumber":169,"author":{"gitId":"kwokyto"},"content":"     * "},{"lineNumber":170,"author":{"gitId":"kwokyto"},"content":"     * @param description description for command"},{"lineNumber":171,"author":{"gitId":"kwokyto"},"content":"     * @return RemoveCommand object"},{"lineNumber":172,"author":{"gitId":"kwokyto"},"content":"     * @throws EmptyDescriptionException if the description is empty"},{"lineNumber":173,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidIndexException if the index given in description is out of bounds"},{"lineNumber":174,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":175,"author":{"gitId":"kwokyto"},"content":"    public static Command getRemoveCommand(String description)"},{"lineNumber":176,"author":{"gitId":"kwokyto"},"content":"            throws EmptyDescriptionException, InvalidIndexException {"},{"lineNumber":177,"author":{"gitId":"kwokyto"},"content":"        int index \u003d parseIntegerDescription(description);"},{"lineNumber":178,"author":{"gitId":"kwokyto"},"content":"        Command removeCommand \u003d new RemoveCommand(index);"},{"lineNumber":179,"author":{"gitId":"kwokyto"},"content":"        return removeCommand;"},{"lineNumber":180,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":182,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":183,"author":{"gitId":"kwokyto"},"content":"     * Returns a SearchCommand object based on description."},{"lineNumber":184,"author":{"gitId":"kwokyto"},"content":"     * "},{"lineNumber":185,"author":{"gitId":"kwokyto"},"content":"     * @param description description for command"},{"lineNumber":186,"author":{"gitId":"kwokyto"},"content":"     * @return SearchCommand object"},{"lineNumber":187,"author":{"gitId":"kwokyto"},"content":"     * @throws EmptyDescriptionException if the description is empty"},{"lineNumber":188,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":189,"author":{"gitId":"kwokyto"},"content":"    public static Command getSearchCommand(String description) throws EmptyDescriptionException {"},{"lineNumber":190,"author":{"gitId":"kwokyto"},"content":"        Command searchCommand \u003d new SearchCommand(description);"},{"lineNumber":191,"author":{"gitId":"kwokyto"},"content":"        return searchCommand;"},{"lineNumber":192,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":193,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":194,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":195,"author":{"gitId":"kwokyto"},"content":"     * Returns a ByeCommand object."},{"lineNumber":196,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":197,"author":{"gitId":"kwokyto"},"content":"    public static Command getByeCommand() {"},{"lineNumber":198,"author":{"gitId":"kwokyto"},"content":"        Command byeCommand \u003d new ByeCommand();"},{"lineNumber":199,"author":{"gitId":"kwokyto"},"content":"        return byeCommand;"},{"lineNumber":200,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":201,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":202,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":203,"author":{"gitId":"kwokyto"},"content":"     * Parses the description into an integer."},{"lineNumber":204,"author":{"gitId":"kwokyto"},"content":"     * "},{"lineNumber":205,"author":{"gitId":"kwokyto"},"content":"     * @param description description for command"},{"lineNumber":206,"author":{"gitId":"kwokyto"},"content":"     * @return integer index"},{"lineNumber":207,"author":{"gitId":"kwokyto"},"content":"     * @throws EmptyDescriptionException if the description is empty"},{"lineNumber":208,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidIndexException if the description is not a number"},{"lineNumber":209,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":210,"author":{"gitId":"kwokyto"},"content":"    public static int parseIntegerDescription(String description)"},{"lineNumber":211,"author":{"gitId":"kwokyto"},"content":"            throws EmptyDescriptionException, InvalidIndexException {"},{"lineNumber":212,"author":{"gitId":"kwokyto"},"content":"        if (description.isEmpty()) {"},{"lineNumber":213,"author":{"gitId":"kwokyto"},"content":"            throw new EmptyDescriptionException();"},{"lineNumber":214,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":215,"author":{"gitId":"kwokyto"},"content":"    "},{"lineNumber":216,"author":{"gitId":"kwokyto"},"content":"        try {"},{"lineNumber":217,"author":{"gitId":"kwokyto"},"content":"            int index \u003d Integer.parseInt(description);"},{"lineNumber":218,"author":{"gitId":"kwokyto"},"content":"            return index;"},{"lineNumber":219,"author":{"gitId":"kwokyto"},"content":"        } catch (Exception e) {"},{"lineNumber":220,"author":{"gitId":"kwokyto"},"content":"            throw new InvalidIndexException(e);"},{"lineNumber":221,"author":{"gitId":"kwokyto"},"content":"        }"},{"lineNumber":222,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"kwokyto"},"content":"    "},{"lineNumber":224,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":224}},{"path":"src/main/java/seedu/fridgefriend/utilities/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.utilities;"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":" * Represents an object that deals with interactions with the user."},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":" */"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"    public static final Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"     * Retrieves the next line of input provided by the user."},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"     * "},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"     * @return string of next input"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"    public static String getNextLine() {"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"        String line \u003d scanner.nextLine();    "},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"        return line;"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"    "},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"     * Prints to user a message with an added border below it."},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"     * "},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"     * @param message message to be printed"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"    public static void printMessage(String message) {"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"        System.out.println(message);"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"        System.out.println(\"-----------------------------------------------------------------\");"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"    public static void printWelcomeMessage() {"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"        String logo \u003d"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"                \"  ______    _     _            ______    _                _ \\n\""},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"                + \" |  ____|  (_)   | |          |  ____|  (_)              | |\\n\""},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"                + \" | |__ _ __ _  __| | __ _  ___| |__ _ __ _  ___ _ __   __| |\\n\""},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"                + \" |  __| \u0027__| |/ _` |/ _` |/ _ \\\\  __| \u0027__| |/ _ \\\\ \u0027_ \\\\ / _` |\\n\""},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"                + \" | |  | |  | | (_| | (_| |  __/ |  | |  | |  __/ | | | (_| |\\n\""},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"                + \" |_|  |_|  |_|\\\\__,_|\\\\__, |\\\\___|_|  |_|  |_|\\\\___|_| |_|\\\\__,_|\\n\""},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"                + \"                     __/ |\\n\""},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"                + \"                    |___/\\n\\n\";"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"        String welcomeMessage \u003d \"Hello! I\u0027m FridgeFriend!\\n\" + \"What can I do for you?\";"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"        printMessage(logo + welcomeMessage);"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"    public static void printByeMessage() {"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"        String byeMessage \u003d \"Bye! Hope to see you again soon!\";"},{"lineNumber":47,"author":{"gitId":"kwokyto"},"content":"        printMessage(byeMessage);"},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":50,"author":{"gitId":"kwokyto"},"content":"    public static void printExceptionMessage(Exception exception) {"},{"lineNumber":51,"author":{"gitId":"kwokyto"},"content":"        String exceptionMessage \u003d exception.getMessage();"},{"lineNumber":52,"author":{"gitId":"kwokyto"},"content":"        printMessage(exceptionMessage);"},{"lineNumber":53,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"kwokyto"},"content":"    "},{"lineNumber":55,"author":{"gitId":"kwokyto"},"content":"}"}],"authorContributionMap":{"kwokyto":55}},{"path":"src/test/java/seedu/fridgefriend/FoodTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Leeyp"},"content":"package seedu.fridgefriend;"},{"lineNumber":2,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":3,"author":{"gitId":"Leeyp"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidDateException;"},{"lineNumber":6,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.Food;"},{"lineNumber":7,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.FoodCategory;"},{"lineNumber":8,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;"},{"lineNumber":9,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":10,"author":{"gitId":"Leeyp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":12,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":13,"author":{"gitId":"Leeyp"},"content":"public class FoodTest {"},{"lineNumber":14,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":15,"author":{"gitId":"Leeyp"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"Leeyp"},"content":"    void testNewFood() {"},{"lineNumber":17,"author":{"gitId":"Leeyp"},"content":"        Food pork \u003d new Food(FoodCategory.MEAT, \"pork\");"},{"lineNumber":18,"author":{"gitId":"Leeyp"},"content":"        assertEquals(FoodCategory.MEAT, pork.getCategory());"},{"lineNumber":19,"author":{"gitId":"Leeyp"},"content":"        assertEquals(\"pork\", pork.getFoodName());"},{"lineNumber":20,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":22,"author":{"gitId":"Leeyp"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"    void testStorageExpiryDate() throws InvalidDateException {"},{"lineNumber":24,"author":{"gitId":"Leeyp"},"content":"        Food beef \u003d new Food(FoodCategory.MEAT, \"beef\");"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"        beef.setExpiryDate(\"15-03-2021\");"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"        assertEquals(\"15-03-2021\", beef.getExpiryDate().toString());"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":""},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"    void invalidDate_wrongDateFormate_exceptionThrown() {"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"        Food chicken \u003d new Food(FoodCategory.MEAT, \"chicken\");"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"        assertThrows(InvalidDateException.class, () -\u003e {"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"            chicken.setExpiryDate(\"15-3-2021\");"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"        });"},{"lineNumber":35,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":37,"author":{"gitId":"Leeyp"},"content":"    @Test"},{"lineNumber":38,"author":{"gitId":"Leeyp"},"content":"    void testStorageLocation() {"},{"lineNumber":39,"author":{"gitId":"Leeyp"},"content":"        Food grouper \u003d new Food(FoodCategory.SEAFOOD, \"grouper\");"},{"lineNumber":40,"author":{"gitId":"Leeyp"},"content":"        grouper.setStorageLocation(FoodStorageLocation.FREEZER);"},{"lineNumber":41,"author":{"gitId":"Leeyp"},"content":"        assertEquals(FoodStorageLocation.FREEZER, grouper.getStorageLocation());"},{"lineNumber":42,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":44,"author":{"gitId":"Leeyp"},"content":"    @Test"},{"lineNumber":45,"author":{"gitId":"Leeyp"},"content":"    void testChangeFoodDescriptionCategory() {"},{"lineNumber":46,"author":{"gitId":"Leeyp"},"content":"        Food chocolate \u003d new Food(FoodCategory.DAIRY, \"chocolate\");"},{"lineNumber":47,"author":{"gitId":"Leeyp"},"content":"        assertEquals(FoodCategory.DAIRY, chocolate.getCategory());"},{"lineNumber":48,"author":{"gitId":"Leeyp"},"content":"        assertEquals(\"chocolate\", chocolate.getFoodName());"},{"lineNumber":49,"author":{"gitId":"Leeyp"},"content":"        chocolate.setFoodName(\"melted chocolate\");"},{"lineNumber":50,"author":{"gitId":"Leeyp"},"content":"        chocolate.setCategory(FoodCategory.OTHER);"},{"lineNumber":51,"author":{"gitId":"Leeyp"},"content":"        assertEquals(FoodCategory.OTHER, chocolate.getCategory());"},{"lineNumber":52,"author":{"gitId":"Leeyp"},"content":"        assertEquals(\"melted chocolate\", chocolate.getFoodName());"},{"lineNumber":53,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"Leeyp"},"content":""},{"lineNumber":55,"author":{"gitId":"Leeyp"},"content":"    @Test"},{"lineNumber":56,"author":{"gitId":"kwokyto"},"content":"    void testNewFoodAllParameters() throws InvalidDateException {"},{"lineNumber":57,"author":{"gitId":"Vinci-Hu"},"content":"        Food eggs \u003d new Food(FoodCategory.EGG, \"eggs\","},{"lineNumber":58,"author":{"gitId":"kwokyto"},"content":"                \"20-03-2021\", FoodStorageLocation.UPPER_SHELF);"},{"lineNumber":59,"author":{"gitId":"Leeyp"},"content":"        assertEquals(FoodCategory.EGG, eggs.getCategory());"},{"lineNumber":60,"author":{"gitId":"Leeyp"},"content":"        assertEquals(\"eggs\", eggs.getFoodName());"},{"lineNumber":61,"author":{"gitId":"kwokyto"},"content":"        assertEquals(\"20-03-2021\", eggs.getExpiryDate().toString());"},{"lineNumber":62,"author":{"gitId":"Leeyp"},"content":"        assertEquals(FoodStorageLocation.UPPER_SHELF, eggs.getStorageLocation());"},{"lineNumber":63,"author":{"gitId":"Leeyp"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Leeyp"},"content":"}"}],"authorContributionMap":{"Leeyp":46,"kwokyto":17,"Vinci-Hu":1}},{"path":"src/test/java/seedu/fridgefriend/FridgeFriendTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"class FridgeFriendTest {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":10,"SimJJ96":2}},{"path":"text-ui-test/runtest.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@echo off"},{"lineNumber":2,"author":{"gitId":"-"},"content":"setlocal enableextensions"},{"lineNumber":3,"author":{"gitId":"-"},"content":"pushd %~dp0"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"cd .."},{"lineNumber":6,"author":{"gitId":"-"},"content":"call gradlew clean shadowJar"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"cd build\\libs"},{"lineNumber":9,"author":{"gitId":"-"},"content":"for /f \"tokens\u003d*\" %%a in ("},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u0027dir /b *.jar\u0027"},{"lineNumber":11,"author":{"gitId":"-"},"content":") do ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    set jarloc\u003d%%a"},{"lineNumber":13,"author":{"gitId":"-"},"content":")"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"cd ..\\..\\text-ui-test"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"FC ACTUAL.TXT EXPECTED.TXT "}],"authorContributionMap":{"kwokyto":1,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\""},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd .."},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":14,"author":{"gitId":"-"},"content":"dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT"},{"lineNumber":15,"author":{"gitId":"-"},"content":"diff EXPECTED-UNIX.TXT ACTUAL.TXT"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"Test passed!\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":20,"author":{"gitId":"-"},"content":"else"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    echo \"Test failed!\""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":23,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"kwokyto":1,"-":22}}]
