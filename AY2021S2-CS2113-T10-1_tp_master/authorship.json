[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"    mainClassName \u003d \"seedu.fridgefriend.FridgeFriend\"","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"SimJJ96"},"content":"    archiveBaseName \u003d \"fridgefriend\"","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"kwokyto"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kwokyto":2,"-":44,"SimJJ96":2}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"# ABOUT US","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"We are a team based in [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg/).","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"## Project Team","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"----------|:------:|:--------------:|:---------:","lastModifiedDate":"2021-03-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"![Hu Wen Qi](team/profile_pictures/hwq_pic.png) | Hu Wenqi | [Github](https://github.com/Vinci-Hu) | [Portfolio](team/wenqihu.md)","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"![Kim Joohwan](team/profile_pictures/jw_pic.png) | Kim Joohwan | [Github](https://github.com/joohwan58) | [Portfolio](team/joohwan.md)","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"![Lee Yang Peng](team/profile_pictures/lyp_pic.png)| Lee Yang Peng | [Github](https://github.com/Leeyp) | [Portfolio](team/leeyp.md)","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"![Ryan Kwok](team/profile_pictures/kwokyto_pic.jpg) | Ryan Kwok | [Github](https://github.com/kwokyto) | [Portfolio](team/kwokyto.md)","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"![Sim Jing Jie](team/profile_pictures/sjj_pic.png) | Sim Jing Jie | [Github](https://github.com/SimJJ96/) | [Portfolio](team/simjingjie.md)","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"kwokyto":9,"-":9}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"## Introduction","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"`FridgeFriend` is an app for managing food in the fridge, optimised for use via a Command Line Interface (CLI).","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"If you can type fast, `FridgeFriend` can track your cold or frozen groceries faster and easier than any other apps.","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"It is written in Java, and has more than 4.3kLoC.","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"## Contents","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"* [Introduction](#introduction)","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"* [Design](#design)","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"  * [Architecture](#architecture)","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"  * [Utilities Component](#utilities-component)","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"  * [Command Component](#command-component)","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"  * [Food Component](#food-component)","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"  * [Exception Component](#exception-component)","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"* [Implementation](#implementation)","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"  * [Main Logic](#main-logic)","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"  * [Add Command](#add-command)","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"  * [Remove Command](#remove-command)","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"  * [Search Command](#search-command)","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"Leeyp"},"content":"  * [Running Low Command](#running-low-command)","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"Leeyp"},"content":"  * [Set Limit Command](#set-limit-command)","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"Leeyp"},"content":"  * [Expiring Command](#expiring-command)","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"Leeyp"},"content":"  * [List Command](#list-command)","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"Leeyp"},"content":"  * [History Command](#history-command)","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"* [Product Scope](#product-scope)","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"  * [Target User Profile](#target-user-profile)","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"  * [Value Proposition](#value-proposition)","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"* [User Stories](#user-stories)","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"* [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"* [Glossary](#glossary)","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"Leeyp"},"content":"* [Instructions for Manual Testing](#appendix-instructions-for-manual-testing)","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"* [Attribution](#attribution)","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"Leeyp"},"content":"## Design","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"This section focuses on the general architecture of the application as well as the relationships between the classes involved. The overall architecture would be covered first, before the four individual components.","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"Leeyp"},"content":"### Architecture","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"Leeyp"},"content":"![Architecture Diagram](diagrams/diagram_images/ArchitectureDiagram.png)","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"Leeyp"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"Leeyp"},"content":"Given below is a quick overview of each component.","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"Leeyp"},"content":"The Main driver class for the FridgeFriend app is","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"Leeyp"},"content":"named **[`FridgeFriend`](https://github.com/AY2021S2-CS2113-T10-1/tp/blob/master/src/main/java/seedu/fridgefriend/FridgeFriend.java)**.","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"Leeyp"},"content":"It is responsible for,","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"Leeyp"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"Leeyp"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"Leeyp"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"Leeyp"},"content":"* [**`Utilities`**](#utilities-component): The main component containing the key driver classes in","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"Leeyp"},"content":"  FridgeFriend, such as `Parser`, `UI`, and `Storage`.","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"Leeyp"},"content":"* [**`Command`**](#command-component): Executes commands based on the input obtained","lastModifiedDate":"2021-03-26"},{"lineNumber":61,"author":{"gitId":"Leeyp"},"content":"  and processed from `Parser` in `Utilities`. The list of executable commands can be found in our","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"Leeyp"},"content":"  [User Guide](https://ay2021s2-cs2113-t10-1.github.io/tp/UserGuide.html).","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"Leeyp"},"content":"* [**`Food`**](#food-component) represents a collection of classes used by the FridgeFriend application.","lastModifiedDate":"2021-03-26"},{"lineNumber":65,"author":{"gitId":"Leeyp"},"content":"  Food objects are instantiated by the `Command` Component. Once a `Food` object is created,","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"Leeyp"},"content":"  it may be stored to disk using the `Storage` function in `Utilities`.","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"Leeyp"},"content":"* [**`Exception`**](#exception-component) represents a collection of classes that represent potential","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"Leeyp"},"content":"  exception events that may occur during the usage of `FridgeFriend`. The `Exception` component","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"Leeyp"},"content":"  facilitates the return of exceptions to the `UI` class in `Utilities`, which will display","lastModifiedDate":"2021-03-26"},{"lineNumber":71,"author":{"gitId":"Leeyp"},"content":"  the error message to the user.","lastModifiedDate":"2021-03-26"},{"lineNumber":72,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"kwokyto"},"content":"### Utilities Component","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"kwokyto"},"content":"The Utilities component contains the main classes that run the main functions of FridgeFriend.","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"kwokyto"},"content":"![Utilities Class Diagram](diagrams/diagram_images/UtilitiesClassDiagram.png)","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"kwokyto"},"content":"The ***Utilities Class Diagram*** given above shows how the classes in the Utilities component interact with each other and classes from other component.","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"kwokyto"},"content":"The Utilities Component consists for 4 classes.","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"kwokyto"},"content":"* **`LoggingHandler`**: Logs information during execution to the console.","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"kwokyto"},"content":"* **`Parser`**: Breaks down user input into relevant objects.","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"kwokyto"},"content":"* **`Storage`**: Reads data from, and writes data to, the local disk.","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"kwokyto"},"content":"* **`Ui`**: Handles the input and output of the application.","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":88,"author":{"gitId":"SimJJ96"},"content":"### Command Component","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"SimJJ96"},"content":"The Command component contains the sub classes of the features that will be executed.","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"SimJJ96"},"content":"The command Object is executed by the main method in FridgeFriend.","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"SimJJ96"},"content":"The execution of the command can affect the fridge.","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"SimJJ96"},"content":"After the execution, the results of the command object is pass to the UI.","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"SimJJ96"},"content":"The results of the command instruct the Ui to display the message return to the user.","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"SimJJ96"},"content":"![Command Class Diagram](diagrams/diagram_images/CommandClassDiagram.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":99,"author":{"gitId":"SimJJ96"},"content":"The ***Command Class Diagram*** given above shows how the Command interacts with Fridge class.","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":101,"author":{"gitId":"SimJJ96"},"content":"The Command Component consist of 11 sub class which each command represents a features.","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":103,"author":{"gitId":"SimJJ96"},"content":"* **`AddCommand`**: Add a new food object to the fridge or add the quantity of existing food item with same parameters when executed.","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"SimJJ96"},"content":"* **`RemoveCommand`**: Remove a portion of food quantity from a particular food in the fridge when executed.","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"SimJJ96"},"content":"* **`ListCommand`**: List details of food either by a category, storage location or all off it when executed.","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"SimJJ96"},"content":"* **`SearchCommand`**: Search for the food that contains a particular food name.","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"SimJJ96"},"content":"* **`ExpiringCommand`**: Provide the list of item that is expiring in a week when executed.","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"SimJJ96"},"content":"* **`ClearCommand`**: Clear the list of food objects in the fridge object.","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"SimJJ96"},"content":"* **`HelpCommand`**: List the instruction on how to use all the commands in FridgeFriend.","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"SimJJ96"},"content":"* **`RunningLowCommand`**: Provide the food category that are running low compare to the limit set in the Food Category.","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"SimJJ96"},"content":"* **`SetLimitCommand`**: Change the default quantity limit in that particular Food Category.","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"SimJJ96"},"content":"* **`HistoryCommand`**: Display the details of food items that has been added to the fridge.  ","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"SimJJ96"},"content":"* **`ByeCommand`**: Indicate to the main method to exit the program.","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":115,"author":{"gitId":"Vinci-Hu"},"content":"### Food Component","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"Vinci-Hu"},"content":"The Food component represents the basic `Food` object and related class in FridgeFriend.","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"Vinci-Hu"},"content":"* `Food` is an abstract class which has multiple child Food classes, distinguished by category.","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"Vinci-Hu"},"content":"This is to facilitate different manipulations on different food categories.","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"Vinci-Hu"},"content":"* `Fridge` maintains the list of `Food`s and have methods to add, remove or modify the foods.","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"Vinci-Hu"},"content":"* `Fridge` uses `UniqueFoodnameChecker` to perform add tasks under different user input scenarios.","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"Vinci-Hu"},"content":"* Whenever a `Food` object is created or called, exceptions may be thrown.","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"Vinci-Hu"},"content":"![Food Class Diagram](diagrams/diagram_images/FoodClassDiagram.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"Vinci-Hu"},"content":"The ***Food Class Diagram*** given above shows all the classes derived from Food or ","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"Vinci-Hu"},"content":"used in Food operations.","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":130,"author":{"gitId":"Leeyp"},"content":"### Exception Component","lastModifiedDate":"2021-03-26"},{"lineNumber":131,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":132,"author":{"gitId":"Leeyp"},"content":"The Exception component represents a collection of classes that represent potential","lastModifiedDate":"2021-03-26"},{"lineNumber":133,"author":{"gitId":"Leeyp"},"content":"exception events that may occur during the usage of `FridgeFriend`.","lastModifiedDate":"2021-03-26"},{"lineNumber":134,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":135,"author":{"gitId":"Leeyp"},"content":"The `Exception` component facilitates the return of exceptions to the `UI` class","lastModifiedDate":"2021-03-26"},{"lineNumber":136,"author":{"gitId":"Leeyp"},"content":"in `Utilities`, which will display the corresponding error message to the user.","lastModifiedDate":"2021-03-26"},{"lineNumber":137,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"Leeyp"},"content":"![Exception Class Diagram](diagrams/diagram_images/ExceptionClassDiagram.png)","lastModifiedDate":"2021-03-26"},{"lineNumber":139,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":140,"author":{"gitId":"Leeyp"},"content":"The ***Exception Class Diagram*** given above shows the custom `Exceptions`","lastModifiedDate":"2021-03-26"},{"lineNumber":141,"author":{"gitId":"Leeyp"},"content":"created for the FridgeFriend project, and stored inside the `Exceptions` component.","lastModifiedDate":"2021-03-26"},{"lineNumber":142,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":143,"author":{"gitId":"Leeyp"},"content":"All exceptions extend from the Java default `Exception` class. They only differ with regard","lastModifiedDate":"2021-03-26"},{"lineNumber":144,"author":{"gitId":"Leeyp"},"content":"to the throwable error message.","lastModifiedDate":"2021-03-26"},{"lineNumber":145,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":146,"author":{"gitId":"kwokyto"},"content":"The `Exceptions` component currently consists of nine (9) custom Exceptions, as of v2.0:","lastModifiedDate":"2021-03-30"},{"lineNumber":147,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":148,"author":{"gitId":"Leeyp"},"content":"Among these ten custom exceptions, the `Exceptions` component can generally be","lastModifiedDate":"2021-03-27"},{"lineNumber":149,"author":{"gitId":"Leeyp"},"content":"classified into three broad categories:","lastModifiedDate":"2021-03-27"},{"lineNumber":150,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":151,"author":{"gitId":"Leeyp"},"content":"_Exceptions related to invalid user input:_","lastModifiedDate":"2021-03-27"},{"lineNumber":152,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":153,"author":{"gitId":"kwokyto"},"content":"* **`EmptyDescriptionException`**: Is thrown when an empty input string is detected by `Parser`, where","lastModifiedDate":"2021-03-29"},{"lineNumber":154,"author":{"gitId":"Leeyp"},"content":"  an input is expected.","lastModifiedDate":"2021-03-26"},{"lineNumber":155,"author":{"gitId":"kwokyto"},"content":"  * Error Message: `\"Sorry my friend, the description cannot be empty.\"`","lastModifiedDate":"2021-03-29"},{"lineNumber":156,"author":{"gitId":"kwokyto"},"content":"* **`InvalidDateException`**: Is thrown when user input, where a date is expected, does not","lastModifiedDate":"2021-03-29"},{"lineNumber":157,"author":{"gitId":"Leeyp"},"content":"  match the `dd-mm-yy` format.","lastModifiedDate":"2021-03-27"},{"lineNumber":158,"author":{"gitId":"kwokyto"},"content":"  * Error Message: `\"Sorry my friend, the date must be in the form \u0027dd-mm-yy\u0027.\"`","lastModifiedDate":"2021-03-29"},{"lineNumber":159,"author":{"gitId":"kwokyto"},"content":"* **`InvalidInputException`**: Is thrown when an unrecognised command is input into FridgeFriend,","lastModifiedDate":"2021-03-29"},{"lineNumber":160,"author":{"gitId":"Leeyp"},"content":"  or when the List Command does not recognise the secondary input string.","lastModifiedDate":"2021-03-26"},{"lineNumber":161,"author":{"gitId":"kwokyto"},"content":"  * Error Message: `\"Sorry my friend, please give a valid input.\"`","lastModifiedDate":"2021-03-29"},{"lineNumber":162,"author":{"gitId":"kwokyto"},"content":"* **`InvalidQuantityException`**: Is thrown when user input is not an integer where an integer is expected for","lastModifiedDate":"2021-03-29"},{"lineNumber":163,"author":{"gitId":"Leeyp"},"content":"  `Quantity` related functions, or when excess quantity of food is removed from the Fridge, where the quantity","lastModifiedDate":"2021-03-26"},{"lineNumber":164,"author":{"gitId":"Leeyp"},"content":"  of food in the fridge remaining would be negative.","lastModifiedDate":"2021-03-26"},{"lineNumber":165,"author":{"gitId":"kwokyto"},"content":"  * Error Message: `\"Sorry my friend, the quantity QUANTITY_INPUT must be a number.\"`","lastModifiedDate":"2021-03-29"},{"lineNumber":166,"author":{"gitId":"kwokyto"},"content":"  * Error Message: `\"Not enough in fridge to remove!\"`","lastModifiedDate":"2021-03-29"},{"lineNumber":167,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":168,"author":{"gitId":"Leeyp"},"content":"_Exceptions related to Food:_","lastModifiedDate":"2021-03-27"},{"lineNumber":169,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":170,"author":{"gitId":"kwokyto"},"content":"* **`FoodNameNotFoundException`**: Is thrown when the input string contains the name of a Food that is","lastModifiedDate":"2021-03-29"},{"lineNumber":171,"author":{"gitId":"Leeyp"},"content":"  not found in the Fridge, where the name of a food existing in the Fridge is expected.","lastModifiedDate":"2021-03-27"},{"lineNumber":172,"author":{"gitId":"kwokyto"},"content":"  * Error Message: `\"Food specified not found.\"`","lastModifiedDate":"2021-03-29"},{"lineNumber":173,"author":{"gitId":"kwokyto"},"content":"* **`InvalidFoodCategoryException`**: Is thrown when user input is not a valid `FoodCategory`,","lastModifiedDate":"2021-03-30"},{"lineNumber":174,"author":{"gitId":"kwokyto"},"content":"  where a valid `FoodCategory` is expected. Users can check `help` or the","lastModifiedDate":"2021-03-30"},{"lineNumber":175,"author":{"gitId":"kwokyto"},"content":"  [User Guide](https://ay2021s2-cs2113-t10-1.github.io/tp/UserGuide.html).","lastModifiedDate":"2021-03-30"},{"lineNumber":176,"author":{"gitId":"kwokyto"},"content":"  * Error Message: `\"Sorry my friend, FOOD_CATEGORY is not a valid category.\"`","lastModifiedDate":"2021-03-30"},{"lineNumber":177,"author":{"gitId":"kwokyto"},"content":"* **`RepetitiveFoodIdentifierException`**: Is thrown when user attempts to add duplicate Food to the Fridge in a","lastModifiedDate":"2021-03-29"},{"lineNumber":178,"author":{"gitId":"Leeyp"},"content":"  different location or with a different expiry date. This is not allowed as of v2.0.","lastModifiedDate":"2021-03-26"},{"lineNumber":179,"author":{"gitId":"kwokyto"},"content":"  * Error Message: `\"Sorry my friend, you have added this food before but in a different location or have different expiry dates.","lastModifiedDate":"2021-03-29"},{"lineNumber":180,"author":{"gitId":"Leeyp"},"content":"      Please specify another foodname.\"`","lastModifiedDate":"2021-03-26"},{"lineNumber":181,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":182,"author":{"gitId":"Leeyp"},"content":"_Exceptions related to file storage:_","lastModifiedDate":"2021-03-27"},{"lineNumber":183,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":184,"author":{"gitId":"kwokyto"},"content":"* **`StorageLoadingException`**: Is thrown when an error occurred during loading of the saved data.","lastModifiedDate":"2021-03-29"},{"lineNumber":185,"author":{"gitId":"kwokyto"},"content":"  * Error Message: `\"There was an error loading the data for FridgeFriend!\"`","lastModifiedDate":"2021-03-29"},{"lineNumber":186,"author":{"gitId":"kwokyto"},"content":"* **`StorageSavingException`**: Is thrown when an error occurred during saving of the current data.","lastModifiedDate":"2021-03-29"},{"lineNumber":187,"author":{"gitId":"kwokyto"},"content":"  * Error Message: `\"There was an error saving the data for FridgeFriend!\"`","lastModifiedDate":"2021-03-29"},{"lineNumber":188,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":189,"author":{"gitId":"Leeyp"},"content":"## Implementation","lastModifiedDate":"2021-03-27"},{"lineNumber":190,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":191,"author":{"gitId":"kwokyto"},"content":"This section covers the application flow and more specific interactions between classes and their methods. A overview of the main application logic would be covered first, before addressing several specific application commands.","lastModifiedDate":"2021-03-29"},{"lineNumber":192,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":193,"author":{"gitId":"Vinci-Hu"},"content":"### Main Logic","lastModifiedDate":"2021-03-30"},{"lineNumber":194,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":195,"author":{"gitId":"kwokyto"},"content":"The main application logic underlines the main executable conditions that make up the bulk of the application. Below is the outline of the logic:","lastModifiedDate":"2021-03-29"},{"lineNumber":196,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":197,"author":{"gitId":"kwokyto"},"content":"1. `FridgeFriend` uses the `Ui` class to obtain the user input.","lastModifiedDate":"2021-03-29"},{"lineNumber":198,"author":{"gitId":"kwokyto"},"content":"2. `FridgeFriend` then uses the `Parser` class to parse the user input.","lastModifiedDate":"2021-03-29"},{"lineNumber":199,"author":{"gitId":"kwokyto"},"content":"3. This results in the construction of a `Command` object that is returned to `FridgeFriend`.","lastModifiedDate":"2021-03-29"},{"lineNumber":200,"author":{"gitId":"kwokyto"},"content":"4. Following that, `FridgeFriend` then self-invokes a method that executes the `Command` object.","lastModifiedDate":"2021-03-29"},{"lineNumber":201,"author":{"gitId":"kwokyto"},"content":"5. In this method, the `Command` object  executes its specified action.","lastModifiedDate":"2021-03-30"},{"lineNumber":202,"author":{"gitId":"kwokyto"},"content":"6. From steps 2 to 5, should there be an error thrown, the `Command` class would construct an `Exception` object.","lastModifiedDate":"2021-03-30"},{"lineNumber":203,"author":{"gitId":"kwokyto"},"content":"7. Lastly, the `Exception` would be thrown back to `FridgeFriend`, which will then use the `Ui` class to display an error message to the user.","lastModifiedDate":"2021-03-30"},{"lineNumber":204,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":205,"author":{"gitId":"kwokyto"},"content":"Given below is the sequence diagram for the interactions within the main application logic.","lastModifiedDate":"2021-03-29"},{"lineNumber":206,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":207,"author":{"gitId":"kwokyto"},"content":"![MainLogicSequenceDiagram](diagrams/diagram_images/MainLogicSequenceDiagram.png)","lastModifiedDate":"2021-03-29"},{"lineNumber":208,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":209,"author":{"gitId":"kwokyto"},"content":":information_source: Information:","lastModifiedDate":"2021-03-29"},{"lineNumber":210,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":211,"author":{"gitId":"kwokyto"},"content":"* The lifeline for `Parser`, `Command`, and `Exception` should end at the destroy marker. However, due to a limitation of PlantUML, the three lifelines reach the end of the diagram.","lastModifiedDate":"2021-03-29"},{"lineNumber":212,"author":{"gitId":"kwokyto"},"content":"* Due to the lack of a standard to represent try-catch blocks in UML, the `alt` frame in this diagram is used to indicate a try-catch block.","lastModifiedDate":"2021-03-29"},{"lineNumber":213,"author":{"gitId":"kwokyto"},"content":"  Additionally, while the diagram shows the `Exception` object being initialised by `FridgeFriend`, it is actually initialised in the `Parser` or `Command` class and thrown to `FridgeFriend`","lastModifiedDate":"2021-03-29"},{"lineNumber":214,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":215,"author":{"gitId":"Leeyp"},"content":"### Add Command","lastModifiedDate":"2021-03-30"},{"lineNumber":216,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":217,"author":{"gitId":"Leeyp"},"content":"AddCommand class is initialized whenever the parser recognize the `add` keyword.","lastModifiedDate":"2021-03-30"},{"lineNumber":218,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":219,"author":{"gitId":"Leeyp"},"content":"1. The constructor should create a new Food object according to the parsed user input.","lastModifiedDate":"2021-03-30"},{"lineNumber":220,"author":{"gitId":"Leeyp"},"content":"2. The UniqueFoodnameChecker will be called from Fridge class to decide whether to add a new `Food` or edit on existing `Food`.","lastModifiedDate":"2021-03-30"},{"lineNumber":221,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":222,"author":{"gitId":"Leeyp"},"content":"Given below is the sequence diagram for the AddCommand workflow.","lastModifiedDate":"2021-03-30"},{"lineNumber":223,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":224,"author":{"gitId":"Leeyp"},"content":"![AddCommandSequenceDiagram](diagrams/diagram_images/AddSequenceDiagram.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":225,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":226,"author":{"gitId":"Leeyp"},"content":"Notes:","lastModifiedDate":"2021-03-30"},{"lineNumber":227,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":228,"author":{"gitId":"Leeyp"},"content":"* The `UniqueFoodnameChecker` object will be destructed after use, but the `Food` object and `Fridge` object will still exist after the command finishes.","lastModifiedDate":"2021-03-30"},{"lineNumber":229,"author":{"gitId":"Leeyp"},"content":"* Some function calls such as showResults() in `Command` is not covered in this diagram. So the `Command` object will only be destructed after all function calls on that iteration.","lastModifiedDate":"2021-03-30"},{"lineNumber":230,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":231,"author":{"gitId":"SimJJ96"},"content":":information_source: Information:","lastModifiedDate":"2021-03-31"},{"lineNumber":232,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":233,"author":{"gitId":"SimJJ96"},"content":"* The lifeline for `UniqueFoodnameCheck` should end at the destroy marker. However, due to a limitation of PlantUML, the lifelines reach the end of the diagram.","lastModifiedDate":"2021-03-31"},{"lineNumber":234,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":235,"author":{"gitId":"SimJJ96"},"content":"### Remove Command","lastModifiedDate":"2021-03-29"},{"lineNumber":236,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":237,"author":{"gitId":"SimJJ96"},"content":"When the user specify to remove a portion of a food item in the fridge, the `remove` command","lastModifiedDate":"2021-03-30"},{"lineNumber":238,"author":{"gitId":"SimJJ96"},"content":"will execute the remove operation by:","lastModifiedDate":"2021-03-30"},{"lineNumber":239,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":240,"author":{"gitId":"SimJJ96"},"content":"1. Searching of the food item in the fridge by looping through each food item.  ","lastModifiedDate":"2021-03-30"},{"lineNumber":241,"author":{"gitId":"SimJJ96"},"content":"2. If the food item exist, check if removing the quantity will reduce the quantity to zero.","lastModifiedDate":"2021-03-30"},{"lineNumber":242,"author":{"gitId":"SimJJ96"},"content":"3. If it does not reduce to zero, then proceed to remove the required quantity.","lastModifiedDate":"2021-03-30"},{"lineNumber":243,"author":{"gitId":"SimJJ96"},"content":"4. If it does reduce to zero, then remove the food item completely.","lastModifiedDate":"2021-03-30"},{"lineNumber":244,"author":{"gitId":"SimJJ96"},"content":"5. Otherwise, throw an exception to FridgeFriend.","lastModifiedDate":"2021-03-30"},{"lineNumber":245,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":246,"author":{"gitId":"SimJJ96"},"content":"The sequence diagram below shows how the `remove` operation works:","lastModifiedDate":"2021-03-30"},{"lineNumber":247,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":248,"author":{"gitId":"SimJJ96"},"content":"![RemoveSequenceDiagram](diagrams/diagram_images/RemoveSequenceDiagram.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":249,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":250,"author":{"gitId":"SimJJ96"},"content":":information_source: Information:","lastModifiedDate":"2021-03-31"},{"lineNumber":251,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":252,"author":{"gitId":"SimJJ96"},"content":"The lifeline for `Food` should end at the destroy marker. However, due to a limitation of PlantUML, the lifeline reach the end of the diagram.","lastModifiedDate":"2021-03-31"},{"lineNumber":253,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":254,"author":{"gitId":"SimJJ96"},"content":"### Search Command","lastModifiedDate":"2021-03-30"},{"lineNumber":255,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":256,"author":{"gitId":"SimJJ96"},"content":"When the user specify to search a food item in the fridge, the `search` command will execute","lastModifiedDate":"2021-03-30"},{"lineNumber":257,"author":{"gitId":"SimJJ96"},"content":"search operation by:","lastModifiedDate":"2021-03-30"},{"lineNumber":258,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":259,"author":{"gitId":"SimJJ96"},"content":"1. Searching the list of foods in the fridge by that contain the food name entered by the user","lastModifiedDate":"2021-03-30"},{"lineNumber":260,"author":{"gitId":"SimJJ96"},"content":"  through a loop.","lastModifiedDate":"2021-03-30"},{"lineNumber":261,"author":{"gitId":"SimJJ96"},"content":"2. Afterwards, pass the success message or failure message to the UI.","lastModifiedDate":"2021-03-30"},{"lineNumber":262,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":263,"author":{"gitId":"SimJJ96"},"content":"The sequence diagram shows how the `search` operation works:","lastModifiedDate":"2021-03-30"},{"lineNumber":264,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":265,"author":{"gitId":"SimJJ96"},"content":"![SearchSequenceDiagram](diagrams/diagram_images/SearchSequenceDiagram.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":266,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":267,"author":{"gitId":"SimJJ96"},"content":"### Running Low Command","lastModifiedDate":"2021-03-30"},{"lineNumber":268,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":269,"author":{"gitId":"SimJJ96"},"content":"The `runningLow` command is implemented by:","lastModifiedDate":"2021-03-30"},{"lineNumber":270,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":271,"author":{"gitId":"SimJJ96"},"content":"1. Checking the total quantity of each FoodCategory in the fridge.","lastModifiedDate":"2021-03-30"},{"lineNumber":272,"author":{"gitId":"SimJJ96"},"content":"2. Follow by comparing with the default minimum number of quantity in each FoodCategory.","lastModifiedDate":"2021-03-30"},{"lineNumber":273,"author":{"gitId":"SimJJ96"},"content":"3. Then return all the FoodCategory that has quantity lower than the default minimum number of quantity as a warning message","lastModifiedDate":"2021-03-30"},{"lineNumber":274,"author":{"gitId":"SimJJ96"},"content":"4. Otherwise, return isStockUp message.","lastModifiedDate":"2021-03-30"},{"lineNumber":275,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":276,"author":{"gitId":"SimJJ96"},"content":"The sequence diagram shows how the `runninglow` operation works:","lastModifiedDate":"2021-03-30"},{"lineNumber":277,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":278,"author":{"gitId":"SimJJ96"},"content":"![RunningLowSequenceDiagram](diagrams/diagram_images/RunningLowSequenceDiagram.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":279,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":280,"author":{"gitId":"SimJJ96"},"content":"### Set Limit Command","lastModifiedDate":"2021-03-30"},{"lineNumber":281,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":282,"author":{"gitId":"SimJJ96"},"content":"The `setlimit` command is implemented by:","lastModifiedDate":"2021-03-30"},{"lineNumber":283,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":284,"author":{"gitId":"SimJJ96"},"content":"1. Calling a setter method in FoodCategory.","lastModifiedDate":"2021-03-30"},{"lineNumber":285,"author":{"gitId":"SimJJ96"},"content":"2. The setter method will change the FoodCategory predefined minimum number of quantity.","lastModifiedDate":"2021-03-30"},{"lineNumber":286,"author":{"gitId":"SimJJ96"},"content":"3. The FoodCategory and new minimum number of quantity is specified by the user.","lastModifiedDate":"2021-03-30"},{"lineNumber":287,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":288,"author":{"gitId":"SimJJ96"},"content":"The sequence diagram shows how the `setlimit` operation works:","lastModifiedDate":"2021-03-30"},{"lineNumber":289,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":290,"author":{"gitId":"SimJJ96"},"content":"![SetLimitSequenceDiagram](diagrams/diagram_images/SetLimitSequenceDiagram.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":291,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":292,"author":{"gitId":"SimJJ96"},"content":"### Expiring Command","lastModifiedDate":"2021-03-30"},{"lineNumber":293,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":294,"author":{"gitId":"SimJJ96"},"content":"The `expiring` command is implemented through looping of the food items in the fridge and","lastModifiedDate":"2021-03-30"},{"lineNumber":295,"author":{"gitId":"SimJJ96"},"content":"return the food item if the expiry date is within one week of calling the command.","lastModifiedDate":"2021-03-30"},{"lineNumber":296,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":297,"author":{"gitId":"SimJJ96"},"content":"The sequence diagram shows how the `expiring` operation works:","lastModifiedDate":"2021-03-30"},{"lineNumber":298,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":299,"author":{"gitId":"SimJJ96"},"content":"![ExpiringSequenceDiagram](diagrams/diagram_images/ExpiringSeqeunceDiagram.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":300,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":301,"author":{"gitId":"Leeyp"},"content":"### List Command","lastModifiedDate":"2021-03-30"},{"lineNumber":302,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":303,"author":{"gitId":"Leeyp"},"content":"There are three variations of the `list` command.","lastModifiedDate":"2021-03-30"},{"lineNumber":304,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":305,"author":{"gitId":"Leeyp"},"content":"1. List all food","lastModifiedDate":"2021-03-30"},{"lineNumber":306,"author":{"gitId":"Leeyp"},"content":"2. List by category","lastModifiedDate":"2021-03-30"},{"lineNumber":307,"author":{"gitId":"Leeyp"},"content":"3. List by storage location","lastModifiedDate":"2021-03-30"},{"lineNumber":308,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":309,"author":{"gitId":"Leeyp"},"content":"The first command, list all food, is implemented by iterating through the collection","lastModifiedDate":"2021-03-30"},{"lineNumber":310,"author":{"gitId":"Leeyp"},"content":"of food in the fridge. The names of all the food is concatenated using a Java StringBuilder,","lastModifiedDate":"2021-03-30"},{"lineNumber":311,"author":{"gitId":"Leeyp"},"content":"and the final result, containing the list of all food, is returned to the main program.","lastModifiedDate":"2021-03-30"},{"lineNumber":312,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":313,"author":{"gitId":"Leeyp"},"content":"The second and third commands, list by category or storage location, is also implemented by iterating through","lastModifiedDate":"2021-03-30"},{"lineNumber":314,"author":{"gitId":"Leeyp"},"content":"the collection of food in the fridge. However, there is an additional check to verify if the given","lastModifiedDate":"2021-03-30"},{"lineNumber":315,"author":{"gitId":"Leeyp"},"content":"food contains the correct category/storage location attribute as requested by the user.","lastModifiedDate":"2021-03-30"},{"lineNumber":316,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":317,"author":{"gitId":"Leeyp"},"content":"If the category/storage location is as requested, the name of the food will be concatenated to the","lastModifiedDate":"2021-03-30"},{"lineNumber":318,"author":{"gitId":"Leeyp"},"content":"result using a Java StringBuilder. Otherwise, the name of the food would not be part of the result.","lastModifiedDate":"2021-03-30"},{"lineNumber":319,"author":{"gitId":"Leeyp"},"content":"The final result, containing the list of all food belonging to the category/storage location,","lastModifiedDate":"2021-03-30"},{"lineNumber":320,"author":{"gitId":"Leeyp"},"content":"is returned to the main program.","lastModifiedDate":"2021-03-30"},{"lineNumber":321,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":322,"author":{"gitId":"Leeyp"},"content":"The sequence diagram shows how the `list` operation works:","lastModifiedDate":"2021-03-30"},{"lineNumber":323,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":324,"author":{"gitId":"Leeyp"},"content":"![ListCommandSequenceDiagram](diagrams/diagram_images/ListCommandSequenceDiagram.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":325,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":326,"author":{"gitId":"Leeyp"},"content":"### History Command","lastModifiedDate":"2021-03-30"},{"lineNumber":327,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":328,"author":{"gitId":"Leeyp"},"content":"The code related to persistent storage for the `history` command is implemented under the `Storage` class","lastModifiedDate":"2021-03-30"},{"lineNumber":329,"author":{"gitId":"Leeyp"},"content":"under the `Utilities` component.","lastModifiedDate":"2021-03-30"},{"lineNumber":330,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":331,"author":{"gitId":"Leeyp"},"content":"The implementation of the `history` command is as follows:","lastModifiedDate":"2021-03-30"},{"lineNumber":332,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":333,"author":{"gitId":"Leeyp"},"content":"1. After every `add` command, a copy of the added food will be appended to `historyData.txt`","lastModifiedDate":"2021-03-30"},{"lineNumber":334,"author":{"gitId":"Leeyp"},"content":"2. When the user invokes the `history` command, `historyData.txt` will be read, line by line.","lastModifiedDate":"2021-03-30"},{"lineNumber":335,"author":{"gitId":"Leeyp"},"content":"3. The line-by-line contents of `historyData.txt` are concatenated into a single output string  ","lastModifiedDate":"2021-03-30"},{"lineNumber":336,"author":{"gitId":"Leeyp"},"content":"4. The output string that contains the history data will be output to the user.","lastModifiedDate":"2021-03-30"},{"lineNumber":337,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":338,"author":{"gitId":"Leeyp"},"content":"Additionally, the command `history clear` deletes the contents of `historyData.txt` on the disk.","lastModifiedDate":"2021-03-30"},{"lineNumber":339,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":340,"author":{"gitId":"kwokyto"},"content":"## Product Scope","lastModifiedDate":"2021-03-29"},{"lineNumber":341,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":342,"author":{"gitId":"kwokyto"},"content":"### Target User Profile","lastModifiedDate":"2021-03-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":344,"author":{"gitId":"SimJJ96"},"content":"* is a new homeowner who cooks","lastModifiedDate":"2021-03-31"},{"lineNumber":345,"author":{"gitId":"SimJJ96"},"content":"* has a needs to manage a significant number of foods in the fridge","lastModifiedDate":"2021-03-30"},{"lineNumber":346,"author":{"gitId":"SimJJ96"},"content":"* has a tendency to forget expiry date and location of the food stored","lastModifiedDate":"2021-03-29"},{"lineNumber":347,"author":{"gitId":"SimJJ96"},"content":"* can type fast","lastModifiedDate":"2021-03-29"},{"lineNumber":348,"author":{"gitId":"SimJJ96"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2021-03-29"},{"lineNumber":349,"author":{"gitId":"SimJJ96"},"content":"* is reasonably comfortable using CLI app","lastModifiedDate":"2021-03-30"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":351,"author":{"gitId":"kwokyto"},"content":"### Value Proposition","lastModifiedDate":"2021-03-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":353,"author":{"gitId":"SimJJ96"},"content":"This app allows user to monitor their food in a fridge faster than a typical mouse/GUI driven app.","lastModifiedDate":"2021-03-31"},{"lineNumber":354,"author":{"gitId":"SimJJ96"},"content":"It includes features such as ability to check for the foods that are expiring in a week, and the food item","lastModifiedDate":"2021-03-31"},{"lineNumber":355,"author":{"gitId":"SimJJ96"},"content":"that requires to top up. It will help new homeowners to keep track of their food into different food ","lastModifiedDate":"2021-03-31"},{"lineNumber":356,"author":{"gitId":"SimJJ96"},"content":"categories and storage location which provide ease of searching it. In addition, new homeowners will be abe to ","lastModifiedDate":"2021-03-31"},{"lineNumber":357,"author":{"gitId":"SimJJ96"},"content":"keep track of past food items that has been added to the fridge. ","lastModifiedDate":"2021-03-31"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":359,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":361,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":362,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":363,"author":{"gitId":"-"},"content":"|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|","lastModifiedDate":"2020-05-24"},{"lineNumber":364,"author":{"gitId":"kwokyto"},"content":"|v1.0|user|add items into the fridge|keep track of what is in the fridge|","lastModifiedDate":"2021-03-29"},{"lineNumber":365,"author":{"gitId":"kwokyto"},"content":"|v1.0|user|remove items from the fridge|keep track of what is in the fridge|","lastModifiedDate":"2021-03-29"},{"lineNumber":366,"author":{"gitId":"kwokyto"},"content":"|v1.0|user|list all food items in the fridge|know inside the fridge without having to open the fridge itself|","lastModifiedDate":"2021-03-29"},{"lineNumber":367,"author":{"gitId":"kwokyto"},"content":"|v1.0|forgetful user|search for a specific food item|recall if I have that food item inside the fridge|","lastModifiedDate":"2021-03-29"},{"lineNumber":368,"author":{"gitId":"kwokyto"},"content":"|v1.0|organised user|tag the food’s category when I add into fridge(e.g. veggies, meat, dairy)|track what kinds of food I have in the fridge|","lastModifiedDate":"2021-03-29"},{"lineNumber":369,"author":{"gitId":"kwokyto"},"content":"|v1.0|organised user|list food items by category|check specific categories of food|","lastModifiedDate":"2021-03-29"},{"lineNumber":370,"author":{"gitId":"kwokyto"},"content":"|v1.0|organised user|add a storage location for a specific food item|know which part of the fridge is stored in|","lastModifiedDate":"2021-03-29"},{"lineNumber":371,"author":{"gitId":"kwokyto"},"content":"|v1.0|organised user|add the expiry date to each food item I put into the fridge|keep track of what is going to expire|","lastModifiedDate":"2021-03-29"},{"lineNumber":372,"author":{"gitId":"kwokyto"},"content":"|v1.0|lazy user|search for items that are expiring|see what items are about to expire without having to open the fridge|","lastModifiedDate":"2021-03-29"},{"lineNumber":373,"author":{"gitId":"kwokyto"},"content":"|v1.0|lazy user|automatically save information to a data file|safely exit the system without losing information|","lastModifiedDate":"2021-03-29"},{"lineNumber":374,"author":{"gitId":"kwokyto"},"content":"|v1.0|lazy user|automatically retrieve previously saved information from a data file|know the list of items I already have in my fridge|","lastModifiedDate":"2021-03-29"},{"lineNumber":375,"author":{"gitId":"kwokyto"},"content":"|v2.0|lazy user|list all food stored in a part of the fridge|track how full each location is without having to open the fridge|","lastModifiedDate":"2021-03-29"},{"lineNumber":376,"author":{"gitId":"kwokyto"},"content":"|v2.0|meticulous user|specify the weight or quantity of each food item I add into the fridge|know the exact amount of the food item I have left|","lastModifiedDate":"2021-03-29"},{"lineNumber":377,"author":{"gitId":"kwokyto"},"content":"|v2.0|meticulous user|remove a certain weight of each food package item that I am going to use|know how much weight of the item it has left|","lastModifiedDate":"2021-03-29"},{"lineNumber":378,"author":{"gitId":"kwokyto"},"content":"|v2.0|forgetful user|define the lower limits of each food category that the fridge should contain|receive reminders that the food is depleted|","lastModifiedDate":"2021-03-29"},{"lineNumber":379,"author":{"gitId":"kwokyto"},"content":"|v2.0|forgetful user|receive warnings when certain food items are running low after I remove a food item|not personally check for food quantity|","lastModifiedDate":"2021-03-29"},{"lineNumber":380,"author":{"gitId":"kwokyto"},"content":"|v2.0|lazy user|request for a list of food items running low or expiring|easily create a shopping list|","lastModifiedDate":"2021-03-29"},{"lineNumber":381,"author":{"gitId":"kwokyto"},"content":"|v2.0|health conscious user|view the history of food items that I have bought in the past|better track my food habits|","lastModifiedDate":"2021-03-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":383,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":385,"author":{"gitId":"Vinci-Hu"},"content":"### Performance and scalability","lastModifiedDate":"2021-03-29"},{"lineNumber":386,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":387,"author":{"gitId":"kwokyto"},"content":"* Constraint: Single-User","lastModifiedDate":"2021-03-30"},{"lineNumber":388,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":389,"author":{"gitId":"Vinci-Hu"},"content":"The product should be for a single user i.e. (not a multi-user product).","lastModifiedDate":"2021-03-29"},{"lineNumber":390,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":391,"author":{"gitId":"Vinci-Hu"},"content":"**Reason**: multi-user systems are hard to test, which is unfair for peer testers who will be graded based on the number of bugs they find.","lastModifiedDate":"2021-03-29"},{"lineNumber":392,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":393,"author":{"gitId":"kwokyto"},"content":"* Constraint: Typing-Preferred","lastModifiedDate":"2021-03-30"},{"lineNumber":394,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":395,"author":{"gitId":"Vinci-Hu"},"content":"The product should be targeting users who can type fast and prefer typing over other means of input.","lastModifiedDate":"2021-03-29"},{"lineNumber":396,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":397,"author":{"gitId":"Vinci-Hu"},"content":"**Reason**: to increase comparability of products, and to make feature evaluation easier for peer evaluators.","lastModifiedDate":"2021-03-29"},{"lineNumber":398,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":399,"author":{"gitId":"Vinci-Hu"},"content":"### Portability and compatibility","lastModifiedDate":"2021-03-29"},{"lineNumber":400,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":401,"author":{"gitId":"kwokyto"},"content":"* Constraint: Platform-Independent","lastModifiedDate":"2021-03-30"},{"lineNumber":402,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":403,"author":{"gitId":"Vinci-Hu"},"content":"The software should work on the Windows, Linux, and OS-X platforms.","lastModifiedDate":"2021-03-29"},{"lineNumber":404,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":405,"author":{"gitId":"Vinci-Hu"},"content":"**Reason**: Peer testers should be able to use any of these platforms.","lastModifiedDate":"2021-03-29"},{"lineNumber":406,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":407,"author":{"gitId":"kwokyto"},"content":"* Constraint: Java-Version","lastModifiedDate":"2021-03-30"},{"lineNumber":408,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":409,"author":{"gitId":"Vinci-Hu"},"content":"The software should work on a computer that has version 11 of Java i.e., no other Java version installed.","lastModifiedDate":"2021-03-29"},{"lineNumber":410,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":411,"author":{"gitId":"Vinci-Hu"},"content":"### Reliability, availability, maintainability","lastModifiedDate":"2021-03-29"},{"lineNumber":412,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":413,"author":{"gitId":"Vinci-Hu"},"content":" As it is a locally-runned command line application, there will be no down time for users.","lastModifiedDate":"2021-03-29"},{"lineNumber":414,"author":{"gitId":"Vinci-Hu"},"content":" It should be available anytime and anywhere.","lastModifiedDate":"2021-03-29"},{"lineNumber":415,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":416,"author":{"gitId":"kwokyto"},"content":"* Constraint: No-Remote-Server","lastModifiedDate":"2021-03-30"},{"lineNumber":417,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":418,"author":{"gitId":"Vinci-Hu"},"content":"The software should not depend on any remote servers.","lastModifiedDate":"2021-03-29"},{"lineNumber":419,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":420,"author":{"gitId":"Vinci-Hu"},"content":"### Security","lastModifiedDate":"2021-03-29"},{"lineNumber":421,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":422,"author":{"gitId":"kwokyto"},"content":"* Constraint: Human-Editable-File","lastModifiedDate":"2021-03-30"},{"lineNumber":423,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":424,"author":{"gitId":"Vinci-Hu"},"content":"The data should be stored locally and should be in a human editable text file.","lastModifiedDate":"2021-03-29"},{"lineNumber":425,"author":{"gitId":"Vinci-Hu"},"content":"Thus the data is not protected by nature.","lastModifiedDate":"2021-03-29"},{"lineNumber":426,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":427,"author":{"gitId":"Vinci-Hu"},"content":"**Reason**: To allow advanced users to manipulate the data by editing the data file.","lastModifiedDate":"2021-03-29"},{"lineNumber":428,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":429,"author":{"gitId":"Vinci-Hu"},"content":"### Usability","lastModifiedDate":"2021-03-29"},{"lineNumber":430,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":431,"author":{"gitId":"Vinci-Hu"},"content":"It is very easy for a user to use the system. There is a detailed user guide provided as well as a help command.","lastModifiedDate":"2021-03-29"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":433,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":435,"author":{"gitId":"SimJJ96"},"content":"* **Human-Editable-File**: files with .txt","lastModifiedDate":"2021-03-30"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":437,"author":{"gitId":"Leeyp"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2021-03-29"},{"lineNumber":438,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":439,"author":{"gitId":"Leeyp"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2021-03-29"},{"lineNumber":440,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":441,"author":{"gitId":"Leeyp"},"content":":information_source: **Note:** These instructions only provide a starting point for testers to work on, testers are expected to do more *exploratory* testing.","lastModifiedDate":"2021-03-31"},{"lineNumber":442,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":443,"author":{"gitId":"Leeyp"},"content":"### Launch and shutdown","lastModifiedDate":"2021-03-29"},{"lineNumber":444,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":445,"author":{"gitId":"Leeyp"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2021-03-29"},{"lineNumber":446,"author":{"gitId":"Leeyp"},"content":"2. Download the latest version of `FridgeFriend` from [here](https://github.com/AY2021S2-CS2113-T10-1/tp/releases/latest).","lastModifiedDate":"2021-03-30"},{"lineNumber":447,"author":{"gitId":"Leeyp"},"content":"3. Copy the file to the folder you want to use as the home folder for your `FridgeFriend`.","lastModifiedDate":"2021-03-29"},{"lineNumber":448,"author":{"gitId":"Leeyp"},"content":"4. Open your Command Line Terminal in the folder where `FridgeFriend.jar` is located, and run","lastModifiedDate":"2021-03-29"},{"lineNumber":449,"author":{"gitId":"Leeyp"},"content":"   `FridgeFriend` with `java -jar FridgeFriend_v2.0.jar` (or the latest version).","lastModifiedDate":"2021-03-31"},{"lineNumber":450,"author":{"gitId":"Leeyp"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing list and pressing Enter will show a","lastModifiedDate":"2021-03-29"},{"lineNumber":451,"author":{"gitId":"Leeyp"},"content":"   list of all current food.","lastModifiedDate":"2021-03-29"},{"lineNumber":452,"author":{"gitId":"Leeyp"},"content":"6. To terminate the app, use the `bye` command. It is also acceptable to interrupt the Command Line Terminal with","lastModifiedDate":"2021-03-29"},{"lineNumber":453,"author":{"gitId":"Leeyp"},"content":"   `Ctrl+C` or closing the terminal.","lastModifiedDate":"2021-03-29"},{"lineNumber":454,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":455,"author":{"gitId":"Leeyp"},"content":"### Adding food","lastModifiedDate":"2021-03-29"},{"lineNumber":456,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":457,"author":{"gitId":"Leeyp"},"content":"When adding food, the `FridgeFriend` application requires a very specific format, so that all attributes of","lastModifiedDate":"2021-03-29"},{"lineNumber":458,"author":{"gitId":"Leeyp"},"content":"a given food can be added to the Fridge. This might be very troublesome for manual testing.","lastModifiedDate":"2021-03-29"},{"lineNumber":459,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":460,"author":{"gitId":"Leeyp"},"content":"Here are some inputs you can try:","lastModifiedDate":"2021-03-29"},{"lineNumber":461,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":462,"author":{"gitId":"Leeyp"},"content":"* `add chicken /cat meat /exp 30-06-2021 /loc lower_shelf /qty 100`","lastModifiedDate":"2021-03-29"},{"lineNumber":463,"author":{"gitId":"Leeyp"},"content":"  * Inputs a `chicken` of category `meat`, with expiry date of `30-06-2021`, location of `lower_shelf`, and","lastModifiedDate":"2021-03-29"},{"lineNumber":464,"author":{"gitId":"Leeyp"},"content":"    quantity of `100`.","lastModifiedDate":"2021-03-29"},{"lineNumber":465,"author":{"gitId":"Leeyp"},"content":"* `add milk /cat dairy /exp 31-12-2021 /loc fridge_door /qty 2`","lastModifiedDate":"2021-03-29"},{"lineNumber":466,"author":{"gitId":"Leeyp"},"content":"  * Inputs a `milk` of category `dairy`, with expiry date of `31-12-2021`, location of `fridge_door`, and","lastModifiedDate":"2021-03-29"},{"lineNumber":467,"author":{"gitId":"Leeyp"},"content":"    quantity of `2`.","lastModifiedDate":"2021-03-29"},{"lineNumber":468,"author":{"gitId":"Leeyp"},"content":"* `add Coke /cat beverage /exp 30-07-2021 /loc upper_shelf /qty 5`","lastModifiedDate":"2021-03-29"},{"lineNumber":469,"author":{"gitId":"Leeyp"},"content":"  * Inputs a `Coke` of category `beverage`, with expiry date of `30-07-2021`, location of `upper_shelf`, and","lastModifiedDate":"2021-03-29"},{"lineNumber":470,"author":{"gitId":"Leeyp"},"content":"    quantity of `5`.","lastModifiedDate":"2021-03-29"},{"lineNumber":471,"author":{"gitId":"Leeyp"},"content":"* `add squid /cat seafood /exp 15-08-2021 /loc freezer /qty 100`","lastModifiedDate":"2021-03-29"},{"lineNumber":472,"author":{"gitId":"Leeyp"},"content":"  * Inputs a `squid` of category `seafood`, with expiry date of `15-08-2021`, location of `freezer`, and","lastModifiedDate":"2021-03-29"},{"lineNumber":473,"author":{"gitId":"Leeyp"},"content":"    quantity of `100`.","lastModifiedDate":"2021-03-29"},{"lineNumber":474,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":475,"author":{"gitId":"Leeyp"},"content":"For subsequent examples below, this guide assumes that these four foods `chicken`, `milk`, `Coke`, and `squid`","lastModifiedDate":"2021-03-30"},{"lineNumber":476,"author":{"gitId":"Leeyp"},"content":"have been added to the Fridge.","lastModifiedDate":"2021-03-30"},{"lineNumber":477,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":478,"author":{"gitId":"Leeyp"},"content":"### Listing food","lastModifiedDate":"2021-03-30"},{"lineNumber":479,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":480,"author":{"gitId":"Leeyp"},"content":"The `list` command in `FridgeFriend` has three (3) variations:","lastModifiedDate":"2021-03-30"},{"lineNumber":481,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":482,"author":{"gitId":"Leeyp"},"content":"* List all food in the fridge.","lastModifiedDate":"2021-03-30"},{"lineNumber":483,"author":{"gitId":"Leeyp"},"content":"* List all food of a certain category in the fridge.","lastModifiedDate":"2021-03-30"},{"lineNumber":484,"author":{"gitId":"Leeyp"},"content":"* List all food of a certain storage location in the fridge.","lastModifiedDate":"2021-03-30"},{"lineNumber":485,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":486,"author":{"gitId":"Leeyp"},"content":"The latter two commands will return an output that is a subset of the first command (_List all food_).","lastModifiedDate":"2021-03-30"},{"lineNumber":487,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":488,"author":{"gitId":"Leeyp"},"content":"No items will be listed if no food in the fridge match the conditions specified in the command.","lastModifiedDate":"2021-03-30"},{"lineNumber":489,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":490,"author":{"gitId":"Leeyp"},"content":"* Test case: `list`","lastModifiedDate":"2021-04-01"},{"lineNumber":491,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":492,"author":{"gitId":"Leeyp"},"content":"  * Expected:","lastModifiedDate":"2021-03-30"},{"lineNumber":493,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":494,"author":{"gitId":"Leeyp"},"content":"  ```lang-none","lastModifiedDate":"2021-03-30"},{"lineNumber":495,"author":{"gitId":"Leeyp"},"content":"  Here are the items in your fridge:","lastModifiedDate":"2021-03-30"},{"lineNumber":496,"author":{"gitId":"Leeyp"},"content":"    1. Food name: chicken, category: MEAT, expiry: 30-06-2021, stored in: LOWER_SHELF, quantity: 100","lastModifiedDate":"2021-03-30"},{"lineNumber":497,"author":{"gitId":"Leeyp"},"content":"    2. Food name: milk, category: DAIRY, expiry: 31-12-2021, stored in: FRIDGE_DOOR, quantity: 2","lastModifiedDate":"2021-03-30"},{"lineNumber":498,"author":{"gitId":"Leeyp"},"content":"    3. Food name: Coke, category: BEVERAGE, expiry: 30-07-2021, stored in: UPPER_SHELF, quantity: 5","lastModifiedDate":"2021-03-30"},{"lineNumber":499,"author":{"gitId":"Leeyp"},"content":"    4. Food name: squid, category: SEAFOOD, expiry: 15-08-2021, stored in: FREEZER, quantity: 100","lastModifiedDate":"2021-03-30"},{"lineNumber":500,"author":{"gitId":"Leeyp"},"content":"  ```","lastModifiedDate":"2021-03-30"},{"lineNumber":501,"author":{"gitId":"Leeyp"},"content":"  ","lastModifiedDate":"2021-03-30"},{"lineNumber":502,"author":{"gitId":"Leeyp"},"content":"* Test case: `list meat`","lastModifiedDate":"2021-04-01"},{"lineNumber":503,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":504,"author":{"gitId":"Leeyp"},"content":"  * Expected:","lastModifiedDate":"2021-03-30"},{"lineNumber":505,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":506,"author":{"gitId":"Leeyp"},"content":"  ```lang-none","lastModifiedDate":"2021-03-30"},{"lineNumber":507,"author":{"gitId":"Leeyp"},"content":"  These are the MEAT in your fridge:","lastModifiedDate":"2021-03-30"},{"lineNumber":508,"author":{"gitId":"Leeyp"},"content":"    1. Food name: chicken, category: MEAT, expiry: 30-06-2021, stored in: LOWER_SHELF, quantity: 100","lastModifiedDate":"2021-03-30"},{"lineNumber":509,"author":{"gitId":"Leeyp"},"content":"  ```","lastModifiedDate":"2021-03-30"},{"lineNumber":510,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":511,"author":{"gitId":"Leeyp"},"content":"* Test case: `list freezer`","lastModifiedDate":"2021-04-01"},{"lineNumber":512,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":513,"author":{"gitId":"Leeyp"},"content":"  * Expected:","lastModifiedDate":"2021-03-30"},{"lineNumber":514,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":515,"author":{"gitId":"Leeyp"},"content":"  ```lang-none","lastModifiedDate":"2021-03-30"},{"lineNumber":516,"author":{"gitId":"Leeyp"},"content":"  These are the food stored in FREEZER:","lastModifiedDate":"2021-03-30"},{"lineNumber":517,"author":{"gitId":"Leeyp"},"content":"   1. Food name: squid, category: SEAFOOD, expiry: 15-08-2021, stored in: FREEZER, quantity: 100","lastModifiedDate":"2021-03-30"},{"lineNumber":518,"author":{"gitId":"Leeyp"},"content":"  ```","lastModifiedDate":"2021-03-30"},{"lineNumber":519,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":520,"author":{"gitId":"Leeyp"},"content":"### Removing a food","lastModifiedDate":"2021-03-30"},{"lineNumber":521,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":522,"author":{"gitId":"Leeyp"},"content":"Removing a food while all foods are being shown.","lastModifiedDate":"2021-03-30"},{"lineNumber":523,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":524,"author":{"gitId":"Leeyp"},"content":"1. Prerequisites: List all foods using the `list` command. Multiple food in the list.","lastModifiedDate":"2021-03-30"},{"lineNumber":525,"author":{"gitId":"Leeyp"},"content":"2. Test case: `remove squid /qty 100`","lastModifiedDate":"2021-03-30"},{"lineNumber":526,"author":{"gitId":"Leeyp"},"content":"    * Expected: `squid` is deleted from the list. Details of the deleted food shown in the status message. Additional","lastModifiedDate":"2021-03-30"},{"lineNumber":527,"author":{"gitId":"Leeyp"},"content":"      warning that `seafood` is running low may appear.","lastModifiedDate":"2021-03-30"},{"lineNumber":528,"author":{"gitId":"Leeyp"},"content":"3. Test case: `remove chicken /qty 50`","lastModifiedDate":"2021-03-30"},{"lineNumber":529,"author":{"gitId":"Leeyp"},"content":"    * Expected: Quantity of `chicken` is reduced by 50. Details of the removed food shown in the status message.","lastModifiedDate":"2021-03-30"},{"lineNumber":530,"author":{"gitId":"Leeyp"},"content":"      Additional warning that `meat` is running low may appear.","lastModifiedDate":"2021-03-30"},{"lineNumber":531,"author":{"gitId":"Leeyp"},"content":"4. Test case: `remove coke /qty 1`","lastModifiedDate":"2021-03-30"},{"lineNumber":532,"author":{"gitId":"Leeyp"},"content":"    * Expected: `Food specified not found.` Note that the search for food name in this command is case sensitive;","lastModifiedDate":"2021-03-30"},{"lineNumber":533,"author":{"gitId":"Leeyp"},"content":"      note that when `Coke` was added, it was with a capital \u0027C\u0027. No food is removed.","lastModifiedDate":"2021-03-30"},{"lineNumber":534,"author":{"gitId":"Leeyp"},"content":"5. Test case: `remove Coke /qty 69`","lastModifiedDate":"2021-03-30"},{"lineNumber":535,"author":{"gitId":"Leeyp"},"content":"    * Expected: `Not enough in fridge to remove!` User attempted to remove a greater quantity than what was","lastModifiedDate":"2021-03-30"},{"lineNumber":536,"author":{"gitId":"Leeyp"},"content":"      available in the fridge. Error message was thrown. No food is removed.","lastModifiedDate":"2021-03-30"},{"lineNumber":537,"author":{"gitId":"Leeyp"},"content":"6. Test case: `remove chicken`","lastModifiedDate":"2021-03-30"},{"lineNumber":538,"author":{"gitId":"Leeyp"},"content":"    * Expected: `Sorry my friend, please give a valid input.` It is required to specify the quantity to be removed with","lastModifiedDate":"2021-03-30"},{"lineNumber":539,"author":{"gitId":"Leeyp"},"content":"      `/qty`.","lastModifiedDate":"2021-03-30"},{"lineNumber":540,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":541,"author":{"gitId":"Leeyp"},"content":"### Searching for a food","lastModifiedDate":"2021-03-30"},{"lineNumber":542,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":543,"author":{"gitId":"Leeyp"},"content":"Checks if a food is in the fridge, and if it is found, outputs all the food in a list that match the search query.","lastModifiedDate":"2021-03-31"},{"lineNumber":544,"author":{"gitId":"Leeyp"},"content":"If it is not found, outputs `You do not have FOOD_INPUT in your fridge.`","lastModifiedDate":"2021-03-30"},{"lineNumber":545,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":546,"author":{"gitId":"Leeyp"},"content":"* Test case: `search chicken`","lastModifiedDate":"2021-03-31"},{"lineNumber":547,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":548,"author":{"gitId":"Leeyp"},"content":"  * Expected: ","lastModifiedDate":"2021-03-31"},{"lineNumber":549,"author":{"gitId":"Leeyp"},"content":" ","lastModifiedDate":"2021-03-31"},{"lineNumber":550,"author":{"gitId":"Leeyp"},"content":"  ```lang-none","lastModifiedDate":"2021-03-31"},{"lineNumber":551,"author":{"gitId":"Leeyp"},"content":"  These are the chicken in your fridge:","lastModifiedDate":"2021-03-31"},{"lineNumber":552,"author":{"gitId":"Leeyp"},"content":"        1. Food name: chicken, category: MEAT, expiry: 30-06-2021, stored in: LOWER_SHELF, quantity: 100","lastModifiedDate":"2021-03-31"},{"lineNumber":553,"author":{"gitId":"Leeyp"},"content":"  ```","lastModifiedDate":"2021-03-31"},{"lineNumber":554,"author":{"gitId":"Leeyp"},"content":"  ","lastModifiedDate":"2021-03-31"},{"lineNumber":555,"author":{"gitId":"Leeyp"},"content":"* Test case: `search pear`","lastModifiedDate":"2021-03-31"},{"lineNumber":556,"author":{"gitId":"Leeyp"},"content":"    * Expected: `You do not have pear in your fridge.`","lastModifiedDate":"2021-03-30"},{"lineNumber":557,"author":{"gitId":"Leeyp"},"content":"    ","lastModifiedDate":"2021-03-31"},{"lineNumber":558,"author":{"gitId":"Leeyp"},"content":"* Test case: `search chick`","lastModifiedDate":"2021-03-31"},{"lineNumber":559,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":560,"author":{"gitId":"Leeyp"},"content":"  * Expected:","lastModifiedDate":"2021-03-31"},{"lineNumber":561,"author":{"gitId":"Leeyp"},"content":"     ","lastModifiedDate":"2021-03-31"},{"lineNumber":562,"author":{"gitId":"Leeyp"},"content":"  ```lang-none","lastModifiedDate":"2021-03-31"},{"lineNumber":563,"author":{"gitId":"Leeyp"},"content":"  These are the chick in your fridge:","lastModifiedDate":"2021-03-31"},{"lineNumber":564,"author":{"gitId":"Leeyp"},"content":"        1. Food name: chicken, category: MEAT, expiry: 30-06-2021, stored in: LOWER_SHELF, quantity: 100","lastModifiedDate":"2021-03-31"},{"lineNumber":565,"author":{"gitId":"Leeyp"},"content":"  ```","lastModifiedDate":"2021-03-31"},{"lineNumber":566,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":567,"author":{"gitId":"Leeyp"},"content":"### Expiring food","lastModifiedDate":"2021-03-30"},{"lineNumber":568,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":569,"author":{"gitId":"Leeyp"},"content":"This feature might be slightly more challenging to test, since the user tester has to input a food","lastModifiedDate":"2021-03-30"},{"lineNumber":570,"author":{"gitId":"Leeyp"},"content":"that has an expiry date within 7 days of their **local system time**, as of the date of testing.","lastModifiedDate":"2021-03-30"},{"lineNumber":571,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":572,"author":{"gitId":"Leeyp"},"content":"1. Prerequisites: Add a food with an expiry date within 7 days of the user\u0027s system date.","lastModifiedDate":"2021-03-30"},{"lineNumber":573,"author":{"gitId":"Leeyp"},"content":"    * Modify the input in the above [add command](adding-food) in order to fulfil this requirement.","lastModifiedDate":"2021-03-30"},{"lineNumber":574,"author":{"gitId":"Leeyp"},"content":"    * Example: The current date on my system time is `29-03-2021`.","lastModifiedDate":"2021-03-30"},{"lineNumber":575,"author":{"gitId":"Leeyp"},"content":"      * Prior to testing, I perform the command `add duck /cat meat /exp 30-03-2021 /loc lower_shelf /qty 100`.","lastModifiedDate":"2021-03-30"},{"lineNumber":576,"author":{"gitId":"Leeyp"},"content":"      * Thus, this food should expire in 1 day, within the 7 days required to trigger the `expiring` command.","lastModifiedDate":"2021-03-30"},{"lineNumber":577,"author":{"gitId":"Leeyp"},"content":"2. Test case: `expiring`","lastModifiedDate":"2021-03-30"},{"lineNumber":578,"author":{"gitId":"Leeyp"},"content":"    * Expected:","lastModifiedDate":"2021-03-30"},{"lineNumber":579,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":580,"author":{"gitId":"Leeyp"},"content":"   ```lang-none","lastModifiedDate":"2021-03-30"},{"lineNumber":581,"author":{"gitId":"Leeyp"},"content":"   These are the food expiring in the next week:","lastModifiedDate":"2021-03-30"},{"lineNumber":582,"author":{"gitId":"Leeyp"},"content":"        1. Food name: duck, category: MEAT, expiry: 30-03-2021, stored in: LOWER_SHELF, quantity: 100","lastModifiedDate":"2021-03-30"},{"lineNumber":583,"author":{"gitId":"Leeyp"},"content":"   ```","lastModifiedDate":"2021-03-30"},{"lineNumber":584,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":585,"author":{"gitId":"Leeyp"},"content":"### Runninglow and Setlimit","lastModifiedDate":"2021-03-30"},{"lineNumber":586,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":587,"author":{"gitId":"Leeyp"},"content":"By default, the `limits` for all food is set at `500`. Use `setlimit` to modify this number for a certain food category.","lastModifiedDate":"2021-03-30"},{"lineNumber":588,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":589,"author":{"gitId":"Leeyp"},"content":"1. Preparation: Change the limits for `meat`, `dairy`, `beverage`, `seafood`, since they are the categories of food","lastModifiedDate":"2021-03-30"},{"lineNumber":590,"author":{"gitId":"Leeyp"},"content":"   we have added to the fridge so far.","lastModifiedDate":"2021-03-30"},{"lineNumber":591,"author":{"gitId":"Leeyp"},"content":"    * `setlimit meat /qty 200`","lastModifiedDate":"2021-03-30"},{"lineNumber":592,"author":{"gitId":"Leeyp"},"content":"    * `setlimit dairy /qty 5`","lastModifiedDate":"2021-03-30"},{"lineNumber":593,"author":{"gitId":"Leeyp"},"content":"    * `setlimit beverage /qty 3`","lastModifiedDate":"2021-03-30"},{"lineNumber":594,"author":{"gitId":"Leeyp"},"content":"    * `setlimit seafood /qty 50`","lastModifiedDate":"2021-03-30"},{"lineNumber":595,"author":{"gitId":"Leeyp"},"content":"2. Test case: `runninglow`","lastModifiedDate":"2021-03-30"},{"lineNumber":596,"author":{"gitId":"Leeyp"},"content":"    * Expected:","lastModifiedDate":"2021-03-30"},{"lineNumber":597,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":598,"author":{"gitId":"Leeyp"},"content":"   ```lang-none","lastModifiedDate":"2021-03-30"},{"lineNumber":599,"author":{"gitId":"Leeyp"},"content":"   You are running low on food in these categories:","lastModifiedDate":"2021-03-30"},{"lineNumber":600,"author":{"gitId":"Leeyp"},"content":"   1. VEGETABLE quantity: 0 out of 500","lastModifiedDate":"2021-03-30"},{"lineNumber":601,"author":{"gitId":"Leeyp"},"content":"   2. FRUIT quantity: 0 out of 500","lastModifiedDate":"2021-03-30"},{"lineNumber":602,"author":{"gitId":"Leeyp"},"content":"   3. MEAT quantity: 100 out of 200","lastModifiedDate":"2021-03-30"},{"lineNumber":603,"author":{"gitId":"Leeyp"},"content":"   4. EGG quantity: 0 out of 500","lastModifiedDate":"2021-03-30"},{"lineNumber":604,"author":{"gitId":"Leeyp"},"content":"   5. DAIRY quantity: 2 out of 5","lastModifiedDate":"2021-03-30"},{"lineNumber":605,"author":{"gitId":"Leeyp"},"content":"   6. COOKED_DISH quantity: 0 out of 500","lastModifiedDate":"2021-03-30"},{"lineNumber":606,"author":{"gitId":"Leeyp"},"content":"   7. READY_TO_EAT quantity: 0 out of 500","lastModifiedDate":"2021-03-30"},{"lineNumber":607,"author":{"gitId":"Leeyp"},"content":"   8. FROZEN quantity: 0 out of 500","lastModifiedDate":"2021-03-30"},{"lineNumber":608,"author":{"gitId":"Leeyp"},"content":"   9. OTHER quantity: 0 out of 500","lastModifiedDate":"2021-03-30"},{"lineNumber":609,"author":{"gitId":"Leeyp"},"content":"    ```","lastModifiedDate":"2021-03-30"},{"lineNumber":610,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":611,"author":{"gitId":"Leeyp"},"content":"Note that `SEAFOOD` AND `BEVERAGE` category are omitted from the above list,","lastModifiedDate":"2021-03-30"},{"lineNumber":612,"author":{"gitId":"Leeyp"},"content":"as they are not \"running low\". There is sufficient food from the given category in the","lastModifiedDate":"2021-03-30"},{"lineNumber":613,"author":{"gitId":"Leeyp"},"content":"fridge, because it is above the quantity we have specified by `setlimit`.","lastModifiedDate":"2021-03-30"},{"lineNumber":614,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":615,"author":{"gitId":"Leeyp"},"content":"### History","lastModifiedDate":"2021-03-30"},{"lineNumber":616,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":617,"author":{"gitId":"Leeyp"},"content":"While the history command may be simple to test, the expected output may vary depending on the food added by","lastModifiedDate":"2021-03-30"},{"lineNumber":618,"author":{"gitId":"Leeyp"},"content":"the user during testing.","lastModifiedDate":"2021-03-30"},{"lineNumber":619,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":620,"author":{"gitId":"Leeyp"},"content":"Therefore, user testers should manually compare the results of the `history` command with their actual input","lastModifiedDate":"2021-03-30"},{"lineNumber":621,"author":{"gitId":"Leeyp"},"content":"during testing, and see if they correspond.","lastModifiedDate":"2021-03-30"},{"lineNumber":622,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":623,"author":{"gitId":"Leeyp"},"content":"1. Prerequisites: Only the input in the above [add command](adding-food) was added to the list.","lastModifiedDate":"2021-03-30"},{"lineNumber":624,"author":{"gitId":"Leeyp"},"content":"   No other food was added to the list.","lastModifiedDate":"2021-03-30"},{"lineNumber":625,"author":{"gitId":"Leeyp"},"content":"    * Note: To reset the history, use `history clear`.","lastModifiedDate":"2021-03-30"},{"lineNumber":626,"author":{"gitId":"Leeyp"},"content":"    * `add chicken /cat meat /exp 30-06-2021 /loc lower_shelf /qty 100`","lastModifiedDate":"2021-03-30"},{"lineNumber":627,"author":{"gitId":"Leeyp"},"content":"    * `add milk /cat dairy /exp 31-12-2021 /loc fridge_door /qty 2`","lastModifiedDate":"2021-03-30"},{"lineNumber":628,"author":{"gitId":"Leeyp"},"content":"    * `add Coke /cat beverage /exp 30-07-2021 /loc upper_shelf /qty 5`","lastModifiedDate":"2021-03-30"},{"lineNumber":629,"author":{"gitId":"Leeyp"},"content":"    * `add squid /cat seafood /exp 15-08-2021 /loc freezer /qty 100`","lastModifiedDate":"2021-03-30"},{"lineNumber":630,"author":{"gitId":"Leeyp"},"content":"2. Test case: `history`","lastModifiedDate":"2021-03-30"},{"lineNumber":631,"author":{"gitId":"Leeyp"},"content":"    * Expected:","lastModifiedDate":"2021-03-30"},{"lineNumber":632,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":633,"author":{"gitId":"Leeyp"},"content":"    ```lang-none","lastModifiedDate":"2021-03-30"},{"lineNumber":634,"author":{"gitId":"Leeyp"},"content":"    This is the full history of items you\u0027ve added in the fridge:","lastModifiedDate":"2021-03-30"},{"lineNumber":635,"author":{"gitId":"Leeyp"},"content":"        1. Food name: chicken, category: MEAT, expiry: 30-06-2021, stored in: LOWER_SHELF, quantity: 100","lastModifiedDate":"2021-03-30"},{"lineNumber":636,"author":{"gitId":"Leeyp"},"content":"        2. Food name: milk, category: DAIRY, expiry: 31-12-2021, stored in: FRIDGE_DOOR, quantity: 2","lastModifiedDate":"2021-03-30"},{"lineNumber":637,"author":{"gitId":"Leeyp"},"content":"        3. Food name: Coke, category: BEVERAGE, expiry: 30-07-2021, stored in: UPPER_SHELF, quantity: 5","lastModifiedDate":"2021-03-30"},{"lineNumber":638,"author":{"gitId":"Leeyp"},"content":"        4. Food name: squid, category: SEAFOOD, expiry: 15-08-2021, stored in: FREEZER, quantity: 100","lastModifiedDate":"2021-03-30"},{"lineNumber":639,"author":{"gitId":"Leeyp"},"content":"    ```","lastModifiedDate":"2021-03-30"},{"lineNumber":640,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":641,"author":{"gitId":"Leeyp"},"content":"### Saving data","lastModifiedDate":"2021-03-30"},{"lineNumber":642,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":643,"author":{"gitId":"Leeyp"},"content":"_Dealing with missing/corrupted data files._","lastModifiedDate":"2021-03-30"},{"lineNumber":644,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":645,"author":{"gitId":"Leeyp"},"content":"All data is stored in the `/data` folder in the same folder as `FridgeFriend.jar`.","lastModifiedDate":"2021-03-30"},{"lineNumber":646,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":647,"author":{"gitId":"Leeyp"},"content":"Three (3) text files will be generated in the folder during usual execution of `FridgeFriend`.","lastModifiedDate":"2021-03-30"},{"lineNumber":648,"author":{"gitId":"Leeyp"},"content":"These text files are used to store data in the disk for various commands during the usual operation of `FridgeFriend`.","lastModifiedDate":"2021-03-30"},{"lineNumber":649,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":650,"author":{"gitId":"Leeyp"},"content":"1. `fridgeData.txt`","lastModifiedDate":"2021-03-30"},{"lineNumber":651,"author":{"gitId":"Leeyp"},"content":"    * Contains the food stored in the fridge.","lastModifiedDate":"2021-03-30"},{"lineNumber":652,"author":{"gitId":"Leeyp"},"content":"    * Is automatically loaded when `FridgeFriend` starts. Food in the text file will be stored in the fridge.","lastModifiedDate":"2021-03-30"},{"lineNumber":653,"author":{"gitId":"Leeyp"},"content":"    * The text file will be updated with the contents of the fridge when the `FridgeFriend` application is terminated","lastModifiedDate":"2021-03-30"},{"lineNumber":654,"author":{"gitId":"Leeyp"},"content":"    using the `bye` command.","lastModifiedDate":"2021-03-30"},{"lineNumber":655,"author":{"gitId":"Leeyp"},"content":"    * The text file will **not** be updated if `FridgeFriend` is not terminated with the `bye` command,","lastModifiedDate":"2021-03-30"},{"lineNumber":656,"author":{"gitId":"Leeyp"},"content":"    such as when the runtime is interrupted with `Ctrl+C`.","lastModifiedDate":"2021-03-30"},{"lineNumber":657,"author":{"gitId":"Leeyp"},"content":"    * _Missing data file:_ A new, blank `fridgeData.txt` will automatically be created upon launching `FridgeFriend`.","lastModifiedDate":"2021-03-30"},{"lineNumber":658,"author":{"gitId":"Leeyp"},"content":"    The fridge at program launch will be empty. No further action needed.","lastModifiedDate":"2021-03-30"},{"lineNumber":659,"author":{"gitId":"Leeyp"},"content":"    * _Corrupted data file:_ Upon program launch, `FridgeFriend` will throw an exception with","lastModifiedDate":"2021-03-30"},{"lineNumber":660,"author":{"gitId":"Leeyp"},"content":"      an accompanying error message:","lastModifiedDate":"2021-03-30"},{"lineNumber":661,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":662,"author":{"gitId":"Leeyp"},"content":"        ```lang-none","lastModifiedDate":"2021-03-30"},{"lineNumber":663,"author":{"gitId":"Leeyp"},"content":"        There was an error loading the data for FridgeFriend!","lastModifiedDate":"2021-03-30"},{"lineNumber":664,"author":{"gitId":"Leeyp"},"content":"        Index 1 out of bounds for length 1","lastModifiedDate":"2021-03-30"},{"lineNumber":665,"author":{"gitId":"Leeyp"},"content":"        ```","lastModifiedDate":"2021-03-30"},{"lineNumber":666,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":667,"author":{"gitId":"Leeyp"},"content":"      * `FridgeFriend` will load the contents of the text file until the point in the file where corrupted/invalid","lastModifiedDate":"2021-03-30"},{"lineNumber":668,"author":{"gitId":"Leeyp"},"content":"        data is encountered.","lastModifiedDate":"2021-03-30"},{"lineNumber":669,"author":{"gitId":"Leeyp"},"content":"      * User can recover the contents of the file by manually inspecting the text file and removing invalid content.  ","lastModifiedDate":"2021-03-30"},{"lineNumber":670,"author":{"gitId":"Leeyp"},"content":"2. `limitsData.txt`","lastModifiedDate":"2021-03-30"},{"lineNumber":671,"author":{"gitId":"Leeyp"},"content":"    * Contains the food quantities used to determine which food is running low in `setlimit` and `runninglow`.","lastModifiedDate":"2021-03-30"},{"lineNumber":672,"author":{"gitId":"Leeyp"},"content":"    * Is automatically loaded when `FridgeFriend` starts. The loaded content can be viewed with `runninglow`.","lastModifiedDate":"2021-03-30"},{"lineNumber":673,"author":{"gitId":"Leeyp"},"content":"    * The text file will be updated with the contents of the fridge when the `FridgeFriend` application is terminated","lastModifiedDate":"2021-03-30"},{"lineNumber":674,"author":{"gitId":"Leeyp"},"content":"     using the `bye` command.","lastModifiedDate":"2021-03-30"},{"lineNumber":675,"author":{"gitId":"Leeyp"},"content":"    * The text file will **not** be updated if `FridgeFriend` is not terminated with the `bye` command,","lastModifiedDate":"2021-03-30"},{"lineNumber":676,"author":{"gitId":"Leeyp"},"content":"     such as when the runtime is interrupted with `Ctrl+C`.","lastModifiedDate":"2021-03-30"},{"lineNumber":677,"author":{"gitId":"Leeyp"},"content":"    * _Missing data file:_ A new, blank `fridgeData.txt` will automatically be created upon launching `FridgeFriend`.","lastModifiedDate":"2021-03-30"},{"lineNumber":678,"author":{"gitId":"Leeyp"},"content":"          The limits of all food categories will be reset to the default of 500. No further action needed.  ","lastModifiedDate":"2021-03-30"},{"lineNumber":679,"author":{"gitId":"Leeyp"},"content":"    * _Corrupted data file:_","lastModifiedDate":"2021-03-30"},{"lineNumber":680,"author":{"gitId":"Leeyp"},"content":"        * Test case: Corrupted categories.","lastModifiedDate":"2021-03-30"},{"lineNumber":681,"author":{"gitId":"Leeyp"},"content":"           * If the corrupted category is readable: No error message will be shown. User can only identify that data","lastModifiedDate":"2021-03-30"},{"lineNumber":682,"author":{"gitId":"Leeyp"},"content":"             has been corrupted when using the `runninglow` command. The quantity of the invalid categories due to","lastModifiedDate":"2021-03-30"},{"lineNumber":683,"author":{"gitId":"Leeyp"},"content":"             corruption will be reset to `500`.","lastModifiedDate":"2021-03-30"},{"lineNumber":684,"author":{"gitId":"Leeyp"},"content":"           * If the corrupted category is unreadable:","lastModifiedDate":"2021-03-30"},{"lineNumber":685,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":686,"author":{"gitId":"Leeyp"},"content":"            ```lang-none","lastModifiedDate":"2021-03-30"},{"lineNumber":687,"author":{"gitId":"Leeyp"},"content":"            There was an error loading the data for FridgeFriend!","lastModifiedDate":"2021-03-30"},{"lineNumber":688,"author":{"gitId":"Leeyp"},"content":"            Index 1 out of bounds for length 1","lastModifiedDate":"2021-03-30"},{"lineNumber":689,"author":{"gitId":"Leeyp"},"content":"            ```","lastModifiedDate":"2021-03-30"},{"lineNumber":690,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":691,"author":{"gitId":"Leeyp"},"content":"              * The quantity limits will be parsed up until the corrupted unreadable category.","lastModifiedDate":"2021-03-30"},{"lineNumber":692,"author":{"gitId":"Leeyp"},"content":"                Subsequent quantity limits in the file would not be parsed, and will be reset to the default of `500`.","lastModifiedDate":"2021-03-30"},{"lineNumber":693,"author":{"gitId":"Leeyp"},"content":"        * Test case: Corrupted quantities.","lastModifiedDate":"2021-03-30"},{"lineNumber":694,"author":{"gitId":"Leeyp"},"content":"          * If the corrupted quantity is an integer: No error message will be shown. User can only identify that","lastModifiedDate":"2021-03-30"},{"lineNumber":695,"author":{"gitId":"Leeyp"},"content":"            data has been corrupted when using the `runninglow` command. The limit will be updated to the corrupted","lastModifiedDate":"2021-03-30"},{"lineNumber":696,"author":{"gitId":"Leeyp"},"content":"            value.","lastModifiedDate":"2021-03-30"},{"lineNumber":697,"author":{"gitId":"Leeyp"},"content":"          * If the corrupted quantity is **not** an integer: Error message will be shown.","lastModifiedDate":"2021-03-30"},{"lineNumber":698,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":699,"author":{"gitId":"Leeyp"},"content":"            ```lang-none","lastModifiedDate":"2021-03-30"},{"lineNumber":700,"author":{"gitId":"Leeyp"},"content":"            There was an error loading the data for FridgeFriend!","lastModifiedDate":"2021-03-30"},{"lineNumber":701,"author":{"gitId":"Leeyp"},"content":"            Sorry my friend, the quantity must be a number.","lastModifiedDate":"2021-03-30"},{"lineNumber":702,"author":{"gitId":"Leeyp"},"content":"            ```","lastModifiedDate":"2021-03-30"},{"lineNumber":703,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":704,"author":{"gitId":"Leeyp"},"content":"            * The quantity limits will be parsed up until the corrupted non-integer value. Subsequent quantity limits","lastModifiedDate":"2021-03-30"},{"lineNumber":705,"author":{"gitId":"Leeyp"},"content":"                in the file would not be parsed, and will be reset to the default of `500`.","lastModifiedDate":"2021-03-30"},{"lineNumber":706,"author":{"gitId":"Leeyp"},"content":"3. `historyData.txt`","lastModifiedDate":"2021-03-30"},{"lineNumber":707,"author":{"gitId":"Leeyp"},"content":"    * Contains the logs of food added to the fridge using `add` command.","lastModifiedDate":"2021-03-30"},{"lineNumber":708,"author":{"gitId":"Leeyp"},"content":"    * Is automatically updated whenever a successful `add` command is invoked.  ","lastModifiedDate":"2021-03-30"},{"lineNumber":709,"author":{"gitId":"Leeyp"},"content":"    * Content is loaded from disk only when `history` command is invoked.","lastModifiedDate":"2021-03-30"},{"lineNumber":710,"author":{"gitId":"Leeyp"},"content":"    * _Missing data file:_ A new, blank `fridgeData.txt` will automatically be created upon executing the `history`","lastModifiedDate":"2021-03-30"},{"lineNumber":711,"author":{"gitId":"Leeyp"},"content":"      command. No further action needed.","lastModifiedDate":"2021-03-30"},{"lineNumber":712,"author":{"gitId":"Leeyp"},"content":"    * _Corrupted data file:_","lastModifiedDate":"2021-03-30"},{"lineNumber":713,"author":{"gitId":"Leeyp"},"content":"       * Test case: If corrupted data is readable. No error message will be shown. User can only identify that data","lastModifiedDate":"2021-03-30"},{"lineNumber":714,"author":{"gitId":"Leeyp"},"content":"             has been corrupted when using the `history` command. The `history` command will continue to print out","lastModifiedDate":"2021-03-30"},{"lineNumber":715,"author":{"gitId":"Leeyp"},"content":"            the contents of the file, including the corrupted data.","lastModifiedDate":"2021-03-30"},{"lineNumber":716,"author":{"gitId":"Leeyp"},"content":"            * While this corrupted data would not affect program flow, it may create unexpected output. If necessary,","lastModifiedDate":"2021-03-30"},{"lineNumber":717,"author":{"gitId":"Leeyp"},"content":"              users can manually inspect the file and remove unwanted data at their own discretion.","lastModifiedDate":"2021-03-30"},{"lineNumber":718,"author":{"gitId":"Leeyp"},"content":"       * Test case: If corrupted data is unreadable. No error message will be shown. User can only identify that","lastModifiedDate":"2021-03-30"},{"lineNumber":719,"author":{"gitId":"Leeyp"},"content":"         data has been corrupted when using the `history` command. The contents of the entire file will not be parsed,","lastModifiedDate":"2021-03-30"},{"lineNumber":720,"author":{"gitId":"Leeyp"},"content":"         even if there is valid content in some parts of the file.","lastModifiedDate":"2021-03-30"},{"lineNumber":721,"author":{"gitId":"Leeyp"},"content":"            * The contents of the file will not be affected. If necessary,","lastModifiedDate":"2021-03-30"},{"lineNumber":722,"author":{"gitId":"Leeyp"},"content":"              users can manually inspect the file and remove corrupted data, in order to salvage any valid data.","lastModifiedDate":"2021-03-30"},{"lineNumber":723,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":724,"author":{"gitId":"Leeyp"},"content":"## Attribution","lastModifiedDate":"2021-03-29"},{"lineNumber":725,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":726,"author":{"gitId":"Leeyp"},"content":"The format of this User Guide was adapted from [AddressBook Level 3(AB3) Developer Guide](https://github.com/se-edu/addressbook-level3/blob/master/docs/DeveloperGuide.md).","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"Leeyp":390,"kwokyto":156,"Vinci-Hu":48,"-":29,"SimJJ96":103}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"# FridgeFriend","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"`FridgeFriend` is an app for managing food in the fridge, optimised for use via a Command Line Interface (CLI).","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"If you can type fast, `FridgeFriend` can track your cold or frozen groceries faster and easier than any other apps.","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"It is written in Java, and has more than 4.3kLoC.","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"* [Latest Version of FridgeFriend](https://github.com/AY2021S2-CS2113-T10-1/tp/releases/latest)","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"  * [Hu Wen Qi](team/wenqihu.md)","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"  * [Kim Joohwan](team/joohwan.md)","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"  * [Lee Yang Peng](team/leeyp.md)","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"  * [Ryan Kwok](team/kwokyto.md)","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"  * [Sim Jing Jie](team/simjingjie.md)","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"kwokyto":10,"joohwan58":1,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"`FridgeFriend` is an app for managing food in the fridge, optimised for use via a Command Line Interface (CLI).","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"If you can type fast, `FridgeFriend` can track your cold or frozen groceries faster and easier than any other apps.","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"It is written in Java, and has more than 4.3kLoC.","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"Leeyp"},"content":"## Contents","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"Leeyp"},"content":"* [Introduction](#introduction)","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"Leeyp"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"Leeyp"},"content":"* [Features](#features)","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"Leeyp"},"content":"  * [Add](#adding-a-food-item-add)","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"Leeyp"},"content":"  * [List](#display-the-list-of-all-foods-list)","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"Leeyp"},"content":"  * [List by Category](#display-the-list-of-foods-by-category-list-category)","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"Leeyp"},"content":"  * [List by Location](#display-the-list-of-foods-by-storage-location-list-location)","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"Leeyp"},"content":"  * [Remove](#remove-a-food-item-remove)","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"Leeyp"},"content":"  * [Search](#search-search)","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"Leeyp"},"content":"  * [Expiring](#list-expiring-foods-expiring)","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"Leeyp"},"content":"  * [Runninglow](#list-categories-with-food-running-low-runninglow)","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"Leeyp"},"content":"  * [Setlimit](#modify-the-minimum-quantity-limits-setlimit)","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"Leeyp"},"content":"  * [History](#list-history-of-items-added-history)","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"Leeyp"},"content":"  * [Clear history](#clear-list-history-of-items-added-history-clear)","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"Leeyp"},"content":"  * [Help](#get-help-message-help)","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"Leeyp"},"content":"  * [Bye](#exit-the-application-bye)","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"Leeyp"},"content":"* [FAQ](#faq)","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"Leeyp"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"Leeyp"},"content":"2. Download the latest version of `FridgeFriend` from [here](https://github.com/AY2021S2-CS2113-T10-1/tp/releases/latest).","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"Leeyp"},"content":"3. Copy the file to the folder you want to use as the home folder for your `FridgeFriend`.  ","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"Leeyp"},"content":"4. Open your Command Line Terminal in the folder where `FridgeFriend.jar` is located, and run","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"Leeyp"},"content":"   `FridgeFriend` with `java -jar FridgeFriend_v2.0.jar` (or the latest version).","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"Leeyp"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing `list` and pressing Enter will show a","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"Leeyp"},"content":"   list of all current food. Some example commands you can try:","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"Leeyp"},"content":"   * `list`: Lists all food.","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"Leeyp"},"content":"   * `add chicken /cat meat /exp 30-06-2021 /loc lower_shelf /qty 100`: Adds a `chicken` with category of `meat`,","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"Leeyp"},"content":"     expiry date of `30-06-2021`, location of `lower_shelf`, and quantity of `100` to the Fridge.","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"Leeyp"},"content":"   * `search chicken`: Searches for the chicken in the fridge and returns its location (currently: `lower_shelf`).","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"Leeyp"},"content":"   * `remove chicken /qty 50`: Removes a quantity of `50` from the `chicken` stored in the fridge.","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"Leeyp"},"content":"   * `bye`: Exits the app.","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"Leeyp"},"content":"6. Refer to the **Features** below for details of each command.","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"SimJJ96"},"content":"**Notes about the command format:**","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"SimJJ96"},"content":"* Words in UPPER_CASE are the parameters to be supplied by the user.\\","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"SimJJ96"},"content":"  e.g. `add FOOD_NAME`, `FOOD_NAME` is a parameter which can be used as `add chicken`.","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"SimJJ96"},"content":"  ","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"SimJJ96"},"content":"### Adding a food item: `add`","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"SimJJ96"},"content":"Adds a food item into the fridge.","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"SimJJ96"},"content":"If a particular FOOD_NAME is in the fridge, the other fields have to be same in order to","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"SimJJ96"},"content":"add the quantity. Otherwise, a unique FOOD_NAME has to be used to add the food into the FridgeFriend.","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"SimJJ96"},"content":"Format: `add FOOD_NAME /cat FOOD_CATEGORY /exp EXPIRY_DATE /loc LOCATION_IN_THE_FRIDGE /qty FOOD_QUANTITY`","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"SimJJ96"},"content":"* The `FOOD_NAME` can be the name of a food but not an empty description.","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"SimJJ96"},"content":"* The `FOOD_CATEGORY` can be the basic food groups otherwise it will be categorised as others.","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"SimJJ96"},"content":"* The `EXPIRY_DATE` must be in the format `dd-mm-yyyy`.","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"SimJJ96"},"content":"* The `LOCATION_IN_THE_FRIDGE` can be a general compartment in a fridge.","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"SimJJ96"},"content":"* The `FOOD_QUANTITY` must be a positive integer.","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"SimJJ96"},"content":":bulb: **Tip:**","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"Vinci-Hu"},"content":"* If you want to add more to the same batch of food (same category, same location and same","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"Vinci-Hu"},"content":"expiry date), you should specify exactly the same `FOOD_NAME`,`FOOD_CATEGORY`,`EXPIRY_DATE`,","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"Vinci-Hu"},"content":"`LOCATION_IN_THE_FRIDGE` and the new quantity in `QUANTITY` field.","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"Vinci-Hu"},"content":"* The food names should not repeat unless it is the same batch as described above.","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"Vinci-Hu"},"content":"Otherwise, you will be prompted to retry the `add` command.","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"SimJJ96"},"content":":information_source: Additional info:","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":79,"author":{"gitId":"kwokyto"},"content":"* Basic Food Groups: `MEAT`, `SEAFOOD`, `EGG`, `DAIRY`, `VEGETABLE`, `FRUIT`,","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"SimJJ96"},"content":"  `BEVERAGE`, `COOKED_DISH`, `READY_TO_EAT`, `FROZEN`, `OTHERS`","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"SimJJ96"},"content":"* Basic Fridge Location: `FREEZER`, `UPPER_SHELF`, `MIDDLE_SHELF`, `LOWER_SHELF`,","lastModifiedDate":"2021-03-26"},{"lineNumber":82,"author":{"gitId":"SimJJ96"},"content":"  `DRAWERS`, `FRIDGE_DOOR`, `OTHERS`","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":84,"author":{"gitId":"SimJJ96"},"content":"Example of usage:","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":86,"author":{"gitId":"SimJJ96"},"content":"*Situation 1: Adding a new food items into the fridge.*","lastModifiedDate":"2021-03-26"},{"lineNumber":87,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"kwokyto"},"content":"```lang-none","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"SimJJ96"},"content":"\u003e\u003e add chicken /cat meat /exp 30-06-2021 /loc lower_shelf /qty 200","lastModifiedDate":"2021-03-26"},{"lineNumber":90,"author":{"gitId":"SimJJ96"},"content":"Great! I have added chicken into your fridge.","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"SimJJ96"},"content":"Details: Food name: chicken, category: MEAT, expiry: 30-06-2021, stored in: LOWER_SHELF, quantity: 200","lastModifiedDate":"2021-03-26"},{"lineNumber":92,"author":{"gitId":"SimJJ96"},"content":"```","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":94,"author":{"gitId":"SimJJ96"},"content":"*Situation 2: Adding food item with the same food name and details in the fridge.*","lastModifiedDate":"2021-03-26"},{"lineNumber":95,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":96,"author":{"gitId":"kwokyto"},"content":"```lang-none","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"Vinci-Hu"},"content":"\u003e\u003e add chicken /cat meat /exp 30-06-2021 /loc lower_shelf /qty 500","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"SimJJ96"},"content":"   Great! I have added chicken into your fridge.","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"Vinci-Hu"},"content":"   Details: Food name: chicken, category: MEAT, expiry: 30-06-2021, stored in: LOWER_SHELF, quantity: 500","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"Vinci-Hu"},"content":"\u003e\u003e add chicken /cat meat /exp 07-10-2021 /loc upper_shelf /qty 500","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"Vinci-Hu"},"content":"   Sorry my friend, you have added this food before but in a different location or have different expiry dates. Please specify another foodname.","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"Vinci-Hu"},"content":"\u003e\u003e add chicken /cat meat /exp 30-06-2021 /loc lower_shelf /qty 200","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"SimJJ96"},"content":"   Great! I have added chicken into your fridge.","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"Vinci-Hu"},"content":"   Details: Food name: chicken, category: MEAT, expiry: 30-06-2021, stored in: LOWER_SHELF, quantity: 700","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"SimJJ96"},"content":"```","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":110,"author":{"gitId":"Vinci-Hu"},"content":"### Display the list of all foods: `list`","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"Vinci-Hu"},"content":"Displays the full list of food items stored in the fridge.","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"Vinci-Hu"},"content":"Format: `list`","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"Vinci-Hu"},"content":"* There should not be any descriptions after keyword `list`.  ","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"Vinci-Hu"},"content":"Example of usage:","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"kwokyto"},"content":"```lang-none","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e list","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"Vinci-Hu"},"content":"Here are the items in your fridge:","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"SimJJ96"},"content":" 1. Food name: chicken, category: MEAT, expiry: 27-03-2021, stored in: LOWER_SHELF, quantity: 300","lastModifiedDate":"2021-03-26"},{"lineNumber":124,"author":{"gitId":"Leeyp"},"content":" 2. Food name: roast chicken, category: READY_TO_EAT, expiry: 31-12-2021, stored in: UPPER_SHELF, quantity: 1","lastModifiedDate":"2021-03-27"},{"lineNumber":125,"author":{"gitId":"Vinci-Hu"},"content":"```","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"Vinci-Hu"},"content":"### Display the list of foods by category: `list \u003cCATEGORY\u003e`","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"Vinci-Hu"},"content":"Displays the list of food items under specified category stored in the fridge.","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"Vinci-Hu"},"content":"Format: `list CATEGORY_NAME`","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"Vinci-Hu"},"content":"* The `CATEGORY_NAME` can only be recognized if it is in the pre-defined categories:","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"Vinci-Hu"},"content":"`VEGETABLE, FRUIT, MEAT, SEAFOOD, EGG, DAIRY, BEVERAGE, COOKED_DISH, READY_TO_EAT, FROZEN, OTHER`","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"kwokyto"},"content":"* The `CATEGORY_NAME` is case-insensitive.","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"Leeyp"},"content":"* If invalid input detected, `FridgeFriend` would give an error message.","lastModifiedDate":"2021-03-21"},{"lineNumber":137,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"Vinci-Hu"},"content":"Example of usage:","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"SimJJ96"},"content":"*Situation 1: There are two food chicken and pork under MEAT category.*","lastModifiedDate":"2021-03-26"},{"lineNumber":141,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"kwokyto"},"content":"```lang-none","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e list MEAT","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"Vinci-Hu"},"content":"These are the MEAT in your fridge:","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"SimJJ96"},"content":" 1. Food name: chicken, category: MEAT, expiry: 27-03-2021, stored in: LOWER_SHELF, quantity: 300","lastModifiedDate":"2021-03-26"},{"lineNumber":146,"author":{"gitId":"SimJJ96"},"content":" 2. Food name: pork, category: MEAT, expiry: 28-03-2021, stored in: LOWER_SHELF, quantity: 200","lastModifiedDate":"2021-03-26"},{"lineNumber":147,"author":{"gitId":"Vinci-Hu"},"content":"```","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"kwokyto"},"content":"*Situation 2: There are no foods under READY_TO_EAT category.*","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"kwokyto"},"content":"```lang-none","lastModifiedDate":"2021-03-29"},{"lineNumber":152,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e list ready_to_eat","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"Vinci-Hu"},"content":"These are the READY_TO_EAT in your fridge:","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"Vinci-Hu"},"content":"```","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"Leeyp"},"content":"### Display the list of foods by storage location: `list \u003cLOCATION\u003e`","lastModifiedDate":"2021-03-21"},{"lineNumber":157,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":158,"author":{"gitId":"Leeyp"},"content":"Displays the list of food items under specified category stored in the fridge.","lastModifiedDate":"2021-03-21"},{"lineNumber":159,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":160,"author":{"gitId":"Leeyp"},"content":"Format: `list STORAGE_LOCATION_NAME`","lastModifiedDate":"2021-03-21"},{"lineNumber":161,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":162,"author":{"gitId":"Leeyp"},"content":"* The `STORAGE_LOCATION_NAME` can only be recognized if it is in the pre-defined categories:","lastModifiedDate":"2021-03-21"},{"lineNumber":163,"author":{"gitId":"Leeyp"},"content":"  `FREEZER, UPPER_SHELF, MIDDLE_SHELF, LOWER_SHELF, DRAWERS, FRIDGE_DOOR, OTHER`","lastModifiedDate":"2021-03-21"},{"lineNumber":164,"author":{"gitId":"Leeyp"},"content":"* The `STORAGE_LOCATION_NAME` is case-insensitive.","lastModifiedDate":"2021-03-21"},{"lineNumber":165,"author":{"gitId":"Leeyp"},"content":"* If invalid input detected, `FridgeFriend` would give an error message.","lastModifiedDate":"2021-03-21"},{"lineNumber":166,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":167,"author":{"gitId":"Leeyp"},"content":"Example of usage:","lastModifiedDate":"2021-03-21"},{"lineNumber":168,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":169,"author":{"gitId":"SimJJ96"},"content":"*Situation 1: There are two food chicken and pork stored in LOWER_SHELF.*","lastModifiedDate":"2021-03-26"},{"lineNumber":170,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":171,"author":{"gitId":"kwokyto"},"content":"```lang-none","lastModifiedDate":"2021-03-29"},{"lineNumber":172,"author":{"gitId":"Leeyp"},"content":"\u003e\u003e list LOWER_SHELF","lastModifiedDate":"2021-03-27"},{"lineNumber":173,"author":{"gitId":"Leeyp"},"content":"These are the food stored in LOWER_SHELF:","lastModifiedDate":"2021-03-27"},{"lineNumber":174,"author":{"gitId":"SimJJ96"},"content":" 1. Food name: chicken, category: MEAT, expiry: 27-03-2021, stored in: LOWER_SHELF, quantity: 300","lastModifiedDate":"2021-03-26"},{"lineNumber":175,"author":{"gitId":"SimJJ96"},"content":" 2. Food name: pork, category: MEAT, expiry: 28-03-2021, stored in: LOWER_SHELF, quantity: 200","lastModifiedDate":"2021-03-26"},{"lineNumber":176,"author":{"gitId":"Leeyp"},"content":"```","lastModifiedDate":"2021-03-21"},{"lineNumber":177,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":178,"author":{"gitId":"Leeyp"},"content":"*Situation 2: There are no foods stored in DRAWERS.*","lastModifiedDate":"2021-03-21"},{"lineNumber":179,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":180,"author":{"gitId":"kwokyto"},"content":"```lang-none","lastModifiedDate":"2021-03-29"},{"lineNumber":181,"author":{"gitId":"Leeyp"},"content":"\u003e\u003e list DRAWERS","lastModifiedDate":"2021-03-27"},{"lineNumber":182,"author":{"gitId":"Leeyp"},"content":"These are the food stored in DRAWERS:","lastModifiedDate":"2021-03-21"},{"lineNumber":183,"author":{"gitId":"Leeyp"},"content":"```","lastModifiedDate":"2021-03-21"},{"lineNumber":184,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":185,"author":{"gitId":"Vinci-Hu"},"content":"### Remove a food item by quantity: `remove`","lastModifiedDate":"2021-03-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":187,"author":{"gitId":"kwokyto"},"content":"Removes a food item based on its index.","lastModifiedDate":"2021-03-17"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":189,"author":{"gitId":"Vinci-Hu"},"content":"Format: `remove FOODNAME /qty QUANITTY_TO_REMOVE`","lastModifiedDate":"2021-03-29"},{"lineNumber":190,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":191,"author":{"gitId":"Vinci-Hu"},"content":"* The `FOODNAME` must be an existing food name (same with the first parameter during `add`) in the fridge.","lastModifiedDate":"2021-03-29"},{"lineNumber":192,"author":{"gitId":"Vinci-Hu"},"content":"* If the `FOODNAME` is not found, `FridgeFriend` will give an error message.","lastModifiedDate":"2021-03-29"},{"lineNumber":193,"author":{"gitId":"Vinci-Hu"},"content":"* The `QUANTITY_TO_REMOVE` must be lower to equal to the current quantity of the food.","lastModifiedDate":"2021-03-29"},{"lineNumber":194,"author":{"gitId":"Vinci-Hu"},"content":"* If the `QUANTITY_TO_REMOVE` is larger than current quantity of the food, `FridgeFriend` will give an error message.","lastModifiedDate":"2021-03-29"},{"lineNumber":195,"author":{"gitId":"Vinci-Hu"},"content":"* If the `QUANTITY_TO_REMOVE` is equal to current quantity of the food, it means food is depleted and thus the whole","lastModifiedDate":"2021-03-29"},{"lineNumber":196,"author":{"gitId":"Vinci-Hu"},"content":"food item will be deleted by `FridgeFriend` (it will not appear on list either).","lastModifiedDate":"2021-03-29"},{"lineNumber":197,"author":{"gitId":"Vinci-Hu"},"content":"* If the `QUANTITY_TO_REMOVE` is lower than current quantity of the food, it means there is still some food left","lastModifiedDate":"2021-03-29"},{"lineNumber":198,"author":{"gitId":"Vinci-Hu"},"content":"of this item. The quantity of food will be updated.","lastModifiedDate":"2021-03-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":200,"author":{"gitId":"kwokyto"},"content":"Example of usage:","lastModifiedDate":"2021-03-17"},{"lineNumber":201,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":202,"author":{"gitId":"kwokyto"},"content":"```lang-none","lastModifiedDate":"2021-03-29"},{"lineNumber":203,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e list","lastModifiedDate":"2021-03-17"},{"lineNumber":204,"author":{"gitId":"kwokyto"},"content":"   Here are the items in your fridge:","lastModifiedDate":"2021-03-17"},{"lineNumber":205,"author":{"gitId":"Vinci-Hu"},"content":"    1. Food name: chicken, category: MEAT, expiry: 27-03-2021, stored in: LOWER_SHELF, quantity: 1000","lastModifiedDate":"2021-03-29"},{"lineNumber":206,"author":{"gitId":"Vinci-Hu"},"content":"    2. Food name: pork, category: MEAT, expiry: 28-03-2021, stored in: LOWER_SHELF, quantity: 800","lastModifiedDate":"2021-03-29"},{"lineNumber":207,"author":{"gitId":"Vinci-Hu"},"content":"    3. Food name: grouper, category: SEAFOOD, expiry: 04-05-2021, stored in: FREEZER, quantity: 700","lastModifiedDate":"2021-03-29"},{"lineNumber":208,"author":{"gitId":"Vinci-Hu"},"content":"    4. Food name: oyster, category: SEAFOOD, expiry: 03-04-2022, stored in: FREEZER, quantity: 100","lastModifiedDate":"2021-03-29"},{"lineNumber":209,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":210,"author":{"gitId":"Vinci-Hu"},"content":"\u003e\u003e remove chicken /qty 1500","lastModifiedDate":"2021-03-29"},{"lineNumber":211,"author":{"gitId":"Vinci-Hu"},"content":"   Not enough in fridge to remove!","lastModifiedDate":"2021-03-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":213,"author":{"gitId":"Vinci-Hu"},"content":"\u003e\u003e remove chicken /qty 200","lastModifiedDate":"2021-03-29"},{"lineNumber":214,"author":{"gitId":"Vinci-Hu"},"content":"   Noted! I\u0027ve removed 200 of the food chicken from your fridge.","lastModifiedDate":"2021-03-29"},{"lineNumber":215,"author":{"gitId":"Vinci-Hu"},"content":"   New quantity: 1300","lastModifiedDate":"2021-03-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":217,"author":{"gitId":"Vinci-Hu"},"content":"\u003e\u003e remove pork /qty 800","lastModifiedDate":"2021-03-29"},{"lineNumber":218,"author":{"gitId":"Vinci-Hu"},"content":"   Noted! I\u0027ve removed pork from your fridge.","lastModifiedDate":"2021-03-29"},{"lineNumber":219,"author":{"gitId":"Vinci-Hu"},"content":"   Now you have 3 food in the fridge.","lastModifiedDate":"2021-03-29"},{"lineNumber":220,"author":{"gitId":"kwokyto"},"content":"```","lastModifiedDate":"2021-03-17"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":222,"author":{"gitId":"Leeyp"},"content":"### Search: `search`","lastModifiedDate":"2021-03-17"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":224,"author":{"gitId":"Leeyp"},"content":"Checks if a certain food item is inside the fridge, and if the item is found, informs user of the food that matches the search query.","lastModifiedDate":"2021-03-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":226,"author":{"gitId":"Leeyp"},"content":"Format: `search FOOD_NAME`","lastModifiedDate":"2021-03-17"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":228,"author":{"gitId":"Leeyp"},"content":"* The `FOOD_NAME` can be the name of a food but not an empty description.","lastModifiedDate":"2021-03-17"},{"lineNumber":229,"author":{"gitId":"SimJJ96"},"content":"* The command requires the user to input the name of the food item `FOOD_NAME` to be searched for.","lastModifiedDate":"2021-03-30"},{"lineNumber":230,"author":{"gitId":"Leeyp"},"content":"  The names of food items stored in the fridge can be determined with `list`.","lastModifiedDate":"2021-03-17"},{"lineNumber":231,"author":{"gitId":"SimJJ96"},"content":"* If there are multiple items that contain the food name, the search function will display all of those food items.","lastModifiedDate":"2021-03-30"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":233,"author":{"gitId":"Leeyp"},"content":"Example of usage:","lastModifiedDate":"2021-03-17"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":235,"author":{"gitId":"SimJJ96"},"content":"*In this example, Fridge contains two `chicken` stored in different location.*","lastModifiedDate":"2021-03-30"},{"lineNumber":236,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":237,"author":{"gitId":"kwokyto"},"content":"```lang-none","lastModifiedDate":"2021-03-29"},{"lineNumber":238,"author":{"gitId":"SimJJ96"},"content":"\u003e\u003e search chicken","lastModifiedDate":"2021-03-30"},{"lineNumber":239,"author":{"gitId":"SimJJ96"},"content":"These are the chicken in your fridge:","lastModifiedDate":"2021-03-30"},{"lineNumber":240,"author":{"gitId":"SimJJ96"},"content":"    1. Food name: chicken, category: MEAT, expiry: 27-03-2021, stored in: LOWER_SHELF, quantity: 300","lastModifiedDate":"2021-03-30"},{"lineNumber":241,"author":{"gitId":"SimJJ96"},"content":"    2. Food name: roast chicken, category: READY_TO_EAT, expiry: 31-12-2021, stored in: UPPER_SHELF, quantity: 1","lastModifiedDate":"2021-03-30"},{"lineNumber":242,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":243,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e search oyster","lastModifiedDate":"2021-03-17"},{"lineNumber":244,"author":{"gitId":"kwokyto"},"content":"You do not have oyster in your fridge.","lastModifiedDate":"2021-03-17"},{"lineNumber":245,"author":{"gitId":"kwokyto"},"content":"```","lastModifiedDate":"2021-03-17"},{"lineNumber":246,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":247,"author":{"gitId":"kwokyto"},"content":"### List expiring foods: `expiring`","lastModifiedDate":"2021-03-17"},{"lineNumber":248,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":249,"author":{"gitId":"kwokyto"},"content":"Displays a list of food items that are expiring within a week.","lastModifiedDate":"2021-03-17"},{"lineNumber":250,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":251,"author":{"gitId":"kwokyto"},"content":"Format: `expiring`","lastModifiedDate":"2021-03-17"},{"lineNumber":252,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":253,"author":{"gitId":"kwokyto"},"content":"Example of usage:","lastModifiedDate":"2021-03-17"},{"lineNumber":254,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":255,"author":{"gitId":"kwokyto"},"content":"```lang-none","lastModifiedDate":"2021-03-29"},{"lineNumber":256,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e expiring","lastModifiedDate":"2021-03-17"},{"lineNumber":257,"author":{"gitId":"kwokyto"},"content":"These are the food expiring in the next week:","lastModifiedDate":"2021-03-17"},{"lineNumber":258,"author":{"gitId":"kwokyto"},"content":"1. Food name: chicken wings, category: MEAT, expiry: 21-03-2021, stored in: MIDDLE_SHELF","lastModifiedDate":"2021-03-17"},{"lineNumber":259,"author":{"gitId":"kwokyto"},"content":"```","lastModifiedDate":"2021-03-17"},{"lineNumber":260,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":261,"author":{"gitId":"kwokyto"},"content":"### List categories with food running low: `runninglow`","lastModifiedDate":"2021-03-25"},{"lineNumber":262,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":263,"author":{"gitId":"kwokyto"},"content":"Displays a list of food categories which total quantity is below a specified minimum limit.","lastModifiedDate":"2021-03-25"},{"lineNumber":264,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":265,"author":{"gitId":"kwokyto"},"content":"Format: `runninglow`","lastModifiedDate":"2021-03-25"},{"lineNumber":266,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":267,"author":{"gitId":"kwokyto"},"content":"Example of usage:","lastModifiedDate":"2021-03-25"},{"lineNumber":268,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":269,"author":{"gitId":"kwokyto"},"content":"```lang-none","lastModifiedDate":"2021-03-29"},{"lineNumber":270,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e runninglow","lastModifiedDate":"2021-03-25"},{"lineNumber":271,"author":{"gitId":"kwokyto"},"content":"You are running low on food in these categories:","lastModifiedDate":"2021-03-25"},{"lineNumber":272,"author":{"gitId":"kwokyto"},"content":"1. VEGETABLE quantity: 0 out of 500","lastModifiedDate":"2021-03-25"},{"lineNumber":273,"author":{"gitId":"kwokyto"},"content":"2. FRUIT quantity: 0 out of 500","lastModifiedDate":"2021-03-25"},{"lineNumber":274,"author":{"gitId":"kwokyto"},"content":"3. MEAT quantity: 200 out of 500","lastModifiedDate":"2021-03-25"},{"lineNumber":275,"author":{"gitId":"kwokyto"},"content":"4. SEAFOOD quantity: 1 out of 500","lastModifiedDate":"2021-03-25"},{"lineNumber":276,"author":{"gitId":"kwokyto"},"content":"5. EGG quantity: 0 out of 500","lastModifiedDate":"2021-03-25"},{"lineNumber":277,"author":{"gitId":"kwokyto"},"content":"6. DAIRY quantity: 0 out of 500","lastModifiedDate":"2021-03-25"},{"lineNumber":278,"author":{"gitId":"kwokyto"},"content":"7. BEVERAGE quantity: 0 out of 500","lastModifiedDate":"2021-03-25"},{"lineNumber":279,"author":{"gitId":"kwokyto"},"content":"8. COOKED_DISH quantity: 0 out of 500","lastModifiedDate":"2021-03-25"},{"lineNumber":280,"author":{"gitId":"kwokyto"},"content":"9. READY_TO_EAT quantity: 1 out of 500","lastModifiedDate":"2021-03-25"},{"lineNumber":281,"author":{"gitId":"kwokyto"},"content":"10. FROZEN quantity: 0 out of 500","lastModifiedDate":"2021-03-25"},{"lineNumber":282,"author":{"gitId":"kwokyto"},"content":"11. OTHER quantity: 0 out of 500","lastModifiedDate":"2021-03-25"},{"lineNumber":283,"author":{"gitId":"kwokyto"},"content":"```","lastModifiedDate":"2021-03-25"},{"lineNumber":284,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":285,"author":{"gitId":"kwokyto"},"content":"### Modify the minimum quantity limits: `setlimit`","lastModifiedDate":"2021-03-25"},{"lineNumber":286,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":287,"author":{"gitId":"kwokyto"},"content":"Changes the minimum quantity limit for a specific food category.","lastModifiedDate":"2021-03-25"},{"lineNumber":288,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":289,"author":{"gitId":"kwokyto"},"content":"Format: `setlimit FOOD_CATEGORY /qty QUANTITY`","lastModifiedDate":"2021-03-25"},{"lineNumber":290,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":291,"author":{"gitId":"kwokyto"},"content":"Example of usage:","lastModifiedDate":"2021-03-25"},{"lineNumber":292,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":293,"author":{"gitId":"kwokyto"},"content":"```lang-none","lastModifiedDate":"2021-03-29"},{"lineNumber":294,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e runninglow","lastModifiedDate":"2021-03-25"},{"lineNumber":295,"author":{"gitId":"kwokyto"},"content":"You are running low on food in these categories:","lastModifiedDate":"2021-03-25"},{"lineNumber":296,"author":{"gitId":"kwokyto"},"content":"1. MEAT quantity: 250 out of 500","lastModifiedDate":"2021-03-25"},{"lineNumber":297,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":298,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e setlimit meat /qty 300","lastModifiedDate":"2021-03-25"},{"lineNumber":299,"author":{"gitId":"kwokyto"},"content":"Okie dokie! The new minimum quantity for category \u0027MEAT\u0027 is 300","lastModifiedDate":"2021-03-25"},{"lineNumber":300,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":301,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e runninglow","lastModifiedDate":"2021-03-25"},{"lineNumber":302,"author":{"gitId":"kwokyto"},"content":"You are running low on food in these categories:","lastModifiedDate":"2021-03-25"},{"lineNumber":303,"author":{"gitId":"kwokyto"},"content":"1. MEAT quantity: 250 out of 300","lastModifiedDate":"2021-03-25"},{"lineNumber":304,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":305,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e setlimit meat /qty 200","lastModifiedDate":"2021-03-25"},{"lineNumber":306,"author":{"gitId":"kwokyto"},"content":"Okie dokie! The new minimum quantity for category \u0027MEAT\u0027 is 200","lastModifiedDate":"2021-03-25"},{"lineNumber":307,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":308,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e runninglow","lastModifiedDate":"2021-03-25"},{"lineNumber":309,"author":{"gitId":"kwokyto"},"content":"Congrats! You are all stocked up on food! :D","lastModifiedDate":"2021-03-25"},{"lineNumber":310,"author":{"gitId":"kwokyto"},"content":"```","lastModifiedDate":"2021-03-25"},{"lineNumber":311,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":312,"author":{"gitId":"Leeyp"},"content":"### List history of items added: `history`","lastModifiedDate":"2021-03-27"},{"lineNumber":313,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":314,"author":{"gitId":"Leeyp"},"content":"Displays a history of food items that have been added to the Fridge","lastModifiedDate":"2021-03-27"},{"lineNumber":315,"author":{"gitId":"Leeyp"},"content":"since it was last cleared.","lastModifiedDate":"2021-03-27"},{"lineNumber":316,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":317,"author":{"gitId":"Leeyp"},"content":"* The Fridge keeps track of all Food items added in its lifetime automatically.","lastModifiedDate":"2021-03-29"},{"lineNumber":318,"author":{"gitId":"Leeyp"},"content":"* Unlike adding Food to a Fridge, which merges the quantity of duplicate Foods together,","lastModifiedDate":"2021-03-29"},{"lineNumber":319,"author":{"gitId":"Leeyp"},"content":"  the history command will not merge the quantities of food.","lastModifiedDate":"2021-03-29"},{"lineNumber":320,"author":{"gitId":"Leeyp"},"content":"  * Thus, the user can use this command to keep track of all occurrences where Food","lastModifiedDate":"2021-03-29"},{"lineNumber":321,"author":{"gitId":"Leeyp"},"content":"  has been added to the Fridge.","lastModifiedDate":"2021-03-29"},{"lineNumber":322,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":323,"author":{"gitId":"Leeyp"},"content":"The data is saved to disk in a text file, with default location as `data/historyData.txt`.","lastModifiedDate":"2021-03-29"},{"lineNumber":324,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":325,"author":{"gitId":"Leeyp"},"content":"* In the event that the data in the text file is corrupted or in an unreadable format, the","lastModifiedDate":"2021-03-29"},{"lineNumber":326,"author":{"gitId":"Leeyp"},"content":"  `history` command may fail to output the contents of the file. Users may have to manually","lastModifiedDate":"2021-03-29"},{"lineNumber":327,"author":{"gitId":"Leeyp"},"content":"   inspect the file to delete the invalid content, or wipe the contents of the file with","lastModifiedDate":"2021-03-29"},{"lineNumber":328,"author":{"gitId":"Leeyp"},"content":"   `history clear`, to resume normal function.","lastModifiedDate":"2021-03-29"},{"lineNumber":329,"author":{"gitId":"Leeyp"},"content":"  * The execution of the FridgeFriend program, however, will not be interrupted.","lastModifiedDate":"2021-03-29"},{"lineNumber":330,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":331,"author":{"gitId":"Leeyp"},"content":"Format: `history`","lastModifiedDate":"2021-03-27"},{"lineNumber":332,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":333,"author":{"gitId":"Leeyp"},"content":"Example of usage:","lastModifiedDate":"2021-03-27"},{"lineNumber":334,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":335,"author":{"gitId":"kwokyto"},"content":"```lang-none","lastModifiedDate":"2021-03-30"},{"lineNumber":336,"author":{"gitId":"Leeyp"},"content":"\u003e\u003e history","lastModifiedDate":"2021-03-27"},{"lineNumber":337,"author":{"gitId":"Leeyp"},"content":"This is the full history of items you\u0027ve added in the fridge:","lastModifiedDate":"2021-03-27"},{"lineNumber":338,"author":{"gitId":"Leeyp"},"content":"  1. Food name: Coke, category: BEVERAGE, expiry: 30-06-2021, stored in: FREEZER, quantity: 5","lastModifiedDate":"2021-03-27"},{"lineNumber":339,"author":{"gitId":"Leeyp"},"content":"  2. Food name: chicken, category: MEAT, expiry: 30-06-2021, stored in: FREEZER, quantity: 200","lastModifiedDate":"2021-03-27"},{"lineNumber":340,"author":{"gitId":"Leeyp"},"content":"  3. Food name: chicken, category: MEAT, expiry: 30-06-2021, stored in: FREEZER, quantity: 300","lastModifiedDate":"2021-03-29"},{"lineNumber":341,"author":{"gitId":"Leeyp"},"content":"```","lastModifiedDate":"2021-03-27"},{"lineNumber":342,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":343,"author":{"gitId":"Leeyp"},"content":"### Clear list history of items added: `history clear`","lastModifiedDate":"2021-03-27"},{"lineNumber":344,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":345,"author":{"gitId":"Leeyp"},"content":"Wipes the data from the history text file.","lastModifiedDate":"2021-03-27"},{"lineNumber":346,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":347,"author":{"gitId":"Leeyp"},"content":"Format: `history clear`","lastModifiedDate":"2021-03-27"},{"lineNumber":348,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":349,"author":{"gitId":"Leeyp"},"content":"Example of usage:","lastModifiedDate":"2021-03-27"},{"lineNumber":350,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":351,"author":{"gitId":"kwokyto"},"content":"```lang-none","lastModifiedDate":"2021-03-30"},{"lineNumber":352,"author":{"gitId":"Leeyp"},"content":"\u003e\u003e history clear","lastModifiedDate":"2021-03-27"},{"lineNumber":353,"author":{"gitId":"Leeyp"},"content":"History successfully cleared!","lastModifiedDate":"2021-03-27"},{"lineNumber":354,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":355,"author":{"gitId":"Leeyp"},"content":"\u003e\u003e history ","lastModifiedDate":"2021-03-27"},{"lineNumber":356,"author":{"gitId":"Leeyp"},"content":"This is the full history of items you\u0027ve added in the fridge:","lastModifiedDate":"2021-03-27"},{"lineNumber":357,"author":{"gitId":"Leeyp"},"content":"```","lastModifiedDate":"2021-03-27"},{"lineNumber":358,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":359,"author":{"gitId":"kwokyto"},"content":"### Get help message: `help`","lastModifiedDate":"2021-03-17"},{"lineNumber":360,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":361,"author":{"gitId":"kwokyto"},"content":"Prints a list of available commands and formats.","lastModifiedDate":"2021-03-17"},{"lineNumber":362,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":363,"author":{"gitId":"kwokyto"},"content":"Format: `help`","lastModifiedDate":"2021-03-17"},{"lineNumber":364,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":365,"author":{"gitId":"kwokyto"},"content":"Example of usage:","lastModifiedDate":"2021-03-17"},{"lineNumber":366,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":367,"author":{"gitId":"kwokyto"},"content":"```lang-none","lastModifiedDate":"2021-03-29"},{"lineNumber":368,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e help","lastModifiedDate":"2021-03-17"},{"lineNumber":369,"author":{"gitId":"kwokyto"},"content":"These are the list of available commands:","lastModifiedDate":"2021-03-17"},{"lineNumber":370,"author":{"gitId":"SimJJ96"},"content":"        add foodName /cat categoryName /exp dd-mm-yyyy /loc storageLocation /qty foodQuantity","lastModifiedDate":"2021-03-26"},{"lineNumber":371,"author":{"gitId":"kwokyto"},"content":"        list","lastModifiedDate":"2021-03-17"},{"lineNumber":372,"author":{"gitId":"kwokyto"},"content":"        list categoryName","lastModifiedDate":"2021-03-17"},{"lineNumber":373,"author":{"gitId":"kwokyto"},"content":"        remove index","lastModifiedDate":"2021-03-17"},{"lineNumber":374,"author":{"gitId":"kwokyto"},"content":"        search searchString","lastModifiedDate":"2021-03-17"},{"lineNumber":375,"author":{"gitId":"kwokyto"},"content":"        expiring","lastModifiedDate":"2021-03-17"},{"lineNumber":376,"author":{"gitId":"kwokyto"},"content":"        help","lastModifiedDate":"2021-03-17"},{"lineNumber":377,"author":{"gitId":"kwokyto"},"content":"        bye","lastModifiedDate":"2021-03-17"},{"lineNumber":378,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":379,"author":{"gitId":"kwokyto"},"content":"This is the list of food categories:","lastModifiedDate":"2021-03-17"},{"lineNumber":380,"author":{"gitId":"kwokyto"},"content":"        [VEGETABLE, FRUIT, MEAT, SEAFOOD, EGG, DAIRY, BEVERAGE, COOKED_DISH, READY_TO_EAT, FROZEN, OTHER]","lastModifiedDate":"2021-03-17"},{"lineNumber":381,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":382,"author":{"gitId":"kwokyto"},"content":"This is the list of storage locations:","lastModifiedDate":"2021-03-17"},{"lineNumber":383,"author":{"gitId":"kwokyto"},"content":"        [FREEZER, UPPER_SHELF, MIDDLE_SHELF, LOWER_SHELF, DRAWERS, FRIDGE_DOOR, OTHER]","lastModifiedDate":"2021-03-17"},{"lineNumber":384,"author":{"gitId":"kwokyto"},"content":"```","lastModifiedDate":"2021-03-17"},{"lineNumber":385,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":386,"author":{"gitId":"kwokyto"},"content":"### Exit the application: `bye`","lastModifiedDate":"2021-03-17"},{"lineNumber":387,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":388,"author":{"gitId":"kwokyto"},"content":"Exits the application.","lastModifiedDate":"2021-03-17"},{"lineNumber":389,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":390,"author":{"gitId":"kwokyto"},"content":"Format: `bye`","lastModifiedDate":"2021-03-17"},{"lineNumber":391,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":392,"author":{"gitId":"kwokyto"},"content":"Example of usage:","lastModifiedDate":"2021-03-17"},{"lineNumber":393,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":394,"author":{"gitId":"kwokyto"},"content":"```lang-none","lastModifiedDate":"2021-03-29"},{"lineNumber":395,"author":{"gitId":"kwokyto"},"content":"\u003e\u003e bye","lastModifiedDate":"2021-03-17"},{"lineNumber":396,"author":{"gitId":"kwokyto"},"content":"Bye! Hope to see you again soon!","lastModifiedDate":"2021-03-17"},{"lineNumber":397,"author":{"gitId":"kwokyto"},"content":"```","lastModifiedDate":"2021-03-17"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":401,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer?","lastModifiedDate":"2020-05-24"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":403,"author":{"gitId":"Leeyp"},"content":"**A**: Copy the `.jar` file along with `data` folder to the target computer and place them together into an empty folder.","lastModifiedDate":"2021-03-27"},{"lineNumber":404,"author":{"gitId":"Vinci-Hu"},"content":"As long as the target computer satisfies our project prerequisites, it can run with the saved data as before.","lastModifiedDate":"2021-03-17"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":406,"author":{"gitId":"Vinci-Hu"},"content":"**Q**: What if I forget the correct format of a command?","lastModifiedDate":"2021-03-17"},{"lineNumber":407,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":408,"author":{"gitId":"Vinci-Hu"},"content":"**A**: You will get a tip if you use any of the command keywords incorrectly.","lastModifiedDate":"2021-03-17"},{"lineNumber":409,"author":{"gitId":"Vinci-Hu"},"content":"Plus, you are always welcomed to use `help` command.","lastModifiedDate":"2021-03-17"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":411,"author":{"gitId":"Vinci-Hu"},"content":"**Q**: How do I report a bug?","lastModifiedDate":"2021-03-17"},{"lineNumber":412,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":413,"author":{"gitId":"Vinci-Hu"},"content":"**A**: You can either create a pull request or state in the issues.","lastModifiedDate":"2021-03-17"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":415,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":417,"author":{"gitId":"SimJJ96"},"content":"* Add food `add FOOD_NAME /cat FOOD_CATEGORY /exp EXPIRY_DATE /loc LOCATION_IN_THE_FRIDGE /qty FOOD_QUANTITY`","lastModifiedDate":"2021-03-26"},{"lineNumber":418,"author":{"gitId":"kwokyto"},"content":"* List food `list`","lastModifiedDate":"2021-03-17"},{"lineNumber":419,"author":{"gitId":"kwokyto"},"content":"* List food by category `list CATEGORY_NAME`","lastModifiedDate":"2021-03-17"},{"lineNumber":420,"author":{"gitId":"Leeyp"},"content":"* List food by storage location `list STORAGE_LOCATION_NAME`  ","lastModifiedDate":"2021-03-27"},{"lineNumber":421,"author":{"gitId":"Vinci-Hu"},"content":"* Remove food `remove FOODNAME /qty QUANITTY_TO_REMOVE`","lastModifiedDate":"2021-03-29"},{"lineNumber":422,"author":{"gitId":"kwokyto"},"content":"* Search for food `search FOOD_NAME`","lastModifiedDate":"2021-03-17"},{"lineNumber":423,"author":{"gitId":"kwokyto"},"content":"* List expiring foods `expiring`","lastModifiedDate":"2021-03-17"},{"lineNumber":424,"author":{"gitId":"kwokyto"},"content":"* List categories with food running low: `runninglow`","lastModifiedDate":"2021-03-25"},{"lineNumber":425,"author":{"gitId":"Leeyp"},"content":"* Modify the minimum quantity limits: `setlimit FOOD_CATEGORY /qty QUANTITY`","lastModifiedDate":"2021-03-27"},{"lineNumber":426,"author":{"gitId":"Leeyp"},"content":"* List history of items added: `history`  ","lastModifiedDate":"2021-03-27"},{"lineNumber":427,"author":{"gitId":"Leeyp"},"content":"* Clear list history of items added: `history clear`  ","lastModifiedDate":"2021-03-27"},{"lineNumber":428,"author":{"gitId":"kwokyto"},"content":"* Get help message `help`","lastModifiedDate":"2021-03-17"},{"lineNumber":429,"author":{"gitId":"kwokyto"},"content":"* Exit application `bye`","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Leeyp":120,"kwokyto":148,"Vinci-Hu":74,"-":35,"SimJJ96":52}},{"path":"docs/diagrams/AddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Vinci-Hu"},"content":"@startuml","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":"!include style.puml","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":"box Command COMMAND_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":"participant \":AddCommand\" as AddCommand COMMAND_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":"box Food FOOD_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":"participant \"foodToAdd:Food\" as NewFood FOOD_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":"participant \"fridge:Fridge\" as Fridge FOOD_COLOR_T3","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":"participant \"checker:UniqueFoodnameChecker\" as Checker FOOD_COLOR_T2","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":"participant \":Food\" as Food FOOD_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"\u0027autoactivate on","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"Vinci-Hu"},"content":"-\u003e AddCommand: create","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"activate AddCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"Vinci-Hu"},"content":"AddCommand -\u003e AddCommand: categoriseAndGenerateFood(params)","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"Vinci-Hu"},"content":"activate AddCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"Vinci-Hu"},"content":"AddCommand -\u003e NewFood **: create","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"Vinci-Hu"},"content":"activate NewFood","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"Vinci-Hu"},"content":"return foodToAdd","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"Vinci-Hu"},"content":"deactivate AddCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"Vinci-Hu"},"content":"return command","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Vinci-Hu"},"content":"-\u003e AddCommand: execute()","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"Vinci-Hu"},"content":"activate AddCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"Vinci-Hu"},"content":"AddCommand -\u003e AddCommand: addFood()","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"Vinci-Hu"},"content":"activate AddCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Vinci-Hu"},"content":"AddCommand-\u003e Fridge: add(foodToAdd)","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"Vinci-Hu"},"content":"activate Fridge","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"Vinci-Hu"},"content":"Fridge -\u003e Checker **: create","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"Vinci-Hu"},"content":"activate Checker","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"Vinci-Hu"},"content":"return checker","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"Vinci-Hu"},"content":"Fridge -\u003e Checker: checker.isFoodnameUnique()","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"Vinci-Hu"},"content":"activate Checker","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"Vinci-Hu"},"content":"Checker -\u003e Fridge: getFridge()","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"Vinci-Hu"},"content":"activate Fridge","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"Vinci-Hu"},"content":"return","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"Vinci-Hu"},"content":"loop food in fridge","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"Vinci-Hu"},"content":"    Checker -\u003e Food: getFoodName()","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"Vinci-Hu"},"content":"    activate Food","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"Vinci-Hu"},"content":"    return existingFoodName","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"Vinci-Hu"},"content":"    opt equals newFoodName","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"Vinci-Hu"},"content":"        Checker --\u003e Fridge: true","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"Vinci-Hu"},"content":"    end","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"Vinci-Hu"},"content":"    return false","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"Vinci-Hu"},"content":"end","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"Vinci-Hu"},"content":"alt Foodname is unique (add new food))","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"Vinci-Hu"},"content":"    Fridge --\u003e AddCommand: food added to fridge","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"Vinci-Hu"},"content":"else add to existing food, update quantity","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"Vinci-Hu"},"content":"    Fridge -\u003e Checker: checker.isParamIdentical()","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"Vinci-Hu"},"content":"    activate Checker","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"Vinci-Hu"},"content":"    return boolean","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"Vinci-Hu"},"content":"    note right","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"Vinci-Hu"},"content":"    If foodname already exist but","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"Vinci-Hu"},"content":"    different location or expiry are specified,","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"Vinci-Hu"},"content":"    a RepetitiveFoodName exception will be thrown","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"Vinci-Hu"},"content":"    end note","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"Vinci-Hu"},"content":"    Fridge -\u003e Fridge: editFoodQuantity()","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"Vinci-Hu"},"content":"    activate Fridge","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"Vinci-Hu"},"content":"    return","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"Vinci-Hu"},"content":"    Fridge --\u003e AddCommand: update quantity on existing food in fridge","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"Vinci-Hu"},"content":"    deactivate Fridge","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"Vinci-Hu"},"content":"    deactivate AddCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"Vinci-Hu"},"content":"end","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"Vinci-Hu"},"content":"destroy Checker","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"Vinci-Hu"},"content":"\u003c--AddCommand:","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"Vinci-Hu"},"content":"deactivate AddCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"Vinci-Hu"},"content":"@enduml","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"Vinci-Hu":77}},{"path":"docs/diagrams/ArchitectureDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"@startuml ArchitectureDiagram","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"Leeyp"},"content":"!include \u003coffice/Concepts/documents\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"Leeyp"},"content":"!include \u003coffice/Users/user\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"Leeyp"},"content":"!include style.puml","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"Leeyp"},"content":"Package \" \"\u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"    Class FridgeFriend FRIDGEFRIEND_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"    Class Utilities UTILITIES_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"    Class Exception EXCEPTION_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"    Class Command COMMAND_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"    Class Food FOOD_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Leeyp"},"content":"}","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"Class \"\u003c$user\u003e\" as User FOOD_COLOR_T2","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"Class \"\u003c$documents\u003e\" as File UTILITIES_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"FridgeFriend -\u003e Utilities","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"Utilities -[UTILITIES_COLOR_T3]--\u003e Command","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"Food -[FOOD_COLOR_T3]-\u003e Utilities","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"Command -[COMMAND_COLOR_T3]-\u003e Food  ","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"Command -[COMMAND_COLOR_T3]-\u003e FridgeFriend","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"Command -[COMMAND_COLOR_T3]\u003e Exception","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"Exception -[EXCEPTION_COLOR_T3]\u003e Utilities","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"Utilities .right[UTILITIES_COLOR_T3].\u003eFile","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Leeyp"},"content":"User ..\u003e Utilities","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"Leeyp"},"content":"@enduml","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"Leeyp":12,"kwokyto":16}},{"path":"docs/diagrams/CommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"!include style.puml","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"skinparam arrowColor COMMAND_COLOR_T4","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"skinparam classBackgroundColor COMMAND_COLOR_T2","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"package Command \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"    class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"    class AddCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"    class RemoveCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"    class ListCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":"    class SearchCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"    class SetLimitCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"    class HelpCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"    class ClearCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":"    class ByeCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"    class RunningLowCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"    class ExpiringCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"    Class HistoryCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"package Fridge \u003c\u003cRectangle\u003e\u003e FOOD_COLOR {","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"package FridgeFriend \u003c\u003cRectangle\u003e\u003e FRIDGEFRIEND_COLOR {","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"package UI \u003c\u003cRectangle\u003e\u003e UTILITIES_COLOR {","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"class Command {","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"  #fridge: Fridge","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"  #isExit: boolean","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"SimJJ96"},"content":"  +execute(): void{abstract}","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"SimJJ96"},"content":"  +setData(fridge: Fridge): void","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"SimJJ96"},"content":"class AddCommand {","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"SimJJ96"},"content":"  -foodToAdd: Food","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"SimJJ96"},"content":"  +execute(): void","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"SimJJ96"},"content":"  -addFood(): void","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"SimJJ96"},"content":"  -showResults(): void","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"SimJJ96"},"content":"  +getMessagePrintedToUser(): String","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"SimJJ96"},"content":"  +categoriseAndGenerateFood(): Food {static}","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"SimJJ96"},"content":"class RemoveCommand {","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"SimJJ96"},"content":"  -foodNameToEdit: String","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"SimJJ96"},"content":"  -foodToBeRemoved: Food","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"SimJJ96"},"content":"  +execute(): void","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"SimJJ96"},"content":"  -removePortion(): void","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"SimJJ96"},"content":"  -checkRunningOUt(): void","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"SimJJ96"},"content":"class ListCommand {","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"SimJJ96"},"content":"  -description: String","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"SimJJ96"},"content":"  -indexShownToUser: int","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"SimJJ96"},"content":"  +execute(): void","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"SimJJ96"},"content":"  -listByCategory(): void","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"SimJJ96"},"content":"  -listByStorageLocation(): void","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"SimJJ96"},"content":"  -listAll(): void","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"SimJJ96"},"content":"class SearchCommand {","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"SimJJ96"},"content":"  -foodName: String","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"SimJJ96"},"content":"  -isFound: boolean","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"SimJJ96"},"content":"  -index: int","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"SimJJ96"},"content":"  +execute(): void","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"SimJJ96"},"content":"  -showResults(): void","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"SimJJ96"},"content":"  +getMessagePrintedToUser(): String","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"SimJJ96"},"content":"  -getSearchByNameMessage(): String","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"SimJJ96"},"content":"  -isContain(message: StringBuilder, food:Food): void","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"SimJJ96"},"content":"  -updateMessage(message: StringBuilder, food:Food): void","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"SimJJ96"},"content":"class SetLimitCommand {","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"SimJJ96"},"content":"  -foodCategory: FoodCategory","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"SimJJ96"},"content":"  -quantity: int","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"SimJJ96"},"content":"  +execute(): void","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"SimJJ96"},"content":"  -getSetLimitMessage(): String","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"SimJJ96"},"content":"class HelpCommand {","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"SimJJ96"},"content":"  - COMMANDS: String {static}","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"SimJJ96"},"content":"  - CATEGORIES: String {static}","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"SimJJ96"},"content":"  - LOCATIONS: String {static}","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"SimJJ96"},"content":"  + execute() : void","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"SimJJ96"},"content":"class ClearCommand {","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"SimJJ96"},"content":"  +execute(): void","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"SimJJ96"},"content":"class ByeCommand {","lastModifiedDate":"2021-03-25"},{"lineNumber":99,"author":{"gitId":"SimJJ96"},"content":"  +isExit(): boolean","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"SimJJ96"},"content":"  +setExit(isExit: boolean): void","lastModifiedDate":"2021-03-25"},{"lineNumber":101,"author":{"gitId":"SimJJ96"},"content":"  +execute(): void","lastModifiedDate":"2021-03-25"},{"lineNumber":102,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":103,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":104,"author":{"gitId":"SimJJ96"},"content":"class RunningLowCommand {","lastModifiedDate":"2021-03-25"},{"lineNumber":105,"author":{"gitId":"SimJJ96"},"content":"  +execute(): void","lastModifiedDate":"2021-03-25"},{"lineNumber":106,"author":{"gitId":"SimJJ96"},"content":"  +getMessage(): String","lastModifiedDate":"2021-03-25"},{"lineNumber":107,"author":{"gitId":"SimJJ96"},"content":"  -updateMessage(foodCategory: FoodCategory): void","lastModifiedDate":"2021-03-25"},{"lineNumber":108,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":109,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":110,"author":{"gitId":"SimJJ96"},"content":"class ExpiringCommand {","lastModifiedDate":"2021-03-25"},{"lineNumber":111,"author":{"gitId":"SimJJ96"},"content":"  -message: String","lastModifiedDate":"2021-03-25"},{"lineNumber":112,"author":{"gitId":"SimJJ96"},"content":"  -index: int","lastModifiedDate":"2021-03-25"},{"lineNumber":113,"author":{"gitId":"SimJJ96"},"content":"  +execute(): void","lastModifiedDate":"2021-03-25"},{"lineNumber":114,"author":{"gitId":"SimJJ96"},"content":"  +updateMessage(food: Food): void","lastModifiedDate":"2021-03-25"},{"lineNumber":115,"author":{"gitId":"SimJJ96"},"content":"  +addToMessage(food: Food): void","lastModifiedDate":"2021-03-25"},{"lineNumber":116,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":117,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":118,"author":{"gitId":"SimJJ96"},"content":"class HistoryCommand {","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"SimJJ96"},"content":"  -description: String","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"SimJJ96"},"content":"  +execute(): void","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"SimJJ96"},"content":"  -isClearHistory(): boolean","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"SimJJ96"},"content":"  -clearHistory(): void {static}","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"SimJJ96"},"content":"  +getHistoryMessage(): String {static}","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"SimJJ96"},"content":"  -printHistory(): void","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"SimJJ96"},"content":"Command ---.down\u003e Fridge: uses","lastModifiedDate":"2021-03-25"},{"lineNumber":128,"author":{"gitId":"SimJJ96"},"content":"Command ---.down\u003e UI: prints with","lastModifiedDate":"2021-03-25"},{"lineNumber":129,"author":{"gitId":"SimJJ96"},"content":"FridgeFriend ---.down\u003e Command: execute \u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":130,"author":{"gitId":"SimJJ96"},"content":"AddCommand --right|\u003e Command","lastModifiedDate":"2021-03-25"},{"lineNumber":131,"author":{"gitId":"SimJJ96"},"content":"RemoveCommand --down|\u003e Command","lastModifiedDate":"2021-03-25"},{"lineNumber":132,"author":{"gitId":"SimJJ96"},"content":"ListCommand ---down|\u003e Command","lastModifiedDate":"2021-03-25"},{"lineNumber":133,"author":{"gitId":"SimJJ96"},"content":"SearchCommand ---up|\u003e Command","lastModifiedDate":"2021-03-30"},{"lineNumber":134,"author":{"gitId":"SimJJ96"},"content":"SetLimitCommand ---down|\u003e Command","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"SimJJ96"},"content":"HelpCommand --up|\u003e Command","lastModifiedDate":"2021-03-25"},{"lineNumber":136,"author":{"gitId":"SimJJ96"},"content":"ClearCommand --up|\u003e Command","lastModifiedDate":"2021-03-25"},{"lineNumber":137,"author":{"gitId":"SimJJ96"},"content":"ByeCommand --down|\u003e Command","lastModifiedDate":"2021-03-25"},{"lineNumber":138,"author":{"gitId":"SimJJ96"},"content":"RunningLowCommand --left|\u003e Command","lastModifiedDate":"2021-03-25"},{"lineNumber":139,"author":{"gitId":"SimJJ96"},"content":"ExpiringCommand ---up|\u003e Command","lastModifiedDate":"2021-03-25"},{"lineNumber":140,"author":{"gitId":"SimJJ96"},"content":"HistoryCommand ---down|\u003e Command","lastModifiedDate":"2021-03-30"},{"lineNumber":141,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":142,"author":{"gitId":"SimJJ96"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"kwokyto":5,"SimJJ96":137}},{"path":"docs/diagrams/ExceptionClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"@startuml ExceptionClassDiagram","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"Leeyp"},"content":"allow_mixing","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"Leeyp"},"content":"!include style.puml","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"Leeyp"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"skinparam arrowColor EXCEPTION_COLOR_T4","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"skinparam classBackgroundColor EXCEPTION_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"Leeyp"},"content":"package Exceptions \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"    package \"Related to User Input\" as ui \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Leeyp"},"content":"        class EmptyDescriptionException","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"Leeyp"},"content":"        class InvalidDateException","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"Leeyp"},"content":"        class InvalidInputException","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"Leeyp"},"content":"        class InvalidQuantityException","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"    package \"Related to Food\" as food \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"        class FoodNameNotFoundException","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"        class InvalidFoodCategoryException","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"Leeyp"},"content":"        class RepetitiveFoodIdentifierException","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"    package \"Related to Storage\" as storage \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"Leeyp"},"content":"        class StorageLoadingException","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"Leeyp"},"content":"        class StorageSavingException","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"Leeyp"},"content":"\u0027 Basic Layout `","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"Leeyp"},"content":"ui -[hidden]down--\u003e storage","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"Leeyp"},"content":"ui -[hidden]up\u003e food","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"Leeyp"},"content":"storage -[hidden]up-\u003e food","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"Leeyp"},"content":"Exceptions -down-|\u003e Exception","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"Leeyp"},"content":"note top of Exception : All Exception Classes\\nin the Exception component \\ninherit from standard Java Exception.","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"Leeyp"},"content":"@enduml","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"Leeyp":23,"kwokyto":13}},{"path":"docs/diagrams/ExpiringSeqeunceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"@startuml","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"!include style.puml","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"box \"Command\\n\" COMMAND_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"participant \":ExpiringCommand\" as ExpiringCommand COMMAND_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"box Food FOOD_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"participant \"fridge:Fridge\" as Fridge FOOD_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"participant \"food:Food\" as Food FOOD_COLOR_T3","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":"-\u003e ExpiringCommand: execute()","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"activate ExpiringCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"loop food in fridge","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":"    ExpiringCommand-\u003e Fridge: getFood()","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"    activate Fridge","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"    opt isExpiring","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"        Fridge -\u003e Food: isExpiring()","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"        activate Food","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":"        return","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"    end","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"    return food","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"end","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"\u003c--ExpiringCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":"deactivate ExpiringCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"@enduml","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"SimJJ96":32}},{"path":"docs/diagrams/FoodClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Vinci-Hu"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":"!include style.puml","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"allow_mixing","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":"skinparam arrowColor FOOD_COLOR_T4","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":"skinparam classBackgroundColor FOOD_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":"skinparam groupInheritance 3","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":"package food \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":"  abstract class Food","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"  package categories \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":"  class Beverage","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"  class CookedDish","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":"  class Dairy","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"Vinci-Hu"},"content":"  class Egg","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"  class Frozen","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"Vinci-Hu"},"content":"  class Fruit","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"Vinci-Hu"},"content":"  class Meat","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"Vinci-Hu"},"content":"  class ReadyToEat","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"Vinci-Hu"},"content":"  class Seafood","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"Vinci-Hu"},"content":"  class Vegetable","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"Vinci-Hu"},"content":"  class Other","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"Vinci-Hu"},"content":"  }","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"Vinci-Hu"},"content":"  enum FoodCategory","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"Vinci-Hu"},"content":"  enum FoodStorageLocation","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"Vinci-Hu"},"content":"  class ExpiryDate","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"Vinci-Hu"},"content":"  class Fridge","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"Vinci-Hu"},"content":"  class UniqueFoodnameChecker","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"Vinci-Hu"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"Vinci-Hu"},"content":"abstract class Food {","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"Vinci-Hu"},"content":"  # FoodCategory category","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"Vinci-Hu"},"content":"  # String foodName;","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"Vinci-Hu"},"content":"  # ExpiryDate expiryDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"Vinci-Hu"},"content":"  # FoodStorageLocation storageLocation;","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"Vinci-Hu"},"content":"  # int quantity;","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"Vinci-Hu"},"content":"  \u003d\u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"Vinci-Hu"},"content":"  .. Constructor ..","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"Vinci-Hu"},"content":"  + public Food(String, FoodCategory, String,","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"Vinci-Hu"},"content":"                    FoodStorageLocation, int)","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"Vinci-Hu"},"content":"  .. Util functions ..","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"Vinci-Hu"},"content":"  + String toString()","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"Vinci-Hu"},"content":"  + boolean isExpiring()","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"Vinci-Hu"},"content":"  .. Some Setter ..","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"Vinci-Hu"},"content":"  + void setExpiryDate(String)","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"Vinci-Hu"},"content":"  + void setQuantity(int quantity)","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"Vinci-Hu"},"content":"  .. Simple Getter ..","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"Vinci-Hu"},"content":"  + int getQuantity()","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"Vinci-Hu"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"Vinci-Hu"},"content":"Food \u003c|-- Beverage","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"Vinci-Hu"},"content":"Food \u003c|-- CookedDish","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"Vinci-Hu"},"content":"Food \u003c|-- Dairy","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"Vinci-Hu"},"content":"Food \u003c|-- Egg","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"Vinci-Hu"},"content":"Food \u003c|-- Frozen","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"Vinci-Hu"},"content":"Food \u003c|-- Fruit","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"Vinci-Hu"},"content":"Food \u003c|-- Meat","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"Vinci-Hu"},"content":"Food \u003c|-- ReadyToEat","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"Vinci-Hu"},"content":"Food \u003c|-- Seafood","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"Vinci-Hu"},"content":"Food \u003c|-- Vegetable","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"Vinci-Hu"},"content":"Food \u003c|-- Other","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"Vinci-Hu"},"content":"class ExpiryDate {","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"Vinci-Hu"},"content":"    - {static} DateTimeFormatter formatter","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"Vinci-Hu"},"content":"    # LocalDate expiry","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"Vinci-Hu"},"content":"    + ExpiryDate(String)","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"Vinci-Hu"},"content":"    + LocalDate getExpiry()","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"Vinci-Hu"},"content":"    + String toString()","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"Vinci-Hu"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"Vinci-Hu"},"content":"Food .right.\u003e ExpiryDate","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"Vinci-Hu"},"content":"class Fridge {","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"Vinci-Hu"},"content":"    - ArrayList\u003cFood\u003e fridge","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"Vinci-Hu"},"content":"    + void add(Food)","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"Vinci-Hu"},"content":"    + int getSize()","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"Vinci-Hu"},"content":"    + Food getFood(int)","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"Vinci-Hu"},"content":"    + void editFoodQuantity(Food, Food)","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"Vinci-Hu"},"content":"    + ArrayList\u003cFood\u003e getFridge()","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"Vinci-Hu"},"content":"    + void clearFridge()","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"Vinci-Hu"},"content":"    + boolean isRunningOut(FoodCategory)","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"Vinci-Hu"},"content":"    + int getTotalQuantity(FoodCategory)","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"Vinci-Hu"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"Vinci-Hu"},"content":"Fridge -down-\u003e \"*\" Food : maintains","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"Vinci-Hu"},"content":"class UniqueFoodnameChecker {","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"Vinci-Hu"},"content":"    - ArrayList\u003cFood\u003e fridge","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"Vinci-Hu"},"content":"    - Food foodToCheck","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"Vinci-Hu"},"content":"    - Food existingFood","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"Vinci-Hu"},"content":"    + UniqueFoodnameChecker(ArrayList\u003cFood\u003e, Food)","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"Vinci-Hu"},"content":"    + Food getExistingFood()","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"Vinci-Hu"},"content":"    + boolean isFoodnameUnique()","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"Vinci-Hu"},"content":"    + boolean isParamIdentical()","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"Vinci-Hu"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"Vinci-Hu"},"content":"Fridge *-right- \"UniqueFoodnameChecker\" : use","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"Vinci-Hu"},"content":"enum FoodStorageLocation {","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"Vinci-Hu"},"content":"    FREEZER","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"Vinci-Hu"},"content":"    UPPER_SHELF","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"Vinci-Hu"},"content":"    MIDDLE_SHELF","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"Vinci-Hu"},"content":"    LOWER_SHELF","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"Vinci-Hu"},"content":"    DRAWERS","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"Vinci-Hu"},"content":"    FRIDGE_DOOR","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"Vinci-Hu"},"content":"    OTHER","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"Vinci-Hu"},"content":"    + {static} boolean contains(String)","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"Vinci-Hu"},"content":"    + {static} FoodStorageLocation convertStringToLocation(String)","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"Vinci-Hu"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"Vinci-Hu"},"content":"Food .right.\u003e FoodStorageLocation","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"Vinci-Hu"},"content":"enum FoodCategory {","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"Vinci-Hu"},"content":"    VEGETABLE","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"Vinci-Hu"},"content":"    FRUIT","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"Vinci-Hu"},"content":"    MEAT","lastModifiedDate":"2021-03-24"},{"lineNumber":121,"author":{"gitId":"Vinci-Hu"},"content":"    SEAFOOD","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"Vinci-Hu"},"content":"    EGG","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"Vinci-Hu"},"content":"    DAIRY","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"Vinci-Hu"},"content":"    BEVERAGE","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"Vinci-Hu"},"content":"    COOKED_DISH","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"Vinci-Hu"},"content":"    READY_TO_EAT","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"Vinci-Hu"},"content":"    FROZEN","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"Vinci-Hu"},"content":"    OTHER","lastModifiedDate":"2021-03-24"},{"lineNumber":129,"author":{"gitId":"Vinci-Hu"},"content":"    - {static} int vegetableMinimumQuantity","lastModifiedDate":"2021-03-24"},{"lineNumber":130,"author":{"gitId":"Vinci-Hu"},"content":"    - {static} int fruitMinimumQuantity","lastModifiedDate":"2021-03-24"},{"lineNumber":131,"author":{"gitId":"Vinci-Hu"},"content":"    - {static} int meatMinimumQuantity","lastModifiedDate":"2021-03-24"},{"lineNumber":132,"author":{"gitId":"Vinci-Hu"},"content":"    - {static} int seafoodMinimumQuantity","lastModifiedDate":"2021-03-24"},{"lineNumber":133,"author":{"gitId":"Vinci-Hu"},"content":"    - {static} int eggMinimumQuantity","lastModifiedDate":"2021-03-24"},{"lineNumber":134,"author":{"gitId":"Vinci-Hu"},"content":"    - {static} int dairyMinimumQuantity","lastModifiedDate":"2021-03-24"},{"lineNumber":135,"author":{"gitId":"Vinci-Hu"},"content":"    - {static} int beverageMinimumQuantity","lastModifiedDate":"2021-03-24"},{"lineNumber":136,"author":{"gitId":"Vinci-Hu"},"content":"    - {static} int cookedMinimumQuantity","lastModifiedDate":"2021-03-24"},{"lineNumber":137,"author":{"gitId":"Vinci-Hu"},"content":"    - {static} int readyMinimumQuantity","lastModifiedDate":"2021-03-24"},{"lineNumber":138,"author":{"gitId":"Vinci-Hu"},"content":"    - {static} int frozenMinimumQuantity","lastModifiedDate":"2021-03-24"},{"lineNumber":139,"author":{"gitId":"Vinci-Hu"},"content":"    - {static} int otherMinimumQuantity","lastModifiedDate":"2021-03-24"},{"lineNumber":140,"author":{"gitId":"Vinci-Hu"},"content":"    + {static} boolean contains(String)","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"Vinci-Hu"},"content":"    + {static} FoodCategory convertStringToFoodCategory(String)","lastModifiedDate":"2021-03-24"},{"lineNumber":142,"author":{"gitId":"Vinci-Hu"},"content":"    + {static} boolean isValidCategory(String)","lastModifiedDate":"2021-03-24"},{"lineNumber":143,"author":{"gitId":"Vinci-Hu"},"content":"    + {static} int getMinimumQuantity(FoodCategory)","lastModifiedDate":"2021-03-24"},{"lineNumber":144,"author":{"gitId":"Vinci-Hu"},"content":"    + {static} void setMinimumQuantity(FoodCategory, int)","lastModifiedDate":"2021-03-24"},{"lineNumber":145,"author":{"gitId":"Vinci-Hu"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":146,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":147,"author":{"gitId":"Vinci-Hu"},"content":"Food .left.\u003e FoodCategory","lastModifiedDate":"2021-03-24"},{"lineNumber":148,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":149,"author":{"gitId":"Vinci-Hu"},"content":"package Exception \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":150,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":151,"author":{"gitId":"Vinci-Hu"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":152,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":153,"author":{"gitId":"Vinci-Hu"},"content":"food ..\u003e Exception","lastModifiedDate":"2021-03-24"},{"lineNumber":154,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":155,"author":{"gitId":"Vinci-Hu"},"content":"\u0027show circle","lastModifiedDate":"2021-03-30"},{"lineNumber":156,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":157,"author":{"gitId":"Vinci-Hu"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"Vinci-Hu":157}},{"path":"docs/diagrams/ListCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Leeyp"},"content":"@startuml ListCommandSequenceDiagram","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"Leeyp"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Leeyp"},"content":"!include style.puml","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Leeyp"},"content":"box \"Command\\n\" COMMAND_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Leeyp"},"content":"Participant \":ListCommand\" as list COMMAND_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Leeyp"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Leeyp"},"content":"box \"Food\\n\" FOOD_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Leeyp"},"content":"Participant \":Fridge\" as fridge FOOD_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Leeyp"},"content":"Participant \":Food\" as food FOOD_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Leeyp"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"Leeyp"},"content":"-\u003e list: execute()","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"Leeyp"},"content":"activate list","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Leeyp"},"content":"alt list all","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"Leeyp"},"content":"        list -\u003e list: getListAllMessage()","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"Leeyp"},"content":"        activate list","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"Leeyp"},"content":"        loop food in fridge","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"Leeyp"},"content":"            list-\u003e fridge: getFoodDescription()","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"Leeyp"},"content":"            activate fridge","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"Leeyp"},"content":"            fridge -\u003e food: getFood()","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Leeyp"},"content":"                activate food","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Leeyp"},"content":"                return","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"Leeyp"},"content":"                return","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"Leeyp"},"content":"                deactivate food","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Leeyp"},"content":"            deactivate fridge","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"Leeyp"},"content":"        end","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"Leeyp"},"content":"        list --\u003e list: list of all Food","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"Leeyp"},"content":"deactivate list","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"Leeyp"},"content":"\u003c--list","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"Leeyp"},"content":"else list by category","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"Leeyp"},"content":"        list -\u003e list: getListByCategoryMessage()","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"Leeyp"},"content":"        activate list","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"Leeyp"},"content":"        loop food in fridge","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"Leeyp"},"content":"            list-\u003e fridge: getMatchCategoryFoodDescription()","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"Leeyp"},"content":"            activate fridge","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"Leeyp"},"content":"            fridge -\u003e food: getFood()","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"Leeyp"},"content":"                activate food","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"Leeyp"},"content":"                return","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"Leeyp"},"content":"                opt food matches category","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"Leeyp"},"content":"                return","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"Leeyp"},"content":"                end","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"Leeyp"},"content":"                deactivate food","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"Leeyp"},"content":"            deactivate fridge","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"Leeyp"},"content":"        end","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"Leeyp"},"content":"        list --\u003e list: list of Food in Category","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"Leeyp"},"content":"deactivate list","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"Leeyp"},"content":"\u003c--list","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"Leeyp"},"content":"else list by location","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"Leeyp"},"content":"        list -\u003e list: getListByStorageLocationMessage()","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"Leeyp"},"content":"        activate list","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"Leeyp"},"content":"        loop food in fridge","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"Leeyp"},"content":"            list-\u003e fridge: getMatchStorageFoodDescription()","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"Leeyp"},"content":"            activate fridge","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"Leeyp"},"content":"            fridge -\u003e food: getFood()","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"Leeyp"},"content":"                activate food","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"Leeyp"},"content":"                return","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"Leeyp"},"content":"                opt food matches storage location","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"Leeyp"},"content":"                return","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"Leeyp"},"content":"                end","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"Leeyp"},"content":"                deactivate food","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"Leeyp"},"content":"            deactivate fridge","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"Leeyp"},"content":"        end","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"Leeyp"},"content":"        list --\u003e list: list of Food in Storage Location","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"Leeyp"},"content":"deactivate list","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"Leeyp"},"content":"\u003c--list","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"Leeyp"},"content":"end","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"Leeyp"},"content":"deactivate list","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"Leeyp"},"content":"@enduml","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"Leeyp":87}},{"path":"docs/diagrams/MainLogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"@startuml MainLogicSequenceDiagram","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"!include style.puml","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"box \"FridgeFriend\\n\" FRIDGEFRIEND_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"Participant \":FridgeFriend\" as fridgefriend FRIDGEFRIEND_COLOR","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"end box","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"box Utilities UTILITIES_COLOR_T1","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"Participant \":Ui\" as ui UTILITIES_COLOR","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"Participant \":Parser\" as parser UTILITIES_COLOR","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"end box","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"box Command COMMAND_COLOR_T1","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"Participant \"command:Command\" as command COMMAND_COLOR","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"end box","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"box Exception EXCEPTION_COLOR_T1","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"Participant \"e:Exception\" as exception EXCEPTION_COLOR","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"end box","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"autoactivate on","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"fridgefriend-\u003efridgefriend: run()","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"loop !isExit","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"    fridgefriend -\u003e ui: getNextLine()","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"    return userInput","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"    fridgefriend -\u003e parser: getCommand(userInput)","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"    create command","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"    parser -\u003e command: constructor()","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"    return command","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"    return command","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"    destroy parser","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"    note right of command","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"    Both //contructor()// and //execute()//","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"    of the //Command// object can","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"    throw an //Exception// object","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"    up to //FridgeFriend//.","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"    end note","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"    fridgefriend -\u003e fridgefriend: executeCommand()","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"    fridgefriend -\u003e command: execute()","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":"    return","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"    destroy command","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"    return","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"    end","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"kwokyto"},"content":"fridgefriend --\u003e fridgefriend","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"kwokyto"},"content":"@enduml","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"kwokyto":53}},{"path":"docs/diagrams/RemoveSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"@startuml","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"!include style.puml","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":"box \"Command\\n\" COMMAND_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"participant \":RemoveCommand\" as RemoveCommand COMMAND_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"box Food FOOD_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"participant \"fridge:Fridge\" as Fridge FOOD_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"participant \":Food\" as Food FOOD_COLOR_T3","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"-\u003e RemoveCommand: execute()","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":"activate RemoveCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"RemoveCommand -\u003e RemoveCommand: findFoodByName(foodNameToEdit: String)","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"activate RemoveCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"loop food in fridge","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"    RemoveCommand -\u003e Fridge: getFood()","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"    activate Fridge","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"    opt equals foodNameToEdit","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":"        Fridge -\u003e Food: getFoodName()","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"        activate Food","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"        return food","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"    end","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":"    return food","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"end","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":"deactivate RemoveCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"RemoveCommand -\u003e RemoveCommand: removePortion()","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"    activate RemoveCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"alt newQuantity \u003e 0","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"    RemoveCommand -\u003e Fridge: getFood()","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"SimJJ96"},"content":"    activate Fridge","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"SimJJ96"},"content":"    Fridge -\u003e Food: setQuantity()","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"SimJJ96"},"content":"    activate Food","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"SimJJ96"},"content":"    return","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"SimJJ96"},"content":"    return","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"SimJJ96"},"content":"    deactivate Fridge","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"SimJJ96"},"content":"else newQuantity \u003d\u003d 0","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"SimJJ96"},"content":"    RemoveCommand -\u003e Fridge: remove()","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"SimJJ96"},"content":"    activate Fridge","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"SimJJ96"},"content":"    return","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"SimJJ96"},"content":"    deactivate Fridge","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"SimJJ96"},"content":"    note right","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"SimJJ96"},"content":"    if newQuantity is \u003c0","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"SimJJ96"},"content":"    InvalidQuantityExpcetion","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"SimJJ96"},"content":"    will be thrown","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"SimJJ96"},"content":"    end note","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"SimJJ96"},"content":"end","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"SimJJ96"},"content":"deactivate RemoveCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"SimJJ96"},"content":"destroy Food","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"SimJJ96"},"content":"\u003c-- RemoveCommand:","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"SimJJ96"},"content":"deactivate RemoveCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"SimJJ96"},"content":"@enduml","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"SimJJ96":60}},{"path":"docs/diagrams/RunningLowSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"@startuml","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"!include style.puml","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":"box \"Command\\n\" COMMAND_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"participant \":RunningLowCommand\" as RunningLowCommand COMMAND_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"box Food FOOD_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"participant \"fridge:Fridge\" as Fridge FOOD_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"participant \"foodCategory :FoodCategory\" as FoodCategory FOOD_COLOR_T3","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"participant \"food:Food\" as Food FOOD_COLOR_T4","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":"-\u003e RunningLowCommand: execute()","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"activate RunningLowCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"loop foodCategory in FoodCategory","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":"    RunningLowCommand -\u003e FoodCategory: getFoodCategory()","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"    activate FoodCategory","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"    return foodCategory","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"    RunningLowCommand -\u003e Fridge: isRunningOut(foodCategory)","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":"    activate Fridge","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"    Fridge -\u003e Fridge: getTotalQuantity()","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"    activate Fridge","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"    loop food in Fridge","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":"        Fridge -\u003e Food: getFoodCategory()","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"        activate Food","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":"        return foodCategory1","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":"        opt foodCategory1 equals foodCategory","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"            Fridge -\u003e Food: getQuantity()","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"            activate Food","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"            return","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"        end","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"    end","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"SimJJ96"},"content":"    return totalQuantity","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"SimJJ96"},"content":"    Fridge -\u003e FoodCategory: getMinimumQuantity()","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"SimJJ96"},"content":"    activate FoodCategory","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"SimJJ96"},"content":"    return","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"SimJJ96"},"content":"    alt totalQuantity \u003c MinimumQuantity","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"SimJJ96"},"content":"        return","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"SimJJ96"},"content":"    else isStockUp","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"SimJJ96"},"content":"        RunningLowCommand -\u003e RunningLowCommand: message","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"SimJJ96"},"content":"        activate RunningLowCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"SimJJ96"},"content":"        return","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"SimJJ96"},"content":"    end","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"SimJJ96"},"content":"end","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"SimJJ96"},"content":"return","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"SimJJ96"},"content":"deactivate RunningLowCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"SimJJ96"},"content":"@enduml","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"SimJJ96":52}},{"path":"docs/diagrams/SearchSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"@startuml","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"!include style.puml","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":"box \"Command\\n\" COMMAND_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"participant \":SearchCommand\" as SearchCommand COMMAND_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"box Food FOOD_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"participant \"fridge:Fridge\" as Fridge FOOD_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"participant \"food:Food\" as Food FOOD_COLOR_T3","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"-\u003e SearchCommand: execute()","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":"activate SearchCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"SearchCommand-\u003e SearchCommand: showResults()","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"activate SearchCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":"SearchCommand-\u003e SearchCommand: getMessagePrintedToUser()","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"activate SearchCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"loop food in fridge","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"    SearchCommand -\u003e Fridge: getFood()","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"    activate Fridge","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":"    opt contains foodName","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"        Fridge -\u003e Food: getFoodName()","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"        activate Food","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"        return food","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"    end","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":"    return food","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":"end","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"alt isFound","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"    return","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"else !isFound","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"    SearchCommand -\u003e SearchCommand: getMessagePrintedToUser","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"SimJJ96"},"content":"    activate SearchCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"SimJJ96"},"content":"    return","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"SimJJ96"},"content":"end","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"SimJJ96"},"content":"return","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"SimJJ96"},"content":"return","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"SimJJ96"},"content":"deactivate SearchCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"SimJJ96"},"content":"@enduml","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"SimJJ96":43}},{"path":"docs/diagrams/SetLimitSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"@startuml","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"!include style.puml","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":"box \"Command\\n\" COMMAND_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"participant \":SetLimitCommand\" as SetLimitCommand COMMAND_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"box Food FOOD_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"participant \"foodCategory:FoodCategory\" as FoodCategory FOOD_COLOR_T3","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"-\u003e SetLimitCommand: execute()","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"activate SetLimitCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"SetLimitCommand-\u003e FoodCategory: setMinimumQuantity(parameters)","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"activate FoodCategory","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"return","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":"return","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"@enduml","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"SimJJ96":21}},{"path":"docs/diagrams/UtilitiesClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"@startuml UtilitiesClassDiagram","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"allow_mixing","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"!include style.puml","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"skinparam arrowColor UTILITIES_COLOR_T4","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"skinparam classBackgroundColor UTILITIES_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"actor User","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"package Utilities \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"    class Ui","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"    class LoggerHandler","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"    class Storage","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"    class Parser","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"package \"/data\" \u003c\u003cfolder\u003e\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"    file limitsData UTILITIES_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"    file fridgeData UTILITIES_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"package Food \u003c\u003cRectangle\u003e\u003e FOOD_COLOR {","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"package Exception \u003c\u003cRectangle\u003e\u003e EXCEPTION_COLOR {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"package Command \u003c\u003cRectangle\u003e\u003e COMMAND_COLOR {","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"class Ui {","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"  - {static} scanner: Scanner","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"  + {static} String getNextLine()","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"  + {static} void printMessage()","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"  + {static} void printWelcomeMessage()","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"  + {static} void printByeMessage()","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"  + {static} void printExceptionMessage()","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"class LoggerHandler {","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"  - {static} logger: Logger","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"  + {static} void logInfo(String message)","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":"  + {static} void logWarning(String message)","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"  + {static} void logSevere(String message)","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"class Storage {","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"kwokyto"},"content":"  - {static} DATA_FILE_PATH: String","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"kwokyto"},"content":"  - {static} LIMITS_FILE_PATH: String","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"kwokyto"},"content":"  - {static} DIRECTORY: String","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"kwokyto"},"content":"  - {static} fridge: Fridge","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"kwokyto"},"content":"  + {static} void load(Fridge fridgeInput)","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"kwokyto"},"content":"  + {static} void save(Fridge fridgeInput)","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"kwokyto"},"content":"class Parser {","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"kwokyto"},"content":"  - {static} FOOD_DATA_ARGS_FORMAT: Pattern","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"kwokyto"},"content":"  - {static} REMOVE_ARGS_FORMAT: Pattern","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"kwokyto"},"content":"  - {static} SET_LIMIT_ARGS_FORMAT: Pattern","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"kwokyto"},"content":"  + {static} Command getCommand(String input)","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"kwokyto"},"content":"  - {static} Command parseFoodDescription(String foodDescription)","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"kwokyto"},"content":"  - {static} Command parseRemoveDescription(String removeDescription)","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"kwokyto"},"content":"  - {static} Command parseSetLimitDescription(String description)","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"kwokyto"},"content":"  + {static} int parseIntegerQuantity(String description)","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":68,"author":{"gitId":"kwokyto"},"content":"\u0027 Basic Layout \u0027","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"kwokyto"},"content":"LoggerHandler -left[hidden]-\u003e Ui","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"kwokyto"},"content":"LoggerHandler -down[hidden]-\u003e Parser","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"kwokyto"},"content":"Parser -left[hidden]-\u003e Storage","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"kwokyto"},"content":"Ui -down[hidden]-\u003e Storage","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"kwokyto"},"content":"Command -right[hidden]-\u003e Exception","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"kwokyto"},"content":"\"/data\" -right[hidden]-\u003e Food","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"kwokyto"},"content":"Food -right[hidden]-\u003e Exception","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"kwokyto"},"content":"Exception -right[hidden]-\u003e Command","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"kwokyto"},"content":"Parser -down[hidden]-\u003e \"/data\"","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"kwokyto"},"content":"User -down-\u003e Ui : interacts with","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"kwokyto"},"content":"FridgeFriend -right-\u003e Ui : prints with","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"kwokyto"},"content":"FridgeFriend -right-\u003e Storage : uses","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"kwokyto"},"content":"Storage .up.\u003e Ui : prints with","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"kwokyto"},"content":"Storage .right.\u003e Parser : uses","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"kwokyto"},"content":"Storage -down-\u003e \"/data\" : creates and writes","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"kwokyto"},"content":"Storage .down.\u003e Food : loads and saves","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"kwokyto"},"content":"Storage .down.\u003e Exception : throws","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"kwokyto"},"content":"Parser .down.\u003e Exception : throws","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"kwokyto"},"content":"Parser .down.\u003e Command : gets","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":91,"author":{"gitId":"kwokyto"},"content":"note top of LoggerHandler : Used by all other classes\\nfor logging purposes","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":93,"author":{"gitId":"kwokyto"},"content":"@enduml","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"kwokyto":93}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"@startuml style","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"/\u0027","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":" \u0027 @@kwokyto-reused","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":" \u0027Reused from https://github.com/nus-cs2113-AY2021S2/addressbook-level3/blob/master/docs/diagrams/style.puml","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":" \u0027/","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"!define FRIDGEFRIEND_COLOR #696969","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"!define FRIDGEFRIEND_COLOR_T1 #808080","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"!define UTILITIES_COLOR #1D8900","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"!define UTILITIES_COLOR_T1 #83E769","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"!define UTILITIES_COLOR_T2 #3FC71B","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"!define UTILITIES_COLOR_T3 #166800","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"!define UTILITIES_COLOR_T4 #0E4100","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"!define DATA_COLOR #3FC71B","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"!define COMMAND_COLOR #3333C4","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"!define COMMAND_COLOR_T1 #C8C8FA","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"!define COMMAND_COLOR_T2 #6A6ADC","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"!define COMMAND_COLOR_T3 #1616B0","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"!define COMMAND_COLOR_T4 #101086","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"!define FOOD_COLOR #9D0012","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":"!define FOOD_COLOR_T1 #FFABC8","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"!define FOOD_COLOR_T2 #E41F36","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"!define FOOD_COLOR_T3 #7B000E","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"!define FOOD_COLOR_T4 #51000A","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"!define EXCEPTION_COLOR #A38300","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"!define EXCEPTION_COLOR_T1 #FFE374","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"!define EXCEPTION_COLOR_T2 #EDC520","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"!define EXCEPTION_COLOR_T3 #806600","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"!define EXCEPTION_COLOR_T4 #544400","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":"skinparam BackgroundColor #FFFFFFF","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"skinparam Shadowing false","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"skinparam Class {","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"kwokyto"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"kwokyto"},"content":"    BorderThickness 1","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"kwokyto"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"kwokyto"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"kwokyto"},"content":"    FontName Arial","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"kwokyto"},"content":"skinparam Actor {","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"kwokyto"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"kwokyto"},"content":"    Color USER_COLOR","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"kwokyto"},"content":"    FontName Arial","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"kwokyto"},"content":"skinparam Sequence {","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"kwokyto"},"content":"    MessageAlign center","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"kwokyto"},"content":"    BoxFontSize 15","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"kwokyto"},"content":"    BoxPadding 0","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"kwokyto"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2021-03-21"},{"lineNumber":67,"author":{"gitId":"kwokyto"},"content":"    FontName Arial","lastModifiedDate":"2021-03-21"},{"lineNumber":68,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-21"},{"lineNumber":69,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":70,"author":{"gitId":"kwokyto"},"content":"skinparam Participant {","lastModifiedDate":"2021-03-21"},{"lineNumber":71,"author":{"gitId":"kwokyto"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2021-03-21"},{"lineNumber":72,"author":{"gitId":"kwokyto"},"content":"    Padding 20","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"kwokyto"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2021-03-21"},{"lineNumber":76,"author":{"gitId":"kwokyto"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2021-03-21"},{"lineNumber":77,"author":{"gitId":"kwokyto"},"content":"skinparam Shadowing false","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"kwokyto"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2021-03-21"},{"lineNumber":79,"author":{"gitId":"kwokyto"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2021-03-21"},{"lineNumber":80,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":81,"author":{"gitId":"kwokyto"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"kwokyto"},"content":"skinparam arrowColor #black","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"kwokyto"},"content":"skinparam ParticipantBorderColor Black","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"kwokyto"},"content":"skinparam ActorBackgroundColor Black","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"kwokyto"},"content":"skinparam SequenceLifeLineBorderColor Black","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"kwokyto"},"content":"skinparam SequenceGroupBodyBackgroundColor transparent","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"kwokyto"},"content":"skinparam SequenceGroupBackgroundColor White","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"kwokyto"},"content":"skinparam SequenceBoxBorderColor Black","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"kwokyto"},"content":"skinparam SequenceBoxFontColor Black","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"kwokyto"},"content":"hide footbox","lastModifiedDate":"2021-03-21"},{"lineNumber":92,"author":{"gitId":"Vinci-Hu"},"content":"hide empty members","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"kwokyto"},"content":"hide circle","lastModifiedDate":"2021-03-21"},{"lineNumber":94,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"kwokyto"},"content":"@enduml","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"kwokyto":92,"Vinci-Hu":2,"SimJJ96":1}},{"path":"docs/team/joohwan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"joohwan58"},"content":"# Kim Joohwan - Project Portfolio Page","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2021-03-04"},{"lineNumber":4,"author":{"gitId":"joohwan58"},"content":"This is a student project for university software development course.","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":6,"author":{"gitId":"joohwan58"},"content":"I am one of the contributors to the FridgeFriend project.","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":8,"author":{"gitId":"joohwan58"},"content":"## Project: FridgeFriend","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"joohwan58"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"joohwan58"},"content":"FridgeFriend is an app that helps you keep track of food in your fridge. It is optimised for use on a command line interface(CLI).","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2021-03-04"},{"lineNumber":12,"author":{"gitId":"joohwan58"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"joohwan58"},"content":"v1.0 tasks: implement the ability to save the data across different sessions.","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"joohwan58"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"joohwan58"},"content":"Code contributions:","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"joohwan58"},"content":"- Implemented the \u0027Save\u0027 class to allow for saving of data into a text file","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"joohwan58"},"content":"- Modified the \u0027Food\u0027 class to better work with the \u0027Save\u0027 class","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"joohwan58"},"content":"- Created new exceptions to handle possible errors with \u0027Save\u0027 class","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"joohwan58"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"joohwan58"},"content":"Docs:","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"joohwan58"},"content":"- Added explanation of how to transfer save data between devices","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"joohwan58"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"joohwan58"},"content":"Team contributions:","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"joohwan58"},"content":"- Help review PRs and suggest changes","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"joohwan58"},"content":"- Give suggestions and assist in meetings","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"joohwan58":20,"-":5}},{"path":"docs/team/kwokyto.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Ryan Kwok - Project Portfolio Page","lastModifiedDate":"2021-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"This is a student project for university software development course.","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"I am one of the contributors to the `FridgeFriend` project.","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"## Project: `FridgeFriend`","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"`FridgeFriend` is an app for managing food in the fridge, optimised for use via a Command Line Interface (CLI).","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"If you can type fast, `FridgeFriend` can track your cold or frozen groceries faster and easier than any other apps.","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"It is written in Java, and has more than 4.3kLoC.","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"## Summary of Contributions","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"Given below are my contributions to the project","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"### New Features","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"- Added the ability to display a help message","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"  - What it does: Provides the user with a list of available commands and formats.","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"  - Justification: Allows the user the ease of using commands without having to memorise them.","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"  - Pull request: ([#49](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/49))","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"- Added the ability to search for items that are expiring","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"  - What it does: Allows the user to get a list of all food items that are going to expire in a week.","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"  - Justification: Improves the product signicantly because a user can effectively track the status of all food items in the fridge with a single command.","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"  - Pull request: ([#66](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/66))","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"- Added a warning feature for food that is running low","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"  - What it does: Sends the user a warning if a removal of a food item brings the total food quanitity of that category below a specified limit.","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"  - Justification: Allows the user to better track the relative quantity of food in the fridge.","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"  - Pull request: ([#112](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/112))","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"- Added the ability to list all food categories that are running low","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"  - What it does: Provides the user with a list of food categories that have food quanities below the specified limit","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"  - Justification: Allows the user to easily create a shopping list of items based on food categories","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"  - Pull request: ([#114](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/114))","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"- Added the ability for users to specify the minimum quantity of food for each category","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"  - What it does: Allows the user to modify the lower quantity limit for each category","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"  - Justification: Allows for personalisation of fridge, since different users have differing requirements and preferences for the quantity of each food category","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"  - Pull request: ([#115](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/115))","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"- Code contributed: more than 1600 lines of code ([RepoSense](https://nus-cs2113-ay2021s2.github.io/tp-dashboard/?search\u003dkwokyto))","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"kwokyto"},"content":"### Enhancements to Existing Features","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"kwokyto"},"content":"- Write and refactored major classes ([#44](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/45))","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"kwokyto"},"content":"  - `Fridge`","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"kwokyto"},"content":"  - `Parser`","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"kwokyto"},"content":"  - `Ui`","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"kwokyto"},"content":"  - `ByeCommand`","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"kwokyto"},"content":"  - `InvalidIndexException`","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"kwokyto"},"content":"  - `InvalidInputException`","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"kwokyto"},"content":"- Write additional tests for `Parser` class ([#47](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/47))","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"kwokyto"},"content":"- Write `Logger` class ([#51](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/51))","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"kwokyto"},"content":"- Write logging for `FridgeFriend` ([#52](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/52))","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"kwokyto"},"content":"- Improve Coding Standards for `Storage` class ([#68](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/68))","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"kwokyto"},"content":"### Documentation","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"kwokyto"},"content":"- User Guide","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"kwokyto"},"content":"  - Added introduction ([#75](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/75/))","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"kwokyto"},"content":"  - Added documentation for the feature `expiring` ([#69](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/69))","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"kwokyto"},"content":"  - Added documentation for the features `remove`, `help`, and `bye` ([#75](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/75/))","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"kwokyto"},"content":"  - Standardised input/output format for existing documentation of all features ([#75](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/75/))","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"kwokyto"},"content":"  - Added documentation for the features `runninglow` and `setlimit` ([#106](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/106))","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"kwokyto"},"content":"- Developer Guide","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"kwokyto"},"content":"  - Added implementation details of the `Utilities` component ([#106](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/106))","lastModifiedDate":"2021-03-22"},{"lineNumber":71,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"kwokyto"},"content":"### Community","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"kwokyto"},"content":"- Pull Requests reviewed with non-trivial review comments (","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"kwokyto"},"content":"    [#38](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/38)","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"kwokyto"},"content":"    [#54](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/54)","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"kwokyto"},"content":"    [#56](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/56)","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"kwokyto"},"content":"    [#61](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/61)","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"kwokyto"},"content":"    [#93](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/93)","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"kwokyto"},"content":"    [#94](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/94)","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"kwokyto"},"content":"    [#108](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/108)","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"kwokyto"},"content":"    [#110](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/110))","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"kwokyto"},"content":"- Contributed to forum discussions (examples:","lastModifiedDate":"2021-03-21"},{"lineNumber":84,"author":{"gitId":"kwokyto"},"content":"    [1](https://github.com/nus-cs2113-AY2021S2/forum/issues/45)","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"kwokyto"},"content":"    [2](https://github.com/nus-cs2113-AY2021S2/forum/issues/49))","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"kwokyto"},"content":"- Reported bugs and suggestions for other teams in the class (","lastModifiedDate":"2021-03-22"},{"lineNumber":87,"author":{"gitId":"kwokyto"},"content":"    [#xx](placeholder))","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"kwokyto":82,"-":5}},{"path":"docs/team/leeyp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Lee Yang Peng- Project Portfolio Page","lastModifiedDate":"2021-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2021-03-04"},{"lineNumber":4,"author":{"gitId":"Leeyp"},"content":"This is a student project for university software development course.","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"Leeyp"},"content":"I am one of the contributors to the FridgeFriend project.","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Leeyp"},"content":"## Project: FridgeFriend","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Leeyp"},"content":"FridgeFriend is an app for managing food in the fridge, optimised for use via a Command Line Interface (CLI).","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"Leeyp"},"content":"If you can type fast, FridgeFriend can track your cold or frozen groceries faster and easier than any other apps.","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"Leeyp"},"content":"It is written in Java.","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Summary of Contributions","lastModifiedDate":"2021-03-04"},{"lineNumber":16,"author":{"gitId":"Leeyp"},"content":"Given below are my contributions to the project:","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Leeyp"},"content":"`v1.0 tasks`: In charge of implementing the skeletal version of FridgeFriend.","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Leeyp"},"content":"**Code contributed**: [RepoSense Link](https://nus-cs2113-ay2021s2.github.io/tp-dashboard/?search\u003dleeyp)","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Leeyp"},"content":"**Version 1.0**","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Leeyp"},"content":"- Implemented the skeletal version of FridgeFriend.","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Leeyp"},"content":"- Created preliminary J-Unit tests for the `Food` Class.","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Leeyp"},"content":"- Contributed to defensive code by adding logging and assertion statements.","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Leeyp"},"content":"**Documentation**","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"Leeyp"},"content":"- User Guide","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"Leeyp"},"content":"    - Added documentation for the command `search` ([#72](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/72))","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"Leeyp"},"content":"**Community**","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"Leeyp"},"content":"- Review pull requests and help maintain group repo","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"Leeyp"},"content":"- Gave suggestions and help debug in weekly meetings","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"Leeyp"},"content":"- [Contributed to Class forum discussions](https://nus-cs2113-ay2021s2.github.io/dashboards/contents/forum-activities.html#1-lee-peng-leeyp-21-posts) ","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Leeyp":27,"-":8}},{"path":"docs/team/simjingjie.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Sim Jing Jie- Project Portfolio Page","lastModifiedDate":"2021-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2021-03-04"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"This is a student project for university software development course.","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"I am one of the contributors to FridgeFriend project.","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"### Summary of Contributions","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"- **Basic Feature** `add`: Added the ability to add a food item to the fridge","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"    * What it does: Add the food item that the user specify into a list.","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"    * Pull request: ","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"        - `add` ([#38](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/38))","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"        - JUnit-Test-Add ([#54](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/54))","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"- **Basic Feature** `remove`: Added the ability to remove a food item from the fridge","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"    * What it does: Remove the index of the food item that the user specify. ","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"    * Pull request:","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":"        - `remove` ([#38](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/38))","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"        - JUnit-Test-Remove ([#56](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/56))","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"- **Basic Feature** `search`: Added the ability to search a specific food item from the fridge","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"    * What it does: Search the specific food item that the user specify.","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":"    * Pull request:","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"        - `search` ([#38](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/38))","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"        - JUnit-Test-Search ([#58](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/58))","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":"- **Basic Feature** `list`: Added the ability to list the item by a category or list all the items","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"    * What it does: list all the food items in the fridge or list the food items by a category. ","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":"    * Pull request:","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":"        - `list` ([#38](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/38))","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"        - JUnit-Test-List([#60](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/60))","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"    ","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"- **Code contributed**: [RepoSense Link](https://nus-cs2113-ay2021s2.github.io/tp-dashboard/?search\u003dSimjj96)","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"- **Documentation**","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"SimJJ96"},"content":"    - User Guide","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"SimJJ96"},"content":"        - Added documentation for the command `add`","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"SimJJ96"},"content":"    ","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"SimJJ96"},"content":"- **Community**","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"SimJJ96"},"content":"    - Review pull requests and maintain group repo","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"-":4,"SimJJ96":37}},{"path":"docs/team/wenqihu.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Hu Wenqi - Project Portfolio Page","lastModifiedDate":"2021-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2021-03-04"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":"This is a student project for university software development course.","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":"I am one of the contributors to the FridgeFriend project.","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2021-03-04"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":"Iter 1: In charge of the food related classes and enums","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":"- **Code contributed**: [RepoSense Link](https://nus-cs2113-ay2021s2.github.io/tp-dashboard/?search\u003dVinci-Hu)","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"- **Version 1.0**","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":"([#39](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/39))","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"([#41](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/41))","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":"([#64](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/64))","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"Vinci-Hu"},"content":"  -  In charge of the food related classes and enums","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"     - `Food`","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Vinci-Hu"},"content":"     - `FoodCategory`","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Vinci-Hu"},"content":"     - `FoodStorageLocation`","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Vinci-Hu"},"content":"    - J-Unit tests for `Food`","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Vinci-Hu"},"content":"    - Write logging and add asserts","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Vinci-Hu"},"content":"- **Version 2.0**","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"Vinci-Hu"},"content":"([#110](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/110))","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"Vinci-Hu"},"content":"([#111](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/111))","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"Vinci-Hu"},"content":"  -  In charge of the weight implementation for add and remove","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"Vinci-Hu"},"content":"      - `UniqueFoodnameChecker`","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"Vinci-Hu"},"content":"      - `ClearCommand`","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"Vinci-Hu"},"content":"      - `InvalidQuantityException`","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"Vinci-Hu"},"content":"      - `RepetitiveFoodIdentifierException`","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"Vinci-Hu"},"content":"      - `FoodNameNotFoundException`","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"Vinci-Hu"},"content":"      - `Fridge` modification","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"Vinci-Hu"},"content":"      - `AddCommand` modification","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"Vinci-Hu"},"content":"      - `RemoveCommand` modification","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"Vinci-Hu"},"content":"      - `Parser` modification","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"Vinci-Hu"},"content":"    - J-unit tests for Add and Remove commands","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"Vinci-Hu"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"Vinci-Hu"},"content":"- **Documentation**","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"Vinci-Hu"},"content":"  - User Guide","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"Vinci-Hu"},"content":"  ([#67](https://github.com/AY2021S2-CS2113-T10-1/tp/pull/67))","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"Vinci-Hu"},"content":"    - Added documentation for the command `list` ","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"Vinci-Hu"},"content":"    - Added FAQs ","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"Vinci-Hu"},"content":"  - Developer Guide","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"Vinci-Hu"},"content":"    - Add Class Diagram for Food Package","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"Vinci-Hu"},"content":"    - Added implementation details of the `xxx` feature ","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"Vinci-Hu"},"content":"- **Community**","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"Vinci-Hu"},"content":"  - Review pull requests and help maintain group repo","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"Vinci-Hu"},"content":"  - Gave suggestions and help debug in weekly meetings","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Vinci-Hu":45,"-":6}},{"path":"src/main/java/seedu/fridgefriend/FridgeFriend.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.command.Command;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":"import seedu.fridgefriend.exception.FoodNameNotFoundException;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidInputException;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":"import seedu.fridgefriend.exception.InvalidQuantityException;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":"import seedu.fridgefriend.exception.RepetitiveFoodIdentifierException;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.food.Fridge;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.LoggingHandler;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.Parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.Storage;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.Ui;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":" * FridgeFriend is an app for managing food in the fridge, optimised for use via a Command Line Interface (CLI).","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":" * If you can type fast, `FridgeFriend` can track your cold or frozen groceries faster and easier than any other apps.","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":" * It is written in Java, and has more than 1.5kLoC.","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":" * ","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":" * @author Hu Wen Qi","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":" * @author Kim Joohwan","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":" * @author Lee Yang Peng","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":" * @author Ryan Kwok","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":" * @author Sing Jing Jie","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":" * @version 1.0","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"public class FridgeFriend {","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"    private static boolean isExit \u003d false;","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"    public static Fridge fridge \u003d new Fridge();","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"    //@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"    public FridgeFriend() {","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"        new Ui();","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"        new LoggingHandler();","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"        LoggingHandler.logInfo(\"FridgeFriend application initialised.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"        new Storage();","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"        Ui.printWelcomeMessage();","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"        Storage.load(fridge);","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"        run();","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"        Storage.save(fridge);","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":"        Ui.printByeMessage();","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"kwokyto"},"content":"    private static void run() {","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"        LoggingHandler.logInfo(\"Main programme loop started.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"kwokyto"},"content":"        while (!isExit) {","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"kwokyto"},"content":"            try {","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"kwokyto"},"content":"                String input \u003d Ui.getNextLine();","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"kwokyto"},"content":"                Command command \u003d Parser.getCommand(input);","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"kwokyto"},"content":"                executeCommand(command);","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"kwokyto"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"kwokyto"},"content":"            } catch (Exception exception) {","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"kwokyto"},"content":"                Ui.printExceptionMessage(exception);","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"kwokyto"},"content":"                LoggingHandler.logInfo(\"Error found.\", exception);","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"kwokyto"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"kwokyto"},"content":"        LoggingHandler.logInfo(\"Main programme loop exited.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"kwokyto"},"content":"    private static void executeCommand(Command command) throws InvalidInputException,","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"kwokyto"},"content":"            RepetitiveFoodIdentifierException, InvalidQuantityException, FoodNameNotFoundException {","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"kwokyto"},"content":"        command.setData(fridge);","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"kwokyto"},"content":"        command.execute();","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"kwokyto":57,"Vinci-Hu":3,"SimJJ96":8}},{"path":"src/main/java/seedu/fridgefriend/command/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidDateException;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.exception.InvalidQuantityException;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":"import seedu.fridgefriend.exception.RepetitiveFoodIdentifierException;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.categories.Beverage;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.categories.CookedDish;","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.categories.Dairy;","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.categories.Egg;","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.categories.Frozen;","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.categories.Fruit;","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.categories.Meat;","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.categories.Other;","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.categories.ReadyToEat;","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.categories.Seafood;","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.categories.Vegetable;","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.utilities.Storage;","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.Ui;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.utilities.LoggingHandler;","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":"//@@author SimJJ96","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":" * Represents a command to add a food item into the Fridge.","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":" * When calling constructor, foodName, category, expiryDate, location","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":" * and quantity are necessary fields","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"    private final Food foodToAdd;","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"    public AddCommand(String foodName, FoodCategory category, String expiryString,","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"                      FoodStorageLocation location, int quantity)","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"            throws InvalidDateException, InvalidQuantityException {","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"SimJJ96"},"content":"        if (quantity \u003c\u003d 0) {","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"SimJJ96"},"content":"            throw new InvalidQuantityException();","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"SimJJ96"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"SimJJ96"},"content":"        assert category !\u003d null : \"category should not be null\";","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"SimJJ96"},"content":"        LoggingHandler.logInfo(\"Adding food: \" + foodName + \" with parameters: \");","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"SimJJ96"},"content":"        LoggingHandler.logInfo(\"Category: \" + category);","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"SimJJ96"},"content":"        LoggingHandler.logInfo(\"Expiry: \" + expiryString);","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"SimJJ96"},"content":"        LoggingHandler.logInfo(\"Storage Location: \" + location);","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"SimJJ96"},"content":"        LoggingHandler.logInfo(\"Quantity \" + quantity);","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"SimJJ96"},"content":"        foodToAdd \u003d categoriseAndGenerateFood(foodName, category, expiryString, location, quantity);","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"SimJJ96"},"content":"        LoggingHandler.logInfo(\"Food \" + foodName + \" successfully added!\");","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"SimJJ96"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"SimJJ96"},"content":"    public void execute() throws RepetitiveFoodIdentifierException {","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"SimJJ96"},"content":"        addFood();","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"SimJJ96"},"content":"        showResults();","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"SimJJ96"},"content":"    private void addFood() throws RepetitiveFoodIdentifierException {","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"SimJJ96"},"content":"        assert foodToAdd !\u003d null : \"Unable to add a null food\";","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"SimJJ96"},"content":"        fridge.add(foodToAdd);","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"SimJJ96"},"content":"        Storage.saveHistoryData(foodToAdd);","lastModifiedDate":"2021-04-05"},{"lineNumber":61,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"SimJJ96"},"content":"    private void showResults() {","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"SimJJ96"},"content":"        Ui.printMessage(getMessagePrintedToUser());","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"SimJJ96"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"SimJJ96"},"content":"     * Returns the results of add command.","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"SimJJ96"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"SimJJ96"},"content":"     * @return the message shown to the user","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"SimJJ96"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"SimJJ96"},"content":"    public String getMessagePrintedToUser() {","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"SimJJ96"},"content":"        String message \u003d \"Great! I have added \"","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"SimJJ96"},"content":"                + foodToAdd.getFoodName()","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"SimJJ96"},"content":"                + \" into your fridge.\\n\"","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"SimJJ96"},"content":"                + \"Details: \"","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"SimJJ96"},"content":"                + foodToAdd.toString();","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"SimJJ96"},"content":"        return message;","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":80,"author":{"gitId":"SimJJ96"},"content":"    //@@author","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"Leeyp"},"content":"    //@@author leeyp","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"Leeyp"},"content":"    public static Food categoriseAndGenerateFood(String foodName, FoodCategory category,","lastModifiedDate":"2021-03-21"},{"lineNumber":84,"author":{"gitId":"Leeyp"},"content":"                                                 String expiryString, FoodStorageLocation location,","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"Leeyp"},"content":"                                                 int quantity) throws InvalidDateException {","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"Leeyp"},"content":"        Food newFood;","lastModifiedDate":"2021-03-21"},{"lineNumber":87,"author":{"gitId":"Leeyp"},"content":"        switch (category) {","lastModifiedDate":"2021-03-21"},{"lineNumber":88,"author":{"gitId":"Leeyp"},"content":"        case VEGETABLE:","lastModifiedDate":"2021-03-21"},{"lineNumber":89,"author":{"gitId":"Leeyp"},"content":"            newFood \u003d new Vegetable(foodName, category, expiryString, location, quantity);","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"Leeyp"},"content":"            LoggingHandler.logInfo(\"New Vegetable: \" + foodName + \" created.\");","lastModifiedDate":"2021-03-21"},{"lineNumber":91,"author":{"gitId":"Leeyp"},"content":"            break;","lastModifiedDate":"2021-03-21"},{"lineNumber":92,"author":{"gitId":"Leeyp"},"content":"        case FRUIT:","lastModifiedDate":"2021-03-21"},{"lineNumber":93,"author":{"gitId":"Leeyp"},"content":"            newFood \u003d new Fruit(foodName, category, expiryString, location, quantity);","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"Leeyp"},"content":"            LoggingHandler.logInfo(\"New Fruit: \" + foodName + \" created.\");","lastModifiedDate":"2021-03-21"},{"lineNumber":95,"author":{"gitId":"Leeyp"},"content":"            break;","lastModifiedDate":"2021-03-21"},{"lineNumber":96,"author":{"gitId":"Leeyp"},"content":"        case MEAT:","lastModifiedDate":"2021-03-21"},{"lineNumber":97,"author":{"gitId":"Leeyp"},"content":"            newFood \u003d new Meat(foodName, category, expiryString, location, quantity);","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"Leeyp"},"content":"            LoggingHandler.logInfo(\"New Meat: \" + foodName + \" created.\");","lastModifiedDate":"2021-03-21"},{"lineNumber":99,"author":{"gitId":"Leeyp"},"content":"            break;","lastModifiedDate":"2021-03-21"},{"lineNumber":100,"author":{"gitId":"Leeyp"},"content":"        case SEAFOOD:","lastModifiedDate":"2021-03-21"},{"lineNumber":101,"author":{"gitId":"Leeyp"},"content":"            newFood \u003d new Seafood(foodName, category, expiryString, location, quantity);","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"Leeyp"},"content":"            LoggingHandler.logInfo(\"New Seafood: \" + foodName + \" created.\");","lastModifiedDate":"2021-03-21"},{"lineNumber":103,"author":{"gitId":"Leeyp"},"content":"            break;","lastModifiedDate":"2021-03-21"},{"lineNumber":104,"author":{"gitId":"Leeyp"},"content":"        case EGG:","lastModifiedDate":"2021-03-21"},{"lineNumber":105,"author":{"gitId":"Leeyp"},"content":"            newFood \u003d new Egg(foodName, category, expiryString, location, quantity);","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"Leeyp"},"content":"            LoggingHandler.logInfo(\"New Egg: \" + foodName + \" created.\");","lastModifiedDate":"2021-03-21"},{"lineNumber":107,"author":{"gitId":"Leeyp"},"content":"            break;","lastModifiedDate":"2021-03-21"},{"lineNumber":108,"author":{"gitId":"Leeyp"},"content":"        case DAIRY:","lastModifiedDate":"2021-03-21"},{"lineNumber":109,"author":{"gitId":"Leeyp"},"content":"            newFood \u003d new Dairy(foodName, category, expiryString, location, quantity);","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"Leeyp"},"content":"            LoggingHandler.logInfo(\"New Dairy: \" + foodName + \" created.\");","lastModifiedDate":"2021-03-21"},{"lineNumber":111,"author":{"gitId":"Leeyp"},"content":"            break;","lastModifiedDate":"2021-03-21"},{"lineNumber":112,"author":{"gitId":"Leeyp"},"content":"        case BEVERAGE:","lastModifiedDate":"2021-03-21"},{"lineNumber":113,"author":{"gitId":"Leeyp"},"content":"            newFood \u003d new Beverage(foodName, category, expiryString, location, quantity);","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"Leeyp"},"content":"            LoggingHandler.logInfo(\"New Beverage: \" + foodName + \" created.\");","lastModifiedDate":"2021-03-21"},{"lineNumber":115,"author":{"gitId":"Leeyp"},"content":"            break;","lastModifiedDate":"2021-03-21"},{"lineNumber":116,"author":{"gitId":"Leeyp"},"content":"        case COOKED_DISH:","lastModifiedDate":"2021-03-21"},{"lineNumber":117,"author":{"gitId":"Leeyp"},"content":"            newFood \u003d new CookedDish(foodName, category, expiryString, location, quantity);","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"Leeyp"},"content":"            LoggingHandler.logInfo(\"New Cooked Dish: \" + foodName + \" created.\");","lastModifiedDate":"2021-03-21"},{"lineNumber":119,"author":{"gitId":"Leeyp"},"content":"            break;","lastModifiedDate":"2021-03-21"},{"lineNumber":120,"author":{"gitId":"Leeyp"},"content":"        case READY_TO_EAT:","lastModifiedDate":"2021-03-21"},{"lineNumber":121,"author":{"gitId":"Leeyp"},"content":"            newFood \u003d new ReadyToEat(foodName, category, expiryString, location, quantity);","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"Leeyp"},"content":"            LoggingHandler.logInfo(\"New Ready-To-Eat: \" + foodName + \" created.\");","lastModifiedDate":"2021-03-21"},{"lineNumber":123,"author":{"gitId":"Leeyp"},"content":"            break;","lastModifiedDate":"2021-03-21"},{"lineNumber":124,"author":{"gitId":"Leeyp"},"content":"        case FROZEN:","lastModifiedDate":"2021-03-21"},{"lineNumber":125,"author":{"gitId":"Leeyp"},"content":"            newFood \u003d new Frozen(foodName, category, expiryString, location, quantity);","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"Leeyp"},"content":"            LoggingHandler.logInfo(\"New Frozen Food: \" + foodName + \" created.\");","lastModifiedDate":"2021-03-21"},{"lineNumber":127,"author":{"gitId":"Leeyp"},"content":"            break;","lastModifiedDate":"2021-03-21"},{"lineNumber":128,"author":{"gitId":"Leeyp"},"content":"        case OTHER:","lastModifiedDate":"2021-03-21"},{"lineNumber":129,"author":{"gitId":"Leeyp"},"content":"            newFood \u003d new Other(foodName, category, expiryString, location, quantity);","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"Leeyp"},"content":"            LoggingHandler.logInfo(\"New Unknown Category Food: \" + foodName + \" created.\");","lastModifiedDate":"2021-03-21"},{"lineNumber":131,"author":{"gitId":"Leeyp"},"content":"            break;","lastModifiedDate":"2021-03-21"},{"lineNumber":132,"author":{"gitId":"Leeyp"},"content":"        default:","lastModifiedDate":"2021-03-21"},{"lineNumber":133,"author":{"gitId":"Leeyp"},"content":"            throw new IllegalStateException(\"Unexpected category value: \" + category);","lastModifiedDate":"2021-03-21"},{"lineNumber":134,"author":{"gitId":"Leeyp"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":135,"author":{"gitId":"Leeyp"},"content":"        return newFood;","lastModifiedDate":"2021-03-21"},{"lineNumber":136,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":137,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":138,"author":{"gitId":"Leeyp"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"Leeyp":70,"kwokyto":2,"Vinci-Hu":2,"SimJJ96":64}},{"path":"src/main/java/seedu/fridgefriend/command/ByeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"//@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"    public ByeCommand() {","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"        super();","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"        return isExit;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"    public void setExit(boolean isExit) {","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"    public void execute() {","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"        setExit(true);","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"    ","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"kwokyto":26}},{"path":"src/main/java/seedu/fridgefriend/command/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Vinci-Hu"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"import seedu.fridgefriend.utilities.LoggingHandler;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.utilities.Ui;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":"//@@author Vinci-Hu","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":" * Clear the fridge.","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":" * For the purpose of text-ui-text.","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"    public void execute() {","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":"        LoggingHandler.logInfo(\"Re-initializing the fridge...\");","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"        fridge.clearFridge();","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":"        Ui.printMessage(\"Fridge has been cleared!\");","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"Leeyp":1,"Vinci-Hu":17}},{"path":"src/main/java/seedu/fridgefriend/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"import seedu.fridgefriend.exception.FoodNameNotFoundException;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidInputException;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":"import seedu.fridgefriend.exception.InvalidQuantityException;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":"import seedu.fridgefriend.exception.RepetitiveFoodIdentifierException;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.Fridge;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":" * Represent an executable command.","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"public abstract class Command {","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"    protected Fridge fridge;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"    protected boolean isExit;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"    //@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"    public Command() {","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"        isExit \u003d false;","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"    ","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"    //@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"        return isExit;","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"    //@@author SimJJ96","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":"    public abstract void execute() throws InvalidInputException, RepetitiveFoodIdentifierException,","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"            InvalidQuantityException, FoodNameNotFoundException;","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"Vinci-Hu"},"content":"    //@@author Vinci-Hu","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"Vinci-Hu"},"content":"    public void setData(Fridge fridge) {","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"Vinci-Hu"},"content":"        this.fridge \u003d fridge;","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"Vinci-Hu"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"kwokyto":14,"Vinci-Hu":9,"SimJJ96":13}},{"path":"src/main/java/seedu/fridgefriend/command/ExpiringCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"//@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.Ui;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":" * Represents a command to find food items that are expiring within a week.","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"public class ExpiringCommand extends Command {","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"    private String messageExpiring \u003d \"These are the food expiring in the next week:\";","lastModifiedDate":"2021-04-05"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"    private String messageExpired \u003d \"These are the food that has aready expired:\";","lastModifiedDate":"2021-04-05"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"    private String messageNoExpiring \u003d \"These are no food expiring in the next week!\";","lastModifiedDate":"2021-04-05"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"    private String messageNoExpired \u003d \"No food has expired! Congratulations!\";","lastModifiedDate":"2021-04-05"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"    private int index \u003d 1;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"    private boolean hasExpiring;","lastModifiedDate":"2021-04-05"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"    private boolean hasExpired;","lastModifiedDate":"2021-04-05"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"    public ExpiringCommand() {","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"        super();","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"    public void execute() {","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"        for (int i \u003d 0; i \u003c fridge.getSize(); i +\u003d 1) {","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"            updateMessage(fridge.getFood(i));","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"        if (hasExpired) {","lastModifiedDate":"2021-04-05"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"            Ui.printMessage(messageExpired);","lastModifiedDate":"2021-04-05"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"        } else {","lastModifiedDate":"2021-04-05"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"            Ui.printMessage(messageNoExpired);","lastModifiedDate":"2021-04-05"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"        if (hasExpiring) {","lastModifiedDate":"2021-04-05"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"            Ui.printMessage(messageExpiring);","lastModifiedDate":"2021-04-05"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"        } else {","lastModifiedDate":"2021-04-05"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"            Ui.printMessage(messageNoExpiring);","lastModifiedDate":"2021-04-05"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"Vinci-Hu"},"content":"    //@@author Vinci-Hu","lastModifiedDate":"2021-04-05"},{"lineNumber":42,"author":{"gitId":"Vinci-Hu"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"Vinci-Hu"},"content":"     * Updates the message to be shown to the user based on the food\u0027s expiry date.","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"Vinci-Hu"},"content":"     * ","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"Vinci-Hu"},"content":"     * @param food food item in the fridge","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"Vinci-Hu"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"Vinci-Hu"},"content":"    private void updateMessage(Food food) {","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"Vinci-Hu"},"content":"        if (food.hasExpired()) {","lastModifiedDate":"2021-04-05"},{"lineNumber":49,"author":{"gitId":"Vinci-Hu"},"content":"            addToExpiredMessage(food);","lastModifiedDate":"2021-04-05"},{"lineNumber":50,"author":{"gitId":"Vinci-Hu"},"content":"            hasExpired \u003d true;","lastModifiedDate":"2021-04-05"},{"lineNumber":51,"author":{"gitId":"Vinci-Hu"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":52,"author":{"gitId":"Vinci-Hu"},"content":"        if (food.isExpiring()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"Vinci-Hu"},"content":"            addToExpiringMessage(food);","lastModifiedDate":"2021-04-05"},{"lineNumber":54,"author":{"gitId":"Vinci-Hu"},"content":"            hasExpiring \u003d true;","lastModifiedDate":"2021-04-05"},{"lineNumber":55,"author":{"gitId":"Vinci-Hu"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"Vinci-Hu"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"Vinci-Hu"},"content":"     * Adds food description and list index to the return message.","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"Vinci-Hu"},"content":"     * ","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"Vinci-Hu"},"content":"     * @param food food item that is expiring in a week","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"Vinci-Hu"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"Vinci-Hu"},"content":"    private void addToExpiringMessage(Food food) {","lastModifiedDate":"2021-04-05"},{"lineNumber":64,"author":{"gitId":"Vinci-Hu"},"content":"        String entry \u003d \"\\n\" + index + \". \" + food.toString();","lastModifiedDate":"2021-04-05"},{"lineNumber":65,"author":{"gitId":"Vinci-Hu"},"content":"        messageExpiring +\u003d entry;","lastModifiedDate":"2021-04-05"},{"lineNumber":66,"author":{"gitId":"Vinci-Hu"},"content":"        index +\u003d 1;","lastModifiedDate":"2021-04-05"},{"lineNumber":67,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":68,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":69,"author":{"gitId":"Vinci-Hu"},"content":"    private void addToExpiredMessage(Food food) {","lastModifiedDate":"2021-04-05"},{"lineNumber":70,"author":{"gitId":"Vinci-Hu"},"content":"        String entry \u003d \"\\n\" + index + \". \" + food.toString();","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"Vinci-Hu"},"content":"        messageExpired +\u003d entry;","lastModifiedDate":"2021-04-05"},{"lineNumber":72,"author":{"gitId":"Vinci-Hu"},"content":"        index +\u003d 1;","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":75,"author":{"gitId":"Vinci-Hu"},"content":"    public String messageForTesting() {","lastModifiedDate":"2021-04-05"},{"lineNumber":76,"author":{"gitId":"Vinci-Hu"},"content":"        String message1 \u003d \"Expired message: \";","lastModifiedDate":"2021-04-05"},{"lineNumber":77,"author":{"gitId":"Vinci-Hu"},"content":"        String expiredMessage \u003d hasExpired ? messageExpired : messageNoExpired;","lastModifiedDate":"2021-04-05"},{"lineNumber":78,"author":{"gitId":"Vinci-Hu"},"content":"        String message2 \u003d \"Expiring message: \";","lastModifiedDate":"2021-04-05"},{"lineNumber":79,"author":{"gitId":"Vinci-Hu"},"content":"        String expiringMessage \u003d hasExpiring ? messageExpiring : messageNoExpiring;","lastModifiedDate":"2021-04-05"},{"lineNumber":80,"author":{"gitId":"Vinci-Hu"},"content":"        return message1 + expiredMessage + message2 + expiringMessage;","lastModifiedDate":"2021-04-05"},{"lineNumber":81,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":82,"author":{"gitId":"Vinci-Hu"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"kwokyto":40,"Vinci-Hu":42}},{"path":"src/main/java/seedu/fridgefriend/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"//@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import java.util.EnumSet;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.Ui;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":" * Represents a command to show help instructions.","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"    private static final String COMMANDS \u003d \"These are the list of available commands:\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"            + \"\\tadd foodName /cat categoryName /exp dd-mm-yyyy /loc storageLocation /qty foodQuantity\\n\"","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"            + \"\\tlist\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"            + \"\\tlist categoryName\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"            + \"\\tremove foodName /qty removeQuantity\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"            + \"\\tsearch searchString\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"            + \"\\texpiring\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"            + \"\\trunninglow\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"            + \"\\tsetlimit foodCategory /qty newLimit\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"            + \"\\tclear\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"            + \"\\thelp\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"            + \"\\tbye\";","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"    ","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"    private static final String CATEGORIES \u003d \"This is the list of food categories:\\n\\t\"","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"            + EnumSet.allOf(FoodCategory.class).toString();","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"    private static final String LOCATIONS \u003d \"This is the list of storage locations:\\n\\t\"","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"            + EnumSet.allOf(FoodStorageLocation.class).toString();","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"    public HelpCommand() {","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"        super();","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"    public void execute() {","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"        String helpMessage \u003d COMMANDS + \"\\n\\n\" + CATEGORIES + \"\\n\\n\" + LOCATIONS;","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"        Ui.printMessage(helpMessage);","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"    ","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"kwokyto":44}},{"path":"src/main/java/seedu/fridgefriend/command/HistoryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leeyp"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.utilities.LoggingHandler;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.utilities.Storage;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.utilities.Ui;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"Leeyp"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"Leeyp"},"content":" * History textfile is stored by default in data/historyData.txt.","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"Leeyp"},"content":" * Food data is automatically added into history textfile, after every AddCommand is called.","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"Leeyp"},"content":" * History can also be cleared, by using command \"history clear\".","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"Leeyp"},"content":" *","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"Leeyp"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"Leeyp"},"content":"public class HistoryCommand extends Command {","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"Leeyp"},"content":"    private final String description;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"Leeyp"},"content":"    public HistoryCommand(String description) {","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"Leeyp"},"content":"        LoggingHandler.logInfo(\"History command initialized with parameter: \" + description);","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"Leeyp"},"content":"        this.description \u003d description.toLowerCase();","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"Leeyp"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"Leeyp"},"content":"    public void execute() {","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"Leeyp"},"content":"        if (isClearHistory()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"Leeyp"},"content":"            LoggingHandler.logInfo(\"Proceeding to clear history file.\");","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"Leeyp"},"content":"            clearHistory();","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"Leeyp"},"content":"        } else {","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"Leeyp"},"content":"            LoggingHandler.logInfo(\"Keyword \u0027clear\u0027 not found. Proceeding to print history:\");","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"Leeyp"},"content":"            printHistory();","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"Leeyp"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"Leeyp"},"content":"    private boolean isClearHistory() {","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"Leeyp"},"content":"        return description.contains(\"clear\");","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"Leeyp"},"content":"    private void printHistory() {","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"Leeyp"},"content":"        String message \u003d getHistoryMessage();","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"Leeyp"},"content":"        Ui.printMessage(message);","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"Leeyp"},"content":"    public static void clearHistory() {","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"Leeyp"},"content":"        Storage.clearHistoryData();","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"Leeyp"},"content":"        Ui.printMessage(\"History successfully cleared!\");","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"Leeyp"},"content":"    public static String getHistoryMessage() {","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"Leeyp"},"content":"        StringBuilder message \u003d new StringBuilder(\"This is the full history of items you\u0027ve added in the fridge:\");","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"Leeyp"},"content":"        message.append(Storage.loadHistoryData());","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"Leeyp"},"content":"        assert message !\u003d null : \"message string should not be null\";","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"Leeyp"},"content":"        return message.toString();","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"Leeyp"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"Leeyp":55}},{"path":"src/main/java/seedu/fridgefriend/command/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.exception.InvalidInputException;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.Ui;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.utilities.LoggingHandler;","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"//@@author SimJJ96","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":" * Represents a command to list the items in the fridge to the user.","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":" * When calling constructor, description is a necessary field","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":" * to specify whether to list everything,","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":" * list by category, or list by location.","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":"    private static final int EXTRA_INDEX \u003d 1;","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"    private static final int START_INDEX_SHOWN_TO_USER \u003d 1;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"    private final String description;","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"    private int indexShownToUser;","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":"    public ListCommand(String description) {","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"        LoggingHandler.logInfo(\"List command initialized with parameter: \" + description);","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"        this.description \u003d description.toUpperCase();","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"        this.indexShownToUser \u003d START_INDEX_SHOWN_TO_USER;","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":"    public void execute() throws InvalidInputException {","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"            LoggingHandler.logInfo(\"Listing all food.\");","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"            listAll();","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"        } else if (checkIsValidCategory()) {","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"            LoggingHandler.logInfo(\"Listing by category.\");","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"SimJJ96"},"content":"            listByCategory();","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"SimJJ96"},"content":"        } else if (checkIsValidStorageLocation()) {","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"SimJJ96"},"content":"            LoggingHandler.logInfo(\"Listing by storage location.\");","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"SimJJ96"},"content":"            listByStorageLocation();","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"SimJJ96"},"content":"        } else {","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"SimJJ96"},"content":"            LoggingHandler.logInfo(\"Cannot list, because invalid parameter inputted.\");","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"SimJJ96"},"content":"            invalidInputError();","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"SimJJ96"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"SimJJ96"},"content":"    private void invalidInputError() throws InvalidInputException {","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"SimJJ96"},"content":"        String errorMessage \u003d \"Sorry my friend, please enter a valid food category or storage location.\";","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"SimJJ96"},"content":"        throw new InvalidInputException(errorMessage);","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"SimJJ96"},"content":"    private String getFoodDescription(int index) {","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"SimJJ96"},"content":"        int indexShownToUser \u003d index + EXTRA_INDEX;","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"SimJJ96"},"content":"        Food food \u003d fridge.getFood(index);","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"SimJJ96"},"content":"        String foodDescription \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"SimJJ96"},"content":"                \"\\n\\t\" + indexShownToUser + \". \"","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"SimJJ96"},"content":"                        + food.toString();","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"SimJJ96"},"content":"        return foodDescription;","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"SimJJ96"},"content":"    private void listAll() {","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"SimJJ96"},"content":"        Ui.printMessage(getListAllMessage());","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"SimJJ96"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"SimJJ96"},"content":"     * Returns all the food in the fridge.","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"SimJJ96"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"SimJJ96"},"content":"     * @return string of the food names that are in the fridge","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"SimJJ96"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"SimJJ96"},"content":"    public String getListAllMessage() {","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"SimJJ96"},"content":"        LoggingHandler.logInfo(\"No input detected, printing all items.\");","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"SimJJ96"},"content":"        StringBuilder message \u003d new StringBuilder(\"Here are the items in your fridge:\");","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"SimJJ96"},"content":"        for (int i \u003d 0; i \u003c fridge.getSize(); i++) {","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"SimJJ96"},"content":"            message.append(getFoodDescription(i));","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"SimJJ96"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"SimJJ96"},"content":"        return message.toString();","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"SimJJ96"},"content":"    private void listByCategory() {","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"SimJJ96"},"content":"        String message \u003d getListByCategoryMessage();","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"SimJJ96"},"content":"        Ui.printMessage(message);","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"SimJJ96"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"SimJJ96"},"content":"     * Returns the food that match the category that was specified.","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"SimJJ96"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"SimJJ96"},"content":"     * @return string of food that match the category in the fridge","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"SimJJ96"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"SimJJ96"},"content":"    public String getListByCategoryMessage() {","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"SimJJ96"},"content":"        LoggingHandler.logInfo(\"Category detected:\" + description);","lastModifiedDate":"2021-03-21"},{"lineNumber":91,"author":{"gitId":"SimJJ96"},"content":"        StringBuilder message \u003d new StringBuilder(\"These are the \" + description + \" in your fridge:\");","lastModifiedDate":"2021-03-21"},{"lineNumber":92,"author":{"gitId":"SimJJ96"},"content":"        for (int i \u003d 0; i \u003c fridge.getSize(); i++) {","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"SimJJ96"},"content":"            message.append(getMatchCategoryFoodDescription(i));","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"SimJJ96"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":95,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"SimJJ96"},"content":"        assert message !\u003d null : \"message string should not be null\";","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"SimJJ96"},"content":"        return message.toString();","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":99,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":100,"author":{"gitId":"SimJJ96"},"content":"    private boolean checkIsValidCategory() {","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"SimJJ96"},"content":"        return FoodCategory.contains(description);","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"SimJJ96"},"content":"    private String getMatchCategoryFoodDescription(int index) {","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"SimJJ96"},"content":"        String foodDescription \u003d \"\";","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"SimJJ96"},"content":"        FoodCategory categoryToFind \u003d FoodCategory.convertStringToFoodCategory(description);","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"SimJJ96"},"content":"        Food food \u003d fridge.getFood(index);","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"SimJJ96"},"content":"        FoodCategory category \u003d food.getCategory();","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"SimJJ96"},"content":"        if (category.equals(categoryToFind)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"SimJJ96"},"content":"            foodDescription \u003d \"\\n\\t\" + indexShownToUser + \". \" + food.toString();","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"SimJJ96"},"content":"            ++indexShownToUser;","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"SimJJ96"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"SimJJ96"},"content":"        return foodDescription;","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"SimJJ96"},"content":"    //@author","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"Leeyp"},"content":"    //@@author leeyp","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"Leeyp"},"content":"    private void listByStorageLocation() {","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"Leeyp"},"content":"        String message \u003d getListByStorageLocationMessage();","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"Leeyp"},"content":"        Ui.printMessage(message);","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":122,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":123,"author":{"gitId":"Leeyp"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":124,"author":{"gitId":"Leeyp"},"content":"     * Returns the food that match the storage location that was specified.","lastModifiedDate":"2021-03-21"},{"lineNumber":125,"author":{"gitId":"Leeyp"},"content":"     *","lastModifiedDate":"2021-03-21"},{"lineNumber":126,"author":{"gitId":"Leeyp"},"content":"     * @return string of food that match the storage location in the fridge","lastModifiedDate":"2021-03-21"},{"lineNumber":127,"author":{"gitId":"Leeyp"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":128,"author":{"gitId":"Leeyp"},"content":"    public String getListByStorageLocationMessage() {","lastModifiedDate":"2021-03-21"},{"lineNumber":129,"author":{"gitId":"Leeyp"},"content":"        LoggingHandler.logInfo(\"Storage Location detected:\" + description);","lastModifiedDate":"2021-03-21"},{"lineNumber":130,"author":{"gitId":"Leeyp"},"content":"        StringBuilder message \u003d new StringBuilder(\"These are the food stored in \" + description + \":\");","lastModifiedDate":"2021-03-21"},{"lineNumber":131,"author":{"gitId":"Leeyp"},"content":"        for (int i \u003d 0; i \u003c fridge.getSize(); i++) {","lastModifiedDate":"2021-03-21"},{"lineNumber":132,"author":{"gitId":"Leeyp"},"content":"            message.append(getMatchStorageFoodDescription(i));","lastModifiedDate":"2021-03-21"},{"lineNumber":133,"author":{"gitId":"Leeyp"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":134,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":135,"author":{"gitId":"Leeyp"},"content":"        assert message !\u003d null : \"message string should not be null\";","lastModifiedDate":"2021-03-21"},{"lineNumber":136,"author":{"gitId":"Leeyp"},"content":"        return message.toString();","lastModifiedDate":"2021-03-21"},{"lineNumber":137,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":138,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":139,"author":{"gitId":"Leeyp"},"content":"    private boolean checkIsValidStorageLocation() {","lastModifiedDate":"2021-03-21"},{"lineNumber":140,"author":{"gitId":"Leeyp"},"content":"        return FoodStorageLocation.contains(description);","lastModifiedDate":"2021-03-22"},{"lineNumber":141,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":142,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":143,"author":{"gitId":"Leeyp"},"content":"    private String getMatchStorageFoodDescription(int index) {","lastModifiedDate":"2021-03-21"},{"lineNumber":144,"author":{"gitId":"Leeyp"},"content":"        String foodDescription \u003d \"\";","lastModifiedDate":"2021-03-21"},{"lineNumber":145,"author":{"gitId":"Leeyp"},"content":"        FoodStorageLocation locationToFind \u003d FoodStorageLocation.convertStringToLocation(description);","lastModifiedDate":"2021-03-21"},{"lineNumber":146,"author":{"gitId":"Leeyp"},"content":"        Food food \u003d fridge.getFood(index);","lastModifiedDate":"2021-03-21"},{"lineNumber":147,"author":{"gitId":"Leeyp"},"content":"        FoodStorageLocation storageLocation \u003d food.getStorageLocation();","lastModifiedDate":"2021-03-21"},{"lineNumber":148,"author":{"gitId":"Leeyp"},"content":"        if (storageLocation.equals(locationToFind)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":149,"author":{"gitId":"Leeyp"},"content":"            foodDescription \u003d \"\\n\\t\" + indexShownToUser + \". \" + food.toString();","lastModifiedDate":"2021-03-23"},{"lineNumber":150,"author":{"gitId":"Leeyp"},"content":"            ++indexShownToUser;","lastModifiedDate":"2021-03-21"},{"lineNumber":151,"author":{"gitId":"Leeyp"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":152,"author":{"gitId":"Leeyp"},"content":"        return foodDescription;","lastModifiedDate":"2021-03-15"},{"lineNumber":153,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":154,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":155,"author":{"gitId":"Leeyp"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"Leeyp":41,"kwokyto":1,"SimJJ96":113}},{"path":"src/main/java/seedu/fridgefriend/command/RemoveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"import seedu.fridgefriend.exception.FoodNameNotFoundException;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":"import seedu.fridgefriend.exception.InvalidQuantityException;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.Ui;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":" * Represents a command to remove a food item from the fridge by index specify by user.","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"public class RemoveCommand extends Command {","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":"    //variables used in remove by index","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"    private String foodNameToEdit;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"    private Food foodToBeRemoved;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"    //variables used in remove by name and qty","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"Vinci-Hu"},"content":"    private Food foodToBeEditted;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"Vinci-Hu"},"content":"    private int editQuantity;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"Vinci-Hu"},"content":"    private boolean isRemoveObject \u003d false;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"    private String runningOutMessage \u003d \"\";","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"Vinci-Hu"},"content":"    //@@author Vinci-Hu","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"Vinci-Hu"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"Vinci-Hu"},"content":"     * Constructor which takes in foodname and quantity to remove.","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"Vinci-Hu"},"content":"     * @param foodnameToEdit food name is identifier","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"Vinci-Hu"},"content":"     * @param quantity integer value.","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"Vinci-Hu"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"Vinci-Hu"},"content":"    public RemoveCommand(String foodnameToEdit, int quantity) {","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"Vinci-Hu"},"content":"        this.foodNameToEdit \u003d foodnameToEdit;","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"Vinci-Hu"},"content":"        this.editQuantity \u003d quantity;","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"Vinci-Hu"},"content":"    private Food findFoodByName(String foodnameToEdit) throws FoodNameNotFoundException {","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"Vinci-Hu"},"content":"        for (Food food : fridge.getFridge()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"Vinci-Hu"},"content":"            if (food.getFoodName().equals(foodnameToEdit)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"Vinci-Hu"},"content":"                return food;","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"Vinci-Hu"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"Vinci-Hu"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"Vinci-Hu"},"content":"        throw new FoodNameNotFoundException();","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"Vinci-Hu"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"Vinci-Hu"},"content":"    public void execute() throws InvalidQuantityException, FoodNameNotFoundException {","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"Vinci-Hu"},"content":"        foodToBeEditted \u003d findFoodByName(foodNameToEdit);","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"Vinci-Hu"},"content":"        removePortion();","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"Vinci-Hu"},"content":"        checkRunningOut();","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"Vinci-Hu"},"content":"        showResults();","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"Vinci-Hu"},"content":"    private void removePortion() throws InvalidQuantityException {","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"Vinci-Hu"},"content":"        int originalQty \u003d foodToBeEditted.getQuantity();","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"Vinci-Hu"},"content":"        int newQty \u003d originalQty - editQuantity;","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"Vinci-Hu"},"content":"        if (newQty \u003c 0) {","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"Vinci-Hu"},"content":"            throw new InvalidQuantityException(\"Not enough in fridge to remove!\");","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"Vinci-Hu"},"content":"        } else if (newQty \u003d\u003d 0) {","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"Vinci-Hu"},"content":"            this.isRemoveObject \u003d true;","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"Vinci-Hu"},"content":"            foodToBeRemoved \u003d foodToBeEditted;","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"Vinci-Hu"},"content":"            fridge.getFridge().remove(foodToBeEditted);","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"Vinci-Hu"},"content":"        } else {","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"Vinci-Hu"},"content":"            foodToBeEditted.setQuantity(newQty);","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"Vinci-Hu"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"Vinci-Hu"},"content":"    //@@author","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"SimJJ96"},"content":"    //@@author SimJJ96","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"SimJJ96"},"content":"    private void showResults() {","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"SimJJ96"},"content":"        String message \u003d getMessagePrintedToUser();","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"SimJJ96"},"content":"        message +\u003d this.runningOutMessage;","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"SimJJ96"},"content":"        Ui.printMessage(message);","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"SimJJ96"},"content":"    //@@author","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"Vinci-Hu"},"content":"    //@@author Vinci-Hu","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"Vinci-Hu"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"Vinci-Hu"},"content":"     * Return the results after remove the item from the fridge.","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"Vinci-Hu"},"content":"     * If there is some quantity left, display new quantity.","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"Vinci-Hu"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"Vinci-Hu"},"content":"     * @return the message shown to user","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"Vinci-Hu"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"Vinci-Hu"},"content":"    public String getMessagePrintedToUser() {","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"Vinci-Hu"},"content":"        String message;","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"Vinci-Hu"},"content":"        if (isRemoveObject) {","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"Vinci-Hu"},"content":"            message \u003d \"Noted! I\u0027ve removed \" + foodToBeRemoved.getFoodName()","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"Vinci-Hu"},"content":"                    + \" from your fridge.\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"Vinci-Hu"},"content":"                    + \"Now you have \" + fridge.getSize()","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"Vinci-Hu"},"content":"                    + \" food in the fridge.\";","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"Vinci-Hu"},"content":"        } else {","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"Vinci-Hu"},"content":"            message \u003d \"Noted! I\u0027ve removed \" + editQuantity","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"Vinci-Hu"},"content":"                    + \" of the food \" + foodToBeEditted.getFoodName()","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"Vinci-Hu"},"content":"                    + \" from your fridge.\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"Vinci-Hu"},"content":"                    + \"New quantity: \" + foodToBeEditted.getQuantity();","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"Vinci-Hu"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"Vinci-Hu"},"content":"        return message;","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"kwokyto"},"content":"    //@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"kwokyto"},"content":"     * Checks if the amount of food left for that category is insufficient.","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"kwokyto"},"content":"     * Appends a warning message to the user if true.","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"kwokyto"},"content":"    private void checkRunningOut() {","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"kwokyto"},"content":"        FoodCategory foodCategory \u003d foodToBeEditted.getCategory();","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"kwokyto"},"content":"        if (fridge.isRunningOut(foodCategory)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"kwokyto"},"content":"            int totalQuantity \u003d fridge.getTotalQuantity(foodCategory);","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"kwokyto"},"content":"            this.runningOutMessage \u003d \"\\nWARNING! You are running low on \" + foodCategory.toString()","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"kwokyto"},"content":"                    + \"\\nTotal \" + foodCategory.toString() + \" quantity: \" + totalQuantity;","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"kwokyto":20,"Vinci-Hu":74,"SimJJ96":19}},{"path":"src/main/java/seedu/fridgefriend/command/RunningLowCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"//@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.Ui;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"public class RunningLowCommand extends Command {","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"    private String message \u003d \"You are running low on food in these categories:\";","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"    private String stockedUpMessage \u003d \"Congrats! You are all stocked up on food! :D\";","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"    private boolean isStockedUp \u003d true;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"    private int index \u003d 1;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"    public RunningLowCommand() {","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"        super();","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"    public void execute() {","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"        for (FoodCategory foodCategory : FoodCategory.values()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"            updateMessage(foodCategory);","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"        if (isStockedUp) {","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"            message \u003d stockedUpMessage;","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"        Ui.printMessage(message);","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"    private void updateMessage(FoodCategory foodCategory) {","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"        if (fridge.isRunningOut(foodCategory)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"            isStockedUp \u003d false;","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"            int totalQuantity \u003d fridge.getTotalQuantity(foodCategory);","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"            String entry \u003d \"\\n\" + index + \". \" + foodCategory.toString() + \" quantity: \" + totalQuantity","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"                    + \" out of \" + FoodCategory.getMinimumQuantity(foodCategory);","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"            message +\u003d entry;","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"            index +\u003d 1;","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"        return message;","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"kwokyto":43}},{"path":"src/main/java/seedu/fridgefriend/command/SearchCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.exception.EmptyDescriptionException;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.Ui;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.LoggingHandler;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"//@@author SimJJ96","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":" * Represents a command to search for specific food items in the fridge.","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"public class SearchCommand extends Command {","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"    private final String foodName;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":"    private boolean isFound;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"    private int index \u003d 1;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"    public SearchCommand(String foodName) throws EmptyDescriptionException {","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":"        if (foodName.isEmpty()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"        this.foodName \u003d foodName;","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"        this.isFound \u003d false;","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"    public void execute() {","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":"        showResults();","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":"    private void showResults() {","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"        Ui.printMessage(getMessagePrintedToUser());","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"     * Returns the results after searching for food items in the","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"SimJJ96"},"content":"     * fridge that contains the specified food name.","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"SimJJ96"},"content":"     * If unable to find, display unsuccessful message.","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"SimJJ96"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"SimJJ96"},"content":"     * @return the message shown to the user","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"SimJJ96"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"SimJJ96"},"content":"    public String getMessagePrintedToUser() {","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"SimJJ96"},"content":"        assert !foodName.equals(null) : \"Unable to search a null food name\";","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"SimJJ96"},"content":"        StringBuilder message \u003d getSearchByNameMessage();","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"SimJJ96"},"content":"        if (isFound) {","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"SimJJ96"},"content":"            LoggingHandler.logInfo(\"Search for food successful: \" + foodName + \" found.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"SimJJ96"},"content":"            return message.toString();","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"SimJJ96"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"SimJJ96"},"content":"            LoggingHandler.logInfo(\"Search for food unsuccessful: No \" + foodName + \" found.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"SimJJ96"},"content":"            return \"You do not have \" + foodName + \" in your fridge.\";","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"SimJJ96"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"SimJJ96"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"SimJJ96"},"content":"     * Returns the list of foods that contain the foodName.","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"SimJJ96"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"SimJJ96"},"content":"     * @return the string of food that contains the foodName in the fridge","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"SimJJ96"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"SimJJ96"},"content":"    private StringBuilder getSearchByNameMessage() {","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"SimJJ96"},"content":"        StringBuilder message \u003d new StringBuilder(\"These are the \"","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"SimJJ96"},"content":"                + foodName + \" in your fridge:\");","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"SimJJ96"},"content":"        for (int i \u003d 0; i \u003c fridge.getSize(); i +\u003d 1) {","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"SimJJ96"},"content":"            Food food \u003d fridge.getFood(i);","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"SimJJ96"},"content":"            isContain(message, food);","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"SimJJ96"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"SimJJ96"},"content":"        return message;","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"SimJJ96"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"SimJJ96"},"content":"     * Check if the food contain the foodName entered by the user.","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"SimJJ96"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"SimJJ96"},"content":"     * @param message that is shown to user","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"SimJJ96"},"content":"     * @param food item in the fridge","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"SimJJ96"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"SimJJ96"},"content":"    private void isContain(StringBuilder message, Food food) {","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"SimJJ96"},"content":"        if (food.getFoodName().contains(foodName)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"SimJJ96"},"content":"            updateMessage(message, food);","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"SimJJ96"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"SimJJ96"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"SimJJ96"},"content":"     * Updates the message to be shown to the user based on food containing the foodName.","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"SimJJ96"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"SimJJ96"},"content":"     * @param message that is shown to user","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"SimJJ96"},"content":"     * @param food item in fridge that contain the foodName","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"SimJJ96"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"SimJJ96"},"content":"    private void updateMessage(StringBuilder message, Food food) {","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"SimJJ96"},"content":"        isFound \u003d true;","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"SimJJ96"},"content":"        message.append(\"\\n\\t\").append(index)","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"SimJJ96"},"content":"                .append(\". \").append(food.toString());","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"SimJJ96"},"content":"        ++index;","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"SimJJ96"},"content":"    //@author","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"kwokyto":2,"SimJJ96":92}},{"path":"src/main/java/seedu/fridgefriend/command/SetLimitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"//@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.Ui;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"public class SetLimitCommand extends Command {","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"    private FoodCategory foodCategory;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"    private int quantity;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"    public SetLimitCommand(FoodCategory foodCategory, int quantity) {","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"        this.foodCategory \u003d foodCategory;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"    public void execute() {","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"        FoodCategory.setMinimumQuantity(foodCategory, quantity);","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"        String message \u003d getSetLimitMessage();","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"        Ui.printMessage(message);","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"    public String getSetLimitMessage() {","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"        String message \u003d \"Okie dokie! The new minimum quantity for category \u0027\" ","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"                + foodCategory.toString() + \"\u0027 is \" + quantity;","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"        return message;","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"kwokyto":29}},{"path":"src/main/java/seedu/fridgefriend/exception/EmptyDescriptionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.exception;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"//@@SimJJ96","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":" * Signal that the input format given does not fulfill the criteria.","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"    private static final String errorMessage \u003d \"Sorry my friend, the description cannot be empty.\";","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"    public EmptyDescriptionException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"        super(errorMessage);","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"kwokyto":1,"SimJJ96":12}},{"path":"src/main/java/seedu/fridgefriend/exception/FoodNameNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Vinci-Hu"},"content":"package seedu.fridgefriend.exception;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"//@@author Vinci-Hu","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":" * Signal that the input string of Food is not found in the collection.","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":"public class FoodNameNotFoundException extends Exception {","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":"    private static final String errorMessage \u003d \"Food specified not found.\";","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":"    public FoodNameNotFoundException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":"        super(errorMessage);","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"Vinci-Hu":13}},{"path":"src/main/java/seedu/fridgefriend/exception/InvalidDateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.exception;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"//@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":" * Signal that the input format of the date field is incorrect.","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"public class InvalidDateException extends Exception {","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"    public InvalidDateException(String message) {","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"        super(message);","lastModifiedDate":"2021-04-05"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"kwokyto":11}},{"path":"src/main/java/seedu/fridgefriend/exception/InvalidFoodCategoryException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.exception;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"//@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":" * Signals that the food category does not match any existing category.","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"public class InvalidFoodCategoryException extends Exception {","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"    private static final String messagePart1 \u003d \"Sorry my friend, \u0027\u0027\";","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"    private static final String messagePart2 \u003d \"\u0027\u0027 is not a valid category.\";","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"    public InvalidFoodCategoryException(String invalidCategory) {","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"        super(messagePart1 + invalidCategory + messagePart2);","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"kwokyto":16}},{"path":"src/main/java/seedu/fridgefriend/exception/InvalidInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.exception;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"//@author SimJJ96","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":" * Signals that the format of the input is incorrect.","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"    private static final String errorMessage \u003d \"Sorry my friend, please give a valid input.\";","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"    public InvalidInputException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"        super(errorMessage);","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":"    //@@author Vinci-Hu","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Vinci-Hu"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"        super(message);","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Vinci-Hu"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"kwokyto":2,"Vinci-Hu":6,"-":1,"SimJJ96":11}},{"path":"src/main/java/seedu/fridgefriend/exception/InvalidQuantityException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.exception;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"//@@author SimJJ96","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":" * Signals that the format of the quantity field is incorrect.","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"public class InvalidQuantityException extends Exception {","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"    private static final String errorMessage \u003d \"Sorry my friend, the quantity \"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"            + \"must be a positive number.\";","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"    public InvalidQuantityException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"        super(errorMessage);","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"    //@@author Vinci-Hu","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":"    public InvalidQuantityException(String msg) {","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"Vinci-Hu"},"content":"        super(msg);","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"Vinci-Hu"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"Vinci-Hu":5,"SimJJ96":14}},{"path":"src/main/java/seedu/fridgefriend/exception/RepetitiveFoodIdentifierException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Vinci-Hu"},"content":"package seedu.fridgefriend.exception;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"//@@author Vinci-Hu","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":" * Signal that the new foodname user wants to add cannot be used.","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":"public class RepetitiveFoodIdentifierException extends Exception {","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":"    private static final String errorMessage \u003d \"Sorry my friend, you have added this food before \"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":"            + \"but in a different location or have different expiry dates. \"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":"            + \"Please specify another foodname.\";","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":"    public RepetitiveFoodIdentifierException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"        super(errorMessage);","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"Vinci-Hu":15}},{"path":"src/main/java/seedu/fridgefriend/exception/StorageLoadingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.exception;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"//@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":" * Indicates that an error occurred while loading the saved data.","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"public class StorageLoadingException extends Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"    private static final String errorMessage \u003d \"There was an error loading the data for FridgeFriend!\\n\";","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"    public StorageLoadingException(Exception e) {","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"        super(errorMessage + e.getLocalizedMessage());","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"kwokyto":13}},{"path":"src/main/java/seedu/fridgefriend/exception/StorageSavingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.exception;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"//@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":" * Indicates that an error occurred while saving the data.","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"public class StorageSavingException extends Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"    private static final String errorMessage \u003d \"There was an error saving the data for FridgeFriend!\\n\";","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"    public StorageSavingException(Exception e) {","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"        super(errorMessage + e.getLocalizedMessage());","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"kwokyto":13}},{"path":"src/main/java/seedu/fridgefriend/food/ExpiryDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.food;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"//@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidDateException;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"public class ExpiryDate {","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"    protected LocalDate expiry;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"    public ExpiryDate(String string) throws InvalidDateException {","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"        try {","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"            assert string !\u003d null : \"date string should not be null\";","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"            LocalDate expiry \u003d LocalDate.parse(string, formatter);","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"            this.expiry \u003d expiry;            ","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"            throw new InvalidDateException(\"Sorry my friend, the date must be in the form \u0027dd-mm-yyyy\u0027.\");","lastModifiedDate":"2021-04-05"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"    public LocalDate getExpiry() {","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"        return expiry;","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"    public String toString() {","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"        return this.expiry.format(formatter);","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"kwokyto":32}},{"path":"src/main/java/seedu/fridgefriend/food/Food.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.food;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidDateException;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.utilities.LoggingHandler;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":"//@@author Vinci-Hu","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":" * Represents a portion of a specific food that is stored in the smart fridge.","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":" * When calling constructor, category, foodName, expiryString, storageLocation","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":" * and quantity are NECESSARY fields.","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":"public abstract class Food {","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"    protected FoodCategory category;","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":"    protected String foodName;","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"Vinci-Hu"},"content":"    protected ExpiryDate expiryDate;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"    protected FoodStorageLocation storageLocation;","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"Vinci-Hu"},"content":"    protected int quantity;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"Vinci-Hu"},"content":"    public Food(String foodName, FoodCategory category, String expiryString,","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"Vinci-Hu"},"content":"                FoodStorageLocation storageLocation, int quantity)","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"Vinci-Hu"},"content":"                throws InvalidDateException {","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"Vinci-Hu"},"content":"        LoggingHandler.logInfo(\"Food object initiated. food name: \" + foodName);","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Vinci-Hu"},"content":"        this.setCategory(category);","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"Vinci-Hu"},"content":"        this.setFoodName(foodName);","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"Vinci-Hu"},"content":"        this.setExpiryDate(expiryString);","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"Vinci-Hu"},"content":"        this.setStorageLocation(storageLocation);","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"Vinci-Hu"},"content":"        this.setQuantity(quantity);","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"Vinci-Hu"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"Vinci-Hu"},"content":"    public String toString() {","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"Vinci-Hu"},"content":"        String format \u003d \"Food name: %1$s, category: %2$s, expiry: %3$s, stored in: %4$s, quantity: %5$s\";;","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"Vinci-Hu"},"content":"        return String.format(","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"Vinci-Hu"},"content":"                format,","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"Vinci-Hu"},"content":"                getFoodName(),","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"Vinci-Hu"},"content":"                getCategory().name(), ","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"Vinci-Hu"},"content":"                getExpiryDate().toString(), ","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"Vinci-Hu"},"content":"                getStorageLocation().name(),","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"Vinci-Hu"},"content":"                getQuantity());","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"Vinci-Hu"},"content":"    public FoodCategory getCategory() {","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"Vinci-Hu"},"content":"        return category;","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"Vinci-Hu"},"content":"    public void setCategory(FoodCategory category) {","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"Vinci-Hu"},"content":"        this.category \u003d category;","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"Vinci-Hu"},"content":"    public String getFoodName() {","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"Vinci-Hu"},"content":"        return foodName;","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"Vinci-Hu"},"content":"    public void setFoodName(String foodName) {","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"Vinci-Hu"},"content":"        this.foodName \u003d foodName;","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"Vinci-Hu"},"content":"    public ExpiryDate getExpiryDate() {","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"Vinci-Hu"},"content":"        return expiryDate;","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"Vinci-Hu"},"content":"    public void setExpiryDate(String expiryString) throws InvalidDateException {","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"Vinci-Hu"},"content":"        ExpiryDate expiryDate \u003d new ExpiryDate(expiryString);","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"Vinci-Hu"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"Vinci-Hu"},"content":"        if (this.hasExpired()) {","lastModifiedDate":"2021-04-05"},{"lineNumber":69,"author":{"gitId":"Vinci-Hu"},"content":"            throw new InvalidDateException(\"Sorry, the food has already expired!\");","lastModifiedDate":"2021-04-05"},{"lineNumber":70,"author":{"gitId":"Vinci-Hu"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":71,"author":{"gitId":"Vinci-Hu"},"content":"        LoggingHandler.logInfo(\"Expiry date has been changed to \"","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"Vinci-Hu"},"content":"                + expiryDate + \" in food object \" + foodName);","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"Vinci-Hu"},"content":"    public FoodStorageLocation getStorageLocation() {","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"Vinci-Hu"},"content":"        return storageLocation;","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"Vinci-Hu"},"content":"    public void setStorageLocation(FoodStorageLocation storageLocation) {","lastModifiedDate":"2021-03-08"},{"lineNumber":80,"author":{"gitId":"Vinci-Hu"},"content":"        this.storageLocation \u003d storageLocation;","lastModifiedDate":"2021-03-08"},{"lineNumber":81,"author":{"gitId":"Vinci-Hu"},"content":"        LoggingHandler","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"Vinci-Hu"},"content":"                .logInfo(\"Storage location has been changed to \" + storageLocation + \" in food object \" + foodName);","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"Vinci-Hu"},"content":"    public boolean isExpiring() {","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"Vinci-Hu"},"content":"        LocalDate cutOff \u003d LocalDate.now().plusDays(7);","lastModifiedDate":"2021-03-22"},{"lineNumber":87,"author":{"gitId":"Vinci-Hu"},"content":"        LocalDate expiry \u003d this.getExpiryDate().getExpiry();","lastModifiedDate":"2021-03-22"},{"lineNumber":88,"author":{"gitId":"Vinci-Hu"},"content":"        return expiry.isBefore(cutOff);","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":90,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":91,"author":{"gitId":"Vinci-Hu"},"content":"    public boolean hasExpired() {","lastModifiedDate":"2021-04-05"},{"lineNumber":92,"author":{"gitId":"Vinci-Hu"},"content":"        LocalDate cutOff \u003d LocalDate.now();","lastModifiedDate":"2021-04-05"},{"lineNumber":93,"author":{"gitId":"Vinci-Hu"},"content":"        LocalDate expiry \u003d this.getExpiryDate().getExpiry();","lastModifiedDate":"2021-04-05"},{"lineNumber":94,"author":{"gitId":"Vinci-Hu"},"content":"        return expiry.isBefore(cutOff);","lastModifiedDate":"2021-04-05"},{"lineNumber":95,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":96,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":97,"author":{"gitId":"SimJJ96"},"content":"    //@@author SimJJ96","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"SimJJ96"},"content":"    public int getQuantity() {","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"SimJJ96"},"content":"        return quantity;","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":101,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":102,"author":{"gitId":"SimJJ96"},"content":"    public void setQuantity(int quantity) {","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"SimJJ96"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-03-22"},{"lineNumber":104,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":105,"author":{"gitId":"SimJJ96"},"content":"    //@@author","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"Vinci-Hu"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"kwokyto":5,"Vinci-Hu":91,"SimJJ96":10}},{"path":"src/main/java/seedu/fridgefriend/food/FoodCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.food;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"//@@author Vinci-Hu","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":" * Subject to changes with discussion.","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":"public enum FoodCategory {","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":"    VEGETABLE,      // e.g. eggplant, spinach, bok choy, including beans and fungus","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":"    FRUIT,          // e.g. strawberry, apple, grapes","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":"    MEAT,           // e.g. pork, beef, lamb, chicken","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":"    SEAFOOD,        // e.g. salmon, mackerel, crab, prawn","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":"    EGG,            // e.g. egg, duck egg, quail egg","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"    DAIRY,          // e.g. milk, butter, cheese, yoghurt","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":"    BEVERAGE,       // e.g. coke, orange juice","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"    COOKED_DISH,    // e.g. tomato scrambled eggs, chicken soup","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":"    READY_TO_EAT,   // e.g. sandwich","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"Vinci-Hu"},"content":"    FROZEN,    // e.g. frozen dumpling, ice cream","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"    OTHER;","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"    //@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"    private static int vegetableMinimumQuantity \u003d 500;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"    private static int fruitMinimumQuantity \u003d 500;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"    private static int meatMinimumQuantity \u003d 500;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"    private static int seafoodMinimumQuantity \u003d 500;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"    private static int eggMinimumQuantity \u003d 500;","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"    private static int dairyMinimumQuantity \u003d 500;","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"    private static int beverageMinimumQuantity \u003d 500;","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"    private static int cookedMinimumQuantity \u003d 500;","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"    private static int readyMinimumQuantity \u003d 500;","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"    private static int frozenMinimumQuantity \u003d 500;","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"    private static int otherMinimumQuantity \u003d 500;","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"    //@@author SimJJ96","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"    public static boolean contains(String string) {","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"        for (FoodCategory foodCategory : values()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"            if (foodCategory.name().equals(string)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"SimJJ96"},"content":"                return true;","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"SimJJ96"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"SimJJ96"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"SimJJ96"},"content":"        return false;","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"SimJJ96"},"content":"    //@author","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"SimJJ96"},"content":"    public static FoodCategory convertStringToFoodCategory(String rawCategoryStr) {","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"SimJJ96"},"content":"        String processedCategoryStr \u003d rawCategoryStr.toUpperCase();","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"SimJJ96"},"content":"        if (FoodCategory.contains(processedCategoryStr)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"SimJJ96"},"content":"            return FoodCategory.valueOf(processedCategoryStr);","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"SimJJ96"},"content":"        } else {","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"SimJJ96"},"content":"            return FoodCategory.OTHER;","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"SimJJ96"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"kwokyto"},"content":"    //@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"kwokyto"},"content":"    public static boolean isValidCategory(String line) {","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"kwokyto"},"content":"        return FoodCategory.contains(line.toUpperCase());","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"kwokyto"},"content":"    //@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"kwokyto"},"content":"    public static int getMinimumQuantity(FoodCategory foodCategory) {","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"kwokyto"},"content":"        assert foodCategory !\u003d null : \"foodCategory cannot be null\";","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"kwokyto"},"content":"        switch (foodCategory) {","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"kwokyto"},"content":"        case BEVERAGE:","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"kwokyto"},"content":"            return beverageMinimumQuantity;","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"kwokyto"},"content":"        case COOKED_DISH:","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"kwokyto"},"content":"            return cookedMinimumQuantity;","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"kwokyto"},"content":"        case DAIRY:","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"kwokyto"},"content":"            return dairyMinimumQuantity;","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"kwokyto"},"content":"        case EGG:","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"kwokyto"},"content":"            return eggMinimumQuantity;","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"kwokyto"},"content":"        case FROZEN:","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"kwokyto"},"content":"            return frozenMinimumQuantity;","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"kwokyto"},"content":"        case FRUIT:","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"kwokyto"},"content":"            return fruitMinimumQuantity;","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"kwokyto"},"content":"        case MEAT:","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"kwokyto"},"content":"            return meatMinimumQuantity;","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"kwokyto"},"content":"        case OTHER:","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"kwokyto"},"content":"            return otherMinimumQuantity;","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"kwokyto"},"content":"        case READY_TO_EAT:","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"kwokyto"},"content":"            return readyMinimumQuantity;","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"kwokyto"},"content":"        case SEAFOOD:","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"kwokyto"},"content":"            return seafoodMinimumQuantity;","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"kwokyto"},"content":"        case VEGETABLE:","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"kwokyto"},"content":"            return vegetableMinimumQuantity;","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"kwokyto"},"content":"        default:","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"kwokyto"},"content":"            return 0;","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"kwokyto"},"content":"    //@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"kwokyto"},"content":"    public static void setMinimumQuantity(FoodCategory foodCategory, int quantity) {","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"kwokyto"},"content":"        assert foodCategory !\u003d null : \"foodCategory cannot be null\";","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"kwokyto"},"content":"        switch (foodCategory) {","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"kwokyto"},"content":"        case BEVERAGE:","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"kwokyto"},"content":"            beverageMinimumQuantity \u003d quantity;","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"kwokyto"},"content":"            break;","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"kwokyto"},"content":"        case COOKED_DISH:","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"kwokyto"},"content":"            cookedMinimumQuantity \u003d quantity;","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"kwokyto"},"content":"            break;","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"kwokyto"},"content":"        case DAIRY:","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"kwokyto"},"content":"            dairyMinimumQuantity \u003d quantity;","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"kwokyto"},"content":"            break;","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"kwokyto"},"content":"        case EGG:","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"kwokyto"},"content":"            eggMinimumQuantity \u003d quantity;","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"kwokyto"},"content":"            break;","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"kwokyto"},"content":"        case FROZEN:","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"kwokyto"},"content":"            frozenMinimumQuantity \u003d quantity;","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"kwokyto"},"content":"            break;","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"kwokyto"},"content":"        case FRUIT:","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"kwokyto"},"content":"            fruitMinimumQuantity \u003d quantity;","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"kwokyto"},"content":"            break;","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"kwokyto"},"content":"        case MEAT:","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"kwokyto"},"content":"            meatMinimumQuantity \u003d quantity;","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"kwokyto"},"content":"            break;","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"kwokyto"},"content":"        case OTHER:","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"kwokyto"},"content":"            otherMinimumQuantity \u003d quantity;","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"kwokyto"},"content":"            break;","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"kwokyto"},"content":"        case READY_TO_EAT:","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"kwokyto"},"content":"            readyMinimumQuantity \u003d quantity;","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"kwokyto"},"content":"            break;","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"kwokyto"},"content":"        case SEAFOOD:","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"kwokyto"},"content":"            seafoodMinimumQuantity \u003d quantity;","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"kwokyto"},"content":"            break;","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"kwokyto"},"content":"        case VEGETABLE:","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"kwokyto"},"content":"            vegetableMinimumQuantity \u003d quantity;","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"kwokyto"},"content":"            break;","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"kwokyto"},"content":"        default:","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"kwokyto"},"content":"            return;","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"kwokyto"},"content":"    ","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-09"},{"lineNumber":132,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":133,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":134,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":135,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"kwokyto":96,"Vinci-Hu":18,"SimJJ96":21}},{"path":"src/main/java/seedu/fridgefriend/food/FoodStorageLocation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.food;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"//@@author Vinci-Hu","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":" * Assume the fridge has these storage locations","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":" * Reference: https://styledegree.sg/the-right-way-to-store-organize-food-in-fridge/","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":"public enum FoodStorageLocation {","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":"    FREEZER,","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":"    UPPER_SHELF,","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":"    MIDDLE_SHELF,","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":"    LOWER_SHELF,","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"    DRAWERS,","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":"    FRIDGE_DOOR,","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"    OTHER;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"Vinci-Hu"},"content":"    //@@author","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"    public static boolean contains(String string) {","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"Vinci-Hu"},"content":"        for (FoodStorageLocation location : values()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"Vinci-Hu"},"content":"            if (location.name().equals(string)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"Vinci-Hu"},"content":"                return true;","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"Vinci-Hu"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"Vinci-Hu"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"Vinci-Hu"},"content":"        return false;","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"Vinci-Hu"},"content":"    public static FoodStorageLocation convertStringToLocation(String rawLocationStr) {","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"Vinci-Hu"},"content":"        String processedLocationStr \u003d rawLocationStr.toUpperCase();","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"Vinci-Hu"},"content":"        if (FoodStorageLocation.contains(processedLocationStr)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"Vinci-Hu"},"content":"            return FoodStorageLocation.valueOf(processedLocationStr);","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"Vinci-Hu"},"content":"        } else {","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"Vinci-Hu"},"content":"            return FoodStorageLocation.OTHER;","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"Vinci-Hu"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"Vinci-Hu"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"Vinci-Hu":34,"SimJJ96":1}},{"path":"src/main/java/seedu/fridgefriend/food/Fridge.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.food;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":"import seedu.fridgefriend.exception.RepetitiveFoodIdentifierException;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"public class Fridge {","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"    private ArrayList\u003cFood\u003e fridge \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":"    //@@author Vinci-Hu","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":"     * Call the UniqueFoodnameChecker methods before adding.","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"     * Checks if foodname already exists;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":"     * checks if its quantity can be added to existing food item.","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"Vinci-Hu"},"content":"     * If foodname exists but storage or expiry information are not identical,","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"     * will throw an exception to ask user to use a different foodname.","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"Vinci-Hu"},"content":"     * @param food food object to add obtained from parser.","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"Vinci-Hu"},"content":"     * @throws RepetitiveFoodIdentifierException as name suggests.","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"Vinci-Hu"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"Vinci-Hu"},"content":"    public void add(Food food) throws RepetitiveFoodIdentifierException {","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"Vinci-Hu"},"content":"        UniqueFoodnameChecker checker \u003d new UniqueFoodnameChecker(fridge, food);","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"Vinci-Hu"},"content":"        if (checker.isFoodnameUnique()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"Vinci-Hu"},"content":"            fridge.add(food);","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"Vinci-Hu"},"content":"        } else {","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"Vinci-Hu"},"content":"            if (checker.isParamIdentical()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"Vinci-Hu"},"content":"                Food existingFood \u003d checker.getExistingFood();","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"Vinci-Hu"},"content":"                editFoodQuantity(food, existingFood);","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"Vinci-Hu"},"content":"            } else {","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"Vinci-Hu"},"content":"                throw new RepetitiveFoodIdentifierException();","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"Vinci-Hu"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"Vinci-Hu"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"    //@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"    public int getSize() {","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"        return fridge.size();","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"    //@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"    public Food getFood(int i) {","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"        return fridge.get(i);","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"    //@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"kwokyto"},"content":"    public void removeByIndex(int index) {","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"        fridge.remove(index);","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"Vinci-Hu"},"content":"    //@@author Vinci-Hu","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"Vinci-Hu"},"content":"    private void editFoodQuantity(Food newFood, Food existingFood) {","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"Vinci-Hu"},"content":"        int deltaQuantity \u003d newFood.getQuantity();","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"Vinci-Hu"},"content":"        int oriQuantity \u003d existingFood.getQuantity();","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"Vinci-Hu"},"content":"        int newQuantity \u003d deltaQuantity + oriQuantity;","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"Vinci-Hu"},"content":"        newFood.setQuantity(newQuantity);","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"Vinci-Hu"},"content":"        existingFood.setQuantity(newQuantity);","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"Vinci-Hu"},"content":"    public ArrayList\u003cFood\u003e getFridge() {","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"Vinci-Hu"},"content":"        return fridge;","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"Vinci-Hu"},"content":"    public void clearFridge() {","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"Vinci-Hu"},"content":"        fridge.clear();","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"Vinci-Hu"},"content":"  ","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"kwokyto"},"content":"    //@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"kwokyto"},"content":"     * Returns a boolean indicated if the food in a category is running out.","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"kwokyto"},"content":"     * ","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"kwokyto"},"content":"     * @param foodCategory category to check","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"kwokyto"},"content":"     * @return true if food in that category is running out, false otherwise","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"kwokyto"},"content":"    public boolean isRunningOut(FoodCategory foodCategory) {","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"kwokyto"},"content":"        int totalQuantity \u003d getTotalQuantity(foodCategory);","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"kwokyto"},"content":"        return totalQuantity \u003c FoodCategory.getMinimumQuantity(foodCategory);","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"kwokyto"},"content":"    //@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"kwokyto"},"content":"    public int getTotalQuantity(FoodCategory foodCategory) {","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"kwokyto"},"content":"        int totalQuantity \u003d 0;","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"kwokyto"},"content":"        for (Food food : this.fridge) {","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"kwokyto"},"content":"            if (food.getCategory() \u003d\u003d foodCategory) {","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"kwokyto"},"content":"                totalQuantity +\u003d food.getQuantity();","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"kwokyto"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"kwokyto"},"content":"        return totalQuantity;","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"kwokyto":44,"Vinci-Hu":45,"SimJJ96":1}},{"path":"src/main/java/seedu/fridgefriend/food/UniqueFoodnameChecker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Vinci-Hu"},"content":"package seedu.fridgefriend.food;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":"//@@author Vinci-Hu","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":" * The checker is used to detect if a new food added is unique.","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":" * Unique means it is not exactly the same as an existing food","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":" * except quantity field.","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":"public class UniqueFoodnameChecker {","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"    private ArrayList\u003cFood\u003e fridge \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":"    private Food foodToCheck;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"    private Food existingFood \u003d null;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"Vinci-Hu"},"content":"    public Food getExistingFood() {","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"        return existingFood;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"Vinci-Hu"},"content":"    public UniqueFoodnameChecker(ArrayList\u003cFood\u003e currentFridge, Food foodToAdd) {","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"Vinci-Hu"},"content":"        fridge \u003d currentFridge;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"Vinci-Hu"},"content":"        foodToCheck \u003d foodToAdd;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"Vinci-Hu"},"content":"    public boolean isFoodnameUnique() {","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"Vinci-Hu"},"content":"        String nameToCheck \u003d foodToCheck.getFoodName();","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"Vinci-Hu"},"content":"        for (Food food : fridge) {","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"Vinci-Hu"},"content":"            if (nameToCheck.equals(food.getFoodName())) {","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"Vinci-Hu"},"content":"                existingFood \u003d food;","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"Vinci-Hu"},"content":"                return false;","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"Vinci-Hu"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"Vinci-Hu"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"Vinci-Hu"},"content":"        return true;","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"Vinci-Hu"},"content":"    public boolean isParamIdentical() {","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"Vinci-Hu"},"content":"        boolean isLocIdentical \u003d foodToCheck.getStorageLocation()","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"Vinci-Hu"},"content":"                .equals(existingFood.getStorageLocation());","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"Vinci-Hu"},"content":"        boolean isCatIdentical \u003d foodToCheck.getCategory()","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"Vinci-Hu"},"content":"                .equals(existingFood.getCategory());","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"Vinci-Hu"},"content":"        boolean isExpIdentical \u003d foodToCheck.getExpiryDate().toString()","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"Vinci-Hu"},"content":"                .equals(existingFood.getExpiryDate().toString());","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"Vinci-Hu"},"content":"        return isLocIdentical \u0026\u0026 isCatIdentical \u0026\u0026 isExpIdentical;","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"Vinci-Hu"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"Vinci-Hu":46}},{"path":"src/main/java/seedu/fridgefriend/food/categories/Beverage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leeyp"},"content":"package seedu.fridgefriend.food.categories;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.exception.InvalidDateException;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"Leeyp"},"content":"//@@author leeyp","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"Leeyp"},"content":"public class Beverage extends Food {","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"Leeyp"},"content":"    public Beverage(String foodName, FoodCategory category, String expiryString,","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"Leeyp"},"content":"                    FoodStorageLocation storageLocation, int quantity)","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Leeyp"},"content":"                    throws InvalidDateException {","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"Leeyp"},"content":"        super(foodName, category, expiryString, storageLocation, quantity);","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"Leeyp"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"Leeyp":17}},{"path":"src/main/java/seedu/fridgefriend/food/categories/CookedDish.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leeyp"},"content":"package seedu.fridgefriend.food.categories;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.exception.InvalidDateException;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"Leeyp"},"content":"//@@author leeyp","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"Leeyp"},"content":"public class CookedDish extends Food {","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"Leeyp"},"content":"    public CookedDish(String foodName, FoodCategory category, String expiryString,","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"Leeyp"},"content":"                      FoodStorageLocation storageLocation, int quantity)","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Leeyp"},"content":"                      throws InvalidDateException {","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"Leeyp"},"content":"        super(foodName, category, expiryString, storageLocation, quantity);","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"Leeyp"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"Leeyp":16}},{"path":"src/main/java/seedu/fridgefriend/food/categories/Dairy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leeyp"},"content":"package seedu.fridgefriend.food.categories;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.exception.InvalidDateException;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"Leeyp"},"content":"//@@author leeyp","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"Leeyp"},"content":"public class Dairy extends Food {","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"Leeyp"},"content":"    public Dairy(String foodName, FoodCategory category, String expiryString,","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"Leeyp"},"content":"                 FoodStorageLocation storageLocation, int quantity)","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Leeyp"},"content":"                 throws InvalidDateException {","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"Leeyp"},"content":"        super(foodName, category, expiryString, storageLocation, quantity);","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"Leeyp"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"Leeyp":16}},{"path":"src/main/java/seedu/fridgefriend/food/categories/Egg.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leeyp"},"content":"package seedu.fridgefriend.food.categories;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.exception.InvalidDateException;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"Leeyp"},"content":"//@@author leeyp","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"Leeyp"},"content":"public class Egg extends Food {","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"Leeyp"},"content":"    public Egg(String foodName, FoodCategory category, String expiryString,","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"Leeyp"},"content":"               FoodStorageLocation storageLocation, int quantity)","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Leeyp"},"content":"               throws InvalidDateException {","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"Leeyp"},"content":"        super(foodName, category, expiryString, storageLocation, quantity);","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"Leeyp"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"Leeyp":16}},{"path":"src/main/java/seedu/fridgefriend/food/categories/Frozen.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leeyp"},"content":"package seedu.fridgefriend.food.categories;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.exception.InvalidDateException;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"Leeyp"},"content":"//@@author leeyp","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"Leeyp"},"content":"public class Frozen extends Food {","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"Leeyp"},"content":"    public Frozen(String foodName, FoodCategory category, String expiryString,","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"Leeyp"},"content":"                  FoodStorageLocation storageLocation, int quantity)","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Leeyp"},"content":"                  throws InvalidDateException {","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"Leeyp"},"content":"        super(foodName, category, expiryString, storageLocation, quantity);","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"Leeyp"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"Leeyp":16}},{"path":"src/main/java/seedu/fridgefriend/food/categories/Fruit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leeyp"},"content":"package seedu.fridgefriend.food.categories;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.exception.InvalidDateException;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"Leeyp"},"content":"//@@author leeyp","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"Leeyp"},"content":"public class Fruit extends Food {","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"Leeyp"},"content":"    public Fruit(String foodName, FoodCategory category, String expiryString,","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"Leeyp"},"content":"                 FoodStorageLocation storageLocation, int quantity)","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Leeyp"},"content":"                 throws InvalidDateException {","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"Leeyp"},"content":"        super(foodName, category, expiryString, storageLocation, quantity);","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"Leeyp"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"Leeyp":16}},{"path":"src/main/java/seedu/fridgefriend/food/categories/Meat.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leeyp"},"content":"package seedu.fridgefriend.food.categories;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.exception.InvalidDateException;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"Leeyp"},"content":"//@@author leeyp","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"Leeyp"},"content":"public class Meat extends Food {","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"Leeyp"},"content":"    public Meat(String foodName, FoodCategory category, String expiryString,","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"Leeyp"},"content":"                FoodStorageLocation storageLocation, int quantity)","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Leeyp"},"content":"                throws InvalidDateException {","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"Leeyp"},"content":"        super(foodName, category, expiryString, storageLocation, quantity);","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"Leeyp"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"Leeyp":16}},{"path":"src/main/java/seedu/fridgefriend/food/categories/Other.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leeyp"},"content":"package seedu.fridgefriend.food.categories;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.exception.InvalidDateException;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"Leeyp"},"content":"//@@author leeyp","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"Leeyp"},"content":"public class Other extends Food {","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"Leeyp"},"content":"    public Other(String foodName, FoodCategory category, String expiryString,","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"Leeyp"},"content":"                 FoodStorageLocation storageLocation, int quantity)","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Leeyp"},"content":"                 throws InvalidDateException {","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"Leeyp"},"content":"        super(foodName, category, expiryString, storageLocation, quantity);","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"Leeyp"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"Leeyp":16}},{"path":"src/main/java/seedu/fridgefriend/food/categories/ReadyToEat.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leeyp"},"content":"package seedu.fridgefriend.food.categories;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.exception.InvalidDateException;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"Leeyp"},"content":"//@@author leeyp","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"Leeyp"},"content":"public class ReadyToEat extends Food {","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"Leeyp"},"content":"    public ReadyToEat(String foodName, FoodCategory category, String expiryString,","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"Leeyp"},"content":"                      FoodStorageLocation storageLocation, int quantity)","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Leeyp"},"content":"                      throws InvalidDateException {","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"Leeyp"},"content":"        super(foodName, category, expiryString, storageLocation, quantity);","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"Leeyp"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"Leeyp":16}},{"path":"src/main/java/seedu/fridgefriend/food/categories/Seafood.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leeyp"},"content":"package seedu.fridgefriend.food.categories;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.exception.InvalidDateException;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"Leeyp"},"content":"//@@author leeyp","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"Leeyp"},"content":"public class Seafood extends Food {","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"Leeyp"},"content":"    public Seafood(String foodName, FoodCategory category, String expiryString,","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"Leeyp"},"content":"                   FoodStorageLocation storageLocation, int quantity)","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Leeyp"},"content":"                   throws InvalidDateException {","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"Leeyp"},"content":"        super(foodName, category, expiryString, storageLocation, quantity);","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"Leeyp"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"Leeyp":16}},{"path":"src/main/java/seedu/fridgefriend/food/categories/Vegetable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leeyp"},"content":"package seedu.fridgefriend.food.categories;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.exception.InvalidDateException;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"Leeyp"},"content":"//@@author leeyp","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"Leeyp"},"content":"public class Vegetable extends Food {","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"Leeyp"},"content":"    public Vegetable(String foodName, FoodCategory category, String expiryString,","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"Leeyp"},"content":"                     FoodStorageLocation storageLocation, int quantity)","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Leeyp"},"content":"                     throws InvalidDateException {","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"Leeyp"},"content":"        super(foodName, category, expiryString, storageLocation, quantity);","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"Leeyp"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"Leeyp":16}},{"path":"src/main/java/seedu/fridgefriend/utilities/LoggingHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.utilities;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"//@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":" * Represents a logging object with name FridgeFriend.","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"public class LoggingHandler {","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"    private static Logger logger \u003d Logger.getLogger(\"FridgeFriend\");","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"    ","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"     * Logs a message at level INFO.","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"    public static void logInfo(String message) {","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"        logger.setLevel(Level.WARNING);","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"        logger.log(Level.INFO, message);","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"     * Logs a message at level INFO with an exception.","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"    public static void logInfo(String message, Throwable e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"        logger.setLevel(Level.WARNING);","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"        logger.log(Level.INFO, message, e);","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"     * Logs a message at level WARNING.","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"    public static void logWarning(String message) {","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"        logger.log(Level.WARNING, message);","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"     * Logs a message at level WARNING with an exception.","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"    public static void logWarning(String message, Throwable e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"        logger.log(Level.WARNING, message, e);","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":"     * Logs a message at level SEVERE.","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"    public static void logSevere(String message) {","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"kwokyto"},"content":"        logger.log(Level.SEVERE, message);","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"kwokyto"},"content":"     * Logs a message at level SEVERE with an exception.","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"kwokyto"},"content":"    public static void logSevere(String message, Throwable e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"kwokyto"},"content":"        logger.log(Level.SEVERE, message, e);","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"kwokyto":56}},{"path":"src/main/java/seedu/fridgefriend/utilities/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.utilities;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import static seedu.fridgefriend.food.FoodCategory.convertStringToFoodCategory;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import static seedu.fridgefriend.food.FoodStorageLocation.convertStringToLocation;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.command.AddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.command.ByeCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":"import seedu.fridgefriend.command.ClearCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.command.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.command.ExpiringCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.command.HelpCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.command.HistoryCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.command.ListCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.command.RemoveCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.command.RunningLowCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.command.SearchCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.command.SetLimitCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.EmptyDescriptionException;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Vinci-Hu"},"content":"import seedu.fridgefriend.exception.FoodNameNotFoundException;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidDateException;","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidFoodCategoryException;","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidInputException;","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.exception.InvalidQuantityException;","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":" * Represents an object that deals with making sense of the user command.","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"public class Parser {","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"    private static final int COMMAND_WORD_INDEX \u003d 0;","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"    private static final int NUMBER_OF_PHRASES \u003d 2;","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"Vinci-Hu"},"content":"    //@@author Vinci-Hu","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"Vinci-Hu"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"Vinci-Hu"},"content":"     * Define arguments format for add food command.","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"Vinci-Hu"},"content":"     * A Pattern object which defines how the input string for food item","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"Vinci-Hu"},"content":"     * that should look like. [^/]+ implies 1 or more characters except for \u0027/\u0027","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"Vinci-Hu"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"Vinci-Hu"},"content":"    private static final Pattern FOOD_DATA_ARGS_FORMAT \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"Vinci-Hu"},"content":"            Pattern.compile(\"(?\u003cname\u003e[^/]+)\"","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"Vinci-Hu"},"content":"                    + \" /cat (?\u003ccategory\u003e[^/]+)\"","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"Vinci-Hu"},"content":"                    + \" /exp (?\u003cexpiryDate\u003e[^/]+)\"","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"Vinci-Hu"},"content":"                    + \" /loc (?\u003cstorageLocation\u003e[^/]+)\"","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"Vinci-Hu"},"content":"                    + \" /qty (?\u003cquantity\u003e[^/]+)\");","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"Vinci-Hu"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"Vinci-Hu"},"content":"     * Define arguments format for remove food command with quantity.","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"Vinci-Hu"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"Vinci-Hu"},"content":"    private static final Pattern REMOVE_ARGS_FORMAT \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"Vinci-Hu"},"content":"            Pattern.compile(\"(?\u003cname\u003e[^/]+)\"","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"Vinci-Hu"},"content":"                    + \" /qty (?\u003cquantity\u003e[^/]+)\");","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"Vinci-Hu"},"content":"    //@@author","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"kwokyto"},"content":"     * Define arguments format for remove food command with quantity.","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"kwokyto"},"content":"    private static final Pattern SET_LIMIT_ARGS_FORMAT \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"kwokyto"},"content":"            Pattern.compile(\"(?\u003cfoodCategory\u003e[^/]+)\"","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"kwokyto"},"content":"                    + \" /qty (?\u003cquantity\u003e[^/]+)\");","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"SimJJ96"},"content":"    //@@author SimJJ96","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"SimJJ96"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"SimJJ96"},"content":"     * Returns a Command object based on the user\u0027s raw input.","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"SimJJ96"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"SimJJ96"},"content":"     * @param input user\u0027s raw input","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"SimJJ96"},"content":"     * @return Command object","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"SimJJ96"},"content":"     * @throws EmptyDescriptionException if the required description field is empty","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"SimJJ96"},"content":"     * @throws InvalidInputException if the command is not recognised","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"SimJJ96"},"content":"     * @throws InvalidDateException if the date input cannot be parsed","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"SimJJ96"},"content":"     * @throws InvalidQuantityException if the quantity input cannot be parsed","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"SimJJ96"},"content":"     * @throws InvalidFoodCategoryException if the catgory input cannot be parsed","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"SimJJ96"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"SimJJ96"},"content":"    public static Command getCommand(String input)","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"SimJJ96"},"content":"            throws EmptyDescriptionException, InvalidInputException, InvalidDateException,","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"SimJJ96"},"content":"            InvalidQuantityException, FoodNameNotFoundException, InvalidFoodCategoryException {","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"SimJJ96"},"content":"        String[] parsedInput \u003d parseInput(input);","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"SimJJ96"},"content":"        Command command \u003d parseCommand(parsedInput);","lastModifiedDate":"2021-03-12"},{"lineNumber":82,"author":{"gitId":"SimJJ96"},"content":"        return command;","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":85,"author":{"gitId":"SimJJ96"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"SimJJ96"},"content":"     * Parses input into command and description.","lastModifiedDate":"2021-03-12"},{"lineNumber":87,"author":{"gitId":"SimJJ96"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"SimJJ96"},"content":"     * @param input user input string","lastModifiedDate":"2021-03-12"},{"lineNumber":89,"author":{"gitId":"SimJJ96"},"content":"     * @return String array of command and description","lastModifiedDate":"2021-03-12"},{"lineNumber":90,"author":{"gitId":"SimJJ96"},"content":"     * @throws InvalidInputException if the input is empty","lastModifiedDate":"2021-03-12"},{"lineNumber":91,"author":{"gitId":"SimJJ96"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":92,"author":{"gitId":"SimJJ96"},"content":"    public static String[] parseInput(String input) throws InvalidInputException {","lastModifiedDate":"2021-03-12"},{"lineNumber":93,"author":{"gitId":"SimJJ96"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":94,"author":{"gitId":"SimJJ96"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2021-03-12"},{"lineNumber":95,"author":{"gitId":"SimJJ96"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":96,"author":{"gitId":"SimJJ96"},"content":"        //remove trailing whitespaces and parse input into two separated by a whitespace","lastModifiedDate":"2021-03-12"},{"lineNumber":97,"author":{"gitId":"SimJJ96"},"content":"        String[] words \u003d input.trim().split(\"\\\\s+\", Parser.NUMBER_OF_PHRASES);","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"SimJJ96"},"content":"        if (words.length \u003d\u003d Parser.NUMBER_OF_PHRASES) {","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"SimJJ96"},"content":"            return words;","lastModifiedDate":"2021-03-12"},{"lineNumber":100,"author":{"gitId":"SimJJ96"},"content":"        } else {","lastModifiedDate":"2021-03-12"},{"lineNumber":101,"author":{"gitId":"SimJJ96"},"content":"            //return an array of command and empty description","lastModifiedDate":"2021-03-12"},{"lineNumber":102,"author":{"gitId":"SimJJ96"},"content":"            return new String[] {words[COMMAND_WORD_INDEX], \"\"};","lastModifiedDate":"2021-03-22"},{"lineNumber":103,"author":{"gitId":"SimJJ96"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":104,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":105,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":106,"author":{"gitId":"SimJJ96"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":107,"author":{"gitId":"SimJJ96"},"content":"     * Returns the appropriate Command object based on command and description.","lastModifiedDate":"2021-03-12"},{"lineNumber":108,"author":{"gitId":"SimJJ96"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":109,"author":{"gitId":"SimJJ96"},"content":"     * @param parsedInput string array containing command and description","lastModifiedDate":"2021-03-12"},{"lineNumber":110,"author":{"gitId":"SimJJ96"},"content":"     * @return Command object","lastModifiedDate":"2021-03-12"},{"lineNumber":111,"author":{"gitId":"SimJJ96"},"content":"     * @throws EmptyDescriptionException if the required description field is empty","lastModifiedDate":"2021-03-12"},{"lineNumber":112,"author":{"gitId":"SimJJ96"},"content":"     * @throws InvalidInputException if the command is not recognised","lastModifiedDate":"2021-03-12"},{"lineNumber":113,"author":{"gitId":"SimJJ96"},"content":"     * @throws InvalidDateException if the date input cannot be parsed","lastModifiedDate":"2021-03-13"},{"lineNumber":114,"author":{"gitId":"SimJJ96"},"content":"     * @throws InvalidQuantityException if the quantity input cannot be parsed","lastModifiedDate":"2021-03-22"},{"lineNumber":115,"author":{"gitId":"SimJJ96"},"content":"     * @throws InvalidFoodCategoryException if the catgory input cannot be parsed","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"SimJJ96"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":117,"author":{"gitId":"SimJJ96"},"content":"    public static Command parseCommand(String[] parsedInput)","lastModifiedDate":"2021-03-12"},{"lineNumber":118,"author":{"gitId":"SimJJ96"},"content":"            throws EmptyDescriptionException, InvalidInputException, InvalidDateException,","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"SimJJ96"},"content":"            InvalidQuantityException, FoodNameNotFoundException, InvalidFoodCategoryException {","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"SimJJ96"},"content":"        String commandString \u003d parsedInput[COMMAND_WORD_INDEX];","lastModifiedDate":"2021-03-22"},{"lineNumber":121,"author":{"gitId":"SimJJ96"},"content":"        String description \u003d parsedInput[1];","lastModifiedDate":"2021-03-12"},{"lineNumber":122,"author":{"gitId":"SimJJ96"},"content":"        Command command;","lastModifiedDate":"2021-03-12"},{"lineNumber":123,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":124,"author":{"gitId":"SimJJ96"},"content":"        switch (commandString.toLowerCase()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":125,"author":{"gitId":"SimJJ96"},"content":"        case \"add\":","lastModifiedDate":"2021-03-12"},{"lineNumber":126,"author":{"gitId":"SimJJ96"},"content":"            command \u003d Parser.getAddCommand(description);","lastModifiedDate":"2021-03-12"},{"lineNumber":127,"author":{"gitId":"SimJJ96"},"content":"            break;","lastModifiedDate":"2021-03-12"},{"lineNumber":128,"author":{"gitId":"SimJJ96"},"content":"        case \"list\":","lastModifiedDate":"2021-03-12"},{"lineNumber":129,"author":{"gitId":"SimJJ96"},"content":"            command \u003d Parser.getListCommand(description);","lastModifiedDate":"2021-03-12"},{"lineNumber":130,"author":{"gitId":"SimJJ96"},"content":"            break;","lastModifiedDate":"2021-03-12"},{"lineNumber":131,"author":{"gitId":"SimJJ96"},"content":"        case \"remove\":","lastModifiedDate":"2021-03-12"},{"lineNumber":132,"author":{"gitId":"SimJJ96"},"content":"            command \u003d Parser.getRemoveCommand(description);","lastModifiedDate":"2021-03-12"},{"lineNumber":133,"author":{"gitId":"SimJJ96"},"content":"            break;","lastModifiedDate":"2021-03-12"},{"lineNumber":134,"author":{"gitId":"SimJJ96"},"content":"        case \"search\":","lastModifiedDate":"2021-03-12"},{"lineNumber":135,"author":{"gitId":"SimJJ96"},"content":"            command \u003d Parser.getSearchCommand(description);","lastModifiedDate":"2021-03-12"},{"lineNumber":136,"author":{"gitId":"SimJJ96"},"content":"            break;","lastModifiedDate":"2021-03-12"},{"lineNumber":137,"author":{"gitId":"SimJJ96"},"content":"        case \"expiring\":","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"SimJJ96"},"content":"            command \u003d Parser.getExpiringCommand();","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"SimJJ96"},"content":"            break;","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"SimJJ96"},"content":"        case \"runninglow\":","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"SimJJ96"},"content":"            command \u003d Parser.getRunningLowCommand();","lastModifiedDate":"2021-03-24"},{"lineNumber":142,"author":{"gitId":"SimJJ96"},"content":"            break;","lastModifiedDate":"2021-03-24"},{"lineNumber":143,"author":{"gitId":"SimJJ96"},"content":"        case \"setlimit\":","lastModifiedDate":"2021-03-24"},{"lineNumber":144,"author":{"gitId":"SimJJ96"},"content":"            command \u003d Parser.getSetLimitCommand(description);","lastModifiedDate":"2021-03-24"},{"lineNumber":145,"author":{"gitId":"SimJJ96"},"content":"            break;","lastModifiedDate":"2021-03-24"},{"lineNumber":146,"author":{"gitId":"SimJJ96"},"content":"        case \"help\":","lastModifiedDate":"2021-03-13"},{"lineNumber":147,"author":{"gitId":"SimJJ96"},"content":"            command \u003d Parser.getHelpCommand();","lastModifiedDate":"2021-03-13"},{"lineNumber":148,"author":{"gitId":"SimJJ96"},"content":"            break;","lastModifiedDate":"2021-03-13"},{"lineNumber":149,"author":{"gitId":"SimJJ96"},"content":"        case \"clear\":","lastModifiedDate":"2021-03-23"},{"lineNumber":150,"author":{"gitId":"SimJJ96"},"content":"            command \u003d Parser.getClearCommand();","lastModifiedDate":"2021-03-24"},{"lineNumber":151,"author":{"gitId":"SimJJ96"},"content":"            break;","lastModifiedDate":"2021-03-23"},{"lineNumber":152,"author":{"gitId":"SimJJ96"},"content":"        case \"history\":","lastModifiedDate":"2021-03-27"},{"lineNumber":153,"author":{"gitId":"SimJJ96"},"content":"            command \u003d Parser.getHistoryCommand(description);","lastModifiedDate":"2021-03-27"},{"lineNumber":154,"author":{"gitId":"SimJJ96"},"content":"            break;","lastModifiedDate":"2021-03-27"},{"lineNumber":155,"author":{"gitId":"SimJJ96"},"content":"        case \"bye\":","lastModifiedDate":"2021-03-12"},{"lineNumber":156,"author":{"gitId":"SimJJ96"},"content":"            command \u003d Parser.getByeCommand();","lastModifiedDate":"2021-03-12"},{"lineNumber":157,"author":{"gitId":"SimJJ96"},"content":"            break;","lastModifiedDate":"2021-03-12"},{"lineNumber":158,"author":{"gitId":"SimJJ96"},"content":"        default:","lastModifiedDate":"2021-03-12"},{"lineNumber":159,"author":{"gitId":"SimJJ96"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2021-03-12"},{"lineNumber":160,"author":{"gitId":"SimJJ96"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":161,"author":{"gitId":"SimJJ96"},"content":"        assert command !\u003d null : \"Command should not be null\";","lastModifiedDate":"2021-03-13"},{"lineNumber":162,"author":{"gitId":"SimJJ96"},"content":"        return command;","lastModifiedDate":"2021-03-12"},{"lineNumber":163,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":164,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":165,"author":{"gitId":"SimJJ96"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":166,"author":{"gitId":"SimJJ96"},"content":"     * Returns an AddCommand object based on description.","lastModifiedDate":"2021-03-24"},{"lineNumber":167,"author":{"gitId":"SimJJ96"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":168,"author":{"gitId":"SimJJ96"},"content":"     * @param description description for command","lastModifiedDate":"2021-03-24"},{"lineNumber":169,"author":{"gitId":"SimJJ96"},"content":"     * @return AddCommand object","lastModifiedDate":"2021-03-24"},{"lineNumber":170,"author":{"gitId":"SimJJ96"},"content":"     * @throws EmptyDescriptionException if the description is empty","lastModifiedDate":"2021-03-24"},{"lineNumber":171,"author":{"gitId":"SimJJ96"},"content":"     * @throws InvalidInputException if the description cannot parse","lastModifiedDate":"2021-03-24"},{"lineNumber":172,"author":{"gitId":"SimJJ96"},"content":"     * @throws InvalidDateException if the date input cannot be parsed","lastModifiedDate":"2021-03-24"},{"lineNumber":173,"author":{"gitId":"SimJJ96"},"content":"     * @throws InvalidQuantityException if the quantity input cannot be parsed","lastModifiedDate":"2021-03-24"},{"lineNumber":174,"author":{"gitId":"SimJJ96"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":175,"author":{"gitId":"SimJJ96"},"content":"    private static Command getAddCommand(String description)","lastModifiedDate":"2021-03-24"},{"lineNumber":176,"author":{"gitId":"SimJJ96"},"content":"            throws EmptyDescriptionException, InvalidInputException,","lastModifiedDate":"2021-03-24"},{"lineNumber":177,"author":{"gitId":"SimJJ96"},"content":"            InvalidDateException, InvalidQuantityException {","lastModifiedDate":"2021-03-24"},{"lineNumber":178,"author":{"gitId":"SimJJ96"},"content":"        Command addCommand \u003d parseAddDescription(description);","lastModifiedDate":"2021-03-29"},{"lineNumber":179,"author":{"gitId":"SimJJ96"},"content":"        return addCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":180,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":181,"author":{"gitId":"SimJJ96"},"content":"    //@@author","lastModifiedDate":"2021-03-29"},{"lineNumber":182,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":183,"author":{"gitId":"Vinci-Hu"},"content":"    //@@author Vinci-Hu","lastModifiedDate":"2021-03-29"},{"lineNumber":184,"author":{"gitId":"Vinci-Hu"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":185,"author":{"gitId":"Vinci-Hu"},"content":"     * Parses description into name, foodCategory, expiryDate and storageLocation and quanity.","lastModifiedDate":"2021-03-29"},{"lineNumber":186,"author":{"gitId":"Vinci-Hu"},"content":"     * Matcher objects will try to parse a string according to the Pattern we define","lastModifiedDate":"2021-03-12"},{"lineNumber":187,"author":{"gitId":"Vinci-Hu"},"content":"     * like above FOOD_DATA_ARGS_FORMAT. For other future parsers can copy the usage here.","lastModifiedDate":"2021-03-12"},{"lineNumber":188,"author":{"gitId":"Vinci-Hu"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":189,"author":{"gitId":"Vinci-Hu"},"content":"     * @param foodDescription the string in the required format of food description","lastModifiedDate":"2021-03-12"},{"lineNumber":190,"author":{"gitId":"Vinci-Hu"},"content":"     * @return a new AddCommand for Food","lastModifiedDate":"2021-03-12"},{"lineNumber":191,"author":{"gitId":"Vinci-Hu"},"content":"     * @throws EmptyDescriptionException if the description is empty","lastModifiedDate":"2021-03-12"},{"lineNumber":192,"author":{"gitId":"Vinci-Hu"},"content":"     * @throws InvalidInputException if the description cannot parsed","lastModifiedDate":"2021-03-24"},{"lineNumber":193,"author":{"gitId":"Vinci-Hu"},"content":"     * @throws InvalidDateException if the date input cannot be parsed","lastModifiedDate":"2021-03-13"},{"lineNumber":194,"author":{"gitId":"Vinci-Hu"},"content":"     * @throws InvalidQuantityException if the quantity input cannot be parsed","lastModifiedDate":"2021-03-22"},{"lineNumber":195,"author":{"gitId":"Vinci-Hu"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":196,"author":{"gitId":"Vinci-Hu"},"content":"    private static Command parseAddDescription(String foodDescription)","lastModifiedDate":"2021-03-29"},{"lineNumber":197,"author":{"gitId":"Vinci-Hu"},"content":"            throws EmptyDescriptionException, InvalidInputException,","lastModifiedDate":"2021-03-23"},{"lineNumber":198,"author":{"gitId":"Vinci-Hu"},"content":"            InvalidDateException, InvalidQuantityException {","lastModifiedDate":"2021-03-23"},{"lineNumber":199,"author":{"gitId":"Vinci-Hu"},"content":"        if (foodDescription.isEmpty()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":200,"author":{"gitId":"Vinci-Hu"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2021-03-12"},{"lineNumber":201,"author":{"gitId":"Vinci-Hu"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":202,"author":{"gitId":"Vinci-Hu"},"content":"        Matcher matcherQuantity \u003d FOOD_DATA_ARGS_FORMAT.matcher(foodDescription.trim());","lastModifiedDate":"2021-03-23"},{"lineNumber":203,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":204,"author":{"gitId":"Vinci-Hu"},"content":"        // Validate foodDescription string format","lastModifiedDate":"2021-03-12"},{"lineNumber":205,"author":{"gitId":"Vinci-Hu"},"content":"        if (matcherQuantity.matches()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":206,"author":{"gitId":"Vinci-Hu"},"content":"            int quantity \u003d parseIntegerQuantity(matcherQuantity.group(\"quantity\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":207,"author":{"gitId":"Vinci-Hu"},"content":"            return new AddCommand(matcherQuantity.group(\"name\"),","lastModifiedDate":"2021-03-22"},{"lineNumber":208,"author":{"gitId":"Vinci-Hu"},"content":"                    convertStringToFoodCategory(matcherQuantity.group(\"category\")),","lastModifiedDate":"2021-03-22"},{"lineNumber":209,"author":{"gitId":"Vinci-Hu"},"content":"                    matcherQuantity.group(\"expiryDate\"),","lastModifiedDate":"2021-03-22"},{"lineNumber":210,"author":{"gitId":"Vinci-Hu"},"content":"                    convertStringToLocation(matcherQuantity.group(\"storageLocation\")),","lastModifiedDate":"2021-03-22"},{"lineNumber":211,"author":{"gitId":"Vinci-Hu"},"content":"                    quantity);","lastModifiedDate":"2021-03-22"},{"lineNumber":212,"author":{"gitId":"Vinci-Hu"},"content":"        } else {","lastModifiedDate":"2021-03-22"},{"lineNumber":213,"author":{"gitId":"Vinci-Hu"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2021-03-12"},{"lineNumber":214,"author":{"gitId":"Vinci-Hu"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":215,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":216,"author":{"gitId":"Vinci-Hu"},"content":"    //@@author","lastModifiedDate":"2021-03-29"},{"lineNumber":217,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":218,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":219,"author":{"gitId":"kwokyto"},"content":"     * Returns a ListCommand object based on description.","lastModifiedDate":"2021-03-12"},{"lineNumber":220,"author":{"gitId":"kwokyto"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":221,"author":{"gitId":"kwokyto"},"content":"     * @param description description for command","lastModifiedDate":"2021-03-12"},{"lineNumber":222,"author":{"gitId":"kwokyto"},"content":"     * @return ListCommand object","lastModifiedDate":"2021-03-12"},{"lineNumber":223,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":224,"author":{"gitId":"kwokyto"},"content":"    private static Command getListCommand(String description) {","lastModifiedDate":"2021-03-22"},{"lineNumber":225,"author":{"gitId":"kwokyto"},"content":"        Command listCommand \u003d new ListCommand(description);","lastModifiedDate":"2021-03-12"},{"lineNumber":226,"author":{"gitId":"kwokyto"},"content":"        return listCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":227,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":228,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":229,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":230,"author":{"gitId":"kwokyto"},"content":"     * Returns a RemoveCommand object based on description.","lastModifiedDate":"2021-03-12"},{"lineNumber":231,"author":{"gitId":"kwokyto"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":232,"author":{"gitId":"kwokyto"},"content":"     * @param description description for command","lastModifiedDate":"2021-03-12"},{"lineNumber":233,"author":{"gitId":"kwokyto"},"content":"     * @return RemoveCommand object","lastModifiedDate":"2021-03-12"},{"lineNumber":234,"author":{"gitId":"kwokyto"},"content":"     * @throws EmptyDescriptionException if the description is empty","lastModifiedDate":"2021-03-12"},{"lineNumber":235,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidIndexException if the index given in description is out of bounds","lastModifiedDate":"2021-03-12"},{"lineNumber":236,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":237,"author":{"gitId":"kwokyto"},"content":"    private static Command getRemoveCommand(String description)","lastModifiedDate":"2021-03-24"},{"lineNumber":238,"author":{"gitId":"kwokyto"},"content":"            throws EmptyDescriptionException, InvalidQuantityException,","lastModifiedDate":"2021-03-24"},{"lineNumber":239,"author":{"gitId":"kwokyto"},"content":"            InvalidInputException, FoodNameNotFoundException {","lastModifiedDate":"2021-03-24"},{"lineNumber":240,"author":{"gitId":"kwokyto"},"content":"        Command removeCommand \u003d parseRemoveDescription(description);","lastModifiedDate":"2021-03-24"},{"lineNumber":241,"author":{"gitId":"kwokyto"},"content":"        return removeCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":242,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":243,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":244,"author":{"gitId":"Vinci-Hu"},"content":"    //@@author Vinci-Hu","lastModifiedDate":"2021-03-29"},{"lineNumber":245,"author":{"gitId":"Vinci-Hu"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":246,"author":{"gitId":"Vinci-Hu"},"content":"     * Parses description into name and quantity.","lastModifiedDate":"2021-03-29"},{"lineNumber":247,"author":{"gitId":"Vinci-Hu"},"content":"     * Matcher objects will try to parse a string according to the Pattern we define","lastModifiedDate":"2021-03-29"},{"lineNumber":248,"author":{"gitId":"Vinci-Hu"},"content":"     * like above FOOD_DATA_ARGS_FORMAT. For other future parsers can copy the usage here.","lastModifiedDate":"2021-03-29"},{"lineNumber":249,"author":{"gitId":"Vinci-Hu"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":250,"author":{"gitId":"Vinci-Hu"},"content":"     * @param removeDescription the string in the required format of food description","lastModifiedDate":"2021-03-29"},{"lineNumber":251,"author":{"gitId":"Vinci-Hu"},"content":"     * @return a new RemoveCommand for Food","lastModifiedDate":"2021-03-29"},{"lineNumber":252,"author":{"gitId":"Vinci-Hu"},"content":"     * @throws EmptyDescriptionException if the description is empty","lastModifiedDate":"2021-03-29"},{"lineNumber":253,"author":{"gitId":"Vinci-Hu"},"content":"     * @throws InvalidInputException if the description cannot parsed","lastModifiedDate":"2021-03-29"},{"lineNumber":254,"author":{"gitId":"Vinci-Hu"},"content":"     * @throws InvalidDateException if the date input cannot be parsed","lastModifiedDate":"2021-03-29"},{"lineNumber":255,"author":{"gitId":"Vinci-Hu"},"content":"     * @throws InvalidQuantityException if the quantity input cannot be parsed","lastModifiedDate":"2021-03-29"},{"lineNumber":256,"author":{"gitId":"Vinci-Hu"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":257,"author":{"gitId":"Vinci-Hu"},"content":"    private static Command parseRemoveDescription(String removeDescription)","lastModifiedDate":"2021-03-24"},{"lineNumber":258,"author":{"gitId":"Vinci-Hu"},"content":"            throws EmptyDescriptionException, InvalidQuantityException, InvalidInputException {","lastModifiedDate":"2021-03-29"},{"lineNumber":259,"author":{"gitId":"Vinci-Hu"},"content":"        if (removeDescription.isEmpty()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":260,"author":{"gitId":"Vinci-Hu"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2021-03-24"},{"lineNumber":261,"author":{"gitId":"Vinci-Hu"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":262,"author":{"gitId":"Vinci-Hu"},"content":"        Matcher matcherRemove \u003d REMOVE_ARGS_FORMAT.matcher(removeDescription.trim());","lastModifiedDate":"2021-03-24"},{"lineNumber":263,"author":{"gitId":"Vinci-Hu"},"content":"        if (matcherRemove.matches()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":264,"author":{"gitId":"Vinci-Hu"},"content":"            String name \u003d matcherRemove.group(\"name\");","lastModifiedDate":"2021-03-24"},{"lineNumber":265,"author":{"gitId":"Vinci-Hu"},"content":"            int quantity \u003d parseIntegerQuantity(matcherRemove.group(\"quantity\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":266,"author":{"gitId":"Vinci-Hu"},"content":"            return new RemoveCommand(name, quantity);","lastModifiedDate":"2021-03-24"},{"lineNumber":267,"author":{"gitId":"Vinci-Hu"},"content":"        } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":268,"author":{"gitId":"Vinci-Hu"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2021-03-24"},{"lineNumber":269,"author":{"gitId":"Vinci-Hu"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":270,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":271,"author":{"gitId":"Vinci-Hu"},"content":"    //@@author","lastModifiedDate":"2021-03-29"},{"lineNumber":272,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":273,"author":{"gitId":"SimJJ96"},"content":"    //@@author SimJJ96","lastModifiedDate":"2021-03-29"},{"lineNumber":274,"author":{"gitId":"SimJJ96"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":275,"author":{"gitId":"SimJJ96"},"content":"     * Returns a SearchCommand object based on description.","lastModifiedDate":"2021-03-12"},{"lineNumber":276,"author":{"gitId":"SimJJ96"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":277,"author":{"gitId":"SimJJ96"},"content":"     * @param description description for command","lastModifiedDate":"2021-03-12"},{"lineNumber":278,"author":{"gitId":"SimJJ96"},"content":"     * @return SearchCommand object","lastModifiedDate":"2021-03-12"},{"lineNumber":279,"author":{"gitId":"SimJJ96"},"content":"     * @throws EmptyDescriptionException if the description is empty","lastModifiedDate":"2021-03-12"},{"lineNumber":280,"author":{"gitId":"SimJJ96"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":281,"author":{"gitId":"SimJJ96"},"content":"    private static Command getSearchCommand(String description) throws EmptyDescriptionException {","lastModifiedDate":"2021-03-22"},{"lineNumber":282,"author":{"gitId":"SimJJ96"},"content":"        Command searchCommand \u003d new SearchCommand(description);","lastModifiedDate":"2021-03-12"},{"lineNumber":283,"author":{"gitId":"SimJJ96"},"content":"        return searchCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":284,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":285,"author":{"gitId":"SimJJ96"},"content":"    //@@author","lastModifiedDate":"2021-03-29"},{"lineNumber":286,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":287,"author":{"gitId":"kwokyto"},"content":"    //@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":288,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":289,"author":{"gitId":"kwokyto"},"content":"     * Returns an ExpiringCommand object.","lastModifiedDate":"2021-03-17"},{"lineNumber":290,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":291,"author":{"gitId":"kwokyto"},"content":"    private static Command getExpiringCommand() {","lastModifiedDate":"2021-03-17"},{"lineNumber":292,"author":{"gitId":"kwokyto"},"content":"        Command expiringCommand \u003d new ExpiringCommand();","lastModifiedDate":"2021-03-17"},{"lineNumber":293,"author":{"gitId":"kwokyto"},"content":"        return expiringCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":294,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":295,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":296,"author":{"gitId":"kwokyto"},"content":"    //@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":297,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":298,"author":{"gitId":"kwokyto"},"content":"     * Returns a RunningLowCommand object.","lastModifiedDate":"2021-03-24"},{"lineNumber":299,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":300,"author":{"gitId":"kwokyto"},"content":"    private static Command getRunningLowCommand() {","lastModifiedDate":"2021-03-24"},{"lineNumber":301,"author":{"gitId":"kwokyto"},"content":"        Command runningLowCommand \u003d new RunningLowCommand();","lastModifiedDate":"2021-03-24"},{"lineNumber":302,"author":{"gitId":"kwokyto"},"content":"        return runningLowCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":303,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":304,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":305,"author":{"gitId":"kwokyto"},"content":"    //@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":306,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":307,"author":{"gitId":"kwokyto"},"content":"     * Returns a SetLimitCommand object.","lastModifiedDate":"2021-03-24"},{"lineNumber":308,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidFoodCategoryException if the catgory input cannot be parsed","lastModifiedDate":"2021-03-24"},{"lineNumber":309,"author":{"gitId":"kwokyto"},"content":"     * @throws EmptyDescriptionException if the description is empty","lastModifiedDate":"2021-03-24"},{"lineNumber":310,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidInputException if the description cannot parsed","lastModifiedDate":"2021-03-24"},{"lineNumber":311,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidQuantityException if the quantity input cannot be parsed","lastModifiedDate":"2021-03-24"},{"lineNumber":312,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":313,"author":{"gitId":"kwokyto"},"content":"    private static Command getSetLimitCommand(String description) throws EmptyDescriptionException,","lastModifiedDate":"2021-03-24"},{"lineNumber":314,"author":{"gitId":"kwokyto"},"content":"            InvalidQuantityException, InvalidInputException, InvalidFoodCategoryException {","lastModifiedDate":"2021-03-24"},{"lineNumber":315,"author":{"gitId":"kwokyto"},"content":"        Command setLimitCommand \u003d parseSetLimitDescription(description);","lastModifiedDate":"2021-03-24"},{"lineNumber":316,"author":{"gitId":"kwokyto"},"content":"        return setLimitCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":317,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":318,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":319,"author":{"gitId":"kwokyto"},"content":"    //@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":320,"author":{"gitId":"kwokyto"},"content":"    private static Command parseSetLimitDescription(String description) throws EmptyDescriptionException,","lastModifiedDate":"2021-03-24"},{"lineNumber":321,"author":{"gitId":"kwokyto"},"content":"            InvalidQuantityException, InvalidInputException, InvalidFoodCategoryException {","lastModifiedDate":"2021-03-24"},{"lineNumber":322,"author":{"gitId":"kwokyto"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":323,"author":{"gitId":"kwokyto"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2021-03-24"},{"lineNumber":324,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":325,"author":{"gitId":"kwokyto"},"content":"        Matcher matcherRemove \u003d SET_LIMIT_ARGS_FORMAT.matcher(description.trim());","lastModifiedDate":"2021-03-24"},{"lineNumber":326,"author":{"gitId":"kwokyto"},"content":"        if (!matcherRemove.matches()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":327,"author":{"gitId":"kwokyto"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2021-03-24"},{"lineNumber":328,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":329,"author":{"gitId":"kwokyto"},"content":"        String foodCategoryString \u003d matcherRemove.group(\"foodCategory\");","lastModifiedDate":"2021-03-24"},{"lineNumber":330,"author":{"gitId":"kwokyto"},"content":"        if (!FoodCategory.isValidCategory(foodCategoryString)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":331,"author":{"gitId":"kwokyto"},"content":"            throw new InvalidFoodCategoryException(foodCategoryString);","lastModifiedDate":"2021-03-24"},{"lineNumber":332,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":333,"author":{"gitId":"kwokyto"},"content":"        FoodCategory foodCategory \u003d FoodCategory.convertStringToFoodCategory(foodCategoryString);","lastModifiedDate":"2021-03-24"},{"lineNumber":334,"author":{"gitId":"kwokyto"},"content":"        int quantity \u003d parseIntegerQuantity(matcherRemove.group(\"quantity\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":335,"author":{"gitId":"kwokyto"},"content":"        return new SetLimitCommand(foodCategory, quantity);","lastModifiedDate":"2021-03-24"},{"lineNumber":336,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":337,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":338,"author":{"gitId":"kwokyto"},"content":"    //@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":339,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":340,"author":{"gitId":"kwokyto"},"content":"     * Returns a HelpCommand object.","lastModifiedDate":"2021-03-17"},{"lineNumber":341,"author":{"gitId":"kwokyto"},"content":"     *","lastModifiedDate":"2021-03-22"},{"lineNumber":342,"author":{"gitId":"kwokyto"},"content":"     * @return HelpCommand object","lastModifiedDate":"2021-03-23"},{"lineNumber":343,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":344,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":345,"author":{"gitId":"kwokyto"},"content":"    private static Command getHelpCommand() {","lastModifiedDate":"2021-03-22"},{"lineNumber":346,"author":{"gitId":"kwokyto"},"content":"        Command helpCommand \u003d new HelpCommand();","lastModifiedDate":"2021-03-13"},{"lineNumber":347,"author":{"gitId":"kwokyto"},"content":"        return helpCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":348,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":349,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":350,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":351,"author":{"gitId":"kwokyto"},"content":"     * Returns a ClearCommand object.","lastModifiedDate":"2021-03-24"},{"lineNumber":352,"author":{"gitId":"kwokyto"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":353,"author":{"gitId":"kwokyto"},"content":"     * @return ClearCommand object","lastModifiedDate":"2021-03-24"},{"lineNumber":354,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":355,"author":{"gitId":"kwokyto"},"content":"    private static Command getClearCommand() {","lastModifiedDate":"2021-03-24"},{"lineNumber":356,"author":{"gitId":"kwokyto"},"content":"        Command clearCommand \u003d new ClearCommand();","lastModifiedDate":"2021-03-24"},{"lineNumber":357,"author":{"gitId":"kwokyto"},"content":"        return clearCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":358,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":359,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":360,"author":{"gitId":"kwokyto"},"content":"    //@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":361,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":362,"author":{"gitId":"kwokyto"},"content":"     * Returns a HistoryCommand object.","lastModifiedDate":"2021-03-27"},{"lineNumber":363,"author":{"gitId":"kwokyto"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":364,"author":{"gitId":"kwokyto"},"content":"     * @return ClearCommand object","lastModifiedDate":"2021-03-27"},{"lineNumber":365,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":366,"author":{"gitId":"kwokyto"},"content":"    private static Command getHistoryCommand(String description) {","lastModifiedDate":"2021-03-27"},{"lineNumber":367,"author":{"gitId":"kwokyto"},"content":"        Command historyCommand \u003d new HistoryCommand(description);","lastModifiedDate":"2021-03-27"},{"lineNumber":368,"author":{"gitId":"kwokyto"},"content":"        return historyCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":369,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":370,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":371,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":372,"author":{"gitId":"kwokyto"},"content":"     * Returns a ByeCommand object.","lastModifiedDate":"2021-03-12"},{"lineNumber":373,"author":{"gitId":"kwokyto"},"content":"     *","lastModifiedDate":"2021-03-22"},{"lineNumber":374,"author":{"gitId":"kwokyto"},"content":"     * @return ByeCommand object","lastModifiedDate":"2021-03-23"},{"lineNumber":375,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":376,"author":{"gitId":"kwokyto"},"content":"    private static Command getByeCommand() {","lastModifiedDate":"2021-03-22"},{"lineNumber":377,"author":{"gitId":"kwokyto"},"content":"        Command byeCommand \u003d new ByeCommand();","lastModifiedDate":"2021-03-12"},{"lineNumber":378,"author":{"gitId":"kwokyto"},"content":"        return byeCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":379,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":380,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":381,"author":{"gitId":"SimJJ96"},"content":"    //@@author SimJJ96","lastModifiedDate":"2021-03-29"},{"lineNumber":382,"author":{"gitId":"SimJJ96"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":383,"author":{"gitId":"SimJJ96"},"content":"     * Parses the description of quantity to integer.","lastModifiedDate":"2021-03-23"},{"lineNumber":384,"author":{"gitId":"SimJJ96"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":385,"author":{"gitId":"SimJJ96"},"content":"     * @param description quantity description","lastModifiedDate":"2021-03-23"},{"lineNumber":386,"author":{"gitId":"SimJJ96"},"content":"     * @return integer quantity","lastModifiedDate":"2021-03-23"},{"lineNumber":387,"author":{"gitId":"SimJJ96"},"content":"     * @throws EmptyDescriptionException if the description is empty","lastModifiedDate":"2021-03-23"},{"lineNumber":388,"author":{"gitId":"SimJJ96"},"content":"     * @throws InvalidQuantityException if the description is not a number","lastModifiedDate":"2021-03-23"},{"lineNumber":389,"author":{"gitId":"SimJJ96"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":390,"author":{"gitId":"SimJJ96"},"content":"    public static int parseIntegerQuantity(String description)","lastModifiedDate":"2021-03-23"},{"lineNumber":391,"author":{"gitId":"SimJJ96"},"content":"            throws EmptyDescriptionException, InvalidQuantityException {","lastModifiedDate":"2021-03-23"},{"lineNumber":392,"author":{"gitId":"SimJJ96"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":393,"author":{"gitId":"SimJJ96"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2021-03-23"},{"lineNumber":394,"author":{"gitId":"SimJJ96"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":395,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":396,"author":{"gitId":"SimJJ96"},"content":"        try {","lastModifiedDate":"2021-03-23"},{"lineNumber":397,"author":{"gitId":"SimJJ96"},"content":"            int quantity \u003d Integer.parseInt(description);","lastModifiedDate":"2021-03-23"},{"lineNumber":398,"author":{"gitId":"SimJJ96"},"content":"            return quantity;","lastModifiedDate":"2021-03-23"},{"lineNumber":399,"author":{"gitId":"SimJJ96"},"content":"        } catch (NumberFormatException numberFormatException) {","lastModifiedDate":"2021-03-28"},{"lineNumber":400,"author":{"gitId":"SimJJ96"},"content":"            throw new InvalidQuantityException();","lastModifiedDate":"2021-03-23"},{"lineNumber":401,"author":{"gitId":"SimJJ96"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":402,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":403,"author":{"gitId":"SimJJ96"},"content":"    //@author","lastModifiedDate":"2021-03-29"},{"lineNumber":404,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"Leeyp":1,"kwokyto":164,"Vinci-Hu":84,"SimJJ96":155}},{"path":"src/main/java/seedu/fridgefriend/utilities/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.utilities;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.command.AddCommand;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":"import seedu.fridgefriend.exception.EmptyDescriptionException;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":"import seedu.fridgefriend.exception.InvalidDateException;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidFoodCategoryException;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":"import seedu.fridgefriend.exception.InvalidQuantityException;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":"import seedu.fridgefriend.exception.RepetitiveFoodIdentifierException;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":"import seedu.fridgefriend.exception.StorageLoadingException;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":"import seedu.fridgefriend.exception.StorageSavingException;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.food.Fridge;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"import java.io.File;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Leeyp"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"Leeyp"},"content":" * Reads data from, and writes data to, the local disk.","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"Leeyp"},"content":" *","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"Leeyp"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"public class Storage {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"    private static final String DATA_FILE_PATH \u003d \"data/fridgeData.txt\";","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"Leeyp"},"content":"    private static final String HISTORY_FILE_PATH \u003d \"data/historyData.txt\";","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"    private static final String LIMITS_FILE_PATH \u003d \"data/limitsData.txt\";","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"    private static final String DIRECTORY \u003d \"data\";","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"    private static Fridge fridge;","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"Leeyp"},"content":"    private static String history;","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"    //@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"     * Entry point for loading of all data.","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"     * ","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"     * @param fridgeInput fridge to be populated","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"    public static void load(Fridge fridgeInput) {","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":"        loadFridgeData(fridgeInput);","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"        loadLimitsData();","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"    //@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"kwokyto"},"content":"     * Entry point for saving of all data.","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"kwokyto"},"content":"     * ","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"kwokyto"},"content":"     * @param fridgeInput fridge to be saved","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"kwokyto"},"content":"    public static void save(Fridge fridgeInput) {","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"kwokyto"},"content":"        saveFridgeData(fridgeInput);","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"kwokyto"},"content":"        saveLimitsData();","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"kwokyto"},"content":"     * Loads the saved data into a fridge.","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"kwokyto"},"content":"     * ","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"kwokyto"},"content":"     * @param fridgeInput fridge to be populated","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"kwokyto"},"content":"    private static void loadFridgeData(Fridge fridgeInput) {","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"kwokyto"},"content":"        fridge \u003d fridgeInput;","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"kwokyto"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"kwokyto"},"content":"            checkFridgeDataDirectory();","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"kwokyto"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"kwokyto"},"content":"            StorageLoadingException exception \u003d new StorageLoadingException(e);","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"kwokyto"},"content":"            Ui.printExceptionMessage(exception);","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"kwokyto"},"content":"     * Creates a textfile and the folder directory if it does not already exist.","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"kwokyto"},"content":"     * ","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidDateException if the date cannot be parsed","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"kwokyto"},"content":"     * @throws FileNotFoundException if file does not exist","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"kwokyto"},"content":"    private static void checkFridgeDataDirectory() throws FileNotFoundException, InvalidDateException,","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"kwokyto"},"content":"            InvalidQuantityException, EmptyDescriptionException, RepetitiveFoodIdentifierException {","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"kwokyto"},"content":"        Path path \u003d Paths.get(DATA_FILE_PATH); //creates Path instance","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"kwokyto"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"kwokyto"},"content":"            Files.createDirectories(Paths.get(DIRECTORY));","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"kwokyto"},"content":"            Files.createFile(path); //creates file at specified location","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"kwokyto"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"kwokyto"},"content":"            readFridgeData();","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"kwokyto"},"content":"     * Reads the data from the textfile.","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"kwokyto"},"content":"     * ","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"kwokyto"},"content":"     * @throws FileNotFoundException if file does not exist","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidDateException if the date cannot be parsed","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"kwokyto"},"content":"    private static void readFridgeData() throws FileNotFoundException, InvalidDateException,","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"kwokyto"},"content":"            InvalidQuantityException, EmptyDescriptionException, RepetitiveFoodIdentifierException {","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"kwokyto"},"content":"        File file \u003d new File(DATA_FILE_PATH);","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"kwokyto"},"content":"        Scanner scanner \u003d new Scanner(file); // create a Scanner using the File as the source","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"kwokyto"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"kwokyto"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"kwokyto"},"content":"            populateFridge(line);","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"kwokyto"},"content":"        scanner.close();","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"kwokyto"},"content":"     * Adds a food item to a fridge based on saved data.","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"kwokyto"},"content":"     * ","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"kwokyto"},"content":"     * @param line string in data file to be read","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidDateException if date in data file cannot be parsed","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidQuantityException if quantity in data file cannot be parsed","lastModifiedDate":"2021-03-22"},{"lineNumber":114,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidFoodCategoryException if category in data file cannot be parsed","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"kwokyto"},"content":"    private static void populateFridge(String line) throws InvalidDateException,","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"kwokyto"},"content":"            InvalidQuantityException, EmptyDescriptionException, RepetitiveFoodIdentifierException {","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"kwokyto"},"content":"        String[] parameters \u003d line.split(\":\");","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"kwokyto"},"content":"        String name \u003d parameters[1].substring(1, parameters[1].indexOf((\",\")));","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"kwokyto"},"content":"        String categoryStr \u003d parameters[2].substring(1, parameters[2].indexOf((\",\")));","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"kwokyto"},"content":"        FoodCategory category \u003d FoodCategory.convertStringToFoodCategory(categoryStr);","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"kwokyto"},"content":"        String expiry \u003d parameters[3].substring(1, parameters[3].indexOf((\",\")));","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"kwokyto"},"content":"        String storageStr \u003d parameters[4].substring(1, parameters[4].indexOf((\",\")));","lastModifiedDate":"2021-03-22"},{"lineNumber":125,"author":{"gitId":"kwokyto"},"content":"        int quantity \u003d Parser.parseIntegerQuantity(parameters[5].trim());","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":127,"author":{"gitId":"kwokyto"},"content":"        FoodStorageLocation storage \u003d FoodStorageLocation.convertStringToLocation(storageStr);","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"kwokyto"},"content":"        Food food \u003d AddCommand.categoriseAndGenerateFood(name, category, expiry, storage, quantity);","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"kwokyto"},"content":"        fridge.add(food);","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"kwokyto"},"content":"     * Saves food in the fridge into the datafile.","lastModifiedDate":"2021-03-24"},{"lineNumber":134,"author":{"gitId":"kwokyto"},"content":"     * ","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"kwokyto"},"content":"     * @param fridgeInput fridge to be saved","lastModifiedDate":"2021-03-24"},{"lineNumber":136,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"kwokyto"},"content":"    private static void saveFridgeData(Fridge fridgeInput) {","lastModifiedDate":"2021-03-24"},{"lineNumber":138,"author":{"gitId":"kwokyto"},"content":"        fridge \u003d fridgeInput;","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"kwokyto"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"kwokyto"},"content":"            clearFile(DATA_FILE_PATH);","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"kwokyto"},"content":"            populateFridgeDataFile(DATA_FILE_PATH);","lastModifiedDate":"2021-03-27"},{"lineNumber":142,"author":{"gitId":"kwokyto"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"kwokyto"},"content":"            StorageSavingException exception \u003d new StorageSavingException(e);","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"kwokyto"},"content":"            Ui.printExceptionMessage(exception);","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"kwokyto"},"content":"    private static void clearFile(String filePath) throws IOException {","lastModifiedDate":"2021-03-24"},{"lineNumber":149,"author":{"gitId":"kwokyto"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"kwokyto"},"content":"        fileWriter.write(\"\"); //clear file","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"kwokyto"},"content":"        fileWriter.close();","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"kwokyto"},"content":"    private static void populateFridgeDataFile(String filePath) throws IOException {","lastModifiedDate":"2021-03-27"},{"lineNumber":155,"author":{"gitId":"kwokyto"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2021-03-27"},{"lineNumber":156,"author":{"gitId":"kwokyto"},"content":"        for (int i \u003d 0; i \u003c fridge.getSize(); i++) {","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"kwokyto"},"content":"            fileWriter.write(fridge.getFood(i).toString() + \"\\n\");","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"kwokyto"},"content":"        fileWriter.close();","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":162,"author":{"gitId":"kwokyto"},"content":"    //@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":163,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":164,"author":{"gitId":"kwokyto"},"content":"     * Loads the saved limits data into the FoodCategory class.","lastModifiedDate":"2021-03-24"},{"lineNumber":165,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":166,"author":{"gitId":"kwokyto"},"content":"    private static void loadLimitsData() {","lastModifiedDate":"2021-03-24"},{"lineNumber":167,"author":{"gitId":"kwokyto"},"content":"        try {","lastModifiedDate":"2021-03-24"},{"lineNumber":168,"author":{"gitId":"kwokyto"},"content":"            checkLimitsDirectory();","lastModifiedDate":"2021-03-24"},{"lineNumber":169,"author":{"gitId":"kwokyto"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-24"},{"lineNumber":170,"author":{"gitId":"kwokyto"},"content":"            StorageLoadingException exception \u003d new StorageLoadingException(e);","lastModifiedDate":"2021-03-24"},{"lineNumber":171,"author":{"gitId":"kwokyto"},"content":"            Ui.printExceptionMessage(exception);","lastModifiedDate":"2021-03-24"},{"lineNumber":172,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":173,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":174,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":175,"author":{"gitId":"kwokyto"},"content":"    //@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":176,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":177,"author":{"gitId":"kwokyto"},"content":"     * Creates a limits data textfile and the folder directory if it does not already exist.","lastModifiedDate":"2021-03-24"},{"lineNumber":178,"author":{"gitId":"kwokyto"},"content":"     * ","lastModifiedDate":"2021-03-24"},{"lineNumber":179,"author":{"gitId":"kwokyto"},"content":"     * @throws FileNotFoundException if file does not exist","lastModifiedDate":"2021-03-24"},{"lineNumber":180,"author":{"gitId":"kwokyto"},"content":"     * @throws EmptyDescriptionException if quantity in data file is empty","lastModifiedDate":"2021-03-24"},{"lineNumber":181,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidQuantityException if quantity in data file cannot be parsed","lastModifiedDate":"2021-03-24"},{"lineNumber":182,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":183,"author":{"gitId":"kwokyto"},"content":"    private static void checkLimitsDirectory()","lastModifiedDate":"2021-03-24"},{"lineNumber":184,"author":{"gitId":"kwokyto"},"content":"            throws FileNotFoundException, EmptyDescriptionException, InvalidQuantityException {","lastModifiedDate":"2021-03-24"},{"lineNumber":185,"author":{"gitId":"kwokyto"},"content":"        Path path \u003d Paths.get(LIMITS_FILE_PATH); //creates Path instance","lastModifiedDate":"2021-03-24"},{"lineNumber":186,"author":{"gitId":"kwokyto"},"content":"        try {","lastModifiedDate":"2021-03-24"},{"lineNumber":187,"author":{"gitId":"kwokyto"},"content":"            Files.createDirectories(Paths.get(DIRECTORY));","lastModifiedDate":"2021-03-24"},{"lineNumber":188,"author":{"gitId":"kwokyto"},"content":"            Files.createFile(path); //creates file at specified location","lastModifiedDate":"2021-03-24"},{"lineNumber":189,"author":{"gitId":"kwokyto"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-24"},{"lineNumber":190,"author":{"gitId":"kwokyto"},"content":"            readLimitsData();","lastModifiedDate":"2021-03-24"},{"lineNumber":191,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":192,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":193,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":194,"author":{"gitId":"kwokyto"},"content":"    //@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":195,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":196,"author":{"gitId":"kwokyto"},"content":"     * Reads the limits data from the textfile.","lastModifiedDate":"2021-03-24"},{"lineNumber":197,"author":{"gitId":"kwokyto"},"content":"     * ","lastModifiedDate":"2021-03-24"},{"lineNumber":198,"author":{"gitId":"kwokyto"},"content":"     * @throws FileNotFoundException if file does not exist","lastModifiedDate":"2021-03-24"},{"lineNumber":199,"author":{"gitId":"kwokyto"},"content":"     * @throws EmptyDescriptionException if quantity in data file is empty","lastModifiedDate":"2021-03-24"},{"lineNumber":200,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidQuantityException if quantity in data file cannot be parsed","lastModifiedDate":"2021-03-24"},{"lineNumber":201,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":202,"author":{"gitId":"kwokyto"},"content":"    private static void readLimitsData()","lastModifiedDate":"2021-03-24"},{"lineNumber":203,"author":{"gitId":"kwokyto"},"content":"            throws FileNotFoundException, EmptyDescriptionException, InvalidQuantityException {","lastModifiedDate":"2021-03-24"},{"lineNumber":204,"author":{"gitId":"kwokyto"},"content":"        File file \u003d new File(LIMITS_FILE_PATH);","lastModifiedDate":"2021-03-24"},{"lineNumber":205,"author":{"gitId":"kwokyto"},"content":"        Scanner scanner \u003d new Scanner(file); // create a Scanner using the File as the source","lastModifiedDate":"2021-03-24"},{"lineNumber":206,"author":{"gitId":"kwokyto"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":207,"author":{"gitId":"kwokyto"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2021-03-24"},{"lineNumber":208,"author":{"gitId":"kwokyto"},"content":"            populateFoodCategory(line);","lastModifiedDate":"2021-03-24"},{"lineNumber":209,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":210,"author":{"gitId":"kwokyto"},"content":"        scanner.close();","lastModifiedDate":"2021-03-24"},{"lineNumber":211,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":212,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":213,"author":{"gitId":"kwokyto"},"content":"    //@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":214,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":215,"author":{"gitId":"kwokyto"},"content":"     * Sets minimum quantity of a FoodCategory based on saved limits data.","lastModifiedDate":"2021-03-24"},{"lineNumber":216,"author":{"gitId":"kwokyto"},"content":"     * ","lastModifiedDate":"2021-03-24"},{"lineNumber":217,"author":{"gitId":"kwokyto"},"content":"     * @param line string in data file to be processed","lastModifiedDate":"2021-03-24"},{"lineNumber":218,"author":{"gitId":"kwokyto"},"content":"     * @throws EmptyDescriptionException if quantity in data file is empty","lastModifiedDate":"2021-03-24"},{"lineNumber":219,"author":{"gitId":"kwokyto"},"content":"     * @throws InvalidQuantityException if quantity in data file cannot be parsed","lastModifiedDate":"2021-03-24"},{"lineNumber":220,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":221,"author":{"gitId":"kwokyto"},"content":"    private static void populateFoodCategory(String line) ","lastModifiedDate":"2021-03-24"},{"lineNumber":222,"author":{"gitId":"kwokyto"},"content":"            throws EmptyDescriptionException, InvalidQuantityException {","lastModifiedDate":"2021-03-24"},{"lineNumber":223,"author":{"gitId":"kwokyto"},"content":"        String[] parameters \u003d line.split(\":\");","lastModifiedDate":"2021-03-24"},{"lineNumber":224,"author":{"gitId":"kwokyto"},"content":"        FoodCategory foodCategory \u003d FoodCategory.convertStringToFoodCategory(parameters[0]);","lastModifiedDate":"2021-03-24"},{"lineNumber":225,"author":{"gitId":"kwokyto"},"content":"        int quantity \u003d Parser.parseIntegerQuantity(parameters[1]);","lastModifiedDate":"2021-03-24"},{"lineNumber":226,"author":{"gitId":"kwokyto"},"content":"        FoodCategory.setMinimumQuantity(foodCategory, quantity);","lastModifiedDate":"2021-03-24"},{"lineNumber":227,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":228,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":229,"author":{"gitId":"kwokyto"},"content":"    //@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":230,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":231,"author":{"gitId":"kwokyto"},"content":"     * Overwrites the current textfile with data from the current session.","lastModifiedDate":"2021-03-24"},{"lineNumber":232,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":233,"author":{"gitId":"kwokyto"},"content":"    public static void saveLimitsData() {","lastModifiedDate":"2021-03-24"},{"lineNumber":234,"author":{"gitId":"kwokyto"},"content":"        try {","lastModifiedDate":"2021-03-24"},{"lineNumber":235,"author":{"gitId":"kwokyto"},"content":"            clearFile(LIMITS_FILE_PATH);","lastModifiedDate":"2021-03-24"},{"lineNumber":236,"author":{"gitId":"kwokyto"},"content":"            populateLimitsDataFile();","lastModifiedDate":"2021-03-24"},{"lineNumber":237,"author":{"gitId":"kwokyto"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-24"},{"lineNumber":238,"author":{"gitId":"kwokyto"},"content":"            StorageSavingException exception \u003d new StorageSavingException(e);","lastModifiedDate":"2021-03-24"},{"lineNumber":239,"author":{"gitId":"kwokyto"},"content":"            Ui.printExceptionMessage(exception);","lastModifiedDate":"2021-03-24"},{"lineNumber":240,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":241,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":242,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":243,"author":{"gitId":"kwokyto"},"content":"    //@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":244,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":245,"author":{"gitId":"kwokyto"},"content":"     * Writes the minimum quantities in FoodCategory into the limits datafile.","lastModifiedDate":"2021-03-24"},{"lineNumber":246,"author":{"gitId":"kwokyto"},"content":"     * ","lastModifiedDate":"2021-03-24"},{"lineNumber":247,"author":{"gitId":"kwokyto"},"content":"     * @throws IOException if file does not exist","lastModifiedDate":"2021-03-24"},{"lineNumber":248,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":249,"author":{"gitId":"kwokyto"},"content":"    private static void populateLimitsDataFile() throws IOException {","lastModifiedDate":"2021-03-24"},{"lineNumber":250,"author":{"gitId":"kwokyto"},"content":"        FileWriter fileWriter \u003d new FileWriter(LIMITS_FILE_PATH, true); // create a FileWriter in append mode","lastModifiedDate":"2021-03-24"},{"lineNumber":251,"author":{"gitId":"kwokyto"},"content":"        for (FoodCategory foodCategory : FoodCategory.values()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":252,"author":{"gitId":"kwokyto"},"content":"            int quantity \u003d FoodCategory.getMinimumQuantity(foodCategory);","lastModifiedDate":"2021-03-24"},{"lineNumber":253,"author":{"gitId":"kwokyto"},"content":"            String line \u003d foodCategory.toString() + \":\" + quantity;","lastModifiedDate":"2021-03-24"},{"lineNumber":254,"author":{"gitId":"kwokyto"},"content":"            fileWriter.write(line + \"\\n\");","lastModifiedDate":"2021-03-24"},{"lineNumber":255,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":256,"author":{"gitId":"kwokyto"},"content":"        fileWriter.close();","lastModifiedDate":"2021-03-24"},{"lineNumber":257,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":258,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":259,"author":{"gitId":"Leeyp"},"content":"    //@@author leeyp","lastModifiedDate":"2021-03-27"},{"lineNumber":260,"author":{"gitId":"Leeyp"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":261,"author":{"gitId":"Leeyp"},"content":"     * Loads the saved data into a fridge that represents the history of items added.","lastModifiedDate":"2021-03-27"},{"lineNumber":262,"author":{"gitId":"Leeyp"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":263,"author":{"gitId":"Leeyp"},"content":"     * @return String that contains the list of data in history textfile.","lastModifiedDate":"2021-03-27"},{"lineNumber":264,"author":{"gitId":"Leeyp"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":265,"author":{"gitId":"Leeyp"},"content":"    public static String loadHistoryData() {","lastModifiedDate":"2021-03-27"},{"lineNumber":266,"author":{"gitId":"Leeyp"},"content":"        try {","lastModifiedDate":"2021-03-27"},{"lineNumber":267,"author":{"gitId":"Leeyp"},"content":"            checkHistoryDirectory();","lastModifiedDate":"2021-03-27"},{"lineNumber":268,"author":{"gitId":"Leeyp"},"content":"            return history;","lastModifiedDate":"2021-03-27"},{"lineNumber":269,"author":{"gitId":"Leeyp"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-27"},{"lineNumber":270,"author":{"gitId":"Leeyp"},"content":"            StorageLoadingException exception \u003d new StorageLoadingException(e);","lastModifiedDate":"2021-03-27"},{"lineNumber":271,"author":{"gitId":"Leeyp"},"content":"            Ui.printExceptionMessage(exception);","lastModifiedDate":"2021-03-27"},{"lineNumber":272,"author":{"gitId":"Leeyp"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":273,"author":{"gitId":"Leeyp"},"content":"        return null;","lastModifiedDate":"2021-03-27"},{"lineNumber":274,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":275,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":276,"author":{"gitId":"Leeyp"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":277,"author":{"gitId":"Leeyp"},"content":"     * Creates a history data textfile and the folder directory if it does not already exist.","lastModifiedDate":"2021-03-27"},{"lineNumber":278,"author":{"gitId":"Leeyp"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":279,"author":{"gitId":"Leeyp"},"content":"     * @throws FileNotFoundException if file does not exist","lastModifiedDate":"2021-03-27"},{"lineNumber":280,"author":{"gitId":"Leeyp"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":281,"author":{"gitId":"Leeyp"},"content":"    private static void checkHistoryDirectory()","lastModifiedDate":"2021-03-27"},{"lineNumber":282,"author":{"gitId":"Leeyp"},"content":"            throws FileNotFoundException {","lastModifiedDate":"2021-03-27"},{"lineNumber":283,"author":{"gitId":"Leeyp"},"content":"        Path path \u003d Paths.get(HISTORY_FILE_PATH); //creates Path instance","lastModifiedDate":"2021-03-27"},{"lineNumber":284,"author":{"gitId":"Leeyp"},"content":"        try {","lastModifiedDate":"2021-03-27"},{"lineNumber":285,"author":{"gitId":"Leeyp"},"content":"            Files.createDirectories(Paths.get(DIRECTORY));","lastModifiedDate":"2021-03-27"},{"lineNumber":286,"author":{"gitId":"Leeyp"},"content":"            Files.createFile(path); //creates file at specified location","lastModifiedDate":"2021-03-27"},{"lineNumber":287,"author":{"gitId":"Leeyp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-27"},{"lineNumber":288,"author":{"gitId":"Leeyp"},"content":"            readHistoryData();","lastModifiedDate":"2021-03-27"},{"lineNumber":289,"author":{"gitId":"Leeyp"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":290,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":291,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":292,"author":{"gitId":"Leeyp"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":293,"author":{"gitId":"Leeyp"},"content":"     * Reads the history data from the textfile.","lastModifiedDate":"2021-03-27"},{"lineNumber":294,"author":{"gitId":"Leeyp"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":295,"author":{"gitId":"Leeyp"},"content":"     * @throws FileNotFoundException if file does not exist","lastModifiedDate":"2021-03-27"},{"lineNumber":296,"author":{"gitId":"Leeyp"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":297,"author":{"gitId":"Leeyp"},"content":"    private static void readHistoryData()","lastModifiedDate":"2021-03-27"},{"lineNumber":298,"author":{"gitId":"Leeyp"},"content":"            throws FileNotFoundException {","lastModifiedDate":"2021-03-27"},{"lineNumber":299,"author":{"gitId":"Leeyp"},"content":"        File file \u003d new File(HISTORY_FILE_PATH);","lastModifiedDate":"2021-03-27"},{"lineNumber":300,"author":{"gitId":"Leeyp"},"content":"        Scanner scanner \u003d new Scanner(file); // create a Scanner using the File as the source","lastModifiedDate":"2021-03-27"},{"lineNumber":301,"author":{"gitId":"Leeyp"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2021-03-27"},{"lineNumber":302,"author":{"gitId":"Leeyp"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-03-27"},{"lineNumber":303,"author":{"gitId":"Leeyp"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":304,"author":{"gitId":"Leeyp"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2021-03-27"},{"lineNumber":305,"author":{"gitId":"Leeyp"},"content":"            message.append(\"\\n\\t\" + index + \". \" + line);","lastModifiedDate":"2021-03-27"},{"lineNumber":306,"author":{"gitId":"Leeyp"},"content":"            index++;","lastModifiedDate":"2021-03-27"},{"lineNumber":307,"author":{"gitId":"Leeyp"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":308,"author":{"gitId":"Leeyp"},"content":"        scanner.close();","lastModifiedDate":"2021-03-27"},{"lineNumber":309,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":310,"author":{"gitId":"Leeyp"},"content":"        history \u003d message.toString();","lastModifiedDate":"2021-03-27"},{"lineNumber":311,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":312,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":313,"author":{"gitId":"Leeyp"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":314,"author":{"gitId":"Leeyp"},"content":"     * Appends food item to history data textfile.","lastModifiedDate":"2021-03-27"},{"lineNumber":315,"author":{"gitId":"Leeyp"},"content":"     * Is called after every AddCommand.","lastModifiedDate":"2021-03-27"},{"lineNumber":316,"author":{"gitId":"Leeyp"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":317,"author":{"gitId":"Leeyp"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":318,"author":{"gitId":"Leeyp"},"content":"    public static void saveHistoryData(Food foodInput) {","lastModifiedDate":"2021-03-27"},{"lineNumber":319,"author":{"gitId":"Leeyp"},"content":"        try {","lastModifiedDate":"2021-03-27"},{"lineNumber":320,"author":{"gitId":"Leeyp"},"content":"            addFoodToHistoryFile(HISTORY_FILE_PATH, foodInput);","lastModifiedDate":"2021-03-27"},{"lineNumber":321,"author":{"gitId":"Leeyp"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-27"},{"lineNumber":322,"author":{"gitId":"Leeyp"},"content":"            StorageSavingException exception \u003d new StorageSavingException(e);","lastModifiedDate":"2021-03-27"},{"lineNumber":323,"author":{"gitId":"Leeyp"},"content":"            Ui.printExceptionMessage(exception);","lastModifiedDate":"2021-03-27"},{"lineNumber":324,"author":{"gitId":"Leeyp"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":325,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":326,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":327,"author":{"gitId":"Leeyp"},"content":"    private static void addFoodToHistoryFile(String filePath, Food foodInput) throws IOException {","lastModifiedDate":"2021-03-27"},{"lineNumber":328,"author":{"gitId":"Leeyp"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2021-03-27"},{"lineNumber":329,"author":{"gitId":"Leeyp"},"content":"        fileWriter.write(foodInput.toString() + \"\\n\");","lastModifiedDate":"2021-03-27"},{"lineNumber":330,"author":{"gitId":"Leeyp"},"content":"        fileWriter.close();","lastModifiedDate":"2021-03-27"},{"lineNumber":331,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":332,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":333,"author":{"gitId":"Leeyp"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":334,"author":{"gitId":"Leeyp"},"content":"     * Clears history data textfile.","lastModifiedDate":"2021-03-27"},{"lineNumber":335,"author":{"gitId":"Leeyp"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":336,"author":{"gitId":"Leeyp"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":337,"author":{"gitId":"Leeyp"},"content":"    public static void clearHistoryData() {","lastModifiedDate":"2021-03-27"},{"lineNumber":338,"author":{"gitId":"Leeyp"},"content":"        try {","lastModifiedDate":"2021-03-27"},{"lineNumber":339,"author":{"gitId":"Leeyp"},"content":"            clearFile(HISTORY_FILE_PATH);","lastModifiedDate":"2021-03-27"},{"lineNumber":340,"author":{"gitId":"Leeyp"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-27"},{"lineNumber":341,"author":{"gitId":"Leeyp"},"content":"            StorageSavingException exception \u003d new StorageSavingException(e);","lastModifiedDate":"2021-03-27"},{"lineNumber":342,"author":{"gitId":"Leeyp"},"content":"            Ui.printExceptionMessage(exception);","lastModifiedDate":"2021-03-27"},{"lineNumber":343,"author":{"gitId":"Leeyp"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":344,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":345,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":346,"author":{"gitId":"Leeyp"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Leeyp":95,"kwokyto":245,"Vinci-Hu":6}},{"path":"src/main/java/seedu/fridgefriend/utilities/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.utilities;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"//@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":" * Represents an object that deals with interactions with the user.","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"public class Ui {","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"    private static final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"     * Retrieves the next line of input provided by the user.","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"     * ","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"     * @return string of next input","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"    public static String getNextLine() {","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"        String line \u003d scanner.nextLine();    ","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"        return line;","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"    ","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"     * Prints to user a message with an added border below it.","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"     * ","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"     * @param message message to be printed","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"    public static void printMessage(String message) {","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"        System.out.println(message);","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"        System.out.println(\"-----------------------------------------------------------------\");","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"        String logo \u003d","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"                \"  ______    _     _            ______    _                _ \\n\"","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"                + \" |  ____|  (_)   | |          |  ____|  (_)              | |\\n\"","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"                + \" | |__ _ __ _  __| | __ _  ___| |__ _ __ _  ___ _ __   __| |\\n\"","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"                + \" |  __| \u0027__| |/ _` |/ _` |/ _ \\\\  __| \u0027__| |/ _ \\\\ \u0027_ \\\\ / _` |\\n\"","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"                + \" | |  | |  | | (_| | (_| |  __/ |  | |  | |  __/ | | | (_| |\\n\"","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"                + \" |_|  |_|  |_|\\\\__,_|\\\\__, |\\\\___|_|  |_|  |_|\\\\___|_| |_|\\\\__,_|\\n\"","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"                + \"                     __/ |\\n\"","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"                + \"                    |___/\\n\\n\";","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"        String welcomeMessage \u003d \"Hello! I\u0027m FridgeFriend!\\n\" + \"What can I do for you?\";","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"        printMessage(logo + welcomeMessage);","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"    public static void printByeMessage() {","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"kwokyto"},"content":"        String byeMessage \u003d \"Bye! Hope to see you again soon!\";","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"        printMessage(byeMessage);","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"kwokyto"},"content":"    public static void printExceptionMessage(Exception exception) {","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"kwokyto"},"content":"        String exceptionMessage \u003d exception.getMessage();","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"kwokyto"},"content":"        printMessage(exceptionMessage);","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"kwokyto"},"content":"    ","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"kwokyto":56}},{"path":"src/test/java/seedu/fridgefriend/FridgeFriendTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"class FridgeFriendTest {","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"-":10,"SimJJ96":2}},{"path":"src/test/java/seedu/fridgefriend/command/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.exception.InvalidDateException;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.exception.InvalidQuantityException;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":"import seedu.fridgefriend.exception.RepetitiveFoodIdentifierException;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.ExpiryDate;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.Fridge;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"class AddCommandTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":"    private Fridge fridge;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"    //@@author SimJJ96","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":"        fridge \u003d new Fridge();","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":"    public void addCommand_foodWithNegativeQuantity_invalidQuantityException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"        assertThrows(InvalidQuantityException.class, () -\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":"            new AddCommand(\"chicken\", FoodCategory.MEAT,","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":"                    \"31-12-2021\", FoodStorageLocation.FREEZER, -200);","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"        });","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"    public void addCommand_invalidDate_InvalidDateException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"SimJJ96"},"content":"        assertThrows(InvalidDateException.class, () -\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"SimJJ96"},"content":"            new AddCommand(\"chicken\", FoodCategory.MEAT,","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"SimJJ96"},"content":"                    \"abcd\", FoodStorageLocation.FREEZER, 200);","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"SimJJ96"},"content":"        });","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"SimJJ96"},"content":"    //@@author","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"Vinci-Hu"},"content":"    //@@author Vinci-Hu","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"Vinci-Hu"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"Vinci-Hu"},"content":"    public void addCommand_foodInCorrectFormat_successfullyAdded()","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"Vinci-Hu"},"content":"            throws InvalidDateException, RepetitiveFoodIdentifierException, InvalidQuantityException {","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"Vinci-Hu"},"content":"        AddCommand addCommand \u003d new AddCommand(\"Coke\", FoodCategory.BEVERAGE,","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"Vinci-Hu"},"content":"                \"30-06-2021\", FoodStorageLocation.FREEZER, 5);","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"Vinci-Hu"},"content":"        addCommand.setData(fridge);","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"Vinci-Hu"},"content":"        addCommand.execute();","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"Vinci-Hu"},"content":"        assertEquals(\"Coke\", fridge.getFood(0).getFoodName());","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"Vinci-Hu"},"content":"        assertEquals(FoodCategory.BEVERAGE, fridge.getFood(0).getCategory());","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"Vinci-Hu"},"content":"        assertEquals(FoodStorageLocation.FREEZER, fridge.getFood(0).getStorageLocation());","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"Vinci-Hu"},"content":"        assertEquals(5, fridge.getFood(0).getQuantity());","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"Vinci-Hu"},"content":"        ExpiryDate expiryDate \u003d new ExpiryDate(\"30-06-2021\");","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"Vinci-Hu"},"content":"        assertEquals(expiryDate.getExpiry(), fridge.getFood(0).getExpiryDate().getExpiry());","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"Vinci-Hu"},"content":"        String expectedMessage \u003d \"Great! I have added Coke into your fridge.\\n\"","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"Vinci-Hu"},"content":"                + \"Details: Food name: Coke, category: BEVERAGE, \"","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"Vinci-Hu"},"content":"                + \"expiry: 30-06-2021, stored in: FREEZER, quantity: 5\";","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"Vinci-Hu"},"content":"        String actualMessage \u003d addCommand.getMessagePrintedToUser();","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"Vinci-Hu"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"Leeyp"},"content":"    //@@author leeyp","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"Leeyp"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"Leeyp"},"content":"    public void addCommand_foodCorrectFormat_changeFoodParameters()","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"Leeyp"},"content":"            throws InvalidDateException, RepetitiveFoodIdentifierException, InvalidQuantityException {","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"Leeyp"},"content":"        AddCommand addCommand \u003d new AddCommand(\"chicken\", FoodCategory.MEAT,","lastModifiedDate":"2021-03-21"},{"lineNumber":72,"author":{"gitId":"Leeyp"},"content":"                \"30-06-2021\", FoodStorageLocation.FREEZER, 200);","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"Leeyp"},"content":"        addCommand.setData(fridge);","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"Leeyp"},"content":"        addCommand.execute();","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"Leeyp"},"content":"        assertEquals(\"chicken\", fridge.getFood(0).getFoodName());","lastModifiedDate":"2021-03-21"},{"lineNumber":76,"author":{"gitId":"Leeyp"},"content":"        assertEquals(FoodCategory.MEAT, fridge.getFood(0).getCategory());","lastModifiedDate":"2021-03-21"},{"lineNumber":77,"author":{"gitId":"Leeyp"},"content":"        assertEquals(FoodStorageLocation.FREEZER, fridge.getFood(0).getStorageLocation());","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"Leeyp"},"content":"        assertEquals(200, fridge.getFood(0).getQuantity());","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":80,"author":{"gitId":"Leeyp"},"content":"        ExpiryDate expiryDate \u003d new ExpiryDate(\"30-06-2021\");","lastModifiedDate":"2021-03-21"},{"lineNumber":81,"author":{"gitId":"Leeyp"},"content":"        assertEquals(expiryDate.getExpiry(), fridge.getFood(0).getExpiryDate().getExpiry());","lastModifiedDate":"2021-03-21"},{"lineNumber":82,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":83,"author":{"gitId":"Leeyp"},"content":"        String expectedMessage \u003d \"Great! I have added chicken into your fridge.\\n\"","lastModifiedDate":"2021-03-21"},{"lineNumber":84,"author":{"gitId":"Leeyp"},"content":"                + \"Details: Food name: chicken, category: MEAT, \"","lastModifiedDate":"2021-03-21"},{"lineNumber":85,"author":{"gitId":"Leeyp"},"content":"                + \"expiry: 30-06-2021, stored in: FREEZER, quantity: 200\";","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"Leeyp"},"content":"        String actualMessage \u003d addCommand.getMessagePrintedToUser();","lastModifiedDate":"2021-03-21"},{"lineNumber":87,"author":{"gitId":"Leeyp"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2021-03-21"},{"lineNumber":88,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":89,"author":{"gitId":"Leeyp"},"content":"        fridge.getFood(0).setExpiryDate(\"12-04-2021\");","lastModifiedDate":"2021-03-21"},{"lineNumber":90,"author":{"gitId":"Leeyp"},"content":"        assertEquals(\"12-04-2021\", fridge.getFood(0).getExpiryDate().toString());","lastModifiedDate":"2021-03-21"},{"lineNumber":91,"author":{"gitId":"Leeyp"},"content":"        fridge.getFood(0).setFoodName(\"cooked chicken\");","lastModifiedDate":"2021-03-21"},{"lineNumber":92,"author":{"gitId":"Leeyp"},"content":"        fridge.getFood(0).setCategory(FoodCategory.READY_TO_EAT);","lastModifiedDate":"2021-03-21"},{"lineNumber":93,"author":{"gitId":"Leeyp"},"content":"        assertEquals(FoodCategory.READY_TO_EAT, fridge.getFood(0).getCategory());","lastModifiedDate":"2021-03-21"},{"lineNumber":94,"author":{"gitId":"Leeyp"},"content":"        assertEquals(\"cooked chicken\", fridge.getFood(0).getFoodName());","lastModifiedDate":"2021-03-21"},{"lineNumber":95,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":96,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":97,"author":{"gitId":"Vinci-Hu"},"content":"    //@@author Vinci-Hu","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"Vinci-Hu"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"Vinci-Hu"},"content":"    public void addCommand_foodWithSameName_successfullyAdded()","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"Vinci-Hu"},"content":"            throws InvalidDateException, RepetitiveFoodIdentifierException, InvalidQuantityException {","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"Vinci-Hu"},"content":"        AddCommand addCommand1 \u003d new AddCommand(\"Milk\", FoodCategory.DAIRY,","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"Vinci-Hu"},"content":"                \"31-12-2021\", FoodStorageLocation.FRIDGE_DOOR, 2);","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"Vinci-Hu"},"content":"        addCommand1.setData(fridge);","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"Vinci-Hu"},"content":"        addCommand1.execute();","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"Vinci-Hu"},"content":"        AddCommand addCommand2 \u003d new AddCommand(\"Milk\", FoodCategory.DAIRY,","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"Vinci-Hu"},"content":"                \"31-12-2021\", FoodStorageLocation.FRIDGE_DOOR, 3);","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"Vinci-Hu"},"content":"        addCommand2.setData(fridge);","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"Vinci-Hu"},"content":"        addCommand2.execute();","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"Vinci-Hu"},"content":"        assertEquals(1, fridge.getSize());","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"Vinci-Hu"},"content":"        assertEquals(5, fridge.getFood(0).getQuantity());","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"Vinci-Hu"},"content":"        String expectedMessage \u003d \"Great! I have added Milk into your fridge.\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"Vinci-Hu"},"content":"                + \"Details: Food name: Milk, category: DAIRY, \"","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"Vinci-Hu"},"content":"                + \"expiry: 31-12-2021, stored in: FRIDGE_DOOR, quantity: 5\";","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"Vinci-Hu"},"content":"        String actualMessage \u003d addCommand2.getMessagePrintedToUser();","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"Vinci-Hu"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"Vinci-Hu"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"Leeyp":30,"kwokyto":4,"Vinci-Hu":47,"SimJJ96":38}},{"path":"src/test/java/seedu/fridgefriend/command/ExpiringCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Vinci-Hu"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-04-05"},{"lineNumber":2,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":3,"author":{"gitId":"Vinci-Hu"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-04-05"},{"lineNumber":4,"author":{"gitId":"Vinci-Hu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-05"},{"lineNumber":5,"author":{"gitId":"Vinci-Hu"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-04-05"},{"lineNumber":6,"author":{"gitId":"Vinci-Hu"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-04-05"},{"lineNumber":7,"author":{"gitId":"Vinci-Hu"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;","lastModifiedDate":"2021-04-05"},{"lineNumber":8,"author":{"gitId":"Vinci-Hu"},"content":"import seedu.fridgefriend.food.Fridge;","lastModifiedDate":"2021-04-05"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-05"},{"lineNumber":11,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":12,"author":{"gitId":"Vinci-Hu"},"content":"public class ExpiringCommandTest {","lastModifiedDate":"2021-04-05"},{"lineNumber":13,"author":{"gitId":"Vinci-Hu"},"content":"    private Fridge fridge;","lastModifiedDate":"2021-04-05"},{"lineNumber":14,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":15,"author":{"gitId":"Vinci-Hu"},"content":"    //@@author Vinci-Hu","lastModifiedDate":"2021-04-05"},{"lineNumber":16,"author":{"gitId":"Vinci-Hu"},"content":"    @BeforeEach","lastModifiedDate":"2021-04-05"},{"lineNumber":17,"author":{"gitId":"Vinci-Hu"},"content":"    public void setUp() throws Exception {","lastModifiedDate":"2021-04-05"},{"lineNumber":18,"author":{"gitId":"Vinci-Hu"},"content":"        fridge \u003d new Fridge();","lastModifiedDate":"2021-04-05"},{"lineNumber":19,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":20,"author":{"gitId":"Vinci-Hu"},"content":"        Food chicken \u003d AddCommand.categoriseAndGenerateFood(\"chicken\", FoodCategory.MEAT,","lastModifiedDate":"2021-04-05"},{"lineNumber":21,"author":{"gitId":"Vinci-Hu"},"content":"                \"31-07-2021\", FoodStorageLocation.LOWER_SHELF, 200);","lastModifiedDate":"2021-04-05"},{"lineNumber":22,"author":{"gitId":"Vinci-Hu"},"content":"        fridge.add(chicken);","lastModifiedDate":"2021-04-05"},{"lineNumber":23,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":24,"author":{"gitId":"Vinci-Hu"},"content":"        Food lettuce \u003d AddCommand.categoriseAndGenerateFood(\"lettuce\", FoodCategory.VEGETABLE,","lastModifiedDate":"2021-04-05"},{"lineNumber":25,"author":{"gitId":"Vinci-Hu"},"content":"                \"12-04-2021\", FoodStorageLocation.LOWER_SHELF, 100);","lastModifiedDate":"2021-04-05"},{"lineNumber":26,"author":{"gitId":"Vinci-Hu"},"content":"        fridge.add(lettuce);","lastModifiedDate":"2021-04-05"},{"lineNumber":27,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":28,"author":{"gitId":"Vinci-Hu"},"content":"        Food pork \u003d AddCommand.categoriseAndGenerateFood(\"pork\", FoodCategory.MEAT,","lastModifiedDate":"2021-04-05"},{"lineNumber":29,"author":{"gitId":"Vinci-Hu"},"content":"                \"11-04-2021\", FoodStorageLocation.MIDDLE_SHELF, 500);","lastModifiedDate":"2021-04-05"},{"lineNumber":30,"author":{"gitId":"Vinci-Hu"},"content":"        fridge.add(pork);","lastModifiedDate":"2021-04-05"},{"lineNumber":31,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":32,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":33,"author":{"gitId":"Vinci-Hu"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":34,"author":{"gitId":"Vinci-Hu"},"content":"    public void expiringCommand_NoExpiry_ListTheExpiringOnly() {","lastModifiedDate":"2021-04-05"},{"lineNumber":35,"author":{"gitId":"Vinci-Hu"},"content":"        ExpiringCommand expiringCommand \u003d new ExpiringCommand();","lastModifiedDate":"2021-04-05"},{"lineNumber":36,"author":{"gitId":"Vinci-Hu"},"content":"        expiringCommand.setData(fridge);","lastModifiedDate":"2021-04-05"},{"lineNumber":37,"author":{"gitId":"Vinci-Hu"},"content":"        expiringCommand.execute();","lastModifiedDate":"2021-04-05"},{"lineNumber":38,"author":{"gitId":"Vinci-Hu"},"content":"        String expectedMessage \u003d \"Expired message: No food has expired! Congratulations!\"","lastModifiedDate":"2021-04-05"},{"lineNumber":39,"author":{"gitId":"Vinci-Hu"},"content":"                + \"Expiring message: These are the food expiring in the next week:\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":40,"author":{"gitId":"Vinci-Hu"},"content":"                + \"1. Food name: pork, category: MEAT, expiry: 11-04-2021, stored in: \"","lastModifiedDate":"2021-04-05"},{"lineNumber":41,"author":{"gitId":"Vinci-Hu"},"content":"                + \"MIDDLE_SHELF, quantity: 500\";","lastModifiedDate":"2021-04-05"},{"lineNumber":42,"author":{"gitId":"Vinci-Hu"},"content":"        String actualMessage \u003d expiringCommand.messageForTesting();","lastModifiedDate":"2021-04-05"},{"lineNumber":43,"author":{"gitId":"Vinci-Hu"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2021-04-05"},{"lineNumber":44,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":45,"author":{"gitId":"Vinci-Hu"},"content":"}","lastModifiedDate":"2021-04-05"}],"authorContributionMap":{"Vinci-Hu":45}},{"path":"src/test/java/seedu/fridgefriend/command/HistoryCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Leeyp"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"Leeyp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"Leeyp"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"Leeyp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.exception.InvalidDateException;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.exception.InvalidQuantityException;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.exception.RepetitiveFoodIdentifierException;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"Leeyp"},"content":"import seedu.fridgefriend.food.Fridge;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"Leeyp"},"content":"//@@author leeyp","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"Leeyp"},"content":"class HistoryCommandTest {","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"Leeyp"},"content":"    private Fridge fridge;","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"Leeyp"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"Leeyp"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"Leeyp"},"content":"        fridge \u003d new Fridge();","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"Leeyp"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"Leeyp"},"content":"    public void historyCommand_SuccessfullyReadHistory() throws InvalidDateException,","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"Leeyp"},"content":"            RepetitiveFoodIdentifierException, InvalidQuantityException {","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"Leeyp"},"content":"        AddCommand addCommand1 \u003d new AddCommand(\"Coke\", FoodCategory.BEVERAGE,","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"Leeyp"},"content":"                \"30-06-2021\", FoodStorageLocation.FREEZER, 5);","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"Leeyp"},"content":"        addCommand1.setData(fridge);","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"Leeyp"},"content":"        addCommand1.execute();","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"Leeyp"},"content":"        AddCommand addCommand2 \u003d new AddCommand(\"chicken\", FoodCategory.MEAT,","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"Leeyp"},"content":"                \"30-06-2021\", FoodStorageLocation.FREEZER, 200);","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"Leeyp"},"content":"        addCommand2.setData(fridge);","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"Leeyp"},"content":"        addCommand2.execute();","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"Leeyp"},"content":"        AddCommand addCommand3 \u003d new AddCommand(\"Milk\", FoodCategory.DAIRY,","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"Leeyp"},"content":"                \"31-12-2021\", FoodStorageLocation.FRIDGE_DOOR, 2);","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"Leeyp"},"content":"        addCommand3.setData(fridge);","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"Leeyp"},"content":"        addCommand3.execute();","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"Leeyp"},"content":"        AddCommand addCommand4 \u003d new AddCommand(\"Milk\", FoodCategory.DAIRY,","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"Leeyp"},"content":"                \"31-12-2021\", FoodStorageLocation.FRIDGE_DOOR, 3);","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"Leeyp"},"content":"        addCommand4.setData(fridge);","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"Leeyp"},"content":"        addCommand4.execute();","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"Leeyp"},"content":"        //the fourth add command updates the quantity of Milk.","lastModifiedDate":"2021-04-05"},{"lineNumber":49,"author":{"gitId":"Leeyp"},"content":"        String expectedMessage \u003d \"This is the full history of items you\u0027ve added in the fridge:\\n\"","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"Leeyp"},"content":"                + \"\\t1. Food name: Coke, category: BEVERAGE, expiry: \"","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"Leeyp"},"content":"                + \"30-06-2021, stored in: FREEZER, quantity: 5\\n\"","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"Leeyp"},"content":"                + \"\\t2. Food name: chicken, category: MEAT, expiry: \"","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"Leeyp"},"content":"                + \"30-06-2021, stored in: FREEZER, quantity: 200\\n\"","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"Leeyp"},"content":"                + \"\\t3. Food name: Milk, category: DAIRY, expiry: \"","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"Leeyp"},"content":"                + \"31-12-2021, stored in: FRIDGE_DOOR, quantity: 2\\n\"","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"Leeyp"},"content":"                + \"\\t4. Food name: Milk, category: DAIRY, expiry: \"","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"Leeyp"},"content":"                + \"31-12-2021, stored in: FRIDGE_DOOR, quantity: 5\";","lastModifiedDate":"2021-04-05"},{"lineNumber":58,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"Leeyp"},"content":"        String actualMessage \u003d HistoryCommand.getHistoryMessage();","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"Leeyp"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"Leeyp"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"Leeyp"},"content":"    public void historyCommand_SuccessfullyClearHistory() {","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"Leeyp"},"content":"        HistoryCommand.clearHistory();","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"Leeyp"},"content":"        String expectedMessage \u003d \"This is the full history of items you\u0027ve added in the fridge:\";","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"Leeyp"},"content":"        String actualMessage \u003d HistoryCommand.getHistoryMessage();","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"Leeyp"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"Leeyp"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"Leeyp":73}},{"path":"src/test/java/seedu/fridgefriend/command/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.exception.InvalidInputException;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.Fridge;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"class ListCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"    private Fridge fridge;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"    //@@author SimJJ96","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"    public void setUp() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"        fridge \u003d new Fridge();","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"        Food chicken \u003d AddCommand.categoriseAndGenerateFood(\"chicken\", FoodCategory.MEAT,","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":"                \"31-07-2021\", FoodStorageLocation.LOWER_SHELF, 200);","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"        fridge.add(chicken);","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"        Food lettuce \u003d AddCommand.categoriseAndGenerateFood(\"lettuce\", FoodCategory.VEGETABLE,","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":"                \"17-05-2021\", FoodStorageLocation.LOWER_SHELF, 100);","lastModifiedDate":"2021-04-05"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"        fridge.add(lettuce);","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":"        Food pork \u003d AddCommand.categoriseAndGenerateFood(\"pork\", FoodCategory.MEAT,","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"                \"31-07-2021\", FoodStorageLocation.MIDDLE_SHELF, 500);","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"        fridge.add(pork);","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"SimJJ96"},"content":"    public void listCommand_listAnInvalidCategory_invalidInputException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"SimJJ96"},"content":"        assertThrows(InvalidInputException.class, () -\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"SimJJ96"},"content":"                new ListCommand(\"abc123\").execute());","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"SimJJ96"},"content":"    //@author","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"Vinci-Hu"},"content":"    //@@author Vinci-Hu","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"Vinci-Hu"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"Vinci-Hu"},"content":"    public void listCommand_listAValidCategory_ListTheCategoryInCorrectSequence() {","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"Vinci-Hu"},"content":"        ListCommand listCommand \u003d new ListCommand(\"MEAT\");","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"Vinci-Hu"},"content":"        listCommand.setData(fridge);","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"Vinci-Hu"},"content":"        String expectedMessage \u003d \"These are the MEAT in your fridge:\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"Vinci-Hu"},"content":"                + \"\\t1. Food name: chicken, category: MEAT, expiry: \"","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"Vinci-Hu"},"content":"                + \"31-07-2021, stored in: LOWER_SHELF, quantity: 200\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"Vinci-Hu"},"content":"                + \"\\t2. Food name: pork, category: MEAT, expiry: \"","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"Vinci-Hu"},"content":"                + \"31-07-2021, stored in: MIDDLE_SHELF, quantity: 500\";","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"Vinci-Hu"},"content":"        String actualMessage \u003d listCommand.getListByCategoryMessage();","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"Vinci-Hu"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"Vinci-Hu"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"Vinci-Hu"},"content":"    public void listCommand_listAll_listAllFoodInFridge() {","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"Vinci-Hu"},"content":"        ListCommand listCommand \u003d new ListCommand(\"\");","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"Vinci-Hu"},"content":"        listCommand.setData(fridge);","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"Vinci-Hu"},"content":"        String expectedMessage \u003d \"Here are the items in your fridge:\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"Vinci-Hu"},"content":"                + \"\\t1. Food name: chicken, category: MEAT, expiry: \"","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"Vinci-Hu"},"content":"                + \"31-07-2021, stored in: LOWER_SHELF, quantity: 200\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"Vinci-Hu"},"content":"                + \"\\t2. Food name: lettuce, category: VEGETABLE, expiry: \"","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"Vinci-Hu"},"content":"                + \"17-05-2021, stored in: LOWER_SHELF, quantity: 100\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":66,"author":{"gitId":"Vinci-Hu"},"content":"                + \"\\t3. Food name: pork, category: MEAT, expiry: \"","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"Vinci-Hu"},"content":"                + \"31-07-2021, stored in: MIDDLE_SHELF, quantity: 500\";","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"Vinci-Hu"},"content":"        String actualMessage \u003d listCommand.getListAllMessage();","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"Vinci-Hu"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2021-03-21"},{"lineNumber":70,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":71,"author":{"gitId":"Vinci-Hu"},"content":"    //@@author","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"Leeyp"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"Leeyp"},"content":"    //@@author leeyp","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"Leeyp"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"Leeyp"},"content":"    public void listCommand_listAValidLocation_ListTheLocationInCorrectSequence() {","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"Leeyp"},"content":"        ListCommand listCommand \u003d new ListCommand(\"LOWER_SHELF\");","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"Leeyp"},"content":"        listCommand.setData(fridge);","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"Leeyp"},"content":"        String expectedMessage \u003d \"These are the food stored in LOWER_SHELF:\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"Leeyp"},"content":"                + \"\\t1. Food name: chicken, category: MEAT, expiry: \"","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"Leeyp"},"content":"                + \"31-07-2021, stored in: LOWER_SHELF, quantity: 200\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"Leeyp"},"content":"                + \"\\t2. Food name: lettuce, category: VEGETABLE, expiry: \"","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"Leeyp"},"content":"                + \"17-05-2021, stored in: LOWER_SHELF, quantity: 100\";","lastModifiedDate":"2021-04-05"},{"lineNumber":83,"author":{"gitId":"Leeyp"},"content":"        String actualMessage \u003d listCommand.getListByStorageLocationMessage();","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"Leeyp"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"Leeyp"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"Leeyp"},"content":"    //@@author","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"Leeyp":15,"Vinci-Hu":29,"SimJJ96":44}},{"path":"src/test/java/seedu/fridgefriend/command/RemoveCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"Vinci-Hu"},"content":"import seedu.fridgefriend.exception.FoodNameNotFoundException;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"Vinci-Hu"},"content":"import seedu.fridgefriend.exception.InvalidQuantityException;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.Fridge;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"class RemoveCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"    private Fridge fridge;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"Vinci-Hu"},"content":"    private RemoveCommand removeCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"    /*Solution below adapted from https://github.com/se-edu/addressbook-level2/blob/master","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"            /test/java/seedu/addressbook/commands/DeleteCommandTest.java*/","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":"    //@@author SimJJ96","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"    public void setUp() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"        fridge \u003d new Fridge();","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"        Food chicken \u003d AddCommand.categoriseAndGenerateFood(\"chicken\", FoodCategory.MEAT,","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":"                \"31-07-2021\", FoodStorageLocation.LOWER_SHELF, 200);","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":"        fridge.add(chicken);","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"        Food lettuce \u003d AddCommand.categoriseAndGenerateFood(\"lettuce\", FoodCategory.VEGETABLE,","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"                \"17-05-2021\", FoodStorageLocation.MIDDLE_SHELF, 100);","lastModifiedDate":"2021-04-05"},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"        fridge.add(lettuce);","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"SimJJ96"},"content":"        Food pork \u003d AddCommand.categoriseAndGenerateFood(\"pork\", FoodCategory.MEAT,","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"SimJJ96"},"content":"                \"31-07-2021\", FoodStorageLocation.LOWER_SHELF, 500);","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"SimJJ96"},"content":"        fridge.add(pork);","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"SimJJ96"},"content":"        removeCommand \u003d new RemoveCommand(\"pork\", 1000);","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"SimJJ96"},"content":"        removeCommand.setData(fridge);","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"Vinci-Hu"},"content":"    //@@author Vinci-Hu","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"Vinci-Hu"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"Vinci-Hu"},"content":"    public void removeCommand_removePortionOfFood_successfullyRemovePortion()","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"Vinci-Hu"},"content":"            throws InvalidQuantityException, FoodNameNotFoundException {","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"Vinci-Hu"},"content":"        RemoveCommand removeCommand \u003d new RemoveCommand(\"chicken\", 100);","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"Vinci-Hu"},"content":"        removeCommand.setData(fridge);","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"Vinci-Hu"},"content":"        removeCommand.execute();","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"Vinci-Hu"},"content":"        String actualMessage \u003d removeCommand.getMessagePrintedToUser();","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"Vinci-Hu"},"content":"        String expectedMessage \u003d \"Noted! I\u0027ve removed 100 of the food \"","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"Vinci-Hu"},"content":"                + \"chicken from your fridge.\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"Vinci-Hu"},"content":"                + \"New quantity: 100\";","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"Vinci-Hu"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"Vinci-Hu"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"Vinci-Hu"},"content":"    public void removeCommand_removeAllOfFood_successfullyRemoveObject()","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"Vinci-Hu"},"content":"            throws InvalidQuantityException, FoodNameNotFoundException {","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"Vinci-Hu"},"content":"        RemoveCommand removeCommand \u003d new RemoveCommand(\"chicken\", 200);","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"Vinci-Hu"},"content":"        removeCommand.setData(fridge);","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"Vinci-Hu"},"content":"        removeCommand.execute();","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"Vinci-Hu"},"content":"        String actualMessage \u003d removeCommand.getMessagePrintedToUser();","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"Vinci-Hu"},"content":"        String expectedMessage \u003d \"Noted! I\u0027ve removed chicken from your fridge.\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"Vinci-Hu"},"content":"                + \"Now you have 2 food in the fridge.\";","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"Vinci-Hu"},"content":"        assertEquals(expectedMessage,actualMessage);","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"Vinci-Hu"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"Vinci-Hu"},"content":"    public void removeCommand_invalidQuantity_invalidQuantityException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"Vinci-Hu"},"content":"        assertThrows(InvalidQuantityException.class, () -\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"Vinci-Hu"},"content":"                removeCommand.execute());","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"Vinci-Hu"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"kwokyto":4,"Vinci-Hu":37,"SimJJ96":35}},{"path":"src/test/java/seedu/fridgefriend/command/RunningLowCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.food.Fridge;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"class RunningLowCommandTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"    private Fridge fridge;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"    public void semiPopulateFridge() throws Exception {","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"        fridge \u003d new Fridge();","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"        Food chicken \u003d AddCommand.categoriseAndGenerateFood(\"chicken\", FoodCategory.MEAT, \"31-07-2021\",","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"                FoodStorageLocation.LOWER_SHELF, 200);","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"        fridge.add(chicken);","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"Vinci-Hu"},"content":"        Food lettuce \u003d AddCommand.categoriseAndGenerateFood(\"lettuce\", FoodCategory.VEGETABLE, \"17-05-2021\",","lastModifiedDate":"2021-04-05"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"                FoodStorageLocation.LOWER_SHELF, 100);","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"        fridge.add(lettuce);","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"        Food pork \u003d AddCommand.categoriseAndGenerateFood(\"pork\", FoodCategory.MEAT, \"31-07-2021\",","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"                FoodStorageLocation.MIDDLE_SHELF, 500);","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"        fridge.add(pork);","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"    public void fullyPopulateFridge() throws Exception {","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"        fridge \u003d new Fridge();","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"        Food chicken \u003d AddCommand.categoriseAndGenerateFood(\"chicken\", FoodCategory.MEAT, \"31-07-2021\",","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"                FoodStorageLocation.LOWER_SHELF, 1000);","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"        fridge.add(chicken);","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"Vinci-Hu"},"content":"        Food lettuce \u003d AddCommand.categoriseAndGenerateFood(\"lettuce\", FoodCategory.VEGETABLE, \"17-05-2021\",","lastModifiedDate":"2021-04-05"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"                FoodStorageLocation.LOWER_SHELF, 1000);","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"        fridge.add(lettuce);","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"Vinci-Hu"},"content":"        Food apple \u003d AddCommand.categoriseAndGenerateFood(\"apple\", FoodCategory.FRUIT, \"17-05-2021\",","lastModifiedDate":"2021-04-05"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":"                FoodStorageLocation.LOWER_SHELF, 1000);","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"        fridge.add(apple);","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"Vinci-Hu"},"content":"        Food fish \u003d AddCommand.categoriseAndGenerateFood(\"fish\", FoodCategory.SEAFOOD, \"17-05-2021\",","lastModifiedDate":"2021-04-05"},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"                FoodStorageLocation.LOWER_SHELF, 1000);","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"kwokyto"},"content":"        fridge.add(fish);","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"Vinci-Hu"},"content":"        Food egg \u003d AddCommand.categoriseAndGenerateFood(\"egg\", FoodCategory.EGG, \"17-05-2021\",","lastModifiedDate":"2021-04-05"},{"lineNumber":52,"author":{"gitId":"kwokyto"},"content":"                FoodStorageLocation.LOWER_SHELF, 1000);","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"kwokyto"},"content":"        fridge.add(egg);","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"Vinci-Hu"},"content":"        Food cheese \u003d AddCommand.categoriseAndGenerateFood(\"cheese\", FoodCategory.DAIRY, \"17-05-2021\",","lastModifiedDate":"2021-04-05"},{"lineNumber":56,"author":{"gitId":"kwokyto"},"content":"                FoodStorageLocation.LOWER_SHELF, 1000);","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"kwokyto"},"content":"        fridge.add(cheese);","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"Vinci-Hu"},"content":"        Food coke \u003d AddCommand.categoriseAndGenerateFood(\"coke\", FoodCategory.BEVERAGE, \"17-05-2021\",","lastModifiedDate":"2021-04-05"},{"lineNumber":60,"author":{"gitId":"kwokyto"},"content":"                FoodStorageLocation.LOWER_SHELF, 1000);","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"kwokyto"},"content":"        fridge.add(coke);","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"Vinci-Hu"},"content":"        Food soup \u003d AddCommand.categoriseAndGenerateFood(\"soup\", FoodCategory.COOKED_DISH, \"17-05-2021\",","lastModifiedDate":"2021-04-05"},{"lineNumber":64,"author":{"gitId":"kwokyto"},"content":"                FoodStorageLocation.LOWER_SHELF, 1000);","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"kwokyto"},"content":"        fridge.add(soup);","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"Vinci-Hu"},"content":"        Food sandwich \u003d AddCommand.categoriseAndGenerateFood(\"sandwich\", FoodCategory.READY_TO_EAT, \"17-05-2021\",","lastModifiedDate":"2021-04-05"},{"lineNumber":68,"author":{"gitId":"kwokyto"},"content":"                FoodStorageLocation.LOWER_SHELF, 1000);","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"kwokyto"},"content":"        fridge.add(sandwich);","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"Vinci-Hu"},"content":"        Food iceCream \u003d AddCommand.categoriseAndGenerateFood(\"iceCream\", FoodCategory.FROZEN, \"17-05-2021\",","lastModifiedDate":"2021-04-05"},{"lineNumber":72,"author":{"gitId":"kwokyto"},"content":"                FoodStorageLocation.LOWER_SHELF, 1000);","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"kwokyto"},"content":"        fridge.add(iceCream);","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"Vinci-Hu"},"content":"        Food icePack \u003d AddCommand.categoriseAndGenerateFood(\"icePack\", FoodCategory.OTHER, \"17-05-2021\",","lastModifiedDate":"2021-04-05"},{"lineNumber":76,"author":{"gitId":"kwokyto"},"content":"                FoodStorageLocation.LOWER_SHELF, 1000);","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"kwokyto"},"content":"        fridge.add(icePack);","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"kwokyto"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"kwokyto"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"kwokyto"},"content":"    public void runningLowCommand_isSemiPopulated_listCorrectly() throws Exception {","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"kwokyto"},"content":"        semiPopulateFridge();","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"kwokyto"},"content":"        RunningLowCommand runningLowCommand \u003d new RunningLowCommand();","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"kwokyto"},"content":"        runningLowCommand.setData(fridge);","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"kwokyto"},"content":"        String expectedMessage \u003d \"You are running low on food in these categories:\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"kwokyto"},"content":"                + \"1. VEGETABLE quantity: 100 out of 500\\n\" + \"2. FRUIT quantity: 0 out of 500\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"kwokyto"},"content":"                + \"3. SEAFOOD quantity: 0 out of 500\\n\" + \"4. EGG quantity: 0 out of 500\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"kwokyto"},"content":"                + \"5. DAIRY quantity: 0 out of 500\\n\" + \"6. BEVERAGE quantity: 0 out of 500\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"kwokyto"},"content":"                + \"7. COOKED_DISH quantity: 0 out of 500\\n\" + \"8. READY_TO_EAT quantity: 0 out of 500\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"kwokyto"},"content":"                + \"9. FROZEN quantity: 0 out of 500\\n\" + \"10. OTHER quantity: 0 out of 500\";","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"kwokyto"},"content":"        runningLowCommand.execute();","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"kwokyto"},"content":"        String actualMessage \u003d runningLowCommand.getMessage();","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"kwokyto"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"kwokyto"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"kwokyto"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"kwokyto"},"content":"    public void runningLowCommand_isFullyPopulated_correctMessage() throws Exception {","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"kwokyto"},"content":"        fullyPopulateFridge();","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"kwokyto"},"content":"        RunningLowCommand runningLowCommand \u003d new RunningLowCommand();","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"kwokyto"},"content":"        runningLowCommand.setData(fridge);","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"kwokyto"},"content":"        String expectedMessage \u003d \"Congrats! You are all stocked up on food! :D\";","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"kwokyto"},"content":"        runningLowCommand.execute();","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"kwokyto"},"content":"        String actualMessage \u003d runningLowCommand.getMessage();","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"kwokyto"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"kwokyto"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"kwokyto":95,"Vinci-Hu":11}},{"path":"src/test/java/seedu/fridgefriend/command/SearchCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SimJJ96"},"content":"package seedu.fridgefriend.command;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"SimJJ96"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"SimJJ96"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.exception.EmptyDescriptionException;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.Food;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.FoodCategory;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.FoodStorageLocation;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"SimJJ96"},"content":"import seedu.fridgefriend.food.Fridge;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"SimJJ96"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"SimJJ96"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"SimJJ96"},"content":"class SearchCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"SimJJ96"},"content":"    private Fridge fridge;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"SimJJ96"},"content":"    //@@author SimJJ96","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"SimJJ96"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"SimJJ96"},"content":"    public void setUp() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"SimJJ96"},"content":"        fridge \u003d new Fridge();","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"SimJJ96"},"content":"        Food chicken \u003d AddCommand.categoriseAndGenerateFood(\"chicken\", FoodCategory.MEAT,","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"SimJJ96"},"content":"                \"27-03-2022\", FoodStorageLocation.LOWER_SHELF, 300);","lastModifiedDate":"2021-04-05"},{"lineNumber":25,"author":{"gitId":"SimJJ96"},"content":"        fridge.add(chicken);","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"SimJJ96"},"content":"        Food lettuce \u003d AddCommand.categoriseAndGenerateFood(\"lettuce\", FoodCategory.VEGETABLE,","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"SimJJ96"},"content":"                \"17-03-2022\", FoodStorageLocation.MIDDLE_SHELF, 100);","lastModifiedDate":"2021-04-05"},{"lineNumber":29,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"SimJJ96"},"content":"        fridge.add(lettuce);","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"SimJJ96"},"content":"        Food roastChicken \u003d AddCommand.categoriseAndGenerateFood(\"roast chicken\", FoodCategory.READY_TO_EAT,","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"SimJJ96"},"content":"                \"31-12-2022\", FoodStorageLocation.UPPER_SHELF, 1);","lastModifiedDate":"2021-04-05"},{"lineNumber":34,"author":{"gitId":"SimJJ96"},"content":"        fridge.add(roastChicken);","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"SimJJ96"},"content":"    private SearchCommand searchCommand(String foodName) throws EmptyDescriptionException {","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"SimJJ96"},"content":"        SearchCommand searchCommand \u003d new SearchCommand(foodName);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"SimJJ96"},"content":"        searchCommand.setData(fridge);","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"SimJJ96"},"content":"        return searchCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"SimJJ96"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"SimJJ96"},"content":"    public void searchCommand_foodInFridge_foodFound() throws EmptyDescriptionException {","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"SimJJ96"},"content":"        String expectedMessage \u003d \"These are the chicken in your fridge:\"","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"SimJJ96"},"content":"                + \"\\n\\t1. Food name: chicken, category: MEAT, \"","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"SimJJ96"},"content":"                + \"expiry: 27-03-2022, stored in: LOWER_SHELF, quantity: 300\"","lastModifiedDate":"2021-04-05"},{"lineNumber":48,"author":{"gitId":"SimJJ96"},"content":"                + \"\\n\\t2. Food name: roast chicken, category: READY_TO_EAT, \"","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"SimJJ96"},"content":"                + \"expiry: 31-12-2022, stored in: UPPER_SHELF, quantity: 1\";","lastModifiedDate":"2021-04-05"},{"lineNumber":50,"author":{"gitId":"SimJJ96"},"content":"        String actualMessage \u003d searchCommand(\"chicken\").getMessagePrintedToUser();","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"SimJJ96"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"SimJJ96"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"SimJJ96"},"content":"    public void searchCommand_foodNotInFridge_foodNotFound() throws EmptyDescriptionException {","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"SimJJ96"},"content":"        String expectedMessage \u003d \"You do not have oyster in your fridge.\";","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"SimJJ96"},"content":"        String actualMessage \u003d searchCommand(\"oyster\").getMessagePrintedToUser();","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"SimJJ96"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"SimJJ96"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"SimJJ96"},"content":"    public void searchCommand_emptyString_emptyDescriptionException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"SimJJ96"},"content":"        assertThrows(EmptyDescriptionException.class, () -\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"SimJJ96"},"content":"                searchCommand(\"\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"SimJJ96"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"SimJJ96"},"content":"    //@author","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"SimJJ96"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"SimJJ96"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"SimJJ96":68}},{"path":"src/test/java/seedu/fridgefriend/utilities/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"package seedu.fridgefriend.utilities;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"kwokyto"},"content":"//@@author kwokyto","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"kwokyto"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"kwokyto"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"kwokyto"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"kwokyto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.command.ByeCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.command.ListCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.EmptyDescriptionException;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"kwokyto"},"content":"import seedu.fridgefriend.exception.InvalidInputException;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"kwokyto"},"content":"// Solution below adapted from https://github.com/se-edu/addressbook-level2/blob/157fcf19c6b73289dc4cc7b2dd1152bc2b8e197a/test/java/seedu/addressbook/parser/ParserTest.java","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"kwokyto"},"content":"public class ParserTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"kwokyto"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"kwokyto"},"content":"    public void parse_emptyInput_InvalidInputException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"        assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"kwokyto"},"content":"            Parser.parseInput(\"\");","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"kwokyto"},"content":"        });","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"kwokyto"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"kwokyto"},"content":"    public void parse_listCommand_parsedCorrectly() {","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"kwokyto"},"content":"        try {","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"kwokyto"},"content":"            assertEquals(Parser.getCommand(\"list\").getClass(), ListCommand.class);","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"kwokyto"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"kwokyto"},"content":"            fail();","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"kwokyto"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"kwokyto"},"content":"    public void parse_byeCommand_parsedCorrectly() {","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"kwokyto"},"content":"        try {","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"kwokyto"},"content":"            assertEquals(Parser.getCommand(\"bye\").getClass(), ByeCommand.class);","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"kwokyto"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"kwokyto"},"content":"            fail();","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"kwokyto"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"kwokyto"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"kwokyto"},"content":"    public void parse_addCommandNoArgs_EmptyDescriptionException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"kwokyto"},"content":"        assertThrows(EmptyDescriptionException.class, () -\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"kwokyto"},"content":"            Parser.getCommand(\"add\");","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"kwokyto"},"content":"        });","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"kwokyto"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"kwokyto"},"content":"    public void parse_addCommandMissingArgs_InvalidInputException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"kwokyto"},"content":"        assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"kwokyto"},"content":"            Parser.getCommand(\"add /cat meat\");","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"kwokyto"},"content":"        });","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"kwokyto"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"kwokyto"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"Vinci-Hu"},"content":"    //@@author Vinci-Hu","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"Vinci-Hu"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"Vinci-Hu"},"content":"    public void parse_removeCommandNoArgs_EmptyDescriptionException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"Vinci-Hu"},"content":"        assertThrows(EmptyDescriptionException.class, () -\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"Vinci-Hu"},"content":"            Parser.getCommand(\"remove\");","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"Vinci-Hu"},"content":"        });","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"Vinci-Hu"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"Vinci-Hu"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"Vinci-Hu"},"content":"    public void parse_searchCommandNoArg_EmptyDescriptionException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"Vinci-Hu"},"content":"        assertThrows(EmptyDescriptionException.class, () -\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"Vinci-Hu"},"content":"            Parser.getCommand(\"search\");","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"Vinci-Hu"},"content":"        });","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"Vinci-Hu"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"Vinci-Hu"},"content":"    ","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"Vinci-Hu"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"kwokyto":56,"Vinci-Hu":16}},{"path":"text-ui-test/runtest.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@echo off","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"setlocal enableextensions","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"pushd %~dp0","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"call gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"cd build\\libs","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"for /f \"tokens\u003d*\" %%a in (","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u0027dir /b *.jar\u0027","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":") do (","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    set jarloc\u003d%%a","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"cd ..\\..\\text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"kwokyto"},"content":"FC ACTUAL.TXT EXPECTED.TXT ","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"kwokyto":1,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"kwokyto"},"content":"!/usr/bin/env bash","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"diff EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kwokyto":1,"-":22}}]
