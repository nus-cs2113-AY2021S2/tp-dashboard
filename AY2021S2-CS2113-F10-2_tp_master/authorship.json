[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"    mainClassName \u003d \"seedu.duke.Healthier\"","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":45,"Song0180":2}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"![](https://avatars.githubusercontent.com/u/55625337?s\u003d460\u0026u\u003d8cf010d3f5099773aec99b0ebe41c4902552a392\u0026v\u003d4) | Song Yu | [Github](https://github.com/Song0180) | [LinkedIn](https://www.linkedin.com/in/daniel-yu-song/)","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Joe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ron John | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | John Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Li Pingrui | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-03-05"}],"authorContributionMap":{"PingruiLi":1,"-":8,"Song0180":1}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"# Healther - Your No. 1 Personal Fitness Management Application","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"Healtheir targets people who care about fitness, who exercise regularly (at least 3 times/week) and have diet plans. It is designed for users of age group 18-30.  ","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"This app is used via **Command Line Interface (CLI)**. If the user is proficient in using command-line tools \u0026 typing, then it could be very efficient to use. This app also provides several shortcut commands for advanced users for further efficient operations.","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"-":6,"Song0180":4}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"# Healthier | User Guide","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"Healtheir targets people who care about fitness, who exercise regularly (at least 3 times/week) and have diet plans. It is designed for users of age group 18-30.  ","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"This app is used via **Command Line Interface (CLI)**. If the user is proficient in using command-line tools \u0026 typing, then it could be very efficient to use. This app also provides several shortcut commands for advanced users for further efficient operations.","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"---","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"## Table of Content","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"* [Quick start](README.md#quick-start)","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"* [Features](README.md#features)","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"* [Command summary](README.md#command-summary)","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"This is a cross-platform application, you can run it on any operating system as long as **Java 11** is installed.","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"\u003e To verify if you have **Java 11** installed, simply type command `java --version` in your terminal.","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"1. Download the `tp.jar` file from the [latest release](https://github.com/AY2021S2-CS2113-F10-2/tp/releases).","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"1. Open a new terminal at the folder where the `Tp.jar` file is located.","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"1. Run the applictaion use command `java -jar Tp.jar`","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"1. Refer to the [Features](README.md#features) section below for more info on commands.","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"\u003e **Note:**","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"\u003e * All commands should be input in `lower_case`. It is always the first word supplied by the user.","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"    \u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"    \u003e   e.g. `add`, `view`, `delete` etc.","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"\u003e * Parameters of a command are denoted in `UPPER_CASE`. They must be supplied by the user, otherwise the command will not be recognized.","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"    \u003e   The actual input of the parameters can be in any case.","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"    \u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"    \u003e   e.g. in `add XXX`, `XXX` is a parameter which can be used as ``.","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"\u003e * Redundant parameters for single-word commands (e.g. `help`) will be ignored.","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"    \u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"    \u003e    e.g. if the command `help hahahaha` is input, it is equivalent to `help`.","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"\u003e * After the appliction starts running, it checks if a `data` folder exists in the same directory where `tp.jar` is located.","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"    \u003e   If the folder does not exist, the application will create a new folder `data`,","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"    \u003e   which is used to store the `data.txt` file which contains details of the user\u0027s data.","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"\u003e * The text file `data.txt` will be automatically updated after each operation of the app.","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"### Get help from instructions on how to use this app : `help`","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"Adds a to-do type of task to the task list.","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"Format: `help`","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"Example: `help`","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"Expected outcome:","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"Song0180"},"content":"### Input Exercise Data: `add`","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"Song0180"},"content":"Add one exercise activity with the duration and the date.","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"Song0180"},"content":"Format: `add  t/E a/ACTIVITY_NAME  d/DURATION  [date/DD-MM-YYYY]`","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"Song0180"},"content":"* Add one exercise record. The name of exercise activity `a/ACTIVITY_NAME` and duration `d/DURATION` **MUST** be specified.","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"Song0180"},"content":"* The name of the exercise should be a `String`.","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"Song0180"},"content":"* The tag value should be `E` in the upper case, which specifies that the current record is for **exercise data**.","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"Song0180"},"content":"* The default unit of duration is in **minutes**. An `integer` is expected for the duration, other formats are **not acceptable**.","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"Song0180"},"content":"* The date of the exercise activity `[date/DD-MM-YYYY]` is optional. If not provided, the system date will be used.","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"Song0180"},"content":"* The date should be **less than or equal to** the current date.","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"Song0180"},"content":"* The date format should be `DD-MM-YYYY`, other formats are not acceptable.","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Example of usage:  ","lastModifiedDate":"2020-05-24"},{"lineNumber":74,"author":{"gitId":"Song0180"},"content":"`add t/E a/running d/40 add one exercise record of running for 40 minutes. `","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"Song0180"},"content":"Output:","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"Song0180"},"content":"A new exercise activity record is added successfully!","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"Song0180"},"content":"Record summary: 40 minutes running exercise on XX-XX-XXXX(Today).","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":82,"author":{"gitId":"lowwilliam"},"content":"Examples:","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"Song0180"},"content":"`add t/E a/football d/60 date/05-01-2020 add the exercise record of football for 60 mins at the date of 05-01-2020.`","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":85,"author":{"gitId":"Song0180"},"content":"Output:","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-12"},{"lineNumber":87,"author":{"gitId":"Song0180"},"content":"A new exercise activity record is added successfully!","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"Song0180"},"content":"Record summary: 60 minutes football exercise on 05-01-2020.","lastModifiedDate":"2021-03-12"},{"lineNumber":89,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":91,"author":{"gitId":"lowwilliam"},"content":"### View Exercise Data: `view`","lastModifiedDate":"2021-03-18"},{"lineNumber":92,"author":{"gitId":"lowwilliam"},"content":"View one exercise activity with the duration and the date.","lastModifiedDate":"2021-03-18"},{"lineNumber":93,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":94,"author":{"gitId":"lowwilliam"},"content":"Format: `view  t/E  [a/ACTIVITY_NAME]  [date/DD-MM-YYYY]`","lastModifiedDate":"2021-03-18"},{"lineNumber":95,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":96,"author":{"gitId":"lowwilliam"},"content":"* View existing exercise records. The records will be sorted by date in descending order (The latest record will be the first record).","lastModifiedDate":"2021-03-18"},{"lineNumber":97,"author":{"gitId":"lowwilliam"},"content":"* The tag value should be `E` in the upper case, which specifies the output for records of exercise data.","lastModifiedDate":"2021-03-18"},{"lineNumber":98,"author":{"gitId":"lowwilliam"},"content":"* The name and date of the exercise activity are optional fields used for filtering the records that will be displayed. If none, all existing records will be displayed.","lastModifiedDate":"2021-03-18"},{"lineNumber":99,"author":{"gitId":"lowwilliam"},"content":"* The name of the exercise activity may be specified to view records of the specified exercise activity. The name of the exercise should be a String.","lastModifiedDate":"2021-03-18"},{"lineNumber":100,"author":{"gitId":"lowwilliam"},"content":"* The date/activity name of the exercise activity may be specified to view records on the specified date.","lastModifiedDate":"2021-03-18"},{"lineNumber":101,"author":{"gitId":"lowwilliam"},"content":"* The date should be less than or equal to the current date.","lastModifiedDate":"2021-03-18"},{"lineNumber":102,"author":{"gitId":"baggiiiie"},"content":"* The date format should be `DD-MM-YYYY`, other formats are not acceptable.","lastModifiedDate":"2021-03-18"},{"lineNumber":103,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":104,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":105,"author":{"gitId":"baggiiiie"},"content":"Example of usage:  ","lastModifiedDate":"2021-03-18"},{"lineNumber":106,"author":{"gitId":"lowwilliam"},"content":"`view t/E a/football `","lastModifiedDate":"2021-03-18"},{"lineNumber":107,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":108,"author":{"gitId":"baggiiiie"},"content":"Output:","lastModifiedDate":"2021-03-18"},{"lineNumber":109,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":110,"author":{"gitId":"lowwilliam"},"content":"Displaying all football exercise records: ","lastModifiedDate":"2021-03-18"},{"lineNumber":111,"author":{"gitId":"lowwilliam"},"content":"Index    Date         Activity   Duration ","lastModifiedDate":"2021-03-18"},{"lineNumber":112,"author":{"gitId":"lowwilliam"},"content":"1        15-01-2020   football     60 min","lastModifiedDate":"2021-03-18"},{"lineNumber":113,"author":{"gitId":"lowwilliam"},"content":"2        05-01-2020   football     60 min","lastModifiedDate":"2021-03-18"},{"lineNumber":114,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":115,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":116,"author":{"gitId":"lowwilliam"},"content":"Examples:","lastModifiedDate":"2021-03-18"},{"lineNumber":117,"author":{"gitId":"lowwilliam"},"content":"`view t/E date/05-02-2020`","lastModifiedDate":"2021-03-18"},{"lineNumber":118,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":119,"author":{"gitId":"baggiiiie"},"content":"Output:","lastModifiedDate":"2021-03-18"},{"lineNumber":120,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":121,"author":{"gitId":"lowwilliam"},"content":"Displaying all exercise records on date 05-02-2020:","lastModifiedDate":"2021-03-18"},{"lineNumber":122,"author":{"gitId":"lowwilliam"},"content":"Index    Date         Activity   Duration ","lastModifiedDate":"2021-03-18"},{"lineNumber":123,"author":{"gitId":"lowwilliam"},"content":"1        05-01-2020   football     60 min","lastModifiedDate":"2021-03-18"},{"lineNumber":124,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":125,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":126,"author":{"gitId":"lowwilliam"},"content":"Examples:","lastModifiedDate":"2021-03-18"},{"lineNumber":127,"author":{"gitId":"lowwilliam"},"content":"`view t/E view all exercises`","lastModifiedDate":"2021-03-18"},{"lineNumber":128,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":129,"author":{"gitId":"baggiiiie"},"content":"Output:","lastModifiedDate":"2021-03-18"},{"lineNumber":130,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":131,"author":{"gitId":"lowwilliam"},"content":"Displaying all exercise records:","lastModifiedDate":"2021-03-18"},{"lineNumber":132,"author":{"gitId":"lowwilliam"},"content":"Index    Date         Activity   Duration","lastModifiedDate":"2021-03-18"},{"lineNumber":133,"author":{"gitId":"lowwilliam"},"content":"1        15-01-2020   football     60 min","lastModifiedDate":"2021-03-18"},{"lineNumber":134,"author":{"gitId":"lowwilliam"},"content":"2        05-01-2020   football     60 min","lastModifiedDate":"2021-03-18"},{"lineNumber":135,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":136,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":137,"author":{"gitId":"lowwilliam"},"content":"### Delete Exercise Data: `delete`","lastModifiedDate":"2021-03-18"},{"lineNumber":138,"author":{"gitId":"lowwilliam"},"content":"Delete existing exercise record.","lastModifiedDate":"2021-03-18"},{"lineNumber":139,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":140,"author":{"gitId":"lowwilliam"},"content":"Format: `delete  t/E i/INDEX`","lastModifiedDate":"2021-03-18"},{"lineNumber":141,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":142,"author":{"gitId":"lowwilliam"},"content":"* Delete a single exercise record using the Index of the record.","lastModifiedDate":"2021-03-18"},{"lineNumber":143,"author":{"gitId":"lowwilliam"},"content":"* The tag value should be `E` in the upper case, which specifies that the operation is for exercise data.","lastModifiedDate":"2021-03-18"},{"lineNumber":144,"author":{"gitId":"lowwilliam"},"content":"* The index of the record must be specified. The index must be an `integer` within the range of the total number of records, index out of range or other formats are not acceptable.","lastModifiedDate":"2021-03-18"},{"lineNumber":145,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":146,"author":{"gitId":"baggiiiie"},"content":"Example of usage:  ","lastModifiedDate":"2021-03-18"},{"lineNumber":147,"author":{"gitId":"lowwilliam"},"content":"`Delete t/E i/1`","lastModifiedDate":"2021-03-18"},{"lineNumber":148,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":149,"author":{"gitId":"baggiiiie"},"content":"Output:","lastModifiedDate":"2021-03-18"},{"lineNumber":150,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":151,"author":{"gitId":"lowwilliam"},"content":"You have successfully deleted the exercise record of index 1!","lastModifiedDate":"2021-03-18"},{"lineNumber":152,"author":{"gitId":"lowwilliam"},"content":"Record summary: 15-01-2020   football     60 min","lastModifiedDate":"2021-03-18"},{"lineNumber":153,"author":{"gitId":"baggiiiie"},"content":"Displaying current exercise records:","lastModifiedDate":"2021-03-18"},{"lineNumber":154,"author":{"gitId":"lowwilliam"},"content":"Index    Date         Activity   Duration ","lastModifiedDate":"2021-03-18"},{"lineNumber":155,"author":{"gitId":"lowwilliam"},"content":"1        05-01-2020   football     60 min","lastModifiedDate":"2021-03-18"},{"lineNumber":156,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":157,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":158,"author":{"gitId":"lowwilliam"},"content":"### Input Diet Data: `add`","lastModifiedDate":"2021-03-18"},{"lineNumber":159,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":160,"author":{"gitId":"lowwilliam"},"content":"Add one exercise activity with the duration and the date","lastModifiedDate":"2021-03-18"},{"lineNumber":161,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":162,"author":{"gitId":"lowwilliam"},"content":"Format: `add  t/D f/FOOD_NAME  w/WEIGHT  [date/DD-MM-YYYY]`","lastModifiedDate":"2021-03-18"},{"lineNumber":163,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":164,"author":{"gitId":"lowwilliam"},"content":"* Add one record. The name of diet and weight must be specified. The name of the exercise should be a String.","lastModifiedDate":"2021-03-18"},{"lineNumber":165,"author":{"gitId":"lowwilliam"},"content":"* The tag value should be `D` in the upper case, which specifies that the current record is for exercise data.","lastModifiedDate":"2021-03-18"},{"lineNumber":166,"author":{"gitId":"lowwilliam"},"content":"* The default unit of weight is in grams. An `integer` is expected for the duration, other formats are not acceptable.","lastModifiedDate":"2021-03-18"},{"lineNumber":167,"author":{"gitId":"lowwilliam"},"content":"* The date of the exercise activity is optional. If not provided, the system date will be used.","lastModifiedDate":"2021-03-18"},{"lineNumber":168,"author":{"gitId":"baggiiiie"},"content":"* The date should be less than or equal to the current date.","lastModifiedDate":"2021-03-18"},{"lineNumber":169,"author":{"gitId":"baggiiiie"},"content":"* The date format should be `DD-MM-YYYY`, other formats are not acceptable.","lastModifiedDate":"2021-03-18"},{"lineNumber":170,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":171,"author":{"gitId":"lowwilliam"},"content":"Examples:","lastModifiedDate":"2021-03-18"},{"lineNumber":172,"author":{"gitId":"lowwilliam"},"content":"`add t/D a/bread d/400`","lastModifiedDate":"2021-03-18"},{"lineNumber":173,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":174,"author":{"gitId":"baggiiiie"},"content":"Output:","lastModifiedDate":"2021-03-18"},{"lineNumber":175,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":176,"author":{"gitId":"lowwilliam"},"content":"A new diet item record is added successfully!","lastModifiedDate":"2021-03-18"},{"lineNumber":177,"author":{"gitId":"lowwilliam"},"content":"Record summary: 40g bread on XX-XX-XXXX(Today).","lastModifiedDate":"2021-03-18"},{"lineNumber":178,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":179,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":180,"author":{"gitId":"lowwilliam"},"content":"### View Diet Data: `view`","lastModifiedDate":"2021-03-18"},{"lineNumber":181,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":182,"author":{"gitId":"lowwilliam"},"content":"View diet details on a specific date.","lastModifiedDate":"2021-03-18"},{"lineNumber":183,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":184,"author":{"gitId":"lowwilliam"},"content":"Format: `view  t/D  [a/FOOD_NAME]  [date/DD-MM-YYYY]`","lastModifiedDate":"2021-03-18"},{"lineNumber":185,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":186,"author":{"gitId":"lowwilliam"},"content":"* View existing records. The records will be sorted by date in descending order (The latest record will be the first record).","lastModifiedDate":"2021-03-18"},{"lineNumber":187,"author":{"gitId":"lowwilliam"},"content":"* The tag value should be `D` in the upper case, which specifies the output for records of exercise data.","lastModifiedDate":"2021-03-18"},{"lineNumber":188,"author":{"gitId":"lowwilliam"},"content":"* The name and date of the food item are optional fields used for filtering the records that will be displayed. If none, all existing records will be displayed.","lastModifiedDate":"2021-03-18"},{"lineNumber":189,"author":{"gitId":"lowwilliam"},"content":"* The name of the food may be specified to view records of the specified food. The name of the food should be a `String`.","lastModifiedDate":"2021-03-18"},{"lineNumber":190,"author":{"gitId":"lowwilliam"},"content":"* The date/ name of the food may be specified to view records on the specified date.","lastModifiedDate":"2021-03-18"},{"lineNumber":191,"author":{"gitId":"lowwilliam"},"content":"* The date should be less than or equal to the current date.","lastModifiedDate":"2021-03-18"},{"lineNumber":192,"author":{"gitId":"lowwilliam"},"content":"* The date format should be `DD-MM-YYYY`, other formats are not acceptable.","lastModifiedDate":"2021-03-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":194,"author":{"gitId":"lowwilliam"},"content":"Examples:","lastModifiedDate":"2021-03-18"},{"lineNumber":195,"author":{"gitId":"lowwilliam"},"content":"`view t/D a/bread view`","lastModifiedDate":"2021-03-18"},{"lineNumber":196,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":197,"author":{"gitId":"baggiiiie"},"content":"Output:","lastModifiedDate":"2021-03-18"},{"lineNumber":198,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":199,"author":{"gitId":"lowwilliam"},"content":"Displaying all bread intake records:","lastModifiedDate":"2021-03-18"},{"lineNumber":200,"author":{"gitId":"lowwilliam"},"content":"Index    Date         Food Item    Weight","lastModifiedDate":"2021-03-18"},{"lineNumber":201,"author":{"gitId":"lowwilliam"},"content":"1        15-01-2020   bread        160 g","lastModifiedDate":"2021-03-18"},{"lineNumber":202,"author":{"gitId":"lowwilliam"},"content":"2        05-01-2020   bread        120 g","lastModifiedDate":"2021-03-18"},{"lineNumber":203,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":204,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":205,"author":{"gitId":"lowwilliam"},"content":"Examples:","lastModifiedDate":"2021-03-18"},{"lineNumber":206,"author":{"gitId":"lowwilliam"},"content":"`view t/D date/05-02-2020`","lastModifiedDate":"2021-03-18"},{"lineNumber":207,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":208,"author":{"gitId":"baggiiiie"},"content":"Output:","lastModifiedDate":"2021-03-18"},{"lineNumber":209,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":210,"author":{"gitId":"lowwilliam"},"content":"Displaying all diet records on date 05-02-2020:","lastModifiedDate":"2021-03-18"},{"lineNumber":211,"author":{"gitId":"lowwilliam"},"content":"Index    Date         Food Item    Weight","lastModifiedDate":"2021-03-18"},{"lineNumber":212,"author":{"gitId":"lowwilliam"},"content":"1        05-01-2020   bread        160 g","lastModifiedDate":"2021-03-18"},{"lineNumber":213,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":214,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":215,"author":{"gitId":"lowwilliam"},"content":"Examples:","lastModifiedDate":"2021-03-18"},{"lineNumber":216,"author":{"gitId":"lowwilliam"},"content":"`view t/E`","lastModifiedDate":"2021-03-18"},{"lineNumber":217,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":218,"author":{"gitId":"baggiiiie"},"content":"Output:","lastModifiedDate":"2021-03-18"},{"lineNumber":219,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":220,"author":{"gitId":"lowwilliam"},"content":"Displaying all diet records:","lastModifiedDate":"2021-03-18"},{"lineNumber":221,"author":{"gitId":"lowwilliam"},"content":"Index    Date         Food Item    Weight","lastModifiedDate":"2021-03-18"},{"lineNumber":222,"author":{"gitId":"lowwilliam"},"content":"1        15-01-2020   bread        160 g","lastModifiedDate":"2021-03-18"},{"lineNumber":223,"author":{"gitId":"lowwilliam"},"content":"2        05-01-2020   bread        120 g","lastModifiedDate":"2021-03-18"},{"lineNumber":224,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":225,"author":{"gitId":"lowwilliam"},"content":"### Delete Diet Data: `delete`","lastModifiedDate":"2021-03-18"},{"lineNumber":226,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":227,"author":{"gitId":"lowwilliam"},"content":"Delete existing exercise record.","lastModifiedDate":"2021-03-18"},{"lineNumber":228,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":229,"author":{"gitId":"lowwilliam"},"content":"Format: `delete  t/D i/INDEX`","lastModifiedDate":"2021-03-18"},{"lineNumber":230,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":231,"author":{"gitId":"lowwilliam"},"content":"* Delete a single diet record using the Index of the record.","lastModifiedDate":"2021-03-18"},{"lineNumber":232,"author":{"gitId":"lowwilliam"},"content":"* The tag value should be `D` in the upper case, which specifies that the operation is for exercise data.","lastModifiedDate":"2021-03-18"},{"lineNumber":233,"author":{"gitId":"baggiiiie"},"content":"* The index of the record must be specified. The index must be an `integer` within the range of the total number of records, index out of range or other formats are not acceptable.","lastModifiedDate":"2021-03-18"},{"lineNumber":234,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":235,"author":{"gitId":"lowwilliam"},"content":"Examples:","lastModifiedDate":"2021-03-18"},{"lineNumber":236,"author":{"gitId":"lowwilliam"},"content":"`Delete t/E i/1`","lastModifiedDate":"2021-03-18"},{"lineNumber":237,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":238,"author":{"gitId":"baggiiiie"},"content":"Output:","lastModifiedDate":"2021-03-18"},{"lineNumber":239,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":240,"author":{"gitId":"lowwilliam"},"content":"You have successfully deleted the diet record of index 1!","lastModifiedDate":"2021-03-18"},{"lineNumber":241,"author":{"gitId":"lowwilliam"},"content":"Record summary: 15-01-2020   bread     60 g","lastModifiedDate":"2021-03-18"},{"lineNumber":242,"author":{"gitId":"lowwilliam"},"content":"Displaying current diet records:","lastModifiedDate":"2021-03-18"},{"lineNumber":243,"author":{"gitId":"lowwilliam"},"content":"Index    Date         Diet    Weight","lastModifiedDate":"2021-03-18"},{"lineNumber":244,"author":{"gitId":"lowwilliam"},"content":"1        05-01-2020   egg     60 g","lastModifiedDate":"2021-03-18"},{"lineNumber":245,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":246,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":247,"author":{"gitId":"Song0180"},"content":"### Set a goal for exercise for a given time period: `set`","lastModifiedDate":"2021-03-27"},{"lineNumber":248,"author":{"gitId":"Song0180"},"content":"Set one exercise goal with a target energy (in calories) to burn within a given time period.","lastModifiedDate":"2021-03-27"},{"lineNumber":249,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":250,"author":{"gitId":"Song0180"},"content":"Format: `set  t/E p/PERIOD_TYPE target/ENERGY`","lastModifiedDate":"2021-03-27"},{"lineNumber":251,"author":{"gitId":"Song0180"},"content":" ","lastModifiedDate":"2021-03-27"},{"lineNumber":252,"author":{"gitId":"Song0180"},"content":"* The tag value should be `E` in the upper case, which specifies that the current record is for **exercise data**.","lastModifiedDate":"2021-03-27"},{"lineNumber":253,"author":{"gitId":"Song0180"},"content":"* The period type can be `D`, and `W`corresponding to **daily and weekly**. ","lastModifiedDate":"2021-03-27"},{"lineNumber":254,"author":{"gitId":"Song0180"},"content":"* The default unit of energy is in **kcal**. A **float number** is expected for the duration, other formats are **not acceptable**.","lastModifiedDate":"2021-03-27"},{"lineNumber":255,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":256,"author":{"gitId":"Song0180"},"content":"Example of usage:  ","lastModifiedDate":"2021-03-27"},{"lineNumber":257,"author":{"gitId":"Song0180"},"content":"`set t/E p/D target/0.5`","lastModifiedDate":"2021-03-27"},{"lineNumber":258,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":259,"author":{"gitId":"Song0180"},"content":"Output:","lastModifiedDate":"2021-03-27"},{"lineNumber":260,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-27"},{"lineNumber":261,"author":{"gitId":"Song0180"},"content":"A new exercise goal is set successfully!","lastModifiedDate":"2021-03-27"},{"lineNumber":262,"author":{"gitId":"Song0180"},"content":"Date Set: 27-03-2021","lastModifiedDate":"2021-03-27"},{"lineNumber":263,"author":{"gitId":"Song0180"},"content":"Goal Type: Daily exercise","lastModifiedDate":"2021-03-27"},{"lineNumber":264,"author":{"gitId":"Song0180"},"content":"Target: 0.5kcal","lastModifiedDate":"2021-03-27"},{"lineNumber":265,"author":{"gitId":"Song0180"},"content":"Progress: 0kcal","lastModifiedDate":"2021-03-27"},{"lineNumber":266,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-27"},{"lineNumber":267,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":268,"author":{"gitId":"Song0180"},"content":"Example of usage:  ","lastModifiedDate":"2021-03-27"},{"lineNumber":269,"author":{"gitId":"Song0180"},"content":"`set t/E p/W target/10`","lastModifiedDate":"2021-03-27"},{"lineNumber":270,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":271,"author":{"gitId":"Song0180"},"content":"Output:","lastModifiedDate":"2021-03-27"},{"lineNumber":272,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-27"},{"lineNumber":273,"author":{"gitId":"Song0180"},"content":"A new exercise goal is set successfully!","lastModifiedDate":"2021-03-27"},{"lineNumber":274,"author":{"gitId":"Song0180"},"content":"Date Set: 27-03-2021","lastModifiedDate":"2021-03-27"},{"lineNumber":275,"author":{"gitId":"Song0180"},"content":"Goal Type: Weekly exercise.","lastModifiedDate":"2021-03-27"},{"lineNumber":276,"author":{"gitId":"Song0180"},"content":"Target: 10kcal.","lastModifiedDate":"2021-03-27"},{"lineNumber":277,"author":{"gitId":"Song0180"},"content":"Progress: 0kcal.","lastModifiedDate":"2021-03-27"},{"lineNumber":278,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-27"},{"lineNumber":279,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":280,"author":{"gitId":"Song0180"},"content":"### Check the progress of goals: `check`","lastModifiedDate":"2021-03-27"},{"lineNumber":281,"author":{"gitId":"Song0180"},"content":"Check the current progress of goals set by the user.","lastModifiedDate":"2021-03-27"},{"lineNumber":282,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":283,"author":{"gitId":"Song0180"},"content":"Format: `check  t/TAG [p/PERIOD_TYPE]`","lastModifiedDate":"2021-03-27"},{"lineNumber":284,"author":{"gitId":"Song0180"},"content":" ","lastModifiedDate":"2021-03-27"},{"lineNumber":285,"author":{"gitId":"Song0180"},"content":"* The tag value should only be `E`, `S`, `D`, `W`. It specifies the kind of goal (exercise, sleep, diet and body weight) to check.","lastModifiedDate":"2021-03-27"},{"lineNumber":286,"author":{"gitId":"Song0180"},"content":"* The period type can be `D`, and `W`corresponding to **daily and weekly**. It is optional.","lastModifiedDate":"2021-03-27"},{"lineNumber":287,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":288,"author":{"gitId":"Song0180"},"content":"Example of usage:  ","lastModifiedDate":"2021-03-27"},{"lineNumber":289,"author":{"gitId":"Song0180"},"content":"`check t/E`","lastModifiedDate":"2021-03-27"},{"lineNumber":290,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":291,"author":{"gitId":"Song0180"},"content":"Output:","lastModifiedDate":"2021-03-27"},{"lineNumber":292,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-27"},{"lineNumber":293,"author":{"gitId":"Song0180"},"content":"Checking the progress of exercise goals:","lastModifiedDate":"2021-03-27"},{"lineNumber":294,"author":{"gitId":"Song0180"},"content":"Index    Date Set     Goal Type    Target       Progress","lastModifiedDate":"2021-03-27"},{"lineNumber":295,"author":{"gitId":"Song0180"},"content":"1        15-01-2020   Daily        0.5kcal      Finished","lastModifiedDate":"2021-03-27"},{"lineNumber":296,"author":{"gitId":"Song0180"},"content":"2        05-01-2020   Weekly       10kcal       8.5kcal","lastModifiedDate":"2021-03-27"},{"lineNumber":297,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":298,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-27"},{"lineNumber":299,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":300,"author":{"gitId":"Song0180"},"content":"Example of usage:  ","lastModifiedDate":"2021-03-27"},{"lineNumber":301,"author":{"gitId":"Song0180"},"content":"`check t/E p/W`","lastModifiedDate":"2021-03-27"},{"lineNumber":302,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":303,"author":{"gitId":"Song0180"},"content":"Output:","lastModifiedDate":"2021-03-27"},{"lineNumber":304,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-27"},{"lineNumber":305,"author":{"gitId":"Song0180"},"content":"Checking the progress of exercise goals:","lastModifiedDate":"2021-03-27"},{"lineNumber":306,"author":{"gitId":"Song0180"},"content":"Index    Date Set     Goal Type    Target       Progress","lastModifiedDate":"2021-03-27"},{"lineNumber":307,"author":{"gitId":"Song0180"},"content":"1        05-01-2020   Weekly       10kcal       8.5kcal","lastModifiedDate":"2021-03-27"},{"lineNumber":308,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-27"},{"lineNumber":309,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":310,"author":{"gitId":"Song0180"},"content":"### Cancel a goal: `cancel`","lastModifiedDate":"2021-03-27"},{"lineNumber":311,"author":{"gitId":"Song0180"},"content":"Cancel a goal set by the user.","lastModifiedDate":"2021-03-27"},{"lineNumber":312,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":313,"author":{"gitId":"Song0180"},"content":"Format: `cancel  t/TAG p/PERIOD_TYPE i/INDEX`","lastModifiedDate":"2021-03-27"},{"lineNumber":314,"author":{"gitId":"Song0180"},"content":" ","lastModifiedDate":"2021-03-27"},{"lineNumber":315,"author":{"gitId":"Song0180"},"content":"* The tag value should only be `E`, `S`, `D`, `W`. It specifies the kind of goal (exercise, sleep, diet and body weight) to check.","lastModifiedDate":"2021-03-27"},{"lineNumber":316,"author":{"gitId":"Song0180"},"content":"* * The period type can be `D`, and `W`corresponding to **daily and weekly**. It **must** be specified.","lastModifiedDate":"2021-03-27"},{"lineNumber":317,"author":{"gitId":"Song0180"},"content":"* The index of the record **must** be specified. ","lastModifiedDate":"2021-03-27"},{"lineNumber":318,"author":{"gitId":"Song0180"},"content":"* The index must be an `integer` within the range of the total number of records, index out of range or other formats are not acceptable.","lastModifiedDate":"2021-03-27"},{"lineNumber":319,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":320,"author":{"gitId":"Song0180"},"content":"Example of usage:  ","lastModifiedDate":"2021-03-27"},{"lineNumber":321,"author":{"gitId":"Song0180"},"content":"`cancel t/E p/D i/1`","lastModifiedDate":"2021-03-27"},{"lineNumber":322,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":323,"author":{"gitId":"Song0180"},"content":"Output:","lastModifiedDate":"2021-03-27"},{"lineNumber":324,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-27"},{"lineNumber":325,"author":{"gitId":"Song0180"},"content":"You have successfully canceled a goal for exercise!","lastModifiedDate":"2021-03-27"},{"lineNumber":326,"author":{"gitId":"Song0180"},"content":"Goal summary: Daily exercise with target energy 0.5kcal.","lastModifiedDate":"2021-03-27"},{"lineNumber":327,"author":{"gitId":"Song0180"},"content":"Displaying current exercise goals:","lastModifiedDate":"2021-03-27"},{"lineNumber":328,"author":{"gitId":"Song0180"},"content":"Index    Date Set     Goal Type    Target       Progress","lastModifiedDate":"2021-03-27"},{"lineNumber":329,"author":{"gitId":"Song0180"},"content":"1        05-01-2020   Weekly       10kcal       8.5kcal","lastModifiedDate":"2021-03-27"},{"lineNumber":330,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-27"},{"lineNumber":331,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":332,"author":{"gitId":"Song0180"},"content":"Example of usage:  ","lastModifiedDate":"2021-03-27"},{"lineNumber":333,"author":{"gitId":"Song0180"},"content":"`cancel t/E p/W i/1`","lastModifiedDate":"2021-03-27"},{"lineNumber":334,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":335,"author":{"gitId":"Song0180"},"content":"Output:","lastModifiedDate":"2021-03-27"},{"lineNumber":336,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-27"},{"lineNumber":337,"author":{"gitId":"Song0180"},"content":"You have successfully canceled a goal for exercise!","lastModifiedDate":"2021-03-27"},{"lineNumber":338,"author":{"gitId":"Song0180"},"content":"Goal summary: Weekly exercise with target energy 10kcal.","lastModifiedDate":"2021-03-27"},{"lineNumber":339,"author":{"gitId":"Song0180"},"content":"Displaying current exercise goals:","lastModifiedDate":"2021-03-27"},{"lineNumber":340,"author":{"gitId":"Song0180"},"content":"No goals are found. Try set a goal with command \u0027set\u0027.","lastModifiedDate":"2021-03-27"},{"lineNumber":341,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-27"},{"lineNumber":342,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":343,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":345,"author":{"gitId":"lowwilliam"},"content":"**Q**: {What is the format of date?}","lastModifiedDate":"2021-03-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":347,"author":{"gitId":"lowwilliam"},"content":"**A**: {The date format should be DD-MM-YYYY}","lastModifiedDate":"2021-03-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":349,"author":{"gitId":"Song0180"},"content":"## Command summary","lastModifiedDate":"2021-03-12"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":351,"author":{"gitId":"lowwilliam"},"content":"Action | Format | Examples","lastModifiedDate":"2021-03-18"},{"lineNumber":352,"author":{"gitId":"lowwilliam"},"content":"--- | --- | --- |","lastModifiedDate":"2021-03-18"},{"lineNumber":353,"author":{"gitId":"Song0180"},"content":"Help | `help`","lastModifiedDate":"2021-03-12"},{"lineNumber":354,"author":{"gitId":"lowwilliam"},"content":"Input Exercise Data: `add` | `add  t/E a/ACTIVITY_NAME  d/DURATION  [date/DD-MM-YYYY]` | `add t/E a/running d/40`","lastModifiedDate":"2021-03-18"},{"lineNumber":355,"author":{"gitId":"lowwilliam"},"content":"View Exercise Data: `view` | `view  t/E  [a/ACTIVITY_NAME]  [date/DD-MM-YYYY]` | `view t/E a/football`","lastModifiedDate":"2021-03-18"},{"lineNumber":356,"author":{"gitId":"lowwilliam"},"content":"Delete Exercise Data: `delete` | `delete  t/E i/INDEX` | `Delete t/E i/1`","lastModifiedDate":"2021-03-18"},{"lineNumber":357,"author":{"gitId":"lowwilliam"},"content":"Input Diet Data: `add` | `add  t/D f/FOOD_NAME  w/WEIGHT  [date/DD-MM-YYYY]` | `add t/D a/bread d/400`","lastModifiedDate":"2021-03-18"},{"lineNumber":358,"author":{"gitId":"lowwilliam"},"content":"View Diet Data: `view` | `view  t/D  [a/FOOD_NAME]  [date/DD-MM-YYYY]` | `view t/D a/bread`","lastModifiedDate":"2021-03-18"},{"lineNumber":359,"author":{"gitId":"lowwilliam"},"content":"Delete Diet Data: `delete` | `delete  t/D i/INDEX` | `Delete t/E i/1`","lastModifiedDate":"2021-03-18"},{"lineNumber":360,"author":{"gitId":"lowwilliam"},"content":"Input Sleep Data: `add` | `add  t/S  d/DURATION  [date/DD-MM-YYYY]` | `add t/S d/7`","lastModifiedDate":"2021-03-18"},{"lineNumber":361,"author":{"gitId":"lowwilliam"},"content":"View Sleep Data: `view` | `view  t/S  [date/DD-MM-YYYY]` | `view t/S`","lastModifiedDate":"2021-03-18"},{"lineNumber":362,"author":{"gitId":"lowwilliam"},"content":"Delete Sleep Data: `delete` | `delete  t/S i/INDEX` | `Delete t/S i/1`","lastModifiedDate":"2021-03-18"},{"lineNumber":363,"author":{"gitId":"lowwilliam"},"content":"Input bodyweight Data: `add` | `add  t/W w/WEIGHT [date/DD-MM-YYYY]` | `add t/W w/68.5 date/10-01-2021`","lastModifiedDate":"2021-03-18"},{"lineNumber":364,"author":{"gitId":"lowwilliam"},"content":"View bodyweight Data: `view` | `view  t/W  [date/DD-MM-YYYY]` | `view t/W date/05-01-2020`","lastModifiedDate":"2021-03-18"},{"lineNumber":365,"author":{"gitId":"lowwilliam"},"content":"Delete bodyweight Data: `delete` | `delete  t/W i/INDEX` | `Delete t/W i/1`","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"baggiiiie":68,"lowwilliam":104,"-":29,"Song0180":164}},{"path":"src/main/java/seedu/duke/Healthier.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.account.FitCenter;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.account.User;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"import seedu.duke.command.CommandResult;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"import seedu.duke.command.ExitCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.commandparser.CommandParser;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"import seedu.duke.ui.UI;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"public class Healthier {","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"    private UI ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"    private final User currentUser \u003d new User();","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"    private final FitCenter currentFitCenter \u003d currentUser.getFitCenter();","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"    private void start() {","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"        ui \u003d new UI();","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"        ui.printGreetings();","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"    private void loopCommand() {","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"        CommandParser commandParser \u003d new CommandParser();","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"        Command command;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"        do {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":"            String userInput \u003d ui.getUserInput();","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"            command \u003d commandParser.parseCommand(userInput);","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"            CommandResult result \u003d command.execute(currentFitCenter);","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"            ui.printCommandResult(result);","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"PingruiLi"},"content":"            commandParser.clearParserParams();","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"        } while (!ExitCommand.isExitCommand(command));","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"    private void exit() {","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"PingruiLi"},"content":"        ui.printExitMessage();","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"        System.exit(0);","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"PingruiLi"},"content":"    public void run() {","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"PingruiLi"},"content":"        start();","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"PingruiLi"},"content":"        loopCommand();","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"        exit();","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"PingruiLi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"        new Healthier().run();","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"PingruiLi":20,"-":5,"Song0180":22}},{"path":"src/main/java/seedu/duke/account/FitCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.account;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.command.CommandRecordType;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"import seedu.duke.record.Record;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"import seedu.duke.record.RecordType;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":" * Manages the fitness of a user through list of records.","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"public class FitCenter {","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"    private final RecordList sleepRecordList \u003d new RecordList(RecordType.SLEEP);","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"    private final RecordList exerciseRecordList \u003d new RecordList(RecordType.EXERCISE);","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"    private final RecordList dietRecordList \u003d new RecordList(RecordType.DIET);","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"    private final RecordList bodyRecordList \u003d new RecordList(RecordType.BODYWEIGHT);","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"    private RecordList getRecordListByType(CommandRecordType type) {","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"        switch (type) {","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"        case SLEEP:","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"            return sleepRecordList;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"        case EXERCISE:","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"            return exerciseRecordList;","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"        case DIET:","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"            return dietRecordList;","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"        case BODY_WEIGHT:","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"            return bodyRecordList;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"        default:","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"            return null;","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"     * Adds a given record to a list that stores the same type of records.","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"     * @param type   the type of the record.","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"     * @param record the record to add.","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"    public void addRecordToList(CommandRecordType type, Record record) {","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"        RecordList list \u003d getRecordListByType(type);","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"        if (list !\u003d null) {","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":"            list.addRecord(record);","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"    ","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"    public String removeRecordFromList(CommandRecordType type, int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"        RecordList list \u003d getRecordListByType(type);","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":"        if (list !\u003d null) {","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"PingruiLi"},"content":"            return list.removeRecord(index);","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"PingruiLi"},"content":"        } else {","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"PingruiLi"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"Song0180"},"content":"     * Prints the list of record of a selected type.","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"Song0180"},"content":"     * @param type the type of the record that the list stores.","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"Song0180"},"content":"    public String getRecordListString(CommandRecordType type) {","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"Song0180"},"content":"        RecordList list \u003d getRecordListByType(type);","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"Song0180"},"content":"        if (list !\u003d null) {","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"Song0180"},"content":"            return list.getRecordsToPrint();","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"Song0180"},"content":"        return Messages.MESSAGE_CANT_VIEW_LIST;","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"Song0180"},"content":"     * Prints the list of record of a selected type on a specific date.","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"Song0180"},"content":"     * @param type the type of the record that the list stores.","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"Song0180"},"content":"     * @param date the date of records.","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"Song0180"},"content":"    public String getRecordListString(CommandRecordType type, LocalDate date) {","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"Song0180"},"content":"        RecordList list \u003d getRecordListByType(type);","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"Song0180"},"content":"        if (list !\u003d null) {","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"Song0180"},"content":"            return list.getRecordsToPrint(date);","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"Song0180"},"content":"        return Messages.MESSAGE_CANT_VIEW_LIST;","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":85,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":86,"author":{"gitId":"Song0180"},"content":"    public String getRecordListString(CommandRecordType type, String optionalParam) {","lastModifiedDate":"2021-03-18"},{"lineNumber":87,"author":{"gitId":"Song0180"},"content":"        RecordList list \u003d getRecordListByType(type);","lastModifiedDate":"2021-03-18"},{"lineNumber":88,"author":{"gitId":"Song0180"},"content":"        if (list !\u003d null) {","lastModifiedDate":"2021-03-18"},{"lineNumber":89,"author":{"gitId":"Song0180"},"content":"            return list.getRecordsToPrint(optionalParam);","lastModifiedDate":"2021-03-18"},{"lineNumber":90,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":91,"author":{"gitId":"Song0180"},"content":"        return Messages.MESSAGE_CANT_VIEW_LIST;","lastModifiedDate":"2021-03-18"},{"lineNumber":92,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":93,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":94,"author":{"gitId":"Song0180"},"content":"    public String getRecordListString(CommandRecordType type, LocalDate date, String optionalParam) {","lastModifiedDate":"2021-03-18"},{"lineNumber":95,"author":{"gitId":"Song0180"},"content":"        RecordList list \u003d getRecordListByType(type);","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"Song0180"},"content":"        if (list !\u003d null) {","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"Song0180"},"content":"            return list.getRecordsToPrint(date, optionalParam);","lastModifiedDate":"2021-03-18"},{"lineNumber":98,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"Song0180"},"content":"        return Messages.MESSAGE_CANT_VIEW_LIST;","lastModifiedDate":"2021-03-18"},{"lineNumber":100,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"PingruiLi":3,"Song0180":98}},{"path":"src/main/java/seedu/duke/account/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.account;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":" * Represents different genders.","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"public enum Gender {","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"    MALE, FEMALE, UNKNOWN, OTHER","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"Song0180":8}},{"path":"src/main/java/seedu/duke/account/User.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.account;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":" * Represents a user of this app.","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"public class User {","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"    private static final int DEFAULT_AGE \u003d 20;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"    private static final double DEFAULT_WEIGHT \u003d 50;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"    private String name;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"    private Gender gender;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"    private int age;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"    private double bodyWeight;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"    private FitCenter fitCenter \u003d new FitCenter();","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"     * Initializes a default user object with default attributes.","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"    public User() {","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"        this.name \u003d \"Default User\";","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"        this.gender \u003d Gender.UNKNOWN;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"        this.age \u003d DEFAULT_AGE;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"        this.bodyWeight \u003d DEFAULT_WEIGHT;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"     * Initializes a user object. Assumes that all params are not null.","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"     * @param name       the name of the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"     * @param gender     the gender of the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"     * @param age        the age of the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"     * @param bodyWeight the body weight of the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"    public User(String name, Gender gender, int age, double bodyWeight) {","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"        this.age \u003d age;","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"        this.bodyWeight \u003d bodyWeight;","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"     * Gets the name of the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"     * @return the name of the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":"    public String getName() {","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"        return name;","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":"     * Gets the gender of the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"Song0180"},"content":"     * @return the gender of the user in Gender.","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"Song0180"},"content":"    public Gender getGender() {","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"        return gender;","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"Song0180"},"content":"     * Gets the age of the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"Song0180"},"content":"     * @return the age of the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"Song0180"},"content":"    public int getAge() {","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"Song0180"},"content":"        return age;","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"Song0180"},"content":"     * Gets the body weight of the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"Song0180"},"content":"     * @return the body weight of the user in KG.","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"Song0180"},"content":"    public double getBodyWeight() {","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"Song0180"},"content":"        return bodyWeight;","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"Song0180"},"content":"     * Sets the body weight of the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"Song0180"},"content":"     * @param bodyWeight the new body weight in KG.","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"Song0180"},"content":"    public void setBodyWeight(double bodyWeight) {","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"Song0180"},"content":"        this.bodyWeight \u003d bodyWeight;","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"Song0180"},"content":"     * Gets the fit center of the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"Song0180"},"content":"     * @return the fit center of the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"Song0180"},"content":"    public FitCenter getFitCenter() {","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"Song0180"},"content":"        return fitCenter;","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"Song0180"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"Song0180"},"content":"    public String toString() {","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"Song0180"},"content":"        return \"User Name: \" + name + \"\\nGender: \" + gender + \"\\nAge: \" + age + \"\\nBody Weight: \" + bodyWeight;","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"Song0180":100}},{"path":"src/main/java/seedu/duke/command/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.account.FitCenter;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.exception.TypeException;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"import seedu.duke.record.Record;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"import seedu.duke.record.BodyWeight;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"import seedu.duke.record.Diet;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"import seedu.duke.record.Exercise;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"import seedu.duke.record.Sleep;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"import java.time.ZoneId;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"import java.util.Date;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"    private static final String FEEDBACK_FORMAT \u003d \"A new %s record is added successfully!\\nRecord summary:\\n%s\";","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"    private final Record record;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"    private final CommandRecordType recordType;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"    public AddCommand(CommandRecordType recordType, HashMap\u003cString, String\u003e params)","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":"            throws ParseException, TypeException, NumberFormatException {","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"        SimpleDateFormat spf \u003d new SimpleDateFormat(\"dd-MM-yyyy\");","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"PingruiLi"},"content":"        this.recordType \u003d recordType;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"PingruiLi"},"content":"        spf.setLenient(false);","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"PingruiLi"},"content":"        String dateString \u003d params.get(\"date\");","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"        LocalDate recordDate;","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"PingruiLi"},"content":"        if (dateString !\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"PingruiLi"},"content":"            Date date \u003d spf.parse(dateString);","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"            recordDate \u003d date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"PingruiLi"},"content":"        } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"            recordDate \u003d LocalDate.now();","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"PingruiLi"},"content":"        switch (recordType) {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"PingruiLi"},"content":"        case EXERCISE:","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"            record \u003d new Exercise(params.get(\"activity\"), Integer.parseInt(params.get(\"duration\")), recordDate);","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"PingruiLi"},"content":"            break;","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"PingruiLi"},"content":"        case DIET:","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"            record \u003d new Diet(params.get(\"food\"), params.get(\"weight\"), recordDate);","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"PingruiLi"},"content":"            break;","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"PingruiLi"},"content":"        case SLEEP:","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"            record \u003d new Sleep(Integer.parseInt(params.get(\"duration\")), recordDate);","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"PingruiLi"},"content":"            break;","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"PingruiLi"},"content":"        case BODY_WEIGHT:","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"            record \u003d new BodyWeight(Double.parseDouble(params.get(\"weight\")), recordDate);","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"PingruiLi"},"content":"            break;","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"PingruiLi"},"content":"        default:","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"            record \u003d null;","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"    public CommandResult execute(FitCenter fitCenter) {","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"Song0180"},"content":"        if (record !\u003d null) {","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"            fitCenter.addRecordToList(recordType, record);","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"PingruiLi"},"content":"            feedback \u003d String.format(FEEDBACK_FORMAT, record.getType(), record.getRecordSummary());","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"Song0180"},"content":"        } else {","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"Song0180"},"content":"            feedback \u003d Messages.MESSAGE_CANT_ADD_RECORD;","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"PingruiLi"},"content":"        return new CommandResult(feedback);","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"PingruiLi"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"PingruiLi":39,"Song0180":25}},{"path":"src/main/java/seedu/duke/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.account.FitCenter;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"public abstract class Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"    protected String feedback;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"    public abstract CommandResult execute(FitCenter fitCenter);","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"PingruiLi":8,"Song0180":1}},{"path":"src/main/java/seedu/duke/command/CommandRecordType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"import java.util.Locale;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"public enum CommandRecordType {","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"    EXERCISE(\"E\"), DIET(\"D\"), SLEEP(\"S\"), BODY_WEIGHT(\"W\"), INVALID(\"I\");","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"    private String recordType;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"    CommandRecordType(String type) {","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"        recordType \u003d type;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"    /*public static boolean isValidType(String type) {","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"        boolean isValid \u003d false;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"        for (int i \u003d 0; i \u003c CommandRecordType.values().length; i++) {","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"            if (type.toUpperCase(Locale.ROOT).equals(CommandRecordType.values()[i].recordType)","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"            \u0026\u0026 !CommandRecordType.values()[i].recordType.equals(\"I\")) {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"                isValid \u003d true;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"                break;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"        return isValid;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"    public static CommandRecordType getType(String typeString) {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":"        for (int i \u003d 0; i \u003c CommandRecordType.values().length; i++) {","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"PingruiLi"},"content":"            if (typeString.toUpperCase(Locale.ROOT).equals(CommandRecordType.values()[i].recordType)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"PingruiLi"},"content":"                return CommandRecordType.values()[i];","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"PingruiLi"},"content":"        return INVALID;","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"PingruiLi"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"PingruiLi":31,"Song0180":1}},{"path":"src/main/java/seedu/duke/command/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"public class CommandResult {","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"    private String feedback;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"    public CommandResult(String feedback) {","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"        this.feedback \u003d feedback;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"    public String getFeedback() {","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"        return feedback;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"PingruiLi":13}},{"path":"src/main/java/seedu/duke/command/CommandType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"public enum CommandType {","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"    ADD, VIEW, DELETE;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"PingruiLi":5}},{"path":"src/main/java/seedu/duke/command/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.account.FitCenter;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"import java.util.Locale;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"    private static final String FEEDBACK_FORMAT \u003d \"You have successfully deleted the %s record of \"","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"            + \"index %s!\\nRecord summary: %s\\nDisplaying current exercise records:\";","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"    private final CommandRecordType recordType;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"    private final int indexToDelete;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"    public DeleteCommand(CommandRecordType recordType, HashMap\u003cString, String\u003e params) throws NumberFormatException {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"        this.recordType \u003d recordType;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"        indexToDelete \u003d Integer.parseInt(params.get(\"index\")) - 1;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"    public CommandResult execute(FitCenter fitCenter) {","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"        try {","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"            String recordSummary \u003d fitCenter.removeRecordFromList(recordType, indexToDelete);","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":"            feedback \u003d String.format(FEEDBACK_FORMAT, recordType, (indexToDelete + 1), recordSummary);","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"PingruiLi"},"content":"            feedback +\u003d \"\\n\" + fitCenter.getRecordListString(recordType);","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"PingruiLi"},"content":"            return new CommandResult(feedback);","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"PingruiLi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"PingruiLi"},"content":"            return new CommandResult(\"The index you entered is out of bound.\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"                    + \"Here are the records of type \" + recordType.toString().toLowerCase(Locale.ROOT) + \":\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"PingruiLi"},"content":"                    + fitCenter.getRecordListString(recordType));","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"PingruiLi"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"PingruiLi":27,"Song0180":7}},{"path":"src/main/java/seedu/duke/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.account.FitCenter;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":" * Terminates the application from running.","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"    public CommandResult execute(FitCenter fitCenter) {","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"        return new CommandResult(Messages.MESSAGE_EXIT);","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"    public static boolean isExitCommand(Command command) {","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"        return command instanceof ExitCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Song0180":18}},{"path":"src/main/java/seedu/duke/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.account.FitCenter;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"    public HelpCommand() {","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"        feedback \u003d Messages.MESSAGE_HELP_GREETINGS + \"\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"                + Messages.MESSAGE_SYNTAX_ADD_COMMAND + \"\\n\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"                + Messages.MESSAGE_SYNTAX_VIEW_COMMAND + \"\\n\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"                + Messages.MESSAGE_SYNTAX_DELETE_COMMAND;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"    public CommandResult execute(FitCenter fitCenter) {","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"        return new CommandResult(feedback);","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"Song0180":18}},{"path":"src/main/java/seedu/duke/command/InvalidCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.account.FitCenter;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"    public InvalidCommand(String errorMessage) {","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"        feedback \u003d errorMessage;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"    public InvalidCommand(CommandType commandType) {","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"        switch (commandType) {","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"        case ADD:","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"            feedback \u003d Messages.MESSAGE_INVALID_COMMAND_SYNTAX + Messages.MESSAGE_SYNTAX_ADD_COMMAND;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"            break;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"        case VIEW:","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"            feedback \u003d Messages.MESSAGE_INVALID_COMMAND_SYNTAX + Messages.MESSAGE_SYNTAX_VIEW_COMMAND;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"            break;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"        case DELETE:","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"            feedback \u003d Messages.MESSAGE_INVALID_COMMAND_SYNTAX + Messages.MESSAGE_SYNTAX_DELETE_COMMAND;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"            break;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"        default:","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"            feedback \u003d Messages.MESSAGE_SYSTEM_ERROR;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"PingruiLi"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"    public CommandResult execute(FitCenter fitCenter) {","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"PingruiLi"},"content":"        return new CommandResult(feedback);","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"PingruiLi"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"PingruiLi":24,"Song0180":8}},{"path":"src/main/java/seedu/duke/command/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.account.FitCenter;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"import java.time.ZoneId;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"import java.util.Date;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"    private final CommandRecordType recordType;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"    private HashMap\u003cString, String\u003e specifiedParams \u003d null;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"    private LocalDate recordDate;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"    public ViewCommand(CommandRecordType type) {","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"        recordType \u003d type;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"    public ViewCommand(CommandRecordType type, HashMap\u003cString, String\u003e params) throws ParseException {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"        recordType \u003d type;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"        specifiedParams \u003d params;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"        String dateString \u003d params.get(\"date\");","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"        if (dateString !\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"            SimpleDateFormat spf \u003d new SimpleDateFormat(\"dd-MM-yyyy\");","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"            spf.setLenient(false);","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"            Date date \u003d spf.parse(dateString);","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"            recordDate \u003d date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"    public CommandResult execute(FitCenter fitCenter) {","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"        switch (recordType) {","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"        case SLEEP:","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"            feedback \u003d getRecordsWithoutOptionalParam(fitCenter);","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"            feedback \u003d getFeedbackWithHeader(Messages.MESSAGE_VIEW_HEADER_SLEEP);","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"            break;","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"        case BODY_WEIGHT:","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"            feedback \u003d getRecordsWithoutOptionalParam(fitCenter);","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"            feedback \u003d getFeedbackWithHeader(Messages.MESSAGE_VIEW_HEADER_WEIGHT);","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"            break;","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"        case EXERCISE:","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":"            if (specifiedParams !\u003d null) {","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":"                feedback \u003d getRecordsWithOptionalParam(fitCenter, specifiedParams.get(\"activity\"));","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"            } else {","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"                feedback \u003d getRecordsWithoutOptionalParam(fitCenter);","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"            feedback \u003d getFeedbackWithHeader(Messages.MESSAGE_VIEW_HEADER_EXERCISE);","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":"            break;","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"        case DIET:","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"Song0180"},"content":"            if (specifiedParams !\u003d null) {","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"                feedback \u003d getRecordsWithOptionalParam(fitCenter, specifiedParams.get(\"food\"));","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"Song0180"},"content":"            } else {","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"                feedback \u003d getRecordsWithoutOptionalParam(fitCenter);","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"Song0180"},"content":"            feedback \u003d getFeedbackWithHeader(Messages.MESSAGE_VIEW_HEADER_DIET);","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"Song0180"},"content":"            break;","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"Song0180"},"content":"        default:","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"Song0180"},"content":"            feedback \u003d Messages.MESSAGE_CANT_VIEW_LIST;","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"Song0180"},"content":"        addTitleToFeedback();","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"PingruiLi"},"content":"        return new CommandResult(feedback);","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"Song0180"},"content":"    private String getRecordsWithOptionalParam(FitCenter fitCenter, String optionalParam) {","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"Song0180"},"content":"        if (specifiedParams.size() \u003d\u003d 2) {","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"Song0180"},"content":"            return fitCenter.getRecordListString(recordType, recordDate, optionalParam);","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"Song0180"},"content":"        } else if (specifiedParams.size() \u003d\u003d 1 \u0026\u0026 specifiedParams.containsKey(\"date\")) {","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"Song0180"},"content":"            return fitCenter.getRecordListString(recordType, recordDate);","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"Song0180"},"content":"        } else {","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"Song0180"},"content":"            return fitCenter.getRecordListString(recordType, optionalParam);","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"Song0180"},"content":"    private String getRecordsWithoutOptionalParam(FitCenter fitCenter) {","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"Song0180"},"content":"        if (specifiedParams !\u003d null) {","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"Song0180"},"content":"            return fitCenter.getRecordListString(recordType, recordDate);","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"Song0180"},"content":"        } else {","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"Song0180"},"content":"            return fitCenter.getRecordListString(recordType);","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":85,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":86,"author":{"gitId":"Song0180"},"content":"    private void addTitleToFeedback() {","lastModifiedDate":"2021-03-18"},{"lineNumber":87,"author":{"gitId":"Song0180"},"content":"        String recordString \u003d recordType.toString().toLowerCase().replace(\"_\", \" \");","lastModifiedDate":"2021-03-18"},{"lineNumber":88,"author":{"gitId":"Song0180"},"content":"        String feedbackHeading \u003d String.format(Messages.MESSAGE_VIEW_TITLE, recordString);","lastModifiedDate":"2021-03-18"},{"lineNumber":89,"author":{"gitId":"Song0180"},"content":"        feedback \u003d feedbackHeading + feedback;","lastModifiedDate":"2021-03-18"},{"lineNumber":90,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":91,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":92,"author":{"gitId":"Song0180"},"content":"    private String getFeedbackWithHeader(String header) {","lastModifiedDate":"2021-03-18"},{"lineNumber":93,"author":{"gitId":"Song0180"},"content":"        return feedback.contains(\"Sorry\") ? feedback : header + feedback;","lastModifiedDate":"2021-03-18"},{"lineNumber":94,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":95,"author":{"gitId":"PingruiLi"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"PingruiLi":15,"Song0180":80}},{"path":"src/main/java/seedu/duke/commandparser/CommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.commandparser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.command.CommandRecordType;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"import seedu.duke.command.AddCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"import seedu.duke.command.ViewCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"import seedu.duke.command.DeleteCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"import seedu.duke.command.HelpCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"import seedu.duke.command.InvalidCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"import seedu.duke.command.ExitCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.exception.TypeException;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandRecordType.EXERCISE;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandRecordType.DIET;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandRecordType.BODY_WEIGHT;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandRecordType.SLEEP;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandRecordType.INVALID;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandType.DELETE;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandType.ADD;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandType.VIEW;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.common.Messages.MESSAGE_INDEX_NUMBER_FORMAT_EXCEPTION;","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"PingruiLi"},"content":"public class CommandParser {","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"    private final HashMap\u003cString, String\u003e params;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"    public CommandParser() {","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"PingruiLi"},"content":"        params \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"    public Command parseCommand(String userInput) {","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"        String[] inputParts \u003d getInputParts(userInput);","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"        String commandWord \u003d getCommandWord(inputParts);","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"PingruiLi"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"        case \"help\":","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"PingruiLi"},"content":"        case \"add\":","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"            return prepareAdd(inputParts);","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"PingruiLi"},"content":"        case \"view\":","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"PingruiLi"},"content":"            return prepareView(inputParts);","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"        case \"delete\":","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"            return prepareDelete(inputParts);","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":"        case \"exit\":","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"PingruiLi"},"content":"        default:","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(Messages.MESSAGE_INVALID_COMMAND + Messages.MESSAGE_HELP_PROMPT);","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"    public void clearParserParams() {","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"Song0180"},"content":"        params.clear();","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"    private Command prepareAdd(String[] inputParts) {","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"Song0180"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"PingruiLi"},"content":"            if (inputParts.length \u003c 2) {","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"PingruiLi"},"content":"            if (inputParts[1].length() \u003c 3) {","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"PingruiLi"},"content":"                return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"PingruiLi"},"content":"            CommandRecordType recordType \u003d CommandRecordType.getType(\"\" + inputParts[1].trim().charAt(2));","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"PingruiLi"},"content":"            if (recordType \u003d\u003d INVALID) {","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"Song0180"},"content":"            String[] typeContent \u003d getTypeAndContent(inputParts[1]);","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"Song0180"},"content":"            if (typeContent.length \u003c 2) {","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"Song0180"},"content":"            String content \u003d typeContent[1];","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"Song0180"},"content":"            content \u003d content.trim();","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"Song0180"},"content":"            switch (recordType) {","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"PingruiLi"},"content":"            case EXERCISE:","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"Song0180"},"content":"                return prepareAddExercise(content);","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"PingruiLi"},"content":"            case BODY_WEIGHT:","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"Song0180"},"content":"                return prepareAddBodyWeight(content);","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"PingruiLi"},"content":"            case DIET:","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"Song0180"},"content":"                return prepareAddDiet(content);","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"PingruiLi"},"content":"            case SLEEP:","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"Song0180"},"content":"                return prepareAddSleep(content);","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"Song0180"},"content":"            default:","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(Messages.MESSAGE_INVALID_COMMAND_WORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"Song0180"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(Messages.MESSAGE_INVALID_DATE_FORMAT);","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"PingruiLi"},"content":"        } catch (TypeException e) {","lastModifiedDate":"2021-03-18"},{"lineNumber":92,"author":{"gitId":"PingruiLi"},"content":"            return new InvalidCommand(e.toString());","lastModifiedDate":"2021-03-18"},{"lineNumber":93,"author":{"gitId":"PingruiLi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-18"},{"lineNumber":94,"author":{"gitId":"PingruiLi"},"content":"            return new InvalidCommand(Messages.MESSAGE_INVALID_FOOD_AMOUNT);","lastModifiedDate":"2021-03-18"},{"lineNumber":95,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"Song0180"},"content":"    private Command prepareView(String[] inputParts) {","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"Song0180"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"Song0180"},"content":"            if (inputParts.length \u003c 2) {","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(VIEW);","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"PingruiLi"},"content":"            if (inputParts[1].length() \u003c 3) {","lastModifiedDate":"2021-03-18"},{"lineNumber":104,"author":{"gitId":"PingruiLi"},"content":"                return new InvalidCommand(VIEW);","lastModifiedDate":"2021-03-18"},{"lineNumber":105,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":106,"author":{"gitId":"PingruiLi"},"content":"            CommandRecordType recordType \u003d CommandRecordType.getType(\"\" + inputParts[1].trim().charAt(2));","lastModifiedDate":"2021-03-18"},{"lineNumber":107,"author":{"gitId":"PingruiLi"},"content":"            if (recordType \u003d\u003d INVALID) {","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(VIEW);","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"Song0180"},"content":"            String typeContent \u003d inputParts[1];","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"Song0180"},"content":"            String optionalParams \u003d getOptionalParamsForView(typeContent);","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"PingruiLi"},"content":"            if (optionalParams.equals(\"\")) {","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"PingruiLi"},"content":"                return new ViewCommand(recordType);","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"Song0180"},"content":"            switch (recordType) {","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"PingruiLi"},"content":"            case EXERCISE:","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"Song0180"},"content":"                return prepareViewExercise(optionalParams);","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"PingruiLi"},"content":"            case BODY_WEIGHT:","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"Song0180"},"content":"                return prepareViewBodyWeight(optionalParams);","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"PingruiLi"},"content":"            case DIET:","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"Song0180"},"content":"                return prepareViewDiet(optionalParams);","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"PingruiLi"},"content":"            case SLEEP:","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"Song0180"},"content":"                return prepareViewSleep(optionalParams);","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"Song0180"},"content":"            default:","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(VIEW);","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"Song0180"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(\"The date format is incorrect\");","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"Song0180"},"content":"    private Command prepareDelete(String[] inputParts) {","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"PingruiLi"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"Song0180"},"content":"            if (inputParts.length \u003c 2) {","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"PingruiLi"},"content":"                return new InvalidCommand(DELETE);","lastModifiedDate":"2021-03-18"},{"lineNumber":136,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":137,"author":{"gitId":"PingruiLi"},"content":"            if (inputParts[1].length() \u003c 3) {","lastModifiedDate":"2021-03-18"},{"lineNumber":138,"author":{"gitId":"PingruiLi"},"content":"                return new InvalidCommand(DELETE);","lastModifiedDate":"2021-03-18"},{"lineNumber":139,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"PingruiLi"},"content":"            CommandRecordType recordType \u003d CommandRecordType.getType(\"\" + inputParts[1].trim().charAt(2));","lastModifiedDate":"2021-03-18"},{"lineNumber":141,"author":{"gitId":"PingruiLi"},"content":"            if (recordType \u003d\u003d INVALID) {","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"PingruiLi"},"content":"                return new InvalidCommand(DELETE);","lastModifiedDate":"2021-03-18"},{"lineNumber":143,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"Song0180"},"content":"            String[] typeIndex \u003d inputParts[1].split(\"\\\\s+\", 2);","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"Song0180"},"content":"            if (typeIndex.length \u003c 2) {","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"PingruiLi"},"content":"                return new InvalidCommand(DELETE);","lastModifiedDate":"2021-03-18"},{"lineNumber":147,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"Song0180"},"content":"            String index \u003d typeIndex[1];","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"Song0180"},"content":"            boolean isIndexValid \u003d index.startsWith(\"i/\") \u0026\u0026 index.length() \u003e\u003d 3;","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"Song0180"},"content":"            if (!isIndexValid) {","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"PingruiLi"},"content":"                return new InvalidCommand(DELETE);","lastModifiedDate":"2021-03-18"},{"lineNumber":152,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"Song0180"},"content":"            index \u003d index.substring(2);","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"PingruiLi"},"content":"            params.put(\"index\", index);","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"PingruiLi"},"content":"            return new DeleteCommand(recordType, params);","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"PingruiLi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"PingruiLi"},"content":"            return new InvalidCommand(MESSAGE_INDEX_NUMBER_FORMAT_EXCEPTION);","lastModifiedDate":"2021-03-18"},{"lineNumber":158,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":161,"author":{"gitId":"Song0180"},"content":"    private Command prepareAddExercise(String content) throws ParseException, TypeException, NumberFormatException {","lastModifiedDate":"2021-03-18"},{"lineNumber":162,"author":{"gitId":"Song0180"},"content":"        String[] activityDuration \u003d getActivityAndDuration(content);","lastModifiedDate":"2021-03-18"},{"lineNumber":163,"author":{"gitId":"Song0180"},"content":"        if (activityDuration.length \u003c 2) {","lastModifiedDate":"2021-03-18"},{"lineNumber":164,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-18"},{"lineNumber":165,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":166,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":167,"author":{"gitId":"Song0180"},"content":"        String activityRawInput \u003d activityDuration[0].trim();","lastModifiedDate":"2021-03-18"},{"lineNumber":168,"author":{"gitId":"Song0180"},"content":"        String activity \u003d parseExerciseActivityString(activityRawInput, false);","lastModifiedDate":"2021-03-18"},{"lineNumber":169,"author":{"gitId":"Song0180"},"content":"        if (activity.equals(\"\")) {","lastModifiedDate":"2021-03-18"},{"lineNumber":170,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-18"},{"lineNumber":171,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":172,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":173,"author":{"gitId":"Song0180"},"content":"        String durationRawInput \u003d activityDuration[1].trim();","lastModifiedDate":"2021-03-18"},{"lineNumber":174,"author":{"gitId":"Song0180"},"content":"        String duration \u003d parseDurationString(durationRawInput, true);","lastModifiedDate":"2021-03-18"},{"lineNumber":175,"author":{"gitId":"Song0180"},"content":"        if (duration.equals(\"\")) {","lastModifiedDate":"2021-03-18"},{"lineNumber":176,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-18"},{"lineNumber":177,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":178,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":179,"author":{"gitId":"Song0180"},"content":"        boolean hasDate \u003d durationRawInput.contains(\"date/\");","lastModifiedDate":"2021-03-18"},{"lineNumber":180,"author":{"gitId":"Song0180"},"content":"        String date;","lastModifiedDate":"2021-03-18"},{"lineNumber":181,"author":{"gitId":"Song0180"},"content":"        if (hasDate) {","lastModifiedDate":"2021-03-18"},{"lineNumber":182,"author":{"gitId":"Song0180"},"content":"            String[] durationDate \u003d getDurationAndDate(duration);","lastModifiedDate":"2021-03-18"},{"lineNumber":183,"author":{"gitId":"Song0180"},"content":"            if (durationDate.length \u003d\u003d 0) {","lastModifiedDate":"2021-03-18"},{"lineNumber":184,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-18"},{"lineNumber":185,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":186,"author":{"gitId":"Song0180"},"content":"            duration \u003d durationDate[0];","lastModifiedDate":"2021-03-18"},{"lineNumber":187,"author":{"gitId":"Song0180"},"content":"            date \u003d durationDate[1];","lastModifiedDate":"2021-03-18"},{"lineNumber":188,"author":{"gitId":"Song0180"},"content":"            if (isWorkoutMinutesInvalid(duration)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":189,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(Messages.MESSAGE_INVALID_WORKOUT_MIN);","lastModifiedDate":"2021-03-18"},{"lineNumber":190,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":191,"author":{"gitId":"Song0180"},"content":"            params.put(\"activity\", activity);","lastModifiedDate":"2021-03-18"},{"lineNumber":192,"author":{"gitId":"Song0180"},"content":"            params.put(\"duration\", duration);","lastModifiedDate":"2021-03-18"},{"lineNumber":193,"author":{"gitId":"Song0180"},"content":"            params.put(\"date\", date);","lastModifiedDate":"2021-03-18"},{"lineNumber":194,"author":{"gitId":"Song0180"},"content":"            return new AddCommand(EXERCISE, params);","lastModifiedDate":"2021-03-18"},{"lineNumber":195,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":196,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":197,"author":{"gitId":"Song0180"},"content":"        if (isWorkoutMinutesInvalid(duration)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":198,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(Messages.MESSAGE_INVALID_WORKOUT_MIN);","lastModifiedDate":"2021-03-18"},{"lineNumber":199,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":200,"author":{"gitId":"Song0180"},"content":"        params.put(\"activity\", activity);","lastModifiedDate":"2021-03-18"},{"lineNumber":201,"author":{"gitId":"Song0180"},"content":"        params.put(\"duration\", duration);","lastModifiedDate":"2021-03-18"},{"lineNumber":202,"author":{"gitId":"Song0180"},"content":"        return new AddCommand(EXERCISE, params);","lastModifiedDate":"2021-03-18"},{"lineNumber":203,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":204,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":205,"author":{"gitId":"Song0180"},"content":"    private Command prepareAddDiet(String content) throws ParseException, TypeException, NumberFormatException {","lastModifiedDate":"2021-03-18"},{"lineNumber":206,"author":{"gitId":"Song0180"},"content":"        String[] foodWeight \u003d getFoodAndFoodWeight(content);","lastModifiedDate":"2021-03-18"},{"lineNumber":207,"author":{"gitId":"Song0180"},"content":"        if (foodWeight.length \u003c 2) {","lastModifiedDate":"2021-03-18"},{"lineNumber":208,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-18"},{"lineNumber":209,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":210,"author":{"gitId":"Song0180"},"content":"        String foodRawInput \u003d foodWeight[0].trim();","lastModifiedDate":"2021-03-18"},{"lineNumber":211,"author":{"gitId":"Song0180"},"content":"        String weightRawInput \u003d foodWeight[1].trim();","lastModifiedDate":"2021-03-18"},{"lineNumber":212,"author":{"gitId":"Song0180"},"content":"        String food \u003d parseDietString(foodRawInput, false);","lastModifiedDate":"2021-03-18"},{"lineNumber":213,"author":{"gitId":"Song0180"},"content":"        if (food.equals(\"\")) {","lastModifiedDate":"2021-03-18"},{"lineNumber":214,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-18"},{"lineNumber":215,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":216,"author":{"gitId":"Song0180"},"content":"        String weight \u003d parseWeightString(weightRawInput, true);","lastModifiedDate":"2021-03-18"},{"lineNumber":217,"author":{"gitId":"Song0180"},"content":"        if (weight.equals(\"\")) {","lastModifiedDate":"2021-03-18"},{"lineNumber":218,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-18"},{"lineNumber":219,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":220,"author":{"gitId":"Song0180"},"content":"        boolean hasDate \u003d weightRawInput.contains(\"date/\");","lastModifiedDate":"2021-03-18"},{"lineNumber":221,"author":{"gitId":"Song0180"},"content":"        String date;","lastModifiedDate":"2021-03-18"},{"lineNumber":222,"author":{"gitId":"Song0180"},"content":"        if (hasDate) {","lastModifiedDate":"2021-03-18"},{"lineNumber":223,"author":{"gitId":"Song0180"},"content":"            String[] weightDate \u003d getDurationAndDate(weight);","lastModifiedDate":"2021-03-18"},{"lineNumber":224,"author":{"gitId":"Song0180"},"content":"            if (weightDate.length \u003d\u003d 0) {","lastModifiedDate":"2021-03-18"},{"lineNumber":225,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-18"},{"lineNumber":226,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":227,"author":{"gitId":"Song0180"},"content":"            weight \u003d weightDate[0];","lastModifiedDate":"2021-03-18"},{"lineNumber":228,"author":{"gitId":"Song0180"},"content":"            date \u003d weightDate[1];","lastModifiedDate":"2021-03-18"},{"lineNumber":229,"author":{"gitId":"Song0180"},"content":"            params.put(\"food\", food);","lastModifiedDate":"2021-03-18"},{"lineNumber":230,"author":{"gitId":"Song0180"},"content":"            params.put(\"weight\", weight);","lastModifiedDate":"2021-03-18"},{"lineNumber":231,"author":{"gitId":"Song0180"},"content":"            params.put(\"date\", date);","lastModifiedDate":"2021-03-18"},{"lineNumber":232,"author":{"gitId":"Song0180"},"content":"            return new AddCommand(DIET, params);","lastModifiedDate":"2021-03-18"},{"lineNumber":233,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":234,"author":{"gitId":"Song0180"},"content":"        params.put(\"food\", food);","lastModifiedDate":"2021-03-18"},{"lineNumber":235,"author":{"gitId":"Song0180"},"content":"        params.put(\"weight\", weight);","lastModifiedDate":"2021-03-18"},{"lineNumber":236,"author":{"gitId":"Song0180"},"content":"        return new AddCommand(DIET, params);","lastModifiedDate":"2021-03-18"},{"lineNumber":237,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":238,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":239,"author":{"gitId":"Song0180"},"content":"    private Command prepareAddBodyWeight(String content) throws ParseException, TypeException, NumberFormatException {","lastModifiedDate":"2021-03-18"},{"lineNumber":240,"author":{"gitId":"Song0180"},"content":"        String weight \u003d parseWeightString(content, false);","lastModifiedDate":"2021-03-18"},{"lineNumber":241,"author":{"gitId":"Song0180"},"content":"        if (weight.equals(\"\")) {","lastModifiedDate":"2021-03-18"},{"lineNumber":242,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-18"},{"lineNumber":243,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":244,"author":{"gitId":"Song0180"},"content":"        boolean hasDate \u003d content.contains(\"date/\");","lastModifiedDate":"2021-03-18"},{"lineNumber":245,"author":{"gitId":"Song0180"},"content":"        String date;","lastModifiedDate":"2021-03-18"},{"lineNumber":246,"author":{"gitId":"Song0180"},"content":"        if (hasDate) {","lastModifiedDate":"2021-03-18"},{"lineNumber":247,"author":{"gitId":"Song0180"},"content":"            String[] weightDate \u003d getDurationAndDate(weight);","lastModifiedDate":"2021-03-18"},{"lineNumber":248,"author":{"gitId":"Song0180"},"content":"            if (weightDate.length \u003d\u003d 0) {","lastModifiedDate":"2021-03-18"},{"lineNumber":249,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-18"},{"lineNumber":250,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":251,"author":{"gitId":"Song0180"},"content":"            weight \u003d weightDate[0];","lastModifiedDate":"2021-03-18"},{"lineNumber":252,"author":{"gitId":"Song0180"},"content":"            date \u003d weightDate[1];","lastModifiedDate":"2021-03-18"},{"lineNumber":253,"author":{"gitId":"Song0180"},"content":"            if (isWeightInvalid(weight)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":254,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(Messages.MESSAGE_INVALID_WEIGHT);","lastModifiedDate":"2021-03-18"},{"lineNumber":255,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":256,"author":{"gitId":"Song0180"},"content":"            params.put(\"weight\", weight);","lastModifiedDate":"2021-03-18"},{"lineNumber":257,"author":{"gitId":"Song0180"},"content":"            params.put(\"date\", date);","lastModifiedDate":"2021-03-18"},{"lineNumber":258,"author":{"gitId":"Song0180"},"content":"            return new AddCommand(BODY_WEIGHT, params);","lastModifiedDate":"2021-03-18"},{"lineNumber":259,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":260,"author":{"gitId":"Song0180"},"content":"        if (isWeightInvalid(weight)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":261,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(Messages.MESSAGE_INVALID_WEIGHT);","lastModifiedDate":"2021-03-18"},{"lineNumber":262,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":263,"author":{"gitId":"Song0180"},"content":"        params.put(\"weight\", weight);","lastModifiedDate":"2021-03-18"},{"lineNumber":264,"author":{"gitId":"Song0180"},"content":"        return new AddCommand(BODY_WEIGHT, params);","lastModifiedDate":"2021-03-18"},{"lineNumber":265,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":266,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":267,"author":{"gitId":"Song0180"},"content":"    private Command prepareAddSleep(String content) throws ParseException, TypeException, NumberFormatException {","lastModifiedDate":"2021-03-18"},{"lineNumber":268,"author":{"gitId":"Song0180"},"content":"        String duration \u003d parseDurationString(content, false);","lastModifiedDate":"2021-03-18"},{"lineNumber":269,"author":{"gitId":"Song0180"},"content":"        if (duration.equals(\"\")) {","lastModifiedDate":"2021-03-18"},{"lineNumber":270,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-18"},{"lineNumber":271,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":272,"author":{"gitId":"Song0180"},"content":"        boolean hasDate \u003d content.contains(\"date/\");","lastModifiedDate":"2021-03-18"},{"lineNumber":273,"author":{"gitId":"Song0180"},"content":"        String date;","lastModifiedDate":"2021-03-18"},{"lineNumber":274,"author":{"gitId":"Song0180"},"content":"        if (hasDate) {","lastModifiedDate":"2021-03-18"},{"lineNumber":275,"author":{"gitId":"Song0180"},"content":"            String[] durationDate \u003d getDurationAndDate(duration);","lastModifiedDate":"2021-03-18"},{"lineNumber":276,"author":{"gitId":"Song0180"},"content":"            if (durationDate.length \u003d\u003d 0) {","lastModifiedDate":"2021-03-18"},{"lineNumber":277,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-18"},{"lineNumber":278,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":279,"author":{"gitId":"Song0180"},"content":"            duration \u003d durationDate[0];","lastModifiedDate":"2021-03-18"},{"lineNumber":280,"author":{"gitId":"Song0180"},"content":"            date \u003d durationDate[1];","lastModifiedDate":"2021-03-18"},{"lineNumber":281,"author":{"gitId":"Song0180"},"content":"            if (isSleepHoursInvalid(duration)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":282,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(Messages.MESSAGE_INVALID_SLEEP_HOUR);","lastModifiedDate":"2021-03-18"},{"lineNumber":283,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":284,"author":{"gitId":"Song0180"},"content":"            params.put(\"duration\", duration);","lastModifiedDate":"2021-03-18"},{"lineNumber":285,"author":{"gitId":"Song0180"},"content":"            params.put(\"date\", date);","lastModifiedDate":"2021-03-18"},{"lineNumber":286,"author":{"gitId":"Song0180"},"content":"            return new AddCommand(SLEEP, params);","lastModifiedDate":"2021-03-18"},{"lineNumber":287,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":288,"author":{"gitId":"Song0180"},"content":"        if (isSleepHoursInvalid(duration)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":289,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(Messages.MESSAGE_INVALID_SLEEP_HOUR);","lastModifiedDate":"2021-03-18"},{"lineNumber":290,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":291,"author":{"gitId":"Song0180"},"content":"        params.put(\"duration\", duration);","lastModifiedDate":"2021-03-18"},{"lineNumber":292,"author":{"gitId":"Song0180"},"content":"        return new AddCommand(SLEEP, params);","lastModifiedDate":"2021-03-18"},{"lineNumber":293,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":294,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":295,"author":{"gitId":"Song0180"},"content":"    private Command prepareViewExercise(String optionalParams) throws ParseException {","lastModifiedDate":"2021-03-17"},{"lineNumber":296,"author":{"gitId":"Song0180"},"content":"        String activity;","lastModifiedDate":"2021-03-17"},{"lineNumber":297,"author":{"gitId":"Song0180"},"content":"        String date;","lastModifiedDate":"2021-03-17"},{"lineNumber":298,"author":{"gitId":"Song0180"},"content":"        boolean hasActivity \u003d optionalParams.contains(\"a/\");","lastModifiedDate":"2021-03-17"},{"lineNumber":299,"author":{"gitId":"Song0180"},"content":"        boolean hasDate \u003d optionalParams.contains(\"date/\");","lastModifiedDate":"2021-03-17"},{"lineNumber":300,"author":{"gitId":"PingruiLi"},"content":"        if (!hasActivity \u0026\u0026 !hasDate) {","lastModifiedDate":"2021-03-15"},{"lineNumber":301,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(VIEW);","lastModifiedDate":"2021-03-17"},{"lineNumber":302,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":303,"author":{"gitId":"PingruiLi"},"content":"        if (hasActivity) {","lastModifiedDate":"2021-03-15"},{"lineNumber":304,"author":{"gitId":"Song0180"},"content":"            activity \u003d parseExerciseActivityString(optionalParams, false);","lastModifiedDate":"2021-03-18"},{"lineNumber":305,"author":{"gitId":"PingruiLi"},"content":"            if (activity.equals(\"\")) {","lastModifiedDate":"2021-03-15"},{"lineNumber":306,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(VIEW);","lastModifiedDate":"2021-03-17"},{"lineNumber":307,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":308,"author":{"gitId":"PingruiLi"},"content":"            if (!hasDate) {","lastModifiedDate":"2021-03-15"},{"lineNumber":309,"author":{"gitId":"Song0180"},"content":"                params.put(\"activity\", activity);","lastModifiedDate":"2021-03-17"},{"lineNumber":310,"author":{"gitId":"Song0180"},"content":"                return new ViewCommand(EXERCISE, params);","lastModifiedDate":"2021-03-17"},{"lineNumber":311,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":312,"author":{"gitId":"Song0180"},"content":"            String[] activityDate \u003d getDurationAndDate(activity);","lastModifiedDate":"2021-03-18"},{"lineNumber":313,"author":{"gitId":"PingruiLi"},"content":"            if (activityDate.length \u003d\u003d 0) {","lastModifiedDate":"2021-03-15"},{"lineNumber":314,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(VIEW);","lastModifiedDate":"2021-03-17"},{"lineNumber":315,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":316,"author":{"gitId":"PingruiLi"},"content":"            activity \u003d activityDate[0];","lastModifiedDate":"2021-03-15"},{"lineNumber":317,"author":{"gitId":"PingruiLi"},"content":"            date \u003d activityDate[1];","lastModifiedDate":"2021-03-15"},{"lineNumber":318,"author":{"gitId":"Song0180"},"content":"            params.put(\"activity\", activity);","lastModifiedDate":"2021-03-17"},{"lineNumber":319,"author":{"gitId":"Song0180"},"content":"            params.put(\"date\", date);","lastModifiedDate":"2021-03-17"},{"lineNumber":320,"author":{"gitId":"Song0180"},"content":"            return new ViewCommand(EXERCISE, params);","lastModifiedDate":"2021-03-17"},{"lineNumber":321,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":322,"author":{"gitId":"Song0180"},"content":"        if (isDateInvalid(optionalParams)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":323,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(VIEW);","lastModifiedDate":"2021-03-17"},{"lineNumber":324,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":325,"author":{"gitId":"Song0180"},"content":"        date \u003d optionalParams.substring(5);","lastModifiedDate":"2021-03-17"},{"lineNumber":326,"author":{"gitId":"Song0180"},"content":"        params.put(\"date\", date);","lastModifiedDate":"2021-03-17"},{"lineNumber":327,"author":{"gitId":"Song0180"},"content":"        return new ViewCommand(EXERCISE, params);","lastModifiedDate":"2021-03-17"},{"lineNumber":328,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":329,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":330,"author":{"gitId":"Song0180"},"content":"    private Command prepareViewDiet(String optionalParams) throws ParseException {","lastModifiedDate":"2021-03-17"},{"lineNumber":331,"author":{"gitId":"Song0180"},"content":"        String food;","lastModifiedDate":"2021-03-17"},{"lineNumber":332,"author":{"gitId":"Song0180"},"content":"        String date;","lastModifiedDate":"2021-03-17"},{"lineNumber":333,"author":{"gitId":"PingruiLi"},"content":"        boolean hasFood \u003d optionalParams.contains(\"f/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":334,"author":{"gitId":"PingruiLi"},"content":"        boolean hasDate \u003d optionalParams.contains(\"date/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":335,"author":{"gitId":"PingruiLi"},"content":"        if (!hasFood \u0026\u0026 !hasDate) {","lastModifiedDate":"2021-03-15"},{"lineNumber":336,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(VIEW);","lastModifiedDate":"2021-03-17"},{"lineNumber":337,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":338,"author":{"gitId":"PingruiLi"},"content":"        if (hasFood) {","lastModifiedDate":"2021-03-15"},{"lineNumber":339,"author":{"gitId":"Song0180"},"content":"            food \u003d parseDietString(optionalParams, false);","lastModifiedDate":"2021-03-18"},{"lineNumber":340,"author":{"gitId":"PingruiLi"},"content":"            if (food.equals(\"\")) {","lastModifiedDate":"2021-03-15"},{"lineNumber":341,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(VIEW);","lastModifiedDate":"2021-03-17"},{"lineNumber":342,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":343,"author":{"gitId":"PingruiLi"},"content":"            if (!hasDate) {","lastModifiedDate":"2021-03-15"},{"lineNumber":344,"author":{"gitId":"Song0180"},"content":"                params.put(\"food\", food);","lastModifiedDate":"2021-03-17"},{"lineNumber":345,"author":{"gitId":"Song0180"},"content":"                return new ViewCommand(DIET, params);","lastModifiedDate":"2021-03-17"},{"lineNumber":346,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":347,"author":{"gitId":"Song0180"},"content":"            String[] foodDate \u003d getDurationAndDate(food);","lastModifiedDate":"2021-03-18"},{"lineNumber":348,"author":{"gitId":"Song0180"},"content":"            if (foodDate.length \u003d\u003d 0) {","lastModifiedDate":"2021-03-17"},{"lineNumber":349,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(VIEW);","lastModifiedDate":"2021-03-17"},{"lineNumber":350,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":351,"author":{"gitId":"Song0180"},"content":"            food \u003d foodDate[0];","lastModifiedDate":"2021-03-17"},{"lineNumber":352,"author":{"gitId":"Song0180"},"content":"            date \u003d foodDate[1];","lastModifiedDate":"2021-03-17"},{"lineNumber":353,"author":{"gitId":"Song0180"},"content":"            params.put(\"food\", food);","lastModifiedDate":"2021-03-17"},{"lineNumber":354,"author":{"gitId":"Song0180"},"content":"            params.put(\"date\", date);","lastModifiedDate":"2021-03-17"},{"lineNumber":355,"author":{"gitId":"Song0180"},"content":"            return new ViewCommand(DIET, params);","lastModifiedDate":"2021-03-17"},{"lineNumber":356,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":357,"author":{"gitId":"Song0180"},"content":"        if (isDateInvalid(optionalParams)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":358,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(VIEW);","lastModifiedDate":"2021-03-17"},{"lineNumber":359,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":360,"author":{"gitId":"PingruiLi"},"content":"        date \u003d optionalParams.substring(5);","lastModifiedDate":"2021-03-15"},{"lineNumber":361,"author":{"gitId":"Song0180"},"content":"        params.put(\"date\", date);","lastModifiedDate":"2021-03-17"},{"lineNumber":362,"author":{"gitId":"Song0180"},"content":"        return new ViewCommand(DIET, params);","lastModifiedDate":"2021-03-17"},{"lineNumber":363,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":364,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":365,"author":{"gitId":"Song0180"},"content":"    private Command prepareViewSleep(String optionalParams) throws ParseException {","lastModifiedDate":"2021-03-18"},{"lineNumber":366,"author":{"gitId":"Song0180"},"content":"        if (isDateInvalid(optionalParams)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":367,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(VIEW);","lastModifiedDate":"2021-03-17"},{"lineNumber":368,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":369,"author":{"gitId":"Song0180"},"content":"        String date \u003d optionalParams.substring(5);","lastModifiedDate":"2021-03-18"},{"lineNumber":370,"author":{"gitId":"Song0180"},"content":"        params.put(\"date\", date);","lastModifiedDate":"2021-03-17"},{"lineNumber":371,"author":{"gitId":"Song0180"},"content":"        return new ViewCommand(SLEEP, params);","lastModifiedDate":"2021-03-17"},{"lineNumber":372,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":373,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":374,"author":{"gitId":"Song0180"},"content":"    private Command prepareViewBodyWeight(String optionalParams) throws ParseException {","lastModifiedDate":"2021-03-18"},{"lineNumber":375,"author":{"gitId":"Song0180"},"content":"        if (isDateInvalid(optionalParams)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":376,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(VIEW);","lastModifiedDate":"2021-03-17"},{"lineNumber":377,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":378,"author":{"gitId":"Song0180"},"content":"        String date \u003d optionalParams.substring(5);","lastModifiedDate":"2021-03-18"},{"lineNumber":379,"author":{"gitId":"Song0180"},"content":"        params.put(\"date\", date);","lastModifiedDate":"2021-03-17"},{"lineNumber":380,"author":{"gitId":"Song0180"},"content":"        return new ViewCommand(BODY_WEIGHT, params);","lastModifiedDate":"2021-03-17"},{"lineNumber":381,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":382,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":383,"author":{"gitId":"Song0180"},"content":"    private boolean isDateInvalid(String dateString) {","lastModifiedDate":"2021-03-18"},{"lineNumber":384,"author":{"gitId":"Song0180"},"content":"        return !dateString.startsWith(\"date/\") || dateString.length() \u003c\u003d 5;","lastModifiedDate":"2021-03-18"},{"lineNumber":385,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":386,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":387,"author":{"gitId":"Song0180"},"content":"    private boolean isSleepHoursInvalid(String duration) {","lastModifiedDate":"2021-03-18"},{"lineNumber":388,"author":{"gitId":"Song0180"},"content":"        try {","lastModifiedDate":"2021-03-18"},{"lineNumber":389,"author":{"gitId":"Song0180"},"content":"            int sleepDurationInHours \u003d Integer.parseInt(duration);","lastModifiedDate":"2021-03-18"},{"lineNumber":390,"author":{"gitId":"Song0180"},"content":"            return sleepDurationInHours \u003c\u003d 0 || sleepDurationInHours \u003e\u003d 24;","lastModifiedDate":"2021-03-18"},{"lineNumber":391,"author":{"gitId":"Song0180"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-18"},{"lineNumber":392,"author":{"gitId":"Song0180"},"content":"            return true;","lastModifiedDate":"2021-03-18"},{"lineNumber":393,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":394,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":395,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":396,"author":{"gitId":"Song0180"},"content":"    private boolean isWorkoutMinutesInvalid(String duration) {","lastModifiedDate":"2021-03-18"},{"lineNumber":397,"author":{"gitId":"Song0180"},"content":"        try {","lastModifiedDate":"2021-03-18"},{"lineNumber":398,"author":{"gitId":"Song0180"},"content":"            int workoutMin \u003d Integer.parseInt(duration);","lastModifiedDate":"2021-03-18"},{"lineNumber":399,"author":{"gitId":"Song0180"},"content":"            return workoutMin \u003c\u003d 0 || workoutMin \u003e 1440;","lastModifiedDate":"2021-03-18"},{"lineNumber":400,"author":{"gitId":"Song0180"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-18"},{"lineNumber":401,"author":{"gitId":"Song0180"},"content":"            return true;","lastModifiedDate":"2021-03-18"},{"lineNumber":402,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":403,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":404,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":405,"author":{"gitId":"Song0180"},"content":"    private boolean isWeightInvalid(String weight) {","lastModifiedDate":"2021-03-18"},{"lineNumber":406,"author":{"gitId":"Song0180"},"content":"        try {","lastModifiedDate":"2021-03-18"},{"lineNumber":407,"author":{"gitId":"Song0180"},"content":"            double weightInKg \u003d Double.parseDouble(weight);","lastModifiedDate":"2021-03-18"},{"lineNumber":408,"author":{"gitId":"Song0180"},"content":"            return !(weightInKg \u003e 0);","lastModifiedDate":"2021-03-18"},{"lineNumber":409,"author":{"gitId":"Song0180"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-18"},{"lineNumber":410,"author":{"gitId":"Song0180"},"content":"            return true;","lastModifiedDate":"2021-03-18"},{"lineNumber":411,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":412,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":413,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":414,"author":{"gitId":"Song0180"},"content":"    private String getCommandWord(String[] inputParts) {","lastModifiedDate":"2021-03-18"},{"lineNumber":415,"author":{"gitId":"Song0180"},"content":"        return inputParts[0];","lastModifiedDate":"2021-03-18"},{"lineNumber":416,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":417,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":418,"author":{"gitId":"Song0180"},"content":"    private String[] getInputParts(String userInput) {","lastModifiedDate":"2021-03-18"},{"lineNumber":419,"author":{"gitId":"Song0180"},"content":"        return userInput.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2021-03-18"},{"lineNumber":420,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":421,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":422,"author":{"gitId":"Song0180"},"content":"    private String[] getTypeAndContent(String inputPart) {","lastModifiedDate":"2021-03-18"},{"lineNumber":423,"author":{"gitId":"Song0180"},"content":"        return inputPart.split(\"\\\\s+\", 2);","lastModifiedDate":"2021-03-18"},{"lineNumber":424,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":425,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":426,"author":{"gitId":"Song0180"},"content":"    private String[] getDurationAndDate(String stringWithDate) {","lastModifiedDate":"2021-03-18"},{"lineNumber":427,"author":{"gitId":"PingruiLi"},"content":"        String[] paramDateRaw \u003d stringWithDate.split(\"date/\", 2);","lastModifiedDate":"2021-03-15"},{"lineNumber":428,"author":{"gitId":"PingruiLi"},"content":"        String date \u003d paramDateRaw[1].trim();","lastModifiedDate":"2021-03-15"},{"lineNumber":429,"author":{"gitId":"PingruiLi"},"content":"        String param \u003d paramDateRaw[0].trim();","lastModifiedDate":"2021-03-15"},{"lineNumber":430,"author":{"gitId":"PingruiLi"},"content":"        boolean isParamValid \u003d param.length() \u003e 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":431,"author":{"gitId":"PingruiLi"},"content":"        boolean isDateValid \u003d date.length() \u003d\u003d 10;","lastModifiedDate":"2021-03-15"},{"lineNumber":432,"author":{"gitId":"PingruiLi"},"content":"        if (!isParamValid || !isDateValid) {","lastModifiedDate":"2021-03-15"},{"lineNumber":433,"author":{"gitId":"PingruiLi"},"content":"            return new String[0];","lastModifiedDate":"2021-03-15"},{"lineNumber":434,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":435,"author":{"gitId":"PingruiLi"},"content":"        String[] paramDate \u003d new String[2];","lastModifiedDate":"2021-03-15"},{"lineNumber":436,"author":{"gitId":"PingruiLi"},"content":"        paramDate[0] \u003d param;","lastModifiedDate":"2021-03-15"},{"lineNumber":437,"author":{"gitId":"PingruiLi"},"content":"        paramDate[1] \u003d date;","lastModifiedDate":"2021-03-15"},{"lineNumber":438,"author":{"gitId":"PingruiLi"},"content":"        return paramDate;","lastModifiedDate":"2021-03-15"},{"lineNumber":439,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":440,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":441,"author":{"gitId":"Song0180"},"content":"    private String[] getFoodAndFoodWeight(String content) {","lastModifiedDate":"2021-03-17"},{"lineNumber":442,"author":{"gitId":"Song0180"},"content":"        return content.split(\"w/\", 2);","lastModifiedDate":"2021-03-17"},{"lineNumber":443,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":444,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":445,"author":{"gitId":"Song0180"},"content":"    private String[] getActivityAndDuration(String content) {","lastModifiedDate":"2021-03-17"},{"lineNumber":446,"author":{"gitId":"Song0180"},"content":"        return content.split(\"d/\", 2);","lastModifiedDate":"2021-03-17"},{"lineNumber":447,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":448,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":449,"author":{"gitId":"Song0180"},"content":"    private String getOptionalParamsForView(String typeContent) {","lastModifiedDate":"2021-03-18"},{"lineNumber":450,"author":{"gitId":"Song0180"},"content":"        String[] rawInput \u003d typeContent.split(\"\\\\s+\", 2);","lastModifiedDate":"2021-03-18"},{"lineNumber":451,"author":{"gitId":"Song0180"},"content":"        if (rawInput.length \u003d\u003d 1) {","lastModifiedDate":"2021-03-18"},{"lineNumber":452,"author":{"gitId":"Song0180"},"content":"            return \"\";","lastModifiedDate":"2021-03-18"},{"lineNumber":453,"author":{"gitId":"Song0180"},"content":"        } else {","lastModifiedDate":"2021-03-18"},{"lineNumber":454,"author":{"gitId":"Song0180"},"content":"            return rawInput[1].trim();","lastModifiedDate":"2021-03-18"},{"lineNumber":455,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":456,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":457,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":458,"author":{"gitId":"Song0180"},"content":"    private String parseExerciseActivityString(String activityRawInput, boolean isPrefixChecked) {","lastModifiedDate":"2021-03-18"},{"lineNumber":459,"author":{"gitId":"PingruiLi"},"content":"        boolean isActivityValid;","lastModifiedDate":"2021-03-15"},{"lineNumber":460,"author":{"gitId":"Song0180"},"content":"        if (isPrefixChecked) {","lastModifiedDate":"2021-03-17"},{"lineNumber":461,"author":{"gitId":"PingruiLi"},"content":"            isActivityValid \u003d activityRawInput.length() \u003e 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":462,"author":{"gitId":"PingruiLi"},"content":"            if (!isActivityValid) {","lastModifiedDate":"2021-03-15"},{"lineNumber":463,"author":{"gitId":"PingruiLi"},"content":"                return \"\";","lastModifiedDate":"2021-03-15"},{"lineNumber":464,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":465,"author":{"gitId":"PingruiLi"},"content":"            return activityRawInput;","lastModifiedDate":"2021-03-15"},{"lineNumber":466,"author":{"gitId":"PingruiLi"},"content":"        } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":467,"author":{"gitId":"PingruiLi"},"content":"            isActivityValid \u003d activityRawInput.length() \u003e\u003d 3 \u0026\u0026 activityRawInput.startsWith(\"a/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":468,"author":{"gitId":"PingruiLi"},"content":"            if (!isActivityValid) {","lastModifiedDate":"2021-03-15"},{"lineNumber":469,"author":{"gitId":"PingruiLi"},"content":"                return \"\";","lastModifiedDate":"2021-03-15"},{"lineNumber":470,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":471,"author":{"gitId":"PingruiLi"},"content":"            return activityRawInput.substring(2);","lastModifiedDate":"2021-03-15"},{"lineNumber":472,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":473,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":474,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":475,"author":{"gitId":"Song0180"},"content":"    private String parseWeightString(String bodyWeightRawInput, boolean prefixChecked) {","lastModifiedDate":"2021-03-18"},{"lineNumber":476,"author":{"gitId":"Song0180"},"content":"        boolean isBodyWeightValid;","lastModifiedDate":"2021-03-17"},{"lineNumber":477,"author":{"gitId":"PingruiLi"},"content":"        if (prefixChecked) {","lastModifiedDate":"2021-03-15"},{"lineNumber":478,"author":{"gitId":"Song0180"},"content":"            isBodyWeightValid \u003d bodyWeightRawInput.length() \u003e 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":479,"author":{"gitId":"Song0180"},"content":"            if (!isBodyWeightValid) {","lastModifiedDate":"2021-03-17"},{"lineNumber":480,"author":{"gitId":"PingruiLi"},"content":"                return \"\";","lastModifiedDate":"2021-03-15"},{"lineNumber":481,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":482,"author":{"gitId":"PingruiLi"},"content":"            return bodyWeightRawInput;","lastModifiedDate":"2021-03-15"},{"lineNumber":483,"author":{"gitId":"PingruiLi"},"content":"        } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":484,"author":{"gitId":"Song0180"},"content":"            isBodyWeightValid \u003d bodyWeightRawInput.length() \u003e\u003d 3 \u0026\u0026 bodyWeightRawInput.startsWith(\"w/\");","lastModifiedDate":"2021-03-17"},{"lineNumber":485,"author":{"gitId":"Song0180"},"content":"            if (!isBodyWeightValid) {","lastModifiedDate":"2021-03-17"},{"lineNumber":486,"author":{"gitId":"PingruiLi"},"content":"                return \"\";","lastModifiedDate":"2021-03-15"},{"lineNumber":487,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":488,"author":{"gitId":"PingruiLi"},"content":"            return bodyWeightRawInput.substring(2);","lastModifiedDate":"2021-03-15"},{"lineNumber":489,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":490,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":491,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":492,"author":{"gitId":"Song0180"},"content":"    private String parseDurationString(String durationRawInput, boolean prefixChecked) {","lastModifiedDate":"2021-03-18"},{"lineNumber":493,"author":{"gitId":"PingruiLi"},"content":"        boolean isDurationValid;","lastModifiedDate":"2021-03-15"},{"lineNumber":494,"author":{"gitId":"PingruiLi"},"content":"        if (prefixChecked) {","lastModifiedDate":"2021-03-15"},{"lineNumber":495,"author":{"gitId":"PingruiLi"},"content":"            isDurationValid \u003d durationRawInput.length() \u003e 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":496,"author":{"gitId":"PingruiLi"},"content":"            if (!isDurationValid) {","lastModifiedDate":"2021-03-15"},{"lineNumber":497,"author":{"gitId":"PingruiLi"},"content":"                return \"\";","lastModifiedDate":"2021-03-15"},{"lineNumber":498,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":499,"author":{"gitId":"PingruiLi"},"content":"            return durationRawInput;","lastModifiedDate":"2021-03-15"},{"lineNumber":500,"author":{"gitId":"PingruiLi"},"content":"        } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":501,"author":{"gitId":"PingruiLi"},"content":"            isDurationValid \u003d durationRawInput.length() \u003e\u003d 3 \u0026\u0026 durationRawInput.startsWith(\"d/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":502,"author":{"gitId":"PingruiLi"},"content":"            if (!isDurationValid) {","lastModifiedDate":"2021-03-15"},{"lineNumber":503,"author":{"gitId":"PingruiLi"},"content":"                return \"\";","lastModifiedDate":"2021-03-15"},{"lineNumber":504,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":505,"author":{"gitId":"PingruiLi"},"content":"            return durationRawInput.substring(2);","lastModifiedDate":"2021-03-15"},{"lineNumber":506,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":507,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":508,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":509,"author":{"gitId":"Song0180"},"content":"    private String parseDietString(String dietRawInput, boolean prefixChecked) {","lastModifiedDate":"2021-03-18"},{"lineNumber":510,"author":{"gitId":"PingruiLi"},"content":"        boolean isDietValid;","lastModifiedDate":"2021-03-15"},{"lineNumber":511,"author":{"gitId":"PingruiLi"},"content":"        if (prefixChecked) {","lastModifiedDate":"2021-03-15"},{"lineNumber":512,"author":{"gitId":"PingruiLi"},"content":"            isDietValid \u003d dietRawInput.length() \u003e 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":513,"author":{"gitId":"PingruiLi"},"content":"            if (!isDietValid) {","lastModifiedDate":"2021-03-15"},{"lineNumber":514,"author":{"gitId":"PingruiLi"},"content":"                return \"\";","lastModifiedDate":"2021-03-15"},{"lineNumber":515,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":516,"author":{"gitId":"PingruiLi"},"content":"            return dietRawInput;","lastModifiedDate":"2021-03-15"},{"lineNumber":517,"author":{"gitId":"PingruiLi"},"content":"        } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":518,"author":{"gitId":"PingruiLi"},"content":"            isDietValid \u003d dietRawInput.length() \u003e\u003d 3 \u0026\u0026 dietRawInput.startsWith(\"f/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":519,"author":{"gitId":"PingruiLi"},"content":"            if (!isDietValid) {","lastModifiedDate":"2021-03-15"},{"lineNumber":520,"author":{"gitId":"PingruiLi"},"content":"                return \"\";","lastModifiedDate":"2021-03-15"},{"lineNumber":521,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":522,"author":{"gitId":"PingruiLi"},"content":"            return dietRawInput.substring(2);","lastModifiedDate":"2021-03-15"},{"lineNumber":523,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":524,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":525,"author":{"gitId":"PingruiLi"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"PingruiLi":192,"Song0180":333}},{"path":"src/main/java/seedu/duke/common/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.common;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":" * Container for commonly used messages.","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"public class Messages {","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_VERSION \u003d \"V1.0\";","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_FEATURES \u003d \"You can use the app by using command ADD, VIEW, and DELETE.\";","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_WELCOME \u003d \"Welcome to your personal fitness app - Healthier\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"            + \"What\u0027s in your mind today?\\n\";","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_BYE \u003d \"Nice work today!\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"            + \"You are one step closer to ultimate fitness!\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"            + \"See you again soon :)\\n\";","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_EXIT \u003d \"Thank you for using this app. The app is exiting...\";","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_HELP_PROMPT \u003d \"Not sure how to use this app?\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"            + \"Use command \u0027help\u0027 to see what you can do.\";","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_HELP_GREETINGS \u003d \"Thank you for choosing to be healthier with us.\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"            + \"The current version of this application is: \" + MESSAGE_VERSION + \"\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"            + MESSAGE_FEATURES + \"\\n\";","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_VIEW_TITLE \u003d \"Displaying all eligible %s records:\\n\";","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_VIEW_HEADER_EXERCISE \u003d \"Index\\t\\tDate\\t\\tActivity\\t\\tDuration\\t\\tCalories\\n\";","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_VIEW_HEADER_DIET \u003d \"Index\\t\\tDate\\t\\tFood Category\\t\\tWeight\\t\\tCalories\\n\";","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_VIEW_HEADER_SLEEP \u003d \"Index\\t\\tDate\\t\\t\\tDuration\\n\";","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_VIEW_HEADER_WEIGHT \u003d \"Index\\t\\tDate\\t\\t\\tBody Weight\\n\";","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_NO_RECORD \u003d \"Sorry, no records found.\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"            + \"You can try adding records by using command \u0027add\u0027.\";","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"PingruiLi"},"content":"    public static final String MESSAGE_INDEX_NUMBER_FORMAT_EXCEPTION \u003d \"The index field is not a valid number.\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"PingruiLi"},"content":"            + \"Please try again.\";","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_CANT_ADD_RECORD \u003d \"Sorry, you cannot add record of an unrecognized type.\";","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_CANT_VIEW_LIST \u003d \"Sorry, you cannot view record list \"","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"            + \"of an incorrect record type.\";","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_SYSTEM_ERROR \u003d \"There is something wrong within the system.\";","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"PingruiLi"},"content":"    //public static final String MESSAGE_NUMBER_FORMAT_ERROR \u003d \"Please check the value for the number field.\";","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"PingruiLi"},"content":"    public static final String MESSAGE_INVALID_DATE_FORMAT \u003d \"The date format is incorrect or the date is invalid. \"","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"PingruiLi"},"content":"            + \"Please try again.\\n\";","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_INVALID_SLEEP_HOUR \u003d \"The duration you entered is invalid.\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"PingruiLi"},"content":"            + \"It should be an positive integer between 0 and 24, with the unit of hour.\\nPlease try again.\";","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_INVALID_WORKOUT_MIN \u003d \"The duration you entered is invalid.\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"PingruiLi"},"content":"            + \"It should be an positive integer between 0 and 1440, with the unit of minute.\\nPlease try again.\";","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_INVALID_WEIGHT \u003d \"The weight you entered is invalid.\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"PingruiLi"},"content":"            + \"It should be an positive floating point number, with the unit of kilogram(kg).\\nPlease try again.\";","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_INVALID_FOOD_CATEGORY \u003d \"The food category you entered is invalid.\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"            + \"The acceptable food category list is:\\n\";","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"PingruiLi"},"content":"    public static final String MESSAGE_INVALID_FOOD_AMOUNT \u003d \"The amount you entered is invalid.\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"PingruiLi"},"content":"            + \"The acceptable amount of food should be a floating point number, with the unit of gram(g).\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"PingruiLi"},"content":"            + \"Please try again.\";","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_INVALID_WORKOUT_CATEGORY \u003d \"The workout category you entered is invalid.\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"            + \"The acceptable workout category list is:\\n\";","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_INVALID_COMMAND \u003d \"Sorry, the command you entered cannot be recognized.\\n\\n\";","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_INVALID_COMMAND_WORD \u003d \"The command word is invalid. \"","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"            + \"Enter help to see help messages\\n\";","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_INVALID_COMMAND_SYNTAX \u003d \"Sorry, \"","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"            + \"the syntax of the command entered is incorrect.\\n\\n\";","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_SYNTAX_ADD_COMMAND \u003d \"The syntax for add command is:\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"            + \"1. Add exercise record\\n\\tadd t/E a/ACTIVITY_NAME d/DURATION [date/DD-MM-YYYY]\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"Song0180"},"content":"            + \"2. Add diet record\\n\\tadd t/D f/FOOD_TYPE w/WEIGHT [date/DD-MM-YYYY]\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"            + \"3. Add sleep record\\n\\tadd t/S d/DURATION [date/DD-MM-YYYY]\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"Song0180"},"content":"            + \"4. Add body weight record\\n\\tadd t/W w/WEIGHT [date/DD-MM-YYYY]\";","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_SYNTAX_VIEW_COMMAND \u003d \"The syntax for view command is:\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"Song0180"},"content":"            + \"1. View exercise records\\n\\tview t/E [a/ACTIVITY_NAME] [date/DD-MM-YYYY]\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"Song0180"},"content":"            + \"2. View diet records\\n\\tview t/D [f/FOOD_NAME] [date/DD-MM-YYYY]\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"Song0180"},"content":"            + \"3. View sleep records\\n\\tview t/S [date/DD-MM-YYYY]\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"Song0180"},"content":"            + \"4. View body weight records\\n\\tview t/W [date/DD-MM-YYYY]\";","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_SYNTAX_DELETE_COMMAND \u003d \"The syntax for delete command is:\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"PingruiLi"},"content":"            + \"1. Delete exercise records\\n\\tdelete t/E [a/ACTIVITY_NAME] [date/DD-MM-YYYY]\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"PingruiLi"},"content":"            + \"2. Delete diet records\\n\\tdelete t/D i/index\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"PingruiLi"},"content":"            + \"3. Delete sleep records\\n\\tdelete t/S i/index\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"PingruiLi"},"content":"            + \"4. Delete body weight records\\n\\tdelete t/W i/index\";","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"PingruiLi":15,"Song0180":54}},{"path":"src/main/java/seedu/duke/exception/TypeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.record.FoodCategory;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"import seedu.duke.record.WorkoutCategory;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"public class TypeException extends Exception {","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"    private String invalidType;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"    public TypeException(String type) {","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"        invalidType \u003d type;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"    public String toString() {","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"        if (invalidType.equals(\"food type exception\")) {","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"            return Messages.MESSAGE_INVALID_FOOD_CATEGORY","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"                    + FoodCategory.getValidFoodList();","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"        if (invalidType.equals(\"workout type exception\")) {","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"            return Messages.MESSAGE_INVALID_WORKOUT_CATEGORY","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"                    + WorkoutCategory.getValidWorkoutList();","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"        return \"\";","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"PingruiLi":17,"Song0180":8}},{"path":"src/main/java/seedu/duke/record/BodyWeight.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowwilliam"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"lowwilliam"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"lowwilliam"},"content":"public class BodyWeight extends Record {","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"    private final double weight;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"    public BodyWeight(double weight, LocalDate date) {","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"        super(RecordType.BODYWEIGHT, date);","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"lowwilliam"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"lowwilliam"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"lowwilliam"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"lowwilliam"},"content":"     * Gets the weight date.","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"lowwilliam"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"lowwilliam"},"content":"     * @return the user\u0027s weight.","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"lowwilliam"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"lowwilliam"},"content":"    public double getWeight() {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"lowwilliam"},"content":"        return weight;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"lowwilliam"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"lowwilliam"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"     * Gets the body weight summary.","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"lowwilliam"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"     * @return the summary of body weight.","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"lowwilliam"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"    public String getRecordSummary() {","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"        return \"Body weight \" + getWeight() + \"Kg on \" + getDate().format(DATE_FORMATTER);","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"    public String getRecordData() {","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"        return \"\\t\\t\\t\" + getDate().format(DATE_FORMATTER)","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"                + \"\\t\\t\" + getWeight() + \" Kg\";","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"lowwilliam"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"lowwilliam"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"lowwilliam":23,"Song0180":14}},{"path":"src/main/java/seedu/duke/record/Diet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowwilliam"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.exception.TypeException;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"lowwilliam"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"import java.util.Locale;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.record.FoodCategory.INVALID;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.record.RecordType.DIET;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"public class Diet extends Record {","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"    private final double calorie;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"    private final FoodCategory foodCategory;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"    private final double amount;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"    private final String formattedDate;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"    private static final String SUMMARY_FORMAT \u003d \"%sg %s on %s\";","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"lowwilliam"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"lowwilliam"},"content":"     * Initializes the object with given record type and date.","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"lowwilliam"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"lowwilliam"},"content":"     * @param date the date of the record.","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"lowwilliam"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"    public Diet(String foodString, String amountString, LocalDate date) throws TypeException, NumberFormatException {","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"        super(DIET, date);","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"        foodCategory \u003d FoodCategory.getFoodCategory(foodString);","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"        if (foodCategory \u003d\u003d INVALID) {","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"PingruiLi"},"content":"            throw new TypeException(\"food type exception\");","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"lowwilliam"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"PingruiLi"},"content":"        amount \u003d Double.parseDouble(amountString);","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"        calorie \u003d amount * foodCategory.getCaloriePer100g();","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"PingruiLi"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"PingruiLi"},"content":"        formattedDate \u003d date.format(DATE_FORMATTER);","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"lowwilliam"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"     * Gets the calorie of the food.","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"     * @return the calorie of the food.","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"    public double getCalorie() {","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"        return calorie;","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"     * Gets the weight of the food in g.","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":"     * @return the weight of the food in g.","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"    public double getAmount() {","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"        return amount;","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"Song0180"},"content":"     * Gets the category of the food.","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"Song0180"},"content":"     * @return the category of the food.","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"Song0180"},"content":"    public FoodCategory getFoodCategory() {","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"Song0180"},"content":"        return foodCategory;","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"lowwilliam"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"lowwilliam"},"content":"     * Gets the summary of users\u0027 diet record.","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"lowwilliam"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"lowwilliam"},"content":"     * @return the diet summary.","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"lowwilliam"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"lowwilliam"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"lowwilliam"},"content":"    public String getRecordSummary() {","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"Song0180"},"content":"        return String.format(SUMMARY_FORMAT, \"\" + amount,","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"Song0180"},"content":"                foodCategory.toString().toLowerCase(Locale.ROOT), formattedDate);","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"Song0180"},"content":"     * Gets the record data of this diet record in a row.","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"Song0180"},"content":"     * @return a string of the record data of this diet record in a row.","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"Song0180"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"Song0180"},"content":"    public String getRecordData() {","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"Song0180"},"content":"        return \"\\t\\t\\t\" + getDate().format(DATE_FORMATTER)","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"Song0180"},"content":"                + \"\\t\" + getFoodCategory()","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"Song0180"},"content":"                + \"\\t\\t\\t\\t\" + getAmount() + \" g\"","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"Song0180"},"content":"                + \"\\t\\t\" + getCalorie() + \" cal\";","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"lowwilliam"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"lowwilliam"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"lowwilliam":23,"PingruiLi":15,"Song0180":47}},{"path":"src/main/java/seedu/duke/record/Exercise.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"baggiiiie"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.exception.TypeException;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"baggiiiie"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"baggiiiie"},"content":"public class Exercise extends Record {","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"    private double calories;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"    private final WorkoutCategory workoutCategory;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"    private final int duration;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"    public Exercise(String activityStr, int duration, LocalDate date) throws TypeException {","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"        super(RecordType.EXERCISE, date);","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"        try {","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"            workoutCategory \u003d WorkoutCategory.valueOf(activityStr.toUpperCase());","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"            throw new TypeException(\"workout type exception\");","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"        this.calories \u003d calculateCalories();","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"    private double calculateCalories() {","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"        double bodyWeight \u003d 50.0;","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"        double durationInHour \u003d duration / 60d;","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"        int metValue \u003d 12;","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"        calories \u003d bodyWeight * metValue * durationInHour;","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"        return calories;","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"baggiiiie"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"    public double getCalories() {","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"        return calories;","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"baggiiiie"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"    public WorkoutCategory getWorkoutCategory() {","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"        return workoutCategory;","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"baggiiiie"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"    public int getDuration() {","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"        return duration;","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"baggiiiie"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"baggiiiie"},"content":"    public String getRecordSummary() {","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":"        return getDuration() + \" minutes of \"","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":"                + getWorkoutCategory() + \" exercise on \" + getDate().format(DATE_FORMATTER);","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"    public String getRecordData() {","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":"        return \"\\t\\t\\t\" + getDate().format(DATE_FORMATTER)","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"                + \"\\t\" + getWorkoutCategory()","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"Song0180"},"content":"                + \"\\t\\t\\t\" + getDuration() + \" minute(s)\"","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"                + \"\\t\" + getCalories() + \" cal\";","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"baggiiiie"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"baggiiiie"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"baggiiiie":16,"Song0180":41}},{"path":"src/main/java/seedu/duke/record/FoodCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowwilliam"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"import java.util.Locale;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"lowwilliam"},"content":"public enum FoodCategory {","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"    VEGETABLE(25),","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"    PROTEIN(140),","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"    FRUIT(40),","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"    GRAIN(350),","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"    INVALID(0);","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"    private final double caloriePer100g;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"    FoodCategory(double caloriePer100g) {","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"        this.caloriePer100g \u003d caloriePer100g;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"    public double getCaloriePer100g() {","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"        return caloriePer100g;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"    public static FoodCategory getFoodCategory(String foodString) {","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"        for (int i \u003d 0; i \u003c FoodCategory.values().length; i++) {","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"            if (foodString.toUpperCase(Locale.ROOT).equals(FoodCategory.values()[i].toString())) {","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"                return FoodCategory.values()[i];","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"PingruiLi"},"content":"        return INVALID;","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"    public static String getValidFoodList() {","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"        StringBuilder foodList \u003d new StringBuilder();","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"        for (FoodCategory foodCategory : FoodCategory.values()) {","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"            if (!foodCategory.equals(INVALID)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"                foodList.append(i).append(\". \").append(foodCategory).append(\"\\n\");","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"                i++;","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"        return foodList.toString();","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"lowwilliam"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"lowwilliam":4,"PingruiLi":23,"Song0180":14}},{"path":"src/main/java/seedu/duke/record/Record.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":" * Represents the record for a type of Health info. Contains the date and type of the record.","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"public abstract class Record {","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"    protected RecordType type;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"    protected static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"     * Initializes the object with given record type and date.","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"     * @param type the type of the record.","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"     * @param date the date of the record.","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"    public Record(RecordType type, LocalDate date) {","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"     * Gets the date of the record.","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"     * @return the date of the record in LocalDate.","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"        return date;","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"     * Sets the date of the record.","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"     * @param date the date of the record in LocalDate.","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"    public void setDate(LocalDate date) {","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"     * Gets the type of the record.","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":"     * @return the type of the record defined in enum RecordType.","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"    public RecordType getType() {","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"        return type;","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"Song0180"},"content":"     * Gets a text summary of the record. To be implemented by child classes.","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"Song0180"},"content":"     * @return a text summary of the record in String.","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"Song0180"},"content":"    public abstract String getRecordSummary();","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"Song0180"},"content":"     * Gets all data of the record in a table row.","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"Song0180"},"content":"     * @return a string of all data of the record in a table row.","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"Song0180"},"content":"    public abstract String getRecordData();","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"PingruiLi":2,"Song0180":64}},{"path":"src/main/java/seedu/duke/record/RecordList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.record.comparator.RecordDateComparator;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":" * Represents the list that contains all records of one type.","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"public class RecordList {","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"    private final ArrayList\u003cRecord\u003e records \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"    private final RecordType type;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"    public RecordList(RecordType type) {","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"     * Adds a record to the current list.","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"     * @param newRecord the new record to add.","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"    public void addRecord(Record newRecord) {","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"        records.add(newRecord);","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"        records.sort(new RecordDateComparator());","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"     * Removes a record from the current list by index.","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"PingruiLi"},"content":"     * Return the summary of the deleted record.","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"     * @param index the index of the record.","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"PingruiLi"},"content":"    public String removeRecord(int index) {","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"PingruiLi"},"content":"        Record recordToRemove \u003d records.get(index);","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"PingruiLi"},"content":"        String recordSummary \u003d recordToRemove.getRecordSummary();","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"        records.remove(index);","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"PingruiLi"},"content":"        return recordSummary;","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"     * Gets all records in a string.","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":"     * @return a string of all records.","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"    public String getRecordsToPrint() {","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"        if (records.isEmpty()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"            return Messages.MESSAGE_NO_RECORD;","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"        } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":"            StringBuilder recordStringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"            int i \u003d 0;","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"Song0180"},"content":"            for (Record record : records) {","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"PingruiLi"},"content":"                recordStringBuilder.append((i + 1)).append(record.getRecordData()).append(\"\\n\");","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"Song0180"},"content":"                i++;","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"Song0180"},"content":"            return recordStringBuilder.toString();","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"Song0180"},"content":"     * Gets all records with a given date in a string.","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"Song0180"},"content":"     * @param date the date of the record.","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"Song0180"},"content":"     * @return a string of all records with a given date.","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"Song0180"},"content":"    public String getRecordsToPrint(LocalDate date) {","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"Song0180"},"content":"        if (records.isEmpty()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"Song0180"},"content":"            return Messages.MESSAGE_NO_RECORD;","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"Song0180"},"content":"        } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"Song0180"},"content":"            StringBuilder recordStringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"Song0180"},"content":"            int i \u003d 0;","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"Song0180"},"content":"            for (Record record : records) {","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"Song0180"},"content":"                if (record.getDate().isEqual(date)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"PingruiLi"},"content":"                    recordStringBuilder.append((i + 1)).append(record.getRecordData()).append(\"\\n\");","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"Song0180"},"content":"                    i++;","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"Song0180"},"content":"                }","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"Song0180"},"content":"            boolean hasRecord \u003d recordStringBuilder.length() !\u003d 0;","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"Song0180"},"content":"            if (!hasRecord) {","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"Song0180"},"content":"                recordStringBuilder.append(Messages.MESSAGE_NO_RECORD);","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"Song0180"},"content":"            return recordStringBuilder.toString();","lastModifiedDate":"2021-03-18"},{"lineNumber":85,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":86,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":87,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":88,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":89,"author":{"gitId":"Song0180"},"content":"     * Gets all records that match the pattern in the given parameter.","lastModifiedDate":"2021-03-18"},{"lineNumber":90,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":91,"author":{"gitId":"Song0180"},"content":"     * @param optionalParam an optional parameter for filtering the records.","lastModifiedDate":"2021-03-18"},{"lineNumber":92,"author":{"gitId":"Song0180"},"content":"     * @return a string of all records that match the pattern in the given parameter.","lastModifiedDate":"2021-03-18"},{"lineNumber":93,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":94,"author":{"gitId":"Song0180"},"content":"    public String getRecordsToPrint(String optionalParam) {","lastModifiedDate":"2021-03-18"},{"lineNumber":95,"author":{"gitId":"Song0180"},"content":"        if (records.isEmpty()) {","lastModifiedDate":"2021-03-18"},{"lineNumber":96,"author":{"gitId":"Song0180"},"content":"            return Messages.MESSAGE_NO_RECORD;","lastModifiedDate":"2021-03-18"},{"lineNumber":97,"author":{"gitId":"Song0180"},"content":"        } else {","lastModifiedDate":"2021-03-18"},{"lineNumber":98,"author":{"gitId":"Song0180"},"content":"            StringBuilder recordStringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-03-18"},{"lineNumber":99,"author":{"gitId":"Song0180"},"content":"            if (type.equals(RecordType.EXERCISE)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":100,"author":{"gitId":"Song0180"},"content":"                return getExerciseRecordString(optionalParam, recordStringBuilder);","lastModifiedDate":"2021-03-18"},{"lineNumber":101,"author":{"gitId":"Song0180"},"content":"            } else if (type.equals(RecordType.DIET)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":102,"author":{"gitId":"Song0180"},"content":"                return getDietRecordString(optionalParam, recordStringBuilder);","lastModifiedDate":"2021-03-18"},{"lineNumber":103,"author":{"gitId":"Song0180"},"content":"            } else {","lastModifiedDate":"2021-03-18"},{"lineNumber":104,"author":{"gitId":"Song0180"},"content":"                return Messages.MESSAGE_CANT_VIEW_LIST;","lastModifiedDate":"2021-03-18"},{"lineNumber":105,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":108,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":109,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":110,"author":{"gitId":"Song0180"},"content":"     * Gets all records that match the pattern in the given parameter on a given date.","lastModifiedDate":"2021-03-18"},{"lineNumber":111,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":112,"author":{"gitId":"Song0180"},"content":"     * @param date          the date of the record.","lastModifiedDate":"2021-03-18"},{"lineNumber":113,"author":{"gitId":"Song0180"},"content":"     * @param optionalParam an optional parameter for filtering the records.","lastModifiedDate":"2021-03-18"},{"lineNumber":114,"author":{"gitId":"Song0180"},"content":"     * @return a string of all records that match the pattern in the given parameter on a given date.","lastModifiedDate":"2021-03-18"},{"lineNumber":115,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":116,"author":{"gitId":"Song0180"},"content":"    public String getRecordsToPrint(LocalDate date, String optionalParam) {","lastModifiedDate":"2021-03-18"},{"lineNumber":117,"author":{"gitId":"Song0180"},"content":"        if (records.isEmpty()) {","lastModifiedDate":"2021-03-18"},{"lineNumber":118,"author":{"gitId":"Song0180"},"content":"            return Messages.MESSAGE_NO_RECORD;","lastModifiedDate":"2021-03-18"},{"lineNumber":119,"author":{"gitId":"Song0180"},"content":"        } else {","lastModifiedDate":"2021-03-18"},{"lineNumber":120,"author":{"gitId":"Song0180"},"content":"            StringBuilder recordStringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-03-18"},{"lineNumber":121,"author":{"gitId":"Song0180"},"content":"            if (type.equals(RecordType.EXERCISE)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":122,"author":{"gitId":"Song0180"},"content":"                return getExerciseRecordString(date, optionalParam, recordStringBuilder);","lastModifiedDate":"2021-03-18"},{"lineNumber":123,"author":{"gitId":"Song0180"},"content":"            } else if (type.equals(RecordType.DIET)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":124,"author":{"gitId":"Song0180"},"content":"                return getDietRecordString(date, optionalParam, recordStringBuilder);","lastModifiedDate":"2021-03-18"},{"lineNumber":125,"author":{"gitId":"Song0180"},"content":"            } else {","lastModifiedDate":"2021-03-18"},{"lineNumber":126,"author":{"gitId":"Song0180"},"content":"                return Messages.MESSAGE_CANT_VIEW_LIST;","lastModifiedDate":"2021-03-18"},{"lineNumber":127,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":128,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":129,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":130,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":131,"author":{"gitId":"Song0180"},"content":"    private FoodCategory parseStringToFoodCategory(String optionalParam) throws IllegalArgumentException {","lastModifiedDate":"2021-03-18"},{"lineNumber":132,"author":{"gitId":"Song0180"},"content":"        return FoodCategory.valueOf(optionalParam.toUpperCase());","lastModifiedDate":"2021-03-18"},{"lineNumber":133,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":134,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":135,"author":{"gitId":"Song0180"},"content":"    private WorkoutCategory parseStringToWorkoutCategory(String optionalParam) throws IllegalArgumentException {","lastModifiedDate":"2021-03-18"},{"lineNumber":136,"author":{"gitId":"Song0180"},"content":"        return WorkoutCategory.valueOf(optionalParam.toUpperCase());","lastModifiedDate":"2021-03-18"},{"lineNumber":137,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":138,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":139,"author":{"gitId":"Song0180"},"content":"    private String getDietRecordString(String optionalParam, StringBuilder recordStringBuilder) {","lastModifiedDate":"2021-03-18"},{"lineNumber":140,"author":{"gitId":"Song0180"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-03-18"},{"lineNumber":141,"author":{"gitId":"Song0180"},"content":"        for (Record record : records) {","lastModifiedDate":"2021-03-18"},{"lineNumber":142,"author":{"gitId":"Song0180"},"content":"            Diet diet \u003d (Diet) record;","lastModifiedDate":"2021-03-18"},{"lineNumber":143,"author":{"gitId":"Song0180"},"content":"            FoodCategory paramCategory \u003d getFoodCategory(optionalParam);","lastModifiedDate":"2021-03-18"},{"lineNumber":144,"author":{"gitId":"Song0180"},"content":"            if (diet.getFoodCategory().equals(paramCategory)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":145,"author":{"gitId":"Song0180"},"content":"                recordStringBuilder.append(i).append(record.getRecordData()).append(\"\\n\");","lastModifiedDate":"2021-03-18"},{"lineNumber":146,"author":{"gitId":"Song0180"},"content":"                i++;","lastModifiedDate":"2021-03-18"},{"lineNumber":147,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":148,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":149,"author":{"gitId":"Song0180"},"content":"        boolean hasRecord \u003d recordStringBuilder.length() !\u003d 0;","lastModifiedDate":"2021-03-18"},{"lineNumber":150,"author":{"gitId":"Song0180"},"content":"        if (!hasRecord) {","lastModifiedDate":"2021-03-18"},{"lineNumber":151,"author":{"gitId":"Song0180"},"content":"            recordStringBuilder.append(Messages.MESSAGE_NO_RECORD);","lastModifiedDate":"2021-03-18"},{"lineNumber":152,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":153,"author":{"gitId":"Song0180"},"content":"        return recordStringBuilder.toString();","lastModifiedDate":"2021-03-18"},{"lineNumber":154,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":155,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":156,"author":{"gitId":"Song0180"},"content":"    private String getDietRecordString(LocalDate date, String optionalParam, StringBuilder recordStringBuilder) {","lastModifiedDate":"2021-03-18"},{"lineNumber":157,"author":{"gitId":"Song0180"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-03-18"},{"lineNumber":158,"author":{"gitId":"Song0180"},"content":"        for (Record record : records) {","lastModifiedDate":"2021-03-18"},{"lineNumber":159,"author":{"gitId":"Song0180"},"content":"            Diet diet \u003d (Diet) record;","lastModifiedDate":"2021-03-18"},{"lineNumber":160,"author":{"gitId":"Song0180"},"content":"            FoodCategory paramCategory \u003d getFoodCategory(optionalParam);","lastModifiedDate":"2021-03-18"},{"lineNumber":161,"author":{"gitId":"Song0180"},"content":"            if (diet.getDate().isEqual(date) \u0026\u0026 diet.getFoodCategory().equals(paramCategory)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":162,"author":{"gitId":"PingruiLi"},"content":"                recordStringBuilder.append((i + 1)).append(record.getRecordData()).append(\"\\n\");","lastModifiedDate":"2021-03-18"},{"lineNumber":163,"author":{"gitId":"Song0180"},"content":"                i++;","lastModifiedDate":"2021-03-18"},{"lineNumber":164,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":165,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":166,"author":{"gitId":"Song0180"},"content":"        boolean hasRecord \u003d recordStringBuilder.length() !\u003d 0;","lastModifiedDate":"2021-03-18"},{"lineNumber":167,"author":{"gitId":"Song0180"},"content":"        if (!hasRecord) {","lastModifiedDate":"2021-03-18"},{"lineNumber":168,"author":{"gitId":"Song0180"},"content":"            recordStringBuilder.append(Messages.MESSAGE_NO_RECORD);","lastModifiedDate":"2021-03-18"},{"lineNumber":169,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":170,"author":{"gitId":"Song0180"},"content":"        return recordStringBuilder.toString();","lastModifiedDate":"2021-03-18"},{"lineNumber":171,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":172,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":173,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":174,"author":{"gitId":"Song0180"},"content":"    private String getExerciseRecordString(String optionalParam, StringBuilder recordStringBuilder) {","lastModifiedDate":"2021-03-18"},{"lineNumber":175,"author":{"gitId":"Song0180"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-03-18"},{"lineNumber":176,"author":{"gitId":"Song0180"},"content":"        for (Record record : records) {","lastModifiedDate":"2021-03-18"},{"lineNumber":177,"author":{"gitId":"Song0180"},"content":"            Exercise exercise \u003d (Exercise) record;","lastModifiedDate":"2021-03-18"},{"lineNumber":178,"author":{"gitId":"Song0180"},"content":"            WorkoutCategory paramCategory \u003d getWorkOutCategory(optionalParam);","lastModifiedDate":"2021-03-18"},{"lineNumber":179,"author":{"gitId":"Song0180"},"content":"            if (exercise.getWorkoutCategory().equals(paramCategory)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":180,"author":{"gitId":"PingruiLi"},"content":"                recordStringBuilder.append((i + 1)).append(record.getRecordData()).append(\"\\n\");","lastModifiedDate":"2021-03-18"},{"lineNumber":181,"author":{"gitId":"Song0180"},"content":"                i++;","lastModifiedDate":"2021-03-18"},{"lineNumber":182,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":183,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":184,"author":{"gitId":"Song0180"},"content":"        boolean hasRecord \u003d recordStringBuilder.length() !\u003d 0;","lastModifiedDate":"2021-03-18"},{"lineNumber":185,"author":{"gitId":"Song0180"},"content":"        if (!hasRecord) {","lastModifiedDate":"2021-03-18"},{"lineNumber":186,"author":{"gitId":"Song0180"},"content":"            recordStringBuilder.append(Messages.MESSAGE_NO_RECORD);","lastModifiedDate":"2021-03-18"},{"lineNumber":187,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":188,"author":{"gitId":"Song0180"},"content":"        return recordStringBuilder.toString();","lastModifiedDate":"2021-03-18"},{"lineNumber":189,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":190,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":191,"author":{"gitId":"Song0180"},"content":"    private String getExerciseRecordString(LocalDate date, String optionalParam, StringBuilder recordStringBuilder) {","lastModifiedDate":"2021-03-18"},{"lineNumber":192,"author":{"gitId":"Song0180"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-03-18"},{"lineNumber":193,"author":{"gitId":"Song0180"},"content":"        for (Record record : records) {","lastModifiedDate":"2021-03-18"},{"lineNumber":194,"author":{"gitId":"Song0180"},"content":"            Exercise exercise \u003d (Exercise) record;","lastModifiedDate":"2021-03-18"},{"lineNumber":195,"author":{"gitId":"Song0180"},"content":"            WorkoutCategory paramCategory \u003d getWorkOutCategory(optionalParam);","lastModifiedDate":"2021-03-18"},{"lineNumber":196,"author":{"gitId":"Song0180"},"content":"            if (exercise.getDate().isEqual(date) \u0026\u0026 exercise.getWorkoutCategory().equals(paramCategory)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":197,"author":{"gitId":"PingruiLi"},"content":"                recordStringBuilder.append((i + 1)).append(record.getRecordData()).append(\"\\n\");","lastModifiedDate":"2021-03-18"},{"lineNumber":198,"author":{"gitId":"Song0180"},"content":"                i++;","lastModifiedDate":"2021-03-18"},{"lineNumber":199,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":200,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":201,"author":{"gitId":"Song0180"},"content":"        boolean hasRecord \u003d recordStringBuilder.length() !\u003d 0;","lastModifiedDate":"2021-03-18"},{"lineNumber":202,"author":{"gitId":"Song0180"},"content":"        if (!hasRecord) {","lastModifiedDate":"2021-03-18"},{"lineNumber":203,"author":{"gitId":"Song0180"},"content":"            recordStringBuilder.append(Messages.MESSAGE_NO_RECORD);","lastModifiedDate":"2021-03-18"},{"lineNumber":204,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":205,"author":{"gitId":"Song0180"},"content":"        return recordStringBuilder.toString();","lastModifiedDate":"2021-03-18"},{"lineNumber":206,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":207,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":208,"author":{"gitId":"Song0180"},"content":"    private FoodCategory getFoodCategory(String optionalParam) {","lastModifiedDate":"2021-03-18"},{"lineNumber":209,"author":{"gitId":"Song0180"},"content":"        FoodCategory paramCategory;","lastModifiedDate":"2021-03-18"},{"lineNumber":210,"author":{"gitId":"Song0180"},"content":"        try {","lastModifiedDate":"2021-03-18"},{"lineNumber":211,"author":{"gitId":"Song0180"},"content":"            paramCategory \u003d parseStringToFoodCategory(optionalParam);","lastModifiedDate":"2021-03-18"},{"lineNumber":212,"author":{"gitId":"Song0180"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-03-18"},{"lineNumber":213,"author":{"gitId":"Song0180"},"content":"            paramCategory \u003d FoodCategory.INVALID;","lastModifiedDate":"2021-03-18"},{"lineNumber":214,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":215,"author":{"gitId":"Song0180"},"content":"        return paramCategory;","lastModifiedDate":"2021-03-18"},{"lineNumber":216,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":217,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":218,"author":{"gitId":"Song0180"},"content":"    private WorkoutCategory getWorkOutCategory(String optionalParam) {","lastModifiedDate":"2021-03-18"},{"lineNumber":219,"author":{"gitId":"Song0180"},"content":"        WorkoutCategory paramCategory;","lastModifiedDate":"2021-03-18"},{"lineNumber":220,"author":{"gitId":"Song0180"},"content":"        try {","lastModifiedDate":"2021-03-18"},{"lineNumber":221,"author":{"gitId":"Song0180"},"content":"            paramCategory \u003d parseStringToWorkoutCategory(optionalParam);","lastModifiedDate":"2021-03-18"},{"lineNumber":222,"author":{"gitId":"Song0180"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-03-18"},{"lineNumber":223,"author":{"gitId":"Song0180"},"content":"            paramCategory \u003d WorkoutCategory.INVALID;","lastModifiedDate":"2021-03-18"},{"lineNumber":224,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":225,"author":{"gitId":"Song0180"},"content":"        return paramCategory;","lastModifiedDate":"2021-03-18"},{"lineNumber":226,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":227,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"PingruiLi":10,"Song0180":217}},{"path":"src/main/java/seedu/duke/record/RecordType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":" * Represents the type of a record. Contains 4 kinds of type.","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"public enum RecordType {","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"    SLEEP, EXERCISE, DIET, BODYWEIGHT","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"Song0180":8}},{"path":"src/main/java/seedu/duke/record/Sleep.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"baggiiiie"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"baggiiiie"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"baggiiiie"},"content":"public class Sleep extends Record {","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"    private final int duration;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"baggiiiie"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"     * Represents a record of sleeping data.","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"baggiiiie"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"     * @param duration the duration of the sleep.","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"     * @param date     the date of the sleep.","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"baggiiiie"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"    public Sleep(int duration, LocalDate date) {","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"        super(RecordType.SLEEP, date);","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"baggiiiie"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"baggiiiie"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"baggiiiie"},"content":"     * Gets the duration of a sleep record.","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"baggiiiie"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"     * @return the duration of the sleep record.","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"baggiiiie"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"baggiiiie"},"content":"    public int getDuration() {","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"baggiiiie"},"content":"        return duration;","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"baggiiiie"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"baggiiiie"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"baggiiiie"},"content":"     * Returns the sleep record summary.","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"baggiiiie"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"baggiiiie"},"content":"     * @return a String of the record summary.","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"baggiiiie"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"baggiiiie"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"baggiiiie"},"content":"    public String getRecordSummary() {","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"        return getDuration() + \" hours of sleep on \" + getDate().format(DATE_FORMATTER);","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"    public String getRecordData() {","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"        return \"\\t\\t\\t\" + getDate().format(DATE_FORMATTER)","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"                + \"\\t\\t\" + getDuration() + \" hour(s)\";","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"baggiiiie"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"baggiiiie"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"baggiiiie":28,"Song0180":15}},{"path":"src/main/java/seedu/duke/record/WorkoutCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"public enum WorkoutCategory {","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"    WALKING,","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"    RUNNING,","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"    CYCLING,","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"    ELLIPTICAL,","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"    ROWER,","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"    STAIRSTEPPER,","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"    HIKING,","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"    HIIT,","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"    YOGA,","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"    DANCE,","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"    COOLDOWN,","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"    SWIMMING,","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"    CORETRAINING,","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"    INVALID;","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"    public static String getValidWorkoutList() {","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"        StringBuilder workoutList \u003d new StringBuilder();","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"        for (WorkoutCategory workoutCategory : WorkoutCategory.values()) {","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"            if (!workoutCategory.equals(INVALID)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"                workoutList.append(i).append(\". \").append(workoutCategory).append(\"\\n\");","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"                i++;","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"        return workoutList.toString();","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"Song0180":30}},{"path":"src/main/java/seedu/duke/record/comparator/RecordDateComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.record.comparator;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.record.Record;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":" * Comparator for comparing two records by date.","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"public class RecordDateComparator implements Comparator\u003cRecord\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"    public int compare(Record record1, Record record2) {","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"        LocalDate date1 \u003d record1.getDate();","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"        LocalDate date2 \u003d record2.getDate();","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"        if (date1.isBefore(date2)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"            return -1;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"        } else if (date1.isAfter(date2)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"            return 1;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"        } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"            return 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"Song0180":24}},{"path":"src/main/java/seedu/duke/ui/UI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.command.CommandResult;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"public class UI {","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"    public static final String DIVIDER \u003d \"--------------------------------------------------------------------\\n\";","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"    public static final String DIVIDER_LINE_ONLY \u003d","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"            \"--------------------------------------------------------------------\";","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"    private final Scanner sc;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"    public UI() {","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"    public String getUserInput() {","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"    public void printGreetings() {","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"        System.out.print(DIVIDER","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"                + Messages.MESSAGE_WELCOME","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"                + DIVIDER);","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"PingruiLi"},"content":"    public void printExitMessage() {","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"PingruiLi"},"content":"        System.out.print(DIVIDER","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"                + Messages.MESSAGE_BYE","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"                + DIVIDER);","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"    public void printCommandResult(CommandResult commandResult) {","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"        System.out.println(DIVIDER","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"                + commandResult.getFeedback()","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"                + \"\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"                + DIVIDER_LINE_ONLY);","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"PingruiLi":14,"Song0180":27}},{"path":"src/test/java/seedu/duke/HealthierTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"class HealthierTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"-":11,"Song0180":1}},{"path":"src/test/java/seedu/duke/account/FitCenterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.account;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.command.CommandRecordType;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"class FitCenterTest {","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"    void getRecordListString() {","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"        FitCenter fitCenter \u003d new FitCenter();","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"        CommandRecordType type \u003d CommandRecordType.SLEEP;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"        assertEquals(Messages.MESSAGE_NO_RECORD, fitCenter.getRecordListString(type));","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"Song0180":17}},{"path":"src/test/java/seedu/duke/command/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.exception.TypeException;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandRecordType.EXERCISE;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"public class AddCommandTest {","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"    public void addCommand_throwsParseException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"        HashMap\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"        params.put(\"activity\", \"dance\");","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"        params.put(\"duration\", \"50\");","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"        params.put(\"date\", \"abcde\");","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"        assertThrows(ParseException.class, () -\u003e {","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"            new AddCommand(EXERCISE, params);","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"        });","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":"    public void addCommand_throwsNumberFormatException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"PingruiLi"},"content":"        HashMap\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"PingruiLi"},"content":"        params.put(\"activity\", \"dance\");","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"PingruiLi"},"content":"        params.put(\"duration\", \"50min\");","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"PingruiLi"},"content":"        assertThrows(NumberFormatException.class, () -\u003e {","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"PingruiLi"},"content":"            new AddCommand(EXERCISE, params);","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"PingruiLi"},"content":"        });","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"PingruiLi"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"PingruiLi":33}},{"path":"src/test/java/seedu/duke/command/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandRecordType.EXERCISE;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"class DeleteCommandTest {","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"    public void seleteCommand_throwsNumberFormatException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"        HashMap\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"        params.put(\"index\", \"abc\");","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"        assertThrows(NumberFormatException.class, () -\u003e {","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"            new DeleteCommand(EXERCISE, params);","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"        });","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"PingruiLi":19}},{"path":"src/test/java/seedu/duke/command/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandRecordType.EXERCISE;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"class ViewCommandTest {","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"    public void viewCommand_throwsParseException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"        HashMap\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"        params.put(\"date\", \"abcde\");","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"        assertThrows(ParseException.class, () -\u003e {","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"            new ViewCommand(EXERCISE, params);","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"        });","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"PingruiLi":20}},{"path":"src/test/java/seedu/duke/record/RecordListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"class RecordListTest {","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"    void getRecordsToPrint() {","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"        RecordList list \u003d new RecordList(RecordType.SLEEP);","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"        assertEquals(Messages.MESSAGE_NO_RECORD, list.getRecordsToPrint(date));","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"Song0180":18}}]
