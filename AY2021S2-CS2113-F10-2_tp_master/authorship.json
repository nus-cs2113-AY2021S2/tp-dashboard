[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"    mainClassName \u003d \"seedu.duke.Healthier\"","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":45,"Song0180":2}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"![](https://avatars.githubusercontent.com/u/55625337?s\u003d460\u0026u\u003d8cf010d3f5099773aec99b0ebe41c4902552a392\u0026v\u003d4) | Song Yu | [Github](https://github.com/Song0180) | [LinkedIn](https://www.linkedin.com/in/daniel-yu-song/)","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Joe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ron John | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | John Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Li Pingrui | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-03-05"}],"authorContributionMap":{"PingruiLi":1,"-":8,"Song0180":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"# Healthier Developer Guide","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"Group `F10-2`  ","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"Last update on `31 Mar 2021`","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"## Table of Content","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"- [Getting Started](#getting-started)","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"- [Design](#design)","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"    - []()","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"    - []()","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"    - []()","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"- [Implementation](#implementation)","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"    - []()","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"    - []()","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"    - []()","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"- [Appendix: Requirements](#appendix-requirements)","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"    - [Product Scope](#product-scope)","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"        - [Target User Profile](#target-user-profile)","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"        - [Value Proposition](#value-proposition)","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"    - [User Stories](#user-stories)","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"    - [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"- [Glossary](#glossary)","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"- [Instructions for manual testing](#instructions-for-manual-testing)","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"## Getting Started","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"## Design","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"## Implementation","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"PingruiLi"},"content":"This section describes some details on how certain features are implemented.","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"PingruiLi"},"content":"### [Proposed] Add record feature","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"PingruiLi"},"content":"#### Proposed implementation","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":"## Appendix: Requirements","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"### Product Scope","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"#### Target User Profile","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"{Describe the target user profile}","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"Song0180"},"content":"#### Value proposition","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"{Describe the value proposition: what problem does it solve?}","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"Song0180"},"content":"### User Stories","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"Song0180"},"content":"### Non-Functional Requirements","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"PingruiLi":7,"-":28,"Song0180":40}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"# Healther - Your No. 1 Personal Fitness Management Application","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"Healtheir targets people who care about fitness, who exercise regularly (at least 3 times/week) and have diet plans. It is designed for users of age group 18-30.  ","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"This app is used via **Command Line Interface (CLI)**. If the user is proficient in using command-line tools \u0026 typing, then it could be very efficient to use. This app also provides several shortcut commands for advanced users for further efficient operations.","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"-":6,"Song0180":4}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"# Healthier | User Guide","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"Healtheir targets people who care about fitness, who exercise regularly (at least 3 times/week) and have diet plans. It is designed for users of age group 18-30.  ","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"This app is used via **Command Line Interface (CLI)**. If the user is proficient in using command-line tools \u0026 typing, then it could be very efficient to use. This app also provides several shortcut commands for advanced users for further efficient operations.","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"---","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"## Table of Content","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"* [Quick start](README.md#quick-start)","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"* [Features](README.md#features)","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"* [Command summary](README.md#command-summary)","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"This is a cross-platform application, you can run it on any operating system as long as **Java 11** is installed.","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"\u003e To verify if you have **Java 11** installed, simply type command `java --version` in your terminal.","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"1. Download the `tp.jar` file from the [latest release](https://github.com/AY2021S2-CS2113-F10-2/tp/releases).","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"1. Open a new terminal at the folder where the `Tp.jar` file is located.","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"1. Run the applictaion use command `java -jar Tp.jar`","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"1. Refer to the [Features](README.md#features) section below for more info on commands.","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"\u003e **Note:**","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"\u003e * All commands should be input in `lower_case`. It is always the first word supplied by the user.","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"    \u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"    \u003e   e.g. `add`, `view`, `delete` etc.","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"\u003e * Parameters of a command are denoted in `UPPER_CASE`. They must be supplied by the user, otherwise the command will not be recognized.","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"    \u003e   The actual input of the parameters can be in any case.","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"    \u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"    \u003e   e.g. in `add XXX`, `XXX` is a parameter which can be used as ``.","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"\u003e * Redundant parameters for single-word commands (e.g. `help`) will be ignored.","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"    \u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"    \u003e    e.g. if the command `help hahahaha` is input, it is equivalent to `help`.","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"\u003e * After the appliction starts running, it checks if a `data` folder exists in the same directory where `tp.jar` is located.","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"    \u003e   If the folder does not exist, the application will create a new folder `data`,","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"    \u003e   which is used to store the `data.txt` file which contains details of the user\u0027s data.","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"\u003e * The text file `data.txt` will be automatically updated after each operation of the app.","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"### Get help from instructions on how to use this app : `help`","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"Adds a to-do type of task to the task list.","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"Format: `help`","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"Example: `help`","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"Expected outcome:","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"Song0180"},"content":"### Input Exercise Data: `add`","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"Song0180"},"content":"Add one exercise activity with the duration and the date.","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"Song0180"},"content":"Format: `add  t/E a/ACTIVITY_NAME  d/DURATION  [date/DD-MM-YYYY]`","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"Song0180"},"content":"* Add one exercise record. The name of exercise activity `a/ACTIVITY_NAME` and duration `d/DURATION` **MUST** be specified.","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"Song0180"},"content":"* The name of the exercise should be a `String`.","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"Song0180"},"content":"* The tag value should be `E` in the upper case, which specifies that the current record is for **exercise data**.","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"Song0180"},"content":"* The default unit of duration is in **minutes**. An `integer` is expected for the duration, other formats are **not acceptable**.","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"Song0180"},"content":"* The date of the exercise activity `[date/DD-MM-YYYY]` is optional. If not provided, the system date will be used.","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"Song0180"},"content":"* The date should be **less than or equal to** the current date.","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"Song0180"},"content":"* The date format should be `DD-MM-YYYY`, other formats are not acceptable.","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Example of usage:  ","lastModifiedDate":"2020-05-24"},{"lineNumber":74,"author":{"gitId":"Song0180"},"content":"`add t/E a/running d/40`","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"Song0180"},"content":"Output:","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"Song0180"},"content":"A new exercise activity record is added successfully!","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"Song0180"},"content":"Record summary: 40 minutes running exercise on XX-XX-XXXX(Today).","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":82,"author":{"gitId":"lowwilliam"},"content":"Examples:","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"Song0180"},"content":"`add t/E a/football d/60 date/05-01-2020`","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":85,"author":{"gitId":"Song0180"},"content":"Output:","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-12"},{"lineNumber":87,"author":{"gitId":"Song0180"},"content":"A new exercise activity record is added successfully!","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"Song0180"},"content":"Record summary: 60 minutes football exercise on 05-01-2020.","lastModifiedDate":"2021-03-12"},{"lineNumber":89,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":91,"author":{"gitId":"lowwilliam"},"content":"### View Exercise Data: `view`","lastModifiedDate":"2021-03-18"},{"lineNumber":92,"author":{"gitId":"lowwilliam"},"content":"View one exercise activity with the duration and the date.","lastModifiedDate":"2021-03-18"},{"lineNumber":93,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":94,"author":{"gitId":"lowwilliam"},"content":"Format: `view  t/E  [a/ACTIVITY_NAME]  [date/DD-MM-YYYY]`","lastModifiedDate":"2021-03-18"},{"lineNumber":95,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":96,"author":{"gitId":"lowwilliam"},"content":"* View existing exercise records. The records will be sorted by date in descending order (The latest record will be the first record).","lastModifiedDate":"2021-03-18"},{"lineNumber":97,"author":{"gitId":"lowwilliam"},"content":"* The tag value should be `E` in the upper case, which specifies the output for records of exercise data.","lastModifiedDate":"2021-03-18"},{"lineNumber":98,"author":{"gitId":"lowwilliam"},"content":"* The name and date of the exercise activity are optional fields used for filtering the records that will be displayed. If none, all existing records will be displayed.","lastModifiedDate":"2021-03-18"},{"lineNumber":99,"author":{"gitId":"lowwilliam"},"content":"* The name of the exercise activity may be specified to view records of the specified exercise activity. The name of the exercise should be a String.","lastModifiedDate":"2021-03-18"},{"lineNumber":100,"author":{"gitId":"lowwilliam"},"content":"* The date/activity name of the exercise activity may be specified to view records on the specified date.","lastModifiedDate":"2021-03-18"},{"lineNumber":101,"author":{"gitId":"lowwilliam"},"content":"* The date should be less than or equal to the current date.","lastModifiedDate":"2021-03-18"},{"lineNumber":102,"author":{"gitId":"baggiiiie"},"content":"* The date format should be `DD-MM-YYYY`, other formats are not acceptable.","lastModifiedDate":"2021-03-18"},{"lineNumber":103,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":104,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":105,"author":{"gitId":"baggiiiie"},"content":"Example of usage:  ","lastModifiedDate":"2021-03-18"},{"lineNumber":106,"author":{"gitId":"lowwilliam"},"content":"`view t/E a/football `","lastModifiedDate":"2021-03-18"},{"lineNumber":107,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":108,"author":{"gitId":"baggiiiie"},"content":"Output:","lastModifiedDate":"2021-03-18"},{"lineNumber":109,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":110,"author":{"gitId":"lowwilliam"},"content":"Displaying all football exercise records: ","lastModifiedDate":"2021-03-18"},{"lineNumber":111,"author":{"gitId":"lowwilliam"},"content":"Index    Date         Activity   Duration ","lastModifiedDate":"2021-03-18"},{"lineNumber":112,"author":{"gitId":"lowwilliam"},"content":"1        15-01-2020   football     60 min","lastModifiedDate":"2021-03-18"},{"lineNumber":113,"author":{"gitId":"lowwilliam"},"content":"2        05-01-2020   football     60 min","lastModifiedDate":"2021-03-18"},{"lineNumber":114,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":115,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":116,"author":{"gitId":"lowwilliam"},"content":"Examples:","lastModifiedDate":"2021-03-18"},{"lineNumber":117,"author":{"gitId":"lowwilliam"},"content":"`view t/E date/05-02-2020`","lastModifiedDate":"2021-03-18"},{"lineNumber":118,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":119,"author":{"gitId":"baggiiiie"},"content":"Output:","lastModifiedDate":"2021-03-18"},{"lineNumber":120,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":121,"author":{"gitId":"lowwilliam"},"content":"Displaying all exercise records on date 05-02-2020:","lastModifiedDate":"2021-03-18"},{"lineNumber":122,"author":{"gitId":"lowwilliam"},"content":"Index    Date         Activity   Duration ","lastModifiedDate":"2021-03-18"},{"lineNumber":123,"author":{"gitId":"lowwilliam"},"content":"1        05-01-2020   football     60 min","lastModifiedDate":"2021-03-18"},{"lineNumber":124,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":125,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":126,"author":{"gitId":"lowwilliam"},"content":"Examples:","lastModifiedDate":"2021-03-18"},{"lineNumber":127,"author":{"gitId":"Song0180"},"content":"`view t/E`","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":129,"author":{"gitId":"baggiiiie"},"content":"Output:","lastModifiedDate":"2021-03-18"},{"lineNumber":130,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":131,"author":{"gitId":"lowwilliam"},"content":"Displaying all exercise records:","lastModifiedDate":"2021-03-18"},{"lineNumber":132,"author":{"gitId":"lowwilliam"},"content":"Index    Date         Activity   Duration","lastModifiedDate":"2021-03-18"},{"lineNumber":133,"author":{"gitId":"lowwilliam"},"content":"1        15-01-2020   football     60 min","lastModifiedDate":"2021-03-18"},{"lineNumber":134,"author":{"gitId":"lowwilliam"},"content":"2        05-01-2020   football     60 min","lastModifiedDate":"2021-03-18"},{"lineNumber":135,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":136,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":137,"author":{"gitId":"lowwilliam"},"content":"### Delete Exercise Data: `delete`","lastModifiedDate":"2021-03-18"},{"lineNumber":138,"author":{"gitId":"lowwilliam"},"content":"Delete existing exercise record.","lastModifiedDate":"2021-03-18"},{"lineNumber":139,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":140,"author":{"gitId":"lowwilliam"},"content":"Format: `delete  t/E i/INDEX`","lastModifiedDate":"2021-03-18"},{"lineNumber":141,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":142,"author":{"gitId":"lowwilliam"},"content":"* Delete a single exercise record using the Index of the record.","lastModifiedDate":"2021-03-18"},{"lineNumber":143,"author":{"gitId":"lowwilliam"},"content":"* The tag value should be `E` in the upper case, which specifies that the operation is for exercise data.","lastModifiedDate":"2021-03-18"},{"lineNumber":144,"author":{"gitId":"lowwilliam"},"content":"* The index of the record must be specified. The index must be an `integer` within the range of the total number of records, index out of range or other formats are not acceptable.","lastModifiedDate":"2021-03-18"},{"lineNumber":145,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":146,"author":{"gitId":"baggiiiie"},"content":"Example of usage:  ","lastModifiedDate":"2021-03-18"},{"lineNumber":147,"author":{"gitId":"lowwilliam"},"content":"`Delete t/E i/1`","lastModifiedDate":"2021-03-18"},{"lineNumber":148,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":149,"author":{"gitId":"baggiiiie"},"content":"Output:","lastModifiedDate":"2021-03-18"},{"lineNumber":150,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":151,"author":{"gitId":"lowwilliam"},"content":"You have successfully deleted the exercise record of index 1!","lastModifiedDate":"2021-03-18"},{"lineNumber":152,"author":{"gitId":"lowwilliam"},"content":"Record summary: 15-01-2020   football     60 min","lastModifiedDate":"2021-03-18"},{"lineNumber":153,"author":{"gitId":"baggiiiie"},"content":"Displaying current exercise records:","lastModifiedDate":"2021-03-18"},{"lineNumber":154,"author":{"gitId":"lowwilliam"},"content":"Index    Date         Activity   Duration ","lastModifiedDate":"2021-03-18"},{"lineNumber":155,"author":{"gitId":"lowwilliam"},"content":"1        05-01-2020   football     60 min","lastModifiedDate":"2021-03-18"},{"lineNumber":156,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":157,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":158,"author":{"gitId":"lowwilliam"},"content":"### Input Diet Data: `add`","lastModifiedDate":"2021-03-18"},{"lineNumber":159,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":160,"author":{"gitId":"lowwilliam"},"content":"Add one exercise activity with the duration and the date","lastModifiedDate":"2021-03-18"},{"lineNumber":161,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":162,"author":{"gitId":"lowwilliam"},"content":"Format: `add  t/D f/FOOD_NAME  w/WEIGHT  [date/DD-MM-YYYY]`","lastModifiedDate":"2021-03-18"},{"lineNumber":163,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":164,"author":{"gitId":"lowwilliam"},"content":"* Add one record. The name of diet and weight must be specified. The name of the exercise should be a String.","lastModifiedDate":"2021-03-18"},{"lineNumber":165,"author":{"gitId":"lowwilliam"},"content":"* The tag value should be `D` in the upper case, which specifies that the current record is for exercise data.","lastModifiedDate":"2021-03-18"},{"lineNumber":166,"author":{"gitId":"lowwilliam"},"content":"* The default unit of weight is in grams. An `integer` is expected for the duration, other formats are not acceptable.","lastModifiedDate":"2021-03-18"},{"lineNumber":167,"author":{"gitId":"lowwilliam"},"content":"* The date of the exercise activity is optional. If not provided, the system date will be used.","lastModifiedDate":"2021-03-18"},{"lineNumber":168,"author":{"gitId":"baggiiiie"},"content":"* The date should be less than or equal to the current date.","lastModifiedDate":"2021-03-18"},{"lineNumber":169,"author":{"gitId":"baggiiiie"},"content":"* The date format should be `DD-MM-YYYY`, other formats are not acceptable.","lastModifiedDate":"2021-03-18"},{"lineNumber":170,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":171,"author":{"gitId":"lowwilliam"},"content":"Examples:","lastModifiedDate":"2021-03-18"},{"lineNumber":172,"author":{"gitId":"lowwilliam"},"content":"`add t/D a/bread d/400`","lastModifiedDate":"2021-03-18"},{"lineNumber":173,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":174,"author":{"gitId":"baggiiiie"},"content":"Output:","lastModifiedDate":"2021-03-18"},{"lineNumber":175,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":176,"author":{"gitId":"lowwilliam"},"content":"A new diet item record is added successfully!","lastModifiedDate":"2021-03-18"},{"lineNumber":177,"author":{"gitId":"lowwilliam"},"content":"Record summary: 40g bread on XX-XX-XXXX(Today).","lastModifiedDate":"2021-03-18"},{"lineNumber":178,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":179,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":180,"author":{"gitId":"lowwilliam"},"content":"### View Diet Data: `view`","lastModifiedDate":"2021-03-18"},{"lineNumber":181,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":182,"author":{"gitId":"lowwilliam"},"content":"View diet details on a specific date.","lastModifiedDate":"2021-03-18"},{"lineNumber":183,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":184,"author":{"gitId":"lowwilliam"},"content":"Format: `view  t/D  [a/FOOD_NAME]  [date/DD-MM-YYYY]`","lastModifiedDate":"2021-03-18"},{"lineNumber":185,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":186,"author":{"gitId":"lowwilliam"},"content":"* View existing records. The records will be sorted by date in descending order (The latest record will be the first record).","lastModifiedDate":"2021-03-18"},{"lineNumber":187,"author":{"gitId":"lowwilliam"},"content":"* The tag value should be `D` in the upper case, which specifies the output for records of exercise data.","lastModifiedDate":"2021-03-18"},{"lineNumber":188,"author":{"gitId":"lowwilliam"},"content":"* The name and date of the food item are optional fields used for filtering the records that will be displayed. If none, all existing records will be displayed.","lastModifiedDate":"2021-03-18"},{"lineNumber":189,"author":{"gitId":"lowwilliam"},"content":"* The name of the food may be specified to view records of the specified food. The name of the food should be a `String`.","lastModifiedDate":"2021-03-18"},{"lineNumber":190,"author":{"gitId":"lowwilliam"},"content":"* The date/ name of the food may be specified to view records on the specified date.","lastModifiedDate":"2021-03-18"},{"lineNumber":191,"author":{"gitId":"lowwilliam"},"content":"* The date should be less than or equal to the current date.","lastModifiedDate":"2021-03-18"},{"lineNumber":192,"author":{"gitId":"lowwilliam"},"content":"* The date format should be `DD-MM-YYYY`, other formats are not acceptable.","lastModifiedDate":"2021-03-18"},{"lineNumber":193,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":194,"author":{"gitId":"lowwilliam"},"content":"Examples:","lastModifiedDate":"2021-03-18"},{"lineNumber":195,"author":{"gitId":"lowwilliam"},"content":"`view t/D a/bread view`","lastModifiedDate":"2021-03-18"},{"lineNumber":196,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":197,"author":{"gitId":"baggiiiie"},"content":"Output:","lastModifiedDate":"2021-03-18"},{"lineNumber":198,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":199,"author":{"gitId":"lowwilliam"},"content":"Displaying all bread intake records:","lastModifiedDate":"2021-03-18"},{"lineNumber":200,"author":{"gitId":"lowwilliam"},"content":"Index    Date         Food Item    Weight","lastModifiedDate":"2021-03-18"},{"lineNumber":201,"author":{"gitId":"lowwilliam"},"content":"1        15-01-2020   bread        160 g","lastModifiedDate":"2021-03-18"},{"lineNumber":202,"author":{"gitId":"lowwilliam"},"content":"2        05-01-2020   bread        120 g","lastModifiedDate":"2021-03-18"},{"lineNumber":203,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":204,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":205,"author":{"gitId":"lowwilliam"},"content":"Examples:","lastModifiedDate":"2021-03-18"},{"lineNumber":206,"author":{"gitId":"lowwilliam"},"content":"`view t/D date/05-02-2020`","lastModifiedDate":"2021-03-18"},{"lineNumber":207,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":208,"author":{"gitId":"baggiiiie"},"content":"Output:","lastModifiedDate":"2021-03-18"},{"lineNumber":209,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":210,"author":{"gitId":"lowwilliam"},"content":"Displaying all diet records on date 05-02-2020:","lastModifiedDate":"2021-03-18"},{"lineNumber":211,"author":{"gitId":"lowwilliam"},"content":"Index    Date         Food Item    Weight","lastModifiedDate":"2021-03-18"},{"lineNumber":212,"author":{"gitId":"lowwilliam"},"content":"1        05-01-2020   bread        160 g","lastModifiedDate":"2021-03-18"},{"lineNumber":213,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":214,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":215,"author":{"gitId":"lowwilliam"},"content":"Examples:","lastModifiedDate":"2021-03-18"},{"lineNumber":216,"author":{"gitId":"lowwilliam"},"content":"`view t/E`","lastModifiedDate":"2021-03-18"},{"lineNumber":217,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":218,"author":{"gitId":"baggiiiie"},"content":"Output:","lastModifiedDate":"2021-03-18"},{"lineNumber":219,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":220,"author":{"gitId":"lowwilliam"},"content":"Displaying all diet records:","lastModifiedDate":"2021-03-18"},{"lineNumber":221,"author":{"gitId":"lowwilliam"},"content":"Index    Date         Food Item    Weight","lastModifiedDate":"2021-03-18"},{"lineNumber":222,"author":{"gitId":"lowwilliam"},"content":"1        15-01-2020   bread        160 g","lastModifiedDate":"2021-03-18"},{"lineNumber":223,"author":{"gitId":"lowwilliam"},"content":"2        05-01-2020   bread        120 g","lastModifiedDate":"2021-03-18"},{"lineNumber":224,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":225,"author":{"gitId":"lowwilliam"},"content":"### Delete Diet Data: `delete`","lastModifiedDate":"2021-03-18"},{"lineNumber":226,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":227,"author":{"gitId":"lowwilliam"},"content":"Delete existing exercise record.","lastModifiedDate":"2021-03-18"},{"lineNumber":228,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":229,"author":{"gitId":"lowwilliam"},"content":"Format: `delete  t/D i/INDEX`","lastModifiedDate":"2021-03-18"},{"lineNumber":230,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":231,"author":{"gitId":"lowwilliam"},"content":"* Delete a single diet record using the Index of the record.","lastModifiedDate":"2021-03-18"},{"lineNumber":232,"author":{"gitId":"lowwilliam"},"content":"* The tag value should be `D` in the upper case, which specifies that the operation is for exercise data.","lastModifiedDate":"2021-03-18"},{"lineNumber":233,"author":{"gitId":"baggiiiie"},"content":"* The index of the record must be specified. The index must be an `integer` within the range of the total number of records, index out of range or other formats are not acceptable.","lastModifiedDate":"2021-03-18"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":235,"author":{"gitId":"lowwilliam"},"content":"Examples:","lastModifiedDate":"2021-03-18"},{"lineNumber":236,"author":{"gitId":"lowwilliam"},"content":"`Delete t/E i/1`","lastModifiedDate":"2021-03-18"},{"lineNumber":237,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":238,"author":{"gitId":"baggiiiie"},"content":"Output:","lastModifiedDate":"2021-03-18"},{"lineNumber":239,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":240,"author":{"gitId":"lowwilliam"},"content":"You have successfully deleted the diet record of index 1!","lastModifiedDate":"2021-03-18"},{"lineNumber":241,"author":{"gitId":"lowwilliam"},"content":"Record summary: 15-01-2020   bread     60 g","lastModifiedDate":"2021-03-18"},{"lineNumber":242,"author":{"gitId":"lowwilliam"},"content":"Displaying current diet records:","lastModifiedDate":"2021-03-18"},{"lineNumber":243,"author":{"gitId":"lowwilliam"},"content":"Index    Date         Diet    Weight","lastModifiedDate":"2021-03-18"},{"lineNumber":244,"author":{"gitId":"lowwilliam"},"content":"1        05-01-2020   egg     60 g","lastModifiedDate":"2021-03-18"},{"lineNumber":245,"author":{"gitId":"baggiiiie"},"content":"```","lastModifiedDate":"2021-03-18"},{"lineNumber":246,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":247,"author":{"gitId":"Song0180"},"content":"### Set a daily or weekly goal for exercise: `set`","lastModifiedDate":"2021-03-30"},{"lineNumber":248,"author":{"gitId":"Song0180"},"content":"Set a daily/weekly exercise goal with a target energy (in calories) to burn.","lastModifiedDate":"2021-03-30"},{"lineNumber":249,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":250,"author":{"gitId":"Song0180"},"content":"Format: `set  t/E p/PERIOD_TYPE target/ENERGY`","lastModifiedDate":"2021-03-27"},{"lineNumber":251,"author":{"gitId":"Song0180"},"content":" ","lastModifiedDate":"2021-03-27"},{"lineNumber":252,"author":{"gitId":"Song0180"},"content":"* The tag value should be `E` in the upper case, which specifies that the current goal is for **exercise data**.","lastModifiedDate":"2021-03-30"},{"lineNumber":253,"author":{"gitId":"Song0180"},"content":"* The period type can be `D`, and `W` corresponding to **daily and weekly**. ","lastModifiedDate":"2021-03-27"},{"lineNumber":254,"author":{"gitId":"Song0180"},"content":"* The default unit of energy is in **kcal**. A **float number** is expected for the energy to burn, other formats are **not acceptable**.","lastModifiedDate":"2021-03-30"},{"lineNumber":255,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":256,"author":{"gitId":"Song0180"},"content":"Example of usage:  ","lastModifiedDate":"2021-03-27"},{"lineNumber":257,"author":{"gitId":"Song0180"},"content":"`set t/E p/D target/0.5`","lastModifiedDate":"2021-03-27"},{"lineNumber":258,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":259,"author":{"gitId":"Song0180"},"content":"Output:","lastModifiedDate":"2021-03-27"},{"lineNumber":260,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-27"},{"lineNumber":261,"author":{"gitId":"Song0180"},"content":"A new exercise goal is set successfully!","lastModifiedDate":"2021-03-27"},{"lineNumber":262,"author":{"gitId":"Song0180"},"content":"Date Set: 27-03-2021","lastModifiedDate":"2021-03-27"},{"lineNumber":263,"author":{"gitId":"Song0180"},"content":"Goal Type: Daily exercise","lastModifiedDate":"2021-03-27"},{"lineNumber":264,"author":{"gitId":"Song0180"},"content":"Target: 0.5kcal","lastModifiedDate":"2021-03-27"},{"lineNumber":265,"author":{"gitId":"Song0180"},"content":"Progress: 0kcal","lastModifiedDate":"2021-03-27"},{"lineNumber":266,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-27"},{"lineNumber":267,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":268,"author":{"gitId":"Song0180"},"content":"Example of usage:  ","lastModifiedDate":"2021-03-27"},{"lineNumber":269,"author":{"gitId":"Song0180"},"content":"`set t/E p/W target/10`","lastModifiedDate":"2021-03-27"},{"lineNumber":270,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":271,"author":{"gitId":"Song0180"},"content":"Output:","lastModifiedDate":"2021-03-27"},{"lineNumber":272,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-27"},{"lineNumber":273,"author":{"gitId":"Song0180"},"content":"A new exercise goal is set successfully!","lastModifiedDate":"2021-03-27"},{"lineNumber":274,"author":{"gitId":"Song0180"},"content":"Date Set: 27-03-2021","lastModifiedDate":"2021-03-27"},{"lineNumber":275,"author":{"gitId":"Song0180"},"content":"Goal Type: Weekly exercise","lastModifiedDate":"2021-03-30"},{"lineNumber":276,"author":{"gitId":"Song0180"},"content":"Target: 10kcal","lastModifiedDate":"2021-03-30"},{"lineNumber":277,"author":{"gitId":"Song0180"},"content":"Progress: 0kcal","lastModifiedDate":"2021-03-30"},{"lineNumber":278,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-30"},{"lineNumber":279,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":280,"author":{"gitId":"Song0180"},"content":"### Set a daily or weekly goal for sleep: `set`","lastModifiedDate":"2021-03-30"},{"lineNumber":281,"author":{"gitId":"Song0180"},"content":"Set a daily/weekly sleep goal with a target duration (in hours).","lastModifiedDate":"2021-03-30"},{"lineNumber":282,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":283,"author":{"gitId":"Song0180"},"content":"Format: `set  t/S p/PERIOD_TYPE target/DURATION`","lastModifiedDate":"2021-03-30"},{"lineNumber":284,"author":{"gitId":"Song0180"},"content":" ","lastModifiedDate":"2021-03-30"},{"lineNumber":285,"author":{"gitId":"Song0180"},"content":"* The tag value should be `S` in the upper case, which specifies that the current goal is for **sleep data**.","lastModifiedDate":"2021-03-30"},{"lineNumber":286,"author":{"gitId":"Song0180"},"content":"* The period type can be `D`, and `W` corresponding to **daily and weekly**. ","lastModifiedDate":"2021-03-30"},{"lineNumber":287,"author":{"gitId":"Song0180"},"content":"* The default unit of duration is in **hours**. The format of the durtaion should be either `X` or `X.5`, where `X` is an integer between `0` and `23` and `0.5` means half an hour. Other formats are **not acceptable**.","lastModifiedDate":"2021-03-30"},{"lineNumber":288,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":289,"author":{"gitId":"Song0180"},"content":"Example of usage:  ","lastModifiedDate":"2021-03-30"},{"lineNumber":290,"author":{"gitId":"Song0180"},"content":"`set t/S p/D target/8.5`","lastModifiedDate":"2021-03-30"},{"lineNumber":291,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":292,"author":{"gitId":"Song0180"},"content":"Output:","lastModifiedDate":"2021-03-30"},{"lineNumber":293,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-30"},{"lineNumber":294,"author":{"gitId":"Song0180"},"content":"A new sleep goal is set successfully!","lastModifiedDate":"2021-03-30"},{"lineNumber":295,"author":{"gitId":"Song0180"},"content":"Date Set: 27-03-2021","lastModifiedDate":"2021-03-30"},{"lineNumber":296,"author":{"gitId":"Song0180"},"content":"Goal Type: Daily sleep","lastModifiedDate":"2021-03-30"},{"lineNumber":297,"author":{"gitId":"Song0180"},"content":"Target: 8.5hours","lastModifiedDate":"2021-03-30"},{"lineNumber":298,"author":{"gitId":"Song0180"},"content":"Progress: 0hours","lastModifiedDate":"2021-03-30"},{"lineNumber":299,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-30"},{"lineNumber":300,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":301,"author":{"gitId":"Song0180"},"content":"Example of usage:  ","lastModifiedDate":"2021-03-30"},{"lineNumber":302,"author":{"gitId":"Song0180"},"content":"`set t/S p/W target/50`","lastModifiedDate":"2021-03-30"},{"lineNumber":303,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":304,"author":{"gitId":"Song0180"},"content":"Output:","lastModifiedDate":"2021-03-30"},{"lineNumber":305,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-30"},{"lineNumber":306,"author":{"gitId":"Song0180"},"content":"A new sleep goal is set successfully!","lastModifiedDate":"2021-03-30"},{"lineNumber":307,"author":{"gitId":"Song0180"},"content":"Date Set: 27-03-2021","lastModifiedDate":"2021-03-30"},{"lineNumber":308,"author":{"gitId":"Song0180"},"content":"Goal Type: Weekly sleep","lastModifiedDate":"2021-03-30"},{"lineNumber":309,"author":{"gitId":"Song0180"},"content":"Target: 50hours","lastModifiedDate":"2021-03-30"},{"lineNumber":310,"author":{"gitId":"Song0180"},"content":"Progress: 0hours","lastModifiedDate":"2021-03-30"},{"lineNumber":311,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-30"},{"lineNumber":312,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":313,"author":{"gitId":"Song0180"},"content":"### Set a daily or weekly goal for diet: `set`","lastModifiedDate":"2021-03-30"},{"lineNumber":314,"author":{"gitId":"Song0180"},"content":"Set a daily/weekly diet goal with a target energy (in calories) to take in.","lastModifiedDate":"2021-03-30"},{"lineNumber":315,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":316,"author":{"gitId":"Song0180"},"content":"Format: `set  t/D p/PERIOD_TYPE target/ENERGY`","lastModifiedDate":"2021-03-30"},{"lineNumber":317,"author":{"gitId":"Song0180"},"content":" ","lastModifiedDate":"2021-03-30"},{"lineNumber":318,"author":{"gitId":"Song0180"},"content":"* The tag value should be `D` in the upper case, which specifies that the current goal is for **diet data**.","lastModifiedDate":"2021-03-30"},{"lineNumber":319,"author":{"gitId":"Song0180"},"content":"* The period type can be `D`, and `W` corresponding to **daily and weekly**. ","lastModifiedDate":"2021-03-30"},{"lineNumber":320,"author":{"gitId":"Song0180"},"content":"* The default unit of energy is in **kcal**. A **float number** is expected for the energy take in, other formats are **not acceptable**.","lastModifiedDate":"2021-03-30"},{"lineNumber":321,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":322,"author":{"gitId":"Song0180"},"content":"Example of usage:  ","lastModifiedDate":"2021-03-30"},{"lineNumber":323,"author":{"gitId":"Song0180"},"content":"`set t/D p/D target/0.2`","lastModifiedDate":"2021-03-30"},{"lineNumber":324,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":325,"author":{"gitId":"Song0180"},"content":"Output:","lastModifiedDate":"2021-03-30"},{"lineNumber":326,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-30"},{"lineNumber":327,"author":{"gitId":"Song0180"},"content":"A new diet goal is set successfully!","lastModifiedDate":"2021-03-30"},{"lineNumber":328,"author":{"gitId":"Song0180"},"content":"Date Set: 27-03-2021","lastModifiedDate":"2021-03-30"},{"lineNumber":329,"author":{"gitId":"Song0180"},"content":"Goal Type: Daily diet","lastModifiedDate":"2021-03-30"},{"lineNumber":330,"author":{"gitId":"Song0180"},"content":"Target: 0.2kcal","lastModifiedDate":"2021-03-30"},{"lineNumber":331,"author":{"gitId":"Song0180"},"content":"Progress: 0kcal","lastModifiedDate":"2021-03-30"},{"lineNumber":332,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-30"},{"lineNumber":333,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":334,"author":{"gitId":"Song0180"},"content":"Example of usage:  ","lastModifiedDate":"2021-03-30"},{"lineNumber":335,"author":{"gitId":"Song0180"},"content":"`set t/D p/W target/5`","lastModifiedDate":"2021-03-30"},{"lineNumber":336,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":337,"author":{"gitId":"Song0180"},"content":"Output:","lastModifiedDate":"2021-03-30"},{"lineNumber":338,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-30"},{"lineNumber":339,"author":{"gitId":"Song0180"},"content":"A new diet goal is set successfully!","lastModifiedDate":"2021-03-30"},{"lineNumber":340,"author":{"gitId":"Song0180"},"content":"Date Set: 27-03-2021","lastModifiedDate":"2021-03-30"},{"lineNumber":341,"author":{"gitId":"Song0180"},"content":"Goal Type: Weekly diet","lastModifiedDate":"2021-03-30"},{"lineNumber":342,"author":{"gitId":"Song0180"},"content":"Target: 5kcal","lastModifiedDate":"2021-03-30"},{"lineNumber":343,"author":{"gitId":"Song0180"},"content":"Progress: 0kcal","lastModifiedDate":"2021-03-30"},{"lineNumber":344,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-30"},{"lineNumber":345,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":346,"author":{"gitId":"Song0180"},"content":"### Set a daily or weekly goal for body weight: `set`","lastModifiedDate":"2021-03-30"},{"lineNumber":347,"author":{"gitId":"Song0180"},"content":"Set a daily/weekly body weight goal with a target weight (in kg).","lastModifiedDate":"2021-03-30"},{"lineNumber":348,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":349,"author":{"gitId":"Song0180"},"content":"Format: `set  t/W p/PERIOD_TYPE target/WEIGHT`","lastModifiedDate":"2021-03-30"},{"lineNumber":350,"author":{"gitId":"Song0180"},"content":" ","lastModifiedDate":"2021-03-30"},{"lineNumber":351,"author":{"gitId":"Song0180"},"content":"* The tag value should be `W` in the upper case, which specifies that the current goal is for **body weight data**.","lastModifiedDate":"2021-03-30"},{"lineNumber":352,"author":{"gitId":"Song0180"},"content":"* The period type can be `D`, and `W` corresponding to **daily and weekly**. ","lastModifiedDate":"2021-03-30"},{"lineNumber":353,"author":{"gitId":"Song0180"},"content":"* The default unit of weight is in **kg**. A **float number** is expected for the weight, other formats are **not acceptable**.","lastModifiedDate":"2021-03-30"},{"lineNumber":354,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":355,"author":{"gitId":"Song0180"},"content":"Example of usage:  ","lastModifiedDate":"2021-03-30"},{"lineNumber":356,"author":{"gitId":"Song0180"},"content":"`set t/W p/D target/50`","lastModifiedDate":"2021-03-30"},{"lineNumber":357,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":358,"author":{"gitId":"Song0180"},"content":"Output:","lastModifiedDate":"2021-03-30"},{"lineNumber":359,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-30"},{"lineNumber":360,"author":{"gitId":"Song0180"},"content":"A new bodyweight goal is set successfully!","lastModifiedDate":"2021-03-30"},{"lineNumber":361,"author":{"gitId":"Song0180"},"content":"Date Set: 27-03-2021","lastModifiedDate":"2021-03-30"},{"lineNumber":362,"author":{"gitId":"Song0180"},"content":"Goal Type: Daily bodyweight","lastModifiedDate":"2021-03-30"},{"lineNumber":363,"author":{"gitId":"Song0180"},"content":"Target: 50kg","lastModifiedDate":"2021-03-30"},{"lineNumber":364,"author":{"gitId":"Song0180"},"content":"Progress: 61kg","lastModifiedDate":"2021-03-30"},{"lineNumber":365,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-30"},{"lineNumber":366,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":367,"author":{"gitId":"Song0180"},"content":"Example of usage:  ","lastModifiedDate":"2021-03-30"},{"lineNumber":368,"author":{"gitId":"Song0180"},"content":"`set t/W p/W target/50`","lastModifiedDate":"2021-03-30"},{"lineNumber":369,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":370,"author":{"gitId":"Song0180"},"content":"Output:","lastModifiedDate":"2021-03-30"},{"lineNumber":371,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-30"},{"lineNumber":372,"author":{"gitId":"Song0180"},"content":"A new exercise goal is set successfully!","lastModifiedDate":"2021-03-30"},{"lineNumber":373,"author":{"gitId":"Song0180"},"content":"Date Set: 27-03-2021","lastModifiedDate":"2021-03-30"},{"lineNumber":374,"author":{"gitId":"Song0180"},"content":"Goal Type: Weekly exercise","lastModifiedDate":"2021-03-30"},{"lineNumber":375,"author":{"gitId":"Song0180"},"content":"Target: 50kg","lastModifiedDate":"2021-03-30"},{"lineNumber":376,"author":{"gitId":"Song0180"},"content":"Progress: 61kg","lastModifiedDate":"2021-03-30"},{"lineNumber":377,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-27"},{"lineNumber":378,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":379,"author":{"gitId":"Song0180"},"content":"### Check the progress of goals: `check`","lastModifiedDate":"2021-03-27"},{"lineNumber":380,"author":{"gitId":"Song0180"},"content":"Check the current progress of goals set by the user.","lastModifiedDate":"2021-03-27"},{"lineNumber":381,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":382,"author":{"gitId":"Song0180"},"content":"Format: `check  t/TAG [p/PERIOD_TYPE]`","lastModifiedDate":"2021-03-27"},{"lineNumber":383,"author":{"gitId":"Song0180"},"content":" ","lastModifiedDate":"2021-03-27"},{"lineNumber":384,"author":{"gitId":"Song0180"},"content":"* The tag value should only be `E`, `S`, `D`, `W`. It specifies the kind of goal (exercise, sleep, diet and body weight) to check.","lastModifiedDate":"2021-03-27"},{"lineNumber":385,"author":{"gitId":"Song0180"},"content":"* The period type can be `D`, and `W`corresponding to **daily and weekly**. It is optional.","lastModifiedDate":"2021-03-27"},{"lineNumber":386,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":387,"author":{"gitId":"Song0180"},"content":"Example of usage:  ","lastModifiedDate":"2021-03-27"},{"lineNumber":388,"author":{"gitId":"Song0180"},"content":"`check t/E`","lastModifiedDate":"2021-03-27"},{"lineNumber":389,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":390,"author":{"gitId":"Song0180"},"content":"Output:","lastModifiedDate":"2021-03-27"},{"lineNumber":391,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-27"},{"lineNumber":392,"author":{"gitId":"Song0180"},"content":"Checking the progress of exercise goals:","lastModifiedDate":"2021-03-27"},{"lineNumber":393,"author":{"gitId":"Song0180"},"content":"Index    Date Set     Goal Type    Target       Progress","lastModifiedDate":"2021-03-27"},{"lineNumber":394,"author":{"gitId":"Song0180"},"content":"1        15-01-2020   Daily        0.5kcal      Finished","lastModifiedDate":"2021-03-27"},{"lineNumber":395,"author":{"gitId":"Song0180"},"content":"2        05-01-2020   Weekly       10kcal       8.5kcal","lastModifiedDate":"2021-03-27"},{"lineNumber":396,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":397,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-27"},{"lineNumber":398,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":399,"author":{"gitId":"Song0180"},"content":"Example of usage:  ","lastModifiedDate":"2021-03-27"},{"lineNumber":400,"author":{"gitId":"Song0180"},"content":"`check t/E p/W`","lastModifiedDate":"2021-03-27"},{"lineNumber":401,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":402,"author":{"gitId":"Song0180"},"content":"Output:","lastModifiedDate":"2021-03-27"},{"lineNumber":403,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-27"},{"lineNumber":404,"author":{"gitId":"Song0180"},"content":"Checking the progress of exercise goals:","lastModifiedDate":"2021-03-27"},{"lineNumber":405,"author":{"gitId":"Song0180"},"content":"Index    Date Set     Goal Type    Target       Progress","lastModifiedDate":"2021-03-27"},{"lineNumber":406,"author":{"gitId":"Song0180"},"content":"1        05-01-2020   Weekly       10kcal       8.5kcal","lastModifiedDate":"2021-03-27"},{"lineNumber":407,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-27"},{"lineNumber":408,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":409,"author":{"gitId":"Song0180"},"content":"### Cancel a goal: `cancel`","lastModifiedDate":"2021-03-27"},{"lineNumber":410,"author":{"gitId":"Song0180"},"content":"Cancel a goal set by the user.","lastModifiedDate":"2021-03-27"},{"lineNumber":411,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":412,"author":{"gitId":"Song0180"},"content":"Format: `cancel  t/TAG i/INDEX`","lastModifiedDate":"2021-03-30"},{"lineNumber":413,"author":{"gitId":"Song0180"},"content":" ","lastModifiedDate":"2021-03-27"},{"lineNumber":414,"author":{"gitId":"Song0180"},"content":"* The tag value should only be `E`, `S`, `D`, `W`. It specifies the kind of goal (exercise, sleep, diet and body weight) to check.","lastModifiedDate":"2021-03-27"},{"lineNumber":415,"author":{"gitId":"Song0180"},"content":"* The index of the record **must** be specified. ","lastModifiedDate":"2021-03-27"},{"lineNumber":416,"author":{"gitId":"Song0180"},"content":"* The index must be an `integer` within the range of the total number of records, index out of range or other formats are not acceptable.","lastModifiedDate":"2021-03-27"},{"lineNumber":417,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":418,"author":{"gitId":"Song0180"},"content":"Example of usage:  ","lastModifiedDate":"2021-03-27"},{"lineNumber":419,"author":{"gitId":"Song0180"},"content":"`cancel t/E i/1`","lastModifiedDate":"2021-03-30"},{"lineNumber":420,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":421,"author":{"gitId":"Song0180"},"content":"Output:","lastModifiedDate":"2021-03-27"},{"lineNumber":422,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-27"},{"lineNumber":423,"author":{"gitId":"Song0180"},"content":"You have successfully canceled a goal for exercise!","lastModifiedDate":"2021-03-27"},{"lineNumber":424,"author":{"gitId":"Song0180"},"content":"Goal summary: Daily exercise with target energy 0.5kcal.","lastModifiedDate":"2021-03-27"},{"lineNumber":425,"author":{"gitId":"Song0180"},"content":"Displaying current exercise goals:","lastModifiedDate":"2021-03-27"},{"lineNumber":426,"author":{"gitId":"Song0180"},"content":"Index    Date Set     Goal Type    Target       Progress","lastModifiedDate":"2021-03-27"},{"lineNumber":427,"author":{"gitId":"Song0180"},"content":"1        05-01-2020   Weekly       10kcal       8.5kcal","lastModifiedDate":"2021-03-27"},{"lineNumber":428,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-27"},{"lineNumber":429,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":430,"author":{"gitId":"Song0180"},"content":"Example of usage:  ","lastModifiedDate":"2021-03-27"},{"lineNumber":431,"author":{"gitId":"Song0180"},"content":"`cancel t/E i/1`","lastModifiedDate":"2021-03-30"},{"lineNumber":432,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":433,"author":{"gitId":"Song0180"},"content":"Output:","lastModifiedDate":"2021-03-27"},{"lineNumber":434,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-27"},{"lineNumber":435,"author":{"gitId":"Song0180"},"content":"You have successfully canceled a goal for exercise!","lastModifiedDate":"2021-03-27"},{"lineNumber":436,"author":{"gitId":"Song0180"},"content":"Goal summary: Weekly exercise with target energy 10kcal.","lastModifiedDate":"2021-03-27"},{"lineNumber":437,"author":{"gitId":"Song0180"},"content":"Displaying current exercise goals:","lastModifiedDate":"2021-03-27"},{"lineNumber":438,"author":{"gitId":"Song0180"},"content":"No goals are found. Try set a goal with command \u0027set\u0027.","lastModifiedDate":"2021-03-27"},{"lineNumber":439,"author":{"gitId":"Song0180"},"content":"```","lastModifiedDate":"2021-03-27"},{"lineNumber":440,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":441,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":443,"author":{"gitId":"lowwilliam"},"content":"**Q**: {What is the format of date?}","lastModifiedDate":"2021-03-18"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":445,"author":{"gitId":"lowwilliam"},"content":"**A**: {The date format should be DD-MM-YYYY}","lastModifiedDate":"2021-03-18"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":447,"author":{"gitId":"Song0180"},"content":"## Command summary","lastModifiedDate":"2021-03-12"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":449,"author":{"gitId":"lowwilliam"},"content":"Action | Format | Examples","lastModifiedDate":"2021-03-18"},{"lineNumber":450,"author":{"gitId":"lowwilliam"},"content":"--- | --- | --- |","lastModifiedDate":"2021-03-18"},{"lineNumber":451,"author":{"gitId":"Song0180"},"content":"Help | `help`","lastModifiedDate":"2021-03-12"},{"lineNumber":452,"author":{"gitId":"lowwilliam"},"content":"Input Exercise Data: `add` | `add  t/E a/ACTIVITY_NAME  d/DURATION  [date/DD-MM-YYYY]` | `add t/E a/running d/40`","lastModifiedDate":"2021-03-18"},{"lineNumber":453,"author":{"gitId":"lowwilliam"},"content":"View Exercise Data: `view` | `view  t/E  [a/ACTIVITY_NAME]  [date/DD-MM-YYYY]` | `view t/E a/football`","lastModifiedDate":"2021-03-18"},{"lineNumber":454,"author":{"gitId":"lowwilliam"},"content":"Delete Exercise Data: `delete` | `delete  t/E i/INDEX` | `Delete t/E i/1`","lastModifiedDate":"2021-03-18"},{"lineNumber":455,"author":{"gitId":"lowwilliam"},"content":"Input Diet Data: `add` | `add  t/D f/FOOD_NAME  w/WEIGHT  [date/DD-MM-YYYY]` | `add t/D a/bread d/400`","lastModifiedDate":"2021-03-18"},{"lineNumber":456,"author":{"gitId":"lowwilliam"},"content":"View Diet Data: `view` | `view  t/D  [a/FOOD_NAME]  [date/DD-MM-YYYY]` | `view t/D a/bread`","lastModifiedDate":"2021-03-18"},{"lineNumber":457,"author":{"gitId":"lowwilliam"},"content":"Delete Diet Data: `delete` | `delete  t/D i/INDEX` | `Delete t/E i/1`","lastModifiedDate":"2021-03-18"},{"lineNumber":458,"author":{"gitId":"lowwilliam"},"content":"Input Sleep Data: `add` | `add  t/S  d/DURATION  [date/DD-MM-YYYY]` | `add t/S d/7`","lastModifiedDate":"2021-03-18"},{"lineNumber":459,"author":{"gitId":"lowwilliam"},"content":"View Sleep Data: `view` | `view  t/S  [date/DD-MM-YYYY]` | `view t/S`","lastModifiedDate":"2021-03-18"},{"lineNumber":460,"author":{"gitId":"lowwilliam"},"content":"Delete Sleep Data: `delete` | `delete  t/S i/INDEX` | `Delete t/S i/1`","lastModifiedDate":"2021-03-18"},{"lineNumber":461,"author":{"gitId":"lowwilliam"},"content":"Input bodyweight Data: `add` | `add  t/W w/WEIGHT [date/DD-MM-YYYY]` | `add t/W w/68.5 date/10-01-2021`","lastModifiedDate":"2021-03-18"},{"lineNumber":462,"author":{"gitId":"lowwilliam"},"content":"View bodyweight Data: `view` | `view  t/W  [date/DD-MM-YYYY]` | `view t/W date/05-01-2020`","lastModifiedDate":"2021-03-18"},{"lineNumber":463,"author":{"gitId":"lowwilliam"},"content":"Delete bodyweight Data: `delete` | `delete  t/W i/INDEX` | `Delete t/W i/1`","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"baggiiiie":68,"lowwilliam":103,"-":29,"Song0180":263}},{"path":"src/main/java/seedu/duke/Healthier.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.account.FitCenter;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.account.User;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"import seedu.duke.command.CommandResult;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"import seedu.duke.command.ExitCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.commandparser.CommandParser;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"import seedu.duke.goal.timemanager.TimeController;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.exception.TypeException;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"import seedu.duke.ui.UI;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"import java.io.File;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"public class Healthier {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"    private UI ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"    private Storage storage;","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"    private final User currentUser \u003d new User();","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"    private final FitCenter currentFitCenter \u003d currentUser.getFitCenter();","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"    private void start() {","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":"        ui \u003d new UI();","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"        TimeController timeController \u003d new TimeController();","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"        timeController.checkForTime(currentFitCenter);","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"PingruiLi"},"content":"        String recordFilePath \u003d \"data\" + File.separator + \"records.txt\";","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"PingruiLi"},"content":"        String goalFilePath \u003d \"data\" + File.separator + \"goals.txt\";","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"PingruiLi"},"content":"        try {","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"PingruiLi"},"content":"            storage \u003d new Storage(recordFilePath, goalFilePath);","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"PingruiLi"},"content":"            storage.readRecords(currentUser);","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"PingruiLi"},"content":"            storage.readGoals(currentUser);","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"PingruiLi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"PingruiLi"},"content":"            ui.showFileErrorMessage();","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"PingruiLi"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"PingruiLi"},"content":"            System.exit(0);","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"        } catch (ParseException | NumberFormatException | TypeException e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"PingruiLi"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"PingruiLi"},"content":"            ui.showFileParserErrorMessage();","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"PingruiLi"},"content":"            System.exit(0);","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"PingruiLi"},"content":"        ui.printGreetings();","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"PingruiLi"},"content":"        ui.showProgress(currentUser);","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"PingruiLi"},"content":"    private void loopCommand() throws IOException {","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"        CommandParser commandParser \u003d new CommandParser();","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"        Command command;","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"        do {","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"PingruiLi"},"content":"            String userInput \u003d ui.getUserInput();","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":"            command \u003d commandParser.parseCommand(userInput);","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"            CommandResult result \u003d command.execute(currentFitCenter);","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"Song0180"},"content":"            ui.printCommandResult(result);","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"PingruiLi"},"content":"            storage.store(currentUser);","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"PingruiLi"},"content":"            commandParser.clearParserParams();","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"        } while (!ExitCommand.isExitCommand(command));","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"Song0180"},"content":"    private void exit() {","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"PingruiLi"},"content":"        ui.printExitMessage();","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"Song0180"},"content":"        System.exit(0);","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"PingruiLi"},"content":"    public void run() {","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"PingruiLi"},"content":"        try {","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"PingruiLi"},"content":"            start();","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"PingruiLi"},"content":"            loopCommand();","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"Song0180"},"content":"            exit();","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"PingruiLi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"PingruiLi"},"content":"            ui.showFileErrorMessage();","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"PingruiLi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"Song0180"},"content":"        new Healthier().run();","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"PingruiLi":47,"-":5,"Song0180":26}},{"path":"src/main/java/seedu/duke/account/FitCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.account;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.command.CommandRecordType;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"import seedu.duke.goal.GoalList;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"import seedu.duke.goal.Goal;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"import seedu.duke.goal.PeriodType;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"import seedu.duke.record.Record;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"import seedu.duke.record.RecordList;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"import seedu.duke.record.RecordType;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandRecordType.EXERCISE;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandRecordType.DIET;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandRecordType.SLEEP;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandRecordType.BODY_WEIGHT;","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.goal.PeriodType.DAILY;","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":" * Manages the fitness of a user through list of records.","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"public class FitCenter {","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"    private final RecordList sleepRecordList \u003d new RecordList(RecordType.SLEEP);","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"    private final RecordList exerciseRecordList \u003d new RecordList(RecordType.EXERCISE);","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"    private final RecordList dietRecordList \u003d new RecordList(RecordType.DIET);","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"    private final RecordList bodyRecordList \u003d new RecordList(RecordType.BODYWEIGHT);","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"    private final GoalList exerciseGoalList \u003d new GoalList();","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"    private final GoalList dietGoalList \u003d new GoalList();","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"    private final GoalList sleepGoalList \u003d new GoalList();","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"    private final GoalList bodyWeightGoalList \u003d new GoalList();","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"    private RecordList getRecordListByType(CommandRecordType type) {","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"        switch (type) {","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"        case SLEEP:","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"            return sleepRecordList;","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"        case EXERCISE:","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"            return exerciseRecordList;","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"        case DIET:","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"            return dietRecordList;","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"        case BODY_WEIGHT:","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"            return bodyRecordList;","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"        default:","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"            return null;","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"    private GoalList getGoalListByType(CommandRecordType type) {","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"        switch (type) {","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"        case SLEEP:","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":"            return sleepGoalList;","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"        case EXERCISE:","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"Song0180"},"content":"            return exerciseGoalList;","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"        case DIET:","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"Song0180"},"content":"            return dietGoalList;","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"        case BODY_WEIGHT:","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"Song0180"},"content":"            return bodyWeightGoalList;","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"Song0180"},"content":"        default:","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"Song0180"},"content":"            return null;","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"Song0180"},"content":"    public void resetGoalProgress(PeriodType periodType) {","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"Song0180"},"content":"        exerciseGoalList.initializeGoalProgress(periodType);","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"Song0180"},"content":"        dietGoalList.initializeGoalProgress(periodType);","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"Song0180"},"content":"        sleepGoalList.initializeGoalProgress(periodType);","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"Song0180"},"content":"        bodyWeightGoalList.initializeGoalProgress(periodType);","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"Song0180"},"content":"     * Adds a given record to a list that stores the same type of records.","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"Song0180"},"content":"     * @param type   the type of the record.","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"Song0180"},"content":"     * @param record the record to add.","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"Song0180"},"content":"    public void addRecordToList(CommandRecordType type, Record record) {","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"Song0180"},"content":"        RecordList list \u003d getRecordListByType(type);","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"Song0180"},"content":"        if (list !\u003d null) {","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"Song0180"},"content":"            list.addRecord(record);","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"Song0180"},"content":"     * Adds a given goal to a list that stores the same type of goals.","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"Song0180"},"content":"     * @param type the type of the goal.","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"Song0180"},"content":"     * @param goal the goal to add.","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"Song0180"},"content":"    public void addGoalToList(CommandRecordType type, Goal goal) {","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"PingruiLi"},"content":"        double progress;","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"PingruiLi"},"content":"        LocalDate currentDate \u003d goal.getDaySet();","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"Song0180"},"content":"        GoalList list \u003d getGoalListByType(type);","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"Song0180"},"content":"        if (list !\u003d null) {","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"Song0180"},"content":"            list.addGoal(goal);","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"PingruiLi"},"content":"        switch (type) {","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"PingruiLi"},"content":"        case EXERCISE:","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"PingruiLi"},"content":"            progress \u003d exerciseRecordList.getDailyProgress(currentDate);","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"PingruiLi"},"content":"            break;","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"PingruiLi"},"content":"        case DIET:","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"PingruiLi"},"content":"            progress \u003d dietRecordList.getDailyProgress(currentDate);","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"PingruiLi"},"content":"            break;","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"PingruiLi"},"content":"        case BODY_WEIGHT:","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"PingruiLi"},"content":"            progress \u003d bodyRecordList.getDailyProgress(currentDate);","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"PingruiLi"},"content":"            break;","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"PingruiLi"},"content":"        case SLEEP:","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"PingruiLi"},"content":"            progress \u003d sleepRecordList.getDailyProgress(currentDate);","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"PingruiLi"},"content":"            break;","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"PingruiLi"},"content":"        default:","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"PingruiLi"},"content":"            return;","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"PingruiLi"},"content":"        goal.setProgress(progress);","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"Song0180"},"content":"     * Removes a record from a record list by index.","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"Song0180"},"content":"     * @param type  the type of the record.","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"Song0180"},"content":"     * @param index the index of the record in the list.","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"Song0180"},"content":"     * @return a summary of the record removed.","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"Song0180"},"content":"     * @throws IndexOutOfBoundsException when the index input is out of range.","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"Song0180"},"content":"    public String removeRecordFromList(CommandRecordType type, int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-03-18"},{"lineNumber":125,"author":{"gitId":"Song0180"},"content":"        RecordList list \u003d getRecordListByType(type);","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"Song0180"},"content":"        if (list !\u003d null) {","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"PingruiLi"},"content":"            return list.removeRecord(index);","lastModifiedDate":"2021-03-18"},{"lineNumber":128,"author":{"gitId":"PingruiLi"},"content":"        } else {","lastModifiedDate":"2021-03-18"},{"lineNumber":129,"author":{"gitId":"PingruiLi"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2021-03-18"},{"lineNumber":130,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":132,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":133,"author":{"gitId":"Song0180"},"content":"    public String cancelGoalFromList(CommandRecordType type, int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-03-30"},{"lineNumber":134,"author":{"gitId":"Song0180"},"content":"        GoalList list \u003d getGoalListByType(type);","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"Song0180"},"content":"        if (list !\u003d null) {","lastModifiedDate":"2021-03-30"},{"lineNumber":136,"author":{"gitId":"Song0180"},"content":"            return list.removeGoal(index);","lastModifiedDate":"2021-03-30"},{"lineNumber":137,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":138,"author":{"gitId":"Song0180"},"content":"        return Messages.MESSAGE_CANT_CANCEL_GOAL;","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":140,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":141,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":142,"author":{"gitId":"Song0180"},"content":"     * Prints the list of record of a selected type.","lastModifiedDate":"2021-03-15"},{"lineNumber":143,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":144,"author":{"gitId":"Song0180"},"content":"     * @param type the type of the record that the list stores.","lastModifiedDate":"2021-03-15"},{"lineNumber":145,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":146,"author":{"gitId":"Song0180"},"content":"    public String getRecordListString(CommandRecordType type) {","lastModifiedDate":"2021-03-18"},{"lineNumber":147,"author":{"gitId":"Song0180"},"content":"        RecordList list \u003d getRecordListByType(type);","lastModifiedDate":"2021-03-15"},{"lineNumber":148,"author":{"gitId":"Song0180"},"content":"        if (list !\u003d null) {","lastModifiedDate":"2021-03-15"},{"lineNumber":149,"author":{"gitId":"Song0180"},"content":"            return list.getRecordsToPrint();","lastModifiedDate":"2021-03-18"},{"lineNumber":150,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":151,"author":{"gitId":"Song0180"},"content":"        return Messages.MESSAGE_CANT_VIEW_LIST;","lastModifiedDate":"2021-03-18"},{"lineNumber":152,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":153,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":154,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":155,"author":{"gitId":"Song0180"},"content":"     * Prints the list of record of a selected type on a specific date.","lastModifiedDate":"2021-03-15"},{"lineNumber":156,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":157,"author":{"gitId":"Song0180"},"content":"     * @param type the type of the record that the list stores.","lastModifiedDate":"2021-03-15"},{"lineNumber":158,"author":{"gitId":"Song0180"},"content":"     * @param date the date of records.","lastModifiedDate":"2021-03-15"},{"lineNumber":159,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":160,"author":{"gitId":"Song0180"},"content":"    public String getRecordListString(CommandRecordType type, LocalDate date) {","lastModifiedDate":"2021-03-18"},{"lineNumber":161,"author":{"gitId":"Song0180"},"content":"        RecordList list \u003d getRecordListByType(type);","lastModifiedDate":"2021-03-18"},{"lineNumber":162,"author":{"gitId":"Song0180"},"content":"        if (list !\u003d null) {","lastModifiedDate":"2021-03-18"},{"lineNumber":163,"author":{"gitId":"Song0180"},"content":"            return list.getRecordsToPrint(date);","lastModifiedDate":"2021-03-18"},{"lineNumber":164,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":165,"author":{"gitId":"Song0180"},"content":"        return Messages.MESSAGE_CANT_VIEW_LIST;","lastModifiedDate":"2021-03-18"},{"lineNumber":166,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":167,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":168,"author":{"gitId":"Song0180"},"content":"    public String getRecordListString(CommandRecordType type, String optionalParam) {","lastModifiedDate":"2021-03-18"},{"lineNumber":169,"author":{"gitId":"Song0180"},"content":"        RecordList list \u003d getRecordListByType(type);","lastModifiedDate":"2021-03-18"},{"lineNumber":170,"author":{"gitId":"Song0180"},"content":"        if (list !\u003d null) {","lastModifiedDate":"2021-03-18"},{"lineNumber":171,"author":{"gitId":"Song0180"},"content":"            return list.getRecordsToPrint(optionalParam);","lastModifiedDate":"2021-03-18"},{"lineNumber":172,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":173,"author":{"gitId":"Song0180"},"content":"        return Messages.MESSAGE_CANT_VIEW_LIST;","lastModifiedDate":"2021-03-18"},{"lineNumber":174,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":175,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":176,"author":{"gitId":"Song0180"},"content":"    public String getRecordListString(CommandRecordType type, LocalDate date, String optionalParam) {","lastModifiedDate":"2021-03-18"},{"lineNumber":177,"author":{"gitId":"Song0180"},"content":"        RecordList list \u003d getRecordListByType(type);","lastModifiedDate":"2021-03-15"},{"lineNumber":178,"author":{"gitId":"Song0180"},"content":"        if (list !\u003d null) {","lastModifiedDate":"2021-03-15"},{"lineNumber":179,"author":{"gitId":"Song0180"},"content":"            return list.getRecordsToPrint(date, optionalParam);","lastModifiedDate":"2021-03-18"},{"lineNumber":180,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":181,"author":{"gitId":"Song0180"},"content":"        return Messages.MESSAGE_CANT_VIEW_LIST;","lastModifiedDate":"2021-03-18"},{"lineNumber":182,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":183,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":184,"author":{"gitId":"Song0180"},"content":"    public String getGoalListString(CommandRecordType type, PeriodType optionalPeriodType) {","lastModifiedDate":"2021-03-30"},{"lineNumber":185,"author":{"gitId":"Song0180"},"content":"        GoalList list \u003d getGoalListByType(type);","lastModifiedDate":"2021-03-30"},{"lineNumber":186,"author":{"gitId":"Song0180"},"content":"        if (list !\u003d null) {","lastModifiedDate":"2021-03-30"},{"lineNumber":187,"author":{"gitId":"Song0180"},"content":"            return list.getGoalsToPrint(optionalPeriodType);","lastModifiedDate":"2021-03-30"},{"lineNumber":188,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":189,"author":{"gitId":"Song0180"},"content":"        return Messages.MESSAGE_CANT_CHECK_GOAL;","lastModifiedDate":"2021-03-30"},{"lineNumber":190,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":191,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":192,"author":{"gitId":"PingruiLi"},"content":"    public String getAllGoalListStringAtLoading() {","lastModifiedDate":"2021-03-31"},{"lineNumber":193,"author":{"gitId":"PingruiLi"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-03-31"},{"lineNumber":194,"author":{"gitId":"Song0180"},"content":"        if (dietGoalList.isNotEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":195,"author":{"gitId":"PingruiLi"},"content":"            stringBuilder.append(\"Diet Goals\\n\");","lastModifiedDate":"2021-03-31"},{"lineNumber":196,"author":{"gitId":"PingruiLi"},"content":"            stringBuilder.append(getGoalListString(DIET, DAILY));","lastModifiedDate":"2021-03-31"},{"lineNumber":197,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":198,"author":{"gitId":"Song0180"},"content":"        if (exerciseGoalList.isNotEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":199,"author":{"gitId":"PingruiLi"},"content":"            stringBuilder.append(\"Exercise Goals\\n\");","lastModifiedDate":"2021-03-31"},{"lineNumber":200,"author":{"gitId":"PingruiLi"},"content":"            stringBuilder.append(getGoalListString(EXERCISE, DAILY));","lastModifiedDate":"2021-03-31"},{"lineNumber":201,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":202,"author":{"gitId":"Song0180"},"content":"        if (sleepGoalList.isNotEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":203,"author":{"gitId":"PingruiLi"},"content":"            stringBuilder.append(\"Sleep Goals\\n\");","lastModifiedDate":"2021-03-31"},{"lineNumber":204,"author":{"gitId":"PingruiLi"},"content":"            stringBuilder.append(getGoalListString(SLEEP, DAILY));","lastModifiedDate":"2021-03-31"},{"lineNumber":205,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":206,"author":{"gitId":"Song0180"},"content":"        if (bodyWeightGoalList.isNotEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":207,"author":{"gitId":"PingruiLi"},"content":"            stringBuilder.append(\"Body Weight Goals\\n\");","lastModifiedDate":"2021-03-31"},{"lineNumber":208,"author":{"gitId":"PingruiLi"},"content":"            stringBuilder.append(getGoalListString(BODY_WEIGHT, DAILY));","lastModifiedDate":"2021-03-31"},{"lineNumber":209,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":210,"author":{"gitId":"PingruiLi"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2021-03-31"},{"lineNumber":211,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":212,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":213,"author":{"gitId":"PingruiLi"},"content":"    public String getRecordListForStore() {","lastModifiedDate":"2021-03-27"},{"lineNumber":214,"author":{"gitId":"Song0180"},"content":"        return exerciseRecordList.getRecordToStore()","lastModifiedDate":"2021-03-30"},{"lineNumber":215,"author":{"gitId":"Song0180"},"content":"                + dietRecordList.getRecordToStore()","lastModifiedDate":"2021-03-30"},{"lineNumber":216,"author":{"gitId":"Song0180"},"content":"                + sleepRecordList.getRecordToStore()","lastModifiedDate":"2021-03-30"},{"lineNumber":217,"author":{"gitId":"Song0180"},"content":"                + bodyRecordList.getRecordToStore();","lastModifiedDate":"2021-03-30"},{"lineNumber":218,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":219,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":220,"author":{"gitId":"PingruiLi"},"content":"    public String getGoalListForStore() {","lastModifiedDate":"2021-03-31"},{"lineNumber":221,"author":{"gitId":"PingruiLi"},"content":"        return exerciseGoalList.getGoalToStore()","lastModifiedDate":"2021-03-31"},{"lineNumber":222,"author":{"gitId":"PingruiLi"},"content":"                + dietGoalList.getGoalToStore()","lastModifiedDate":"2021-03-31"},{"lineNumber":223,"author":{"gitId":"PingruiLi"},"content":"                + sleepGoalList.getGoalToStore()","lastModifiedDate":"2021-03-31"},{"lineNumber":224,"author":{"gitId":"PingruiLi"},"content":"                + bodyWeightGoalList.getGoalToStore();","lastModifiedDate":"2021-03-31"},{"lineNumber":225,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":226,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":227,"author":{"gitId":"PingruiLi"},"content":"    public void initializeDailyProgressAtLoading(LocalDate currentDate) {","lastModifiedDate":"2021-03-31"},{"lineNumber":228,"author":{"gitId":"Song0180"},"content":"        dietGoalList.updateDailyProgress(dietRecordList.getDailyProgress(currentDate));","lastModifiedDate":"2021-03-31"},{"lineNumber":229,"author":{"gitId":"Song0180"},"content":"        exerciseGoalList.updateDailyProgress(exerciseRecordList.getDailyProgress(currentDate));","lastModifiedDate":"2021-03-31"},{"lineNumber":230,"author":{"gitId":"Song0180"},"content":"        sleepGoalList.updateDailyProgress(sleepRecordList.getDailyProgress(currentDate));","lastModifiedDate":"2021-03-31"},{"lineNumber":231,"author":{"gitId":"Song0180"},"content":"        bodyWeightGoalList.updateDailyProgress(bodyRecordList.getDailyProgress(currentDate));","lastModifiedDate":"2021-03-31"},{"lineNumber":232,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":233,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":234,"author":{"gitId":"PingruiLi"},"content":"    public void updateDailyProgressAtAdding(Record record, LocalDate currentDate) {","lastModifiedDate":"2021-03-31"},{"lineNumber":235,"author":{"gitId":"PingruiLi"},"content":"        if (!record.getDate().isEqual(currentDate)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":236,"author":{"gitId":"PingruiLi"},"content":"            return;","lastModifiedDate":"2021-03-31"},{"lineNumber":237,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":238,"author":{"gitId":"PingruiLi"},"content":"        RecordType type \u003d record.getType();","lastModifiedDate":"2021-03-31"},{"lineNumber":239,"author":{"gitId":"PingruiLi"},"content":"        switch (type) {","lastModifiedDate":"2021-03-31"},{"lineNumber":240,"author":{"gitId":"PingruiLi"},"content":"        case EXERCISE:","lastModifiedDate":"2021-03-31"},{"lineNumber":241,"author":{"gitId":"Song0180"},"content":"            exerciseGoalList.updateDailyProgress(exerciseRecordList.getDailyProgress(currentDate));","lastModifiedDate":"2021-03-31"},{"lineNumber":242,"author":{"gitId":"PingruiLi"},"content":"            break;","lastModifiedDate":"2021-03-31"},{"lineNumber":243,"author":{"gitId":"PingruiLi"},"content":"        case DIET:","lastModifiedDate":"2021-03-31"},{"lineNumber":244,"author":{"gitId":"Song0180"},"content":"            dietGoalList.updateDailyProgress(dietRecordList.getDailyProgress(currentDate));","lastModifiedDate":"2021-03-31"},{"lineNumber":245,"author":{"gitId":"PingruiLi"},"content":"            break;","lastModifiedDate":"2021-03-31"},{"lineNumber":246,"author":{"gitId":"PingruiLi"},"content":"        case SLEEP:","lastModifiedDate":"2021-03-31"},{"lineNumber":247,"author":{"gitId":"Song0180"},"content":"            sleepGoalList.updateDailyProgress(sleepRecordList.getDailyProgress(currentDate));","lastModifiedDate":"2021-03-31"},{"lineNumber":248,"author":{"gitId":"PingruiLi"},"content":"            break;","lastModifiedDate":"2021-03-31"},{"lineNumber":249,"author":{"gitId":"PingruiLi"},"content":"        case BODYWEIGHT:","lastModifiedDate":"2021-03-31"},{"lineNumber":250,"author":{"gitId":"Song0180"},"content":"            bodyWeightGoalList.updateDailyProgress(bodyRecordList.getDailyProgress(currentDate));","lastModifiedDate":"2021-03-31"},{"lineNumber":251,"author":{"gitId":"PingruiLi"},"content":"            break;","lastModifiedDate":"2021-03-31"},{"lineNumber":252,"author":{"gitId":"PingruiLi"},"content":"        default:","lastModifiedDate":"2021-03-31"},{"lineNumber":253,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":254,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":255,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"PingruiLi":76,"Song0180":179}},{"path":"src/main/java/seedu/duke/account/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.account;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":" * Represents different genders.","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"public enum Gender {","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"    MALE, FEMALE, UNKNOWN, OTHER","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"Song0180":8}},{"path":"src/main/java/seedu/duke/account/User.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.account;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":" * Represents a user of this app.","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"public class User {","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"    private static final int DEFAULT_AGE \u003d 20;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"    private static final double DEFAULT_WEIGHT \u003d 50;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"    private String name;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"    private Gender gender;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"    private int age;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"    private double bodyWeight;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"    private FitCenter fitCenter \u003d new FitCenter();","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"     * Initializes a default user object with default attributes.","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"    public User() {","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"        this.name \u003d \"Default User\";","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"        this.gender \u003d Gender.UNKNOWN;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"        this.age \u003d DEFAULT_AGE;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"        this.bodyWeight \u003d DEFAULT_WEIGHT;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"     * Initializes a user object. Assumes that all params are not null.","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"     * @param name       the name of the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"     * @param gender     the gender of the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"     * @param age        the age of the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"     * @param bodyWeight the body weight of the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"    public User(String name, Gender gender, int age, double bodyWeight) {","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"        this.age \u003d age;","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"        this.bodyWeight \u003d bodyWeight;","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"     * Gets the name of the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"     * @return the name of the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":"    public String getName() {","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"        return name;","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":"     * Gets the gender of the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"Song0180"},"content":"     * @return the gender of the user in Gender.","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"Song0180"},"content":"    public Gender getGender() {","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"        return gender;","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"Song0180"},"content":"     * Gets the age of the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"Song0180"},"content":"     * @return the age of the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"Song0180"},"content":"    public int getAge() {","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"Song0180"},"content":"        return age;","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"Song0180"},"content":"     * Gets the body weight of the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"Song0180"},"content":"     * @return the body weight of the user in KG.","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"Song0180"},"content":"    public double getBodyWeight() {","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"Song0180"},"content":"        return bodyWeight;","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"Song0180"},"content":"     * Sets the body weight of the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"Song0180"},"content":"     * @param bodyWeight the new body weight in KG.","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"Song0180"},"content":"    public void setBodyWeight(double bodyWeight) {","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"Song0180"},"content":"        this.bodyWeight \u003d bodyWeight;","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"Song0180"},"content":"     * Gets the fit center of the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"Song0180"},"content":"     * @return the fit center of the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"Song0180"},"content":"    public FitCenter getFitCenter() {","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"Song0180"},"content":"        return fitCenter;","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"Song0180"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"Song0180"},"content":"    public String toString() {","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"Song0180"},"content":"        return \"User Name: \" + name + \"\\nGender: \" + gender + \"\\nAge: \" + age + \"\\nBody Weight: \" + bodyWeight;","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"Song0180":100}},{"path":"src/main/java/seedu/duke/command/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.account.FitCenter;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.exception.TypeException;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"import seedu.duke.record.Record;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"import seedu.duke.record.BodyWeight;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"import seedu.duke.record.Diet;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"import seedu.duke.record.Exercise;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"import seedu.duke.record.Sleep;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"import java.time.ZoneId;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"import java.util.Date;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"    private static final String FEEDBACK_FORMAT \u003d \"A new %s record is added successfully!\\nRecord summary:\\n%s\";","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"    private final Record record;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"    private final CommandRecordType recordType;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"    public AddCommand(CommandRecordType recordType, HashMap\u003cString, String\u003e params)","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":"            throws ParseException, TypeException, NumberFormatException {","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"        SimpleDateFormat spf \u003d new SimpleDateFormat(\"dd-MM-yyyy\");","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"PingruiLi"},"content":"        this.recordType \u003d recordType;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"PingruiLi"},"content":"        spf.setLenient(false);","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"PingruiLi"},"content":"        String dateString \u003d params.get(\"date\");","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"        LocalDate recordDate;","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"PingruiLi"},"content":"        if (dateString !\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"PingruiLi"},"content":"            Date date \u003d spf.parse(dateString);","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"            recordDate \u003d date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"PingruiLi"},"content":"        } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"            recordDate \u003d LocalDate.now();","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"PingruiLi"},"content":"        switch (recordType) {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"PingruiLi"},"content":"        case EXERCISE:","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"            record \u003d new Exercise(params.get(\"activity\"), Integer.parseInt(params.get(\"duration\")), recordDate);","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"PingruiLi"},"content":"            break;","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"PingruiLi"},"content":"        case DIET:","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"PingruiLi"},"content":"            record \u003d new Diet(params.get(\"food\"), Double.parseDouble(params.get(\"weight\")), recordDate);","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"PingruiLi"},"content":"            break;","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"PingruiLi"},"content":"        case SLEEP:","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"PingruiLi"},"content":"            record \u003d new Sleep(Double.parseDouble(params.get(\"duration\")), recordDate);","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"PingruiLi"},"content":"            break;","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"PingruiLi"},"content":"        case BODY_WEIGHT:","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"            record \u003d new BodyWeight(Double.parseDouble(params.get(\"weight\")), recordDate);","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"PingruiLi"},"content":"            break;","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"PingruiLi"},"content":"        default:","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"            record \u003d null;","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"    public CommandResult execute(FitCenter fitCenter) {","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"PingruiLi"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"        if (record !\u003d null) {","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"Song0180"},"content":"            fitCenter.addRecordToList(recordType, record);","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"PingruiLi"},"content":"            fitCenter.updateDailyProgressAtAdding(record, currentDate);","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"PingruiLi"},"content":"            feedback \u003d String.format(FEEDBACK_FORMAT, record.getType(), record.getRecordSummary());","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"Song0180"},"content":"        } else {","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"Song0180"},"content":"            feedback \u003d Messages.MESSAGE_CANT_ADD_RECORD;","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"PingruiLi"},"content":"        return new CommandResult(feedback);","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"PingruiLi"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"PingruiLi":43,"Song0180":23}},{"path":"src/main/java/seedu/duke/command/CancelCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.account.FitCenter;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"public class CancelCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"    private final CommandRecordType recordType;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"    private final int indexToDelete;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"    public CancelCommand(CommandRecordType recordType, HashMap\u003cString, String\u003e params) {","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"        this.recordType \u003d recordType;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"        this.indexToDelete \u003d Integer.parseInt(params.get(\"index\")) - 1;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"    public CommandResult execute(FitCenter fitCenter) {","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"        String goalTypeString \u003d recordType.toString().toLowerCase().replace(\"_\", \" \");","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"            String feedbackFormat \u003d \"You have successfully canceled a goal for %s!\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"                    + \"Goal canceled:\\n%s\\nDisplaying current %s goals available:\\n\";","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"            String cancelSummary \u003d fitCenter.cancelGoalFromList(recordType, indexToDelete);","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"            feedback \u003d String.format(feedbackFormat, recordType.toString().toLowerCase(),","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"                    cancelSummary, goalTypeString)","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"                    + fitCenter.getGoalListString(recordType, null);","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"            feedback \u003d Messages.MESSAGE_INDEX_OUT_OF_RANGE_EXCEPTION","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"                    + String.format(\"\\nDisplaying current %s goals available:\\n\",","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"                    goalTypeString)","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"                    + fitCenter.getGoalListString(recordType, null);","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"        return new CommandResult(feedback);","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"Song0180":35}},{"path":"src/main/java/seedu/duke/command/CheckCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.account.FitCenter;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"import seedu.duke.goal.PeriodType;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"public class CheckCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"    private final CommandRecordType recordType;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"    private final PeriodType optionalPeriodType;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"    public CheckCommand(CommandRecordType recordType, HashMap\u003cString, String\u003e params) {","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"        this.recordType \u003d recordType;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"        this.optionalPeriodType \u003d params.get(\"periodType\") \u003d\u003d null","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"                ? null : PeriodType.valueOf(params.get(\"periodType\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"    public CommandResult execute(FitCenter fitCenter) {","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"        feedback \u003d fitCenter.getGoalListString(recordType, optionalPeriodType);","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"        addTitleToFeedback();","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"        return new CommandResult(feedback);","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"    private void addTitleToFeedback() {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"        String recordString \u003d recordType.toString().toLowerCase().replace(\"_\", \" \");","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"        String feedbackHeading \u003d String.format(Messages.MESSAGE_CHECK_TITLE, recordString);","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"        feedback \u003d feedbackHeading + feedback;","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"Song0180":31}},{"path":"src/main/java/seedu/duke/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.account.FitCenter;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"public abstract class Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"    protected String feedback;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"    public abstract CommandResult execute(FitCenter fitCenter);","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"PingruiLi":8,"Song0180":1}},{"path":"src/main/java/seedu/duke/command/CommandRecordType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"import java.util.Locale;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"public enum CommandRecordType {","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"    EXERCISE(\"E\"), DIET(\"D\"), SLEEP(\"S\"), BODY_WEIGHT(\"W\"), INVALID(\"I\");","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"    private String recordType;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"    CommandRecordType(String type) {","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"        recordType \u003d type;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"    public static CommandRecordType getType(String typeString) {","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"        for (int i \u003d 0; i \u003c CommandRecordType.values().length; i++) {","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"            if (typeString.equals(CommandRecordType.values()[i].recordType)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"                return CommandRecordType.values()[i];","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"        return INVALID;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"PingruiLi":19,"Song0180":1}},{"path":"src/main/java/seedu/duke/command/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"public class CommandResult {","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"    private String feedback;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"    public CommandResult(String feedback) {","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"        this.feedback \u003d feedback;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"    public String getFeedback() {","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"        return feedback;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"PingruiLi":13}},{"path":"src/main/java/seedu/duke/command/CommandType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"public enum CommandType {","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"    ADD, VIEW, DELETE, SET, CHECK, CANCEL","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"PingruiLi":4,"Song0180":1}},{"path":"src/main/java/seedu/duke/command/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.account.FitCenter;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"import java.util.Locale;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"    private static final String FEEDBACK_FORMAT \u003d \"You have successfully deleted the %s record of \"","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"            + \"index %s!\\nRecord summary: %s\\nDisplaying current %s records:\";","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"    private final CommandRecordType recordType;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"    private final int indexToDelete;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"    public DeleteCommand(CommandRecordType recordType, HashMap\u003cString, String\u003e params) throws NumberFormatException {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"        this.recordType \u003d recordType;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"        indexToDelete \u003d Integer.parseInt(params.get(\"index\")) - 1;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"    public CommandResult execute(FitCenter fitCenter) {","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"        try {","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"            String recordSummary \u003d fitCenter.removeRecordFromList(recordType, indexToDelete);","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"            feedback \u003d String.format(FEEDBACK_FORMAT, recordType, (indexToDelete + 1), recordSummary, recordType);","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"PingruiLi"},"content":"            feedback +\u003d \"\\n\" + fitCenter.getRecordListString(recordType);","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"PingruiLi"},"content":"            return new CommandResult(feedback);","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"PingruiLi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"PingruiLi"},"content":"            return new CommandResult(\"The index you entered is out of bound.\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"                    + \"Here are the records of type \" + recordType.toString().toLowerCase(Locale.ROOT) + \":\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"PingruiLi"},"content":"                    + fitCenter.getRecordListString(recordType));","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"PingruiLi"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"PingruiLi":25,"Song0180":9}},{"path":"src/main/java/seedu/duke/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.account.FitCenter;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":" * Terminates the application from running.","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"    public CommandResult execute(FitCenter fitCenter) {","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"        return new CommandResult(Messages.MESSAGE_EXIT);","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"    public static boolean isExitCommand(Command command) {","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"        return command instanceof ExitCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Song0180":18}},{"path":"src/main/java/seedu/duke/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.account.FitCenter;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"    public HelpCommand() {","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"        feedback \u003d Messages.MESSAGE_HELP_GREETINGS + \"\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"                + Messages.MESSAGE_SYNTAX_ADD_COMMAND + \"\\n\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"                + Messages.MESSAGE_SYNTAX_VIEW_COMMAND + \"\\n\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"                + Messages.MESSAGE_SYNTAX_DELETE_COMMAND;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"    public CommandResult execute(FitCenter fitCenter) {","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"        return new CommandResult(feedback);","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"Song0180":18}},{"path":"src/main/java/seedu/duke/command/InvalidCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.account.FitCenter;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"    public InvalidCommand(String errorMessage) {","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"        feedback \u003d errorMessage;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"    public InvalidCommand(CommandType commandType) {","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"        switch (commandType) {","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"        case ADD:","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"            feedback \u003d Messages.MESSAGE_INVALID_COMMAND_SYNTAX + Messages.MESSAGE_SYNTAX_ADD_COMMAND;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"            break;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"        case VIEW:","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"            feedback \u003d Messages.MESSAGE_INVALID_COMMAND_SYNTAX + Messages.MESSAGE_SYNTAX_VIEW_COMMAND;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"            break;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"        case DELETE:","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"            feedback \u003d Messages.MESSAGE_INVALID_COMMAND_SYNTAX + Messages.MESSAGE_SYNTAX_DELETE_COMMAND;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"            break;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"        case SET:","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"            feedback \u003d Messages.MESSAGE_INVALID_COMMAND_SYNTAX + Messages.MESSAGE_SYNTAX_SET_COMMAND;","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"            break;","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"        case CHECK:","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"            feedback \u003d Messages.MESSAGE_INVALID_COMMAND_SYNTAX + Messages.MESSAGE_SYNTAX_CHECK_COMMAND;","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"            break;","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"        case CANCEL:","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"            feedback \u003d Messages.MESSAGE_INVALID_COMMAND_SYNTAX + Messages.MESSAGE_SYNTAX_CANCEL_COMMAND;","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"            break;","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"PingruiLi"},"content":"        default:","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"            feedback \u003d Messages.MESSAGE_SYSTEM_ERROR;","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"PingruiLi"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"    public CommandResult execute(FitCenter fitCenter) {","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"PingruiLi"},"content":"        return new CommandResult(feedback);","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"PingruiLi"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"PingruiLi":24,"Song0180":17}},{"path":"src/main/java/seedu/duke/command/SetCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.account.FitCenter;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"import seedu.duke.goal.Goal;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"import seedu.duke.goal.ExerciseGoal;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"import seedu.duke.goal.PeriodType;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"import seedu.duke.goal.SleepGoal;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"import seedu.duke.goal.BodyWeightGoal;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"import seedu.duke.goal.DietGoal;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"public class SetCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"    private final Goal goal;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"    private final CommandRecordType recordType;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"    public SetCommand(CommandRecordType recordType, HashMap\u003cString, String\u003e params) {","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"        this.recordType \u003d recordType;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"        PeriodType periodType \u003d PeriodType.valueOf(params.get(\"periodType\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"        double target \u003d Double.parseDouble(params.get(\"target\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"        switch (recordType) {","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"        case EXERCISE:","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"            goal \u003d new ExerciseGoal(periodType, target);","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"            break;","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"        case SLEEP:","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"            goal \u003d new SleepGoal(periodType, target);","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"            break;","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"        case DIET:","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"            goal \u003d new DietGoal(periodType, target);","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"            break;","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"        case BODY_WEIGHT:","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"            goal \u003d new BodyWeightGoal(periodType, target);","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"            break;","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"        default:","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"            goal \u003d null;","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"            break;","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"    public CommandResult execute(FitCenter fitCenter) {","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"        if (goal !\u003d null) {","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"            fitCenter.addGoalToList(recordType, goal);","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"            feedback \u003d \"A new \" + goal.getType().toString().toLowerCase()","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":"                    + \" goal is set successfully!\\n\" + goal.getGoalSummary();","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"            feedback \u003d Messages.MESSAGE_CANT_SET_GOAL;","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"        return new CommandResult(feedback);","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"Song0180":52}},{"path":"src/main/java/seedu/duke/command/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.account.FitCenter;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"import java.time.ZoneId;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"import java.util.Date;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"    private final CommandRecordType recordType;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"    private HashMap\u003cString, String\u003e specifiedParams \u003d null;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"    private LocalDate recordDate;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"    public ViewCommand(CommandRecordType type) {","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"        recordType \u003d type;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"    public ViewCommand(CommandRecordType type, HashMap\u003cString, String\u003e params) throws ParseException {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"        recordType \u003d type;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"        specifiedParams \u003d params;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"        String dateString \u003d params.get(\"date\");","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"        if (dateString !\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"            SimpleDateFormat spf \u003d new SimpleDateFormat(\"dd-MM-yyyy\");","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"            spf.setLenient(false);","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"            Date date \u003d spf.parse(dateString);","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"            recordDate \u003d date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"    public CommandResult execute(FitCenter fitCenter) {","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"        switch (recordType) {","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"        case SLEEP:","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"PingruiLi"},"content":"            feedback \u003d recordDate \u003d\u003d null ? getRecordsWithoutOptionalParam(fitCenter) : getRecordsWithDate(fitCenter);","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"            feedback \u003d getFeedbackWithHeader(Messages.MESSAGE_VIEW_HEADER_SLEEP);","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"            break;","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"        case BODY_WEIGHT:","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"PingruiLi"},"content":"            feedback \u003d recordDate \u003d\u003d null ? getRecordsWithoutOptionalParam(fitCenter) : getRecordsWithDate(fitCenter);","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"            feedback \u003d getFeedbackWithHeader(Messages.MESSAGE_VIEW_HEADER_WEIGHT);","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"            break;","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"        case EXERCISE:","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":"            if (specifiedParams !\u003d null) {","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":"                feedback \u003d getRecordsWithOptionalParam(fitCenter, specifiedParams.get(\"activity\"));","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"            } else {","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"                feedback \u003d getRecordsWithoutOptionalParam(fitCenter);","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"            feedback \u003d getFeedbackWithHeader(Messages.MESSAGE_VIEW_HEADER_EXERCISE);","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":"            break;","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"        case DIET:","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"Song0180"},"content":"            if (specifiedParams !\u003d null) {","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"                feedback \u003d getRecordsWithOptionalParam(fitCenter, specifiedParams.get(\"food\"));","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"Song0180"},"content":"            } else {","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"                feedback \u003d getRecordsWithoutOptionalParam(fitCenter);","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"Song0180"},"content":"            feedback \u003d getFeedbackWithHeader(Messages.MESSAGE_VIEW_HEADER_DIET);","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"Song0180"},"content":"            break;","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"Song0180"},"content":"        default:","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"Song0180"},"content":"            feedback \u003d Messages.MESSAGE_CANT_VIEW_LIST;","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"Song0180"},"content":"        addTitleToFeedback();","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"PingruiLi"},"content":"        return new CommandResult(feedback);","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"Song0180"},"content":"    private String getRecordsWithOptionalParam(FitCenter fitCenter, String optionalParam) {","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"PingruiLi"},"content":"        if (recordDate !\u003d null \u0026\u0026 optionalParam !\u003d null) {","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"Song0180"},"content":"            return fitCenter.getRecordListString(recordType, recordDate, optionalParam);","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"PingruiLi"},"content":"        } else if (recordDate \u003d\u003d null) {","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"Song0180"},"content":"            return fitCenter.getRecordListString(recordType, optionalParam);","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"PingruiLi"},"content":"        } else {","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"PingruiLi"},"content":"            return fitCenter.getRecordListString(recordType, recordDate);","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"Song0180"},"content":"    private String getRecordsWithoutOptionalParam(FitCenter fitCenter) {","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"Song0180"},"content":"        return fitCenter.getRecordListString(recordType);","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"PingruiLi"},"content":"    private String getRecordsWithDate(FitCenter fitCenter) {","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"PingruiLi"},"content":"        return fitCenter.getRecordListString(recordType, recordDate);","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":85,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":86,"author":{"gitId":"Song0180"},"content":"    private void addTitleToFeedback() {","lastModifiedDate":"2021-03-18"},{"lineNumber":87,"author":{"gitId":"Song0180"},"content":"        String recordString \u003d recordType.toString().toLowerCase().replace(\"_\", \" \");","lastModifiedDate":"2021-03-18"},{"lineNumber":88,"author":{"gitId":"Song0180"},"content":"        String feedbackHeading \u003d String.format(Messages.MESSAGE_VIEW_TITLE, recordString);","lastModifiedDate":"2021-03-18"},{"lineNumber":89,"author":{"gitId":"Song0180"},"content":"        feedback \u003d feedbackHeading + feedback;","lastModifiedDate":"2021-03-18"},{"lineNumber":90,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":91,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":92,"author":{"gitId":"Song0180"},"content":"    private String getFeedbackWithHeader(String header) {","lastModifiedDate":"2021-03-18"},{"lineNumber":93,"author":{"gitId":"Song0180"},"content":"        return feedback.contains(\"Sorry\") ? feedback : header + feedback;","lastModifiedDate":"2021-03-18"},{"lineNumber":94,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":95,"author":{"gitId":"PingruiLi"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"PingruiLi":24,"Song0180":71}},{"path":"src/main/java/seedu/duke/commandparser/CommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.commandparser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.command.AddCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"import seedu.duke.command.ViewCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"import seedu.duke.command.DeleteCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"import seedu.duke.command.SetCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"import seedu.duke.command.CheckCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"import seedu.duke.command.CancelCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"import seedu.duke.command.CommandRecordType;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"import seedu.duke.command.HelpCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"import seedu.duke.command.InvalidCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"import seedu.duke.command.ExitCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.exception.TypeException;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"import seedu.duke.goal.PeriodType;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandRecordType.EXERCISE;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandRecordType.DIET;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandRecordType.BODY_WEIGHT;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandRecordType.SLEEP;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandRecordType.INVALID;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandType.ADD;","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandType.VIEW;","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"import static seedu.duke.command.CommandType.DELETE;","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"import static seedu.duke.command.CommandType.SET;","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"import static seedu.duke.command.CommandType.CHECK;","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"import static seedu.duke.command.CommandType.CANCEL;","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"PingruiLi"},"content":"public class CommandParser {","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"    private final HashMap\u003cString, String\u003e params;","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"    public CommandParser() {","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"PingruiLi"},"content":"        params \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"    public Command parseCommand(String userInput) {","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"        String[] inputParts \u003d getInputParts(userInput);","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"        String commandWord \u003d getCommandWord(inputParts);","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"PingruiLi"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"        case \"help\":","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"PingruiLi"},"content":"        case \"add\":","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":"            return prepareAdd(inputParts);","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"PingruiLi"},"content":"        case \"view\":","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"PingruiLi"},"content":"            return prepareView(inputParts);","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"        case \"delete\":","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"            return prepareDelete(inputParts);","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":"        case \"set\":","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"            return prepareSet(inputParts);","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"Song0180"},"content":"        case \"check\":","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"            return prepareCheck(inputParts);","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"Song0180"},"content":"        case \"cancel\":","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"            return prepareCancel(inputParts);","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"Song0180"},"content":"        case \"exit\":","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"Song0180"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"PingruiLi"},"content":"        default:","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(Messages.MESSAGE_INVALID_COMMAND + Messages.MESSAGE_HELP_PROMPT);","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"Song0180"},"content":"    public void clearParserParams() {","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"Song0180"},"content":"        params.clear();","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"Song0180"},"content":"    private boolean isCommandSyntaxInvalid(String[] inputParts) {","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"PingruiLi"},"content":"        if (inputParts.length \u003c 2) {","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"Song0180"},"content":"            return true;","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"Song0180"},"content":"        return inputParts[1].length() \u003c 3;","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"Song0180"},"content":"    private Command prepareAdd(String[] inputParts) {","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"Song0180"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"Song0180"},"content":"            if (isCommandSyntaxInvalid(inputParts)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"PingruiLi"},"content":"                return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"Song0180"},"content":"            CommandRecordType recordType \u003d getCommandRecordType(inputParts[1]);","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"PingruiLi"},"content":"            if (recordType \u003d\u003d INVALID) {","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"Song0180"},"content":"            String[] typeContent \u003d getTypeAndContent(inputParts[1]);","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"Song0180"},"content":"            if (typeContent.length \u003c 2) {","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"Song0180"},"content":"            String content \u003d typeContent[1];","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"Song0180"},"content":"            content \u003d content.trim();","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"Song0180"},"content":"            switch (recordType) {","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"PingruiLi"},"content":"            case EXERCISE:","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"Song0180"},"content":"                return prepareAddExercise(content);","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"PingruiLi"},"content":"            case BODY_WEIGHT:","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"Song0180"},"content":"                return prepareAddBodyWeight(content);","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"PingruiLi"},"content":"            case DIET:","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"Song0180"},"content":"                return prepareAddDiet(content);","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"PingruiLi"},"content":"            case SLEEP:","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"Song0180"},"content":"                return prepareAddSleep(content);","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"Song0180"},"content":"            default:","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(Messages.MESSAGE_INVALID_COMMAND_WORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"Song0180"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(Messages.MESSAGE_INVALID_DATE_FORMAT);","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"PingruiLi"},"content":"        } catch (TypeException e) {","lastModifiedDate":"2021-03-18"},{"lineNumber":109,"author":{"gitId":"PingruiLi"},"content":"            return new InvalidCommand(e.toString());","lastModifiedDate":"2021-03-18"},{"lineNumber":110,"author":{"gitId":"PingruiLi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-18"},{"lineNumber":111,"author":{"gitId":"PingruiLi"},"content":"            return new InvalidCommand(Messages.MESSAGE_INVALID_FOOD_AMOUNT);","lastModifiedDate":"2021-03-18"},{"lineNumber":112,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"Song0180"},"content":"    private Command prepareSet(String[] inputParts) {","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"Song0180"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"Song0180"},"content":"            if (isCommandSyntaxInvalid(inputParts)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(SET);","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"Song0180"},"content":"            CommandRecordType recordType \u003d getCommandRecordType(inputParts[1]);","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"Song0180"},"content":"            if (recordType \u003d\u003d INVALID) {","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(SET);","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"Song0180"},"content":"            String[] rawParams \u003d inputParts[1].split(\"\\\\s+\");","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"Song0180"},"content":"            if (rawParams.length \u003c 3) {","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(SET);","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"Song0180"},"content":"            String rawPeriodType \u003d rawParams[1].trim().substring(2);","lastModifiedDate":"2021-03-30"},{"lineNumber":130,"author":{"gitId":"Song0180"},"content":"            String targetStr \u003d rawParams[2].trim().substring(7);","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"Song0180"},"content":"            double target \u003d Double.parseDouble(targetStr);","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":134,"author":{"gitId":"Song0180"},"content":"            PeriodType periodType \u003d PeriodType.parsePeriodType(rawPeriodType);","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"Song0180"},"content":"            if (periodType \u003d\u003d PeriodType.INVALID) {","lastModifiedDate":"2021-03-30"},{"lineNumber":136,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(Messages.MESSAGE_INVALID_PERIOD_TYPE);","lastModifiedDate":"2021-03-30"},{"lineNumber":137,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":138,"author":{"gitId":"Song0180"},"content":"            params.put(\"periodType\", periodType.toString());","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"Song0180"},"content":"            params.put(\"target\", String.valueOf(target));","lastModifiedDate":"2021-03-30"},{"lineNumber":140,"author":{"gitId":"Song0180"},"content":"            return new SetCommand(recordType, params);","lastModifiedDate":"2021-03-30"},{"lineNumber":141,"author":{"gitId":"Song0180"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":142,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(Messages.MESSAGE_DOUBLE_FORMAT_ERROR);","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":146,"author":{"gitId":"Song0180"},"content":"    private Command prepareCheck(String[] inputParts) {","lastModifiedDate":"2021-03-30"},{"lineNumber":147,"author":{"gitId":"Song0180"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"Song0180"},"content":"            if (isCommandSyntaxInvalid(inputParts)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":149,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(CHECK);","lastModifiedDate":"2021-03-30"},{"lineNumber":150,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":151,"author":{"gitId":"Song0180"},"content":"            CommandRecordType recordType \u003d getCommandRecordType(inputParts[1]);","lastModifiedDate":"2021-03-30"},{"lineNumber":152,"author":{"gitId":"Song0180"},"content":"            if (recordType \u003d\u003d INVALID) {","lastModifiedDate":"2021-03-30"},{"lineNumber":153,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(CHECK);","lastModifiedDate":"2021-03-30"},{"lineNumber":154,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":155,"author":{"gitId":"Song0180"},"content":"            String[] rawParams \u003d inputParts[1].split(\"\\\\s+\");","lastModifiedDate":"2021-03-30"},{"lineNumber":156,"author":{"gitId":"Song0180"},"content":"            if (rawParams.length \u003c 1) {","lastModifiedDate":"2021-03-30"},{"lineNumber":157,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(CHECK);","lastModifiedDate":"2021-03-30"},{"lineNumber":158,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":159,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":160,"author":{"gitId":"Song0180"},"content":"            if (rawParams.length \u003d\u003d 2) {","lastModifiedDate":"2021-03-30"},{"lineNumber":161,"author":{"gitId":"Song0180"},"content":"                String rawPeriodType \u003d rawParams[1].trim().substring(2);","lastModifiedDate":"2021-03-30"},{"lineNumber":162,"author":{"gitId":"Song0180"},"content":"                PeriodType periodType \u003d PeriodType.parsePeriodType(rawPeriodType);","lastModifiedDate":"2021-03-30"},{"lineNumber":163,"author":{"gitId":"Song0180"},"content":"                if (periodType \u003d\u003d PeriodType.INVALID) {","lastModifiedDate":"2021-03-30"},{"lineNumber":164,"author":{"gitId":"Song0180"},"content":"                    return new InvalidCommand(Messages.MESSAGE_INVALID_PERIOD_TYPE);","lastModifiedDate":"2021-03-30"},{"lineNumber":165,"author":{"gitId":"Song0180"},"content":"                }","lastModifiedDate":"2021-03-30"},{"lineNumber":166,"author":{"gitId":"Song0180"},"content":"                params.put(\"periodType\", periodType.toString());","lastModifiedDate":"2021-03-30"},{"lineNumber":167,"author":{"gitId":"Song0180"},"content":"            } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":168,"author":{"gitId":"Song0180"},"content":"                params.put(\"periodType\", null);","lastModifiedDate":"2021-03-30"},{"lineNumber":169,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":170,"author":{"gitId":"Song0180"},"content":"            return new CheckCommand(recordType, params);","lastModifiedDate":"2021-03-30"},{"lineNumber":171,"author":{"gitId":"Song0180"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":172,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(\"Something went wrong when preparing to check goals.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":173,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":174,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":175,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":176,"author":{"gitId":"Song0180"},"content":"    private Command prepareCancel(String[] inputParts) {","lastModifiedDate":"2021-03-30"},{"lineNumber":177,"author":{"gitId":"Song0180"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":178,"author":{"gitId":"Song0180"},"content":"            if (isCommandSyntaxInvalid(inputParts)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":179,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(CANCEL);","lastModifiedDate":"2021-03-30"},{"lineNumber":180,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":181,"author":{"gitId":"Song0180"},"content":"            CommandRecordType recordType \u003d getCommandRecordType(inputParts[1]);","lastModifiedDate":"2021-03-30"},{"lineNumber":182,"author":{"gitId":"Song0180"},"content":"            if (recordType \u003d\u003d INVALID) {","lastModifiedDate":"2021-03-30"},{"lineNumber":183,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(CANCEL);","lastModifiedDate":"2021-03-30"},{"lineNumber":184,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":185,"author":{"gitId":"Song0180"},"content":"            String[] rawParams \u003d inputParts[1].split(\"\\\\s+\");","lastModifiedDate":"2021-03-30"},{"lineNumber":186,"author":{"gitId":"Song0180"},"content":"            if (rawParams.length \u003c 2) {","lastModifiedDate":"2021-03-30"},{"lineNumber":187,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(CANCEL);","lastModifiedDate":"2021-03-30"},{"lineNumber":188,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":189,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":190,"author":{"gitId":"Song0180"},"content":"            String rawIndex \u003d rawParams[1].trim().substring(2);","lastModifiedDate":"2021-03-30"},{"lineNumber":191,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":192,"author":{"gitId":"Song0180"},"content":"            int index \u003d Integer.parseInt(rawIndex);","lastModifiedDate":"2021-03-30"},{"lineNumber":193,"author":{"gitId":"Song0180"},"content":"            params.put(\"index\", String.valueOf(index));","lastModifiedDate":"2021-03-30"},{"lineNumber":194,"author":{"gitId":"Song0180"},"content":"            return new CancelCommand(recordType, params);","lastModifiedDate":"2021-03-30"},{"lineNumber":195,"author":{"gitId":"Song0180"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":196,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(Messages.MESSAGE_INDEX_NUMBER_FORMAT_EXCEPTION);","lastModifiedDate":"2021-03-30"},{"lineNumber":197,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":198,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":199,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":200,"author":{"gitId":"Song0180"},"content":"    private CommandRecordType getCommandRecordType(String inputPart) {","lastModifiedDate":"2021-03-30"},{"lineNumber":201,"author":{"gitId":"Song0180"},"content":"        return CommandRecordType.getType(\"\" + inputPart.trim().charAt(2));","lastModifiedDate":"2021-03-30"},{"lineNumber":202,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":203,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":204,"author":{"gitId":"Song0180"},"content":"    private Command prepareView(String[] inputParts) {","lastModifiedDate":"2021-03-30"},{"lineNumber":205,"author":{"gitId":"Song0180"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":206,"author":{"gitId":"Song0180"},"content":"            if (isCommandSyntaxInvalid(inputParts)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":207,"author":{"gitId":"PingruiLi"},"content":"                return new InvalidCommand(VIEW);","lastModifiedDate":"2021-03-18"},{"lineNumber":208,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":209,"author":{"gitId":"Song0180"},"content":"            CommandRecordType recordType \u003d getCommandRecordType(inputParts[1]);","lastModifiedDate":"2021-03-30"},{"lineNumber":210,"author":{"gitId":"PingruiLi"},"content":"            if (recordType \u003d\u003d INVALID) {","lastModifiedDate":"2021-03-17"},{"lineNumber":211,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(VIEW);","lastModifiedDate":"2021-03-17"},{"lineNumber":212,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":213,"author":{"gitId":"Song0180"},"content":"            String typeContent \u003d inputParts[1];","lastModifiedDate":"2021-03-17"},{"lineNumber":214,"author":{"gitId":"Song0180"},"content":"            String optionalParams \u003d getOptionalParamsForView(typeContent);","lastModifiedDate":"2021-03-17"},{"lineNumber":215,"author":{"gitId":"PingruiLi"},"content":"            if (optionalParams.equals(\"\")) {","lastModifiedDate":"2021-03-17"},{"lineNumber":216,"author":{"gitId":"PingruiLi"},"content":"                return new ViewCommand(recordType);","lastModifiedDate":"2021-03-17"},{"lineNumber":217,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":218,"author":{"gitId":"Song0180"},"content":"            switch (recordType) {","lastModifiedDate":"2021-03-17"},{"lineNumber":219,"author":{"gitId":"PingruiLi"},"content":"            case EXERCISE:","lastModifiedDate":"2021-03-17"},{"lineNumber":220,"author":{"gitId":"Song0180"},"content":"                return prepareViewExercise(optionalParams);","lastModifiedDate":"2021-03-17"},{"lineNumber":221,"author":{"gitId":"PingruiLi"},"content":"            case BODY_WEIGHT:","lastModifiedDate":"2021-03-17"},{"lineNumber":222,"author":{"gitId":"Song0180"},"content":"                return prepareViewBodyWeight(optionalParams);","lastModifiedDate":"2021-03-17"},{"lineNumber":223,"author":{"gitId":"PingruiLi"},"content":"            case DIET:","lastModifiedDate":"2021-03-17"},{"lineNumber":224,"author":{"gitId":"Song0180"},"content":"                return prepareViewDiet(optionalParams);","lastModifiedDate":"2021-03-17"},{"lineNumber":225,"author":{"gitId":"PingruiLi"},"content":"            case SLEEP:","lastModifiedDate":"2021-03-17"},{"lineNumber":226,"author":{"gitId":"Song0180"},"content":"                return prepareViewSleep(optionalParams);","lastModifiedDate":"2021-03-17"},{"lineNumber":227,"author":{"gitId":"Song0180"},"content":"            default:","lastModifiedDate":"2021-03-17"},{"lineNumber":228,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(VIEW);","lastModifiedDate":"2021-03-17"},{"lineNumber":229,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":230,"author":{"gitId":"Song0180"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-03-17"},{"lineNumber":231,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(\"The date format is incorrect\");","lastModifiedDate":"2021-03-17"},{"lineNumber":232,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":233,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":234,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":235,"author":{"gitId":"Song0180"},"content":"    private Command prepareDelete(String[] inputParts) {","lastModifiedDate":"2021-03-17"},{"lineNumber":236,"author":{"gitId":"PingruiLi"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":237,"author":{"gitId":"Song0180"},"content":"            if (isCommandSyntaxInvalid(inputParts)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":238,"author":{"gitId":"PingruiLi"},"content":"                return new InvalidCommand(DELETE);","lastModifiedDate":"2021-03-18"},{"lineNumber":239,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":240,"author":{"gitId":"Song0180"},"content":"            CommandRecordType recordType \u003d getCommandRecordType(inputParts[1]);","lastModifiedDate":"2021-03-30"},{"lineNumber":241,"author":{"gitId":"PingruiLi"},"content":"            if (recordType \u003d\u003d INVALID) {","lastModifiedDate":"2021-03-17"},{"lineNumber":242,"author":{"gitId":"PingruiLi"},"content":"                return new InvalidCommand(DELETE);","lastModifiedDate":"2021-03-18"},{"lineNumber":243,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":244,"author":{"gitId":"Song0180"},"content":"            String[] typeIndex \u003d inputParts[1].split(\"\\\\s+\", 2);","lastModifiedDate":"2021-03-17"},{"lineNumber":245,"author":{"gitId":"Song0180"},"content":"            if (typeIndex.length \u003c 2) {","lastModifiedDate":"2021-03-17"},{"lineNumber":246,"author":{"gitId":"PingruiLi"},"content":"                return new InvalidCommand(DELETE);","lastModifiedDate":"2021-03-18"},{"lineNumber":247,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":248,"author":{"gitId":"Song0180"},"content":"            String index \u003d typeIndex[1];","lastModifiedDate":"2021-03-17"},{"lineNumber":249,"author":{"gitId":"Song0180"},"content":"            boolean isIndexValid \u003d index.startsWith(\"i/\") \u0026\u0026 index.length() \u003e\u003d 3;","lastModifiedDate":"2021-03-17"},{"lineNumber":250,"author":{"gitId":"Song0180"},"content":"            if (!isIndexValid) {","lastModifiedDate":"2021-03-17"},{"lineNumber":251,"author":{"gitId":"PingruiLi"},"content":"                return new InvalidCommand(DELETE);","lastModifiedDate":"2021-03-18"},{"lineNumber":252,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":253,"author":{"gitId":"Song0180"},"content":"            index \u003d index.substring(2);","lastModifiedDate":"2021-03-17"},{"lineNumber":254,"author":{"gitId":"PingruiLi"},"content":"            params.put(\"index\", index);","lastModifiedDate":"2021-03-17"},{"lineNumber":255,"author":{"gitId":"PingruiLi"},"content":"            return new DeleteCommand(recordType, params);","lastModifiedDate":"2021-03-17"},{"lineNumber":256,"author":{"gitId":"PingruiLi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-17"},{"lineNumber":257,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(Messages.MESSAGE_INDEX_NUMBER_FORMAT_EXCEPTION);","lastModifiedDate":"2021-03-30"},{"lineNumber":258,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":259,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":260,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":261,"author":{"gitId":"Song0180"},"content":"    private Command prepareAddExercise(String content) throws ParseException, TypeException, NumberFormatException {","lastModifiedDate":"2021-03-18"},{"lineNumber":262,"author":{"gitId":"Song0180"},"content":"        String[] activityDuration \u003d getActivityAndDuration(content);","lastModifiedDate":"2021-03-18"},{"lineNumber":263,"author":{"gitId":"Song0180"},"content":"        if (activityDuration.length \u003c 2) {","lastModifiedDate":"2021-03-18"},{"lineNumber":264,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-18"},{"lineNumber":265,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":266,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":267,"author":{"gitId":"Song0180"},"content":"        String activityRawInput \u003d activityDuration[0].trim();","lastModifiedDate":"2021-03-18"},{"lineNumber":268,"author":{"gitId":"Song0180"},"content":"        String activity \u003d parseExerciseActivityString(activityRawInput);","lastModifiedDate":"2021-03-30"},{"lineNumber":269,"author":{"gitId":"Song0180"},"content":"        if (activity.equals(\"\")) {","lastModifiedDate":"2021-03-18"},{"lineNumber":270,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-18"},{"lineNumber":271,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":272,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":273,"author":{"gitId":"Song0180"},"content":"        String durationRawInput \u003d activityDuration[1].trim();","lastModifiedDate":"2021-03-18"},{"lineNumber":274,"author":{"gitId":"Song0180"},"content":"        String duration \u003d parseDurationString(durationRawInput, true);","lastModifiedDate":"2021-03-18"},{"lineNumber":275,"author":{"gitId":"Song0180"},"content":"        if (duration.equals(\"\")) {","lastModifiedDate":"2021-03-18"},{"lineNumber":276,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-18"},{"lineNumber":277,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":278,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":279,"author":{"gitId":"Song0180"},"content":"        boolean hasDate \u003d durationRawInput.contains(\"date/\");","lastModifiedDate":"2021-03-18"},{"lineNumber":280,"author":{"gitId":"Song0180"},"content":"        String date;","lastModifiedDate":"2021-03-18"},{"lineNumber":281,"author":{"gitId":"Song0180"},"content":"        if (hasDate) {","lastModifiedDate":"2021-03-18"},{"lineNumber":282,"author":{"gitId":"Song0180"},"content":"            String[] durationDate \u003d getDurationAndDate(duration);","lastModifiedDate":"2021-03-18"},{"lineNumber":283,"author":{"gitId":"Song0180"},"content":"            if (durationDate.length \u003d\u003d 0) {","lastModifiedDate":"2021-03-18"},{"lineNumber":284,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-18"},{"lineNumber":285,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":286,"author":{"gitId":"Song0180"},"content":"            duration \u003d durationDate[0];","lastModifiedDate":"2021-03-18"},{"lineNumber":287,"author":{"gitId":"Song0180"},"content":"            date \u003d durationDate[1];","lastModifiedDate":"2021-03-18"},{"lineNumber":288,"author":{"gitId":"Song0180"},"content":"            if (isWorkoutMinutesInvalid(duration)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":289,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(Messages.MESSAGE_INVALID_WORKOUT_MIN);","lastModifiedDate":"2021-03-18"},{"lineNumber":290,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":291,"author":{"gitId":"Song0180"},"content":"            params.put(\"activity\", activity);","lastModifiedDate":"2021-03-18"},{"lineNumber":292,"author":{"gitId":"Song0180"},"content":"            params.put(\"duration\", duration);","lastModifiedDate":"2021-03-18"},{"lineNumber":293,"author":{"gitId":"Song0180"},"content":"            params.put(\"date\", date);","lastModifiedDate":"2021-03-18"},{"lineNumber":294,"author":{"gitId":"Song0180"},"content":"            return new AddCommand(EXERCISE, params);","lastModifiedDate":"2021-03-18"},{"lineNumber":295,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":296,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":297,"author":{"gitId":"Song0180"},"content":"        if (isWorkoutMinutesInvalid(duration)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":298,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(Messages.MESSAGE_INVALID_WORKOUT_MIN);","lastModifiedDate":"2021-03-18"},{"lineNumber":299,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":300,"author":{"gitId":"Song0180"},"content":"        params.put(\"activity\", activity);","lastModifiedDate":"2021-03-18"},{"lineNumber":301,"author":{"gitId":"Song0180"},"content":"        params.put(\"duration\", duration);","lastModifiedDate":"2021-03-18"},{"lineNumber":302,"author":{"gitId":"Song0180"},"content":"        return new AddCommand(EXERCISE, params);","lastModifiedDate":"2021-03-18"},{"lineNumber":303,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":304,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":305,"author":{"gitId":"Song0180"},"content":"    private Command prepareAddDiet(String content) throws ParseException, TypeException, NumberFormatException {","lastModifiedDate":"2021-03-18"},{"lineNumber":306,"author":{"gitId":"Song0180"},"content":"        String[] foodWeight \u003d getFoodAndFoodWeight(content);","lastModifiedDate":"2021-03-18"},{"lineNumber":307,"author":{"gitId":"Song0180"},"content":"        if (foodWeight.length \u003c 2) {","lastModifiedDate":"2021-03-18"},{"lineNumber":308,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-18"},{"lineNumber":309,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":310,"author":{"gitId":"Song0180"},"content":"        String foodRawInput \u003d foodWeight[0].trim();","lastModifiedDate":"2021-03-18"},{"lineNumber":311,"author":{"gitId":"Song0180"},"content":"        String weightRawInput \u003d foodWeight[1].trim();","lastModifiedDate":"2021-03-18"},{"lineNumber":312,"author":{"gitId":"Song0180"},"content":"        String food \u003d parseDietString(foodRawInput);","lastModifiedDate":"2021-03-30"},{"lineNumber":313,"author":{"gitId":"Song0180"},"content":"        if (food.equals(\"\")) {","lastModifiedDate":"2021-03-18"},{"lineNumber":314,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-18"},{"lineNumber":315,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":316,"author":{"gitId":"Song0180"},"content":"        String weight \u003d parseWeightString(weightRawInput, true);","lastModifiedDate":"2021-03-18"},{"lineNumber":317,"author":{"gitId":"Song0180"},"content":"        if (weight.equals(\"\")) {","lastModifiedDate":"2021-03-18"},{"lineNumber":318,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-18"},{"lineNumber":319,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":320,"author":{"gitId":"Song0180"},"content":"        boolean hasDate \u003d weightRawInput.contains(\"date/\");","lastModifiedDate":"2021-03-18"},{"lineNumber":321,"author":{"gitId":"Song0180"},"content":"        String date;","lastModifiedDate":"2021-03-18"},{"lineNumber":322,"author":{"gitId":"Song0180"},"content":"        if (hasDate) {","lastModifiedDate":"2021-03-18"},{"lineNumber":323,"author":{"gitId":"Song0180"},"content":"            String[] weightDate \u003d getDurationAndDate(weight);","lastModifiedDate":"2021-03-18"},{"lineNumber":324,"author":{"gitId":"Song0180"},"content":"            if (weightDate.length \u003d\u003d 0) {","lastModifiedDate":"2021-03-18"},{"lineNumber":325,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-18"},{"lineNumber":326,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":327,"author":{"gitId":"Song0180"},"content":"            weight \u003d weightDate[0];","lastModifiedDate":"2021-03-18"},{"lineNumber":328,"author":{"gitId":"Song0180"},"content":"            date \u003d weightDate[1];","lastModifiedDate":"2021-03-18"},{"lineNumber":329,"author":{"gitId":"Song0180"},"content":"            params.put(\"food\", food);","lastModifiedDate":"2021-03-18"},{"lineNumber":330,"author":{"gitId":"Song0180"},"content":"            params.put(\"weight\", weight);","lastModifiedDate":"2021-03-18"},{"lineNumber":331,"author":{"gitId":"Song0180"},"content":"            params.put(\"date\", date);","lastModifiedDate":"2021-03-18"},{"lineNumber":332,"author":{"gitId":"Song0180"},"content":"            return new AddCommand(DIET, params);","lastModifiedDate":"2021-03-18"},{"lineNumber":333,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":334,"author":{"gitId":"Song0180"},"content":"        params.put(\"food\", food);","lastModifiedDate":"2021-03-18"},{"lineNumber":335,"author":{"gitId":"Song0180"},"content":"        params.put(\"weight\", weight);","lastModifiedDate":"2021-03-18"},{"lineNumber":336,"author":{"gitId":"Song0180"},"content":"        return new AddCommand(DIET, params);","lastModifiedDate":"2021-03-18"},{"lineNumber":337,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":338,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":339,"author":{"gitId":"Song0180"},"content":"    private Command prepareAddBodyWeight(String content) throws ParseException, TypeException, NumberFormatException {","lastModifiedDate":"2021-03-18"},{"lineNumber":340,"author":{"gitId":"Song0180"},"content":"        String weight \u003d parseWeightString(content, false);","lastModifiedDate":"2021-03-18"},{"lineNumber":341,"author":{"gitId":"Song0180"},"content":"        if (weight.equals(\"\")) {","lastModifiedDate":"2021-03-18"},{"lineNumber":342,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-18"},{"lineNumber":343,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":344,"author":{"gitId":"Song0180"},"content":"        boolean hasDate \u003d content.contains(\"date/\");","lastModifiedDate":"2021-03-18"},{"lineNumber":345,"author":{"gitId":"Song0180"},"content":"        String date;","lastModifiedDate":"2021-03-18"},{"lineNumber":346,"author":{"gitId":"Song0180"},"content":"        if (hasDate) {","lastModifiedDate":"2021-03-18"},{"lineNumber":347,"author":{"gitId":"Song0180"},"content":"            String[] weightDate \u003d getDurationAndDate(weight);","lastModifiedDate":"2021-03-18"},{"lineNumber":348,"author":{"gitId":"Song0180"},"content":"            if (weightDate.length \u003d\u003d 0) {","lastModifiedDate":"2021-03-18"},{"lineNumber":349,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-18"},{"lineNumber":350,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":351,"author":{"gitId":"Song0180"},"content":"            weight \u003d weightDate[0];","lastModifiedDate":"2021-03-18"},{"lineNumber":352,"author":{"gitId":"Song0180"},"content":"            date \u003d weightDate[1];","lastModifiedDate":"2021-03-18"},{"lineNumber":353,"author":{"gitId":"Song0180"},"content":"            if (isWeightInvalid(weight)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":354,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(Messages.MESSAGE_INVALID_WEIGHT);","lastModifiedDate":"2021-03-18"},{"lineNumber":355,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":356,"author":{"gitId":"Song0180"},"content":"            params.put(\"weight\", weight);","lastModifiedDate":"2021-03-18"},{"lineNumber":357,"author":{"gitId":"Song0180"},"content":"            params.put(\"date\", date);","lastModifiedDate":"2021-03-18"},{"lineNumber":358,"author":{"gitId":"Song0180"},"content":"            return new AddCommand(BODY_WEIGHT, params);","lastModifiedDate":"2021-03-18"},{"lineNumber":359,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":360,"author":{"gitId":"Song0180"},"content":"        if (isWeightInvalid(weight)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":361,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(Messages.MESSAGE_INVALID_WEIGHT);","lastModifiedDate":"2021-03-18"},{"lineNumber":362,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":363,"author":{"gitId":"Song0180"},"content":"        params.put(\"weight\", weight);","lastModifiedDate":"2021-03-18"},{"lineNumber":364,"author":{"gitId":"Song0180"},"content":"        return new AddCommand(BODY_WEIGHT, params);","lastModifiedDate":"2021-03-18"},{"lineNumber":365,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":366,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":367,"author":{"gitId":"Song0180"},"content":"    private Command prepareAddSleep(String content) throws ParseException, TypeException, NumberFormatException {","lastModifiedDate":"2021-03-18"},{"lineNumber":368,"author":{"gitId":"Song0180"},"content":"        String duration \u003d parseDurationString(content, false);","lastModifiedDate":"2021-03-18"},{"lineNumber":369,"author":{"gitId":"Song0180"},"content":"        if (duration.equals(\"\")) {","lastModifiedDate":"2021-03-18"},{"lineNumber":370,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-18"},{"lineNumber":371,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":372,"author":{"gitId":"Song0180"},"content":"        boolean hasDate \u003d content.contains(\"date/\");","lastModifiedDate":"2021-03-18"},{"lineNumber":373,"author":{"gitId":"Song0180"},"content":"        String date;","lastModifiedDate":"2021-03-18"},{"lineNumber":374,"author":{"gitId":"Song0180"},"content":"        if (hasDate) {","lastModifiedDate":"2021-03-18"},{"lineNumber":375,"author":{"gitId":"Song0180"},"content":"            String[] durationDate \u003d getDurationAndDate(duration);","lastModifiedDate":"2021-03-18"},{"lineNumber":376,"author":{"gitId":"Song0180"},"content":"            if (durationDate.length \u003d\u003d 0) {","lastModifiedDate":"2021-03-18"},{"lineNumber":377,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(ADD);","lastModifiedDate":"2021-03-18"},{"lineNumber":378,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":379,"author":{"gitId":"Song0180"},"content":"            duration \u003d durationDate[0];","lastModifiedDate":"2021-03-18"},{"lineNumber":380,"author":{"gitId":"Song0180"},"content":"            date \u003d durationDate[1];","lastModifiedDate":"2021-03-18"},{"lineNumber":381,"author":{"gitId":"Song0180"},"content":"            if (isSleepHoursInvalid(duration)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":382,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(Messages.MESSAGE_INVALID_SLEEP_HOUR);","lastModifiedDate":"2021-03-18"},{"lineNumber":383,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":384,"author":{"gitId":"Song0180"},"content":"            params.put(\"duration\", duration);","lastModifiedDate":"2021-03-18"},{"lineNumber":385,"author":{"gitId":"Song0180"},"content":"            params.put(\"date\", date);","lastModifiedDate":"2021-03-18"},{"lineNumber":386,"author":{"gitId":"Song0180"},"content":"            return new AddCommand(SLEEP, params);","lastModifiedDate":"2021-03-18"},{"lineNumber":387,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":388,"author":{"gitId":"Song0180"},"content":"        if (isSleepHoursInvalid(duration)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":389,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(Messages.MESSAGE_INVALID_SLEEP_HOUR);","lastModifiedDate":"2021-03-18"},{"lineNumber":390,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":391,"author":{"gitId":"Song0180"},"content":"        params.put(\"duration\", duration);","lastModifiedDate":"2021-03-18"},{"lineNumber":392,"author":{"gitId":"Song0180"},"content":"        return new AddCommand(SLEEP, params);","lastModifiedDate":"2021-03-18"},{"lineNumber":393,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":394,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":395,"author":{"gitId":"Song0180"},"content":"    private Command prepareViewExercise(String optionalParams) throws ParseException {","lastModifiedDate":"2021-03-17"},{"lineNumber":396,"author":{"gitId":"Song0180"},"content":"        String activity;","lastModifiedDate":"2021-03-17"},{"lineNumber":397,"author":{"gitId":"Song0180"},"content":"        String date;","lastModifiedDate":"2021-03-17"},{"lineNumber":398,"author":{"gitId":"Song0180"},"content":"        boolean hasActivity \u003d optionalParams.contains(\"a/\");","lastModifiedDate":"2021-03-17"},{"lineNumber":399,"author":{"gitId":"Song0180"},"content":"        boolean hasDate \u003d optionalParams.contains(\"date/\");","lastModifiedDate":"2021-03-17"},{"lineNumber":400,"author":{"gitId":"PingruiLi"},"content":"        if (!hasActivity \u0026\u0026 !hasDate) {","lastModifiedDate":"2021-03-15"},{"lineNumber":401,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(VIEW);","lastModifiedDate":"2021-03-17"},{"lineNumber":402,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":403,"author":{"gitId":"PingruiLi"},"content":"        if (hasActivity) {","lastModifiedDate":"2021-03-15"},{"lineNumber":404,"author":{"gitId":"Song0180"},"content":"            activity \u003d parseExerciseActivityString(optionalParams);","lastModifiedDate":"2021-03-30"},{"lineNumber":405,"author":{"gitId":"PingruiLi"},"content":"            if (activity.equals(\"\")) {","lastModifiedDate":"2021-03-15"},{"lineNumber":406,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(VIEW);","lastModifiedDate":"2021-03-17"},{"lineNumber":407,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":408,"author":{"gitId":"PingruiLi"},"content":"            if (!hasDate) {","lastModifiedDate":"2021-03-15"},{"lineNumber":409,"author":{"gitId":"Song0180"},"content":"                params.put(\"activity\", activity);","lastModifiedDate":"2021-03-17"},{"lineNumber":410,"author":{"gitId":"Song0180"},"content":"                return new ViewCommand(EXERCISE, params);","lastModifiedDate":"2021-03-17"},{"lineNumber":411,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":412,"author":{"gitId":"Song0180"},"content":"            String[] activityDate \u003d getDurationAndDate(activity);","lastModifiedDate":"2021-03-18"},{"lineNumber":413,"author":{"gitId":"PingruiLi"},"content":"            if (activityDate.length \u003d\u003d 0) {","lastModifiedDate":"2021-03-15"},{"lineNumber":414,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(VIEW);","lastModifiedDate":"2021-03-17"},{"lineNumber":415,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":416,"author":{"gitId":"PingruiLi"},"content":"            activity \u003d activityDate[0];","lastModifiedDate":"2021-03-15"},{"lineNumber":417,"author":{"gitId":"PingruiLi"},"content":"            date \u003d activityDate[1];","lastModifiedDate":"2021-03-15"},{"lineNumber":418,"author":{"gitId":"Song0180"},"content":"            params.put(\"activity\", activity);","lastModifiedDate":"2021-03-17"},{"lineNumber":419,"author":{"gitId":"Song0180"},"content":"            params.put(\"date\", date);","lastModifiedDate":"2021-03-17"},{"lineNumber":420,"author":{"gitId":"Song0180"},"content":"            return new ViewCommand(EXERCISE, params);","lastModifiedDate":"2021-03-17"},{"lineNumber":421,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":422,"author":{"gitId":"Song0180"},"content":"        if (isDateInvalid(optionalParams)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":423,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(VIEW);","lastModifiedDate":"2021-03-17"},{"lineNumber":424,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":425,"author":{"gitId":"Song0180"},"content":"        date \u003d optionalParams.substring(5);","lastModifiedDate":"2021-03-17"},{"lineNumber":426,"author":{"gitId":"Song0180"},"content":"        params.put(\"date\", date);","lastModifiedDate":"2021-03-17"},{"lineNumber":427,"author":{"gitId":"Song0180"},"content":"        return new ViewCommand(EXERCISE, params);","lastModifiedDate":"2021-03-17"},{"lineNumber":428,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":429,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":430,"author":{"gitId":"Song0180"},"content":"    private Command prepareViewDiet(String optionalParams) throws ParseException {","lastModifiedDate":"2021-03-17"},{"lineNumber":431,"author":{"gitId":"Song0180"},"content":"        String food;","lastModifiedDate":"2021-03-17"},{"lineNumber":432,"author":{"gitId":"Song0180"},"content":"        String date;","lastModifiedDate":"2021-03-17"},{"lineNumber":433,"author":{"gitId":"PingruiLi"},"content":"        boolean hasFood \u003d optionalParams.contains(\"f/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":434,"author":{"gitId":"PingruiLi"},"content":"        boolean hasDate \u003d optionalParams.contains(\"date/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":435,"author":{"gitId":"PingruiLi"},"content":"        if (!hasFood \u0026\u0026 !hasDate) {","lastModifiedDate":"2021-03-15"},{"lineNumber":436,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(VIEW);","lastModifiedDate":"2021-03-17"},{"lineNumber":437,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":438,"author":{"gitId":"PingruiLi"},"content":"        if (hasFood) {","lastModifiedDate":"2021-03-15"},{"lineNumber":439,"author":{"gitId":"Song0180"},"content":"            food \u003d parseDietString(optionalParams);","lastModifiedDate":"2021-03-30"},{"lineNumber":440,"author":{"gitId":"PingruiLi"},"content":"            if (food.equals(\"\")) {","lastModifiedDate":"2021-03-15"},{"lineNumber":441,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(VIEW);","lastModifiedDate":"2021-03-17"},{"lineNumber":442,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":443,"author":{"gitId":"PingruiLi"},"content":"            if (!hasDate) {","lastModifiedDate":"2021-03-15"},{"lineNumber":444,"author":{"gitId":"Song0180"},"content":"                params.put(\"food\", food);","lastModifiedDate":"2021-03-17"},{"lineNumber":445,"author":{"gitId":"Song0180"},"content":"                return new ViewCommand(DIET, params);","lastModifiedDate":"2021-03-17"},{"lineNumber":446,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":447,"author":{"gitId":"Song0180"},"content":"            String[] foodDate \u003d getDurationAndDate(food);","lastModifiedDate":"2021-03-18"},{"lineNumber":448,"author":{"gitId":"Song0180"},"content":"            if (foodDate.length \u003d\u003d 0) {","lastModifiedDate":"2021-03-17"},{"lineNumber":449,"author":{"gitId":"Song0180"},"content":"                return new InvalidCommand(VIEW);","lastModifiedDate":"2021-03-17"},{"lineNumber":450,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":451,"author":{"gitId":"Song0180"},"content":"            food \u003d foodDate[0];","lastModifiedDate":"2021-03-17"},{"lineNumber":452,"author":{"gitId":"Song0180"},"content":"            date \u003d foodDate[1];","lastModifiedDate":"2021-03-17"},{"lineNumber":453,"author":{"gitId":"Song0180"},"content":"            params.put(\"food\", food);","lastModifiedDate":"2021-03-17"},{"lineNumber":454,"author":{"gitId":"Song0180"},"content":"            params.put(\"date\", date);","lastModifiedDate":"2021-03-17"},{"lineNumber":455,"author":{"gitId":"Song0180"},"content":"            return new ViewCommand(DIET, params);","lastModifiedDate":"2021-03-17"},{"lineNumber":456,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":457,"author":{"gitId":"Song0180"},"content":"        if (isDateInvalid(optionalParams)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":458,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(VIEW);","lastModifiedDate":"2021-03-17"},{"lineNumber":459,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":460,"author":{"gitId":"PingruiLi"},"content":"        date \u003d optionalParams.substring(5);","lastModifiedDate":"2021-03-15"},{"lineNumber":461,"author":{"gitId":"Song0180"},"content":"        params.put(\"date\", date);","lastModifiedDate":"2021-03-17"},{"lineNumber":462,"author":{"gitId":"Song0180"},"content":"        return new ViewCommand(DIET, params);","lastModifiedDate":"2021-03-17"},{"lineNumber":463,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":464,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":465,"author":{"gitId":"Song0180"},"content":"    private Command prepareViewSleep(String optionalParams) throws ParseException {","lastModifiedDate":"2021-03-18"},{"lineNumber":466,"author":{"gitId":"Song0180"},"content":"        if (isDateInvalid(optionalParams)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":467,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(VIEW);","lastModifiedDate":"2021-03-17"},{"lineNumber":468,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":469,"author":{"gitId":"Song0180"},"content":"        String date \u003d optionalParams.substring(5);","lastModifiedDate":"2021-03-18"},{"lineNumber":470,"author":{"gitId":"Song0180"},"content":"        params.put(\"date\", date);","lastModifiedDate":"2021-03-17"},{"lineNumber":471,"author":{"gitId":"Song0180"},"content":"        return new ViewCommand(SLEEP, params);","lastModifiedDate":"2021-03-17"},{"lineNumber":472,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":473,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":474,"author":{"gitId":"Song0180"},"content":"    private Command prepareViewBodyWeight(String optionalParams) throws ParseException {","lastModifiedDate":"2021-03-18"},{"lineNumber":475,"author":{"gitId":"Song0180"},"content":"        if (isDateInvalid(optionalParams)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":476,"author":{"gitId":"Song0180"},"content":"            return new InvalidCommand(VIEW);","lastModifiedDate":"2021-03-17"},{"lineNumber":477,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":478,"author":{"gitId":"Song0180"},"content":"        String date \u003d optionalParams.substring(5);","lastModifiedDate":"2021-03-18"},{"lineNumber":479,"author":{"gitId":"Song0180"},"content":"        params.put(\"date\", date);","lastModifiedDate":"2021-03-17"},{"lineNumber":480,"author":{"gitId":"Song0180"},"content":"        return new ViewCommand(BODY_WEIGHT, params);","lastModifiedDate":"2021-03-17"},{"lineNumber":481,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":482,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":483,"author":{"gitId":"Song0180"},"content":"    private boolean isDateInvalid(String dateString) {","lastModifiedDate":"2021-03-18"},{"lineNumber":484,"author":{"gitId":"Song0180"},"content":"        return !dateString.startsWith(\"date/\") || dateString.length() \u003c\u003d 5;","lastModifiedDate":"2021-03-18"},{"lineNumber":485,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":486,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":487,"author":{"gitId":"Song0180"},"content":"    private boolean isSleepHoursInvalid(String duration) {","lastModifiedDate":"2021-03-18"},{"lineNumber":488,"author":{"gitId":"Song0180"},"content":"        try {","lastModifiedDate":"2021-03-18"},{"lineNumber":489,"author":{"gitId":"Song0180"},"content":"            int sleepDurationInHours \u003d Integer.parseInt(duration);","lastModifiedDate":"2021-03-18"},{"lineNumber":490,"author":{"gitId":"Song0180"},"content":"            return sleepDurationInHours \u003c\u003d 0 || sleepDurationInHours \u003e\u003d 24;","lastModifiedDate":"2021-03-18"},{"lineNumber":491,"author":{"gitId":"Song0180"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-18"},{"lineNumber":492,"author":{"gitId":"Song0180"},"content":"            return true;","lastModifiedDate":"2021-03-18"},{"lineNumber":493,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":494,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":495,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":496,"author":{"gitId":"Song0180"},"content":"    private boolean isWorkoutMinutesInvalid(String duration) {","lastModifiedDate":"2021-03-18"},{"lineNumber":497,"author":{"gitId":"Song0180"},"content":"        try {","lastModifiedDate":"2021-03-18"},{"lineNumber":498,"author":{"gitId":"Song0180"},"content":"            int workoutMin \u003d Integer.parseInt(duration);","lastModifiedDate":"2021-03-18"},{"lineNumber":499,"author":{"gitId":"Song0180"},"content":"            return workoutMin \u003c\u003d 0 || workoutMin \u003e 1440;","lastModifiedDate":"2021-03-18"},{"lineNumber":500,"author":{"gitId":"Song0180"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-18"},{"lineNumber":501,"author":{"gitId":"Song0180"},"content":"            return true;","lastModifiedDate":"2021-03-18"},{"lineNumber":502,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":503,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":504,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":505,"author":{"gitId":"Song0180"},"content":"    private boolean isWeightInvalid(String weight) {","lastModifiedDate":"2021-03-18"},{"lineNumber":506,"author":{"gitId":"Song0180"},"content":"        try {","lastModifiedDate":"2021-03-18"},{"lineNumber":507,"author":{"gitId":"Song0180"},"content":"            double weightInKg \u003d Double.parseDouble(weight);","lastModifiedDate":"2021-03-18"},{"lineNumber":508,"author":{"gitId":"Song0180"},"content":"            return !(weightInKg \u003e 0);","lastModifiedDate":"2021-03-18"},{"lineNumber":509,"author":{"gitId":"Song0180"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-18"},{"lineNumber":510,"author":{"gitId":"Song0180"},"content":"            return true;","lastModifiedDate":"2021-03-18"},{"lineNumber":511,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":512,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":513,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":514,"author":{"gitId":"Song0180"},"content":"    private String getCommandWord(String[] inputParts) {","lastModifiedDate":"2021-03-18"},{"lineNumber":515,"author":{"gitId":"Song0180"},"content":"        return inputParts[0];","lastModifiedDate":"2021-03-18"},{"lineNumber":516,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":517,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":518,"author":{"gitId":"Song0180"},"content":"    private String[] getInputParts(String userInput) {","lastModifiedDate":"2021-03-18"},{"lineNumber":519,"author":{"gitId":"Song0180"},"content":"        return userInput.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2021-03-18"},{"lineNumber":520,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":521,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":522,"author":{"gitId":"Song0180"},"content":"    private String[] getTypeAndContent(String inputPart) {","lastModifiedDate":"2021-03-18"},{"lineNumber":523,"author":{"gitId":"Song0180"},"content":"        return inputPart.split(\"\\\\s+\", 2);","lastModifiedDate":"2021-03-18"},{"lineNumber":524,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":525,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":526,"author":{"gitId":"Song0180"},"content":"    private String[] getDurationAndDate(String stringWithDate) {","lastModifiedDate":"2021-03-18"},{"lineNumber":527,"author":{"gitId":"PingruiLi"},"content":"        String[] paramDateRaw \u003d stringWithDate.split(\"date/\", 2);","lastModifiedDate":"2021-03-15"},{"lineNumber":528,"author":{"gitId":"PingruiLi"},"content":"        String date \u003d paramDateRaw[1].trim();","lastModifiedDate":"2021-03-15"},{"lineNumber":529,"author":{"gitId":"PingruiLi"},"content":"        String param \u003d paramDateRaw[0].trim();","lastModifiedDate":"2021-03-15"},{"lineNumber":530,"author":{"gitId":"PingruiLi"},"content":"        boolean isParamValid \u003d param.length() \u003e 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":531,"author":{"gitId":"PingruiLi"},"content":"        boolean isDateValid \u003d date.length() \u003d\u003d 10;","lastModifiedDate":"2021-03-15"},{"lineNumber":532,"author":{"gitId":"PingruiLi"},"content":"        if (!isParamValid || !isDateValid) {","lastModifiedDate":"2021-03-15"},{"lineNumber":533,"author":{"gitId":"PingruiLi"},"content":"            return new String[0];","lastModifiedDate":"2021-03-15"},{"lineNumber":534,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":535,"author":{"gitId":"PingruiLi"},"content":"        String[] paramDate \u003d new String[2];","lastModifiedDate":"2021-03-15"},{"lineNumber":536,"author":{"gitId":"PingruiLi"},"content":"        paramDate[0] \u003d param;","lastModifiedDate":"2021-03-15"},{"lineNumber":537,"author":{"gitId":"PingruiLi"},"content":"        paramDate[1] \u003d date;","lastModifiedDate":"2021-03-15"},{"lineNumber":538,"author":{"gitId":"PingruiLi"},"content":"        return paramDate;","lastModifiedDate":"2021-03-15"},{"lineNumber":539,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":540,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":541,"author":{"gitId":"Song0180"},"content":"    private String[] getFoodAndFoodWeight(String content) {","lastModifiedDate":"2021-03-17"},{"lineNumber":542,"author":{"gitId":"Song0180"},"content":"        return content.split(\"w/\", 2);","lastModifiedDate":"2021-03-17"},{"lineNumber":543,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":544,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":545,"author":{"gitId":"Song0180"},"content":"    private String[] getActivityAndDuration(String content) {","lastModifiedDate":"2021-03-17"},{"lineNumber":546,"author":{"gitId":"Song0180"},"content":"        return content.split(\"d/\", 2);","lastModifiedDate":"2021-03-17"},{"lineNumber":547,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":548,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":549,"author":{"gitId":"Song0180"},"content":"    private String getOptionalParamsForView(String typeContent) {","lastModifiedDate":"2021-03-18"},{"lineNumber":550,"author":{"gitId":"Song0180"},"content":"        String[] rawInput \u003d typeContent.split(\"\\\\s+\", 2);","lastModifiedDate":"2021-03-18"},{"lineNumber":551,"author":{"gitId":"Song0180"},"content":"        if (rawInput.length \u003d\u003d 1) {","lastModifiedDate":"2021-03-18"},{"lineNumber":552,"author":{"gitId":"Song0180"},"content":"            return \"\";","lastModifiedDate":"2021-03-18"},{"lineNumber":553,"author":{"gitId":"Song0180"},"content":"        } else {","lastModifiedDate":"2021-03-18"},{"lineNumber":554,"author":{"gitId":"Song0180"},"content":"            return rawInput[1].trim();","lastModifiedDate":"2021-03-18"},{"lineNumber":555,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":556,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":557,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":558,"author":{"gitId":"Song0180"},"content":"    private String parseExerciseActivityString(String activityRawInput) {","lastModifiedDate":"2021-03-30"},{"lineNumber":559,"author":{"gitId":"PingruiLi"},"content":"        boolean isActivityValid;","lastModifiedDate":"2021-03-15"},{"lineNumber":560,"author":{"gitId":"PingruiLi"},"content":"        isActivityValid \u003d activityRawInput.length() \u003e\u003d 3 \u0026\u0026 activityRawInput.startsWith(\"a/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":561,"author":{"gitId":"PingruiLi"},"content":"        if (!isActivityValid) {","lastModifiedDate":"2021-03-15"},{"lineNumber":562,"author":{"gitId":"PingruiLi"},"content":"            return \"\";","lastModifiedDate":"2021-03-15"},{"lineNumber":563,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":564,"author":{"gitId":"PingruiLi"},"content":"        return activityRawInput.substring(2);","lastModifiedDate":"2021-03-15"},{"lineNumber":565,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":566,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":567,"author":{"gitId":"Song0180"},"content":"    private String parseWeightString(String bodyWeightRawInput, boolean prefixChecked) {","lastModifiedDate":"2021-03-18"},{"lineNumber":568,"author":{"gitId":"Song0180"},"content":"        boolean isBodyWeightValid;","lastModifiedDate":"2021-03-17"},{"lineNumber":569,"author":{"gitId":"PingruiLi"},"content":"        if (prefixChecked) {","lastModifiedDate":"2021-03-15"},{"lineNumber":570,"author":{"gitId":"Song0180"},"content":"            isBodyWeightValid \u003d bodyWeightRawInput.length() \u003e 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":571,"author":{"gitId":"Song0180"},"content":"            if (!isBodyWeightValid) {","lastModifiedDate":"2021-03-17"},{"lineNumber":572,"author":{"gitId":"PingruiLi"},"content":"                return \"\";","lastModifiedDate":"2021-03-15"},{"lineNumber":573,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":574,"author":{"gitId":"PingruiLi"},"content":"            return bodyWeightRawInput;","lastModifiedDate":"2021-03-15"},{"lineNumber":575,"author":{"gitId":"PingruiLi"},"content":"        } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":576,"author":{"gitId":"Song0180"},"content":"            isBodyWeightValid \u003d bodyWeightRawInput.length() \u003e\u003d 3 \u0026\u0026 bodyWeightRawInput.startsWith(\"w/\");","lastModifiedDate":"2021-03-17"},{"lineNumber":577,"author":{"gitId":"Song0180"},"content":"            if (!isBodyWeightValid) {","lastModifiedDate":"2021-03-17"},{"lineNumber":578,"author":{"gitId":"PingruiLi"},"content":"                return \"\";","lastModifiedDate":"2021-03-15"},{"lineNumber":579,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":580,"author":{"gitId":"PingruiLi"},"content":"            return bodyWeightRawInput.substring(2);","lastModifiedDate":"2021-03-15"},{"lineNumber":581,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":582,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":583,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":584,"author":{"gitId":"Song0180"},"content":"    private String parseDurationString(String durationRawInput, boolean prefixChecked) {","lastModifiedDate":"2021-03-18"},{"lineNumber":585,"author":{"gitId":"PingruiLi"},"content":"        boolean isDurationValid;","lastModifiedDate":"2021-03-15"},{"lineNumber":586,"author":{"gitId":"PingruiLi"},"content":"        if (prefixChecked) {","lastModifiedDate":"2021-03-15"},{"lineNumber":587,"author":{"gitId":"PingruiLi"},"content":"            isDurationValid \u003d durationRawInput.length() \u003e 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":588,"author":{"gitId":"PingruiLi"},"content":"            if (!isDurationValid) {","lastModifiedDate":"2021-03-15"},{"lineNumber":589,"author":{"gitId":"PingruiLi"},"content":"                return \"\";","lastModifiedDate":"2021-03-15"},{"lineNumber":590,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":591,"author":{"gitId":"PingruiLi"},"content":"            return durationRawInput;","lastModifiedDate":"2021-03-15"},{"lineNumber":592,"author":{"gitId":"PingruiLi"},"content":"        } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":593,"author":{"gitId":"PingruiLi"},"content":"            isDurationValid \u003d durationRawInput.length() \u003e\u003d 3 \u0026\u0026 durationRawInput.startsWith(\"d/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":594,"author":{"gitId":"PingruiLi"},"content":"            if (!isDurationValid) {","lastModifiedDate":"2021-03-15"},{"lineNumber":595,"author":{"gitId":"PingruiLi"},"content":"                return \"\";","lastModifiedDate":"2021-03-15"},{"lineNumber":596,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":597,"author":{"gitId":"PingruiLi"},"content":"            return durationRawInput.substring(2);","lastModifiedDate":"2021-03-15"},{"lineNumber":598,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":599,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":600,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":601,"author":{"gitId":"Song0180"},"content":"    private String parseDietString(String dietRawInput) {","lastModifiedDate":"2021-03-30"},{"lineNumber":602,"author":{"gitId":"PingruiLi"},"content":"        boolean isDietValid;","lastModifiedDate":"2021-03-15"},{"lineNumber":603,"author":{"gitId":"PingruiLi"},"content":"        isDietValid \u003d dietRawInput.length() \u003e\u003d 3 \u0026\u0026 dietRawInput.startsWith(\"f/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":604,"author":{"gitId":"PingruiLi"},"content":"        if (!isDietValid) {","lastModifiedDate":"2021-03-15"},{"lineNumber":605,"author":{"gitId":"PingruiLi"},"content":"            return \"\";","lastModifiedDate":"2021-03-15"},{"lineNumber":606,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":607,"author":{"gitId":"PingruiLi"},"content":"        return dietRawInput.substring(2);","lastModifiedDate":"2021-03-15"},{"lineNumber":608,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":609,"author":{"gitId":"PingruiLi"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"PingruiLi":166,"Song0180":443}},{"path":"src/main/java/seedu/duke/common/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.common;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":" * Container for commonly used messages.","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"public class Messages {","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_VERSION \u003d \"V2.0\";","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_FEATURES \u003d \"You can use the app by using command ADD, VIEW, and DELETE.\";","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_WELCOME \u003d \"Welcome to your personal fitness app - Healthier\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"            + \"What\u0027s in your mind today?\\n\";","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_BYE \u003d \"Nice work today!\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"            + \"You are one step closer to ultimate fitness!\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"            + \"See you again soon :)\\n\";","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_EXIT \u003d \"Thank you for using this app. The app is exiting...\";","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_HELP_PROMPT \u003d \"Not sure how to use this app?\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"            + \"Use command \u0027help\u0027 to see what you can do.\";","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_HELP_GREETINGS \u003d \"Thank you for choosing to be healthier with us.\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"            + \"The current version of this application is: \" + MESSAGE_VERSION + \"\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"            + MESSAGE_FEATURES + \"\\n\";","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_CHECK_GOALS_PROMPT \u003d \"Check out your current goals with command \u0027check\u0027.\\n\";","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_SAME_DAY \u003d \"Welcome back to Healthier today.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_NEW_DAY \u003d \"Nice to see you on a brand new day!\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"            + \"All progress of daily goals have been reset for you.\\n\";","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_NEW_WEEK \u003d \"Today marks a new week.\\nThis week is week %s.\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"            + \"All progress of weekly goals have been reset for you.\\n\";","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_UNACHIEVED_GOALS \u003d \"You have unachieved goals.\\n\";","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_GOALS_DONE_TODAY \u003d \"Congratulations!\\nYou have achieved all goals for today!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_GOALS_DONE_THIS_WEEK \u003d \"Congratulations!\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"            + \"You have achieved all goals for this week!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_VIEW_TITLE \u003d \"Displaying all eligible %s records:\\n\";","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_CHECK_TITLE \u003d \"Checking the progress of eligible %s goals:\\n\";","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"PingruiLi"},"content":"    public static final String MESSAGE_CHECK_HEADER \u003d \"Index\\t\\tDate Set\\t\\tGoal Type\\t\\tTarget\\t\\t\\tProgress\\n\";","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_VIEW_HEADER_EXERCISE \u003d \"Index\\t\\tDate\\t\\tActivity\\t\\tDuration\\t\\tCalories\\n\";","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_VIEW_HEADER_DIET \u003d \"Index\\t\\tDate\\t\\tFood Category\\t\\tWeight\\t\\tCalories\\n\";","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_VIEW_HEADER_SLEEP \u003d \"Index\\t\\tDate\\t\\t\\tDuration\\n\";","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_VIEW_HEADER_WEIGHT \u003d \"Index\\t\\tDate\\t\\t\\tBody Weight\\n\";","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_NO_RECORD \u003d \"Sorry, no records found.\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"            + \"You can try adding records by using command \u0027add\u0027.\";","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_NO_GOAL \u003d \"Sorry, no goals found.\\n\"","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"            + \"You can try setting a goal by using command \u0027set\u0027.\";","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_NO_ELIGIBLE_GOAL \u003d \"Sorry, there are currently no eligible goals\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"            + \"You can try setting a goal by using command \u0027set\u0027.\";","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_INDEX_NUMBER_FORMAT_EXCEPTION \u003d \"The index field is not a valid integer \"","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"            + \"number.\\nPlease try again.\";","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_INDEX_OUT_OF_RANGE_EXCEPTION \u003d \"The index entered is out of range.\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"PingruiLi"},"content":"            + \"Please try again.\";","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_CANT_INIT_STORAGE \u003d \"Sorry, the system is unable to initialize storage \"","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"            + \"due to IO exception.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_CANT_STORE_TIME \u003d \"Sorry, the system is unable to store the time \"","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"            + \"due to IO exception.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_CANT_READ_TIME \u003d \"Sorry, the system is unable to read local time \"","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":"            + \"due to IO exception.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_CANT_ADD_RECORD \u003d \"Sorry, you cannot add record of an unrecognized type.\";","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_CANT_SET_GOAL \u003d \"Sorry, you cannot set goal for an unrecognized type.\";","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_CANT_VIEW_LIST \u003d \"Sorry, you cannot view a record list \"","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"Song0180"},"content":"            + \"of an incorrect record type.\";","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_CANT_CHECK_GOAL \u003d \"Sorry, you cannot check a goal list \"","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"Song0180"},"content":"            + \"of an incorrect goal type.\";","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_CANT_CANCEL_GOAL \u003d \"Sorry, you cannot cancel a goal from a goal list \"","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"Song0180"},"content":"            + \"of an incorrect goal type.\";","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_SYSTEM_ERROR \u003d \"There is something wrong within the system.\";","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_DOUBLE_FORMAT_ERROR \u003d \"A double value is expected for the number field. \"","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"Song0180"},"content":"            + \"Please verify your input and try again.\";","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_INVALID_PERIOD_TYPE \u003d \"The period type you entered is invalid.\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"Song0180"},"content":"            + \"The period type can only be \u0027D\u0027 or \u0027W\u0027. Please try again.\";","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"PingruiLi"},"content":"    public static final String MESSAGE_INVALID_DATE_FORMAT \u003d \"The date format is incorrect or the date is invalid. \"","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"PingruiLi"},"content":"            + \"Please try again.\\n\";","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_INVALID_SLEEP_HOUR \u003d \"The duration you entered is invalid.\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"PingruiLi"},"content":"            + \"It should be an positive integer between 0 and 24, with the unit of hour.\\nPlease try again.\";","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_INVALID_WORKOUT_MIN \u003d \"The duration you entered is invalid.\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"PingruiLi"},"content":"            + \"It should be an positive integer between 0 and 1440, with the unit of minute.\\nPlease try again.\";","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_INVALID_WEIGHT \u003d \"The weight you entered is invalid.\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"PingruiLi"},"content":"            + \"It should be an positive floating point number, with the unit of kilogram(kg).\\nPlease try again.\";","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_INVALID_FOOD_CATEGORY \u003d \"The food category you entered is invalid.\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"Song0180"},"content":"            + \"The acceptable food category list is:\\n\";","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"PingruiLi"},"content":"    public static final String MESSAGE_INVALID_FOOD_AMOUNT \u003d \"The amount you entered is invalid.\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"PingruiLi"},"content":"            + \"The acceptable amount of food should be a floating point number, with the unit of gram(g).\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"PingruiLi"},"content":"            + \"Please try again.\";","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_INVALID_WORKOUT_CATEGORY \u003d \"The workout category you entered is invalid.\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"Song0180"},"content":"            + \"The acceptable workout category list is:\\n\";","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_INVALID_COMMAND \u003d \"Sorry, the command you entered cannot be recognized.\\n\\n\";","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_INVALID_COMMAND_WORD \u003d \"The command word is invalid. \"","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"Song0180"},"content":"            + \"Enter help to see help messages\\n\";","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_INVALID_COMMAND_SYNTAX \u003d \"Sorry, \"","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"Song0180"},"content":"            + \"the syntax of the command entered is incorrect.\\n\\n\";","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_SYNTAX_ADD_COMMAND \u003d \"The syntax for add command is:\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":87,"author":{"gitId":"Song0180"},"content":"            + \"1. Add exercise record\\n\\tadd t/E a/ACTIVITY_NAME d/DURATION [date/DD-MM-YYYY]\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"PingruiLi"},"content":"            + \"   The duration is with unit of minute.\\n\"","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"Song0180"},"content":"            + \"2. Add diet record\\n\\tadd t/D f/FOOD_TYPE w/WEIGHT [date/DD-MM-YYYY]\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":90,"author":{"gitId":"PingruiLi"},"content":"            + \"   The amount is with unit of gram.\\n\"","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"Song0180"},"content":"            + \"3. Add sleep record\\n\\tadd t/S d/DURATION [date/DD-MM-YYYY]\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"PingruiLi"},"content":"            + \"   The duration is with unit of hour.\\n\"","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"PingruiLi"},"content":"            + \"4. Add body weight record\\n\\tadd t/W w/WEIGHT [date/DD-MM-YYYY]\\n\"","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"PingruiLi"},"content":"            + \"   The weight is with unit of kilogram.\\n\"","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"PingruiLi"},"content":"            + \"Please note the type must be in uppercase.\";","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_SYNTAX_VIEW_COMMAND \u003d \"The syntax for view command is:\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":97,"author":{"gitId":"Song0180"},"content":"            + \"1. View exercise records\\n\\tview t/E [a/ACTIVITY_NAME] [date/DD-MM-YYYY]\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"Song0180"},"content":"            + \"2. View diet records\\n\\tview t/D [f/FOOD_NAME] [date/DD-MM-YYYY]\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"Song0180"},"content":"            + \"3. View sleep records\\n\\tview t/S [date/DD-MM-YYYY]\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"Song0180"},"content":"            + \"4. View body weight records\\n\\tview t/W [date/DD-MM-YYYY]\";","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_SYNTAX_DELETE_COMMAND \u003d \"The syntax for delete command is:\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":102,"author":{"gitId":"PingruiLi"},"content":"            + \"1. Delete exercise records\\n\\tdelete t/E [a/ACTIVITY_NAME] [date/DD-MM-YYYY]\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":103,"author":{"gitId":"PingruiLi"},"content":"            + \"2. Delete diet records\\n\\tdelete t/D i/index\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":104,"author":{"gitId":"PingruiLi"},"content":"            + \"3. Delete sleep records\\n\\tdelete t/S i/index\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":105,"author":{"gitId":"PingruiLi"},"content":"            + \"4. Delete body weight records\\n\\tdelete t/W i/index\";","lastModifiedDate":"2021-03-18"},{"lineNumber":106,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_SYNTAX_SET_COMMAND \u003d \"The syntax for set command is:\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"Song0180"},"content":"            + \"1. Set exercise goals\\n\\tset t/E p/PERIOD_TYPE target/TARGET_ENERGY\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"Song0180"},"content":"            + \"2. Set diet goals\\n\\tset t/D p/PERIOD_TYPE target/TARGET_ENERGY\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"Song0180"},"content":"            + \"3. Set sleep goals\\n\\tset t/S p/PERIOD_TYPE target/TARGET_DURATION\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"Song0180"},"content":"            + \"4. Set body weight goals\\n\\tset t/W p/PERIOD_TYPE target/TARGET_WEIGHT\";","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_SYNTAX_CHECK_COMMAND \u003d \"The syntax for check command is:\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"Song0180"},"content":"            + \"1. check exercise goals\\n\\tcheck t/E [p/PERIOD_TYPE]\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"Song0180"},"content":"            + \"2. check diet goals\\n\\tcheck t/D [p/PERIOD_TYPE]\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"Song0180"},"content":"            + \"3. check sleep goals\\n\\tcheck t/S [p/PERIOD_TYPE]\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"Song0180"},"content":"            + \"4. check body weight goals\\n\\tcheck t/W [p/PERIOD_TYPE]\";","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_SYNTAX_CANCEL_COMMAND \u003d \"The syntax for cancel command is:\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"Song0180"},"content":"            + \"1. cancel exercise goals\\n\\tcancel t/E i/INDEX\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"Song0180"},"content":"            + \"2. cancel diet goals\\n\\tcancel t/D i/INDEX\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"Song0180"},"content":"            + \"3. cancel sleep goals\\n\\tcancel t/S i/INDEX\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"Song0180"},"content":"            + \"4. cancel body weight goals\\n\\tcancel t/W i/INDEX\";","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"PingruiLi":20,"Song0180":101}},{"path":"src/main/java/seedu/duke/exception/TypeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.record.FoodCategory;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"import seedu.duke.record.WorkoutCategory;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"public class TypeException extends Exception {","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"    private String invalidType;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"    public TypeException(String type) {","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"        invalidType \u003d type;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"    public String toString() {","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"        if (invalidType.equals(\"food type exception\")) {","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"            return Messages.MESSAGE_INVALID_FOOD_CATEGORY","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"                    + FoodCategory.getValidFoodList();","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"        if (invalidType.equals(\"workout type exception\")) {","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"            return Messages.MESSAGE_INVALID_WORKOUT_CATEGORY","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"                    + WorkoutCategory.getValidWorkoutList();","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"        return \"\";","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"PingruiLi":17,"Song0180":8}},{"path":"src/main/java/seedu/duke/goal/BodyWeightGoal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowwilliam"},"content":"package seedu.duke.goal;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"lowwilliam"},"content":"import seedu.duke.record.RecordType;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"lowwilliam"},"content":"public class BodyWeightGoal extends Goal {","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"lowwilliam"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"lowwilliam"},"content":"     * Initialize an instance of an exercise goal.","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"lowwilliam"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"lowwilliam"},"content":"     * @param periodType       the period type of the goal which can be daily or weekly.","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"lowwilliam"},"content":"     * @param targetBodyWeight the target body weight.","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"lowwilliam"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"lowwilliam"},"content":"    public BodyWeightGoal(PeriodType periodType, double targetBodyWeight) {","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"        super(RecordType.BODYWEIGHT, periodType, targetBodyWeight);","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"lowwilliam"},"content":"        initializeProgress();","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"lowwilliam"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"    public BodyWeightGoal(PeriodType periodType, double targetBodyWeight, LocalDate daySet) {","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"        super(RecordType.BODYWEIGHT, periodType, targetBodyWeight, daySet);","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"        initializeProgress();","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":"    protected void initializeProgress() {","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"PingruiLi"},"content":"        progress \u003d -1;","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"lowwilliam"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"    public String getProgressUnit() {","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"        return \"Kg\";","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"lowwilliam"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"lowwilliam"},"content":"     * Gets a string summary of all info of this goal instance.","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"lowwilliam"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"lowwilliam"},"content":"     * @return a summary of all info of this goal instance in String.","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"lowwilliam"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"lowwilliam"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"lowwilliam"},"content":"    public String getGoalSummary() {","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"PingruiLi"},"content":"        if (progress \u003d\u003d -1) {","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"            return \"Date Set: \" + getDaySet().format(DATE_FORMATTER) + \"\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"                    + \"Goal Type: \" + getPeriodType().toString() + \" \" + getType().toString().toLowerCase() + \"\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"PingruiLi"},"content":"                    + \"Target: \" + getTarget() + \" \" + getProgressUnit() + \"\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"PingruiLi"},"content":"                    + \"Progress: \" + \"You haven\u0027t add any body weight record.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"PingruiLi"},"content":"        } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"PingruiLi"},"content":"            return \"Date Set: \" + getDaySet().format(DATE_FORMATTER) + \"\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"PingruiLi"},"content":"                    + \"Goal Type: \" + getPeriodType().toString() + \" \" + getType().toString().toLowerCase() + \"\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"PingruiLi"},"content":"                    + \"Target: \" + getTarget() + \" \" + getProgressUnit() + \"\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"                    + \"Progress: \" + getProgress() + getProgressUnit();","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"lowwilliam"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"lowwilliam"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"lowwilliam"},"content":"     * Gets all data of the goal in a table row.","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"lowwilliam"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"lowwilliam"},"content":"     * @return a string of all data of the goal in a table row.","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"lowwilliam"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"lowwilliam"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"lowwilliam"},"content":"    public String getGoalData() {","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"PingruiLi"},"content":"        if (progress \u003d\u003d -1) {","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"PingruiLi"},"content":"            return \"\\t\" + getDaySet().format(DATE_FORMATTER) + \"\\t\\t\"","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"PingruiLi"},"content":"                    + getPeriodType().toString().toLowerCase() + \"\\t\\t\"","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"PingruiLi"},"content":"                    + getTarget() + \" \" + getProgressUnit() + \"\\t\\t\"","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"PingruiLi"},"content":"                    + \"None Proress\" + \"\\n\";","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"PingruiLi"},"content":"        } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"PingruiLi"},"content":"            return \"\\t\" + getDaySet().format(DATE_FORMATTER) + \"\\t\\t\"","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"PingruiLi"},"content":"                    + getPeriodType().toString().toLowerCase() + \"\\t\\t\"","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"PingruiLi"},"content":"                    + getTarget() + \" \" + getProgressUnit() + \"\\t\\t\"","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"PingruiLi"},"content":"                    + getProgress() + \" \" + getProgressUnit() + \"\\n\";","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"lowwilliam"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"PingruiLi"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"PingruiLi"},"content":"    public String getGoalDataToStore() {","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"PingruiLi"},"content":"        return \"W\" + SEPARATOR + getDaySet().format(DATE_FORMATTER) + SEPARATOR + periodType + SEPARATOR + target;","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"lowwilliam"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"lowwilliam":36,"PingruiLi":34,"Song0180":8}},{"path":"src/main/java/seedu/duke/goal/DietGoal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"baggiiiie"},"content":"package seedu.duke.goal;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"baggiiiie"},"content":"import seedu.duke.record.RecordType;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"baggiiiie"},"content":"public class DietGoal extends Goal {","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"baggiiiie"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"baggiiiie"},"content":"     * Initialize an instance of an diet goal.","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"baggiiiie"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"baggiiiie"},"content":"     * @param periodType   the period type of the goal which can be daily or weekly.","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"baggiiiie"},"content":"     * @param targetEnergy the target energy to be consumed.","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"baggiiiie"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"baggiiiie"},"content":"    public DietGoal(PeriodType periodType, double targetEnergy) {","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"        super(RecordType.DIET, periodType, targetEnergy);","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"baggiiiie"},"content":"        initializeProgress();","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"baggiiiie"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"    public DietGoal(PeriodType periodType, double targetEnergy, LocalDate daySet) {","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"        super(RecordType.DIET, periodType, targetEnergy, daySet);","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"        initializeProgress();","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"baggiiiie"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"    public String getProgressUnit() {","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"        return \"Kcal\";","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"baggiiiie"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"baggiiiie"},"content":"     * Gets a string summary of all info of this goal instance.","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"baggiiiie"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"baggiiiie"},"content":"     * @return a summary of all info of this goal instance in String.","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"baggiiiie"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"baggiiiie"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"baggiiiie"},"content":"    public String getGoalSummary() {","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"        return \"Date Set: \" + getDaySet().format(DATE_FORMATTER) + \"\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"                + \"Goal Type: \" + getPeriodType().toString() + \" \" + getType().toString().toLowerCase() + \"\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"PingruiLi"},"content":"                + \"Target: \" + getTarget() + \" \" + getProgressUnit() + \"\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"PingruiLi"},"content":"                + \"Progress: \" + getProgress() + \" \" + getProgressUnit();","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"baggiiiie"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"baggiiiie"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"baggiiiie"},"content":"     * Gets all data of the goal in a table row.","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"baggiiiie"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"baggiiiie"},"content":"     * @return a string of all data of the goal in a table row.","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"baggiiiie"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"baggiiiie"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"baggiiiie"},"content":"    public String getGoalData() {","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"PingruiLi"},"content":"        return \"\\t\" + getDaySet().format(DATE_FORMATTER) + \"\\t\\t\"","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"PingruiLi"},"content":"                + getPeriodType().toString().toLowerCase() + \"\\t\\t\"","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"PingruiLi"},"content":"                + getTarget() + \" \" + getProgressUnit() + \"\\t\\t\"","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"PingruiLi"},"content":"                + getProgress() + \" \" + getProgressUnit() + \"\\n\";","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"baggiiiie"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"PingruiLi"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"PingruiLi"},"content":"    public String getGoalDataToStore() {","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"PingruiLi"},"content":"        return \"D\" + SEPARATOR + getDaySet().format(DATE_FORMATTER) + SEPARATOR + periodType + SEPARATOR + target;","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"baggiiiie"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"baggiiiie":37,"PingruiLi":19,"Song0180":7}},{"path":"src/main/java/seedu/duke/goal/ExerciseGoal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.goal;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.record.RecordType;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"public class ExerciseGoal extends Goal {","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"     * Initialize an instance of an exercise goal.","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"     * @param periodType   the period type of the goal which can be daily or weekly.","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"     * @param targetEnergy the target energy to be burnt.","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"    public ExerciseGoal(PeriodType periodType, double targetEnergy) {","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"        super(RecordType.EXERCISE, periodType, targetEnergy);","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"        initializeProgress();","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"    public ExerciseGoal(PeriodType periodType, double targetEnergy, LocalDate daySet) {","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"        super(RecordType.EXERCISE, periodType, targetEnergy, daySet);","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"        initializeProgress();","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"    public String getProgressUnit() {","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"        return \"Kcal\";","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"     * Gets a string summary of all info of this goal instance.","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"     * @return a summary of all info of this goal instance in String.","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"    public String getGoalSummary() {","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"        return \"Date Set: \" + getDaySet().format(DATE_FORMATTER) + \"\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"                + \"Goal Type: \" + getPeriodType().toString() + \" \" + getType().toString().toLowerCase() + \"\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"PingruiLi"},"content":"                + \"Target: \" + getTarget() + \" \" + getProgressUnit() + \"\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"PingruiLi"},"content":"                + \"Progress: \" + getProgress() + \" \" + getProgressUnit();","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"     * Gets all data of the goal in a table row.","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":"     * @return a string of all data of the goal in a table row.","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"    public String getGoalData() {","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"PingruiLi"},"content":"        return \"\\t\" + getDaySet().format(DATE_FORMATTER) + \"\\t\\t\"","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"PingruiLi"},"content":"                + getPeriodType().toString().toLowerCase() + \"\\t\\t   \"","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"PingruiLi"},"content":"                + getTarget() + \" \" + getProgressUnit() + \"\\t\\t\"","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"PingruiLi"},"content":"                + getProgress() + \" \" + getProgressUnit() + \"\\n\";","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"PingruiLi"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"PingruiLi"},"content":"    public String getGoalDataToStore() {","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"PingruiLi"},"content":"        return \"E\" + SEPARATOR + getDaySet().format(DATE_FORMATTER) + SEPARATOR + periodType + SEPARATOR + target;","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"PingruiLi":20,"Song0180":42}},{"path":"src/main/java/seedu/duke/goal/Goal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.goal;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.record.RecordType;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":" * Represents the abstraction of a goal to be achieved.","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"public abstract class Goal {","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"    protected static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"    protected LocalDate daySet;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"    protected RecordType type;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"    protected PeriodType periodType;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"    protected double target;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"    protected double progress;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"    public static final String SEPARATOR \u003d \" | \";","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"     * Initializes the instance with goal type and period type.","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"     * @param type       the type of the goal which corresponds to the type of health records.","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"     * @param periodType the period type of the goal which can be daily or weekly.","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"    public Goal(RecordType type, PeriodType periodType) {","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"        this.periodType \u003d periodType;","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"        daySet \u003d LocalDate.now();","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"PingruiLi"},"content":"    public Goal(RecordType type, PeriodType periodType, double target) {","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"PingruiLi"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"PingruiLi"},"content":"        this.periodType \u003d periodType;","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"PingruiLi"},"content":"        daySet \u003d LocalDate.now();","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"PingruiLi"},"content":"        this.target \u003d target;","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"PingruiLi"},"content":"    public Goal(RecordType type, PeriodType periodType, double target, LocalDate date) {","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"PingruiLi"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"PingruiLi"},"content":"        this.periodType \u003d periodType;","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"PingruiLi"},"content":"        daySet \u003d date;","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"PingruiLi"},"content":"        this.target \u003d target;","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"PingruiLi"},"content":"    public double getProgress() {","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"PingruiLi"},"content":"        return progress;","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"PingruiLi"},"content":"    public void setProgress(double progress) {","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"PingruiLi"},"content":"        this.progress \u003d progress;","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"PingruiLi"},"content":"    protected void initializeProgress() {","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"PingruiLi"},"content":"        progress \u003d 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"PingruiLi"},"content":"    public double getTarget() {","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"PingruiLi"},"content":"        return target;","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"Song0180"},"content":"     * Gets the date when the goal is set by the user.","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"Song0180"},"content":"     * @return the date when the goal is set by the user.","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"Song0180"},"content":"    public LocalDate getDaySet() {","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"Song0180"},"content":"        return daySet;","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"Song0180"},"content":"     * Gets the type of the goal.","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"Song0180"},"content":"     * @return the type of the goal which corresponds to the type of health records.","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"Song0180"},"content":"    public RecordType getType() {","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"Song0180"},"content":"        return type;","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"Song0180"},"content":"     * Gets the period type of a goal.","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"Song0180"},"content":"     * @return the period type of the goal which can be daily or weekly.","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"Song0180"},"content":"    public PeriodType getPeriodType() {","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"Song0180"},"content":"        return periodType;","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"Song0180"},"content":"     * Gets a string summary of all info of this goal instance.","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"Song0180"},"content":"     * @return a summary of all info of this goal instance in String.","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"Song0180"},"content":"    public abstract String getGoalSummary();","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"Song0180"},"content":"     * Gets all data of the goal in a table row.","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"Song0180"},"content":"     * @return a string of all data of the goal in a table row.","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"Song0180"},"content":"    public abstract String getGoalData();","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"Song0180"},"content":"    public abstract String getProgressUnit();","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"PingruiLi"},"content":"    public abstract String getGoalDataToStore();","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"PingruiLi":37,"Song0180":70}},{"path":"src/main/java/seedu/duke/goal/GoalList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.goal;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.goal.comparator.GoalPeriodTypeComparator;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.goal.PeriodType.DAILY;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"public class GoalList {","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"    private final ArrayList\u003cGoal\u003e goals \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"    public void addGoal(Goal newGoal) {","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"        goals.add(newGoal);","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"        goals.sort(new GoalPeriodTypeComparator());","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"    public String removeGoal(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"        Goal goalToRemove \u003d goals.get(index);","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"        String goalSummary \u003d goalToRemove.getGoalSummary();","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"        goals.remove(goalToRemove);","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"        return goalSummary;","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"    public String getGoalsToPrint(PeriodType optionalPeriodType) {","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"        if (goals.isEmpty()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"            return Messages.MESSAGE_NO_GOAL;","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"        } else if (optionalPeriodType !\u003d null) {","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"            StringBuilder goalStringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"            int i \u003d 1;","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"            for (Goal goal : goals) {","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"                if (goal.getPeriodType() \u003d\u003d optionalPeriodType) {","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"PingruiLi"},"content":"                    goalStringBuilder.append(i).append(\"\\t\\t\").append(goal.getGoalData()).append(\"\\n\");","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"                    i++;","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"                }","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"            if (i \u003d\u003d 1) {","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"                return Messages.MESSAGE_NO_ELIGIBLE_GOAL;","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"            return Messages.MESSAGE_CHECK_HEADER + goalStringBuilder.toString();","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"        } else {","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"            StringBuilder goalStringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"            int i \u003d 1;","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"            for (Goal goal : goals) {","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"PingruiLi"},"content":"                goalStringBuilder.append(i).append(\"\\t\\t\").append(goal.getGoalData()).append(\"\\n\");","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":"                i++;","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"            return Messages.MESSAGE_CHECK_HEADER + goalStringBuilder.toString();","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":"    public void initializeGoalProgress(PeriodType periodType) {","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"        assert periodType \u003d\u003d PeriodType.INVALID || periodType \u003d\u003d null : \"A period type is expected but not received!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"Song0180"},"content":"        if (goals.isEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"            return;","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"Song0180"},"content":"        for (Goal goal : goals) {","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"Song0180"},"content":"            if (goal.getPeriodType().equals(periodType)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"Song0180"},"content":"                goal.initializeProgress();","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"PingruiLi"},"content":"    public String getGoalToStore() {","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"PingruiLi"},"content":"        StringBuilder goalStringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"PingruiLi"},"content":"        for (Goal goal : goals) {","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"PingruiLi"},"content":"            goalStringBuilder.append(goal.getGoalDataToStore()).append(\"\\n\");","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"PingruiLi"},"content":"        return goalStringBuilder.toString();","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"Song0180"},"content":"    public void updateDailyProgress(double progress) {","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"PingruiLi"},"content":"        for (Goal goal : goals) {","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"PingruiLi"},"content":"            if (goal.getPeriodType() \u003d\u003d DAILY) {","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"PingruiLi"},"content":"                goal.setProgress(progress);","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"Song0180"},"content":"    public boolean isNotEmpty() {","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"Song0180"},"content":"        return goals.size() !\u003d 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"PingruiLi":20,"Song0180":64}},{"path":"src/main/java/seedu/duke/goal/PeriodType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.goal;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"public enum PeriodType {","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"    DAILY, WEEKLY, INVALID;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"    public static int getPeriodTypeWeight(PeriodType periodType) {","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"        switch (periodType) {","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"        case DAILY:","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"            return 1;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"        case WEEKLY:","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"            return 2;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"        default:","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"            return 9999;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"    public static PeriodType parsePeriodType(String rawPeriodType) {","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"        switch (rawPeriodType) {","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"        case \"D\":","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"            return DAILY;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"        case \"W\":","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"            return WEEKLY;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"        default:","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"            return INVALID;","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"Song0180":27}},{"path":"src/main/java/seedu/duke/goal/SleepGoal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowwilliam"},"content":"package seedu.duke.goal;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"lowwilliam"},"content":"import seedu.duke.record.RecordType;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"lowwilliam"},"content":"public class SleepGoal extends Goal {","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"lowwilliam"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"lowwilliam"},"content":"     * Initialize an instance of an exercise goal.","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"lowwilliam"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"lowwilliam"},"content":"     * @param periodType     the period type of the goal which can be daily or weekly.","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"lowwilliam"},"content":"     * @param targetDuration the target sleeping duration.","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"lowwilliam"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"lowwilliam"},"content":"    public SleepGoal(PeriodType periodType, double targetDuration) {","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"        super(RecordType.SLEEP, periodType, targetDuration);","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"lowwilliam"},"content":"        initializeProgress();","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"lowwilliam"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"    public SleepGoal(PeriodType periodType, double targetDuration, LocalDate daySet) {","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"        super(RecordType.SLEEP, periodType, targetDuration, daySet);","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"        initializeProgress();","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"    public String getProgressUnit() {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"        return \"hour(s)\";","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"lowwilliam"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"lowwilliam"},"content":"     * Gets a string summary of all info of this goal instance.","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"lowwilliam"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"lowwilliam"},"content":"     * @return a summary of all info of this goal instance in String.","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"lowwilliam"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"lowwilliam"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"lowwilliam"},"content":"    public String getGoalSummary() {","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"        return \"Date Set: \" + getDaySet().format(DATE_FORMATTER) + \"\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"                + \"Goal Type: \" + getPeriodType().toString() + \" \" + getType().toString().toLowerCase() + \"\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"PingruiLi"},"content":"                + \"Target: \" + getTarget() + \" \" + getProgressUnit() + \"\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"PingruiLi"},"content":"                + \"Progress: \" + getProgress() + \" \" + getProgressUnit();","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"lowwilliam"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"lowwilliam"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"lowwilliam"},"content":"     * Gets all data of the goal in a table row.","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"lowwilliam"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"lowwilliam"},"content":"     * @return a string of all data of the goal in a table row.","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"lowwilliam"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"lowwilliam"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"lowwilliam"},"content":"    public String getGoalData() {","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"PingruiLi"},"content":"        return \"\\t\" + getDaySet().format(DATE_FORMATTER) + \"\\t\\t\"","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"PingruiLi"},"content":"                + getPeriodType().toString().toLowerCase() + \"\\t\\t   \"","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"PingruiLi"},"content":"                + getTarget() + \" \" + getProgressUnit() + \"\\t\\t\"","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"PingruiLi"},"content":"                + getProgress() + \" \" + getProgressUnit() + \"\\n\";","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"lowwilliam"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"PingruiLi"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"PingruiLi"},"content":"    public String getGoalDataToStore() {","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"PingruiLi"},"content":"        return \"S\" + SEPARATOR + getDaySet().format(DATE_FORMATTER) + SEPARATOR + periodType + SEPARATOR + target;","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"lowwilliam"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"lowwilliam":34,"PingruiLi":20,"Song0180":7}},{"path":"src/main/java/seedu/duke/goal/comparator/GoalPeriodTypeComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.goal.comparator;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.goal.Goal;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.goal.PeriodType;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"public class GoalPeriodTypeComparator implements Comparator\u003cGoal\u003e {","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"    public int compare(Goal goal1, Goal goal2) {","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"        PeriodType periodType1 \u003d goal1.getPeriodType();","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"        PeriodType periodType2 \u003d goal2.getPeriodType();","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"        if (PeriodType.getPeriodTypeWeight(periodType1) \u003d\u003d PeriodType.getPeriodTypeWeight(periodType2)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"            if (goal1.getDaySet().isBefore(goal2.getDaySet())) {","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"                return -1;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"            } else if (goal1.getDaySet().isAfter(goal2.getDaySet())) {","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"                return 1;","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"            } else {","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"                return 0;","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"        } else if (PeriodType.getPeriodTypeWeight(periodType1) \u003c PeriodType.getPeriodTypeWeight(periodType2)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"            return -1;","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"        } else {","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"            return 1;","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"Song0180":27}},{"path":"src/main/java/seedu/duke/goal/timemanager/TimeController.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.goal.timemanager;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.account.FitCenter;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"import seedu.duke.goal.PeriodType;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"import seedu.duke.ui.UI;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"import java.io.File;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"import java.time.temporal.WeekFields;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"import java.util.Locale;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"public class TimeController {","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"    private static final Logger logger \u003d Logger.getLogger(\"Time Control logger\");","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"    private LocalDate appToday;","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"    private int appWeekOfYear;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"    private Storage storage;","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"    private boolean isInitialStart \u003d false;","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"    public TimeController() {","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"        try {","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"            String timePath \u003d \"data\" + File.separator + \"appTime.txt\";","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"            storage \u003d new Storage(timePath);","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"            String[] timeStrParams \u003d getTimeStrParamsFromFile();","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"            if (timeStrParams !\u003d null \u0026\u0026 timeStrParams.length \u003d\u003d 2) {","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"                appToday \u003d LocalDate.parse(timeStrParams[0]);","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"                appWeekOfYear \u003d Integer.parseInt(timeStrParams[1]);","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"            } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"                appToday \u003d LocalDate.now();","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"                appWeekOfYear \u003d getSystemWeekOfYear();","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"            UI.printMessage(Messages.MESSAGE_CANT_INIT_STORAGE);","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"    public void checkForTime(FitCenter fitCenter) {","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"        boolean toUpdateFile \u003d false;","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"        if (isTodayANewDay()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"            appToday \u003d LocalDate.now();","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":"            toUpdateFile \u003d true;","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":"            fitCenter.resetGoalProgress(PeriodType.DAILY);","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"            UI.printMessage(Messages.MESSAGE_NEW_DAY + Messages.MESSAGE_CHECK_GOALS_PROMPT);","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"        } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"            if (!isInitialStart) {","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"                UI.printMessage(Messages.MESSAGE_SAME_DAY);","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"        if (isThisWeekANewWeek()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"Song0180"},"content":"            appWeekOfYear \u003d getSystemWeekOfYear();","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"            toUpdateFile \u003d true;","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"Song0180"},"content":"            fitCenter.resetGoalProgress(PeriodType.WEEKLY);","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"Song0180"},"content":"            UI.printMessage(String.format(Messages.MESSAGE_NEW_WEEK, appWeekOfYear)","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"Song0180"},"content":"                    + Messages.MESSAGE_CHECK_GOALS_PROMPT);","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"Song0180"},"content":"        if (toUpdateFile || isInitialStart) {","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"Song0180"},"content":"            storeTimeToTextFile();","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"Song0180"},"content":"    private boolean isTodayANewDay() {","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"Song0180"},"content":"        return appToday.isBefore(LocalDate.now());","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"Song0180"},"content":"    private boolean isThisWeekANewWeek() {","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"Song0180"},"content":"        int currentWeekOfYear \u003d getSystemWeekOfYear();","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"Song0180"},"content":"        return appWeekOfYear \u003c currentWeekOfYear;","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"Song0180"},"content":"    private int getSystemWeekOfYear() {","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"Song0180"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"Song0180"},"content":"        return today.get(WeekFields.of(Locale.getDefault()).weekOfYear());","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"Song0180"},"content":"    private String[] getTimeStrParamsFromFile() {","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"Song0180"},"content":"        try {","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"Song0180"},"content":"            String[] timeStrParams \u003d storage.getTimeStrParams();","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"Song0180"},"content":"            if (timeStrParams.length \u003d\u003d 1) {","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"Song0180"},"content":"                isInitialStart \u003d true;","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"Song0180"},"content":"            } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"Song0180"},"content":"                logger.log(Level.INFO, \"Param 0: \" + timeStrParams[0] + \" Param 1: \" + timeStrParams[1]);","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"Song0180"},"content":"            return timeStrParams;","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"Song0180"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"Song0180"},"content":"            UI.printMessage(\"Time file not found!\");","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"Song0180"},"content":"            isInitialStart \u003d true;","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"Song0180"},"content":"            return null;","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"Song0180"},"content":"    private void storeTimeToTextFile() {","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"Song0180"},"content":"        try {","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"Song0180"},"content":"            String[] timeStringParams \u003d new String[2];","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"Song0180"},"content":"            timeStringParams[0] \u003d appToday.toString();","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"Song0180"},"content":"            timeStringParams[1] \u003d String.valueOf(appWeekOfYear);","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"Song0180"},"content":"            storage.storeTime(timeStringParams);","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"Song0180"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"Song0180"},"content":"            UI.printMessage(Messages.MESSAGE_CANT_STORE_TIME);","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"Song0180":109}},{"path":"src/main/java/seedu/duke/record/BodyWeight.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowwilliam"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"lowwilliam"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"lowwilliam"},"content":"public class BodyWeight extends Record {","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"    private final double weight;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"    public BodyWeight(double weight, LocalDate date) {","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"        super(RecordType.BODYWEIGHT, date);","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"lowwilliam"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"lowwilliam"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"lowwilliam"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"lowwilliam"},"content":"     * Gets the weight date.","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"lowwilliam"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"lowwilliam"},"content":"     * @return the user\u0027s weight.","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"lowwilliam"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"lowwilliam"},"content":"    public double getWeight() {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"lowwilliam"},"content":"        return weight;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"lowwilliam"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"lowwilliam"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"     * Gets the body weight summary.","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"lowwilliam"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"     * @return the summary of body weight.","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"lowwilliam"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"    public String getRecordSummary() {","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"        return \"Body weight \" + getWeight() + \"Kg on \" + getDate().format(DATE_FORMATTER);","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"    public String getRecordData() {","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"        return \"\\t\\t\\t\" + getDate().format(DATE_FORMATTER)","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"                + \"\\t\\t\" + getWeight() + \" Kg\";","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"lowwilliam"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"PingruiLi"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"PingruiLi"},"content":"    public String getRecordDataToStore() {","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"        return \"W\"  + SEPARATOR + weight + SEPARATOR + getDate().format(DATE_FORMATTER);","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"lowwilliam"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"lowwilliam":23,"PingruiLi":4,"Song0180":15}},{"path":"src/main/java/seedu/duke/record/Diet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowwilliam"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.exception.TypeException;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"lowwilliam"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"import java.util.Locale;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.record.FoodCategory.INVALID;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.record.RecordType.DIET;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"public class Diet extends Record {","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"    private final double calorie;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"    private final FoodCategory foodCategory;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"    private final double amount;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"    private final String formattedDate;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"    private static final String SUMMARY_FORMAT \u003d \"%sg %s on %s\";","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"    private final int spaceCount;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"    private String seperator \u003d \"\";","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"lowwilliam"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"lowwilliam"},"content":"     * Initializes the object with given record type and date.","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"lowwilliam"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"lowwilliam"},"content":"     * @param date the date of the record.","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"lowwilliam"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":"    public Diet(String foodString, double amount, LocalDate date) throws TypeException, NumberFormatException {","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"PingruiLi"},"content":"        super(DIET, date);","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"        foodCategory \u003d FoodCategory.getFoodCategory(foodString);","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"        if (foodCategory \u003d\u003d INVALID) {","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"PingruiLi"},"content":"            throw new TypeException(\"food type exception\");","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"lowwilliam"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"PingruiLi"},"content":"        spaceCount \u003d 20 - foodCategory.toString().length();","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"PingruiLi"},"content":"        for (int i \u003d 0; i \u003c spaceCount; i++) {","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"PingruiLi"},"content":"            seperator +\u003d \" \";","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"PingruiLi"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"        calorie \u003d amount * foodCategory.getCaloriePer100g();","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"PingruiLi"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"PingruiLi"},"content":"        formattedDate \u003d date.format(DATE_FORMATTER);","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"lowwilliam"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"     * Gets the calorie of the food.","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"     * @return the calorie of the food.","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":"    public double getCalorie() {","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":"        return calorie;","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"     * Gets the weight of the food in g.","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"     * @return the weight of the food in g.","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"    public double getAmount() {","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"Song0180"},"content":"        return amount;","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"Song0180"},"content":"     * Gets the category of the food.","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"Song0180"},"content":"     * @return the category of the food.","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"Song0180"},"content":"    public FoodCategory getFoodCategory() {","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"Song0180"},"content":"        return foodCategory;","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"lowwilliam"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"lowwilliam"},"content":"     * Gets the summary of users\u0027 diet record.","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"lowwilliam"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"lowwilliam"},"content":"     * @return the diet summary.","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"lowwilliam"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"lowwilliam"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"lowwilliam"},"content":"    public String getRecordSummary() {","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"Song0180"},"content":"        return String.format(SUMMARY_FORMAT, \"\" + amount,","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"Song0180"},"content":"                foodCategory.toString().toLowerCase(Locale.ROOT), formattedDate);","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"Song0180"},"content":"     * Gets the record data of this diet record in a row.","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"Song0180"},"content":"     * @return a string of the record data of this diet record in a row.","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"Song0180"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":85,"author":{"gitId":"Song0180"},"content":"    public String getRecordData() {","lastModifiedDate":"2021-03-18"},{"lineNumber":86,"author":{"gitId":"Song0180"},"content":"        return \"\\t\\t\\t\" + getDate().format(DATE_FORMATTER)","lastModifiedDate":"2021-03-18"},{"lineNumber":87,"author":{"gitId":"Song0180"},"content":"                + \"\\t\" + getFoodCategory()","lastModifiedDate":"2021-03-18"},{"lineNumber":88,"author":{"gitId":"PingruiLi"},"content":"                + seperator + getAmount() + \" g\"","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"PingruiLi"},"content":"                + \"\\t\\t\" + getCalorie() + \" Kcal\";","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"lowwilliam"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"PingruiLi"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"PingruiLi"},"content":"    public String getRecordDataToStore() {","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"Song0180"},"content":"        return \"D\" + SEPARATOR + foodCategory + SEPARATOR + amount + SEPARATOR + getDate().format(DATE_FORMATTER);","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"lowwilliam"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"lowwilliam":23,"PingruiLi":27,"Song0180":46}},{"path":"src/main/java/seedu/duke/record/Exercise.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"baggiiiie"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.exception.TypeException;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"baggiiiie"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.record.WorkoutCategory.INVALID;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"baggiiiie"},"content":"public class Exercise extends Record {","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"    private double calories;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"    private final WorkoutCategory workoutCategory;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"    private final int duration;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"    private int spaceCount;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"    private String separator \u003d \"\";","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"    public Exercise(String activityStr, int duration, LocalDate date) throws TypeException {","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"        super(RecordType.EXERCISE, date);","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"        try {","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"            workoutCategory \u003d WorkoutCategory.valueOf(activityStr.toUpperCase());","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"            if (workoutCategory \u003d\u003d INVALID) {","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"                throw new IllegalArgumentException();","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"            throw new TypeException(\"workout type exception\");","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"PingruiLi"},"content":"        spaceCount \u003d 16 - workoutCategory.toString().length();","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"PingruiLi"},"content":"        for (int i \u003d 0; i \u003c spaceCount; i++) {","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"            separator +\u003d \" \";","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"PingruiLi"},"content":"        this.calories \u003d duration * workoutCategory.getCaloriePerMin();","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"    public double getCalories() {","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"        return calories;","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"baggiiiie"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"    public WorkoutCategory getWorkoutCategory() {","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"        return workoutCategory;","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"baggiiiie"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"    public int getDuration() {","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"        return duration;","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"baggiiiie"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"baggiiiie"},"content":"    public String getRecordSummary() {","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"        return getDuration() + \" minutes of \"","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"                + getWorkoutCategory() + \" exercise on \" + getDate().format(DATE_FORMATTER);","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"Song0180"},"content":"    public String getRecordData() {","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"        return \"\\t\\t\\t\" + getDate().format(DATE_FORMATTER)","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"Song0180"},"content":"                + \"\\t\" + getWorkoutCategory()","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"                + separator + getDuration() + \" minute(s)\"","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"Song0180"},"content":"                + \"\\t\" + getCalories() + \" cal\";","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"baggiiiie"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"PingruiLi"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"PingruiLi"},"content":"    public String getRecordDataToStore() {","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"Song0180"},"content":"        return \"E\" + SEPARATOR + workoutCategory + SEPARATOR + duration + SEPARATOR + getDate().format(DATE_FORMATTER);","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"baggiiiie"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"baggiiiie":15,"PingruiLi":14,"Song0180":36}},{"path":"src/main/java/seedu/duke/record/FoodCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowwilliam"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"lowwilliam"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"import java.util.Locale;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"lowwilliam"},"content":"public enum FoodCategory {","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"    VEGETABLE(25),","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"    PROTEIN(140),","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"    FRUIT(40),","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"    GRAIN(350),","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"    INVALID(0);","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"    private final double caloriePer100g;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"    FoodCategory(double caloriePer100g) {","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"        this.caloriePer100g \u003d caloriePer100g;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"    public double getCaloriePer100g() {","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"        return caloriePer100g;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"    public static FoodCategory getFoodCategory(String foodString) {","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"        for (int i \u003d 0; i \u003c FoodCategory.values().length; i++) {","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"            if (foodString.toUpperCase(Locale.ROOT).equals(FoodCategory.values()[i].toString())) {","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"                return FoodCategory.values()[i];","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"PingruiLi"},"content":"        return INVALID;","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"    public static String getValidFoodList() {","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"        StringBuilder foodList \u003d new StringBuilder();","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"        for (FoodCategory foodCategory : FoodCategory.values()) {","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"            if (!foodCategory.equals(INVALID)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"PingruiLi"},"content":"                foodList.append(i).append(\". \").append(foodCategory.toString().toLowerCase(Locale.ROOT)).append(\"\\n\");","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"                i++;","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"        return foodList.toString();","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"lowwilliam"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"lowwilliam":4,"PingruiLi":24,"Song0180":13}},{"path":"src/main/java/seedu/duke/record/Record.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":" * Represents the record for a type of Health info. Contains the date and type of the record.","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"public abstract class Record {","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"    protected RecordType type;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"    protected static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"    public static final String SEPARATOR \u003d \" | \";","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"     * Initializes the object with given record type and date.","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"     * @param type the type of the record.","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"     * @param date the date of the record.","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"    public Record(RecordType type, LocalDate date) {","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"     * Gets the date of the record.","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"     * @return the date of the record in LocalDate.","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"        return date;","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"     * Sets the date of the record.","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"     * @param date the date of the record in LocalDate.","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"    public void setDate(LocalDate date) {","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":"     * Gets the type of the record.","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"     * @return the type of the record defined in enum RecordType.","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"    public RecordType getType() {","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"        return type;","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"     * Gets a text summary of the record. To be implemented by child classes.","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"     * @return a text summary of the record in String.","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"Song0180"},"content":"    public abstract String getRecordSummary();","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"Song0180"},"content":"     * Gets all data of the record in a table row.","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"Song0180"},"content":"     * @return a string of all data of the record in a table row.","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"Song0180"},"content":"    public abstract String getRecordData();","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"PingruiLi"},"content":"    public abstract String getRecordDataToStore();","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"PingruiLi":4,"Song0180":65}},{"path":"src/main/java/seedu/duke/record/RecordList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.record.comparator.RecordDateComparator;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"import javax.imageio.plugins.tiff.GeoTIFFTagSet;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":" * Represents the list that contains all records of one type.","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"public class RecordList {","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"    private final ArrayList\u003cRecord\u003e records \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"    private final RecordType type;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"    public RecordList(RecordType type) {","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"     * Adds a record to the current list.","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"     * @param newRecord the new record to add.","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"    public void addRecord(Record newRecord) {","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"        records.add(newRecord);","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"        records.sort(new RecordDateComparator());","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"     * Removes a record from the current list by index.","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"PingruiLi"},"content":"     * Return the summary of the deleted record.","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"     * @param index the index of the record.","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"PingruiLi"},"content":"    public String removeRecord(int index) {","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"PingruiLi"},"content":"        Record recordToRemove \u003d records.get(index);","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"PingruiLi"},"content":"        String recordSummary \u003d recordToRemove.getRecordSummary();","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"        records.remove(index);","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"PingruiLi"},"content":"        return recordSummary;","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"     * Gets all records in a string.","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":"     * @return a string of all records.","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"    public String getRecordsToPrint() {","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"        if (records.isEmpty()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"            return Messages.MESSAGE_NO_RECORD;","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":"        } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"            StringBuilder recordStringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"PingruiLi"},"content":"            int i \u003d 1;","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"            for (Record record : records) {","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"PingruiLi"},"content":"                recordStringBuilder.append(i).append(record.getRecordData()).append(\"\\n\");","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"                i++;","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"Song0180"},"content":"            return recordStringBuilder.toString();","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"Song0180"},"content":"     * Gets all records with a given date in a string.","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"Song0180"},"content":"     * @param date the date of the record.","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"Song0180"},"content":"     * @return a string of all records with a given date.","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"Song0180"},"content":"    public String getRecordsToPrint(LocalDate date) {","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"Song0180"},"content":"        if (records.isEmpty()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"Song0180"},"content":"            return Messages.MESSAGE_NO_RECORD;","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"Song0180"},"content":"        } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"Song0180"},"content":"            StringBuilder recordStringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"PingruiLi"},"content":"            int i \u003d 1;","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"Song0180"},"content":"            for (Record record : records) {","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"Song0180"},"content":"                if (record.getDate().isEqual(date)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"PingruiLi"},"content":"                    recordStringBuilder.append(i).append(record.getRecordData()).append(\"\\n\");","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"Song0180"},"content":"                    i++;","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"Song0180"},"content":"                }","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"Song0180"},"content":"            boolean hasRecord \u003d recordStringBuilder.length() !\u003d 0;","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"Song0180"},"content":"            if (!hasRecord) {","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"Song0180"},"content":"                recordStringBuilder.append(Messages.MESSAGE_NO_RECORD);","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":85,"author":{"gitId":"Song0180"},"content":"            return recordStringBuilder.toString();","lastModifiedDate":"2021-03-18"},{"lineNumber":86,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":87,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":88,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":89,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":90,"author":{"gitId":"Song0180"},"content":"     * Gets all records that match the pattern in the given parameter.","lastModifiedDate":"2021-03-18"},{"lineNumber":91,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":92,"author":{"gitId":"Song0180"},"content":"     * @param optionalParam an optional parameter for filtering the records.","lastModifiedDate":"2021-03-18"},{"lineNumber":93,"author":{"gitId":"Song0180"},"content":"     * @return a string of all records that match the pattern in the given parameter.","lastModifiedDate":"2021-03-18"},{"lineNumber":94,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":95,"author":{"gitId":"Song0180"},"content":"    public String getRecordsToPrint(String optionalParam) {","lastModifiedDate":"2021-03-18"},{"lineNumber":96,"author":{"gitId":"Song0180"},"content":"        if (records.isEmpty()) {","lastModifiedDate":"2021-03-18"},{"lineNumber":97,"author":{"gitId":"Song0180"},"content":"            return Messages.MESSAGE_NO_RECORD;","lastModifiedDate":"2021-03-18"},{"lineNumber":98,"author":{"gitId":"Song0180"},"content":"        } else {","lastModifiedDate":"2021-03-18"},{"lineNumber":99,"author":{"gitId":"Song0180"},"content":"            StringBuilder recordStringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-03-18"},{"lineNumber":100,"author":{"gitId":"Song0180"},"content":"            if (type.equals(RecordType.EXERCISE)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":101,"author":{"gitId":"Song0180"},"content":"                return getExerciseRecordString(optionalParam, recordStringBuilder);","lastModifiedDate":"2021-03-18"},{"lineNumber":102,"author":{"gitId":"Song0180"},"content":"            } else if (type.equals(RecordType.DIET)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":103,"author":{"gitId":"Song0180"},"content":"                return getDietRecordString(optionalParam, recordStringBuilder);","lastModifiedDate":"2021-03-18"},{"lineNumber":104,"author":{"gitId":"Song0180"},"content":"            } else {","lastModifiedDate":"2021-03-18"},{"lineNumber":105,"author":{"gitId":"Song0180"},"content":"                return Messages.MESSAGE_CANT_VIEW_LIST;","lastModifiedDate":"2021-03-18"},{"lineNumber":106,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":109,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":110,"author":{"gitId":"Song0180"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":111,"author":{"gitId":"Song0180"},"content":"     * Gets all records that match the pattern in the given parameter on a given date.","lastModifiedDate":"2021-03-18"},{"lineNumber":112,"author":{"gitId":"Song0180"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":113,"author":{"gitId":"Song0180"},"content":"     * @param date          the date of the record.","lastModifiedDate":"2021-03-18"},{"lineNumber":114,"author":{"gitId":"Song0180"},"content":"     * @param optionalParam an optional parameter for filtering the records.","lastModifiedDate":"2021-03-18"},{"lineNumber":115,"author":{"gitId":"Song0180"},"content":"     * @return a string of all records that match the pattern in the given parameter on a given date.","lastModifiedDate":"2021-03-18"},{"lineNumber":116,"author":{"gitId":"Song0180"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":117,"author":{"gitId":"Song0180"},"content":"    public String getRecordsToPrint(LocalDate date, String optionalParam) {","lastModifiedDate":"2021-03-18"},{"lineNumber":118,"author":{"gitId":"Song0180"},"content":"        if (records.isEmpty()) {","lastModifiedDate":"2021-03-18"},{"lineNumber":119,"author":{"gitId":"Song0180"},"content":"            return Messages.MESSAGE_NO_RECORD;","lastModifiedDate":"2021-03-18"},{"lineNumber":120,"author":{"gitId":"Song0180"},"content":"        } else {","lastModifiedDate":"2021-03-18"},{"lineNumber":121,"author":{"gitId":"Song0180"},"content":"            StringBuilder recordStringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-03-18"},{"lineNumber":122,"author":{"gitId":"Song0180"},"content":"            if (type.equals(RecordType.EXERCISE)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":123,"author":{"gitId":"Song0180"},"content":"                return getExerciseRecordString(date, optionalParam, recordStringBuilder);","lastModifiedDate":"2021-03-18"},{"lineNumber":124,"author":{"gitId":"Song0180"},"content":"            } else if (type.equals(RecordType.DIET)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":125,"author":{"gitId":"Song0180"},"content":"                return getDietRecordString(date, optionalParam, recordStringBuilder);","lastModifiedDate":"2021-03-18"},{"lineNumber":126,"author":{"gitId":"Song0180"},"content":"            } else {","lastModifiedDate":"2021-03-18"},{"lineNumber":127,"author":{"gitId":"Song0180"},"content":"                return Messages.MESSAGE_CANT_VIEW_LIST;","lastModifiedDate":"2021-03-18"},{"lineNumber":128,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":129,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":130,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":131,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":132,"author":{"gitId":"PingruiLi"},"content":"    public double getDailyProgress(LocalDate currentDate) {","lastModifiedDate":"2021-03-31"},{"lineNumber":133,"author":{"gitId":"PingruiLi"},"content":"        switch (type) {","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"PingruiLi"},"content":"        case EXERCISE:","lastModifiedDate":"2021-03-31"},{"lineNumber":135,"author":{"gitId":"PingruiLi"},"content":"            return getExerciseProgress(currentDate);","lastModifiedDate":"2021-03-31"},{"lineNumber":136,"author":{"gitId":"PingruiLi"},"content":"        case DIET:","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"PingruiLi"},"content":"            return getDietProgress(currentDate);","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"PingruiLi"},"content":"        case SLEEP:","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"PingruiLi"},"content":"            return getSleepProgress(currentDate);","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"PingruiLi"},"content":"        case BODYWEIGHT:","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"PingruiLi"},"content":"            return  getBodyWeightProgress();","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"PingruiLi"},"content":"        default:","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"PingruiLi"},"content":"            return 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":144,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":145,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":146,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":147,"author":{"gitId":"PingruiLi"},"content":"    private double getDietProgress(LocalDate currentDate) {","lastModifiedDate":"2021-03-31"},{"lineNumber":148,"author":{"gitId":"PingruiLi"},"content":"        double totalCalories \u003d 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":149,"author":{"gitId":"PingruiLi"},"content":"        for (Record record : records) {","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"PingruiLi"},"content":"            Diet diet \u003d (Diet) record;","lastModifiedDate":"2021-03-31"},{"lineNumber":151,"author":{"gitId":"PingruiLi"},"content":"            if (diet.getDate().isEqual(currentDate)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":152,"author":{"gitId":"PingruiLi"},"content":"                totalCalories +\u003d diet.getCalorie();","lastModifiedDate":"2021-03-31"},{"lineNumber":153,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":154,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":155,"author":{"gitId":"PingruiLi"},"content":"        return totalCalories;","lastModifiedDate":"2021-03-31"},{"lineNumber":156,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":157,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":158,"author":{"gitId":"PingruiLi"},"content":"    private double getExerciseProgress(LocalDate currentDate) {","lastModifiedDate":"2021-03-31"},{"lineNumber":159,"author":{"gitId":"PingruiLi"},"content":"        double totalCalories \u003d 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":160,"author":{"gitId":"PingruiLi"},"content":"        for (Record record : records) {","lastModifiedDate":"2021-03-31"},{"lineNumber":161,"author":{"gitId":"PingruiLi"},"content":"            Exercise exercise \u003d (Exercise) record;","lastModifiedDate":"2021-03-31"},{"lineNumber":162,"author":{"gitId":"PingruiLi"},"content":"            if (exercise.getDate().isEqual(currentDate)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"PingruiLi"},"content":"                totalCalories +\u003d exercise.getCalories();","lastModifiedDate":"2021-03-31"},{"lineNumber":164,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":165,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":166,"author":{"gitId":"PingruiLi"},"content":"        return totalCalories;","lastModifiedDate":"2021-03-31"},{"lineNumber":167,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":168,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":169,"author":{"gitId":"PingruiLi"},"content":"    private double getSleepProgress(LocalDate currentDate) {","lastModifiedDate":"2021-03-31"},{"lineNumber":170,"author":{"gitId":"PingruiLi"},"content":"        double totalhours \u003d 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":171,"author":{"gitId":"PingruiLi"},"content":"        for (Record record : records) {","lastModifiedDate":"2021-03-31"},{"lineNumber":172,"author":{"gitId":"PingruiLi"},"content":"            Sleep sleep \u003d (Sleep) record;","lastModifiedDate":"2021-03-31"},{"lineNumber":173,"author":{"gitId":"PingruiLi"},"content":"            if (sleep.getDate().isEqual(currentDate)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":174,"author":{"gitId":"PingruiLi"},"content":"                totalhours +\u003d sleep.getDuration();","lastModifiedDate":"2021-03-31"},{"lineNumber":175,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":177,"author":{"gitId":"PingruiLi"},"content":"        return totalhours;","lastModifiedDate":"2021-03-31"},{"lineNumber":178,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":179,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"PingruiLi"},"content":"    private double getBodyWeightProgress() {","lastModifiedDate":"2021-03-31"},{"lineNumber":181,"author":{"gitId":"PingruiLi"},"content":"        if (records.size() \u003d\u003d 0) {","lastModifiedDate":"2021-03-31"},{"lineNumber":182,"author":{"gitId":"PingruiLi"},"content":"            return -1;","lastModifiedDate":"2021-03-31"},{"lineNumber":183,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":184,"author":{"gitId":"PingruiLi"},"content":"        BodyWeight latestBodyWeightRecord \u003d (BodyWeight) records.get(records.size() - 1);","lastModifiedDate":"2021-03-31"},{"lineNumber":185,"author":{"gitId":"PingruiLi"},"content":"        return latestBodyWeightRecord.getWeight();","lastModifiedDate":"2021-03-31"},{"lineNumber":186,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":187,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":188,"author":{"gitId":"Song0180"},"content":"    private FoodCategory parseStringToFoodCategory(String optionalParam) throws IllegalArgumentException {","lastModifiedDate":"2021-03-18"},{"lineNumber":189,"author":{"gitId":"Song0180"},"content":"        return FoodCategory.valueOf(optionalParam.toUpperCase());","lastModifiedDate":"2021-03-18"},{"lineNumber":190,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":191,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":192,"author":{"gitId":"Song0180"},"content":"    private WorkoutCategory parseStringToWorkoutCategory(String optionalParam) throws IllegalArgumentException {","lastModifiedDate":"2021-03-18"},{"lineNumber":193,"author":{"gitId":"Song0180"},"content":"        return WorkoutCategory.valueOf(optionalParam.toUpperCase());","lastModifiedDate":"2021-03-18"},{"lineNumber":194,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":195,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":196,"author":{"gitId":"Song0180"},"content":"    private String getDietRecordString(String optionalParam, StringBuilder recordStringBuilder) {","lastModifiedDate":"2021-03-18"},{"lineNumber":197,"author":{"gitId":"PingruiLi"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-03-27"},{"lineNumber":198,"author":{"gitId":"Song0180"},"content":"        for (Record record : records) {","lastModifiedDate":"2021-03-18"},{"lineNumber":199,"author":{"gitId":"Song0180"},"content":"            Diet diet \u003d (Diet) record;","lastModifiedDate":"2021-03-18"},{"lineNumber":200,"author":{"gitId":"Song0180"},"content":"            FoodCategory paramCategory \u003d getFoodCategory(optionalParam);","lastModifiedDate":"2021-03-18"},{"lineNumber":201,"author":{"gitId":"Song0180"},"content":"            if (diet.getFoodCategory().equals(paramCategory)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":202,"author":{"gitId":"Song0180"},"content":"                recordStringBuilder.append(i).append(record.getRecordData()).append(\"\\n\");","lastModifiedDate":"2021-03-18"},{"lineNumber":203,"author":{"gitId":"Song0180"},"content":"                i++;","lastModifiedDate":"2021-03-18"},{"lineNumber":204,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":205,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":206,"author":{"gitId":"Song0180"},"content":"        boolean hasRecord \u003d recordStringBuilder.length() !\u003d 0;","lastModifiedDate":"2021-03-18"},{"lineNumber":207,"author":{"gitId":"Song0180"},"content":"        if (!hasRecord) {","lastModifiedDate":"2021-03-18"},{"lineNumber":208,"author":{"gitId":"Song0180"},"content":"            recordStringBuilder.append(Messages.MESSAGE_NO_RECORD);","lastModifiedDate":"2021-03-18"},{"lineNumber":209,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":210,"author":{"gitId":"Song0180"},"content":"        return recordStringBuilder.toString();","lastModifiedDate":"2021-03-18"},{"lineNumber":211,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":212,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":213,"author":{"gitId":"Song0180"},"content":"    private String getDietRecordString(LocalDate date, String optionalParam, StringBuilder recordStringBuilder) {","lastModifiedDate":"2021-03-18"},{"lineNumber":214,"author":{"gitId":"PingruiLi"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-03-27"},{"lineNumber":215,"author":{"gitId":"Song0180"},"content":"        for (Record record : records) {","lastModifiedDate":"2021-03-18"},{"lineNumber":216,"author":{"gitId":"Song0180"},"content":"            Diet diet \u003d (Diet) record;","lastModifiedDate":"2021-03-18"},{"lineNumber":217,"author":{"gitId":"Song0180"},"content":"            FoodCategory paramCategory \u003d getFoodCategory(optionalParam);","lastModifiedDate":"2021-03-18"},{"lineNumber":218,"author":{"gitId":"Song0180"},"content":"            if (diet.getDate().isEqual(date) \u0026\u0026 diet.getFoodCategory().equals(paramCategory)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":219,"author":{"gitId":"PingruiLi"},"content":"                recordStringBuilder.append(i).append(record.getRecordData()).append(\"\\n\");","lastModifiedDate":"2021-03-27"},{"lineNumber":220,"author":{"gitId":"Song0180"},"content":"                i++;","lastModifiedDate":"2021-03-18"},{"lineNumber":221,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":222,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":223,"author":{"gitId":"Song0180"},"content":"        boolean hasRecord \u003d recordStringBuilder.length() !\u003d 0;","lastModifiedDate":"2021-03-18"},{"lineNumber":224,"author":{"gitId":"Song0180"},"content":"        if (!hasRecord) {","lastModifiedDate":"2021-03-18"},{"lineNumber":225,"author":{"gitId":"Song0180"},"content":"            recordStringBuilder.append(Messages.MESSAGE_NO_RECORD);","lastModifiedDate":"2021-03-18"},{"lineNumber":226,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":227,"author":{"gitId":"Song0180"},"content":"        return recordStringBuilder.toString();","lastModifiedDate":"2021-03-18"},{"lineNumber":228,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":229,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":230,"author":{"gitId":"Song0180"},"content":"    private String getExerciseRecordString(String optionalParam, StringBuilder recordStringBuilder) {","lastModifiedDate":"2021-03-18"},{"lineNumber":231,"author":{"gitId":"PingruiLi"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-03-27"},{"lineNumber":232,"author":{"gitId":"Song0180"},"content":"        for (Record record : records) {","lastModifiedDate":"2021-03-18"},{"lineNumber":233,"author":{"gitId":"Song0180"},"content":"            Exercise exercise \u003d (Exercise) record;","lastModifiedDate":"2021-03-18"},{"lineNumber":234,"author":{"gitId":"Song0180"},"content":"            WorkoutCategory paramCategory \u003d getWorkOutCategory(optionalParam);","lastModifiedDate":"2021-03-18"},{"lineNumber":235,"author":{"gitId":"Song0180"},"content":"            if (exercise.getWorkoutCategory().equals(paramCategory)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":236,"author":{"gitId":"PingruiLi"},"content":"                recordStringBuilder.append(i).append(record.getRecordData()).append(\"\\n\");","lastModifiedDate":"2021-03-27"},{"lineNumber":237,"author":{"gitId":"Song0180"},"content":"                i++;","lastModifiedDate":"2021-03-18"},{"lineNumber":238,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":239,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":240,"author":{"gitId":"Song0180"},"content":"        boolean hasRecord \u003d recordStringBuilder.length() !\u003d 0;","lastModifiedDate":"2021-03-18"},{"lineNumber":241,"author":{"gitId":"Song0180"},"content":"        if (!hasRecord) {","lastModifiedDate":"2021-03-18"},{"lineNumber":242,"author":{"gitId":"Song0180"},"content":"            recordStringBuilder.append(Messages.MESSAGE_NO_RECORD);","lastModifiedDate":"2021-03-18"},{"lineNumber":243,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":244,"author":{"gitId":"Song0180"},"content":"        return recordStringBuilder.toString();","lastModifiedDate":"2021-03-18"},{"lineNumber":245,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":246,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":247,"author":{"gitId":"Song0180"},"content":"    private String getExerciseRecordString(LocalDate date, String optionalParam, StringBuilder recordStringBuilder) {","lastModifiedDate":"2021-03-18"},{"lineNumber":248,"author":{"gitId":"PingruiLi"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-03-27"},{"lineNumber":249,"author":{"gitId":"Song0180"},"content":"        for (Record record : records) {","lastModifiedDate":"2021-03-18"},{"lineNumber":250,"author":{"gitId":"Song0180"},"content":"            Exercise exercise \u003d (Exercise) record;","lastModifiedDate":"2021-03-18"},{"lineNumber":251,"author":{"gitId":"Song0180"},"content":"            WorkoutCategory paramCategory \u003d getWorkOutCategory(optionalParam);","lastModifiedDate":"2021-03-18"},{"lineNumber":252,"author":{"gitId":"Song0180"},"content":"            if (exercise.getDate().isEqual(date) \u0026\u0026 exercise.getWorkoutCategory().equals(paramCategory)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":253,"author":{"gitId":"PingruiLi"},"content":"                recordStringBuilder.append(i).append(record.getRecordData()).append(\"\\n\");","lastModifiedDate":"2021-03-27"},{"lineNumber":254,"author":{"gitId":"Song0180"},"content":"                i++;","lastModifiedDate":"2021-03-18"},{"lineNumber":255,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":256,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":257,"author":{"gitId":"Song0180"},"content":"        boolean hasRecord \u003d recordStringBuilder.length() !\u003d 0;","lastModifiedDate":"2021-03-18"},{"lineNumber":258,"author":{"gitId":"Song0180"},"content":"        if (!hasRecord) {","lastModifiedDate":"2021-03-18"},{"lineNumber":259,"author":{"gitId":"Song0180"},"content":"            recordStringBuilder.append(Messages.MESSAGE_NO_RECORD);","lastModifiedDate":"2021-03-18"},{"lineNumber":260,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":261,"author":{"gitId":"Song0180"},"content":"        return recordStringBuilder.toString();","lastModifiedDate":"2021-03-18"},{"lineNumber":262,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":263,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":264,"author":{"gitId":"Song0180"},"content":"    private FoodCategory getFoodCategory(String optionalParam) {","lastModifiedDate":"2021-03-18"},{"lineNumber":265,"author":{"gitId":"Song0180"},"content":"        FoodCategory paramCategory;","lastModifiedDate":"2021-03-18"},{"lineNumber":266,"author":{"gitId":"Song0180"},"content":"        try {","lastModifiedDate":"2021-03-18"},{"lineNumber":267,"author":{"gitId":"Song0180"},"content":"            paramCategory \u003d parseStringToFoodCategory(optionalParam);","lastModifiedDate":"2021-03-18"},{"lineNumber":268,"author":{"gitId":"Song0180"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-03-18"},{"lineNumber":269,"author":{"gitId":"Song0180"},"content":"            paramCategory \u003d FoodCategory.INVALID;","lastModifiedDate":"2021-03-18"},{"lineNumber":270,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":271,"author":{"gitId":"Song0180"},"content":"        return paramCategory;","lastModifiedDate":"2021-03-18"},{"lineNumber":272,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":273,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":274,"author":{"gitId":"Song0180"},"content":"    private WorkoutCategory getWorkOutCategory(String optionalParam) {","lastModifiedDate":"2021-03-18"},{"lineNumber":275,"author":{"gitId":"Song0180"},"content":"        WorkoutCategory paramCategory;","lastModifiedDate":"2021-03-18"},{"lineNumber":276,"author":{"gitId":"Song0180"},"content":"        try {","lastModifiedDate":"2021-03-18"},{"lineNumber":277,"author":{"gitId":"Song0180"},"content":"            paramCategory \u003d parseStringToWorkoutCategory(optionalParam);","lastModifiedDate":"2021-03-18"},{"lineNumber":278,"author":{"gitId":"Song0180"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-03-18"},{"lineNumber":279,"author":{"gitId":"Song0180"},"content":"            paramCategory \u003d WorkoutCategory.INVALID;","lastModifiedDate":"2021-03-18"},{"lineNumber":280,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":281,"author":{"gitId":"Song0180"},"content":"        return paramCategory;","lastModifiedDate":"2021-03-18"},{"lineNumber":282,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":283,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":284,"author":{"gitId":"PingruiLi"},"content":"    public String getRecordToStore() {","lastModifiedDate":"2021-03-27"},{"lineNumber":285,"author":{"gitId":"PingruiLi"},"content":"        StringBuilder recordStringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-03-27"},{"lineNumber":286,"author":{"gitId":"PingruiLi"},"content":"        for (Record record : records) {","lastModifiedDate":"2021-03-27"},{"lineNumber":287,"author":{"gitId":"PingruiLi"},"content":"            recordStringBuilder.append(record.getRecordDataToStore()).append(\"\\n\");","lastModifiedDate":"2021-03-27"},{"lineNumber":288,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":289,"author":{"gitId":"PingruiLi"},"content":"        return recordStringBuilder.toString();","lastModifiedDate":"2021-03-27"},{"lineNumber":290,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":291,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"PingruiLi":81,"Song0180":210}},{"path":"src/main/java/seedu/duke/record/RecordType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":" * Represents the type of a record. Contains 4 kinds of type.","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"public enum RecordType {","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"    SLEEP, EXERCISE, DIET, BODYWEIGHT","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"Song0180":8}},{"path":"src/main/java/seedu/duke/record/Sleep.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"baggiiiie"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"baggiiiie"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"baggiiiie"},"content":"public class Sleep extends Record {","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"    private final double duration;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"baggiiiie"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"     * Represents a record of sleeping data.","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"baggiiiie"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"     * @param duration the duration of the sleep.","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"     * @param date     the date of the sleep.","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"baggiiiie"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"    public Sleep(double duration, LocalDate date) {","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"        super(RecordType.SLEEP, date);","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"baggiiiie"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"baggiiiie"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"baggiiiie"},"content":"     * Gets the duration of a sleep record.","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"baggiiiie"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"     * @return the duration of the sleep record.","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"baggiiiie"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"    public double getDuration() {","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"baggiiiie"},"content":"        return duration;","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"baggiiiie"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"baggiiiie"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"baggiiiie"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"baggiiiie"},"content":"     * Returns the sleep record summary.","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"baggiiiie"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"baggiiiie"},"content":"     * @return a String of the record summary.","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"baggiiiie"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"baggiiiie"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"baggiiiie"},"content":"    public String getRecordSummary() {","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"        return getDuration() + \" hours of sleep on \" + getDate().format(DATE_FORMATTER);","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"    public String getRecordData() {","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"        return \"\\t\\t\\t\" + getDate().format(DATE_FORMATTER)","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"                + \"\\t\\t\" + getDuration() + \" hour(s)\";","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"baggiiiie"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"PingruiLi"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"PingruiLi"},"content":"    public String getRecordDataToStore() {","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":"        return \"S\" + SEPARATOR + duration + SEPARATOR + getDate().format(DATE_FORMATTER);","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"baggiiiie"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"baggiiiie":27,"PingruiLi":7,"Song0180":14}},{"path":"src/main/java/seedu/duke/record/WorkoutCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"import java.util.Locale;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"public enum WorkoutCategory {","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"    WALKING(6),","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"    RUNNING(6.6),","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"    CYCLING(6.9),","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"    ELLIPTICAL(4.7),","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"    ROWER(7.3),","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"    STAIRSTEPPER(3.5),","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"    HIKING(8),","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"    HIIT(10.5),","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"    YOGA(5.2),","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"    DANCE(6.3),","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"    COOLDOWN(1.2),","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"    SWIMMING(9.3),","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"    CORETRAINING(2.4),","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"    INVALID(-1);","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"    private final double caloriePerMin;","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"    WorkoutCategory(double caloriePerMin) {","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"        this.caloriePerMin \u003d caloriePerMin;","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"PingruiLi"},"content":"    public double getCaloriePerMin() {","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"PingruiLi"},"content":"        return caloriePerMin;","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"    public static String getValidWorkoutList() {","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"        StringBuilder workoutList \u003d new StringBuilder();","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"        for (WorkoutCategory workoutCategory : WorkoutCategory.values()) {","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"            if (!workoutCategory.equals(INVALID)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"PingruiLi"},"content":"                workoutList.append(i).append(\". \").append(workoutCategory.toString().toLowerCase(Locale.ROOT))","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"PingruiLi"},"content":"                        .append(\"\\n\");","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"                i++;","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"        return workoutList.toString();","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"PingruiLi":27,"Song0180":15}},{"path":"src/main/java/seedu/duke/record/comparator/RecordDateComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.record.comparator;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.record.Record;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":" * Comparator for comparing two records by date.","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"public class RecordDateComparator implements Comparator\u003cRecord\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"    public int compare(Record record1, Record record2) {","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"        LocalDate date1 \u003d record1.getDate();","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"        LocalDate date2 \u003d record2.getDate();","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"        if (date1.isBefore(date2)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"            return -1;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"        } else if (date1.isAfter(date2)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"            return 1;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"        } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"            return 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"Song0180":24}},{"path":"src/main/java/seedu/duke/storage/FileInfoReader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.account.FitCenter;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.account.User;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.exception.TypeException;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.record.Diet;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.record.Record;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.record.Exercise;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.record.Sleep;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.record.BodyWeight;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.goal.DietGoal;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.goal.ExerciseGoal;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.goal.BodyWeightGoal;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.goal.SleepGoal;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.goal.Goal;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.goal.PeriodType;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"import java.io.File;","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"import java.time.ZoneId;","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":"import java.util.Date;","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"PingruiLi"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandRecordType.EXERCISE;","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandRecordType.DIET;","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandRecordType.BODY_WEIGHT;","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandRecordType.SLEEP;","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.goal.PeriodType.WEEKLY;","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.goal.PeriodType.DAILY;","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"PingruiLi"},"content":"public class FileInfoReader {","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"PingruiLi"},"content":"    private File recordSource;","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"PingruiLi"},"content":"    private File goalSource;","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"    private File timeSource;","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"    public static final String SEPARATOR \u003d \" \\\\| \";","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"PingruiLi"},"content":"    public static final SimpleDateFormat DATE_FORMAT \u003d new SimpleDateFormat(\"dd-MM-yyyy\");","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"PingruiLi"},"content":"    public FileInfoReader(File recordFile, File goalFile) {","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"PingruiLi"},"content":"        recordSource \u003d recordFile;","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"PingruiLi"},"content":"        goalSource \u003d goalFile;","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":"    public FileInfoReader(File timeFile) {","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"        timeSource \u003d timeFile;","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"    public String[] parseTimeStrParams() throws FileNotFoundException {","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":"        Scanner sc \u003d new Scanner(timeSource);","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"        String timeStr \u003d null;","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"Song0180"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"            timeStr \u003d sc.nextLine();","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"        if (timeStr \u003d\u003d null) {","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"Song0180"},"content":"            return null;","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"Song0180"},"content":"        return timeStr.split(SEPARATOR);","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"PingruiLi"},"content":"    public void parseToRecordList(User user) throws FileNotFoundException, TypeException, NumberFormatException,","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"PingruiLi"},"content":"            ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"PingruiLi"},"content":"        Scanner sc \u003d new Scanner(recordSource);","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"PingruiLi"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"PingruiLi"},"content":"            String currentLine \u003d sc.nextLine();","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"Song0180"},"content":"            String[] typeContent \u003d currentLine.split(SEPARATOR, 2);","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"PingruiLi"},"content":"            String content \u003d typeContent[1];","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"PingruiLi"},"content":"            Record record;","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"PingruiLi"},"content":"            switch (typeContent[0]) {","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"PingruiLi"},"content":"            case \"E\":","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"PingruiLi"},"content":"                record \u003d getExerciseRecord(content);","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"PingruiLi"},"content":"                user.getFitCenter().addRecordToList(EXERCISE, record);","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"PingruiLi"},"content":"                break;","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"PingruiLi"},"content":"            case \"D\":","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"PingruiLi"},"content":"                record \u003d getDietRecord(content);","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"PingruiLi"},"content":"                user.getFitCenter().addRecordToList(DIET, record);","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"PingruiLi"},"content":"                break;","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"PingruiLi"},"content":"            case \"W\":","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"PingruiLi"},"content":"                record \u003d getBodyWeightRecord(content);","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"PingruiLi"},"content":"                user.getFitCenter().addRecordToList(BODY_WEIGHT, record);","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"PingruiLi"},"content":"                break;","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"PingruiLi"},"content":"            case \"S\":","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"PingruiLi"},"content":"                record \u003d getSleepRecord(content);","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"PingruiLi"},"content":"                user.getFitCenter().addRecordToList(SLEEP, record);","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"PingruiLi"},"content":"                break;","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"PingruiLi"},"content":"            default:","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"PingruiLi"},"content":"                System.out.println(\"Unable to recognize input format: \" + currentLine);","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"PingruiLi"},"content":"                break;","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"PingruiLi"},"content":"    public void parseToGoal(User user) throws FileNotFoundException, ParseException,","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"PingruiLi"},"content":"            TypeException, NumberFormatException {","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"PingruiLi"},"content":"        FitCenter fitCenter \u003d user.getFitCenter();","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"PingruiLi"},"content":"        Scanner sc \u003d new Scanner(goalSource);","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"PingruiLi"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"PingruiLi"},"content":"            String currentLine \u003d sc.nextLine();","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"Song0180"},"content":"            String[] typeContent \u003d currentLine.split(SEPARATOR, 2);","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"PingruiLi"},"content":"            String content \u003d typeContent[1];","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"PingruiLi"},"content":"            Goal goal;","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"PingruiLi"},"content":"            String[] params \u003d getGoalParams(content);","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"PingruiLi"},"content":"            LocalDate setDay \u003d getDate(params[0]);","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"PingruiLi"},"content":"            PeriodType periodType \u003d getPeriodType(params[1]);","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"PingruiLi"},"content":"            double target \u003d Double.parseDouble(params[2]);","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"PingruiLi"},"content":"            switch (typeContent[0]) {","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"PingruiLi"},"content":"            case \"E\":","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"PingruiLi"},"content":"                goal \u003d new ExerciseGoal(periodType, target, setDay);","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"PingruiLi"},"content":"                fitCenter.addGoalToList(EXERCISE, goal);","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"PingruiLi"},"content":"                break;","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"PingruiLi"},"content":"            case \"D\":","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"PingruiLi"},"content":"                goal \u003d new DietGoal(periodType, target, setDay);","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"PingruiLi"},"content":"                fitCenter.addGoalToList(DIET, goal);","lastModifiedDate":"2021-03-31"},{"lineNumber":116,"author":{"gitId":"PingruiLi"},"content":"                break;","lastModifiedDate":"2021-03-31"},{"lineNumber":117,"author":{"gitId":"PingruiLi"},"content":"            case \"W\":","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"PingruiLi"},"content":"                goal \u003d new BodyWeightGoal(periodType, target, setDay);","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"PingruiLi"},"content":"                fitCenter.addGoalToList(BODY_WEIGHT, goal);","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"PingruiLi"},"content":"                break;","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"PingruiLi"},"content":"            case \"S\":","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"PingruiLi"},"content":"                goal \u003d new SleepGoal(periodType, target, setDay);","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"PingruiLi"},"content":"                fitCenter.addGoalToList(SLEEP, goal);","lastModifiedDate":"2021-03-31"},{"lineNumber":124,"author":{"gitId":"PingruiLi"},"content":"                break;","lastModifiedDate":"2021-03-27"},{"lineNumber":125,"author":{"gitId":"PingruiLi"},"content":"            default:","lastModifiedDate":"2021-03-27"},{"lineNumber":126,"author":{"gitId":"PingruiLi"},"content":"                System.out.println(\"Unable to recognize input format: \" + currentLine);","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"PingruiLi"},"content":"                break;","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"PingruiLi"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2021-03-31"},{"lineNumber":131,"author":{"gitId":"PingruiLi"},"content":"        fitCenter.initializeDailyProgressAtLoading(currentDate);","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":133,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"PingruiLi"},"content":"    private Record getExerciseRecord(String content) throws ParseException, TypeException, NumberFormatException {","lastModifiedDate":"2021-03-31"},{"lineNumber":135,"author":{"gitId":"Song0180"},"content":"        String[] contentParts \u003d content.split(SEPARATOR);","lastModifiedDate":"2021-03-31"},{"lineNumber":136,"author":{"gitId":"PingruiLi"},"content":"        String activity \u003d contentParts[0].trim();","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"PingruiLi"},"content":"        String durationString \u003d contentParts[1].trim();","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"PingruiLi"},"content":"        int duration \u003d Integer.parseInt(durationString);","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"PingruiLi"},"content":"        LocalDate recordDate \u003d getDate(contentParts[2]);","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"PingruiLi"},"content":"        return new Exercise(activity, duration, recordDate);","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":142,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"PingruiLi"},"content":"    private Record getDietRecord(String content) throws ParseException, TypeException, NumberFormatException {","lastModifiedDate":"2021-03-31"},{"lineNumber":144,"author":{"gitId":"Song0180"},"content":"        String[] contentParts \u003d content.split(SEPARATOR);","lastModifiedDate":"2021-03-31"},{"lineNumber":145,"author":{"gitId":"PingruiLi"},"content":"        String food \u003d contentParts[0].trim();","lastModifiedDate":"2021-03-31"},{"lineNumber":146,"author":{"gitId":"PingruiLi"},"content":"        String amountString \u003d contentParts[1].trim();","lastModifiedDate":"2021-03-31"},{"lineNumber":147,"author":{"gitId":"PingruiLi"},"content":"        double amount \u003d Double.parseDouble(amountString);","lastModifiedDate":"2021-03-31"},{"lineNumber":148,"author":{"gitId":"PingruiLi"},"content":"        LocalDate recordDate \u003d getDate(contentParts[2]);","lastModifiedDate":"2021-03-31"},{"lineNumber":149,"author":{"gitId":"PingruiLi"},"content":"        return new Diet(food, amount, recordDate);","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":151,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":152,"author":{"gitId":"PingruiLi"},"content":"    private Record getBodyWeightRecord(String content) throws ParseException, NumberFormatException {","lastModifiedDate":"2021-03-31"},{"lineNumber":153,"author":{"gitId":"Song0180"},"content":"        String[] contentParts \u003d content.split(SEPARATOR);","lastModifiedDate":"2021-03-31"},{"lineNumber":154,"author":{"gitId":"PingruiLi"},"content":"        String weightString \u003d contentParts[0].trim();","lastModifiedDate":"2021-03-31"},{"lineNumber":155,"author":{"gitId":"PingruiLi"},"content":"        double weight \u003d Double.parseDouble(weightString);","lastModifiedDate":"2021-03-31"},{"lineNumber":156,"author":{"gitId":"PingruiLi"},"content":"        LocalDate recordDate \u003d getDate(contentParts[1]);","lastModifiedDate":"2021-03-31"},{"lineNumber":157,"author":{"gitId":"PingruiLi"},"content":"        return new BodyWeight(weight, recordDate);","lastModifiedDate":"2021-03-31"},{"lineNumber":158,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":159,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":160,"author":{"gitId":"PingruiLi"},"content":"    private Record getSleepRecord(String content) throws ParseException, NumberFormatException {","lastModifiedDate":"2021-03-31"},{"lineNumber":161,"author":{"gitId":"Song0180"},"content":"        String[] contentParts \u003d content.split(SEPARATOR);","lastModifiedDate":"2021-03-31"},{"lineNumber":162,"author":{"gitId":"PingruiLi"},"content":"        String durationString \u003d contentParts[0].trim();","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"PingruiLi"},"content":"        double duration \u003d Double.parseDouble(durationString);","lastModifiedDate":"2021-03-31"},{"lineNumber":164,"author":{"gitId":"PingruiLi"},"content":"        LocalDate recordDate \u003d getDate(contentParts[1]);","lastModifiedDate":"2021-03-31"},{"lineNumber":165,"author":{"gitId":"PingruiLi"},"content":"        return new Sleep(duration, recordDate);","lastModifiedDate":"2021-03-31"},{"lineNumber":166,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":167,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":168,"author":{"gitId":"PingruiLi"},"content":"    private String[] getGoalParams(String content) {","lastModifiedDate":"2021-03-31"},{"lineNumber":169,"author":{"gitId":"Song0180"},"content":"        String[] params \u003d content.split(SEPARATOR);","lastModifiedDate":"2021-03-31"},{"lineNumber":170,"author":{"gitId":"Song0180"},"content":"        for (int i \u003d 0; i \u003c params.length; i++) {","lastModifiedDate":"2021-03-31"},{"lineNumber":171,"author":{"gitId":"Song0180"},"content":"            params[i] \u003d params[i].trim();","lastModifiedDate":"2021-03-31"},{"lineNumber":172,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":173,"author":{"gitId":"PingruiLi"},"content":"        return params;","lastModifiedDate":"2021-03-31"},{"lineNumber":174,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":175,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"PingruiLi"},"content":"    private LocalDate getDate(String dateString) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":177,"author":{"gitId":"PingruiLi"},"content":"        Date date \u003d DATE_FORMAT.parse(dateString);","lastModifiedDate":"2021-03-31"},{"lineNumber":178,"author":{"gitId":"Song0180"},"content":"        return date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();","lastModifiedDate":"2021-03-31"},{"lineNumber":179,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":181,"author":{"gitId":"PingruiLi"},"content":"    private PeriodType getPeriodType(String type) throws TypeException {","lastModifiedDate":"2021-03-31"},{"lineNumber":182,"author":{"gitId":"PingruiLi"},"content":"        switch (type) {","lastModifiedDate":"2021-03-31"},{"lineNumber":183,"author":{"gitId":"PingruiLi"},"content":"        case \"DAILY\":","lastModifiedDate":"2021-03-31"},{"lineNumber":184,"author":{"gitId":"PingruiLi"},"content":"            return DAILY;","lastModifiedDate":"2021-03-31"},{"lineNumber":185,"author":{"gitId":"PingruiLi"},"content":"        case \"WEEKLY\":","lastModifiedDate":"2021-03-31"},{"lineNumber":186,"author":{"gitId":"PingruiLi"},"content":"            return WEEKLY;","lastModifiedDate":"2021-03-31"},{"lineNumber":187,"author":{"gitId":"PingruiLi"},"content":"        default:","lastModifiedDate":"2021-03-31"},{"lineNumber":188,"author":{"gitId":"PingruiLi"},"content":"            throw new TypeException(\"period type\");","lastModifiedDate":"2021-03-31"},{"lineNumber":189,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":190,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":191,"author":{"gitId":"PingruiLi"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"PingruiLi":162,"Song0180":29}},{"path":"src/main/java/seedu/duke/storage/FileInfoWriter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.account.FitCenter;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.account.User;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"public class FileInfoWriter {","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"    private String recordFilePath;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"    private String goalFilePath;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"    private String timeFilePath;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"    public FileInfoWriter(String recordPath, String goalPath) {","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"        recordFilePath \u003d recordPath;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"        goalFilePath \u003d goalPath;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"    public FileInfoWriter(String timeFilePath) {","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"        this.timeFilePath \u003d timeFilePath;","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"    public void storeRecordsToFile(User user) throws IOException {","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"        FitCenter fitCenter \u003d user.getFitCenter();","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"        FileWriter recordWriter \u003d new FileWriter(recordFilePath);","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"PingruiLi"},"content":"        String stringToStore \u003d fitCenter.getRecordListForStore();","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"PingruiLi"},"content":"        recordWriter.write(stringToStore);","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"PingruiLi"},"content":"        recordWriter.close();","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"PingruiLi"},"content":"    public void storeGoalsToFile(User user) throws IOException {","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"PingruiLi"},"content":"        FitCenter fitCenter \u003d user.getFitCenter();","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"        FileWriter recordWriter \u003d new FileWriter(goalFilePath);","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"PingruiLi"},"content":"        String stringToStore \u003d fitCenter.getGoalListForStore();","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"PingruiLi"},"content":"        recordWriter.write(stringToStore);","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"PingruiLi"},"content":"        recordWriter.close();","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"    public void storeTimeToFile(String[] timeStrParams) throws IOException {","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"        FileWriter timeWriter \u003d new FileWriter(timeFilePath);","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"        String separator \u003d \" | \";","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"        String timeStr \u003d timeStrParams[0] + separator + timeStrParams[1];","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"        timeWriter.write(timeStr);","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"        timeWriter.close();","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"PingruiLi"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"PingruiLi":30,"Song0180":16}},{"path":"src/main/java/seedu/duke/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.account.User;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.exception.TypeException;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"import java.io.File;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"public class Storage {","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"    private final FileInfoReader fileInfoReader;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"    private final FileInfoWriter fileInfoWriter;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"    public Storage(String recordPath, String goalPath) throws IOException {","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"        File recordSource \u003d new File(recordPath);","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"        File goalSource \u003d new File(goalPath);","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"        if (!recordSource.exists()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"            if (!recordSource.getParentFile().exists()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"                boolean isPathSuccessfullyCreated \u003d recordSource.getParentFile().mkdirs();","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"                if (!isPathSuccessfullyCreated) {","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"                    throw new IOException();","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"                }","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"PingruiLi"},"content":"            boolean isFileSuccessfullyCreated \u003d recordSource.createNewFile();","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"PingruiLi"},"content":"            if (!isFileSuccessfullyCreated) {","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"PingruiLi"},"content":"                throw new IOException();","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"PingruiLi"},"content":"        if (!goalSource.exists()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"PingruiLi"},"content":"            if (!goalSource.getParentFile().exists()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"PingruiLi"},"content":"                boolean isPathSuccessfullyCreated \u003d goalSource.getParentFile().mkdirs();","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"PingruiLi"},"content":"                if (!isPathSuccessfullyCreated) {","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"PingruiLi"},"content":"                    throw new IOException();","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"PingruiLi"},"content":"                }","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"PingruiLi"},"content":"            boolean isFileSuccessfullyCreated \u003d goalSource.createNewFile();","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"PingruiLi"},"content":"            if (!isFileSuccessfullyCreated) {","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"PingruiLi"},"content":"                throw new IOException();","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"PingruiLi"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"PingruiLi"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"PingruiLi"},"content":"        fileInfoWriter \u003d new FileInfoWriter(recordPath, goalPath);","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"PingruiLi"},"content":"        fileInfoReader \u003d new FileInfoReader(recordSource, goalSource);","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":"    public Storage(String timePath) throws IOException {","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"        this.timePath \u003d timePath;","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"        timeSource \u003d new File(timePath);","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"        if (!timeSource.exists()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"            if (!timeSource.getParentFile().exists()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":"                timeSource.getParentFile().mkdirs();","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"Song0180"},"content":"            boolean isFileSuccessfullyCreated \u003d timeSource.createNewFile();","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"            if (!isFileSuccessfullyCreated) {","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"Song0180"},"content":"                throw new IOException();","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"Song0180"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"Song0180"},"content":"        fileInfoWriter \u003d new FileInfoWriter(timePath);","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"Song0180"},"content":"        fileInfoReader \u003d new FileInfoReader(timeSource);","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"Song0180"},"content":"    public void storeTime(String[] timeStrParams) throws IOException {","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"Song0180"},"content":"        fileInfoWriter.storeTimeToFile(timeStrParams);","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"Song0180"},"content":"    public String[] getTimeStrParams() throws FileNotFoundException {","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"Song0180"},"content":"        String[] timeStrParams \u003d fileInfoReader.parseTimeStrParams();","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"Song0180"},"content":"        return Objects.requireNonNullElseGet(timeStrParams, () -\u003e new String[]{\"Init\"});","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"PingruiLi"},"content":"    public void store(User user) throws IOException {","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"PingruiLi"},"content":"        fileInfoWriter.storeRecordsToFile(user);","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"PingruiLi"},"content":"        fileInfoWriter.storeGoalsToFile(user);","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"PingruiLi"},"content":"    public void readRecords(User user) throws TypeException, NumberFormatException, ParseException,","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"PingruiLi"},"content":"            FileNotFoundException {","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"PingruiLi"},"content":"        fileInfoReader.parseToRecordList(user);","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"PingruiLi"},"content":"    public void readGoals(User user) throws TypeException, NumberFormatException, ParseException,","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"PingruiLi"},"content":"            FileNotFoundException {","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"PingruiLi"},"content":"        fileInfoReader.parseToGoal(user);","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"PingruiLi"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"PingruiLi":60,"Song0180":26}},{"path":"src/main/java/seedu/duke/ui/UI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.account.FitCenter;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.account.User;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.command.CommandResult;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.goal.Goal;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandRecordType.DIET;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"public class UI {","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"    public static final String DIVIDER \u003d \"--------------------------------------------------------------------\\n\";","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"    public static final String DIVIDER_LINE_ONLY \u003d","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"            \"--------------------------------------------------------------------\";","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"    private final Scanner sc;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"    public UI() {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"    public String getUserInput() {","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"PingruiLi"},"content":"    public void printGreetings() {","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"PingruiLi"},"content":"        System.out.print(DIVIDER","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"                + Messages.MESSAGE_WELCOME","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"                + DIVIDER);","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"PingruiLi"},"content":"    public void printExitMessage() {","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"PingruiLi"},"content":"        System.out.print(DIVIDER","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"                + Messages.MESSAGE_BYE","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"                + DIVIDER);","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"    public void printCommandResult(CommandResult commandResult) {","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"        System.out.println(DIVIDER","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"                + commandResult.getFeedback()","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"                + \"\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"                + DIVIDER_LINE_ONLY);","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"PingruiLi"},"content":"    public void showFileErrorMessage() {","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"PingruiLi"},"content":"        System.out.println(\"The source file can\u0027t be accessed, please check your access settings.\");","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"    public static void printMessage(String message) {","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":"        System.out.println(DIVIDER","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"                + message","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"Song0180"},"content":"                + \"\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"                + DIVIDER_LINE_ONLY);","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"PingruiLi"},"content":"    public void showFileParserErrorMessage() {","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"PingruiLi"},"content":"        System.out.println(\"The file contains invalid content that can\u0027t be recognized, please fix it\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"PingruiLi"},"content":"                + \"You can try to delete everything in the file but you will lose the information you had.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"PingruiLi"},"content":"    public void showProgress(User user) {","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"PingruiLi"},"content":"        FitCenter fitCenter \u003d user.getFitCenter();","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"PingruiLi"},"content":"        System.out.println(fitCenter.getAllGoalListStringAtLoading() + DIVIDER_LINE_ONLY);","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"PingruiLi":31,"Song0180":36}},{"path":"src/test/java/seedu/duke/HealthierTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"class HealthierTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"-":11,"Song0180":1}},{"path":"src/test/java/seedu/duke/account/FitCenterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.account;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.command.CommandRecordType;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"class FitCenterTest {","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"    void getRecordListString() {","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"        FitCenter fitCenter \u003d new FitCenter();","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"        CommandRecordType type \u003d CommandRecordType.SLEEP;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"        assertEquals(Messages.MESSAGE_NO_RECORD, fitCenter.getRecordListString(type));","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"Song0180":17}},{"path":"src/test/java/seedu/duke/command/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.exception.TypeException;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandRecordType.EXERCISE;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"public class AddCommandTest {","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"    public void addCommand_throwsParseException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"        HashMap\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"        params.put(\"activity\", \"dance\");","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"        params.put(\"duration\", \"50\");","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"        params.put(\"date\", \"abcde\");","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"        assertThrows(ParseException.class, () -\u003e {","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"            new AddCommand(EXERCISE, params);","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"        });","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":"    public void addCommand_throwsNumberFormatException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"PingruiLi"},"content":"        HashMap\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"PingruiLi"},"content":"        params.put(\"activity\", \"dance\");","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"PingruiLi"},"content":"        params.put(\"duration\", \"50min\");","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"PingruiLi"},"content":"        assertThrows(NumberFormatException.class, () -\u003e {","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"PingruiLi"},"content":"            new AddCommand(EXERCISE, params);","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"PingruiLi"},"content":"        });","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"PingruiLi"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"PingruiLi":33}},{"path":"src/test/java/seedu/duke/command/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandRecordType.EXERCISE;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"class DeleteCommandTest {","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"    public void seleteCommand_throwsNumberFormatException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"        HashMap\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"        params.put(\"index\", \"abc\");","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"        assertThrows(NumberFormatException.class, () -\u003e {","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"            new DeleteCommand(EXERCISE, params);","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"        });","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"PingruiLi":19}},{"path":"src/test/java/seedu/duke/command/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandRecordType.EXERCISE;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"class ViewCommandTest {","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"    public void viewCommand_throwsParseException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"        HashMap\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"        params.put(\"date\", \"abcde\");","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"        assertThrows(ParseException.class, () -\u003e {","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"            new ViewCommand(EXERCISE, params);","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"        });","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"PingruiLi":20}},{"path":"src/test/java/seedu/duke/record/RecordListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.record;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"class RecordListTest {","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"    void getRecordsToPrint() {","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"        RecordList list \u003d new RecordList(RecordType.SLEEP);","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"        assertEquals(Messages.MESSAGE_NO_RECORD, list.getRecordsToPrint(date));","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"Song0180":18}}]
