[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"    mainClassName \u003d \"seedu.duke.Healthier\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":45,"Song0180":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio "},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"![](https://avatars.githubusercontent.com/u/55625337?s\u003d460\u0026u\u003d8cf010d3f5099773aec99b0ebe41c4902552a392\u0026v\u003d4) | Song Yu | [Github](https://github.com/Song0180) | [LinkedIn](https://www.linkedin.com/in/daniel-yu-song/)"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Joe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ron John | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | John Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Li Pingrui | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"}],"authorContributionMap":{"PingruiLi":1,"-":8,"Song0180":1}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"# Healther - Your No. 1 Personal Fitness Management Application"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"Healtheir targets people who care about fitness, who exercise regularly (at least 3 times/week) and have diet plans. It is designed for users of age group 18-30.  "},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"This app is used via **Command Line Interface (CLI)**. If the user is proficient in using command-line tools \u0026 typing, then it could be very efficient to use. This app also provides several shortcut commands for advanced users for further efficient operations."},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Useful links:"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)"}],"authorContributionMap":{"-":6,"Song0180":4}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"# Healthier | User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"Healtheir targets people who care about fitness, who exercise regularly (at least 3 times/week) and have diet plans. It is designed for users of age group 18-30.  "},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"This app is used via **Command Line Interface (CLI)**. If the user is proficient in using command-line tools \u0026 typing, then it could be very efficient to use. This app also provides several shortcut commands for advanced users for further efficient operations."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"---"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"## Table of Content"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"* [Quick start](README.md#quick-start)"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"* [Features](README.md#features)"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"* [Command summary](README.md#command-summary)"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"## Quick Start"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"This is a cross-platform application, you can run it on any operating system as long as **Java 11** is installed. "},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"\u003e To verify if you have **Java 11** installed, simply type command `java --version` in your terminal."},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"1. Download the `tp.jar` file from the [latest release](https://github.com/AY2021S2-CS2113-F10-2/tp/releases)."},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"1. Open a new terminal at the folder where the `Tp.jar` file is located."},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"1. Run the applictaion use command `java -jar Tp.jar`"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"1. Refer to the [Features](README.md#features) section below for more info on commands."},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"\u003e **Note:**"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"\u003e * All commands should be input in `lower_case`. It is always the first word supplied by the user."},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"\u003e "},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"\u003e   e.g. `add`, `view`, `delete` etc."},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"\u003e "},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"\u003e "},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"\u003e * Parameters of a command are denoted in `UPPER_CASE`. They must be supplied by the user, otherwise the command will not be recognized."},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"\u003e   The actual input of the parameters can be in any case. "},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"\u003e   "},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"\u003e   e.g. in `add XXX`, `XXX` is a parameter which can be used as ``."},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"\u003e "},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"\u003e "},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"\u003e * Redundant parameters for single-word commands (e.g. `help`) will be ignored. "},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"\u003e "},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"\u003e    e.g. if the command `help hahahaha` is input, it is equivalent to `help`."},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"\u003e "},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"\u003e * After the appliction starts running, it checks if a `data` folder exists in the same directory where `tp.jar` is located."},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"\u003e   If the folder does not exist, the application will create a new folder `data`, "},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"\u003e   which is used to store the `data.txt` file which contains details of the user\u0027s data."},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"\u003e"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"\u003e * The text file `data.txt` will be automatically updated after each operation of the app. "},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":"\u003e"},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"### Get help from instructions on how to use this app : `help`"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"Adds a to-do type of task to the task list."},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"Format: `help`"},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"Example: `help`"},{"lineNumber":54,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"Expected outcome:"},{"lineNumber":56,"author":{"gitId":"Song0180"},"content":"```"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"```"},{"lineNumber":58,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":59,"author":{"gitId":"Song0180"},"content":"### Input Exercise Data: `add`"},{"lineNumber":60,"author":{"gitId":"Song0180"},"content":"Add one exercise activity with the duration and the date."},{"lineNumber":61,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":62,"author":{"gitId":"Song0180"},"content":"Format: `add  t/E a/ACTIVITY_NAME  d/DURATION  [date/DD-MM-YYYY]`"},{"lineNumber":63,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":64,"author":{"gitId":"Song0180"},"content":"* Add one exercise record. The name of exercise activity `a/ACTIVITY_NAME` and duration `d/DURATION` **MUST** be specified. "},{"lineNumber":65,"author":{"gitId":"Song0180"},"content":"* The name of the exercise should be a `String`."},{"lineNumber":66,"author":{"gitId":"Song0180"},"content":"* The tag value should be `E` in the upper case, which specifies that the current record is for **exercise data**."},{"lineNumber":67,"author":{"gitId":"Song0180"},"content":"* The default unit of duration is in **minutes**. An `integer` is expected for the duration, other formats are **not acceptable**."},{"lineNumber":68,"author":{"gitId":"Song0180"},"content":"* The date of the exercise activity `[date/DD-MM-YYYY]` is optional. If not provided, the system date will be used."},{"lineNumber":69,"author":{"gitId":"Song0180"},"content":"* The date should be **less than or equal to** the current date."},{"lineNumber":70,"author":{"gitId":"Song0180"},"content":"* The date format should be `DD-MM-YYYY`, other formats are not acceptable."},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"Example of usage:  "},{"lineNumber":74,"author":{"gitId":"Song0180"},"content":"`add t/E a/running d/40 add one exercise record of running for 40 minutes. `  "},{"lineNumber":75,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":76,"author":{"gitId":"Song0180"},"content":"Output:  "},{"lineNumber":77,"author":{"gitId":"Song0180"},"content":"```"},{"lineNumber":78,"author":{"gitId":"Song0180"},"content":"A new exercise activity record is added successfully!"},{"lineNumber":79,"author":{"gitId":"Song0180"},"content":"Record summary: 40 minutes running exercise on XX-XX-XXXX(Today)."},{"lineNumber":80,"author":{"gitId":"Song0180"},"content":"```"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  "},{"lineNumber":82,"author":{"gitId":"Song0180"},"content":"`add t/E a/football d/60 date/05-01-2020 add the exercise record of football for 60 mins at the date of 05-01-2020.`  "},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"Song0180"},"content":"Output:  "},{"lineNumber":85,"author":{"gitId":"Song0180"},"content":"```"},{"lineNumber":86,"author":{"gitId":"Song0180"},"content":"A new exercise activity record is added successfully!"},{"lineNumber":87,"author":{"gitId":"Song0180"},"content":"Record summary: 60 minutes football exercise on 05-01-2020."},{"lineNumber":88,"author":{"gitId":"Song0180"},"content":"```"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"## FAQ"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"Song0180"},"content":"**Q**: {?}"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"**A**: {your answer here}"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"Song0180"},"content":"## Command summary"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"Song0180"},"content":"Action | Format, Examples"},{"lineNumber":99,"author":{"gitId":"Song0180"},"content":"--- | ---"},{"lineNumber":100,"author":{"gitId":"Song0180"},"content":"Help | `help`"},{"lineNumber":101,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"-":22,"Song0180":79}},{"path":"src/main/java/seedu/duke/Healthier.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.commandparser.CommandParser;"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.ui.UI;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"public class Healthier {"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"    private UI ui;"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"    private void start() {"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"        ui \u003d new UI();"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"        ui.printGreetings();"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"    private void loopCommand() {"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"        CommandParser commandParser \u003d new CommandParser();"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"        ui.printHelpPrompt();"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"        String userInput \u003d ui.getUserInput();"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"        while (!userInput.equals(\"exit\")) {"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"            //Command command \u003d commandParser.parseCommand(userInput);"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"            commandParser.parseCommand(userInput);"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"            ui.printHelpPrompt();"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"            //command \u003d ui.getUserInput();"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"            commandParser.clearParserParams();"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"            userInput \u003d ui.getUserInput();"},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"PingruiLi"},"content":"        ui.printExitMessage();"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"PingruiLi"},"content":"    public void run() {"},{"lineNumber":30,"author":{"gitId":"PingruiLi"},"content":"        start();"},{"lineNumber":31,"author":{"gitId":"PingruiLi"},"content":"        loopCommand();"},{"lineNumber":32,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":34,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":35,"author":{"gitId":"PingruiLi"},"content":"    public static void main(String[] args) {"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"        new Healthier().run();"},{"lineNumber":37,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"PingruiLi"},"content":"    /*"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"    private static void exit() {"},{"lineNumber":40,"author":{"gitId":"PingruiLi"},"content":"        ui.printExitMessage();"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"        System.exit(0);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":44,"author":{"gitId":"PingruiLi"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"PingruiLi":33,"-":6,"Song0180":6}},{"path":"src/main/java/seedu/duke/account/FitCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.account;"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.record.Record;"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.record.RecordList;"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"import seedu.duke.record.RecordType;"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":" * Manages the fitness of a user through list of records."},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":" */"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"public class FitCenter {"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"    private final RecordList sleepRecordList \u003d new RecordList(RecordType.SLEEP);"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"    private final RecordList exerciseRecordList \u003d new RecordList(RecordType.EXERCISE);"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"    private final RecordList dietRecordList \u003d new RecordList(RecordType.DIET);"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"    private final RecordList bodyRecordList \u003d new RecordList(RecordType.BODYWEIGHT);"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"    private RecordList getRecordListByType(RecordType type) {"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"        switch (type) {"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"        case SLEEP:"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"            return sleepRecordList;"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"        case EXERCISE:"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"            return exerciseRecordList;"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"        case DIET:"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"            return dietRecordList;"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"        case BODYWEIGHT:"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"            return bodyRecordList;"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"        default:"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"            return null;"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"     * Adds a given record to a list that stores the same type of records."},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"     * @param record the record to add."},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"    public void addRecordToList(Record record) {"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"        RecordType type \u003d record.getType();"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"        RecordList list \u003d getRecordListByType(type);"},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"        if (list !\u003d null) {"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"            list.addRecord(record);"},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"     * Removes a given record from a list that stores the same type of records."},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"     * @param type  the type of the record."},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"     * @param index the index of the record in the list."},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"    public void removeRecordFromList(RecordType type, int index) {"},{"lineNumber":54,"author":{"gitId":"Song0180"},"content":"        RecordList list \u003d getRecordListByType(type);"},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"        if (list !\u003d null) {"},{"lineNumber":56,"author":{"gitId":"Song0180"},"content":"            list.removeRecord(index);"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":60,"author":{"gitId":"Song0180"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"Song0180"},"content":"     * Prints the list of record of a selected type."},{"lineNumber":62,"author":{"gitId":"Song0180"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"Song0180"},"content":"     * @param type the type of the record that the list stores."},{"lineNumber":64,"author":{"gitId":"Song0180"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"Song0180"},"content":"    public void printRecordList(RecordType type) {"},{"lineNumber":66,"author":{"gitId":"Song0180"},"content":"        RecordList list \u003d getRecordListByType(type);"},{"lineNumber":67,"author":{"gitId":"Song0180"},"content":"        if (list !\u003d null) {"},{"lineNumber":68,"author":{"gitId":"Song0180"},"content":"            list.printRecords();"},{"lineNumber":69,"author":{"gitId":"Song0180"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":72,"author":{"gitId":"Song0180"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"Song0180"},"content":"     * Prints the list of record of a selected type on a specific date."},{"lineNumber":74,"author":{"gitId":"Song0180"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"Song0180"},"content":"     * @param type the type of the record that the list stores."},{"lineNumber":76,"author":{"gitId":"Song0180"},"content":"     * @param date the date of records."},{"lineNumber":77,"author":{"gitId":"Song0180"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"Song0180"},"content":"    public void printRecordList(RecordType type, LocalDate date) {"},{"lineNumber":79,"author":{"gitId":"Song0180"},"content":"        RecordList list \u003d getRecordListByType(type);"},{"lineNumber":80,"author":{"gitId":"Song0180"},"content":"        if (list !\u003d null) {"},{"lineNumber":81,"author":{"gitId":"Song0180"},"content":"            list.printRecords(date);"},{"lineNumber":82,"author":{"gitId":"Song0180"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"Song0180"},"content":"}"}],"authorContributionMap":{"Song0180":84}},{"path":"src/main/java/seedu/duke/account/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.account;"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":" * Represents different genders."},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"public enum Gender {"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"    MALE, FEMALE, UNKNOWN, OTHER"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"}"}],"authorContributionMap":{"Song0180":8}},{"path":"src/main/java/seedu/duke/account/User.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.account;"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":" * Represents a user of this app."},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"public class User {"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"    private String name;"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"    private Gender gender;"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"    private int age;"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"    private double bodyWeight;"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"    private FitCenter fitCenter \u003d new FitCenter();"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"     * Initializes a user object. Assumes that all params are not null."},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"     * @param name       the name of the user."},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"     * @param gender     the gender of the user."},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"     * @param age        the age of the user."},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"     * @param bodyWeight the body weight of the user."},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"    public User(String name, Gender gender, int age, double bodyWeight) {"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"        this.name \u003d name;"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"        this.gender \u003d gender;"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"        this.age \u003d age;"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"        this.bodyWeight \u003d bodyWeight;"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"     * Gets the name of the user."},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"     * @return the name of the user."},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"    public String getName() {"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"        return name;"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"     * Gets the gender of the user."},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"     * @return the gender of the user in Gender."},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"    public Gender getGender() {"},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"        return gender;"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"     * Gets the age of the user."},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"     * @return the age of the user."},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":"    public int getAge() {"},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"        return age;"},{"lineNumber":54,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":56,"author":{"gitId":"Song0180"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"     * Gets the body weight of the user."},{"lineNumber":58,"author":{"gitId":"Song0180"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"Song0180"},"content":"     * @return the body weight of the user in KG."},{"lineNumber":60,"author":{"gitId":"Song0180"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"Song0180"},"content":"    public double getBodyWeight() {"},{"lineNumber":62,"author":{"gitId":"Song0180"},"content":"        return bodyWeight;"},{"lineNumber":63,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":65,"author":{"gitId":"Song0180"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"Song0180"},"content":"     * Sets the body weight of the user."},{"lineNumber":67,"author":{"gitId":"Song0180"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"Song0180"},"content":"     * @param bodyWeight the new body weight in KG."},{"lineNumber":69,"author":{"gitId":"Song0180"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"Song0180"},"content":"    public void setBodyWeight(double bodyWeight) {"},{"lineNumber":71,"author":{"gitId":"Song0180"},"content":"        this.bodyWeight \u003d bodyWeight;"},{"lineNumber":72,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":74,"author":{"gitId":"Song0180"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"Song0180"},"content":"     * Gets the fit center of the user."},{"lineNumber":76,"author":{"gitId":"Song0180"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"Song0180"},"content":"     * @return the fit center of the user."},{"lineNumber":78,"author":{"gitId":"Song0180"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"Song0180"},"content":"    public FitCenter getFitCenter() {"},{"lineNumber":80,"author":{"gitId":"Song0180"},"content":"        return fitCenter;"},{"lineNumber":81,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":83,"author":{"gitId":"Song0180"},"content":"    @Override"},{"lineNumber":84,"author":{"gitId":"Song0180"},"content":"    public String toString() {"},{"lineNumber":85,"author":{"gitId":"Song0180"},"content":"        return \"User Name: \" + name + \"\\nGender: \" + gender + \"\\nAge: \" + age + \"\\nBody Weight: \" + bodyWeight;"},{"lineNumber":86,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"Song0180"},"content":"}"}],"authorContributionMap":{"Song0180":87}},{"path":"src/main/java/seedu/duke/command/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.record.Record;"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"import java.text.ParseException;"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"import java.time.ZoneId;"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"import java.util.Date;"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"import java.util.HashMap;"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"//import static seedu.duke.record.RecordType;"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"public class AddCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"    private static final String FEEDBACK_FORMAT \u003d \"A new %s record is added successfully!\\nRecord summary:%s\";"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"    private Record record;"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"    private SimpleDateFormat spf \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"    public AddCommand(String type, HashMap\u003cString,String\u003e params) throws ParseException {"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"        spf.setLenient(false);"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"        String dateString \u003d params.get(\"date\");"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"        LocalDate localDate;"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"        if (dateString !\u003d null) {"},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":"            Date date \u003d spf.parse(dateString);"},{"lineNumber":26,"author":{"gitId":"PingruiLi"},"content":"            localDate \u003d date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();"},{"lineNumber":27,"author":{"gitId":"PingruiLi"},"content":"        } else {"},{"lineNumber":28,"author":{"gitId":"PingruiLi"},"content":"            localDate \u003d LocalDate.now();"},{"lineNumber":29,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"PingruiLi"},"content":"        switch (type) {"},{"lineNumber":31,"author":{"gitId":"PingruiLi"},"content":"        case \"E\":"},{"lineNumber":32,"author":{"gitId":"PingruiLi"},"content":"            //record \u003d new DietRecord(recordType.EXERCISE, params.get(\"activity\"), params.get(\"duration\"), localDate);"},{"lineNumber":33,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(params.get(\"activity\") + params.get(\"duration\") + localDate.toString());"},{"lineNumber":34,"author":{"gitId":"PingruiLi"},"content":"            break;"},{"lineNumber":35,"author":{"gitId":"PingruiLi"},"content":"        case \"D\":"},{"lineNumber":36,"author":{"gitId":"PingruiLi"},"content":"            //record \u003d new DietRecord(recordType.DIET, params.get(\"food\"), params.get(\"weight\"), localDate);"},{"lineNumber":37,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(params.get(\"food\") + params.get(\"weight\") + localDate.toString());"},{"lineNumber":38,"author":{"gitId":"PingruiLi"},"content":"            break;"},{"lineNumber":39,"author":{"gitId":"PingruiLi"},"content":"        case \"S\":"},{"lineNumber":40,"author":{"gitId":"PingruiLi"},"content":"            //record \u003d new DietRecord(recordType.SLEEP, params.get(\"duration\"), localDate);"},{"lineNumber":41,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(params.get(\"duration\") + localDate.toString());"},{"lineNumber":42,"author":{"gitId":"PingruiLi"},"content":"            break;"},{"lineNumber":43,"author":{"gitId":"PingruiLi"},"content":"        case \"W\":"},{"lineNumber":44,"author":{"gitId":"PingruiLi"},"content":"            //record \u003d new DietRecord(recordType.BODYWEIGHT, params.get(\"weight\"), localDate);"},{"lineNumber":45,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(params.get(\"weight\") + localDate.toString());"},{"lineNumber":46,"author":{"gitId":"PingruiLi"},"content":"            break;"},{"lineNumber":47,"author":{"gitId":"PingruiLi"},"content":"        default:"},{"lineNumber":48,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(\"There is something wrong within the system.\");"},{"lineNumber":49,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":52,"author":{"gitId":"PingruiLi"},"content":"    public CommandResult execute() {"},{"lineNumber":53,"author":{"gitId":"PingruiLi"},"content":"        //fitCenter.addRecordToList(record);"},{"lineNumber":54,"author":{"gitId":"PingruiLi"},"content":"        feedback \u003d String.format(FEEDBACK_FORMAT, record.getType(), record.getRecordSummary());"},{"lineNumber":55,"author":{"gitId":"PingruiLi"},"content":"        return new CommandResult(feedback);"},{"lineNumber":56,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"PingruiLi"},"content":"}"}],"authorContributionMap":{"PingruiLi":57}},{"path":"src/main/java/seedu/duke/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"public abstract class Command {"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"    protected String feedback;"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"    //protected FitCenter fitCenter;"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"    public abstract CommandResult execute();"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"}"}],"authorContributionMap":{"PingruiLi":8}},{"path":"src/main/java/seedu/duke/command/CommandRecordType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"import java.util.Locale;"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"public enum CommandRecordType {"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"    EXERCISE(\"E\"), DIET(\"D\"), SLEEP(\"S\"), BODY_WEIGHT(\"W\");"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"    private String recordType;"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"    private CommandRecordType(String type) {"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"        recordType \u003d type;"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"    public static boolean isValidType(String type) {"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"        boolean isValid \u003d false;"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"        for (int i \u003d 0; i \u003c CommandRecordType.values().length; i++) {"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"            if (type.toUpperCase(Locale.ROOT).equals(CommandRecordType.values()[i].recordType)) {"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"                isValid \u003d true;"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"                break;"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"            }"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"        return isValid;"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"}"}],"authorContributionMap":{"PingruiLi":22}},{"path":"src/main/java/seedu/duke/command/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"public class CommandResult {"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"    private String feedback;"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"    //private RecordList relevantRecords;"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"    public CommandResult(String feedback) {"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"        this.feedback \u003d feedback;"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"    /*"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"    public CommandResult(String feedback, RecordList relevantRecords) {"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"        this.feedback \u003d feedback;"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"        this.relevantRecords \u003d relevantRecords;"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"    public String getFeedback() {"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"        return feedback;"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"    /*"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"    public RecordList getRelevantRecords(){"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"        return relevantRecords;"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":26,"author":{"gitId":"PingruiLi"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"PingruiLi"},"content":"}"}],"authorContributionMap":{"PingruiLi":27}},{"path":"src/main/java/seedu/duke/command/CommandType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"public enum CommandType {"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"    ADD, VIEW, DELETE;"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"}"}],"authorContributionMap":{"PingruiLi":5}},{"path":"src/main/java/seedu/duke/command/InvalidCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"public class InvalidCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"    private CommandType commandType;"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"    private static final String ERROR_MESSAGE_FOR_ADD_COMMAND \u003d \"The syntax for add command is:\\n\""},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"            + \"1. Add exercise record\\nadd  t/E a/ACTIVITY_NAME  d/DURATION  [date/DD-MM-YYYY]\\n\""},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"            + \"2. Add diet record\\nadd t/D f/FOOD_NAME  w/WEIGHT  [date/DD-MM-YYYY]\\n\" + \"3.Add sleep record\\n\""},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"            + \"add  t/S  d/DURATION  [date/DD-MM-YYYY]\" + \"4.Add body weight record\\nadd  t/W w/WEIGHT \""},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"            + \"[date/DD-MM-YYYY]\\n\";"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"    private static final String ERROR_MESSAGE_FOR_VIEW_COMMAND \u003d \"The syntax for view command is:\\n\""},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"            + \"1. View exercise records\\nview  t/E [a/ACTIVITY_NAME] [date/DD-MM-YYYY]\\n\""},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"            + \"2. View diet records\\nview t/D [f/FOOD_NAME] [date/DD-MM-YYYY]\\n\" + \"3.View sleep records\\n\""},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"            + \"view  t/S [date/DD-MM-YYYY]\" + \"4.View body weight records\\nview  t/W [date/DD-MM-YYYY]\\n\";"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"    public InvalidCommand(String errorMessage) {"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"        feedback \u003d errorMessage;"},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"    public InvalidCommand(CommandType commandType) {"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"        switch (commandType) {"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"        case ADD:"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"            feedback \u003d ERROR_MESSAGE_FOR_ADD_COMMAND;"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"            break;"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"        case VIEW:"},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":"            feedback \u003d ERROR_MESSAGE_FOR_VIEW_COMMAND;"},{"lineNumber":26,"author":{"gitId":"PingruiLi"},"content":"            break;"},{"lineNumber":27,"author":{"gitId":"PingruiLi"},"content":"        default:"},{"lineNumber":28,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(\"There is something wrong within the system.\");"},{"lineNumber":29,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"PingruiLi"},"content":"        System.out.println(feedback);"},{"lineNumber":31,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":33,"author":{"gitId":"PingruiLi"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"PingruiLi"},"content":"    public CommandResult execute() {"},{"lineNumber":35,"author":{"gitId":"PingruiLi"},"content":"        return new CommandResult(feedback);"},{"lineNumber":36,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"PingruiLi"},"content":"}"}],"authorContributionMap":{"PingruiLi":37}},{"path":"src/main/java/seedu/duke/command/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.command;"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.record.Record;"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"import java.text.ParseException;"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"import java.time.ZoneId;"},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"import java.util.Date;"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"public class ViewCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":"    private static final String FEEDBACK_FORMAT \u003d \"Displaying all %s exercise records %s:\";"},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"    private Record record;"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"    private SimpleDateFormat spf \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"    public ViewCommand(String type, ArrayList\u003cString\u003e params) throws ParseException {"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"        switch (type) {"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"        case \"E\":"},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"            if (params.size() \u003d\u003d 3) {"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"                Date date \u003d spf.parse(params.get(3));"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"                LocalDate localDate \u003d date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":"                //record \u003d new DietRecord(recordType.EXERCISE, params.get(1), params.get(2), localDate);"},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"                System.out.println(params.get(1) + params.get(2) + params.get(3));"},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":"            } else {"},{"lineNumber":26,"author":{"gitId":"PingruiLi"},"content":"                //record \u003d new DietRecord(recordType.params.get(1), params.get(2), LocalDate.now());"},{"lineNumber":27,"author":{"gitId":"PingruiLi"},"content":"                System.out.println(params.get(1) + params.get(2));"},{"lineNumber":28,"author":{"gitId":"PingruiLi"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"PingruiLi"},"content":"            break;"},{"lineNumber":30,"author":{"gitId":"PingruiLi"},"content":"        case \"D\":"},{"lineNumber":31,"author":{"gitId":"PingruiLi"},"content":"            if (params.size() \u003d\u003d 3) {"},{"lineNumber":32,"author":{"gitId":"PingruiLi"},"content":"                Date date \u003d spf.parse(params.get(3));"},{"lineNumber":33,"author":{"gitId":"PingruiLi"},"content":"                LocalDate localDate \u003d date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();"},{"lineNumber":34,"author":{"gitId":"PingruiLi"},"content":"                //record \u003d new DietRecord(recordType.DIET, params.get(1), params.get(2), localDate);"},{"lineNumber":35,"author":{"gitId":"PingruiLi"},"content":"                System.out.println(params.get(1) + params.get(2) + params.get(3));"},{"lineNumber":36,"author":{"gitId":"PingruiLi"},"content":"            } else {"},{"lineNumber":37,"author":{"gitId":"PingruiLi"},"content":"                //record \u003d new DietRecord(recordType.DIET, params.get(1), params.get(2), LocalDate.now());"},{"lineNumber":38,"author":{"gitId":"PingruiLi"},"content":"                System.out.println(params.get(1) + params.get(2));"},{"lineNumber":39,"author":{"gitId":"PingruiLi"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"PingruiLi"},"content":"            break;"},{"lineNumber":41,"author":{"gitId":"PingruiLi"},"content":"        case \"S\":"},{"lineNumber":42,"author":{"gitId":"PingruiLi"},"content":"            if (params.size() \u003d\u003d 2) {"},{"lineNumber":43,"author":{"gitId":"PingruiLi"},"content":"                Date date \u003d spf.parse(params.get(2));"},{"lineNumber":44,"author":{"gitId":"PingruiLi"},"content":"                LocalDate localDate \u003d date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();"},{"lineNumber":45,"author":{"gitId":"PingruiLi"},"content":"                //record \u003d new DietRecord(recordType.SLEEP, params.get(1), localDate);"},{"lineNumber":46,"author":{"gitId":"PingruiLi"},"content":"                System.out.println(params.get(1) + params.get(2));"},{"lineNumber":47,"author":{"gitId":"PingruiLi"},"content":"            } else {"},{"lineNumber":48,"author":{"gitId":"PingruiLi"},"content":"                //record \u003d new DietRecord(recordType.SLEEP, params.get(1), LocalDate.now());"},{"lineNumber":49,"author":{"gitId":"PingruiLi"},"content":"                System.out.println(params.get(1));"},{"lineNumber":50,"author":{"gitId":"PingruiLi"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"PingruiLi"},"content":"            break;"},{"lineNumber":52,"author":{"gitId":"PingruiLi"},"content":"        case \"W\":"},{"lineNumber":53,"author":{"gitId":"PingruiLi"},"content":"            if (params.size() \u003d\u003d 2) {"},{"lineNumber":54,"author":{"gitId":"PingruiLi"},"content":"                Date date \u003d spf.parse(params.get(2));"},{"lineNumber":55,"author":{"gitId":"PingruiLi"},"content":"                LocalDate localDate \u003d date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();"},{"lineNumber":56,"author":{"gitId":"PingruiLi"},"content":"                //record \u003d new DietRecord(recordType.BODYWEIGHT, params.get(1), localDate);"},{"lineNumber":57,"author":{"gitId":"PingruiLi"},"content":"                System.out.println(params.get(1) + params.get(2));"},{"lineNumber":58,"author":{"gitId":"PingruiLi"},"content":"            } else {"},{"lineNumber":59,"author":{"gitId":"PingruiLi"},"content":"                //record \u003d new DietRecord(RecordType.BODYWEIGHT, params.get(1), LocalDate.now());"},{"lineNumber":60,"author":{"gitId":"PingruiLi"},"content":"                System.out.println(params.get(1));"},{"lineNumber":61,"author":{"gitId":"PingruiLi"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"PingruiLi"},"content":"            break;"},{"lineNumber":63,"author":{"gitId":"PingruiLi"},"content":"        default:"},{"lineNumber":64,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(\"There is something wrong within the system.\");"},{"lineNumber":65,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":68,"author":{"gitId":"PingruiLi"},"content":"    public CommandResult execute() {"},{"lineNumber":69,"author":{"gitId":"PingruiLi"},"content":"        //fitCenter.addRecordToList(record);"},{"lineNumber":70,"author":{"gitId":"PingruiLi"},"content":"        feedback \u003d String.format(FEEDBACK_FORMAT, record.getType(), record.getRecordSummary());"},{"lineNumber":71,"author":{"gitId":"PingruiLi"},"content":"        return new CommandResult(feedback);"},{"lineNumber":72,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"PingruiLi"},"content":"}"}],"authorContributionMap":{"PingruiLi":73}},{"path":"src/main/java/seedu/duke/commandparser/CommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PingruiLi"},"content":"package seedu.duke.commandparser;"},{"lineNumber":2,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.command.AddCommand;"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.command.Command;"},{"lineNumber":5,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.command.CommandRecordType;"},{"lineNumber":6,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.command.InvalidCommand;"},{"lineNumber":7,"author":{"gitId":"PingruiLi"},"content":"import seedu.duke.record.RecordType;"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":9,"author":{"gitId":"PingruiLi"},"content":"import java.text.ParseException;"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"import java.util.HashMap;"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"import java.util.Locale;"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandType.ADD;"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"import static seedu.duke.command.CommandType.VIEW;"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":17,"author":{"gitId":"PingruiLi"},"content":"public class CommandParser {"},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"    private HashMap\u003cString, String\u003e params;"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":20,"author":{"gitId":"PingruiLi"},"content":"    public CommandParser() {"},{"lineNumber":21,"author":{"gitId":"PingruiLi"},"content":"        params \u003d new HashMap\u003c\u003e();"},{"lineNumber":22,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":24,"author":{"gitId":"PingruiLi"},"content":"    //public Command parseCommand(String userInput) {"},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":"    public void parseCommand(String userInput) {"},{"lineNumber":26,"author":{"gitId":"PingruiLi"},"content":"        String[] inputParts \u003d userInput.trim().split(\"\\\\s+\", 2);"},{"lineNumber":27,"author":{"gitId":"PingruiLi"},"content":"        String commandWord \u003d inputParts[0];"},{"lineNumber":28,"author":{"gitId":"PingruiLi"},"content":"        switch (commandWord) {"},{"lineNumber":29,"author":{"gitId":"PingruiLi"},"content":"        case \"add\":"},{"lineNumber":30,"author":{"gitId":"PingruiLi"},"content":"            prepareAdd(inputParts);"},{"lineNumber":31,"author":{"gitId":"PingruiLi"},"content":"            //return prepareAdd(inputParts);"},{"lineNumber":32,"author":{"gitId":"PingruiLi"},"content":"            break;"},{"lineNumber":33,"author":{"gitId":"PingruiLi"},"content":"            /*"},{"lineNumber":34,"author":{"gitId":"PingruiLi"},"content":"        case \"view\":"},{"lineNumber":35,"author":{"gitId":"PingruiLi"},"content":"            return prepareView(inputParts);"},{"lineNumber":36,"author":{"gitId":"PingruiLi"},"content":"            break;"},{"lineNumber":37,"author":{"gitId":"PingruiLi"},"content":"        //    return prepareView(inputParts);"},{"lineNumber":38,"author":{"gitId":"PingruiLi"},"content":"        case \"delete\":"},{"lineNumber":39,"author":{"gitId":"PingruiLi"},"content":"            return prepareDelete(inputParts);"},{"lineNumber":40,"author":{"gitId":"PingruiLi"},"content":"            break;"},{"lineNumber":41,"author":{"gitId":"PingruiLi"},"content":"        //   return prepareDelete();"},{"lineNumber":42,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":43,"author":{"gitId":"PingruiLi"},"content":"             */"},{"lineNumber":44,"author":{"gitId":"PingruiLi"},"content":"        default:"},{"lineNumber":45,"author":{"gitId":"PingruiLi"},"content":"            //return new InvalidCommand();"},{"lineNumber":46,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(\"Invalid\");"},{"lineNumber":47,"author":{"gitId":"PingruiLi"},"content":"            break;"},{"lineNumber":48,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":51,"author":{"gitId":"PingruiLi"},"content":"    private void prepareDelete(String[] inputParts) {"},{"lineNumber":52,"author":{"gitId":"PingruiLi"},"content":"        if (inputParts.length \u003c 2) {"},{"lineNumber":53,"author":{"gitId":"PingruiLi"},"content":"            //return new InvalidCommand();"},{"lineNumber":54,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(\"invalid\");"},{"lineNumber":55,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":56,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"PingruiLi"},"content":"        String recordType \u003d parseType(inputParts[1]);"},{"lineNumber":58,"author":{"gitId":"PingruiLi"},"content":"        if (recordType.equals(\"\")) {"},{"lineNumber":59,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(\"invalid\");"},{"lineNumber":60,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":61,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"PingruiLi"},"content":"        String[] typeIndex \u003d inputParts[1].split(\"\\\\s+\",2);"},{"lineNumber":63,"author":{"gitId":"PingruiLi"},"content":"        if (typeIndex.length \u003c 2) {"},{"lineNumber":64,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(\"Invalid\");"},{"lineNumber":65,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":66,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"PingruiLi"},"content":"        String index \u003d typeIndex[1];"},{"lineNumber":68,"author":{"gitId":"PingruiLi"},"content":"        boolean isIndexValid \u003d index.startsWith(\"i/\") \u0026\u0026 index.length() \u003e\u003d 3;"},{"lineNumber":69,"author":{"gitId":"PingruiLi"},"content":"        if (!isIndexValid) {"},{"lineNumber":70,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(\"Invalid\");"},{"lineNumber":71,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":72,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"PingruiLi"},"content":"        index \u003d index.substring(2);"},{"lineNumber":74,"author":{"gitId":"PingruiLi"},"content":"        System.out.println(index);"},{"lineNumber":75,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"PingruiLi"},"content":"    /*"},{"lineNumber":77,"author":{"gitId":"PingruiLi"},"content":"    private Command prepareView(String[] inputParts) {"},{"lineNumber":78,"author":{"gitId":"PingruiLi"},"content":"    //private void prepareView(String[] inputParts) {"},{"lineNumber":79,"author":{"gitId":"PingruiLi"},"content":"        if (inputParts.length \u003c 2) {"},{"lineNumber":80,"author":{"gitId":"PingruiLi"},"content":"            return new InvalidCommand(VIEW);"},{"lineNumber":81,"author":{"gitId":"PingruiLi"},"content":"            //System.out.println(\"invalid\");"},{"lineNumber":82,"author":{"gitId":"PingruiLi"},"content":"            //return;"},{"lineNumber":83,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"PingruiLi"},"content":"        String recordType \u003d parseType(inputParts[1]);"},{"lineNumber":85,"author":{"gitId":"PingruiLi"},"content":"        if (recordType.equals(\"\")) {"},{"lineNumber":86,"author":{"gitId":"PingruiLi"},"content":"            //System.out.println(\"invalid\");"},{"lineNumber":87,"author":{"gitId":"PingruiLi"},"content":"            //return;"},{"lineNumber":88,"author":{"gitId":"PingruiLi"},"content":"            return new InvalidCommand(VIEW);"},{"lineNumber":89,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"PingruiLi"},"content":"        String typeContent \u003d inputParts[1];"},{"lineNumber":91,"author":{"gitId":"PingruiLi"},"content":"        switch (recordType) {"},{"lineNumber":92,"author":{"gitId":"PingruiLi"},"content":"        case \"E\":"},{"lineNumber":93,"author":{"gitId":"PingruiLi"},"content":"            //return prepareExercise(content.trim());"},{"lineNumber":94,"author":{"gitId":"PingruiLi"},"content":"            return prepareViewExercise(typeContent.trim());"},{"lineNumber":95,"author":{"gitId":"PingruiLi"},"content":"            //break;"},{"lineNumber":96,"author":{"gitId":"PingruiLi"},"content":"        case \"W\":"},{"lineNumber":97,"author":{"gitId":"PingruiLi"},"content":"            return prepareViewBodyWeight(typeContent.trim());"},{"lineNumber":98,"author":{"gitId":"PingruiLi"},"content":"            //prepareViewBodyWeight(typeContent.trim());"},{"lineNumber":99,"author":{"gitId":"PingruiLi"},"content":"            //break;"},{"lineNumber":100,"author":{"gitId":"PingruiLi"},"content":"        case \"D\":"},{"lineNumber":101,"author":{"gitId":"PingruiLi"},"content":"            return prepareViewDiet(typeContent.trim());"},{"lineNumber":102,"author":{"gitId":"PingruiLi"},"content":"            //prepareViewDiet(typeContent.trim());"},{"lineNumber":103,"author":{"gitId":"PingruiLi"},"content":"            //break;"},{"lineNumber":104,"author":{"gitId":"PingruiLi"},"content":"        case \"S\":"},{"lineNumber":105,"author":{"gitId":"PingruiLi"},"content":"            return prepareViewSleep(typeContent.trim());"},{"lineNumber":106,"author":{"gitId":"PingruiLi"},"content":"            //prepareViewSleep(typeContent.trim());"},{"lineNumber":107,"author":{"gitId":"PingruiLi"},"content":"            //break;"},{"lineNumber":108,"author":{"gitId":"PingruiLi"},"content":"        default:"},{"lineNumber":109,"author":{"gitId":"PingruiLi"},"content":"            return new InvalidCommand(VIEW);"},{"lineNumber":110,"author":{"gitId":"PingruiLi"},"content":"            //System.out.println(\"Invalid\");"},{"lineNumber":111,"author":{"gitId":"PingruiLi"},"content":"            //break;"},{"lineNumber":112,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":115,"author":{"gitId":"PingruiLi"},"content":" */"},{"lineNumber":116,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":117,"author":{"gitId":"PingruiLi"},"content":"    private void prepareViewExercise(String typeContent) {"},{"lineNumber":118,"author":{"gitId":"PingruiLi"},"content":"        if (typeContent.length() \u003d\u003d 3) {"},{"lineNumber":119,"author":{"gitId":"PingruiLi"},"content":"            //System.out.println(\"print all exercise records\");"},{"lineNumber":120,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":121,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"PingruiLi"},"content":"        String[] rawInput \u003d typeContent.split(\"\\\\s+\", 2);"},{"lineNumber":123,"author":{"gitId":"PingruiLi"},"content":"        if (rawInput.length \u003d\u003d 1) {"},{"lineNumber":124,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(\"Invalid\");"},{"lineNumber":125,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":126,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"PingruiLi"},"content":"        String optionParams \u003d rawInput[1].trim();"},{"lineNumber":128,"author":{"gitId":"PingruiLi"},"content":"        String activity \u003d \"\";"},{"lineNumber":129,"author":{"gitId":"PingruiLi"},"content":"        String date \u003d \"\";"},{"lineNumber":130,"author":{"gitId":"PingruiLi"},"content":"        boolean hasActivity \u003d optionParams.contains(\"a/\");"},{"lineNumber":131,"author":{"gitId":"PingruiLi"},"content":"        boolean hasDate \u003d optionParams.contains(\"date/\");"},{"lineNumber":132,"author":{"gitId":"PingruiLi"},"content":"        if (!hasActivity \u0026\u0026 !hasDate) {"},{"lineNumber":133,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(\"Invalid\");"},{"lineNumber":134,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":135,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":136,"author":{"gitId":"PingruiLi"},"content":"        if (hasActivity) {"},{"lineNumber":137,"author":{"gitId":"PingruiLi"},"content":"            activity \u003d parseExerciseActivity(optionParams,false);"},{"lineNumber":138,"author":{"gitId":"PingruiLi"},"content":"            if (activity.equals(\"\")) {"},{"lineNumber":139,"author":{"gitId":"PingruiLi"},"content":"                System.out.println(\"Invalid\");"},{"lineNumber":140,"author":{"gitId":"PingruiLi"},"content":"                return;"},{"lineNumber":141,"author":{"gitId":"PingruiLi"},"content":"            }"},{"lineNumber":142,"author":{"gitId":"PingruiLi"},"content":"            if (!hasDate) {"},{"lineNumber":143,"author":{"gitId":"PingruiLi"},"content":"                System.out.println(activity);"},{"lineNumber":144,"author":{"gitId":"PingruiLi"},"content":"                return;"},{"lineNumber":145,"author":{"gitId":"PingruiLi"},"content":"            }"},{"lineNumber":146,"author":{"gitId":"PingruiLi"},"content":"            String[] activityDate \u003d getDate(activity);"},{"lineNumber":147,"author":{"gitId":"PingruiLi"},"content":"            if (activityDate.length \u003d\u003d 0) {"},{"lineNumber":148,"author":{"gitId":"PingruiLi"},"content":"                //return new InvalidCommand();"},{"lineNumber":149,"author":{"gitId":"PingruiLi"},"content":"                System.out.println(\"Invalid\");"},{"lineNumber":150,"author":{"gitId":"PingruiLi"},"content":"                return;"},{"lineNumber":151,"author":{"gitId":"PingruiLi"},"content":"            }"},{"lineNumber":152,"author":{"gitId":"PingruiLi"},"content":"            activity \u003d activityDate[0];"},{"lineNumber":153,"author":{"gitId":"PingruiLi"},"content":"            date \u003d activityDate[1];"},{"lineNumber":154,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(activity);"},{"lineNumber":155,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(date);"},{"lineNumber":156,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":157,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":158,"author":{"gitId":"PingruiLi"},"content":"        if (!optionParams.startsWith(\"date/\")) {"},{"lineNumber":159,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(\"Invalid\");"},{"lineNumber":160,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":161,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"PingruiLi"},"content":"        date \u003d optionParams.substring(5);"},{"lineNumber":163,"author":{"gitId":"PingruiLi"},"content":"        if (date.length() \u003d\u003d 0) {"},{"lineNumber":164,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(\"Invalid\");"},{"lineNumber":165,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":166,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":167,"author":{"gitId":"PingruiLi"},"content":"        ArrayList\u003cString\u003e params \u003d new ArrayList\u003c\u003e();"},{"lineNumber":168,"author":{"gitId":"PingruiLi"},"content":"        System.out.println(date);"},{"lineNumber":169,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":171,"author":{"gitId":"PingruiLi"},"content":"    private void prepareViewDiet(String typeContent) {"},{"lineNumber":172,"author":{"gitId":"PingruiLi"},"content":"        if (typeContent.length() \u003d\u003d 3) {"},{"lineNumber":173,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(\"print all diet records\");"},{"lineNumber":174,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":175,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":176,"author":{"gitId":"PingruiLi"},"content":"        String[] rawInput \u003d typeContent.split(\"\\\\s+\", 2);"},{"lineNumber":177,"author":{"gitId":"PingruiLi"},"content":"        if (rawInput.length \u003d\u003d 1) {"},{"lineNumber":178,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(\"Invalid\");"},{"lineNumber":179,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":180,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":181,"author":{"gitId":"PingruiLi"},"content":"        String optionalParams \u003d rawInput[1].trim();"},{"lineNumber":182,"author":{"gitId":"PingruiLi"},"content":"        String food \u003d \"\";"},{"lineNumber":183,"author":{"gitId":"PingruiLi"},"content":"        String date \u003d \"\";"},{"lineNumber":184,"author":{"gitId":"PingruiLi"},"content":"        boolean hasFood \u003d optionalParams.contains(\"f/\");"},{"lineNumber":185,"author":{"gitId":"PingruiLi"},"content":"        boolean hasDate \u003d optionalParams.contains(\"date/\");"},{"lineNumber":186,"author":{"gitId":"PingruiLi"},"content":"        if (!hasFood \u0026\u0026 !hasDate) {"},{"lineNumber":187,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(\"Invalid\");"},{"lineNumber":188,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":189,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":190,"author":{"gitId":"PingruiLi"},"content":"        if (hasFood) {"},{"lineNumber":191,"author":{"gitId":"PingruiLi"},"content":"            food \u003d parseDiet(optionalParams,false);"},{"lineNumber":192,"author":{"gitId":"PingruiLi"},"content":"            if (food.equals(\"\")) {"},{"lineNumber":193,"author":{"gitId":"PingruiLi"},"content":"                System.out.println(\"Invalid\");"},{"lineNumber":194,"author":{"gitId":"PingruiLi"},"content":"                return;"},{"lineNumber":195,"author":{"gitId":"PingruiLi"},"content":"            }"},{"lineNumber":196,"author":{"gitId":"PingruiLi"},"content":"            if (!hasDate) {"},{"lineNumber":197,"author":{"gitId":"PingruiLi"},"content":"                System.out.println(food);"},{"lineNumber":198,"author":{"gitId":"PingruiLi"},"content":"                return;"},{"lineNumber":199,"author":{"gitId":"PingruiLi"},"content":"            }"},{"lineNumber":200,"author":{"gitId":"PingruiLi"},"content":"            String[] activityDate \u003d getDate(food);"},{"lineNumber":201,"author":{"gitId":"PingruiLi"},"content":"            if (activityDate.length \u003d\u003d 0) {"},{"lineNumber":202,"author":{"gitId":"PingruiLi"},"content":"                //return new InvalidCommand();"},{"lineNumber":203,"author":{"gitId":"PingruiLi"},"content":"                System.out.println(\"Invalid\");"},{"lineNumber":204,"author":{"gitId":"PingruiLi"},"content":"                return;"},{"lineNumber":205,"author":{"gitId":"PingruiLi"},"content":"            }"},{"lineNumber":206,"author":{"gitId":"PingruiLi"},"content":"            food \u003d activityDate[0];"},{"lineNumber":207,"author":{"gitId":"PingruiLi"},"content":"            date \u003d activityDate[1];"},{"lineNumber":208,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(food);"},{"lineNumber":209,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(date);"},{"lineNumber":210,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":211,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":212,"author":{"gitId":"PingruiLi"},"content":"        if (!optionalParams.startsWith(\"date/\")) {"},{"lineNumber":213,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(\"Invalid\");"},{"lineNumber":214,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":215,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":216,"author":{"gitId":"PingruiLi"},"content":"        date \u003d optionalParams.substring(5);"},{"lineNumber":217,"author":{"gitId":"PingruiLi"},"content":"        if (date.length() \u003d\u003d 0) {"},{"lineNumber":218,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(\"Invalid\");"},{"lineNumber":219,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":220,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":221,"author":{"gitId":"PingruiLi"},"content":"        ArrayList\u003cString\u003e params \u003d new ArrayList\u003c\u003e();"},{"lineNumber":222,"author":{"gitId":"PingruiLi"},"content":"        System.out.println(date);"},{"lineNumber":223,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":225,"author":{"gitId":"PingruiLi"},"content":"    private void prepareViewSleep(String typeContent) {"},{"lineNumber":226,"author":{"gitId":"PingruiLi"},"content":"        if (typeContent.length() \u003d\u003d 3) {"},{"lineNumber":227,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(\"print all sleep records\");"},{"lineNumber":228,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":229,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":230,"author":{"gitId":"PingruiLi"},"content":"        boolean hasDate \u003d typeContent.contains(\"date/\");"},{"lineNumber":231,"author":{"gitId":"PingruiLi"},"content":"        if (!hasDate) {"},{"lineNumber":232,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(\"Invalid\");"},{"lineNumber":233,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":234,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":235,"author":{"gitId":"PingruiLi"},"content":"        String[] typeDate \u003d getDate(typeContent);"},{"lineNumber":236,"author":{"gitId":"PingruiLi"},"content":"        if (typeDate.length \u003d\u003d 0) {"},{"lineNumber":237,"author":{"gitId":"PingruiLi"},"content":"            //return new InvalidCommand();"},{"lineNumber":238,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(\"Invalid\");"},{"lineNumber":239,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":240,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":241,"author":{"gitId":"PingruiLi"},"content":"        String date \u003d typeDate[1];"},{"lineNumber":242,"author":{"gitId":"PingruiLi"},"content":"        System.out.println(date);"},{"lineNumber":243,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":244,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":245,"author":{"gitId":"PingruiLi"},"content":"    private void prepareViewBodyWeight(String typeContent) {"},{"lineNumber":246,"author":{"gitId":"PingruiLi"},"content":"        if (typeContent.length() \u003d\u003d 3) {"},{"lineNumber":247,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(\"print all body weight records\");"},{"lineNumber":248,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":249,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":250,"author":{"gitId":"PingruiLi"},"content":"        boolean hasDate \u003d typeContent.contains(\"date/\");"},{"lineNumber":251,"author":{"gitId":"PingruiLi"},"content":"        if (!hasDate) {"},{"lineNumber":252,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(\"Invalid\");"},{"lineNumber":253,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":254,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":255,"author":{"gitId":"PingruiLi"},"content":"        String[] typeDate \u003d getDate(typeContent);"},{"lineNumber":256,"author":{"gitId":"PingruiLi"},"content":"        if (typeDate.length \u003d\u003d 0) {"},{"lineNumber":257,"author":{"gitId":"PingruiLi"},"content":"            //return new InvalidCommand();"},{"lineNumber":258,"author":{"gitId":"PingruiLi"},"content":"            System.out.println(\"Invalid\");"},{"lineNumber":259,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":260,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":261,"author":{"gitId":"PingruiLi"},"content":"        String date \u003d typeDate[1];"},{"lineNumber":262,"author":{"gitId":"PingruiLi"},"content":"        System.out.println(date);"},{"lineNumber":263,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":264,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":265,"author":{"gitId":"PingruiLi"},"content":"    //private Command prepareAdd(String[] inputParts) {"},{"lineNumber":266,"author":{"gitId":"PingruiLi"},"content":"    private void prepareAdd(String[] inputParts) {"},{"lineNumber":267,"author":{"gitId":"PingruiLi"},"content":"        try {"},{"lineNumber":268,"author":{"gitId":"PingruiLi"},"content":"            if (inputParts.length \u003c 2) {"},{"lineNumber":269,"author":{"gitId":"PingruiLi"},"content":"                //return new InvalidCommand(ADD);"},{"lineNumber":270,"author":{"gitId":"PingruiLi"},"content":"                //System.out.println(\"Invalid\");"},{"lineNumber":271,"author":{"gitId":"PingruiLi"},"content":"                InvalidCommand invalidCommand \u003d new InvalidCommand(ADD);"},{"lineNumber":272,"author":{"gitId":"PingruiLi"},"content":"                return;"},{"lineNumber":273,"author":{"gitId":"PingruiLi"},"content":"            }"},{"lineNumber":274,"author":{"gitId":"PingruiLi"},"content":"            String recordType \u003d parseType(inputParts[1]);"},{"lineNumber":275,"author":{"gitId":"PingruiLi"},"content":"            if (recordType.equals(\"\")) {"},{"lineNumber":276,"author":{"gitId":"PingruiLi"},"content":"                //System.out.println(\"Invalid\");"},{"lineNumber":277,"author":{"gitId":"PingruiLi"},"content":"                //return new InvalidCommand(ADD);"},{"lineNumber":278,"author":{"gitId":"PingruiLi"},"content":"                InvalidCommand invalidCommand \u003d new InvalidCommand(ADD);"},{"lineNumber":279,"author":{"gitId":"PingruiLi"},"content":"                return;"},{"lineNumber":280,"author":{"gitId":"PingruiLi"},"content":"            }"},{"lineNumber":281,"author":{"gitId":"PingruiLi"},"content":"            String[] typeContent \u003d inputParts[1].split(\"\\\\s+\", 2);"},{"lineNumber":282,"author":{"gitId":"PingruiLi"},"content":"            if (typeContent.length \u003c 2) {"},{"lineNumber":283,"author":{"gitId":"PingruiLi"},"content":"                //return new InvalidCommand(ADD);"},{"lineNumber":284,"author":{"gitId":"PingruiLi"},"content":"                //System.out.println(\"Invalid\");"},{"lineNumber":285,"author":{"gitId":"PingruiLi"},"content":"                //return;"},{"lineNumber":286,"author":{"gitId":"PingruiLi"},"content":"                InvalidCommand invalidCommand \u003d new InvalidCommand(ADD);"},{"lineNumber":287,"author":{"gitId":"PingruiLi"},"content":"                return;"},{"lineNumber":288,"author":{"gitId":"PingruiLi"},"content":"            }"},{"lineNumber":289,"author":{"gitId":"PingruiLi"},"content":"            String content \u003d typeContent[1];"},{"lineNumber":290,"author":{"gitId":"PingruiLi"},"content":"            switch (recordType) {"},{"lineNumber":291,"author":{"gitId":"PingruiLi"},"content":"            case \"E\":"},{"lineNumber":292,"author":{"gitId":"PingruiLi"},"content":"                prepareAddExercise(content.trim());"},{"lineNumber":293,"author":{"gitId":"PingruiLi"},"content":"                return;"},{"lineNumber":294,"author":{"gitId":"PingruiLi"},"content":"            //    return prepareAddExercise(content.trim());"},{"lineNumber":295,"author":{"gitId":"PingruiLi"},"content":"            //prepareAddExercise(content.trim());"},{"lineNumber":296,"author":{"gitId":"PingruiLi"},"content":"            //break;"},{"lineNumber":297,"author":{"gitId":"PingruiLi"},"content":"            case \"W\":"},{"lineNumber":298,"author":{"gitId":"PingruiLi"},"content":"                prepareAddBodyWeight(content.trim());"},{"lineNumber":299,"author":{"gitId":"PingruiLi"},"content":"                return;"},{"lineNumber":300,"author":{"gitId":"PingruiLi"},"content":"            //    return prepareAddBodyWeight(content.trim());"},{"lineNumber":301,"author":{"gitId":"PingruiLi"},"content":"            //prepareAddBodyWeight(content.trim());"},{"lineNumber":302,"author":{"gitId":"PingruiLi"},"content":"            //break;"},{"lineNumber":303,"author":{"gitId":"PingruiLi"},"content":"            case \"D\":"},{"lineNumber":304,"author":{"gitId":"PingruiLi"},"content":"                //return prepareAddDiet(content.trim());"},{"lineNumber":305,"author":{"gitId":"PingruiLi"},"content":"                prepareAddDiet(content.trim());"},{"lineNumber":306,"author":{"gitId":"PingruiLi"},"content":"                break;"},{"lineNumber":307,"author":{"gitId":"PingruiLi"},"content":"            case \"S\":"},{"lineNumber":308,"author":{"gitId":"PingruiLi"},"content":"                prepareAddSleep(content.trim());"},{"lineNumber":309,"author":{"gitId":"PingruiLi"},"content":"                return;"},{"lineNumber":310,"author":{"gitId":"PingruiLi"},"content":"            //    return prepareAddSleep(content.trim());"},{"lineNumber":311,"author":{"gitId":"PingruiLi"},"content":"            //prepareAddSleep(content.trim());"},{"lineNumber":312,"author":{"gitId":"PingruiLi"},"content":"            //break;"},{"lineNumber":313,"author":{"gitId":"PingruiLi"},"content":"            default:"},{"lineNumber":314,"author":{"gitId":"PingruiLi"},"content":"                //return new InvalidCommand(\"The command word is invalid. Enter help to see help messages\\n\");"},{"lineNumber":315,"author":{"gitId":"PingruiLi"},"content":"                System.out.println(\"Invalid\");"},{"lineNumber":316,"author":{"gitId":"PingruiLi"},"content":"                break;"},{"lineNumber":317,"author":{"gitId":"PingruiLi"},"content":"            }"},{"lineNumber":318,"author":{"gitId":"PingruiLi"},"content":"        } catch (ParseException e) {"},{"lineNumber":319,"author":{"gitId":"PingruiLi"},"content":"            //return new InvalidCommand(\"The date format is incorrect\");"},{"lineNumber":320,"author":{"gitId":"PingruiLi"},"content":"            //System.out.println(\"Invalid\");"},{"lineNumber":321,"author":{"gitId":"PingruiLi"},"content":"            InvalidCommand invalidCommand \u003d new InvalidCommand(\"The date format is incorrect\");"},{"lineNumber":322,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":323,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":324,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":325,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":326,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":327,"author":{"gitId":"PingruiLi"},"content":"    //private Command prepareAddSleep(String content) throws ParseException {"},{"lineNumber":328,"author":{"gitId":"PingruiLi"},"content":"    private void prepareAddSleep(String content) throws ParseException {"},{"lineNumber":329,"author":{"gitId":"PingruiLi"},"content":"        String durationRawInput \u003d content.trim();"},{"lineNumber":330,"author":{"gitId":"PingruiLi"},"content":"        String duration \u003d parseDuration(durationRawInput,false);"},{"lineNumber":331,"author":{"gitId":"PingruiLi"},"content":"        if (duration.equals(\"\")) {"},{"lineNumber":332,"author":{"gitId":"PingruiLi"},"content":"            InvalidCommand invalidCommand \u003d new InvalidCommand(ADD);"},{"lineNumber":333,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":334,"author":{"gitId":"PingruiLi"},"content":"            //return new InvalidCommand(ADD);"},{"lineNumber":335,"author":{"gitId":"PingruiLi"},"content":"            //System.out.println(\"Invalid\");"},{"lineNumber":336,"author":{"gitId":"PingruiLi"},"content":"            //return;"},{"lineNumber":337,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":338,"author":{"gitId":"PingruiLi"},"content":"        boolean hasDate \u003d content.contains(\"date/\");"},{"lineNumber":339,"author":{"gitId":"PingruiLi"},"content":"        String date \u003d \"\";"},{"lineNumber":340,"author":{"gitId":"PingruiLi"},"content":"        if (hasDate) {"},{"lineNumber":341,"author":{"gitId":"PingruiLi"},"content":"            String[] durationDate \u003d getDate(duration);"},{"lineNumber":342,"author":{"gitId":"PingruiLi"},"content":"            if (durationDate.length \u003d\u003d 0) {"},{"lineNumber":343,"author":{"gitId":"PingruiLi"},"content":"                InvalidCommand invalidCommand \u003d new InvalidCommand(ADD);"},{"lineNumber":344,"author":{"gitId":"PingruiLi"},"content":"                return;"},{"lineNumber":345,"author":{"gitId":"PingruiLi"},"content":"                //return new InvalidCommand(ADD);"},{"lineNumber":346,"author":{"gitId":"PingruiLi"},"content":"                //System.out.println(\"Invalid\");"},{"lineNumber":347,"author":{"gitId":"PingruiLi"},"content":"                //return;"},{"lineNumber":348,"author":{"gitId":"PingruiLi"},"content":"            }"},{"lineNumber":349,"author":{"gitId":"PingruiLi"},"content":"            duration \u003d durationDate[0];"},{"lineNumber":350,"author":{"gitId":"PingruiLi"},"content":"            date \u003d durationDate[1];"},{"lineNumber":351,"author":{"gitId":"PingruiLi"},"content":"            params.put(\"duration\", duration);"},{"lineNumber":352,"author":{"gitId":"PingruiLi"},"content":"            params.put(\"date\", date);"},{"lineNumber":353,"author":{"gitId":"PingruiLi"},"content":"            //return new AddCommand(\"S\", params);"},{"lineNumber":354,"author":{"gitId":"PingruiLi"},"content":"            AddCommand addCommand \u003d new AddCommand(\"S\", params);"},{"lineNumber":355,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":356,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":357,"author":{"gitId":"PingruiLi"},"content":"        params.put(\"duration\", duration);"},{"lineNumber":358,"author":{"gitId":"PingruiLi"},"content":"        AddCommand addCommand \u003d new AddCommand(\"S\", params);"},{"lineNumber":359,"author":{"gitId":"PingruiLi"},"content":"        return;"},{"lineNumber":360,"author":{"gitId":"PingruiLi"},"content":"        //return new AddCommand(\"S\", params);"},{"lineNumber":361,"author":{"gitId":"PingruiLi"},"content":"        //for (int i \u003d 0; i \u003c params.size(); i++) {"},{"lineNumber":362,"author":{"gitId":"PingruiLi"},"content":"        //    System.out.println(params.get(i));"},{"lineNumber":363,"author":{"gitId":"PingruiLi"},"content":"        //}"},{"lineNumber":364,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":365,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":366,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":367,"author":{"gitId":"PingruiLi"},"content":"    private String[] getDate(String stringWithDate) {"},{"lineNumber":368,"author":{"gitId":"PingruiLi"},"content":"        String[] paramDateRaw \u003d stringWithDate.split(\"date/\", 2);"},{"lineNumber":369,"author":{"gitId":"PingruiLi"},"content":"        String date \u003d paramDateRaw[1].trim();"},{"lineNumber":370,"author":{"gitId":"PingruiLi"},"content":"        String param \u003d paramDateRaw[0].trim();"},{"lineNumber":371,"author":{"gitId":"PingruiLi"},"content":"        boolean isParamValid \u003d param.length() \u003e 0;"},{"lineNumber":372,"author":{"gitId":"PingruiLi"},"content":"        boolean isDateValid \u003d date.length() \u003d\u003d 10;"},{"lineNumber":373,"author":{"gitId":"PingruiLi"},"content":"        if (!isParamValid || !isDateValid) {"},{"lineNumber":374,"author":{"gitId":"PingruiLi"},"content":"            return new String[0];"},{"lineNumber":375,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":376,"author":{"gitId":"PingruiLi"},"content":"        String[] paramDate \u003d new String[2];"},{"lineNumber":377,"author":{"gitId":"PingruiLi"},"content":"        paramDate[0] \u003d param;"},{"lineNumber":378,"author":{"gitId":"PingruiLi"},"content":"        paramDate[1] \u003d date;"},{"lineNumber":379,"author":{"gitId":"PingruiLi"},"content":"        return paramDate;"},{"lineNumber":380,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":381,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":382,"author":{"gitId":"PingruiLi"},"content":"    //private Command prepareAddDiet(String content) throws ParseException {"},{"lineNumber":383,"author":{"gitId":"PingruiLi"},"content":"    private void prepareAddDiet(String content) throws ParseException {"},{"lineNumber":384,"author":{"gitId":"PingruiLi"},"content":"        String[] foodWeight \u003d content.split(\"w/\",2);"},{"lineNumber":385,"author":{"gitId":"PingruiLi"},"content":"        if (foodWeight.length \u003c 2) {"},{"lineNumber":386,"author":{"gitId":"PingruiLi"},"content":"            //return new InvalidCommand(ADD);"},{"lineNumber":387,"author":{"gitId":"PingruiLi"},"content":"            //System.out.println(\"Invalid\");"},{"lineNumber":388,"author":{"gitId":"PingruiLi"},"content":"            //return;"},{"lineNumber":389,"author":{"gitId":"PingruiLi"},"content":"            InvalidCommand invalidCommand \u003d new InvalidCommand(ADD);"},{"lineNumber":390,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":391,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":392,"author":{"gitId":"PingruiLi"},"content":"        String foodRawInput \u003d foodWeight[0].trim();"},{"lineNumber":393,"author":{"gitId":"PingruiLi"},"content":"        String weightRawInput \u003d foodWeight[1].trim();"},{"lineNumber":394,"author":{"gitId":"PingruiLi"},"content":"        String food \u003d parseDiet(foodRawInput,false);"},{"lineNumber":395,"author":{"gitId":"PingruiLi"},"content":"        if (food.equals(\"\")) {"},{"lineNumber":396,"author":{"gitId":"PingruiLi"},"content":"            //return new InvalidCommand(ADD);"},{"lineNumber":397,"author":{"gitId":"PingruiLi"},"content":"            //System.out.println(\"Invalid\");"},{"lineNumber":398,"author":{"gitId":"PingruiLi"},"content":"            //return;"},{"lineNumber":399,"author":{"gitId":"PingruiLi"},"content":"            InvalidCommand invalidCommand \u003d new InvalidCommand(ADD);"},{"lineNumber":400,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":401,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":402,"author":{"gitId":"PingruiLi"},"content":"        String weight \u003d parseWeight(weightRawInput,true);"},{"lineNumber":403,"author":{"gitId":"PingruiLi"},"content":"        if (weight.equals(\"\")) {"},{"lineNumber":404,"author":{"gitId":"PingruiLi"},"content":"            //return new InvalidCommand(ADD);"},{"lineNumber":405,"author":{"gitId":"PingruiLi"},"content":"            //System.out.println(\"Invalid\");"},{"lineNumber":406,"author":{"gitId":"PingruiLi"},"content":"            //return;"},{"lineNumber":407,"author":{"gitId":"PingruiLi"},"content":"            InvalidCommand invalidCommand \u003d new InvalidCommand(ADD);"},{"lineNumber":408,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":409,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":410,"author":{"gitId":"PingruiLi"},"content":"        boolean hasDate \u003d weightRawInput.contains(\"date/\");"},{"lineNumber":411,"author":{"gitId":"PingruiLi"},"content":"        String date \u003d \"\";"},{"lineNumber":412,"author":{"gitId":"PingruiLi"},"content":"        if (hasDate) {"},{"lineNumber":413,"author":{"gitId":"PingruiLi"},"content":"            String[] weightDate \u003d getDate(weight);"},{"lineNumber":414,"author":{"gitId":"PingruiLi"},"content":"            if (weightDate.length \u003d\u003d 0) {"},{"lineNumber":415,"author":{"gitId":"PingruiLi"},"content":"                //return new InvalidCommand(ADD);"},{"lineNumber":416,"author":{"gitId":"PingruiLi"},"content":"                //System.out.println(\"Invalid\");"},{"lineNumber":417,"author":{"gitId":"PingruiLi"},"content":"                //return;"},{"lineNumber":418,"author":{"gitId":"PingruiLi"},"content":"                InvalidCommand invalidCommand \u003d new InvalidCommand(ADD);"},{"lineNumber":419,"author":{"gitId":"PingruiLi"},"content":"                return;"},{"lineNumber":420,"author":{"gitId":"PingruiLi"},"content":"            }"},{"lineNumber":421,"author":{"gitId":"PingruiLi"},"content":"            weight \u003d weightDate[0];"},{"lineNumber":422,"author":{"gitId":"PingruiLi"},"content":"            date \u003d weightDate[1];"},{"lineNumber":423,"author":{"gitId":"PingruiLi"},"content":"            params.put(\"food\", food);"},{"lineNumber":424,"author":{"gitId":"PingruiLi"},"content":"            params.put(\"weight\", weight);"},{"lineNumber":425,"author":{"gitId":"PingruiLi"},"content":"            params.put(\"date\", date);"},{"lineNumber":426,"author":{"gitId":"PingruiLi"},"content":"            //return new AddCommand(\"D\", params);"},{"lineNumber":427,"author":{"gitId":"PingruiLi"},"content":"            Command addCommand \u003d new AddCommand(\"D\", params);"},{"lineNumber":428,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":429,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":430,"author":{"gitId":"PingruiLi"},"content":"        params.put(\"food\", food);"},{"lineNumber":431,"author":{"gitId":"PingruiLi"},"content":"        params.put(\"weight\", weight);"},{"lineNumber":432,"author":{"gitId":"PingruiLi"},"content":"        //return new AddCommand(\"D\", params);"},{"lineNumber":433,"author":{"gitId":"PingruiLi"},"content":"        Command addCommand \u003d new AddCommand(\"D\", params);"},{"lineNumber":434,"author":{"gitId":"PingruiLi"},"content":"        return;"},{"lineNumber":435,"author":{"gitId":"PingruiLi"},"content":"        //for (int i \u003d 0; i \u003c params.size(); i++) {"},{"lineNumber":436,"author":{"gitId":"PingruiLi"},"content":"        //    System.out.println(params.get(i));"},{"lineNumber":437,"author":{"gitId":"PingruiLi"},"content":"        //}"},{"lineNumber":438,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":439,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":440,"author":{"gitId":"PingruiLi"},"content":"    //private Command prepareAddBodyWeight(String content) throws ParseException {"},{"lineNumber":441,"author":{"gitId":"PingruiLi"},"content":"    private void prepareAddBodyWeight(String content) throws ParseException {"},{"lineNumber":442,"author":{"gitId":"PingruiLi"},"content":"        String weightRawInput \u003d content.trim();"},{"lineNumber":443,"author":{"gitId":"PingruiLi"},"content":"        String weight \u003d parseWeight(weightRawInput,false);"},{"lineNumber":444,"author":{"gitId":"PingruiLi"},"content":"        if (weight.equals(\"\")) {"},{"lineNumber":445,"author":{"gitId":"PingruiLi"},"content":"            //return new InvalidCommand(ADD);"},{"lineNumber":446,"author":{"gitId":"PingruiLi"},"content":"            //System.out.println(\"Invalid\");"},{"lineNumber":447,"author":{"gitId":"PingruiLi"},"content":"            //return;"},{"lineNumber":448,"author":{"gitId":"PingruiLi"},"content":"            InvalidCommand invalidCommand \u003d new InvalidCommand(ADD);"},{"lineNumber":449,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":450,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":451,"author":{"gitId":"PingruiLi"},"content":"        boolean hasDate \u003d content.contains(\"date/\");"},{"lineNumber":452,"author":{"gitId":"PingruiLi"},"content":"        String date \u003d \"\";"},{"lineNumber":453,"author":{"gitId":"PingruiLi"},"content":"        if (hasDate) {"},{"lineNumber":454,"author":{"gitId":"PingruiLi"},"content":"            String[] weightDate \u003d getDate(weight);"},{"lineNumber":455,"author":{"gitId":"PingruiLi"},"content":"            if (weightDate.length \u003d\u003d 0) {"},{"lineNumber":456,"author":{"gitId":"PingruiLi"},"content":"                //return new InvalidCommand(ADD);"},{"lineNumber":457,"author":{"gitId":"PingruiLi"},"content":"                //System.out.println(\"Invalid\");"},{"lineNumber":458,"author":{"gitId":"PingruiLi"},"content":"                //return;"},{"lineNumber":459,"author":{"gitId":"PingruiLi"},"content":"                InvalidCommand invalidCommand \u003d new InvalidCommand(ADD);"},{"lineNumber":460,"author":{"gitId":"PingruiLi"},"content":"                return;"},{"lineNumber":461,"author":{"gitId":"PingruiLi"},"content":"            }"},{"lineNumber":462,"author":{"gitId":"PingruiLi"},"content":"            weight \u003d weightDate[0];"},{"lineNumber":463,"author":{"gitId":"PingruiLi"},"content":"            date \u003d weightDate[1];"},{"lineNumber":464,"author":{"gitId":"PingruiLi"},"content":"            params.put(\"weight\",weight);"},{"lineNumber":465,"author":{"gitId":"PingruiLi"},"content":"            params.put(\"date\",date);"},{"lineNumber":466,"author":{"gitId":"PingruiLi"},"content":"            //return new AddCommand(\"W\", params);"},{"lineNumber":467,"author":{"gitId":"PingruiLi"},"content":"            AddCommand addCommand \u003d new AddCommand(\"W\", params);"},{"lineNumber":468,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":469,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":470,"author":{"gitId":"PingruiLi"},"content":"        params.put(\"weight\",weight);"},{"lineNumber":471,"author":{"gitId":"PingruiLi"},"content":"        AddCommand addCommand \u003d new AddCommand(\"W\", params);"},{"lineNumber":472,"author":{"gitId":"PingruiLi"},"content":"        return;"},{"lineNumber":473,"author":{"gitId":"PingruiLi"},"content":"        //return new AddCommand(\"W\", params);"},{"lineNumber":474,"author":{"gitId":"PingruiLi"},"content":"        //for (int i \u003d 0; i \u003c params.size(); i++) {"},{"lineNumber":475,"author":{"gitId":"PingruiLi"},"content":"        //    System.out.println(params.get(i));"},{"lineNumber":476,"author":{"gitId":"PingruiLi"},"content":"        //}"},{"lineNumber":477,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":478,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":479,"author":{"gitId":"PingruiLi"},"content":"    //private Command prepareAddExercise(String content) throws ParseException {"},{"lineNumber":480,"author":{"gitId":"PingruiLi"},"content":"    private void prepareAddExercise(String content) throws ParseException {"},{"lineNumber":481,"author":{"gitId":"PingruiLi"},"content":"        String[] activityDuration \u003d content.split(\"d/\",2);"},{"lineNumber":482,"author":{"gitId":"PingruiLi"},"content":"        if (activityDuration.length \u003c 2) {"},{"lineNumber":483,"author":{"gitId":"PingruiLi"},"content":"            InvalidCommand invalidCommand \u003d new InvalidCommand(ADD);"},{"lineNumber":484,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":485,"author":{"gitId":"PingruiLi"},"content":"            //return new InvalidCommand(ADD);"},{"lineNumber":486,"author":{"gitId":"PingruiLi"},"content":"            //System.out.println(\"Invalid\");"},{"lineNumber":487,"author":{"gitId":"PingruiLi"},"content":"            //return;"},{"lineNumber":488,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":489,"author":{"gitId":"PingruiLi"},"content":"        String activityRawInput \u003d activityDuration[0].trim();"},{"lineNumber":490,"author":{"gitId":"PingruiLi"},"content":"        String activity \u003d parseExerciseActivity(activityRawInput,false);"},{"lineNumber":491,"author":{"gitId":"PingruiLi"},"content":"        if (activity.equals(\"\")) {"},{"lineNumber":492,"author":{"gitId":"PingruiLi"},"content":"            InvalidCommand invalidCommand \u003d new InvalidCommand(ADD);"},{"lineNumber":493,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":494,"author":{"gitId":"PingruiLi"},"content":"            //return new InvalidCommand(ADD);"},{"lineNumber":495,"author":{"gitId":"PingruiLi"},"content":"            //System.out.println(\"Invalid\");"},{"lineNumber":496,"author":{"gitId":"PingruiLi"},"content":"            //return;"},{"lineNumber":497,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":498,"author":{"gitId":"PingruiLi"},"content":"        String durationRawInput \u003d activityDuration[1].trim();"},{"lineNumber":499,"author":{"gitId":"PingruiLi"},"content":"        String duration \u003d parseDuration(durationRawInput,true);"},{"lineNumber":500,"author":{"gitId":"PingruiLi"},"content":"        if (duration.equals(\"\")) {"},{"lineNumber":501,"author":{"gitId":"PingruiLi"},"content":"            InvalidCommand invalidCommand \u003d new InvalidCommand(ADD);"},{"lineNumber":502,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":503,"author":{"gitId":"PingruiLi"},"content":"            //return new InvalidCommand(ADD);"},{"lineNumber":504,"author":{"gitId":"PingruiLi"},"content":"            //System.out.println(\"Invalid\");"},{"lineNumber":505,"author":{"gitId":"PingruiLi"},"content":"            //return;"},{"lineNumber":506,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":507,"author":{"gitId":"PingruiLi"},"content":"        boolean hasDate \u003d durationRawInput.contains(\"date/\");"},{"lineNumber":508,"author":{"gitId":"PingruiLi"},"content":"        String date \u003d \"\";"},{"lineNumber":509,"author":{"gitId":"PingruiLi"},"content":"        if (hasDate) {"},{"lineNumber":510,"author":{"gitId":"PingruiLi"},"content":"            String[] durationDate \u003d getDate(duration);"},{"lineNumber":511,"author":{"gitId":"PingruiLi"},"content":"            if (durationDate.length \u003d\u003d 0) {"},{"lineNumber":512,"author":{"gitId":"PingruiLi"},"content":"                InvalidCommand invalidCommand \u003d new InvalidCommand(ADD);"},{"lineNumber":513,"author":{"gitId":"PingruiLi"},"content":"                return;"},{"lineNumber":514,"author":{"gitId":"PingruiLi"},"content":"                //return new InvalidCommand(ADD);"},{"lineNumber":515,"author":{"gitId":"PingruiLi"},"content":"                //System.out.println(\"Invalid\");"},{"lineNumber":516,"author":{"gitId":"PingruiLi"},"content":"                //return;"},{"lineNumber":517,"author":{"gitId":"PingruiLi"},"content":"            }"},{"lineNumber":518,"author":{"gitId":"PingruiLi"},"content":"            duration \u003d durationDate[0];"},{"lineNumber":519,"author":{"gitId":"PingruiLi"},"content":"            date \u003d durationDate[1];"},{"lineNumber":520,"author":{"gitId":"PingruiLi"},"content":"            params.put(\"activity\", activity);"},{"lineNumber":521,"author":{"gitId":"PingruiLi"},"content":"            params.put(\"duration\", duration);"},{"lineNumber":522,"author":{"gitId":"PingruiLi"},"content":"            params.put(\"date\", date);"},{"lineNumber":523,"author":{"gitId":"PingruiLi"},"content":"            //return new AddCommand(\"E\", params);"},{"lineNumber":524,"author":{"gitId":"PingruiLi"},"content":"            AddCommand addCommand \u003d new AddCommand(\"E\", params);"},{"lineNumber":525,"author":{"gitId":"PingruiLi"},"content":"            return;"},{"lineNumber":526,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":527,"author":{"gitId":"PingruiLi"},"content":"        //duration \u003d duration.substring(2,duration.length());"},{"lineNumber":528,"author":{"gitId":"PingruiLi"},"content":"        params.put(\"activity\", activity);"},{"lineNumber":529,"author":{"gitId":"PingruiLi"},"content":"        params.put(\"duration\", duration);"},{"lineNumber":530,"author":{"gitId":"PingruiLi"},"content":"        AddCommand addCommand \u003d new AddCommand(\"E\", params);"},{"lineNumber":531,"author":{"gitId":"PingruiLi"},"content":"        return;"},{"lineNumber":532,"author":{"gitId":"PingruiLi"},"content":"        //return new AddCommand(\"E\", params);"},{"lineNumber":533,"author":{"gitId":"PingruiLi"},"content":"        //for (int i \u003d 0; i \u003c params.size(); i++) {"},{"lineNumber":534,"author":{"gitId":"PingruiLi"},"content":"        //    System.out.println(params.get(i));"},{"lineNumber":535,"author":{"gitId":"PingruiLi"},"content":"        //}"},{"lineNumber":536,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":537,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":538,"author":{"gitId":"PingruiLi"},"content":"    private String parseType(String input) {"},{"lineNumber":539,"author":{"gitId":"PingruiLi"},"content":"        boolean isTypeKeywordValid \u003d input.startsWith(\"t/\") \u0026\u0026 input.length() \u003e\u003d 3;"},{"lineNumber":540,"author":{"gitId":"PingruiLi"},"content":"        if (!isTypeKeywordValid) {"},{"lineNumber":541,"author":{"gitId":"PingruiLi"},"content":"            return \"\";"},{"lineNumber":542,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":543,"author":{"gitId":"PingruiLi"},"content":"        String type \u003d \"\" + input.charAt(2);"},{"lineNumber":544,"author":{"gitId":"PingruiLi"},"content":"        if (!CommandRecordType.isValidType(type)) {"},{"lineNumber":545,"author":{"gitId":"PingruiLi"},"content":"            return \"\";"},{"lineNumber":546,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":547,"author":{"gitId":"PingruiLi"},"content":"        return type.toUpperCase(Locale.ROOT);"},{"lineNumber":548,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":549,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":550,"author":{"gitId":"PingruiLi"},"content":"    private String parseExerciseActivity(String activityRawInput, boolean prefixChecked) {"},{"lineNumber":551,"author":{"gitId":"PingruiLi"},"content":"        boolean isActivityValid;"},{"lineNumber":552,"author":{"gitId":"PingruiLi"},"content":"        if (prefixChecked) {"},{"lineNumber":553,"author":{"gitId":"PingruiLi"},"content":"            isActivityValid \u003d activityRawInput.length() \u003e 0;"},{"lineNumber":554,"author":{"gitId":"PingruiLi"},"content":"            if (!isActivityValid) {"},{"lineNumber":555,"author":{"gitId":"PingruiLi"},"content":"                return \"\";"},{"lineNumber":556,"author":{"gitId":"PingruiLi"},"content":"            }"},{"lineNumber":557,"author":{"gitId":"PingruiLi"},"content":"            return activityRawInput;"},{"lineNumber":558,"author":{"gitId":"PingruiLi"},"content":"        } else {"},{"lineNumber":559,"author":{"gitId":"PingruiLi"},"content":"            isActivityValid \u003d activityRawInput.length() \u003e\u003d 3 \u0026\u0026 activityRawInput.startsWith(\"a/\");"},{"lineNumber":560,"author":{"gitId":"PingruiLi"},"content":"            if (!isActivityValid) {"},{"lineNumber":561,"author":{"gitId":"PingruiLi"},"content":"                return \"\";"},{"lineNumber":562,"author":{"gitId":"PingruiLi"},"content":"            }"},{"lineNumber":563,"author":{"gitId":"PingruiLi"},"content":"            return activityRawInput.substring(2);"},{"lineNumber":564,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":565,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":566,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":567,"author":{"gitId":"PingruiLi"},"content":"    private String parseWeight(String bodyWeightRawInput, boolean prefixChecked) {"},{"lineNumber":568,"author":{"gitId":"PingruiLi"},"content":"        boolean isBosyWeightValid;"},{"lineNumber":569,"author":{"gitId":"PingruiLi"},"content":"        if (prefixChecked) {"},{"lineNumber":570,"author":{"gitId":"PingruiLi"},"content":"            isBosyWeightValid \u003d bodyWeightRawInput.length() \u003e 0;"},{"lineNumber":571,"author":{"gitId":"PingruiLi"},"content":"            if (!isBosyWeightValid) {"},{"lineNumber":572,"author":{"gitId":"PingruiLi"},"content":"                return \"\";"},{"lineNumber":573,"author":{"gitId":"PingruiLi"},"content":"            }"},{"lineNumber":574,"author":{"gitId":"PingruiLi"},"content":"            return bodyWeightRawInput;"},{"lineNumber":575,"author":{"gitId":"PingruiLi"},"content":"        } else {"},{"lineNumber":576,"author":{"gitId":"PingruiLi"},"content":"            isBosyWeightValid \u003d bodyWeightRawInput.length() \u003e\u003d 3 \u0026\u0026 bodyWeightRawInput.startsWith(\"w/\");"},{"lineNumber":577,"author":{"gitId":"PingruiLi"},"content":"            if (!isBosyWeightValid) {"},{"lineNumber":578,"author":{"gitId":"PingruiLi"},"content":"                return \"\";"},{"lineNumber":579,"author":{"gitId":"PingruiLi"},"content":"            }"},{"lineNumber":580,"author":{"gitId":"PingruiLi"},"content":"            return bodyWeightRawInput.substring(2);"},{"lineNumber":581,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":582,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":583,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":584,"author":{"gitId":"PingruiLi"},"content":"    private String parseDuration(String durationRawInput,boolean prefixChecked) {"},{"lineNumber":585,"author":{"gitId":"PingruiLi"},"content":"        boolean isDurationValid;"},{"lineNumber":586,"author":{"gitId":"PingruiLi"},"content":"        if (prefixChecked) {"},{"lineNumber":587,"author":{"gitId":"PingruiLi"},"content":"            isDurationValid \u003d durationRawInput.length() \u003e 0;"},{"lineNumber":588,"author":{"gitId":"PingruiLi"},"content":"            if (!isDurationValid) {"},{"lineNumber":589,"author":{"gitId":"PingruiLi"},"content":"                return \"\";"},{"lineNumber":590,"author":{"gitId":"PingruiLi"},"content":"            }"},{"lineNumber":591,"author":{"gitId":"PingruiLi"},"content":"            return durationRawInput;"},{"lineNumber":592,"author":{"gitId":"PingruiLi"},"content":"        } else {"},{"lineNumber":593,"author":{"gitId":"PingruiLi"},"content":"            isDurationValid \u003d durationRawInput.length() \u003e\u003d 3 \u0026\u0026 durationRawInput.startsWith(\"d/\");"},{"lineNumber":594,"author":{"gitId":"PingruiLi"},"content":"            if (!isDurationValid) {"},{"lineNumber":595,"author":{"gitId":"PingruiLi"},"content":"                return \"\";"},{"lineNumber":596,"author":{"gitId":"PingruiLi"},"content":"            }"},{"lineNumber":597,"author":{"gitId":"PingruiLi"},"content":"            return durationRawInput.substring(2);"},{"lineNumber":598,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":599,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":600,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":601,"author":{"gitId":"PingruiLi"},"content":"    private String parseDiet(String dietRawInput,boolean prefixChecked) {"},{"lineNumber":602,"author":{"gitId":"PingruiLi"},"content":"        boolean isDietValid;"},{"lineNumber":603,"author":{"gitId":"PingruiLi"},"content":"        if (prefixChecked) {"},{"lineNumber":604,"author":{"gitId":"PingruiLi"},"content":"            isDietValid \u003d dietRawInput.length() \u003e 0;"},{"lineNumber":605,"author":{"gitId":"PingruiLi"},"content":"            if (!isDietValid) {"},{"lineNumber":606,"author":{"gitId":"PingruiLi"},"content":"                return \"\";"},{"lineNumber":607,"author":{"gitId":"PingruiLi"},"content":"            }"},{"lineNumber":608,"author":{"gitId":"PingruiLi"},"content":"            return dietRawInput;"},{"lineNumber":609,"author":{"gitId":"PingruiLi"},"content":"        } else {"},{"lineNumber":610,"author":{"gitId":"PingruiLi"},"content":"            isDietValid \u003d dietRawInput.length() \u003e\u003d 3 \u0026\u0026 dietRawInput.startsWith(\"f/\");"},{"lineNumber":611,"author":{"gitId":"PingruiLi"},"content":"            if (!isDietValid) {"},{"lineNumber":612,"author":{"gitId":"PingruiLi"},"content":"                return \"\";"},{"lineNumber":613,"author":{"gitId":"PingruiLi"},"content":"            }"},{"lineNumber":614,"author":{"gitId":"PingruiLi"},"content":"            return dietRawInput.substring(2);"},{"lineNumber":615,"author":{"gitId":"PingruiLi"},"content":"        }"},{"lineNumber":616,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":617,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":618,"author":{"gitId":"PingruiLi"},"content":"    public void clearParserParams() {"},{"lineNumber":619,"author":{"gitId":"PingruiLi"},"content":"        params.clear();"},{"lineNumber":620,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":621,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":622,"author":{"gitId":"PingruiLi"},"content":"}"}],"authorContributionMap":{"PingruiLi":622}},{"path":"src/main/java/seedu/duke/common/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.common;"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":" * Container for commonly used messages."},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"public class Messages {"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_NO_RECORD \u003d \"Sorry, no records found.\\n\""},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"            + \"You can try adding records by using command \u0027add\u0027.\";"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_SEE_HELP \u003d \"To learn more about the commands, try use command \u0027help\u0027\";"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"    public static final String MESSAGE_CANT_VIEW_LIST \u003d \"Sorry, cannot view record list of an incorrect record type.\";"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"}"}],"authorContributionMap":{"Song0180":11}},{"path":"src/main/java/seedu/duke/record/Record.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.record;"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":" * Represents the record for a type of Health info. Contains the date and type of the record."},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":" */"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"public abstract class Record {"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"    protected RecordType type;"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"    protected LocalDate date;"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"     * Initializes the object with given record type and date."},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"     * @param type the type of the record."},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"     * @param date the date of the record."},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"    public Record(RecordType type, LocalDate date) {"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"        this.type \u003d type;"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"        this.date \u003d date;"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"     * Gets the date of the record."},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"     * @return the date of the record in LocalDate."},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"    public LocalDate getDate() {"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"        return date;"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"     * Sets the date of the record."},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"     * @param date the date of the record in LocalDate."},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"    public void setDate(LocalDate date) {"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"        this.date \u003d date;"},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"     * Gets the type of the record."},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"     * @return the type of the record defined in enum RecordType."},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":"    public RecordType getType() {"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"        return type;"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":"     * Gets a text summary of the record. To be implemented by child classes."},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"Song0180"},"content":"     * @return a text summary of the record in String."},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"Song0180"},"content":"    public abstract String getRecordSummary();"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"}"}],"authorContributionMap":{"Song0180":57}},{"path":"src/main/java/seedu/duke/record/RecordList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.record;"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.common.Messages;"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import seedu.duke.record.comparator.RecordDateComparator;"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"import seedu.duke.ui.UI;"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":" * Represents the list that contains all records of one type."},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":" */"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"public class RecordList {"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"    private final ArrayList\u003cRecord\u003e records \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"    private RecordType type;"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"     * Initializes the record list object with a given record type."},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"     * @param type the type of record that this list contains."},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"    public RecordList(RecordType type) {"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"        this.type \u003d type;"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"     * Adds a record to the current list."},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"     * @param newRecord the new record to add."},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"    public void addRecord(Record newRecord) {"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"        records.add(newRecord);"},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"        records.sort(new RecordDateComparator());"},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"     * Removes a record from the current list by index."},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"     * @param index the index of the record."},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"    public void removeRecord(int index) {"},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"        records.remove(index);"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":"     * Prints the list of records."},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"    public void printRecords() {"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"        if (records.isEmpty()) {"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"            UI.printMessage(Messages.MESSAGE_NO_RECORD"},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"                    + Messages.MESSAGE_SEE_HELP);"},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":"        } else {"},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"            UI.printDivider();"},{"lineNumber":54,"author":{"gitId":"Song0180"},"content":"            for (Record record : records) {"},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"                System.out.println(record.getRecordSummary());"},{"lineNumber":56,"author":{"gitId":"Song0180"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"            UI.printDivider();"},{"lineNumber":58,"author":{"gitId":"Song0180"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":61,"author":{"gitId":"Song0180"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"Song0180"},"content":"     * Prints the list of records on a specific date."},{"lineNumber":63,"author":{"gitId":"Song0180"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"Song0180"},"content":"     * @param date the date of records."},{"lineNumber":65,"author":{"gitId":"Song0180"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"Song0180"},"content":"    public void printRecords(LocalDate date) {"},{"lineNumber":67,"author":{"gitId":"Song0180"},"content":"        if (records.isEmpty()) {"},{"lineNumber":68,"author":{"gitId":"Song0180"},"content":"            UI.printMessage(Messages.MESSAGE_NO_RECORD"},{"lineNumber":69,"author":{"gitId":"Song0180"},"content":"                    + Messages.MESSAGE_SEE_HELP);"},{"lineNumber":70,"author":{"gitId":"Song0180"},"content":"        } else {"},{"lineNumber":71,"author":{"gitId":"Song0180"},"content":"            UI.printDivider();"},{"lineNumber":72,"author":{"gitId":"Song0180"},"content":"            for (Record record : records) {"},{"lineNumber":73,"author":{"gitId":"Song0180"},"content":"                if (record.getDate().isEqual(date)) {"},{"lineNumber":74,"author":{"gitId":"Song0180"},"content":"                    System.out.println(record.getRecordSummary());"},{"lineNumber":75,"author":{"gitId":"Song0180"},"content":"                }"},{"lineNumber":76,"author":{"gitId":"Song0180"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"Song0180"},"content":"            UI.printDivider();"},{"lineNumber":78,"author":{"gitId":"Song0180"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"Song0180"},"content":"}"}],"authorContributionMap":{"Song0180":80}},{"path":"src/main/java/seedu/duke/record/RecordType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.record;"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":" * Represents the type of a record. Contains 4 kinds of type."},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"public enum RecordType {"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"    SLEEP, EXERCISE, DIET, BODYWEIGHT"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"}"}],"authorContributionMap":{"Song0180":8}},{"path":"src/main/java/seedu/duke/record/comparator/RecordDateComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.record.comparator;"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.record.Record;"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"import java.util.Comparator;"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":" * Comparator for comparing two records by date."},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"public class RecordDateComparator implements Comparator\u003cRecord\u003e {"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"    public int compare(Record record1, Record record2) {"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"        LocalDate date1 \u003d record1.getDate();"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"        LocalDate date2 \u003d record2.getDate();"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"        if (date1.isBefore(date2)) {"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"            return -1;"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"        } else if (date1.isAfter(date2)) {"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"            return 1;"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"        } else {"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"            return 0;"},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"}"}],"authorContributionMap":{"Song0180":24}},{"path":"src/main/java/seedu/duke/ui/UI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.ui;"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":3,"author":{"gitId":"PingruiLi"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"public class UI {"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"    public static final String DIVIDER \u003d \"------------------------------------------------\\n\";"},{"lineNumber":8,"author":{"gitId":"PingruiLi"},"content":"    private Scanner sc;"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"    public UI() {"},{"lineNumber":11,"author":{"gitId":"PingruiLi"},"content":"        sc \u003d new Scanner(System.in);"},{"lineNumber":12,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"PingruiLi"},"content":""},{"lineNumber":14,"author":{"gitId":"PingruiLi"},"content":"    public String getUserInput() {"},{"lineNumber":15,"author":{"gitId":"PingruiLi"},"content":"        return sc.nextLine();"},{"lineNumber":16,"author":{"gitId":"PingruiLi"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":18,"author":{"gitId":"PingruiLi"},"content":"    public void printGreetings() {"},{"lineNumber":19,"author":{"gitId":"PingruiLi"},"content":"        System.out.print(DIVIDER"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"                + \"Welcome to your personal fitness app - Healthier\\n\""},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"                + \"What\u0027s in your mind today?\\n\""},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"                + DIVIDER);"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":25,"author":{"gitId":"PingruiLi"},"content":"    public void printExitMessage() {"},{"lineNumber":26,"author":{"gitId":"PingruiLi"},"content":"        System.out.print(DIVIDER"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"                + \"Nice work today!\\n\""},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"                + \"You are one step closer to ultimate fitness!\\n\""},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"                + \"See you again soon!\\n\""},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"                + DIVIDER);"},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":33,"author":{"gitId":"PingruiLi"},"content":"    public void printHelpPrompt() {"},{"lineNumber":34,"author":{"gitId":"PingruiLi"},"content":"        System.out.print(DIVIDER"},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"                + \"Not sure what to do?\\n\""},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"                + \"Run command \u0027help\u0027 to see what you can do.\\n\""},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"                + DIVIDER);"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"    public static void printMessage(String message) {"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"        System.out.println(DIVIDER"},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"                + message"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"                + \"\\n\""},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"                + DIVIDER);"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":"    public static void printDivider() {"},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"        System.out.println(DIVIDER);"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":"}"}],"authorContributionMap":{"PingruiLi":16,"Song0180":34}},{"path":"src/test/java/seedu/duke/HealthierTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"class HealthierTest {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":11,"Song0180":1}}]
