[{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio "},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"![](https://avatars.githubusercontent.com/u/55625337?s\u003d460\u0026u\u003d8cf010d3f5099773aec99b0ebe41c4902552a392\u0026v\u003d4) | Song Yu | [Github](https://github.com/Song0180) | [LinkedIn](https://www.linkedin.com/in/daniel-yu-song/)"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Joe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ron John | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | John Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Don Roe | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"},{"lineNumber":10,"author":{"gitId":"PingruiLi"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Li Pingrui | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)"}],"authorContributionMap":{"PingruiLi":1,"-":8,"Song0180":1}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"# Healther - Your No. 1 Personal Fitness Management Application"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"Healtheir targets people who care about fitness, who exercise regularly (at least 3 times/week) and have diet plans. It is designed for users of age group 18-30.  "},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"This app is used via **Command Line Interface (CLI)**. If the user is proficient in using command-line tools \u0026 typing, then it could be very efficient to use. This app also provides several shortcut commands for advanced users for further efficient operations."},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Useful links:"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)"}],"authorContributionMap":{"-":6,"Song0180":4}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"# Healthier | User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"Healtheir targets people who care about fitness, who exercise regularly (at least 3 times/week) and have diet plans. It is designed for users of age group 18-30.  "},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"This app is used via **Command Line Interface (CLI)**. If the user is proficient in using command-line tools \u0026 typing, then it could be very efficient to use. This app also provides several shortcut commands for advanced users for further efficient operations."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"---"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"## Table of Content"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"* [Quick start](README.md#quick-start)"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"* [Features](README.md#features)"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"* [Command summary](README.md#command-summary)"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"## Quick Start"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"This is a cross-platform application, you can run it on any operating system as long as **Java 11** is installed. "},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"\u003e To verify if you have **Java 11** installed, simply type command `java --version` in your terminal."},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"1. Download the `tp.jar` file from the [latest release](https://github.com/AY2021S2-CS2113-F10-2/tp/releases)."},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"1. Open a new terminal at the folder where the `Tp.jar` file is located."},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"1. Run the applictaion use command `java -jar Tp.jar`"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":"1. Refer to the [Features](README.md#features) section below for more info on commands."},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"\u003e **Note:**"},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"\u003e * All commands should be input in `lower_case`. It is always the first word supplied by the user."},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"\u003e "},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"\u003e   e.g. `add`, `view`, `delete` etc."},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"\u003e "},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":"\u003e "},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"\u003e * Parameters of a command are denoted in `UPPER_CASE`. They must be supplied by the user, otherwise the command will not be recognized."},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"\u003e   The actual input of the parameters can be in any case. "},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"\u003e   "},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"\u003e   e.g. in `add XXX`, `XXX` is a parameter which can be used as ``."},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"\u003e "},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"\u003e "},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"\u003e * Redundant parameters for single-word commands (e.g. `help`) will be ignored. "},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"\u003e "},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":"\u003e    e.g. if the command `help hahahaha` is input, it is equivalent to `help`."},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"\u003e "},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"\u003e * After the appliction starts running, it checks if a `data` folder exists in the same directory where `tp.jar` is located."},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"\u003e   If the folder does not exist, the application will create a new folder `data`, "},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"\u003e   which is used to store the `data.txt` file which contains details of the user\u0027s data."},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"\u003e"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"\u003e * The text file `data.txt` will be automatically updated after each operation of the app. "},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":"\u003e"},{"lineNumber":47,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":48,"author":{"gitId":"Song0180"},"content":"### Get help from instructions on how to use this app : `help`"},{"lineNumber":49,"author":{"gitId":"Song0180"},"content":"Adds a to-do type of task to the task list."},{"lineNumber":50,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":51,"author":{"gitId":"Song0180"},"content":"Format: `help`"},{"lineNumber":52,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":53,"author":{"gitId":"Song0180"},"content":"Example: `help`"},{"lineNumber":54,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":55,"author":{"gitId":"Song0180"},"content":"Expected outcome:"},{"lineNumber":56,"author":{"gitId":"Song0180"},"content":"```"},{"lineNumber":57,"author":{"gitId":"Song0180"},"content":"```"},{"lineNumber":58,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":59,"author":{"gitId":"Song0180"},"content":"### Input Exercise Data: `add`"},{"lineNumber":60,"author":{"gitId":"Song0180"},"content":"Add one exercise activity with the duration and the date."},{"lineNumber":61,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":62,"author":{"gitId":"Song0180"},"content":"Format: `add  t/E a/ACTIVITY_NAME  d/DURATION  [date/DD-MM-YYYY]`"},{"lineNumber":63,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":64,"author":{"gitId":"Song0180"},"content":"* Add one exercise record. The name of exercise activity `a/ACTIVITY_NAME` and duration `d/DURATION` **MUST** be specified. "},{"lineNumber":65,"author":{"gitId":"Song0180"},"content":"* The name of the exercise should be a `String`."},{"lineNumber":66,"author":{"gitId":"Song0180"},"content":"* The tag value should be `E` in the upper case, which specifies that the current record is for **exercise data**."},{"lineNumber":67,"author":{"gitId":"Song0180"},"content":"* The default unit of duration is in **minutes**. An `integer` is expected for the duration, other formats are **not acceptable**."},{"lineNumber":68,"author":{"gitId":"Song0180"},"content":"* The date of the exercise activity `[date/DD-MM-YYYY]` is optional. If not provided, the system date will be used."},{"lineNumber":69,"author":{"gitId":"Song0180"},"content":"* The date should be **less than or equal to** the current date."},{"lineNumber":70,"author":{"gitId":"Song0180"},"content":"* The date format should be `DD-MM-YYYY`, other formats are not acceptable."},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"Example of usage:  "},{"lineNumber":74,"author":{"gitId":"Song0180"},"content":"`add t/E a/running d/40 add one exercise record of running for 40 minutes. `  "},{"lineNumber":75,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":76,"author":{"gitId":"Song0180"},"content":"Output:  "},{"lineNumber":77,"author":{"gitId":"Song0180"},"content":"```"},{"lineNumber":78,"author":{"gitId":"Song0180"},"content":"A new exercise activity record is added successfully!"},{"lineNumber":79,"author":{"gitId":"Song0180"},"content":"Record summary: 40 minutes running exercise on XX-XX-XXXX(Today)."},{"lineNumber":80,"author":{"gitId":"Song0180"},"content":"```"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  "},{"lineNumber":82,"author":{"gitId":"Song0180"},"content":"`add t/E a/football d/60 date/05-01-2020 add the exercise record of football for 60 mins at the date of 05-01-2020.`  "},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"Song0180"},"content":"Output:  "},{"lineNumber":85,"author":{"gitId":"Song0180"},"content":"```"},{"lineNumber":86,"author":{"gitId":"Song0180"},"content":"A new exercise activity record is added successfully!"},{"lineNumber":87,"author":{"gitId":"Song0180"},"content":"Record summary: 60 minutes football exercise on 05-01-2020."},{"lineNumber":88,"author":{"gitId":"Song0180"},"content":"```"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"## FAQ"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"Song0180"},"content":"**Q**: {?}"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"**A**: {your answer here}"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"Song0180"},"content":"## Command summary"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"Song0180"},"content":"Action | Format, Examples"},{"lineNumber":99,"author":{"gitId":"Song0180"},"content":"--- | ---"},{"lineNumber":100,"author":{"gitId":"Song0180"},"content":"Help | `help`"},{"lineNumber":101,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"-":22,"Song0180":79}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"import seedu.duke.ui.UI;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"        UI.printGreetings();"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"        UI.printHelpPrompt();"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"        exit();"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"    private static void exit() {"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"        UI.printExitMessage();"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"        System.exit(0);"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":8,"Song0180":8}},{"path":"src/main/java/seedu/duke/record/Record.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.record;"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":" * Represents the record for a type of Health info. Contains the date and type of the record."},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":" */"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"public abstract class Record {"},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"    protected RecordType type;"},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"    protected LocalDate date;"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"     * Gets the date of the record."},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"     * @return the date of the record in LocalDate."},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"    public LocalDate getDate() {"},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"        return date;"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"     * Sets the date of the record."},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"     * @param date the date of the record in LocalDate."},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"    public void setDate(LocalDate date) {"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"        this.date \u003d date;"},{"lineNumber":29,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":31,"author":{"gitId":"Song0180"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"Song0180"},"content":"     * Gets the type of the record."},{"lineNumber":33,"author":{"gitId":"Song0180"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"Song0180"},"content":"     * @return the type of the record defined in enum RecordType."},{"lineNumber":35,"author":{"gitId":"Song0180"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"Song0180"},"content":"    public RecordType getType() {"},{"lineNumber":37,"author":{"gitId":"Song0180"},"content":"        return type;"},{"lineNumber":38,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":40,"author":{"gitId":"Song0180"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"Song0180"},"content":"     * Gets a text summary of the record. To be implemented by child classes."},{"lineNumber":42,"author":{"gitId":"Song0180"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"Song0180"},"content":"     * @return a text summary of the record in String."},{"lineNumber":44,"author":{"gitId":"Song0180"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"Song0180"},"content":"    public abstract String getRecordSummary();"},{"lineNumber":46,"author":{"gitId":"Song0180"},"content":"}"}],"authorContributionMap":{"Song0180":46}},{"path":"src/main/java/seedu/duke/record/RecordType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.record;"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":" * Represents the type of a record. Contains 4 kinds of type."},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":"public enum RecordType {"},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"    SLEEP, EXERCISE, DIET, BODYWEIGHT"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"}"}],"authorContributionMap":{"Song0180":8}},{"path":"src/main/java/seedu/duke/ui/UI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Song0180"},"content":"package seedu.duke.ui;"},{"lineNumber":2,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":3,"author":{"gitId":"Song0180"},"content":"public class UI {"},{"lineNumber":4,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":5,"author":{"gitId":"Song0180"},"content":"    public static final String DIVIDER \u003d \"------------------------------------------------\\n\";"},{"lineNumber":6,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":7,"author":{"gitId":"Song0180"},"content":"    public static void printGreetings() {"},{"lineNumber":8,"author":{"gitId":"Song0180"},"content":"        System.out.println(DIVIDER"},{"lineNumber":9,"author":{"gitId":"Song0180"},"content":"                + \"Welcome to your personal fitness app - Healthier\\n\""},{"lineNumber":10,"author":{"gitId":"Song0180"},"content":"                + \"What\u0027s in your mind today?\\n\""},{"lineNumber":11,"author":{"gitId":"Song0180"},"content":"                + DIVIDER);"},{"lineNumber":12,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":14,"author":{"gitId":"Song0180"},"content":"    public static void printExitMessage() {"},{"lineNumber":15,"author":{"gitId":"Song0180"},"content":"        System.out.println(DIVIDER"},{"lineNumber":16,"author":{"gitId":"Song0180"},"content":"                + \"Nice work today!\\n\""},{"lineNumber":17,"author":{"gitId":"Song0180"},"content":"                + \"You are one step closer to ultimate fitness!\\n\""},{"lineNumber":18,"author":{"gitId":"Song0180"},"content":"                + \"See you again soon!\\n\""},{"lineNumber":19,"author":{"gitId":"Song0180"},"content":"                + DIVIDER);"},{"lineNumber":20,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Song0180"},"content":""},{"lineNumber":22,"author":{"gitId":"Song0180"},"content":"    public static void printHelpPrompt() {"},{"lineNumber":23,"author":{"gitId":"Song0180"},"content":"        System.out.println(DIVIDER"},{"lineNumber":24,"author":{"gitId":"Song0180"},"content":"                + \"Not sure what to do?\\n\""},{"lineNumber":25,"author":{"gitId":"Song0180"},"content":"                + \"Run command \u0027help\u0027 to see what you can do.\\n\""},{"lineNumber":26,"author":{"gitId":"Song0180"},"content":"                + DIVIDER);"},{"lineNumber":27,"author":{"gitId":"Song0180"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Song0180"},"content":"}"}],"authorContributionMap":{"Song0180":28}}]
