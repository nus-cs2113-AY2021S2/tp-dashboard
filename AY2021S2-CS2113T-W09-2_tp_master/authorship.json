[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"xseh"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.6.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"kewenlok"},"content":"    compile group: \u0027com.google.code.gson\u0027, name: \u0027gson\u0027, version: \u00272.8.6\u0027"},{"lineNumber":16,"author":{"gitId":"xseh"},"content":"    implementation group: \u0027org.danilopianini\u0027, name: \u0027gson-extras\u0027, version: \u00270.2.1\u0027"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":34,"author":{"gitId":"kewenlok"},"content":"    mainClassName \u003d \"seedu.igraduate.IGraduate\""},{"lineNumber":35,"author":{"gitId":"-"},"content":"}"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":38,"author":{"gitId":"kewenlok"},"content":"    archiveBaseName \u003d \"igraduate\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":48,"author":{"gitId":"kewenlok"},"content":"    enableAssertions \u003d true"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"kewenlok":4,"xseh":2,"-":43}},{"path":"src/main/java/seedu/igraduate/IGraduate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kewenlok"},"content":"package seedu.igraduate;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"kewenlok"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"kewenlok"},"content":"import java.io.InputStream;"},{"lineNumber":5,"author":{"gitId":"kewenlok"},"content":"import java.nio.file.Paths;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"xseh"},"content":"import java.util.logging.Logger;"},{"lineNumber":8,"author":{"gitId":"xseh"},"content":""},{"lineNumber":9,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.command.Command;"},{"lineNumber":10,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":11,"author":{"gitId":"kewenlok"},"content":"import java.util.logging.LogManager;"},{"lineNumber":12,"author":{"gitId":"kewenlok"},"content":"import java.util.logging.Level;"},{"lineNumber":13,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":14,"author":{"gitId":"kewenlok"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"kewenlok"},"content":" * IGraduate program."},{"lineNumber":16,"author":{"gitId":"kewenlok"},"content":" */"},{"lineNumber":17,"author":{"gitId":"kewenlok"},"content":"public class IGraduate {"},{"lineNumber":18,"author":{"gitId":"kewenlok"},"content":"    private Storage storage;"},{"lineNumber":19,"author":{"gitId":"kewenlok"},"content":"    private ModuleList modules;"},{"lineNumber":20,"author":{"gitId":"kewenlok"},"content":"    private Ui ui;"},{"lineNumber":21,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":22,"author":{"gitId":"xseh"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(IGraduate.class.getName());"},{"lineNumber":23,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":24,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"kewenlok"},"content":"     * Initialise logger configurations at the moment the program is run."},{"lineNumber":26,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"kewenlok"},"content":"    static {"},{"lineNumber":28,"author":{"gitId":"kewenlok"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"kewenlok"},"content":"            InputStream inputStream \u003d IGraduate.class.getClassLoader().getResourceAsStream(\"logger.properties\");"},{"lineNumber":30,"author":{"gitId":"kewenlok"},"content":"            LogManager.getLogManager().readConfiguration(inputStream);"},{"lineNumber":31,"author":{"gitId":"kewenlok"},"content":"        } catch (Exception e) {"},{"lineNumber":32,"author":{"gitId":"kewenlok"},"content":"            LOGGER.log(Level.WARNING, \"An error occur when trying to read logger configuration file.\", e);"},{"lineNumber":33,"author":{"gitId":"kewenlok"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"kewenlok"},"content":"     * Instantiates Storage, ModuleList and Ui components of the program."},{"lineNumber":38,"author":{"gitId":"kewenlok"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"kewenlok"},"content":"     * @param filePath The file path at which module data file is located, if exists."},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"kewenlok"},"content":"    public IGraduate(File filePath) {"},{"lineNumber":42,"author":{"gitId":"kewenlok"},"content":"        LOGGER.info(\"Initialising iGraduate Ui, Storage and ModuleList components...\");"},{"lineNumber":43,"author":{"gitId":"kewenlok"},"content":"        ui \u003d new Ui();"},{"lineNumber":44,"author":{"gitId":"kewenlok"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":45,"author":{"gitId":"kewenlok"},"content":"        try {"},{"lineNumber":46,"author":{"gitId":"kewenlok"},"content":"            modules \u003d new ModuleList(storage.loadModulesFromFile());"},{"lineNumber":47,"author":{"gitId":"kewenlok"},"content":"        } catch (Exception e) {"},{"lineNumber":48,"author":{"gitId":"kewenlok"},"content":"            ui.printErrorMessage(e);"},{"lineNumber":49,"author":{"gitId":"kewenlok"},"content":"            modules \u003d new ModuleList();"},{"lineNumber":50,"author":{"gitId":"kewenlok"},"content":"            LOGGER.info(\"A new module list is created.\");"},{"lineNumber":51,"author":{"gitId":"kewenlok"},"content":"        } finally {"},{"lineNumber":52,"author":{"gitId":"kewenlok"},"content":"            LOGGER.info(\"All components initialised successfully.\");"},{"lineNumber":53,"author":{"gitId":"kewenlok"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"kewenlok"},"content":"     * Runs IGraduate program."},{"lineNumber":58,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"kewenlok"},"content":"    public void run() {"},{"lineNumber":60,"author":{"gitId":"kewenlok"},"content":"        ui.printWelcomeMessage();"},{"lineNumber":61,"author":{"gitId":"kewenlok"},"content":"        boolean isExit \u003d false;"},{"lineNumber":62,"author":{"gitId":"kewenlok"},"content":"        while (!isExit) {"},{"lineNumber":63,"author":{"gitId":"kewenlok"},"content":"            try {"},{"lineNumber":64,"author":{"gitId":"kewenlok"},"content":"                String fullCommand \u003d ui.getCommand();"},{"lineNumber":65,"author":{"gitId":"kewenlok"},"content":"                ui.printBorderLine();"},{"lineNumber":66,"author":{"gitId":"kewenlok"},"content":"                Command c \u003d Parser.parseCommand(fullCommand);"},{"lineNumber":67,"author":{"gitId":"kewenlok"},"content":"                c.execute(modules, ui, storage);"},{"lineNumber":68,"author":{"gitId":"xseh"},"content":"                isExit \u003d c.isExit();"},{"lineNumber":69,"author":{"gitId":"kewenlok"},"content":"            } catch (Exception e) {"},{"lineNumber":70,"author":{"gitId":"kewenlok"},"content":"                ui.printErrorMessage(e);"},{"lineNumber":71,"author":{"gitId":"kewenlok"},"content":"            } finally {"},{"lineNumber":72,"author":{"gitId":"kewenlok"},"content":"                ui.printBorderLine();"},{"lineNumber":73,"author":{"gitId":"kewenlok"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"kewenlok"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":77,"author":{"gitId":"kewenlok"},"content":"    public static void main(String[] args) {"},{"lineNumber":78,"author":{"gitId":"kewenlok"},"content":"        LOGGER.info(\"iGraduate starts.\");"},{"lineNumber":79,"author":{"gitId":"kewenlok"},"content":"        File filePath \u003d Paths.get(\"data/modules.json\").toFile();"},{"lineNumber":80,"author":{"gitId":"kewenlok"},"content":"        try {"},{"lineNumber":81,"author":{"gitId":"kewenlok"},"content":"            new IGraduate(filePath).run();"},{"lineNumber":82,"author":{"gitId":"kewenlok"},"content":"        } finally {"},{"lineNumber":83,"author":{"gitId":"kewenlok"},"content":"            LOGGER.info(\"iGraduate exits.\");"},{"lineNumber":84,"author":{"gitId":"kewenlok"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"kewenlok":75,"xseh":4,"-":7}},{"path":"src/main/java/seedu/igraduate/ModuleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kewenlok"},"content":"package seedu.igraduate;"},{"lineNumber":2,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":3,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.exception.ExistingModuleException;"},{"lineNumber":4,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.exception.ModuleNotFoundException;"},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":6,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.module.Module;"},{"lineNumber":7,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.module.MathModule;"},{"lineNumber":8,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.module.CoreModule;"},{"lineNumber":9,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.module.ElectiveModule;"},{"lineNumber":10,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.module.GeModule;"},{"lineNumber":11,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":12,"author":{"gitId":"kewenlok"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"import java.util.logging.Logger;"},{"lineNumber":14,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":15,"author":{"gitId":"kewenlok"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"kewenlok"},"content":" * Handles underlying operations on modules ArrayList."},{"lineNumber":17,"author":{"gitId":"kewenlok"},"content":" */"},{"lineNumber":18,"author":{"gitId":"kewenlok"},"content":"public class ModuleList {"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(ModuleList.class.getName());"},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":22,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"kewenlok"},"content":"     * ArrayList that stores all the modules data."},{"lineNumber":24,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"kewenlok"},"content":"    private ArrayList\u003cModule\u003e modules;"},{"lineNumber":26,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":27,"author":{"gitId":"kewenlok"},"content":"    private static final int DEFAULT_INDEX \u003d -1;"},{"lineNumber":28,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":29,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"kewenlok"},"content":"     * Constructs new ArrayList if no data is provided."},{"lineNumber":31,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"kewenlok"},"content":"    public ModuleList() {"},{"lineNumber":33,"author":{"gitId":"kewenlok"},"content":"        this(new ArrayList\u003c\u003e());"},{"lineNumber":34,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":36,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"kewenlok"},"content":"     * Assigns the existing ArrayList with modules data as the module storage."},{"lineNumber":38,"author":{"gitId":"kewenlok"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"kewenlok"},"content":"     * @param modules ArrayList consists of existing modules data."},{"lineNumber":40,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"kewenlok"},"content":"    public ModuleList(ArrayList\u003cModule\u003e modules) {"},{"lineNumber":42,"author":{"gitId":"kewenlok"},"content":"        this.modules \u003d modules;"},{"lineNumber":43,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":45,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"kewenlok"},"content":"     * Adds new module to the module storage if not already exists."},{"lineNumber":47,"author":{"gitId":"kewenlok"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"kewenlok"},"content":"     * @param module Module to be added into the module list."},{"lineNumber":49,"author":{"gitId":"kewenlok"},"content":"     * @throws ExistingModuleException If the new module already exists."},{"lineNumber":50,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"kewenlok"},"content":"    public void add(Module module) throws ExistingModuleException {"},{"lineNumber":52,"author":{"gitId":"kewenlok"},"content":"        String moduleCode \u003d module.getCode();"},{"lineNumber":53,"author":{"gitId":"kewenlok"},"content":"        if (getModuleIndex(moduleCode) !\u003d DEFAULT_INDEX) {"},{"lineNumber":54,"author":{"gitId":"oscarlai1998"},"content":"            assert getModuleIndex(moduleCode) !\u003d DEFAULT_INDEX : \"No repeating modules allowed to be added\";"},{"lineNumber":55,"author":{"gitId":"kewenlok"},"content":"            throw new ExistingModuleException();"},{"lineNumber":56,"author":{"gitId":"kewenlok"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"kewenlok"},"content":"        assert getModuleIndex(moduleCode) \u003d\u003d DEFAULT_INDEX : \"Duplicated module cannot be added.\";"},{"lineNumber":58,"author":{"gitId":"kewenlok"},"content":"        modules.add(module);"},{"lineNumber":59,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":61,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"kewenlok"},"content":"     * Removes specified module from the module storage."},{"lineNumber":63,"author":{"gitId":"kewenlok"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"kewenlok"},"content":"     * @param module Module to be removed from the module list."},{"lineNumber":65,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"kewenlok"},"content":"    public void delete(Module module) {"},{"lineNumber":67,"author":{"gitId":"kewenlok"},"content":"        modules.remove(module);"},{"lineNumber":68,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":70,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"kewenlok"},"content":"     * Marks the specified module as taken."},{"lineNumber":72,"author":{"gitId":"kewenlok"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"kewenlok"},"content":"     * @param module Module to be marked as taken."},{"lineNumber":74,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"kewenlok"},"content":"    public void markAsTaken(Module module) {"},{"lineNumber":76,"author":{"gitId":"kewenlok"},"content":"        module.setStatus(\"taken\");"},{"lineNumber":77,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":79,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"kewenlok"},"content":"     * Sets the specified module grade."},{"lineNumber":81,"author":{"gitId":"kewenlok"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"kewenlok"},"content":"     * @param module Module to be marked as taken."},{"lineNumber":83,"author":{"gitId":"kewenlok"},"content":"     * @param grade  Grade obtained for the specified module."},{"lineNumber":84,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"kewenlok"},"content":"    public void setGrade(Module module, String grade) {"},{"lineNumber":86,"author":{"gitId":"kewenlok"},"content":"        module.setGrade(grade);"},{"lineNumber":87,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":89,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"kewenlok"},"content":"     * Retrieves and returns the underlying ArrayList for storing modules."},{"lineNumber":91,"author":{"gitId":"kewenlok"},"content":"     *"},{"lineNumber":92,"author":{"gitId":"kewenlok"},"content":"     * @return The task list used for storing all modules."},{"lineNumber":93,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"kewenlok"},"content":"    public ArrayList\u003cModule\u003e getModules() {"},{"lineNumber":95,"author":{"gitId":"kewenlok"},"content":"        return modules;"},{"lineNumber":96,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":98,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"kewenlok"},"content":"     * Obtains and returns the current module list size."},{"lineNumber":100,"author":{"gitId":"kewenlok"},"content":"     *"},{"lineNumber":101,"author":{"gitId":"kewenlok"},"content":"     * @return The number of modules in the ArrayList."},{"lineNumber":102,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"kewenlok"},"content":"    public int size() {"},{"lineNumber":104,"author":{"gitId":"kewenlok"},"content":"        return modules.size();"},{"lineNumber":105,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":107,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":108,"author":{"gitId":"xseh"},"content":"     * Checks if the current module list is empty."},{"lineNumber":109,"author":{"gitId":"kewenlok"},"content":"     *"},{"lineNumber":110,"author":{"gitId":"xseh"},"content":"     * @return Boolean value indicating whether the module list is empty."},{"lineNumber":111,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"kewenlok"},"content":"    public boolean isEmpty() {"},{"lineNumber":113,"author":{"gitId":"kewenlok"},"content":"        return modules.isEmpty();"},{"lineNumber":114,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":116,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"kewenlok"},"content":"     * Retrieves specified module from module list."},{"lineNumber":118,"author":{"gitId":"kewenlok"},"content":"     *"},{"lineNumber":119,"author":{"gitId":"kewenlok"},"content":"     * @param moduleCode Module code of module."},{"lineNumber":120,"author":{"gitId":"kewenlok"},"content":"     * @return The retrieved module based on specified module code."},{"lineNumber":121,"author":{"gitId":"kewenlok"},"content":"     * @throws ModuleNotFoundException If the module specified is not in the list."},{"lineNumber":122,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"xseh"},"content":"    public Module getByCode(String moduleCode) "},{"lineNumber":124,"author":{"gitId":"xseh"},"content":"            throws ModuleNotFoundException {"},{"lineNumber":125,"author":{"gitId":"kewenlok"},"content":"        int moduleIndex \u003d getModuleIndex(moduleCode);"},{"lineNumber":126,"author":{"gitId":"kewenlok"},"content":"        if (moduleIndex \u003d\u003d DEFAULT_INDEX) {"},{"lineNumber":127,"author":{"gitId":"kewenlok"},"content":"            throw new ModuleNotFoundException();"},{"lineNumber":128,"author":{"gitId":"kewenlok"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"kewenlok"},"content":"        assert moduleIndex !\u003d DEFAULT_INDEX : \"Module code does not exists.\";"},{"lineNumber":130,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":131,"author":{"gitId":"kewenlok"},"content":"        return modules.get(moduleIndex);"},{"lineNumber":132,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":134,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":135,"author":{"gitId":"kewenlok"},"content":"     * Retrieves the index of module in module list."},{"lineNumber":136,"author":{"gitId":"kewenlok"},"content":"     *"},{"lineNumber":137,"author":{"gitId":"kewenlok"},"content":"     * @param moduleCode Module code of module."},{"lineNumber":138,"author":{"gitId":"kewenlok"},"content":"     * @return The retrieved module index on specified module code."},{"lineNumber":139,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":140,"author":{"gitId":"kewenlok"},"content":"    public int getModuleIndex(String moduleCode) {"},{"lineNumber":141,"author":{"gitId":"kewenlok"},"content":"        int index \u003d DEFAULT_INDEX;"},{"lineNumber":142,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":143,"author":{"gitId":"kewenlok"},"content":"        for (int i \u003d 0; i \u003c modules.size(); i++) {"},{"lineNumber":144,"author":{"gitId":"kewenlok"},"content":"            if (modules.get(i).getCode().equalsIgnoreCase(moduleCode)) {"},{"lineNumber":145,"author":{"gitId":"kewenlok"},"content":"                index \u003d i;"},{"lineNumber":146,"author":{"gitId":"kewenlok"},"content":"                break;"},{"lineNumber":147,"author":{"gitId":"kewenlok"},"content":"            }"},{"lineNumber":148,"author":{"gitId":"kewenlok"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"kewenlok"},"content":"        return index;"},{"lineNumber":150,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":152,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":153,"author":{"gitId":"kewenlok"},"content":"     * Retrieves the module type of specified module."},{"lineNumber":154,"author":{"gitId":"kewenlok"},"content":"     *"},{"lineNumber":155,"author":{"gitId":"kewenlok"},"content":"     * @param module Module object for finding type."},{"lineNumber":156,"author":{"gitId":"kewenlok"},"content":"     * @return The type of module specified."},{"lineNumber":157,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":158,"author":{"gitId":"kewenlok"},"content":"    public String getModuleType(Module module) {"},{"lineNumber":159,"author":{"gitId":"kewenlok"},"content":"        String moduleType \u003d \"Undefined\";"},{"lineNumber":160,"author":{"gitId":"kewenlok"},"content":"        if (module instanceof CoreModule) {"},{"lineNumber":161,"author":{"gitId":"kewenlok"},"content":"            moduleType \u003d \"Core\";"},{"lineNumber":162,"author":{"gitId":"kewenlok"},"content":"        } else if (module instanceof MathModule) {"},{"lineNumber":163,"author":{"gitId":"kewenlok"},"content":"            moduleType \u003d \"Math\";"},{"lineNumber":164,"author":{"gitId":"kewenlok"},"content":"        } else if (module instanceof GeModule) {"},{"lineNumber":165,"author":{"gitId":"kewenlok"},"content":"            moduleType \u003d \"GE\";"},{"lineNumber":166,"author":{"gitId":"kewenlok"},"content":"        } else if (module instanceof ElectiveModule) {"},{"lineNumber":167,"author":{"gitId":"kewenlok"},"content":"            moduleType \u003d \"Elective\";"},{"lineNumber":168,"author":{"gitId":"kewenlok"},"content":"        }"},{"lineNumber":169,"author":{"gitId":"kewenlok"},"content":"        assert !moduleType.equals(\"Undefined\") : \"Module type is not valid.\";"},{"lineNumber":170,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":171,"author":{"gitId":"kewenlok"},"content":"        return moduleType;"},{"lineNumber":172,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":174,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":175,"author":{"gitId":"kewenlok"},"content":"     * Calculates the total completed MC of all modules."},{"lineNumber":176,"author":{"gitId":"kewenlok"},"content":"     *"},{"lineNumber":177,"author":{"gitId":"kewenlok"},"content":"     * @return The total completed MCs."},{"lineNumber":178,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":179,"author":{"gitId":"kewenlok"},"content":"    public double getTotalCompletedMCs() {"},{"lineNumber":180,"author":{"gitId":"kewenlok"},"content":"        double totalCompletedMCs \u003d 0;"},{"lineNumber":181,"author":{"gitId":"kewenlok"},"content":"        for (Module module : modules) {"},{"lineNumber":182,"author":{"gitId":"kewenlok"},"content":"            if (module.getStatus().equalsIgnoreCase(\"taken\")) {"},{"lineNumber":183,"author":{"gitId":"oscarlai1998"},"content":"                assert totalCompletedMCs \u003e\u003d module.getCredit() : \"Completed MCs should be more or equal to credits\""},{"lineNumber":184,"author":{"gitId":"oscarlai1998"},"content":"                       + \"of done modules\";"},{"lineNumber":185,"author":{"gitId":"kewenlok"},"content":"                totalCompletedMCs +\u003d module.getCredit();"},{"lineNumber":186,"author":{"gitId":"kewenlok"},"content":"            }"},{"lineNumber":187,"author":{"gitId":"kewenlok"},"content":"        }"},{"lineNumber":188,"author":{"gitId":"kewenlok"},"content":"        return totalCompletedMCs;"},{"lineNumber":189,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":190,"author":{"gitId":"kewenlok"},"content":"}"}],"authorContributionMap":{"fupernova":6,"kewenlok":176,"xseh":4,"oscarlai1998":4}},{"path":"src/main/java/seedu/igraduate/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kewenlok"},"content":"package seedu.igraduate;"},{"lineNumber":2,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":3,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.command.Command;"},{"lineNumber":4,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.command.AddCommand;"},{"lineNumber":5,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.command.DeleteCommand;"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"import seedu.igraduate.command.DoneCommand;"},{"lineNumber":7,"author":{"gitId":"xseh"},"content":"import seedu.igraduate.command.ExitCommand;"},{"lineNumber":8,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.command.ListCommand;"},{"lineNumber":9,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.command.ProgressCommand;"},{"lineNumber":10,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":11,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.exception.IncorrectParameterCountException;"},{"lineNumber":12,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.exception.InputNotNumberException;"},{"lineNumber":13,"author":{"gitId":"xseh"},"content":"import seedu.igraduate.exception.InvalidCommandException;"},{"lineNumber":14,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.exception.InvalidModuleTypeException;"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":16,"author":{"gitId":"xseh"},"content":"import java.util.logging.Logger;"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":"import java.util.logging.Level;"},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":19,"author":{"gitId":"xseh"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"xseh"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"},{"lineNumber":21,"author":{"gitId":"xseh"},"content":" * Represents an instance of a parser. "},{"lineNumber":22,"author":{"gitId":"xseh"},"content":" * A parser object corresponds to the processing of one input by the user. "},{"lineNumber":23,"author":{"gitId":"xseh"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":24,"author":{"gitId":"xseh"},"content":" * Represents an instance of a parser. A parse object corresponds to the"},{"lineNumber":25,"author":{"gitId":"xseh"},"content":" * processing of one input by the user."},{"lineNumber":26,"author":{"gitId":"xseh"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e c049c3469b118e2f35c282e7500c65179e7fb8f8"},{"lineNumber":27,"author":{"gitId":"xseh"},"content":" */"},{"lineNumber":28,"author":{"gitId":"kewenlok"},"content":"public class Parser {"},{"lineNumber":29,"author":{"gitId":"xseh"},"content":"    // Constants for command words"},{"lineNumber":30,"author":{"gitId":"xseh"},"content":"    private static final String COMMAND_ADD \u003d \"add\";"},{"lineNumber":31,"author":{"gitId":"xseh"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";"},{"lineNumber":32,"author":{"gitId":"xseh"},"content":"    private static final String COMMAND_LIST \u003d \"list\";"},{"lineNumber":33,"author":{"gitId":"xseh"},"content":"    private static final String COMMAND_PROGRESS \u003d \"progress\";"},{"lineNumber":34,"author":{"gitId":"fupernova"},"content":"    private static final String COMMAND_DONE \u003d \"done\";"},{"lineNumber":35,"author":{"gitId":"xseh"},"content":"    private static final String COMMAND_EXIT \u003d \"exit\";"},{"lineNumber":36,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":37,"author":{"gitId":"xseh"},"content":"    // Constants for the expected number of parameters for a given command"},{"lineNumber":38,"author":{"gitId":"fupernova"},"content":"    private static final int COMMAND_ADD_FLAG_LENGTH \u003d 6;"},{"lineNumber":39,"author":{"gitId":"fupernova"},"content":"    private static final int COMMAND_ADD_PARAMETER_LENGTH \u003d 2;"},{"lineNumber":40,"author":{"gitId":"xseh"},"content":"    private static final int COMMAND_DELETE_LENGTH \u003d 2;"},{"lineNumber":41,"author":{"gitId":"oscarlai1998"},"content":"    private static final int COMMAND_LIST_LENGTH \u003d 1;"},{"lineNumber":42,"author":{"gitId":"xseh"},"content":"    private static final int COMMAND_PROGRESS_LENGTH \u003d 1;"},{"lineNumber":43,"author":{"gitId":"fupernova"},"content":"    private static final int COMMAND_DONE_FLAG_LENGTH \u003d 2;"},{"lineNumber":44,"author":{"gitId":"fupernova"},"content":"    private static final int COMMAND_DONE_PARAMETER_LENGTH \u003d 2;"},{"lineNumber":45,"author":{"gitId":"xseh"},"content":"    private static final int COMMAND_EXIT_LENGTH \u003d 1;"},{"lineNumber":46,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":47,"author":{"gitId":"xseh"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(Parser.class.getName());"},{"lineNumber":48,"author":{"gitId":"xseh"},"content":""},{"lineNumber":49,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"xseh"},"content":"     * Parses user input and identifies the command to be executed."},{"lineNumber":51,"author":{"gitId":"fupernova"},"content":"     * "},{"lineNumber":52,"author":{"gitId":"xseh"},"content":"     * @param line User input directly from the input stream."},{"lineNumber":53,"author":{"gitId":"xseh"},"content":"     * @return An object of the respective command class (e.g. deleteCommand,"},{"lineNumber":54,"author":{"gitId":"xseh"},"content":"     *         addCommand, etc.)"},{"lineNumber":55,"author":{"gitId":"xseh"},"content":"     * @throws InvalidCommandException          If input does not contain a valid"},{"lineNumber":56,"author":{"gitId":"xseh"},"content":"     *                                          command."},{"lineNumber":57,"author":{"gitId":"xseh"},"content":"     * @throws IncorrectParameterCountException If the command input does not"},{"lineNumber":58,"author":{"gitId":"xseh"},"content":"     *                                          contain the right parameters."},{"lineNumber":59,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"kewenlok"},"content":"    public static Command parseCommand(String line) "},{"lineNumber":61,"author":{"gitId":"kewenlok"},"content":"            throws InvalidCommandException, IncorrectParameterCountException,"},{"lineNumber":62,"author":{"gitId":"kewenlok"},"content":"            InputNotNumberException, InvalidModuleTypeException {"},{"lineNumber":63,"author":{"gitId":"xseh"},"content":"        if (line.trim().length() \u003d\u003d 0) {"},{"lineNumber":64,"author":{"gitId":"xseh"},"content":"            throw new InvalidCommandException();"},{"lineNumber":65,"author":{"gitId":"xseh"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"xseh"},"content":""},{"lineNumber":67,"author":{"gitId":"kewenlok"},"content":"        LOGGER.log(Level.INFO, String.format(\"User input: %s\", line));"},{"lineNumber":68,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":69,"author":{"gitId":"fupernova"},"content":"        // Splits into 2 String elements:"},{"lineNumber":70,"author":{"gitId":"fupernova"},"content":"        // 1. command + first parameter"},{"lineNumber":71,"author":{"gitId":"fupernova"},"content":"        // 2. command flags (if any)"},{"lineNumber":72,"author":{"gitId":"xseh"},"content":"        String[] commands \u003d line.split(\"\\\\s+(?\u003d-)\", 2);"},{"lineNumber":73,"author":{"gitId":"fupernova"},"content":"        assert commands.length \u003c\u003d 2 : \"Limit of split is 2\";"},{"lineNumber":74,"author":{"gitId":"xseh"},"content":"        String[] commandParameters \u003d commands[0].split(\"\\\\s+\", 2);"},{"lineNumber":75,"author":{"gitId":"fupernova"},"content":"        assert commandParameters.length \u003c\u003d 2 : \"Limit of split is 2\";"},{"lineNumber":76,"author":{"gitId":"xseh"},"content":"        String command \u003d commandParameters[0].toLowerCase();"},{"lineNumber":77,"author":{"gitId":"xseh"},"content":"        String[] commandFlags \u003d getCommandFlag(commands);"},{"lineNumber":78,"author":{"gitId":"xseh"},"content":""},{"lineNumber":79,"author":{"gitId":"fupernova"},"content":"        switch (command) {"},{"lineNumber":80,"author":{"gitId":"fupernova"},"content":"        case COMMAND_ADD:"},{"lineNumber":81,"author":{"gitId":"kewenlok"},"content":"            LOGGER.log(Level.INFO, \"Input parsed to add command.\");"},{"lineNumber":82,"author":{"gitId":"xseh"},"content":"            return createAddCommand(commandParameters, commandFlags);"},{"lineNumber":83,"author":{"gitId":"fupernova"},"content":"        case COMMAND_DELETE:"},{"lineNumber":84,"author":{"gitId":"kewenlok"},"content":"            LOGGER.log(Level.INFO, \"Input parsed to delete command.\");"},{"lineNumber":85,"author":{"gitId":"xseh"},"content":"            return createDeleteCommand(commandParameters, commandFlags);"},{"lineNumber":86,"author":{"gitId":"fupernova"},"content":"        case COMMAND_LIST:"},{"lineNumber":87,"author":{"gitId":"kewenlok"},"content":"            LOGGER.log(Level.INFO, \"Input parsed to list command.\");"},{"lineNumber":88,"author":{"gitId":"xseh"},"content":"            return createListCommand(commandParameters, commandFlags);"},{"lineNumber":89,"author":{"gitId":"fupernova"},"content":"        case COMMAND_PROGRESS:"},{"lineNumber":90,"author":{"gitId":"kewenlok"},"content":"            LOGGER.log(Level.INFO, \"Input parsed to progress command.\");"},{"lineNumber":91,"author":{"gitId":"xseh"},"content":"            return createProgressCommand(commandParameters, commandFlags);"},{"lineNumber":92,"author":{"gitId":"fupernova"},"content":"        case COMMAND_DONE:"},{"lineNumber":93,"author":{"gitId":"kewenlok"},"content":"            LOGGER.log(Level.INFO, \"Input parsed to done command.\");"},{"lineNumber":94,"author":{"gitId":"xseh"},"content":"            return createDoneCommand(commandParameters, commandFlags);"},{"lineNumber":95,"author":{"gitId":"fupernova"},"content":"        case COMMAND_EXIT:"},{"lineNumber":96,"author":{"gitId":"kewenlok"},"content":"            LOGGER.log(Level.INFO, \"Input parsed to exit command.\");"},{"lineNumber":97,"author":{"gitId":"xseh"},"content":"            return createExitCommand(commandParameters, commandFlags);"},{"lineNumber":98,"author":{"gitId":"fupernova"},"content":"        default:"},{"lineNumber":99,"author":{"gitId":"xseh"},"content":"            LOGGER.warning(\"Invalid command detected.\");"},{"lineNumber":100,"author":{"gitId":"xseh"},"content":"            throw new InvalidCommandException();"},{"lineNumber":101,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":104,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"xseh"},"content":"     * Obtains the flags and their respective values."},{"lineNumber":106,"author":{"gitId":"xseh"},"content":"     * "},{"lineNumber":107,"author":{"gitId":"xseh"},"content":"     * @param commands Array separating command name and parameters with command"},{"lineNumber":108,"author":{"gitId":"xseh"},"content":"     *                 flags and values."},{"lineNumber":109,"author":{"gitId":"fupernova"},"content":"     * @return Array containing the flags and values split with the delimiter (\" \")."},{"lineNumber":110,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"xseh"},"content":"    private static String[] getCommandFlag(String[] commands) {"},{"lineNumber":112,"author":{"gitId":"xseh"},"content":"        if (commands.length \u003c 2) {"},{"lineNumber":113,"author":{"gitId":"xseh"},"content":"            return new String[] { null };"},{"lineNumber":114,"author":{"gitId":"xseh"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"xseh"},"content":"        return commands[1].split(\"\\\\s+\");"},{"lineNumber":116,"author":{"gitId":"xseh"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"xseh"},"content":""},{"lineNumber":118,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":119,"author":{"gitId":"fupernova"},"content":"     * Extracts relevant parameters and creates new instance of AddCommand class to execute."},{"lineNumber":120,"author":{"gitId":"fupernova"},"content":"     * Format: \"Add [module name] -c [module code] -t [module type] -mc [modular credits]\""},{"lineNumber":121,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":122,"author":{"gitId":"xseh"},"content":"     * @param commandParameters parameters of user input, excluding command flags."},{"lineNumber":123,"author":{"gitId":"xseh"},"content":"     * @param commandFlags      flags of commands from user input."},{"lineNumber":124,"author":{"gitId":"fupernova"},"content":"     * @return new instance of AddCommand class."},{"lineNumber":125,"author":{"gitId":"xseh"},"content":"     * @throws InvalidCommandException          If input does not contain a valid"},{"lineNumber":126,"author":{"gitId":"xseh"},"content":"     *                                          command."},{"lineNumber":127,"author":{"gitId":"xseh"},"content":"     * @throws IncorrectParameterCountException If the command input does not"},{"lineNumber":128,"author":{"gitId":"xseh"},"content":"     *                                          contain the right parameters."},{"lineNumber":129,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":130,"author":{"gitId":"xseh"},"content":"    public static Command createAddCommand(String[] commandParameters, String[] commandFlags)"},{"lineNumber":131,"author":{"gitId":"xseh"},"content":"            throws InvalidCommandException, IncorrectParameterCountException, InputNotNumberException,"},{"lineNumber":132,"author":{"gitId":"xseh"},"content":"            InvalidModuleTypeException {"},{"lineNumber":133,"author":{"gitId":"xseh"},"content":"        boolean isInvalidPara \u003d (commandParameters.length !\u003d COMMAND_ADD_PARAMETER_LENGTH);"},{"lineNumber":134,"author":{"gitId":"xseh"},"content":"        boolean isInvalidFlag \u003d (commandFlags.length !\u003d COMMAND_ADD_FLAG_LENGTH);"},{"lineNumber":135,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":136,"author":{"gitId":"xseh"},"content":"        if (isInvalidPara || isInvalidFlag) {"},{"lineNumber":137,"author":{"gitId":"xseh"},"content":"            LOGGER.warning(\"Invalid number of parameters\");"},{"lineNumber":138,"author":{"gitId":"kewenlok"},"content":"            throw new IncorrectParameterCountException();"},{"lineNumber":139,"author":{"gitId":"xseh"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":141,"author":{"gitId":"fupernova"},"content":"        assert commandParameters.length \u003d\u003d 2 : \"Input for add should have 2 parameters (excluding flags)\";"},{"lineNumber":142,"author":{"gitId":"fupernova"},"content":"        assert commandFlags.length \u003d\u003d 6 : \"COMMAND_ADD_LENGTH should be 6.\";"},{"lineNumber":143,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":144,"author":{"gitId":"fupernova"},"content":"        String moduleCode \u003d extractModuleCode(commandFlags);"},{"lineNumber":145,"author":{"gitId":"kewenlok"},"content":"        String moduleName \u003d commandParameters[1];"},{"lineNumber":146,"author":{"gitId":"fupernova"},"content":"        assert moduleName.trim().length() \u003e 0 : \"Name of module should not be empty.\";"},{"lineNumber":147,"author":{"gitId":"xseh"},"content":"        String moduleType \u003d extractModuleType(commandFlags);"},{"lineNumber":148,"author":{"gitId":"xseh"},"content":"        double moduleCredits \u003d extractModuleCredits(commandFlags);"},{"lineNumber":149,"author":{"gitId":"fupernova"},"content":"        LOGGER.log(Level.INFO, \"Valid parameters for add command.\");"},{"lineNumber":150,"author":{"gitId":"xseh"},"content":""},{"lineNumber":151,"author":{"gitId":"kewenlok"},"content":"        return new AddCommand(moduleCode, moduleName, moduleType, moduleCredits);"},{"lineNumber":152,"author":{"gitId":"xseh"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"xseh"},"content":""},{"lineNumber":154,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":155,"author":{"gitId":"xseh"},"content":"     * Extracts relevant parameters and creates new instance of DeleteCommand class to execute."},{"lineNumber":156,"author":{"gitId":"fupernova"},"content":"     * Format: \"Delete [module code]\""},{"lineNumber":157,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":158,"author":{"gitId":"xseh"},"content":"     * @param commandParameters parameters of user input, excluding command flags."},{"lineNumber":159,"author":{"gitId":"fupernova"},"content":"     * @return new instance of DeleteCommand class."},{"lineNumber":160,"author":{"gitId":"kewenlok"},"content":"     * @throws IncorrectParameterCountException if parameter count is not correct."},{"lineNumber":161,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":162,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":163,"author":{"gitId":"xseh"},"content":"    public static Command createDeleteCommand(String[] commandParameters, String[] commandFlags)"},{"lineNumber":164,"author":{"gitId":"kewenlok"},"content":"            throws IncorrectParameterCountException {"},{"lineNumber":165,"author":{"gitId":"xseh"},"content":"        boolean isInvalidPara \u003d (commandParameters.length !\u003d COMMAND_DELETE_LENGTH);"},{"lineNumber":166,"author":{"gitId":"xseh"},"content":"        boolean isInvalidFlag \u003d (commandFlags[0] !\u003d null);"},{"lineNumber":167,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":168,"author":{"gitId":"xseh"},"content":"        if (isInvalidPara || isInvalidFlag) {"},{"lineNumber":169,"author":{"gitId":"kewenlok"},"content":"            LOGGER.warning(\"Invalid number of parameters.\");"},{"lineNumber":170,"author":{"gitId":"kewenlok"},"content":"            throw new IncorrectParameterCountException();"},{"lineNumber":171,"author":{"gitId":"xseh"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":173,"author":{"gitId":"kewenlok"},"content":"        String moduleCode \u003d commandParameters[1];"},{"lineNumber":174,"author":{"gitId":"fupernova"},"content":"        LOGGER.log(Level.INFO, \"Valid parameters for delete command.\");"},{"lineNumber":175,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":176,"author":{"gitId":"kewenlok"},"content":"        return new DeleteCommand(moduleCode);"},{"lineNumber":177,"author":{"gitId":"xseh"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"xseh"},"content":""},{"lineNumber":179,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":180,"author":{"gitId":"xseh"},"content":"     * Extracts relevant parameters and creates new instance of ListCommand class to execute."},{"lineNumber":181,"author":{"gitId":"fupernova"},"content":"     * Format: \"List\""},{"lineNumber":182,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":183,"author":{"gitId":"xseh"},"content":"     * @param commandParameters parameters of user input, excluding command flags."},{"lineNumber":184,"author":{"gitId":"fupernova"},"content":"     * @return new instance of ListCommand class."},{"lineNumber":185,"author":{"gitId":"kewenlok"},"content":"     * @throws IncorrectParameterCountException if parameter count is not correct."},{"lineNumber":186,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":187,"author":{"gitId":"xseh"},"content":"    public static Command createListCommand(String[] commandParameters, String[] commandFlags)"},{"lineNumber":188,"author":{"gitId":"fupernova"},"content":"            throws IncorrectParameterCountException {"},{"lineNumber":189,"author":{"gitId":"xseh"},"content":"        boolean isInvalidPara \u003d (commandParameters.length !\u003d COMMAND_LIST_LENGTH);"},{"lineNumber":190,"author":{"gitId":"xseh"},"content":"        boolean isInvalidFlag \u003d (commandFlags[0] !\u003d null);"},{"lineNumber":191,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":192,"author":{"gitId":"xseh"},"content":"        if (isInvalidPara || isInvalidFlag) {"},{"lineNumber":193,"author":{"gitId":"kewenlok"},"content":"            LOGGER.warning(\"Invalid number of parameters.\");"},{"lineNumber":194,"author":{"gitId":"kewenlok"},"content":"            throw new IncorrectParameterCountException();"},{"lineNumber":195,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":196,"author":{"gitId":"fupernova"},"content":"        LOGGER.log(Level.INFO, \"Valid parameters for list command.\");"},{"lineNumber":197,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":198,"author":{"gitId":"fupernova"},"content":"        return new ListCommand();"},{"lineNumber":199,"author":{"gitId":"xseh"},"content":"    }"},{"lineNumber":200,"author":{"gitId":"xseh"},"content":""},{"lineNumber":201,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":202,"author":{"gitId":"fupernova"},"content":"     * Creates new instance of ProgressCommand class to execute."},{"lineNumber":203,"author":{"gitId":"fupernova"},"content":"     * Format: \"Progress\""},{"lineNumber":204,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":205,"author":{"gitId":"xseh"},"content":"     * @param commandParameters parameters of user input, excluding command flags."},{"lineNumber":206,"author":{"gitId":"fupernova"},"content":"     * @return new instance of ProgressCommand class."},{"lineNumber":207,"author":{"gitId":"kewenlok"},"content":"     * @throws IncorrectParameterCountException if parameter count is not correct."},{"lineNumber":208,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":209,"author":{"gitId":"xseh"},"content":"    public static Command createProgressCommand(String[] commandParameters, String[] commandFlags)"},{"lineNumber":210,"author":{"gitId":"kewenlok"},"content":"            throws IncorrectParameterCountException {"},{"lineNumber":211,"author":{"gitId":"xseh"},"content":"        boolean isInvalidPara \u003d (commandParameters.length !\u003d COMMAND_PROGRESS_LENGTH);"},{"lineNumber":212,"author":{"gitId":"xseh"},"content":"        boolean isInvalidFlag \u003d (commandFlags[0] !\u003d null);"},{"lineNumber":213,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":214,"author":{"gitId":"xseh"},"content":"        if (isInvalidPara || isInvalidFlag) {"},{"lineNumber":215,"author":{"gitId":"kewenlok"},"content":"            LOGGER.warning(\"Invalid number of parameters.\");"},{"lineNumber":216,"author":{"gitId":"kewenlok"},"content":"            throw new IncorrectParameterCountException();"},{"lineNumber":217,"author":{"gitId":"xseh"},"content":"        }"},{"lineNumber":218,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":219,"author":{"gitId":"kewenlok"},"content":"        LOGGER.log(Level.INFO, \"Valid parameters for progress command.\");"},{"lineNumber":220,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":221,"author":{"gitId":"fupernova"},"content":"        return new ProgressCommand();"},{"lineNumber":222,"author":{"gitId":"xseh"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"xseh"},"content":""},{"lineNumber":224,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":225,"author":{"gitId":"xseh"},"content":"     * Extracts relevant parameters and creates an instance of DoneCommand to"},{"lineNumber":226,"author":{"gitId":"xseh"},"content":"     * execute. Format: \"done [module code] -g [grade]\""},{"lineNumber":227,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":228,"author":{"gitId":"xseh"},"content":"     * @param commandParameters parameters of user input, excluding command flags."},{"lineNumber":229,"author":{"gitId":"xseh"},"content":"     * @param commandFlags      flags of commands from user input."},{"lineNumber":230,"author":{"gitId":"fupernova"},"content":"     * @return new instance of DoneCommand class."},{"lineNumber":231,"author":{"gitId":"kewenlok"},"content":"     * @throws IncorrectParameterCountException if parameter count is not correct."},{"lineNumber":232,"author":{"gitId":"xseh"},"content":"     * @throws InvalidCommandException          If the command input does not"},{"lineNumber":233,"author":{"gitId":"xseh"},"content":"     *                                          contain the right parameters."},{"lineNumber":234,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":235,"author":{"gitId":"xseh"},"content":"    public static Command createDoneCommand(String[] commandParameters, String[] commandFlags)"},{"lineNumber":236,"author":{"gitId":"xseh"},"content":"            throws IncorrectParameterCountException, InvalidCommandException {"},{"lineNumber":237,"author":{"gitId":"xseh"},"content":"        boolean isInvalidPara \u003d (commandParameters.length !\u003d COMMAND_DONE_PARAMETER_LENGTH);"},{"lineNumber":238,"author":{"gitId":"xseh"},"content":"        boolean isInvalidFlag \u003d (commandFlags.length !\u003d COMMAND_DONE_FLAG_LENGTH);"},{"lineNumber":239,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":240,"author":{"gitId":"xseh"},"content":"        if (isInvalidPara || isInvalidFlag) {"},{"lineNumber":241,"author":{"gitId":"kewenlok"},"content":"            LOGGER.warning(\"Invalid number of parameters.\");"},{"lineNumber":242,"author":{"gitId":"kewenlok"},"content":"            throw new IncorrectParameterCountException();"},{"lineNumber":243,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":244,"author":{"gitId":"fupernova"},"content":"        assert commandFlags.length \u003d\u003d 2 : \"COMMAND_DONE_LENGTH should be 2.\";"},{"lineNumber":245,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":246,"author":{"gitId":"xseh"},"content":"        String moduleGrade \u003d extractModuleGrade(commandFlags);"},{"lineNumber":247,"author":{"gitId":"fupernova"},"content":"        LOGGER.log(Level.INFO, \"Valid parameters for done command.\");"},{"lineNumber":248,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":249,"author":{"gitId":"fupernova"},"content":"        return new DoneCommand(commandParameters[1], moduleGrade);"},{"lineNumber":250,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":251,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":252,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":253,"author":{"gitId":"fupernova"},"content":"     * Creates new instance of ExitCommand class to execute."},{"lineNumber":254,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":255,"author":{"gitId":"xseh"},"content":"     * @param commandParameters parameters of user input, excluding command flags."},{"lineNumber":256,"author":{"gitId":"fupernova"},"content":"     * @return new instance of ExitCommand class."},{"lineNumber":257,"author":{"gitId":"kewenlok"},"content":"     * @throws IncorrectParameterCountException if parameter count is not correct."},{"lineNumber":258,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":259,"author":{"gitId":"xseh"},"content":"    public static Command createExitCommand(String[] commandParameters, String[] commandFlags)"},{"lineNumber":260,"author":{"gitId":"kewenlok"},"content":"            throws IncorrectParameterCountException {"},{"lineNumber":261,"author":{"gitId":"xseh"},"content":"        boolean isInvalidPara \u003d (commandParameters.length !\u003d COMMAND_EXIT_LENGTH);"},{"lineNumber":262,"author":{"gitId":"xseh"},"content":"        boolean isInvalidFlag \u003d (commandFlags[0] !\u003d null);"},{"lineNumber":263,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":264,"author":{"gitId":"xseh"},"content":"        if (isInvalidPara || isInvalidFlag) {"},{"lineNumber":265,"author":{"gitId":"kewenlok"},"content":"            LOGGER.warning(\"Invalid number of parameters.\");"},{"lineNumber":266,"author":{"gitId":"kewenlok"},"content":"            throw new IncorrectParameterCountException();"},{"lineNumber":267,"author":{"gitId":"xseh"},"content":"        }"},{"lineNumber":268,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":269,"author":{"gitId":"fupernova"},"content":"        LOGGER.log(Level.INFO, \"Valid parameters for exit command.\");"},{"lineNumber":270,"author":{"gitId":"fupernova"},"content":"        "},{"lineNumber":271,"author":{"gitId":"fupernova"},"content":"        return new ExitCommand();"},{"lineNumber":272,"author":{"gitId":"xseh"},"content":"    }"},{"lineNumber":273,"author":{"gitId":"xseh"},"content":""},{"lineNumber":274,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":275,"author":{"gitId":"xseh"},"content":"     * Extracts module code from user input. Method is called if user runs \"Add\" or"},{"lineNumber":276,"author":{"gitId":"xseh"},"content":"     * \"Delete\" command."},{"lineNumber":277,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":278,"author":{"gitId":"xseh"},"content":"     * @param commands parameters of user input, excluding command flags."},{"lineNumber":279,"author":{"gitId":"fupernova"},"content":"     * @return module code."},{"lineNumber":280,"author":{"gitId":"xseh"},"content":"     * @throws IncorrectParameterCountException if parameter count is not correct."},{"lineNumber":281,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":282,"author":{"gitId":"fupernova"},"content":"    public static String extractModuleCode(String[] commands) "},{"lineNumber":283,"author":{"gitId":"xseh"},"content":"            throws IncorrectParameterCountException {"},{"lineNumber":284,"author":{"gitId":"fupernova"},"content":"        assert commands.length \u003d\u003d COMMAND_ADD_FLAG_LENGTH : \"extractModuleCode should only be\" + \" called for add\";"},{"lineNumber":285,"author":{"gitId":"xseh"},"content":"        for (int i \u003d 0; i \u003c commands.length; i++) {"},{"lineNumber":286,"author":{"gitId":"fupernova"},"content":"            if (commands[i].equals(\"-c\")) {"},{"lineNumber":287,"author":{"gitId":"fupernova"},"content":"                assert commands[i + 1].length() \u003e 0 : \"Module code should not be empty\";"},{"lineNumber":288,"author":{"gitId":"kewenlok"},"content":"                return commands[i + 1].toUpperCase().trim();"},{"lineNumber":289,"author":{"gitId":"xseh"},"content":"            }"},{"lineNumber":290,"author":{"gitId":"xseh"},"content":"        }"},{"lineNumber":291,"author":{"gitId":"kewenlok"},"content":"        LOGGER.warning(\"Missing module code parameter.\");"},{"lineNumber":292,"author":{"gitId":"xseh"},"content":"        throw new IncorrectParameterCountException();"},{"lineNumber":293,"author":{"gitId":"xseh"},"content":"    }"},{"lineNumber":294,"author":{"gitId":"xseh"},"content":""},{"lineNumber":295,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":296,"author":{"gitId":"xseh"},"content":"     * Extracts module type from user input. Method is called if user runs \"Add\""},{"lineNumber":297,"author":{"gitId":"xseh"},"content":"     * command."},{"lineNumber":298,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":299,"author":{"gitId":"xseh"},"content":"     * @param commandFlags flags of commands from user input."},{"lineNumber":300,"author":{"gitId":"fupernova"},"content":"     * @return module type."},{"lineNumber":301,"author":{"gitId":"fupernova"},"content":"     * @throws InvalidModuleTypeException if command format is not recognised."},{"lineNumber":302,"author":{"gitId":"xseh"},"content":"     * @throws InvalidCommandException if -t flag is not found. "},{"lineNumber":303,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":304,"author":{"gitId":"xseh"},"content":"    public static String extractModuleType(String[] commandFlags) "},{"lineNumber":305,"author":{"gitId":"xseh"},"content":"            throws InvalidModuleTypeException, InvalidCommandException {"},{"lineNumber":306,"author":{"gitId":"fupernova"},"content":"        assert commandFlags.length \u003d\u003d COMMAND_ADD_FLAG_LENGTH : \"extractModuleType should only be\" + \" called for add\";"},{"lineNumber":307,"author":{"gitId":"xseh"},"content":"        for (int i \u003d 0; i \u003c commandFlags.length; i++) {"},{"lineNumber":308,"author":{"gitId":"xseh"},"content":"            if (commandFlags[i].equals(\"-t\")) {"},{"lineNumber":309,"author":{"gitId":"xseh"},"content":"                String type \u003d commandFlags[i + 1].toLowerCase().trim();"},{"lineNumber":310,"author":{"gitId":"fupernova"},"content":"                assert type.length() \u003e 0 : \"Module type should not be empty.\";"},{"lineNumber":311,"author":{"gitId":"xseh"},"content":"                switch (type) {"},{"lineNumber":312,"author":{"gitId":"xseh"},"content":"                case \"core\":"},{"lineNumber":313,"author":{"gitId":"xseh"},"content":"                case \"ue\":"},{"lineNumber":314,"author":{"gitId":"xseh"},"content":"                case \"math\":"},{"lineNumber":315,"author":{"gitId":"xseh"},"content":"                case \"ge\":"},{"lineNumber":316,"author":{"gitId":"xseh"},"content":"                    return type;"},{"lineNumber":317,"author":{"gitId":"xseh"},"content":"                default:"},{"lineNumber":318,"author":{"gitId":"xseh"},"content":"                    LOGGER.warning(\"Invalid module type detected.\");"},{"lineNumber":319,"author":{"gitId":"kewenlok"},"content":"                    throw new InvalidModuleTypeException();"},{"lineNumber":320,"author":{"gitId":"xseh"},"content":"                }"},{"lineNumber":321,"author":{"gitId":"fupernova"},"content":"            }"},{"lineNumber":322,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":323,"author":{"gitId":"kewenlok"},"content":"        LOGGER.warning(\"Missing module type parameter.\");"},{"lineNumber":324,"author":{"gitId":"xseh"},"content":"        throw new InvalidCommandException();"},{"lineNumber":325,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":326,"author":{"gitId":"xseh"},"content":""},{"lineNumber":327,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":328,"author":{"gitId":"fupernova"},"content":"     * Extracts module credits from user input."},{"lineNumber":329,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":330,"author":{"gitId":"xseh"},"content":"     * @param commandFlags flags of commands from user input."},{"lineNumber":331,"author":{"gitId":"fupernova"},"content":"     * @return number of modular credits."},{"lineNumber":332,"author":{"gitId":"fupernova"},"content":"     * @throws NumberFormatException   if number is not given as modular credits."},{"lineNumber":333,"author":{"gitId":"xseh"},"content":"     * @throws InvalidCommandException if -mc flag is not found."},{"lineNumber":334,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":335,"author":{"gitId":"xseh"},"content":"    public static double extractModuleCredits(String[] commandFlags)"},{"lineNumber":336,"author":{"gitId":"kewenlok"},"content":"            throws InputNotNumberException, InvalidCommandException {"},{"lineNumber":337,"author":{"gitId":"fupernova"},"content":"        assert commandFlags.length \u003d\u003d COMMAND_ADD_FLAG_LENGTH : \"extractModuleCredits should only be \""},{"lineNumber":338,"author":{"gitId":"fupernova"},"content":"                + \"called for add command.\";"},{"lineNumber":339,"author":{"gitId":"xseh"},"content":"        for (int i \u003d 0; i \u003c commandFlags.length; i++) {"},{"lineNumber":340,"author":{"gitId":"fupernova"},"content":"            if (commandFlags[i].equals(\"-mc\")) {"},{"lineNumber":341,"author":{"gitId":"fupernova"},"content":"                assert commandFlags[i + 1].trim().length() \u003e 0 : \"Modular credits field should not be empty.\";"},{"lineNumber":342,"author":{"gitId":"kewenlok"},"content":"                try {"},{"lineNumber":343,"author":{"gitId":"xseh"},"content":"                    return Double.parseDouble(commandFlags[i + 1]);"},{"lineNumber":344,"author":{"gitId":"kewenlok"},"content":"                } catch (NumberFormatException e) {"},{"lineNumber":345,"author":{"gitId":"kewenlok"},"content":"                    LOGGER.warning(\"Invalid module credits detected.\");"},{"lineNumber":346,"author":{"gitId":"kewenlok"},"content":"                    throw new InputNotNumberException(\"Modular credits : -mc\");"},{"lineNumber":347,"author":{"gitId":"kewenlok"},"content":"                }"},{"lineNumber":348,"author":{"gitId":"fupernova"},"content":"            }"},{"lineNumber":349,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":350,"author":{"gitId":"kewenlok"},"content":"        LOGGER.warning(\"Missing module credits parameter.\");"},{"lineNumber":351,"author":{"gitId":"xseh"},"content":"        throw new InvalidCommandException();"},{"lineNumber":352,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":353,"author":{"gitId":"xseh"},"content":""},{"lineNumber":354,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":355,"author":{"gitId":"kewenlok"},"content":"     * Extracts module grade from user input."},{"lineNumber":356,"author":{"gitId":"kewenlok"},"content":"     *"},{"lineNumber":357,"author":{"gitId":"xseh"},"content":"     * @param commandFlags flags of commands from user input."},{"lineNumber":358,"author":{"gitId":"kewenlok"},"content":"     * @return module grade."},{"lineNumber":359,"author":{"gitId":"xseh"},"content":"     * @throws InvalidCommandException if -g flag is not found."},{"lineNumber":360,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":361,"author":{"gitId":"xseh"},"content":"    public static String extractModuleGrade(String[] commandFlags) "},{"lineNumber":362,"author":{"gitId":"xseh"},"content":"            throws InvalidCommandException {"},{"lineNumber":363,"author":{"gitId":"fupernova"},"content":"        assert commandFlags.length \u003d\u003d COMMAND_DONE_FLAG_LENGTH : \"extractModuleGrade should only be \""},{"lineNumber":364,"author":{"gitId":"fupernova"},"content":"                + \"called for done command.\";"},{"lineNumber":365,"author":{"gitId":"xseh"},"content":"        for (int i \u003d 0; i \u003c commandFlags.length; i++) {"},{"lineNumber":366,"author":{"gitId":"xseh"},"content":"            if (commandFlags[i].equals(\"-g\")) {"},{"lineNumber":367,"author":{"gitId":"fupernova"},"content":"                assert commandFlags[i + 1].length() \u003e 0 : \"Grade should not be empty.\";"},{"lineNumber":368,"author":{"gitId":"xseh"},"content":"                return commandFlags[i + 1];"},{"lineNumber":369,"author":{"gitId":"kewenlok"},"content":"            }"},{"lineNumber":370,"author":{"gitId":"kewenlok"},"content":"        }"},{"lineNumber":371,"author":{"gitId":"kewenlok"},"content":"        LOGGER.warning(\"Missing module grade parameter.\");"},{"lineNumber":372,"author":{"gitId":"kewenlok"},"content":"        throw new InvalidCommandException();"},{"lineNumber":373,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":374,"author":{"gitId":"kewenlok"},"content":"}"}],"authorContributionMap":{"fupernova":126,"kewenlok":76,"xseh":171,"oscarlai1998":1}},{"path":"src/main/java/seedu/igraduate/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kewenlok"},"content":"package seedu.igraduate;"},{"lineNumber":2,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":3,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.exception.LoadModuleFailException;"},{"lineNumber":4,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.exception.SaveModuleFailException;"},{"lineNumber":5,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":6,"author":{"gitId":"xseh"},"content":"import seedu.igraduate.module.CoreModule;"},{"lineNumber":7,"author":{"gitId":"xseh"},"content":"import seedu.igraduate.module.ElectiveModule;"},{"lineNumber":8,"author":{"gitId":"xseh"},"content":"import seedu.igraduate.module.GeModule;"},{"lineNumber":9,"author":{"gitId":"xseh"},"content":"import seedu.igraduate.module.MathModule;"},{"lineNumber":10,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.module.Module;"},{"lineNumber":11,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":12,"author":{"gitId":"kewenlok"},"content":"import java.io.File;"},{"lineNumber":13,"author":{"gitId":"xseh"},"content":"import java.io.FileReader;"},{"lineNumber":14,"author":{"gitId":"xseh"},"content":"import java.io.FileWriter;"},{"lineNumber":15,"author":{"gitId":"xseh"},"content":"import java.io.IOException;"},{"lineNumber":16,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":17,"author":{"gitId":"xseh"},"content":"import java.util.ArrayList;"},{"lineNumber":18,"author":{"gitId":"xseh"},"content":"import java.lang.reflect.Type;"},{"lineNumber":19,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":20,"author":{"gitId":"xseh"},"content":"import com.google.gson.Gson;"},{"lineNumber":21,"author":{"gitId":"xseh"},"content":"import com.google.gson.GsonBuilder;"},{"lineNumber":22,"author":{"gitId":"xseh"},"content":"import com.google.gson.reflect.TypeToken;"},{"lineNumber":23,"author":{"gitId":"xseh"},"content":"import com.google.gson.typeadapters.RuntimeTypeAdapterFactory;"},{"lineNumber":24,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":"import java.util.logging.Level;"},{"lineNumber":26,"author":{"gitId":"xseh"},"content":"import java.util.logging.Logger;"},{"lineNumber":27,"author":{"gitId":"xseh"},"content":""},{"lineNumber":28,"author":{"gitId":"xseh"},"content":"/**"},{"lineNumber":29,"author":{"gitId":"xseh"},"content":" * Represents an instance of storage. "},{"lineNumber":30,"author":{"gitId":"xseh"},"content":" * A storage object corresponds to the saving and loading of file.  "},{"lineNumber":31,"author":{"gitId":"xseh"},"content":" */"},{"lineNumber":32,"author":{"gitId":"kewenlok"},"content":"public class Storage {"},{"lineNumber":33,"author":{"gitId":"xseh"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(Storage.class.getName());"},{"lineNumber":34,"author":{"gitId":"xseh"},"content":"    private File filePath;"},{"lineNumber":35,"author":{"gitId":"xseh"},"content":""},{"lineNumber":36,"author":{"gitId":"kewenlok"},"content":"    // Define the runtimeAdapterFactory for Gson to treat each module type as different object"},{"lineNumber":37,"author":{"gitId":"xseh"},"content":"    private RuntimeTypeAdapterFactory\u003cModule\u003e moduleAdaptorFactory \u003d RuntimeTypeAdapterFactory"},{"lineNumber":38,"author":{"gitId":"xseh"},"content":"            .of(Module.class, \"type\")"},{"lineNumber":39,"author":{"gitId":"xseh"},"content":"            .registerSubtype(CoreModule.class, \"core\")"},{"lineNumber":40,"author":{"gitId":"xseh"},"content":"            .registerSubtype(ElectiveModule.class, \"elective\")"},{"lineNumber":41,"author":{"gitId":"xseh"},"content":"            .registerSubtype(GeModule.class, \"ge\")"},{"lineNumber":42,"author":{"gitId":"xseh"},"content":"            .registerSubtype(MathModule.class, \"math\");"},{"lineNumber":43,"author":{"gitId":"xseh"},"content":""},{"lineNumber":44,"author":{"gitId":"xseh"},"content":"    public Storage(File filePath) {"},{"lineNumber":45,"author":{"gitId":"xseh"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":46,"author":{"gitId":"xseh"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"xseh"},"content":""},{"lineNumber":48,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"xseh"},"content":"     * Prepares to load modules from file. "},{"lineNumber":50,"author":{"gitId":"xseh"},"content":"     * "},{"lineNumber":51,"author":{"gitId":"xseh"},"content":"     * @return the parsed array list containing all saved modules. "},{"lineNumber":52,"author":{"gitId":"xseh"},"content":"     * @throws IOException if file cannot be read or processed. "},{"lineNumber":53,"author":{"gitId":"xseh"},"content":"     * @throws LoadModuleFailException if the module fails to save to file. "},{"lineNumber":54,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"kewenlok"},"content":"    public ArrayList\u003cModule\u003e loadModulesFromFile()"},{"lineNumber":56,"author":{"gitId":"kewenlok"},"content":"            throws LoadModuleFailException {"},{"lineNumber":57,"author":{"gitId":"xseh"},"content":"        if (!filePath.exists()) {"},{"lineNumber":58,"author":{"gitId":"kewenlok"},"content":"            throw new LoadModuleFailException();"},{"lineNumber":59,"author":{"gitId":"xseh"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":61,"author":{"gitId":"xseh"},"content":"        Type objectType \u003d new TypeToken\u003cArrayList\u003cModule\u003e\u003e() {}.getType();"},{"lineNumber":62,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":63,"author":{"gitId":"kewenlok"},"content":"        try {"},{"lineNumber":64,"author":{"gitId":"kewenlok"},"content":"            ArrayList\u003cModule\u003e modules \u003d loadFromJson(objectType, filePath);"},{"lineNumber":65,"author":{"gitId":"kewenlok"},"content":"            LOGGER.log(Level.INFO, \"Module data loaded from disk successfully.\");"},{"lineNumber":66,"author":{"gitId":"kewenlok"},"content":"            return modules;"},{"lineNumber":67,"author":{"gitId":"xseh"},"content":"        } catch (IOException exception) {"},{"lineNumber":68,"author":{"gitId":"xseh"},"content":"            LOGGER.warning(\"Failed to load module.\");"},{"lineNumber":69,"author":{"gitId":"kewenlok"},"content":"            throw new LoadModuleFailException();"},{"lineNumber":70,"author":{"gitId":"kewenlok"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":73,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"xseh"},"content":"     * Loads the stored modules from json file.  "},{"lineNumber":75,"author":{"gitId":"xseh"},"content":"     * "},{"lineNumber":76,"author":{"gitId":"xseh"},"content":"     * @param type module type. "},{"lineNumber":77,"author":{"gitId":"xseh"},"content":"     * @param jsonFile file opened for reading. "},{"lineNumber":78,"author":{"gitId":"xseh"},"content":"     * @return parsed array list containing saved modules. "},{"lineNumber":79,"author":{"gitId":"xseh"},"content":"     * @throws IOException if the file failed to be read. "},{"lineNumber":80,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"xseh"},"content":"    public ArrayList\u003cModule\u003e loadFromJson(Type type, File jsonFile) "},{"lineNumber":82,"author":{"gitId":"kewenlok"},"content":"            throws IOException {"},{"lineNumber":83,"author":{"gitId":"xseh"},"content":"        Gson gson \u003d new GsonBuilder().registerTypeAdapterFactory(moduleAdaptorFactory).create();"},{"lineNumber":84,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":85,"author":{"gitId":"xseh"},"content":"        FileReader fileReader \u003d new FileReader(jsonFile);"},{"lineNumber":86,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":87,"author":{"gitId":"xseh"},"content":"        return gson.fromJson(fileReader, type);"},{"lineNumber":88,"author":{"gitId":"xseh"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"xseh"},"content":""},{"lineNumber":90,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"xseh"},"content":"     * Prepares to save the array list into a json format. "},{"lineNumber":92,"author":{"gitId":"xseh"},"content":"     * "},{"lineNumber":93,"author":{"gitId":"xseh"},"content":"     * @param modules array list of all modules. "},{"lineNumber":94,"author":{"gitId":"xseh"},"content":"     * @throws SaveModuleFailException if the module fails to save to file. "},{"lineNumber":95,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"kewenlok"},"content":"    public void saveModulesToFile(ModuleList modules) throws SaveModuleFailException {"},{"lineNumber":97,"author":{"gitId":"xseh"},"content":"        // Creates parent directories if file does not exist"},{"lineNumber":98,"author":{"gitId":"xseh"},"content":"        if (!filePath.exists()) {"},{"lineNumber":99,"author":{"gitId":"xseh"},"content":"            filePath.getParentFile().mkdirs();"},{"lineNumber":100,"author":{"gitId":"xseh"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"kewenlok"},"content":"        try {"},{"lineNumber":102,"author":{"gitId":"xseh"},"content":"            saveToJson(filePath, modules.getModules());"},{"lineNumber":103,"author":{"gitId":"kewenlok"},"content":"            LOGGER.log(Level.INFO, \"Module data saved to disk successfully.\");"},{"lineNumber":104,"author":{"gitId":"xseh"},"content":"        } catch (Exception exception) {"},{"lineNumber":105,"author":{"gitId":"xseh"},"content":"            LOGGER.warning(\"Failed to save module.\");"},{"lineNumber":106,"author":{"gitId":"kewenlok"},"content":"            throw new SaveModuleFailException();"},{"lineNumber":107,"author":{"gitId":"kewenlok"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"xseh"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":110,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"xseh"},"content":"     * Saves the array list to json file. "},{"lineNumber":112,"author":{"gitId":"xseh"},"content":"     * "},{"lineNumber":113,"author":{"gitId":"xseh"},"content":"     * @param jsonFile file opened for writing. "},{"lineNumber":114,"author":{"gitId":"xseh"},"content":"     * @param modules array list of all the modules. "},{"lineNumber":115,"author":{"gitId":"xseh"},"content":"     * @throws IOException if the file failed to be written. "},{"lineNumber":116,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"kewenlok"},"content":"    public void saveToJson(File jsonFile, ArrayList\u003cModule\u003e modules) throws IOException {"},{"lineNumber":118,"author":{"gitId":"xseh"},"content":"        Gson gson \u003d new GsonBuilder().setPrettyPrinting()"},{"lineNumber":119,"author":{"gitId":"xseh"},"content":"                .registerTypeAdapterFactory(moduleAdaptorFactory).create();"},{"lineNumber":120,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":121,"author":{"gitId":"kewenlok"},"content":"        int arraySize \u003d modules.size();"},{"lineNumber":122,"author":{"gitId":"xseh"},"content":"        int lastIndex \u003d arraySize - 1;"},{"lineNumber":123,"author":{"gitId":"xseh"},"content":""},{"lineNumber":124,"author":{"gitId":"xseh"},"content":"        FileWriter fileWriter \u003d new FileWriter(jsonFile);"},{"lineNumber":125,"author":{"gitId":"xseh"},"content":"        fileWriter.write(\"[\\n\");"},{"lineNumber":126,"author":{"gitId":"xseh"},"content":"        for (int i \u003d 0; i \u003c arraySize; i++) {"},{"lineNumber":127,"author":{"gitId":"kewenlok"},"content":"            String json \u003d gson.toJson(modules.get(i), Module.class);"},{"lineNumber":128,"author":{"gitId":"xseh"},"content":"            fileWriter.write(json);"},{"lineNumber":129,"author":{"gitId":"xseh"},"content":"            if (i !\u003d lastIndex) {"},{"lineNumber":130,"author":{"gitId":"xseh"},"content":"                fileWriter.write(\", \\n\");"},{"lineNumber":131,"author":{"gitId":"xseh"},"content":"            }"},{"lineNumber":132,"author":{"gitId":"xseh"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"xseh"},"content":"        fileWriter.write(\"\\n]\");"},{"lineNumber":134,"author":{"gitId":"xseh"},"content":"        fileWriter.flush();"},{"lineNumber":135,"author":{"gitId":"xseh"},"content":"        fileWriter.close();"},{"lineNumber":136,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"kewenlok"},"content":"}"}],"authorContributionMap":{"fupernova":2,"kewenlok":40,"xseh":95}},{"path":"src/main/java/seedu/igraduate/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kewenlok"},"content":"package seedu.igraduate;"},{"lineNumber":2,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"import seedu.igraduate.module.Module;"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":8,"author":{"gitId":"kewenlok"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"xseh"},"content":"    // Welcome message"},{"lineNumber":10,"author":{"gitId":"kewenlok"},"content":"    private static final String LOGO \u003d \" _  ____               _             _\\n\""},{"lineNumber":11,"author":{"gitId":"kewenlok"},"content":"            + \"(_)/ ___|_ __ __ _  __| |_   _  __ _| |_ ___ \\n\""},{"lineNumber":12,"author":{"gitId":"kewenlok"},"content":"            + \"| | |  _| \u0027__/ _` |/ _` | | | |/ _` | __/ _ \\\\\\n\""},{"lineNumber":13,"author":{"gitId":"kewenlok"},"content":"            + \"| | |_| | | | (_| | (_| | |_| | (_| | ||  __/\\n\""},{"lineNumber":14,"author":{"gitId":"kewenlok"},"content":"            + \"|_|\\\\____|_|  \\\\__,_|\\\\__,_|\\\\__,_|\\\\__,_|\\\\__\\\\___|\";"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":"    private static final String GREETING_MESSAGE \u003d \"iGraduate starting up...\\nWelcome to iGraduate, \""},{"lineNumber":16,"author":{"gitId":"fupernova"},"content":"            + \"your one stop study planning service!\\nWhat would you like to do today?\";"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":"    private static final String GOODBYE_MESSAGE \u003d \"See you soon! Happy studying!\";"},{"lineNumber":18,"author":{"gitId":"kewenlok"},"content":"    private static final String BORDER_LINE \u003d \"------------------------------------------------------------\""},{"lineNumber":19,"author":{"gitId":"kewenlok"},"content":"            + \"--------------------------\";"},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":"    // Messages for successful execution"},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":"    private static final String MODULE_ADDED_MESSAGE \u003d \"Added %s %s to the list. (%sMCs)\";"},{"lineNumber":23,"author":{"gitId":"oscarlai1998"},"content":"    private static final String MODULE_DELETED_MESSAGE \u003d \"\\\"%s\\\" module %s has been deleted.\";"},{"lineNumber":24,"author":{"gitId":"fupernova"},"content":"    private static final String MODULES_TAKEN_MESSAGE \u003d \"Modules you have taken:\\n\";"},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":"    private static final String MODULES_LEFT_MESSAGE \u003d \"Modules you can take:\\n\";"},{"lineNumber":26,"author":{"gitId":"oscarlai1998"},"content":"    private static final String EMPTY_LIST_MESSAGE \u003d \"List is empty. Add a module.\";"},{"lineNumber":27,"author":{"gitId":"oscarlai1998"},"content":"    private static final String PROGRESS_MESSAGE \u003d \"%dMCs/160MCs Completed\";"},{"lineNumber":28,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":29,"author":{"gitId":"fupernova"},"content":"    private static final Scanner SCANNER \u003d new Scanner(System.in);"},{"lineNumber":30,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":31,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"xseh"},"content":"     * Gets command from user input. "},{"lineNumber":33,"author":{"gitId":"xseh"},"content":"     * "},{"lineNumber":34,"author":{"gitId":"xseh"},"content":"     * @return user input. "},{"lineNumber":35,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"fupernova"},"content":"    public String getCommand() {"},{"lineNumber":37,"author":{"gitId":"xseh"},"content":"        return SCANNER.nextLine();"},{"lineNumber":38,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":40,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"xseh"},"content":"     * Prints the welcome message. "},{"lineNumber":42,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"fupernova"},"content":"    public void printWelcomeMessage() {"},{"lineNumber":44,"author":{"gitId":"kewenlok"},"content":"        System.out.println(LOGO);"},{"lineNumber":45,"author":{"gitId":"fupernova"},"content":"        System.out.println(GREETING_MESSAGE);"},{"lineNumber":46,"author":{"gitId":"fupernova"},"content":"        printBorderLine();"},{"lineNumber":47,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":49,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"xseh"},"content":"     * Prints the exit message. "},{"lineNumber":51,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"fupernova"},"content":"    public void printExitMessage() {"},{"lineNumber":53,"author":{"gitId":"fupernova"},"content":"        System.out.println(GOODBYE_MESSAGE);"},{"lineNumber":54,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":56,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"xseh"},"content":"     * Prints the message border. "},{"lineNumber":58,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"fupernova"},"content":"    public void printBorderLine() {"},{"lineNumber":60,"author":{"gitId":"fupernova"},"content":"        System.out.println(BORDER_LINE);"},{"lineNumber":61,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":63,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"xseh"},"content":"     * Prints all the modules in array list. "},{"lineNumber":65,"author":{"gitId":"xseh"},"content":"     * "},{"lineNumber":66,"author":{"gitId":"xseh"},"content":"     * @param modules array list containing the modules. "},{"lineNumber":67,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"fupernova"},"content":"    public void printEntireList(ArrayList\u003cModule\u003e modules) {"},{"lineNumber":69,"author":{"gitId":"oscarlai1998"},"content":"        System.out.println(\"Module List: \");"},{"lineNumber":70,"author":{"gitId":"fupernova"},"content":"        for (int i \u003d 0; i \u003c modules.size(); i++) {"},{"lineNumber":71,"author":{"gitId":"kewenlok"},"content":"            System.out.print(String.format(\"%-4d: \", i + 1));"},{"lineNumber":72,"author":{"gitId":"fupernova"},"content":"            printModuleDetails(modules.get(i));"},{"lineNumber":73,"author":{"gitId":"fupernova"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":76,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"xseh"},"content":"     * Prints the module information. "},{"lineNumber":78,"author":{"gitId":"xseh"},"content":"     * "},{"lineNumber":79,"author":{"gitId":"xseh"},"content":"     * @param module array list containing the modules. "},{"lineNumber":80,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"fupernova"},"content":"    public void printModuleDetails(Module module) {"},{"lineNumber":82,"author":{"gitId":"oscarlai1998"},"content":"        String moduleDetails \u003d module.toString();"},{"lineNumber":83,"author":{"gitId":"oscarlai1998"},"content":"        System.out.println(moduleDetails);"},{"lineNumber":84,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":86,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"xseh"},"content":"     * Displays success message after adding new module. "},{"lineNumber":88,"author":{"gitId":"xseh"},"content":"     * "},{"lineNumber":89,"author":{"gitId":"xseh"},"content":"     * @param module array list containing the modules. "},{"lineNumber":90,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"kewenlok"},"content":"    public void printAddedModuleSuccess(Module module) {"},{"lineNumber":92,"author":{"gitId":"fupernova"},"content":"        System.out.println(String.format(MODULE_ADDED_MESSAGE, module.getCode(), module.getName(), module.getCredit()));"},{"lineNumber":93,"author":{"gitId":"kewenlok"},"content":"        System.out.println(module);"},{"lineNumber":94,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":96,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"xseh"},"content":"     * Displays success message after deleting the module. "},{"lineNumber":98,"author":{"gitId":"xseh"},"content":"     * "},{"lineNumber":99,"author":{"gitId":"xseh"},"content":"     * @param name module name. "},{"lineNumber":100,"author":{"gitId":"xseh"},"content":"     * @param type module type."},{"lineNumber":101,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"fupernova"},"content":"    public void printDeletedModuleSuccess(String name, String type) {"},{"lineNumber":103,"author":{"gitId":"oscarlai1998"},"content":"        System.out.println(String.format(MODULE_DELETED_MESSAGE, type, name));"},{"lineNumber":104,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":106,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"xseh"},"content":"     * Displays success message after marking a module as completed. "},{"lineNumber":108,"author":{"gitId":"xseh"},"content":"     * "},{"lineNumber":109,"author":{"gitId":"xseh"},"content":"     * @param module module marked as completed. "},{"lineNumber":110,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"kewenlok"},"content":"    public void printMarkAsTakenMessage(Module module) {"},{"lineNumber":112,"author":{"gitId":"kewenlok"},"content":"        System.out.println(\"Nice! I\u0027ve marked this module as done:\");"},{"lineNumber":113,"author":{"gitId":"kewenlok"},"content":"        System.out.println(\"  \" + module);"},{"lineNumber":114,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":116,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"fupernova"},"content":"     * Lists all modules (both taken and not taken)."},{"lineNumber":118,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"fupernova"},"content":"    public void printAllModules() {"},{"lineNumber":120,"author":{"gitId":"fupernova"},"content":"        printModulesTakenMessage();"},{"lineNumber":121,"author":{"gitId":"fupernova"},"content":"        printModulesRemainingMessage();"},{"lineNumber":122,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":124,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":125,"author":{"gitId":"xseh"},"content":"     * Lists all modules that have been taken. "},{"lineNumber":126,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"fupernova"},"content":"    public void printModulesTakenMessage() {"},{"lineNumber":128,"author":{"gitId":"fupernova"},"content":"        System.out.println(MODULES_TAKEN_MESSAGE);"},{"lineNumber":129,"author":{"gitId":"fupernova"},"content":"        System.out.println(); // Print module names"},{"lineNumber":130,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":132,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":133,"author":{"gitId":"xseh"},"content":"     * Lists all modules that have not been taken. "},{"lineNumber":134,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":135,"author":{"gitId":"fupernova"},"content":"    public void printModulesRemainingMessage() {"},{"lineNumber":136,"author":{"gitId":"fupernova"},"content":"        System.out.println(MODULES_LEFT_MESSAGE);"},{"lineNumber":137,"author":{"gitId":"fupernova"},"content":"        System.out.println(); // Print module names"},{"lineNumber":138,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":140,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":141,"author":{"gitId":"xseh"},"content":"     * Displays message if module list is empty. "},{"lineNumber":142,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":143,"author":{"gitId":"oscarlai1998"},"content":"    public void printListEmptyMessage() {"},{"lineNumber":144,"author":{"gitId":"oscarlai1998"},"content":"        System.out.println(EMPTY_LIST_MESSAGE);"},{"lineNumber":145,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":147,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":148,"author":{"gitId":"xseh"},"content":"     * Displays the progress bar for university graduation completion. "},{"lineNumber":149,"author":{"gitId":"xseh"},"content":"     * "},{"lineNumber":150,"author":{"gitId":"xseh"},"content":"     * @param completedMCs total number of credits completed. "},{"lineNumber":151,"author":{"gitId":"xseh"},"content":"     * @param percentage percentage of academic career completed in string. "},{"lineNumber":152,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":153,"author":{"gitId":"kewenlok"},"content":"    public void printProgressBar(double completedMCs, String percentage) {"},{"lineNumber":154,"author":{"gitId":"oscarlai1998"},"content":"        System.out.println(\"Progress:\");"},{"lineNumber":155,"author":{"gitId":"kewenlok"},"content":"        int completedMCsRatio \u003d (int)completedMCs / 10;"},{"lineNumber":156,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":157,"author":{"gitId":"kewenlok"},"content":"        for (int i \u003d 0; i \u003c 11; i++) {"},{"lineNumber":158,"author":{"gitId":"kewenlok"},"content":"            if (i \u003c completedMCsRatio) {"},{"lineNumber":159,"author":{"gitId":"kewenlok"},"content":"                System.out.print(\"█\");"},{"lineNumber":160,"author":{"gitId":"kewenlok"},"content":"            } else if (i \u003e\u003d completedMCsRatio) {"},{"lineNumber":161,"author":{"gitId":"kewenlok"},"content":"                System.out.print(\"░\");"},{"lineNumber":162,"author":{"gitId":"oscarlai1998"},"content":"            }"},{"lineNumber":163,"author":{"gitId":"oscarlai1998"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"kewenlok"},"content":"        System.out.println(\" \" + percentage + \"%\");"},{"lineNumber":165,"author":{"gitId":"oscarlai1998"},"content":"        System.out.println(String.format(PROGRESS_MESSAGE, Math.round(completedMCs)));"},{"lineNumber":166,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":168,"author":{"gitId":"fupernova"},"content":"    /**"},{"lineNumber":169,"author":{"gitId":"kewenlok"},"content":"     * Prints out underlying error message for exception."},{"lineNumber":170,"author":{"gitId":"fupernova"},"content":"     *"},{"lineNumber":171,"author":{"gitId":"kewenlok"},"content":"     * @param exception Exception object caught."},{"lineNumber":172,"author":{"gitId":"fupernova"},"content":"     */"},{"lineNumber":173,"author":{"gitId":"kewenlok"},"content":"    public void printErrorMessage(Exception exception) {"},{"lineNumber":174,"author":{"gitId":"kewenlok"},"content":"        System.out.println(exception.getMessage());"},{"lineNumber":175,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"kewenlok"},"content":"}"}],"authorContributionMap":{"fupernova":66,"kewenlok":38,"xseh":57,"oscarlai1998":15}},{"path":"src/main/java/seedu/igraduate/command/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kewenlok"},"content":"package seedu.igraduate.command;"},{"lineNumber":2,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":3,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.ModuleList;"},{"lineNumber":4,"author":{"gitId":"LJ-37"},"content":"import seedu.igraduate.Storage;"},{"lineNumber":5,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.Ui;"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"import seedu.igraduate.exception.ExistingModuleException;"},{"lineNumber":8,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.exception.InvalidModuleTypeException;"},{"lineNumber":9,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.exception.SaveModuleFailException;"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":11,"author":{"gitId":"LJ-37"},"content":"import seedu.igraduate.module.CoreModule;"},{"lineNumber":12,"author":{"gitId":"LJ-37"},"content":"import seedu.igraduate.module.ElectiveModule;"},{"lineNumber":13,"author":{"gitId":"LJ-37"},"content":"import seedu.igraduate.module.GeModule;"},{"lineNumber":14,"author":{"gitId":"LJ-37"},"content":"import seedu.igraduate.module.MathModule;"},{"lineNumber":15,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.module.Module;"},{"lineNumber":16,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":17,"author":{"gitId":"LJ-37"},"content":"import java.util.ArrayList;"},{"lineNumber":18,"author":{"gitId":"LJ-37"},"content":"import java.util.logging.Level;"},{"lineNumber":19,"author":{"gitId":"LJ-37"},"content":"import java.util.logging.Logger;"},{"lineNumber":20,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":21,"author":{"gitId":"kewenlok"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"kewenlok"},"content":" * Handles add command."},{"lineNumber":23,"author":{"gitId":"kewenlok"},"content":" */"},{"lineNumber":24,"author":{"gitId":"kewenlok"},"content":"public class AddCommand extends Command {"},{"lineNumber":25,"author":{"gitId":"fupernova"},"content":"    protected String moduleCode;"},{"lineNumber":26,"author":{"gitId":"kewenlok"},"content":"    protected String moduleName;"},{"lineNumber":27,"author":{"gitId":"fupernova"},"content":"    protected String moduleType;"},{"lineNumber":28,"author":{"gitId":"LJ-37"},"content":"    protected Double moduleCredits;"},{"lineNumber":29,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":30,"author":{"gitId":"LJ-37"},"content":"    private static final String CORE \u003d \"core\";"},{"lineNumber":31,"author":{"gitId":"LJ-37"},"content":"    private static final String UE \u003d \"ue\";"},{"lineNumber":32,"author":{"gitId":"LJ-37"},"content":"    private static final String MATH \u003d \"math\";"},{"lineNumber":33,"author":{"gitId":"LJ-37"},"content":"    private static final String GE \u003d \"ge\";"},{"lineNumber":34,"author":{"gitId":"LJ-37"},"content":"    private static final String DEFAULT_STATUS \u003d \"not taken\";"},{"lineNumber":35,"author":{"gitId":"LJ-37"},"content":"    private static final String DEFAULT_GRADE \u003d \"nil\";"},{"lineNumber":36,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":37,"author":{"gitId":"LJ-37"},"content":"    private ArrayList\u003cString\u003e preRequisites;"},{"lineNumber":38,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":39,"author":{"gitId":"fupernova"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(AddCommand.class.getName());"},{"lineNumber":40,"author":{"gitId":"LJ-37"},"content":""},{"lineNumber":41,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"xseh"},"content":"     * Child class of the command class that contains the module name, code, type and credits to be added. "},{"lineNumber":43,"author":{"gitId":"xseh"},"content":"     * "},{"lineNumber":44,"author":{"gitId":"xseh"},"content":"     * @param moduleCode module code. "},{"lineNumber":45,"author":{"gitId":"xseh"},"content":"     * @param moduleName module name, customised according to user input. "},{"lineNumber":46,"author":{"gitId":"xseh"},"content":"     * @param moduleType module type (core, ue, ge or math). "},{"lineNumber":47,"author":{"gitId":"xseh"},"content":"     * @param moduleCredits number of credits for the module. "},{"lineNumber":48,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"kewenlok"},"content":"    public AddCommand(String moduleCode, String moduleName, String moduleType, double moduleCredits) {"},{"lineNumber":50,"author":{"gitId":"fupernova"},"content":"        this.moduleCode \u003d moduleCode;"},{"lineNumber":51,"author":{"gitId":"kewenlok"},"content":"        this.moduleName \u003d moduleName;"},{"lineNumber":52,"author":{"gitId":"fupernova"},"content":"        this.moduleType \u003d moduleType;"},{"lineNumber":53,"author":{"gitId":"fupernova"},"content":"        this.moduleCredits \u003d moduleCredits;"},{"lineNumber":54,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":56,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"kewenlok"},"content":"     * Retrieves and return module code for the current module."},{"lineNumber":58,"author":{"gitId":"kewenlok"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"kewenlok"},"content":"     * @return module code."},{"lineNumber":60,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"kewenlok"},"content":"    private String getModuleCode() {"},{"lineNumber":62,"author":{"gitId":"kewenlok"},"content":"        return moduleCode;"},{"lineNumber":63,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":65,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"xseh"},"content":"     * Executes the addCommand function. "},{"lineNumber":67,"author":{"gitId":"kewenlok"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"kewenlok"},"content":"     * @param moduleList Module list consisting of all modules."},{"lineNumber":69,"author":{"gitId":"kewenlok"},"content":"     * @param ui User interface for printing result."},{"lineNumber":70,"author":{"gitId":"kewenlok"},"content":"     * @param storage Storage for storing module list data."},{"lineNumber":71,"author":{"gitId":"kewenlok"},"content":"     * @throws SaveModuleFailException If storage fail to save module data to disk."},{"lineNumber":72,"author":{"gitId":"kewenlok"},"content":"     * @throws InvalidModuleTypeException If the module type is invalid."},{"lineNumber":73,"author":{"gitId":"kewenlok"},"content":"     * @throws ExistingModuleException If the module to be added already exists in module list."},{"lineNumber":74,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"kewenlok"},"content":"    @Override"},{"lineNumber":76,"author":{"gitId":"kewenlok"},"content":"    public void execute(ModuleList moduleList, Ui ui, Storage storage)"},{"lineNumber":77,"author":{"gitId":"kewenlok"},"content":"            throws SaveModuleFailException, InvalidModuleTypeException, ExistingModuleException {"},{"lineNumber":78,"author":{"gitId":"kewenlok"},"content":"        LOGGER.log(Level.INFO, \"Executing add command...\");"},{"lineNumber":79,"author":{"gitId":"kewenlok"},"content":"        try {"},{"lineNumber":80,"author":{"gitId":"kewenlok"},"content":"            Module module \u003d createModuleByType();"},{"lineNumber":81,"author":{"gitId":"LJ-37"},"content":"            assert module !\u003d null : \"Module should not be empty.\";"},{"lineNumber":82,"author":{"gitId":"kewenlok"},"content":"            moduleList.add(module);"},{"lineNumber":83,"author":{"gitId":"kewenlok"},"content":"            storage.saveModulesToFile(moduleList);"},{"lineNumber":84,"author":{"gitId":"kewenlok"},"content":"            ui.printAddedModuleSuccess(module);"},{"lineNumber":85,"author":{"gitId":"kewenlok"},"content":"            LOGGER.log(Level.INFO, String.format(\"Successfully added %s module to module list.\","},{"lineNumber":86,"author":{"gitId":"kewenlok"},"content":"                    getModuleCode()));"},{"lineNumber":87,"author":{"gitId":"kewenlok"},"content":"        } catch (InvalidModuleTypeException e) {"},{"lineNumber":88,"author":{"gitId":"kewenlok"},"content":"            LOGGER.log(Level.WARNING, \"Failed to add invalid module type.\", e);"},{"lineNumber":89,"author":{"gitId":"kewenlok"},"content":"            throw new InvalidModuleTypeException();"},{"lineNumber":90,"author":{"gitId":"fupernova"},"content":"        } catch (ExistingModuleException e) {"},{"lineNumber":91,"author":{"gitId":"kewenlok"},"content":"            LOGGER.log(Level.WARNING, \"Failed to add duplicated module to module list.\", e);"},{"lineNumber":92,"author":{"gitId":"fupernova"},"content":"            throw new ExistingModuleException();"},{"lineNumber":93,"author":{"gitId":"kewenlok"},"content":"        } finally {"},{"lineNumber":94,"author":{"gitId":"kewenlok"},"content":"            LOGGER.log(Level.INFO, \"End of add command execution.\");"},{"lineNumber":95,"author":{"gitId":"kewenlok"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":98,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"xseh"},"content":"     * Create a module based on its category."},{"lineNumber":100,"author":{"gitId":"xseh"},"content":"     * Types: Core, UE, Math, GE."},{"lineNumber":101,"author":{"gitId":"xseh"},"content":"     *"},{"lineNumber":102,"author":{"gitId":"xseh"},"content":"     * @return the created module."},{"lineNumber":103,"author":{"gitId":"kewenlok"},"content":"     * @throws InvalidModuleTypeException if module type does not fit any categories."},{"lineNumber":104,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"kewenlok"},"content":"    public Module createModuleByType() throws InvalidModuleTypeException {"},{"lineNumber":106,"author":{"gitId":"LJ-37"},"content":"        LOGGER.log(Level.INFO, \"Creating module...\");"},{"lineNumber":107,"author":{"gitId":"kewenlok"},"content":"        Module module;"},{"lineNumber":108,"author":{"gitId":"LJ-37"},"content":"        assert moduleType !\u003d null : \"Module type should not be empty.\";"},{"lineNumber":109,"author":{"gitId":"kewenlok"},"content":"        switch (moduleType) {"},{"lineNumber":110,"author":{"gitId":"LJ-37"},"content":"        case CORE:"},{"lineNumber":111,"author":{"gitId":"kewenlok"},"content":"            module \u003d new CoreModule(moduleCode, moduleName, moduleCredits,"},{"lineNumber":112,"author":{"gitId":"LJ-37"},"content":"                    DEFAULT_STATUS, DEFAULT_GRADE, preRequisites);"},{"lineNumber":113,"author":{"gitId":"LJ-37"},"content":"            break;"},{"lineNumber":114,"author":{"gitId":"LJ-37"},"content":"        case UE:"},{"lineNumber":115,"author":{"gitId":"kewenlok"},"content":"            module \u003d new ElectiveModule(moduleCode, moduleName, moduleCredits,"},{"lineNumber":116,"author":{"gitId":"LJ-37"},"content":"                    DEFAULT_STATUS, DEFAULT_GRADE, preRequisites);"},{"lineNumber":117,"author":{"gitId":"LJ-37"},"content":"            break;"},{"lineNumber":118,"author":{"gitId":"LJ-37"},"content":"        case MATH:"},{"lineNumber":119,"author":{"gitId":"kewenlok"},"content":"            module \u003d new MathModule(moduleCode, moduleName, moduleCredits,"},{"lineNumber":120,"author":{"gitId":"LJ-37"},"content":"                    DEFAULT_STATUS, DEFAULT_GRADE, preRequisites);"},{"lineNumber":121,"author":{"gitId":"LJ-37"},"content":"            break;"},{"lineNumber":122,"author":{"gitId":"LJ-37"},"content":"        case GE:"},{"lineNumber":123,"author":{"gitId":"kewenlok"},"content":"            module \u003d new GeModule(moduleCode, moduleName, moduleCredits,"},{"lineNumber":124,"author":{"gitId":"LJ-37"},"content":"                    DEFAULT_STATUS, DEFAULT_GRADE, preRequisites);"},{"lineNumber":125,"author":{"gitId":"LJ-37"},"content":"            break;"},{"lineNumber":126,"author":{"gitId":"LJ-37"},"content":"        default:"},{"lineNumber":127,"author":{"gitId":"LJ-37"},"content":"            LOGGER.log(Level.INFO, \"Failed to create invalid module type.\");"},{"lineNumber":128,"author":{"gitId":"LJ-37"},"content":"            LOGGER.log(Level.INFO, \"End of module creation.\");"},{"lineNumber":129,"author":{"gitId":"kewenlok"},"content":"            throw new InvalidModuleTypeException();"},{"lineNumber":130,"author":{"gitId":"LJ-37"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"LJ-37"},"content":"        LOGGER.log(Level.INFO, \"End of module creation.\");"},{"lineNumber":132,"author":{"gitId":"LJ-37"},"content":"        assert module !\u003d null : \"Module should not be empty.\";"},{"lineNumber":133,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":134,"author":{"gitId":"kewenlok"},"content":"        return module;"},{"lineNumber":135,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":137,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":138,"author":{"gitId":"kewenlok"},"content":"     * {@inheritDoc}"},{"lineNumber":139,"author":{"gitId":"kewenlok"},"content":"     *"},{"lineNumber":140,"author":{"gitId":"kewenlok"},"content":"     * @return false"},{"lineNumber":141,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":142,"author":{"gitId":"kewenlok"},"content":"    @Override"},{"lineNumber":143,"author":{"gitId":"kewenlok"},"content":"    public boolean isExit() {"},{"lineNumber":144,"author":{"gitId":"kewenlok"},"content":"        return false;"},{"lineNumber":145,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"kewenlok"},"content":"}"}],"authorContributionMap":{"LJ-37":41,"fupernova":15,"kewenlok":75,"xseh":15}},{"path":"src/main/java/seedu/igraduate/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kewenlok"},"content":"package seedu.igraduate.command;"},{"lineNumber":2,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":3,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.Storage;"},{"lineNumber":4,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.ModuleList;"},{"lineNumber":5,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.Ui;"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":7,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.exception.SaveModuleFailException;"},{"lineNumber":8,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.exception.ModuleNotFoundException;"},{"lineNumber":9,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.exception.InvalidModuleTypeException;"},{"lineNumber":10,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.exception.ModularCreditExceedsLimitException;"},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"import seedu.igraduate.exception.ExistingModuleException;"},{"lineNumber":12,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":13,"author":{"gitId":"kewenlok"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"kewenlok"},"content":" * Parent class for more specific command child class."},{"lineNumber":15,"author":{"gitId":"kewenlok"},"content":" * Contains basic information applicable to all command-related classes."},{"lineNumber":16,"author":{"gitId":"kewenlok"},"content":" */"},{"lineNumber":17,"author":{"gitId":"kewenlok"},"content":"public abstract class Command {"},{"lineNumber":18,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"     * Executes command based on the corresponding command type. To be overriden."},{"lineNumber":20,"author":{"gitId":"kewenlok"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"kewenlok"},"content":"     * @param moduleList Module list consisting of all modules."},{"lineNumber":22,"author":{"gitId":"kewenlok"},"content":"     * @param ui User interface for printing result."},{"lineNumber":23,"author":{"gitId":"kewenlok"},"content":"     * @param storage Storage for storing module list data."},{"lineNumber":24,"author":{"gitId":"kewenlok"},"content":"     * @throws SaveModuleFailException If storage fail to save module data to disk."},{"lineNumber":25,"author":{"gitId":"kewenlok"},"content":"     * @throws ModuleNotFoundException If the module indicated does not exists in module list."},{"lineNumber":26,"author":{"gitId":"kewenlok"},"content":"     * @throws InvalidModuleTypeException If the module type is invalid."},{"lineNumber":27,"author":{"gitId":"kewenlok"},"content":"     * @throws ModularCreditExceedsLimitException If the total completed modular credits exceed 160."},{"lineNumber":28,"author":{"gitId":"kewenlok"},"content":"     * @throws ExistingModuleException If the module to be added already exists in module list."},{"lineNumber":29,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"kewenlok"},"content":"    public abstract void execute(ModuleList moduleList, Ui ui, Storage storage)"},{"lineNumber":31,"author":{"gitId":"kewenlok"},"content":"        throws SaveModuleFailException, ModuleNotFoundException, InvalidModuleTypeException,"},{"lineNumber":32,"author":{"gitId":"kewenlok"},"content":"            ModularCreditExceedsLimitException, ExistingModuleException;"},{"lineNumber":33,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":34,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"kewenlok"},"content":"     * Returns a flag indicating whether the program should terminate after execution of current command."},{"lineNumber":36,"author":{"gitId":"kewenlok"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"kewenlok"},"content":"     * @return True if the program should be terminated after executing current command, False otherwise."},{"lineNumber":38,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"kewenlok"},"content":"    public abstract boolean isExit();"},{"lineNumber":40,"author":{"gitId":"kewenlok"},"content":"}"}],"authorContributionMap":{"fupernova":3,"kewenlok":37}},{"path":"src/main/java/seedu/igraduate/command/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kewenlok"},"content":"package seedu.igraduate.command;"},{"lineNumber":2,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":3,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.Storage;"},{"lineNumber":4,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.ModuleList;"},{"lineNumber":5,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.Ui;"},{"lineNumber":6,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":7,"author":{"gitId":"oscarlai1998"},"content":"import seedu.igraduate.exception.ModuleNotFoundException;"},{"lineNumber":8,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.exception.SaveModuleFailException;"},{"lineNumber":9,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":10,"author":{"gitId":"oscarlai1998"},"content":"import seedu.igraduate.module.Module;"},{"lineNumber":11,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"import java.util.logging.Logger;"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"import java.util.logging.Level;"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":15,"author":{"gitId":"kewenlok"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"kewenlok"},"content":" * Handles delete command."},{"lineNumber":17,"author":{"gitId":"kewenlok"},"content":" */"},{"lineNumber":18,"author":{"gitId":"kewenlok"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"    protected String moduleCode;"},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(DeleteCommand.class.getName());"},{"lineNumber":22,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":23,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"xseh"},"content":"     * Child class of the command class that contains the module code. "},{"lineNumber":25,"author":{"gitId":"xseh"},"content":"     * "},{"lineNumber":26,"author":{"gitId":"xseh"},"content":"     * @param moduleCode module code. "},{"lineNumber":27,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"fupernova"},"content":"    public DeleteCommand(String moduleCode) {"},{"lineNumber":29,"author":{"gitId":"fupernova"},"content":"        this.moduleCode \u003d moduleCode;"},{"lineNumber":30,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":32,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"oscarlai1998"},"content":"     * Deletes a module from moduleList."},{"lineNumber":34,"author":{"gitId":"kewenlok"},"content":"     * "},{"lineNumber":35,"author":{"gitId":"kewenlok"},"content":"     * @param moduleList Module list consisting of all modules."},{"lineNumber":36,"author":{"gitId":"kewenlok"},"content":"     * @param ui User interface for printing result."},{"lineNumber":37,"author":{"gitId":"kewenlok"},"content":"     * @param storage Storage for storing module list data."},{"lineNumber":38,"author":{"gitId":"kewenlok"},"content":"     * @throws ModuleNotFoundException If the module specified does not exists."},{"lineNumber":39,"author":{"gitId":"xseh"},"content":"     * @throws SaveModuleFailException If module data fails to save to file."},{"lineNumber":40,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"kewenlok"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"kewenlok"},"content":"    public void execute(ModuleList moduleList, Ui ui, Storage storage)"},{"lineNumber":43,"author":{"gitId":"kewenlok"},"content":"            throws ModuleNotFoundException, SaveModuleFailException {"},{"lineNumber":44,"author":{"gitId":"kewenlok"},"content":"        LOGGER.log(Level.INFO, \"Executing delete command...\");"},{"lineNumber":45,"author":{"gitId":"oscarlai1998"},"content":"        try {"},{"lineNumber":46,"author":{"gitId":"kewenlok"},"content":"            Module module \u003d moduleList.getByCode(moduleCode);"},{"lineNumber":47,"author":{"gitId":"kewenlok"},"content":"            String moduleType \u003d moduleList.getModuleType(module);"},{"lineNumber":48,"author":{"gitId":"kewenlok"},"content":"            moduleList.delete(module);"},{"lineNumber":49,"author":{"gitId":"kewenlok"},"content":"            storage.saveModulesToFile(moduleList);"},{"lineNumber":50,"author":{"gitId":"kewenlok"},"content":"            ui.printDeletedModuleSuccess(moduleCode, moduleType);"},{"lineNumber":51,"author":{"gitId":"kewenlok"},"content":"            LOGGER.log(Level.INFO, String.format(\"Successfully deleted %s module.\", moduleCode));"},{"lineNumber":52,"author":{"gitId":"oscarlai1998"},"content":"        } catch (ModuleNotFoundException e) {"},{"lineNumber":53,"author":{"gitId":"kewenlok"},"content":"            LOGGER.log(Level.WARNING, \"Failed to delete non-existence module.\", e);"},{"lineNumber":54,"author":{"gitId":"oscarlai1998"},"content":"            throw new ModuleNotFoundException();"},{"lineNumber":55,"author":{"gitId":"kewenlok"},"content":"        } finally {"},{"lineNumber":56,"author":{"gitId":"kewenlok"},"content":"            LOGGER.log(Level.INFO, \"End of delete command execution.\");"},{"lineNumber":57,"author":{"gitId":"oscarlai1998"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":60,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"kewenlok"},"content":"     * {@inheritDoc}"},{"lineNumber":62,"author":{"gitId":"kewenlok"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"kewenlok"},"content":"     * @return false"},{"lineNumber":64,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"kewenlok"},"content":"    @Override"},{"lineNumber":66,"author":{"gitId":"kewenlok"},"content":"    public boolean isExit() {"},{"lineNumber":67,"author":{"gitId":"kewenlok"},"content":"        return false;"},{"lineNumber":68,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"kewenlok"},"content":"}"}],"authorContributionMap":{"fupernova":10,"kewenlok":44,"xseh":6,"oscarlai1998":9}},{"path":"src/main/java/seedu/igraduate/command/DoneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kewenlok"},"content":"package seedu.igraduate.command;"},{"lineNumber":2,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":3,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.Storage;"},{"lineNumber":4,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.ModuleList;"},{"lineNumber":5,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.Ui;"},{"lineNumber":6,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":7,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.exception.ModuleNotFoundException;"},{"lineNumber":8,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.exception.SaveModuleFailException;"},{"lineNumber":9,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":10,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.module.Module;"},{"lineNumber":11,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"import java.util.logging.Logger;"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"import java.util.logging.Level;"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":15,"author":{"gitId":"kewenlok"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"kewenlok"},"content":" * Handles done command."},{"lineNumber":17,"author":{"gitId":"kewenlok"},"content":" */"},{"lineNumber":18,"author":{"gitId":"kewenlok"},"content":"public class DoneCommand extends Command {"},{"lineNumber":19,"author":{"gitId":"fupernova"},"content":"    protected String moduleCode;"},{"lineNumber":20,"author":{"gitId":"kewenlok"},"content":"    protected String moduleGrade;"},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":22,"author":{"gitId":"fupernova"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(DoneCommand.class.getName());"},{"lineNumber":23,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":24,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"xseh"},"content":"     * Child class of the command class that contains the module code and grade. "},{"lineNumber":26,"author":{"gitId":"xseh"},"content":"     * Marks a module as done with the grade obtained. "},{"lineNumber":27,"author":{"gitId":"xseh"},"content":"     * "},{"lineNumber":28,"author":{"gitId":"xseh"},"content":"     * @param moduleCode module code. "},{"lineNumber":29,"author":{"gitId":"xseh"},"content":"     * @param moduleGrade grade obtained in the module. "},{"lineNumber":30,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"kewenlok"},"content":"    public DoneCommand(String moduleCode, String moduleGrade) {"},{"lineNumber":32,"author":{"gitId":"fupernova"},"content":"        this.moduleCode \u003d moduleCode;"},{"lineNumber":33,"author":{"gitId":"kewenlok"},"content":"        this.moduleGrade \u003d moduleGrade;"},{"lineNumber":34,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":36,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"xseh"},"content":"     * Retrieves the module code given in the user input. "},{"lineNumber":38,"author":{"gitId":"xseh"},"content":"     * "},{"lineNumber":39,"author":{"gitId":"xseh"},"content":"     * @return module code. "},{"lineNumber":40,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"kewenlok"},"content":"    public String getModuleCode() {"},{"lineNumber":42,"author":{"gitId":"kewenlok"},"content":"        return moduleCode;"},{"lineNumber":43,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":45,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"xseh"},"content":"     * Retrieves module grade given in the user input. "},{"lineNumber":47,"author":{"gitId":"xseh"},"content":"     * "},{"lineNumber":48,"author":{"gitId":"xseh"},"content":"     * @return module grade. "},{"lineNumber":49,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"kewenlok"},"content":"    public String getModuleGrade() {"},{"lineNumber":51,"author":{"gitId":"kewenlok"},"content":"        return moduleGrade;"},{"lineNumber":52,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":54,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"xseh"},"content":"     * Marks the provided module as done and set the corresponding grade."},{"lineNumber":56,"author":{"gitId":"kewenlok"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"kewenlok"},"content":"     * @param moduleList Module list consisting of all modules."},{"lineNumber":58,"author":{"gitId":"kewenlok"},"content":"     * @param ui User interface for printing result."},{"lineNumber":59,"author":{"gitId":"kewenlok"},"content":"     * @param storage Storage for storing module list data."},{"lineNumber":60,"author":{"gitId":"xseh"},"content":"     * @throws SaveModuleFailException If module data fails to save to file."},{"lineNumber":61,"author":{"gitId":"kewenlok"},"content":"     * @throws ModuleNotFoundException If module is not found in module list."},{"lineNumber":62,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"kewenlok"},"content":"    @Override"},{"lineNumber":64,"author":{"gitId":"kewenlok"},"content":"    public void execute(ModuleList moduleList, Ui ui, Storage storage)"},{"lineNumber":65,"author":{"gitId":"kewenlok"},"content":"            throws SaveModuleFailException, ModuleNotFoundException {"},{"lineNumber":66,"author":{"gitId":"kewenlok"},"content":"        LOGGER.log(Level.INFO, \"Executing done command...\");"},{"lineNumber":67,"author":{"gitId":"kewenlok"},"content":"        try {"},{"lineNumber":68,"author":{"gitId":"kewenlok"},"content":"            Module module \u003d moduleList.getByCode(getModuleCode());"},{"lineNumber":69,"author":{"gitId":"kewenlok"},"content":"            moduleList.markAsTaken(module);"},{"lineNumber":70,"author":{"gitId":"kewenlok"},"content":"            moduleList.setGrade(module, getModuleGrade());"},{"lineNumber":71,"author":{"gitId":"kewenlok"},"content":"            storage.saveModulesToFile(moduleList);"},{"lineNumber":72,"author":{"gitId":"kewenlok"},"content":"            ui.printMarkAsTakenMessage(module);"},{"lineNumber":73,"author":{"gitId":"kewenlok"},"content":"            LOGGER.log(Level.INFO, String.format(\"Successfully marked %s module as taken.\", getModuleCode()));"},{"lineNumber":74,"author":{"gitId":"kewenlok"},"content":"        } catch (ModuleNotFoundException e) {"},{"lineNumber":75,"author":{"gitId":"kewenlok"},"content":"            LOGGER.log(Level.WARNING, \"Failed to mark non-existence module as taken.\", e);"},{"lineNumber":76,"author":{"gitId":"kewenlok"},"content":"            throw new ModuleNotFoundException();"},{"lineNumber":77,"author":{"gitId":"kewenlok"},"content":"        } finally {"},{"lineNumber":78,"author":{"gitId":"kewenlok"},"content":"            LOGGER.log(Level.INFO, \"End of done command execution.\");"},{"lineNumber":79,"author":{"gitId":"kewenlok"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":82,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"kewenlok"},"content":"     * {@inheritDoc}"},{"lineNumber":84,"author":{"gitId":"kewenlok"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"kewenlok"},"content":"     * @return false"},{"lineNumber":86,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"kewenlok"},"content":"    @Override"},{"lineNumber":88,"author":{"gitId":"kewenlok"},"content":"    public boolean isExit() {"},{"lineNumber":89,"author":{"gitId":"kewenlok"},"content":"        return false;"},{"lineNumber":90,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"kewenlok"},"content":"}"}],"authorContributionMap":{"fupernova":10,"kewenlok":62,"xseh":19}},{"path":"src/main/java/seedu/igraduate/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package seedu.igraduate.command;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.Storage;"},{"lineNumber":4,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.ModuleList;"},{"lineNumber":5,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.Ui;"},{"lineNumber":6,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":7,"author":{"gitId":"kewenlok"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"kewenlok"},"content":" * Handles exit command."},{"lineNumber":9,"author":{"gitId":"kewenlok"},"content":" */"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":"public class ExitCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":12,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"     * Prints exit message."},{"lineNumber":14,"author":{"gitId":"kewenlok"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"kewenlok"},"content":"     * @param moduleList Module list consisting of all modules."},{"lineNumber":16,"author":{"gitId":"kewenlok"},"content":"     * @param ui User interface for printing result."},{"lineNumber":17,"author":{"gitId":"kewenlok"},"content":"     * @param storage Storage for storing module list data."},{"lineNumber":18,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"kewenlok"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"kewenlok"},"content":"    public void execute(ModuleList moduleList, Ui ui, Storage storage) {"},{"lineNumber":21,"author":{"gitId":"fupernova"},"content":"        ui.printExitMessage();"},{"lineNumber":22,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":24,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"kewenlok"},"content":"     * {@inheritDoc}"},{"lineNumber":26,"author":{"gitId":"kewenlok"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"kewenlok"},"content":"     * @return true"},{"lineNumber":28,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"kewenlok"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"kewenlok"},"content":"    public boolean isExit() {"},{"lineNumber":31,"author":{"gitId":"kewenlok"},"content":"        return true;"},{"lineNumber":32,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":7,"kewenlok":26}},{"path":"src/main/java/seedu/igraduate/command/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kewenlok"},"content":"package seedu.igraduate.command;"},{"lineNumber":2,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":3,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.Storage;"},{"lineNumber":4,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.ModuleList;"},{"lineNumber":5,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.Ui;"},{"lineNumber":6,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":7,"author":{"gitId":"oscarlai1998"},"content":"import java.util.logging.Level;"},{"lineNumber":8,"author":{"gitId":"oscarlai1998"},"content":"import java.util.logging.Logger;"},{"lineNumber":9,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":10,"author":{"gitId":"kewenlok"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"kewenlok"},"content":" * Handles list command."},{"lineNumber":12,"author":{"gitId":"kewenlok"},"content":" */"},{"lineNumber":13,"author":{"gitId":"kewenlok"},"content":"public class ListCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(ListCommand.class.getName());"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":16,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"xseh"},"content":"     * Prints list of all modules."},{"lineNumber":18,"author":{"gitId":"kewenlok"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"kewenlok"},"content":"     * @param moduleList Module list consisting of all modules."},{"lineNumber":20,"author":{"gitId":"kewenlok"},"content":"     * @param ui User interface for printing result."},{"lineNumber":21,"author":{"gitId":"kewenlok"},"content":"     * @param storage Storage for storing module list data."},{"lineNumber":22,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"kewenlok"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"kewenlok"},"content":"    public void execute(ModuleList moduleList, Ui ui, Storage storage) {"},{"lineNumber":25,"author":{"gitId":"kewenlok"},"content":"        LOGGER.log(Level.INFO, \"Executing list command...\");"},{"lineNumber":26,"author":{"gitId":"kewenlok"},"content":"        if (moduleList.isEmpty()) {"},{"lineNumber":27,"author":{"gitId":"oscarlai1998"},"content":"            assert moduleList.isEmpty() : \"List should be empty\";"},{"lineNumber":28,"author":{"gitId":"fupernova"},"content":"            LOGGER.log(Level.INFO, \"List is empty.\");"},{"lineNumber":29,"author":{"gitId":"oscarlai1998"},"content":"            ui.printListEmptyMessage();"},{"lineNumber":30,"author":{"gitId":"kewenlok"},"content":"        } else {"},{"lineNumber":31,"author":{"gitId":"oscarlai1998"},"content":"            ui.printEntireList(moduleList.getModules());"},{"lineNumber":32,"author":{"gitId":"kewenlok"},"content":"            LOGGER.log(Level.INFO, \"Successfully printed module list.\");"},{"lineNumber":33,"author":{"gitId":"kewenlok"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"kewenlok"},"content":"        LOGGER.log(Level.INFO, \"End of list command execution.\");"},{"lineNumber":35,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":37,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"kewenlok"},"content":"     * {@inheritDoc}"},{"lineNumber":39,"author":{"gitId":"kewenlok"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"kewenlok"},"content":"     * @return false"},{"lineNumber":41,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"kewenlok"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"kewenlok"},"content":"    public boolean isExit() {"},{"lineNumber":44,"author":{"gitId":"kewenlok"},"content":"        return false;"},{"lineNumber":45,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"kewenlok"},"content":"}"}],"authorContributionMap":{"fupernova":3,"kewenlok":35,"xseh":1,"oscarlai1998":7}},{"path":"src/main/java/seedu/igraduate/command/ProgressCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package seedu.igraduate.command;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.Storage;"},{"lineNumber":4,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.ModuleList;"},{"lineNumber":5,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.Ui;"},{"lineNumber":6,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":7,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.exception.ModularCreditExceedsLimitException;"},{"lineNumber":8,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":9,"author":{"gitId":"oscarlai1998"},"content":"import java.text.DecimalFormat;"},{"lineNumber":10,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":11,"author":{"gitId":"oscarlai1998"},"content":"import java.util.logging.Level;"},{"lineNumber":12,"author":{"gitId":"oscarlai1998"},"content":"import java.util.logging.Logger;"},{"lineNumber":13,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":14,"author":{"gitId":"kewenlok"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"kewenlok"},"content":" * Handles progress command."},{"lineNumber":16,"author":{"gitId":"kewenlok"},"content":" */"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":"public class ProgressCommand extends Command {"},{"lineNumber":18,"author":{"gitId":"fupernova"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(ProgressCommand.class.getName());"},{"lineNumber":19,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":20,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"oscarlai1998"},"content":"     * Prints progress in percentage of MCs completed out of 160MCs."},{"lineNumber":22,"author":{"gitId":"kewenlok"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"kewenlok"},"content":"     * @param moduleList Module list consisting of all modules."},{"lineNumber":24,"author":{"gitId":"kewenlok"},"content":"     * @param ui User interface for printing result."},{"lineNumber":25,"author":{"gitId":"kewenlok"},"content":"     * @param storage Storage for storing module list data."},{"lineNumber":26,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"kewenlok"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"kewenlok"},"content":"    public void execute(ModuleList moduleList, Ui ui, Storage storage)"},{"lineNumber":29,"author":{"gitId":"kewenlok"},"content":"            throws ModularCreditExceedsLimitException {"},{"lineNumber":30,"author":{"gitId":"kewenlok"},"content":"        LOGGER.log(Level.INFO, \"Executing progress command...\");"},{"lineNumber":31,"author":{"gitId":"oscarlai1998"},"content":"        DecimalFormat df \u003d new DecimalFormat(\"0.00\");"},{"lineNumber":32,"author":{"gitId":"kewenlok"},"content":"        double completedMCs \u003d moduleList.getTotalCompletedMCs();"},{"lineNumber":33,"author":{"gitId":"fupernova"},"content":"        LOGGER.log(Level.INFO, \"Completed MCs success.\");"},{"lineNumber":34,"author":{"gitId":"kewenlok"},"content":"        double percentageDone \u003d (completedMCs / 160) * 100;"},{"lineNumber":35,"author":{"gitId":"oscarlai1998"},"content":"        String stringPercentageDone \u003d df.format(percentageDone);"},{"lineNumber":36,"author":{"gitId":"oscarlai1998"},"content":"        if (percentageDone \u003e 100) {"},{"lineNumber":37,"author":{"gitId":"fupernova"},"content":"            LOGGER.log(Level.WARNING, \"Execution failed! Percentage done exceeds 100%.\");"},{"lineNumber":38,"author":{"gitId":"kewenlok"},"content":"            throw new ModularCreditExceedsLimitException();"},{"lineNumber":39,"author":{"gitId":"oscarlai1998"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"kewenlok"},"content":"        ui.printProgressBar(completedMCs, stringPercentageDone);"},{"lineNumber":41,"author":{"gitId":"fupernova"},"content":"        LOGGER.log(Level.INFO, \"Print Progress Bar success.\");"},{"lineNumber":42,"author":{"gitId":"kewenlok"},"content":"        LOGGER.log(Level.INFO, \"End of progress command execution.\");"},{"lineNumber":43,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":45,"author":{"gitId":"kewenlok"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"kewenlok"},"content":"     * {@inheritDoc}"},{"lineNumber":47,"author":{"gitId":"kewenlok"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"kewenlok"},"content":"     * @return false"},{"lineNumber":49,"author":{"gitId":"kewenlok"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"kewenlok"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"kewenlok"},"content":"    public boolean isExit() {"},{"lineNumber":52,"author":{"gitId":"kewenlok"},"content":"        return false;"},{"lineNumber":53,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":8,"kewenlok":35,"oscarlai1998":11}},{"path":"src/main/java/seedu/igraduate/exception/ExistingModuleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fupernova"},"content":"package seedu.igraduate.exception;"},{"lineNumber":2,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":3,"author":{"gitId":"xseh"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"xseh"},"content":" * The exception is thrown if the module code input already exists. "},{"lineNumber":5,"author":{"gitId":"xseh"},"content":" */"},{"lineNumber":6,"author":{"gitId":"fupernova"},"content":"public class ExistingModuleException extends Exception {"},{"lineNumber":7,"author":{"gitId":"fupernova"},"content":"    private static final String EXISTING_MODULE_ERROR_MESSAGE \u003d \"The module code\""},{"lineNumber":8,"author":{"gitId":"oscarlai1998"},"content":"            + \" already exists.\";"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":"    public ExistingModuleException() {"},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"        super(EXISTING_MODULE_ERROR_MESSAGE);"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":"}"}],"authorContributionMap":{"fupernova":9,"xseh":3,"oscarlai1998":1}},{"path":"src/main/java/seedu/igraduate/exception/IncorrectParameterCountException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kewenlok"},"content":"package seedu.igraduate.exception;"},{"lineNumber":2,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":3,"author":{"gitId":"xseh"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"xseh"},"content":" * The exception is thrown if the parameters given is incorrect. "},{"lineNumber":5,"author":{"gitId":"xseh"},"content":" */"},{"lineNumber":6,"author":{"gitId":"kewenlok"},"content":"public class IncorrectParameterCountException extends Exception {"},{"lineNumber":7,"author":{"gitId":"xseh"},"content":"    public static final String INCORRECT_PARAMETER_COUNT_ERROR_MESSAGE \u003d \"The number of parameters\""},{"lineNumber":8,"author":{"gitId":"kewenlok"},"content":"            + \" provided is incorrect. \\nPlease double check and try again.\";"},{"lineNumber":9,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":10,"author":{"gitId":"kewenlok"},"content":"    public IncorrectParameterCountException() {"},{"lineNumber":11,"author":{"gitId":"kewenlok"},"content":"        super(INCORRECT_PARAMETER_COUNT_ERROR_MESSAGE);"},{"lineNumber":12,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"kewenlok"},"content":"}"}],"authorContributionMap":{"kewenlok":9,"xseh":4}},{"path":"src/main/java/seedu/igraduate/exception/InputNotNumberException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kewenlok"},"content":"package seedu.igraduate.exception;"},{"lineNumber":2,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":3,"author":{"gitId":"kewenlok"},"content":"public class InputNotNumberException extends Exception {"},{"lineNumber":4,"author":{"gitId":"xseh"},"content":"    public static final String INPUT_NOT_NUMBER_ERROR_MESSAGE \u003d \"The input for the following\""},{"lineNumber":5,"author":{"gitId":"kewenlok"},"content":"            + \" parameter provided is not a number: \\n\";"},{"lineNumber":6,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":7,"author":{"gitId":"kewenlok"},"content":"    public InputNotNumberException(String parameterType) {"},{"lineNumber":8,"author":{"gitId":"kewenlok"},"content":"        super(INPUT_NOT_NUMBER_ERROR_MESSAGE + parameterType);"},{"lineNumber":9,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"kewenlok"},"content":"}"}],"authorContributionMap":{"kewenlok":9,"xseh":1}},{"path":"src/main/java/seedu/igraduate/exception/InvalidCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xseh"},"content":"package seedu.igraduate.exception;"},{"lineNumber":2,"author":{"gitId":"xseh"},"content":""},{"lineNumber":3,"author":{"gitId":"xseh"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"xseh"},"content":" * The exception is thrown if the command input was invalid. "},{"lineNumber":5,"author":{"gitId":"xseh"},"content":" */"},{"lineNumber":6,"author":{"gitId":"xseh"},"content":"public class InvalidCommandException extends Exception {"},{"lineNumber":7,"author":{"gitId":"xseh"},"content":"    public static final String INVALID_COMMAND_ERROR_MESSAGE \u003d \"The command you have entered\""},{"lineNumber":8,"author":{"gitId":"kewenlok"},"content":"            + \" is incorrect. \\nPlease double check and try again.\";"},{"lineNumber":9,"author":{"gitId":"xseh"},"content":""},{"lineNumber":10,"author":{"gitId":"kewenlok"},"content":"    public InvalidCommandException() {"},{"lineNumber":11,"author":{"gitId":"kewenlok"},"content":"        super(INVALID_COMMAND_ERROR_MESSAGE);"},{"lineNumber":12,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"xseh"},"content":"}"}],"authorContributionMap":{"kewenlok":4,"xseh":9}},{"path":"src/main/java/seedu/igraduate/exception/InvalidModuleTypeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kewenlok"},"content":"package seedu.igraduate.exception;"},{"lineNumber":2,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":3,"author":{"gitId":"kewenlok"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"kewenlok"},"content":" * The exception is thrown if the module type input is invalid."},{"lineNumber":5,"author":{"gitId":"kewenlok"},"content":" */"},{"lineNumber":6,"author":{"gitId":"kewenlok"},"content":"public class InvalidModuleTypeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"kewenlok"},"content":"    private static final String INVALID_MODULE_TYPE_ERROR_MESSAGE \u003d \"The module type you have\""},{"lineNumber":8,"author":{"gitId":"kewenlok"},"content":"            + \" entered is invalid. \\nThe supported module types are: core, ge, math, ue.\";"},{"lineNumber":9,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":10,"author":{"gitId":"kewenlok"},"content":"    public InvalidModuleTypeException() {"},{"lineNumber":11,"author":{"gitId":"kewenlok"},"content":"        super(INVALID_MODULE_TYPE_ERROR_MESSAGE);"},{"lineNumber":12,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"kewenlok"},"content":"}"}],"authorContributionMap":{"kewenlok":13}},{"path":"src/main/java/seedu/igraduate/exception/LoadModuleFailException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kewenlok"},"content":"package seedu.igraduate.exception;"},{"lineNumber":2,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":3,"author":{"gitId":"kewenlok"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"kewenlok"},"content":" * The exception is thrown if module cannot be loaded properly."},{"lineNumber":5,"author":{"gitId":"kewenlok"},"content":" */"},{"lineNumber":6,"author":{"gitId":"kewenlok"},"content":"public class LoadModuleFailException extends Exception {"},{"lineNumber":7,"author":{"gitId":"kewenlok"},"content":"    private static final String LOAD_MODULE_FAIL_ERROR_MESSAGE \u003d \"Oops! An error occur when\""},{"lineNumber":8,"author":{"gitId":"kewenlok"},"content":"            + \" trying to import module data from file :(.\\nInitializing new module list...\";"},{"lineNumber":9,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":10,"author":{"gitId":"kewenlok"},"content":"    public LoadModuleFailException() {"},{"lineNumber":11,"author":{"gitId":"kewenlok"},"content":"        super(LOAD_MODULE_FAIL_ERROR_MESSAGE);"},{"lineNumber":12,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"kewenlok"},"content":"}"},{"lineNumber":14,"author":{"gitId":"kewenlok"},"content":""}],"authorContributionMap":{"kewenlok":14}},{"path":"src/main/java/seedu/igraduate/exception/ModularCreditExceedsLimitException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kewenlok"},"content":"package seedu.igraduate.exception;"},{"lineNumber":2,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":3,"author":{"gitId":"fupernova"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"fupernova"},"content":" * The exception is thrown if the module limit is reached."},{"lineNumber":5,"author":{"gitId":"fupernova"},"content":" */"},{"lineNumber":6,"author":{"gitId":"kewenlok"},"content":"public class ModularCreditExceedsLimitException extends Exception {"},{"lineNumber":7,"author":{"gitId":"kewenlok"},"content":"    private static final String MC_EXCEED_LIMIT_ERROR_MESSAGE \u003d \"Modular credit exceeds\""},{"lineNumber":8,"author":{"gitId":"kewenlok"},"content":"            + \" limit of 160MCs. \\nPlease double check and try again.\";"},{"lineNumber":9,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":10,"author":{"gitId":"kewenlok"},"content":"    public ModularCreditExceedsLimitException() {"},{"lineNumber":11,"author":{"gitId":"kewenlok"},"content":"        super(MC_EXCEED_LIMIT_ERROR_MESSAGE);"},{"lineNumber":12,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"kewenlok"},"content":"}"}],"authorContributionMap":{"fupernova":3,"kewenlok":10}},{"path":"src/main/java/seedu/igraduate/exception/ModuleNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kewenlok"},"content":"package seedu.igraduate.exception;"},{"lineNumber":2,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":3,"author":{"gitId":"xseh"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"xseh"},"content":" * The exception is thrown if the module cannot be matched. "},{"lineNumber":5,"author":{"gitId":"xseh"},"content":" */"},{"lineNumber":6,"author":{"gitId":"kewenlok"},"content":"public class ModuleNotFoundException extends Exception {"},{"lineNumber":7,"author":{"gitId":"xseh"},"content":"    public static final String MODULE_NOT_FOUND_ERROR_MESSAGE \u003d \"The module code you have entered\""},{"lineNumber":8,"author":{"gitId":"kewenlok"},"content":"            + \" does not exists. \\nPlease double check and try again.\";"},{"lineNumber":9,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":10,"author":{"gitId":"kewenlok"},"content":"    public ModuleNotFoundException() {"},{"lineNumber":11,"author":{"gitId":"kewenlok"},"content":"        super(MODULE_NOT_FOUND_ERROR_MESSAGE);"},{"lineNumber":12,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"kewenlok"},"content":"}"}],"authorContributionMap":{"kewenlok":9,"xseh":4}},{"path":"src/main/java/seedu/igraduate/exception/SaveModuleFailException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kewenlok"},"content":"package seedu.igraduate.exception;"},{"lineNumber":2,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":3,"author":{"gitId":"xseh"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"xseh"},"content":" * This exception is thrown if the program fails to save data to file. "},{"lineNumber":5,"author":{"gitId":"xseh"},"content":" */"},{"lineNumber":6,"author":{"gitId":"kewenlok"},"content":"public class SaveModuleFailException extends Exception {"},{"lineNumber":7,"author":{"gitId":"kewenlok"},"content":"    private static final String SAVE_MODULE_FAIL_ERROR_MESSAGE \u003d \"Oops! An error occur when\""},{"lineNumber":8,"author":{"gitId":"kewenlok"},"content":"            + \" trying to save module data to file :(.\";"},{"lineNumber":9,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":10,"author":{"gitId":"kewenlok"},"content":"    public SaveModuleFailException() {"},{"lineNumber":11,"author":{"gitId":"kewenlok"},"content":"        super(SAVE_MODULE_FAIL_ERROR_MESSAGE);"},{"lineNumber":12,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"kewenlok"},"content":"}"}],"authorContributionMap":{"kewenlok":10,"xseh":3}},{"path":"src/main/java/seedu/igraduate/module/CoreModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kewenlok"},"content":"package seedu.igraduate.module;"},{"lineNumber":2,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":3,"author":{"gitId":"kewenlok"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":5,"author":{"gitId":"xseh"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"xseh"},"content":" * Handles core modules. "},{"lineNumber":7,"author":{"gitId":"xseh"},"content":" */"},{"lineNumber":8,"author":{"gitId":"kewenlok"},"content":"public class CoreModule extends Module {"},{"lineNumber":9,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"xseh"},"content":"     * Child class of the modules class that contains the core modules. "},{"lineNumber":11,"author":{"gitId":"xseh"},"content":"     * "},{"lineNumber":12,"author":{"gitId":"xseh"},"content":"     * @param code module code. "},{"lineNumber":13,"author":{"gitId":"xseh"},"content":"     * @param name module name as specified in the user input. "},{"lineNumber":14,"author":{"gitId":"xseh"},"content":"     * @param credit number of modular credits. "},{"lineNumber":15,"author":{"gitId":"xseh"},"content":"     * @param status status of completion (tick for completed, cross for uncompleted). "},{"lineNumber":16,"author":{"gitId":"xseh"},"content":"     * @param grade grade attained for the module, only applicable is status is done. "},{"lineNumber":17,"author":{"gitId":"xseh"},"content":"     * @param preRequisites prerequisites required for the module. "},{"lineNumber":18,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"kewenlok"},"content":"    public CoreModule(String code, String name, double credit, String status, String grade,"},{"lineNumber":20,"author":{"gitId":"kewenlok"},"content":"                      ArrayList\u003cString\u003e preRequisites) {"},{"lineNumber":21,"author":{"gitId":"kewenlok"},"content":"        super(code, name, credit, status, grade, preRequisites);"},{"lineNumber":22,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":24,"author":{"gitId":"kewenlok"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"kewenlok"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"kewenlok"},"content":"        return \"[C]\" + super.toString();"},{"lineNumber":27,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"kewenlok"},"content":"}"}],"authorContributionMap":{"kewenlok":15,"xseh":13}},{"path":"src/main/java/seedu/igraduate/module/ElectiveModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kewenlok"},"content":"package seedu.igraduate.module;"},{"lineNumber":2,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":3,"author":{"gitId":"kewenlok"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":5,"author":{"gitId":"xseh"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"xseh"},"content":" * Handles elective modules. "},{"lineNumber":7,"author":{"gitId":"xseh"},"content":" */"},{"lineNumber":8,"author":{"gitId":"kewenlok"},"content":"public class ElectiveModule extends Module {"},{"lineNumber":9,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"xseh"},"content":"     * Child class of the modules class that contains the elective modules. "},{"lineNumber":11,"author":{"gitId":"xseh"},"content":"     * "},{"lineNumber":12,"author":{"gitId":"xseh"},"content":"     * @param code module code. "},{"lineNumber":13,"author":{"gitId":"xseh"},"content":"     * @param name module name as specified in the user input. "},{"lineNumber":14,"author":{"gitId":"xseh"},"content":"     * @param credit number of modular credits. "},{"lineNumber":15,"author":{"gitId":"xseh"},"content":"     * @param status status of completion (tick for completed, cross for uncompleted). "},{"lineNumber":16,"author":{"gitId":"xseh"},"content":"     * @param grade grade attained for the module, only applicable is status is done. "},{"lineNumber":17,"author":{"gitId":"xseh"},"content":"     * @param preRequisites prerequisites required for the module. "},{"lineNumber":18,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"kewenlok"},"content":"    public ElectiveModule(String code, String name, double credit, String status, String grade,"},{"lineNumber":20,"author":{"gitId":"kewenlok"},"content":"                          ArrayList\u003cString\u003e preRequisites) {"},{"lineNumber":21,"author":{"gitId":"kewenlok"},"content":"        super(code, name, credit, status, grade, preRequisites);"},{"lineNumber":22,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":24,"author":{"gitId":"kewenlok"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"kewenlok"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"kewenlok"},"content":"        return \"[E]\" + super.toString();"},{"lineNumber":27,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"kewenlok"},"content":"}"}],"authorContributionMap":{"kewenlok":15,"xseh":13}},{"path":"src/main/java/seedu/igraduate/module/GeModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kewenlok"},"content":"package seedu.igraduate.module;"},{"lineNumber":2,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":3,"author":{"gitId":"kewenlok"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":5,"author":{"gitId":"xseh"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"xseh"},"content":" * Handles general education (GE) modules. "},{"lineNumber":7,"author":{"gitId":"xseh"},"content":" */"},{"lineNumber":8,"author":{"gitId":"kewenlok"},"content":"public class GeModule extends Module {"},{"lineNumber":9,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"xseh"},"content":"     * Child class of the modules class that contains the GE modules. "},{"lineNumber":11,"author":{"gitId":"xseh"},"content":"     * "},{"lineNumber":12,"author":{"gitId":"xseh"},"content":"     * @param code module code. "},{"lineNumber":13,"author":{"gitId":"xseh"},"content":"     * @param name module name as specified in the user input. "},{"lineNumber":14,"author":{"gitId":"xseh"},"content":"     * @param credit number of modular credits. "},{"lineNumber":15,"author":{"gitId":"xseh"},"content":"     * @param status status of completion (tick for completed, cross for uncompleted). "},{"lineNumber":16,"author":{"gitId":"xseh"},"content":"     * @param grade grade attained for the module, only applicable is status is done. "},{"lineNumber":17,"author":{"gitId":"xseh"},"content":"     * @param preRequisites prerequisites required for the module. "},{"lineNumber":18,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"kewenlok"},"content":"    public GeModule(String code, String name, double credit, String status, String grade,"},{"lineNumber":20,"author":{"gitId":"kewenlok"},"content":"                    ArrayList\u003cString\u003e preRequisites) {"},{"lineNumber":21,"author":{"gitId":"kewenlok"},"content":"        super(code, name, credit, status, grade, preRequisites);"},{"lineNumber":22,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":24,"author":{"gitId":"kewenlok"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"kewenlok"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"kewenlok"},"content":"        return \"[G]\" + super.toString();"},{"lineNumber":27,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"kewenlok"},"content":"}"}],"authorContributionMap":{"kewenlok":15,"xseh":13}},{"path":"src/main/java/seedu/igraduate/module/MathModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kewenlok"},"content":"package seedu.igraduate.module;"},{"lineNumber":2,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":3,"author":{"gitId":"kewenlok"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":5,"author":{"gitId":"xseh"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"xseh"},"content":" * Handles math modules. "},{"lineNumber":7,"author":{"gitId":"xseh"},"content":" */"},{"lineNumber":8,"author":{"gitId":"kewenlok"},"content":"public class MathModule extends Module {"},{"lineNumber":9,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"xseh"},"content":"     * Child class of the modules class that contains the math modules. "},{"lineNumber":11,"author":{"gitId":"xseh"},"content":"     * "},{"lineNumber":12,"author":{"gitId":"xseh"},"content":"     * @param code module code. "},{"lineNumber":13,"author":{"gitId":"xseh"},"content":"     * @param name module name as specified in the user input. "},{"lineNumber":14,"author":{"gitId":"xseh"},"content":"     * @param credit number of modular credits. "},{"lineNumber":15,"author":{"gitId":"xseh"},"content":"     * @param status status of completion (tick for completed, cross for uncompleted). "},{"lineNumber":16,"author":{"gitId":"xseh"},"content":"     * @param grade grade attained for the module, only applicable is status is done. "},{"lineNumber":17,"author":{"gitId":"xseh"},"content":"     * @param preRequisites prerequisites required for the module. "},{"lineNumber":18,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"kewenlok"},"content":"    public MathModule(String code, String name, double credit, String status, String grade,"},{"lineNumber":20,"author":{"gitId":"kewenlok"},"content":"                      ArrayList\u003cString\u003e preRequisites) {"},{"lineNumber":21,"author":{"gitId":"kewenlok"},"content":"        super(code, name, credit, status, grade, preRequisites);"},{"lineNumber":22,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":24,"author":{"gitId":"kewenlok"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"kewenlok"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"kewenlok"},"content":"        return \"[M]\" + super.toString();"},{"lineNumber":27,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"kewenlok"},"content":"}"}],"authorContributionMap":{"kewenlok":15,"xseh":13}},{"path":"src/main/java/seedu/igraduate/module/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kewenlok"},"content":"package seedu.igraduate.module;"},{"lineNumber":2,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":3,"author":{"gitId":"kewenlok"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":5,"author":{"gitId":"xseh"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"xseh"},"content":" * Parent class for more specific command child class."},{"lineNumber":7,"author":{"gitId":"xseh"},"content":" * Contains basic information applicable to all module related classes."},{"lineNumber":8,"author":{"gitId":"xseh"},"content":" */"},{"lineNumber":9,"author":{"gitId":"oscarlai1998"},"content":"public abstract class Module {"},{"lineNumber":10,"author":{"gitId":"kewenlok"},"content":"    private String code;"},{"lineNumber":11,"author":{"gitId":"kewenlok"},"content":"    private String name;"},{"lineNumber":12,"author":{"gitId":"kewenlok"},"content":"    private double credit;"},{"lineNumber":13,"author":{"gitId":"kewenlok"},"content":"    private String status;"},{"lineNumber":14,"author":{"gitId":"kewenlok"},"content":"    private String grade;"},{"lineNumber":15,"author":{"gitId":"kewenlok"},"content":"    private ArrayList\u003cString\u003e preRequisites;"},{"lineNumber":16,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":17,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"xseh"},"content":"     * Creates an instance of a module based on the corresponding module type. "},{"lineNumber":19,"author":{"gitId":"xseh"},"content":"     * "},{"lineNumber":20,"author":{"gitId":"xseh"},"content":"     * @param code module code. "},{"lineNumber":21,"author":{"gitId":"xseh"},"content":"     * @param name module name as specified in the user input. "},{"lineNumber":22,"author":{"gitId":"xseh"},"content":"     * @param credit number of modular credits. "},{"lineNumber":23,"author":{"gitId":"xseh"},"content":"     * @param status status of completion (tick for completed, cross for uncompleted). "},{"lineNumber":24,"author":{"gitId":"xseh"},"content":"     * @param grade grade attained for the module, only applicable is status is done. "},{"lineNumber":25,"author":{"gitId":"xseh"},"content":"     * @param preRequisites prerequisites required for the module. "},{"lineNumber":26,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"kewenlok"},"content":"    public Module(String code, String name, double credit, String status, String grade,"},{"lineNumber":28,"author":{"gitId":"kewenlok"},"content":"                  ArrayList\u003cString\u003e preRequisites) {"},{"lineNumber":29,"author":{"gitId":"kewenlok"},"content":"        setCode(code);"},{"lineNumber":30,"author":{"gitId":"kewenlok"},"content":"        setName(name);"},{"lineNumber":31,"author":{"gitId":"kewenlok"},"content":"        setCredit(credit);"},{"lineNumber":32,"author":{"gitId":"kewenlok"},"content":"        setStatus(status);"},{"lineNumber":33,"author":{"gitId":"kewenlok"},"content":"        setGrade(grade);"},{"lineNumber":34,"author":{"gitId":"kewenlok"},"content":"        setPreRequisites(preRequisites);"},{"lineNumber":35,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":37,"author":{"gitId":"kewenlok"},"content":"    public void setCode(String code) {"},{"lineNumber":38,"author":{"gitId":"kewenlok"},"content":"        this.code \u003d code;"},{"lineNumber":39,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":41,"author":{"gitId":"kewenlok"},"content":"    public void setName(String name) {"},{"lineNumber":42,"author":{"gitId":"kewenlok"},"content":"        this.name \u003d name;"},{"lineNumber":43,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":45,"author":{"gitId":"kewenlok"},"content":"    public void setCredit(double credit) {"},{"lineNumber":46,"author":{"gitId":"kewenlok"},"content":"        this.credit \u003d credit;"},{"lineNumber":47,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":49,"author":{"gitId":"kewenlok"},"content":"    public void setStatus(String status) {"},{"lineNumber":50,"author":{"gitId":"kewenlok"},"content":"        this.status \u003d status;"},{"lineNumber":51,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":53,"author":{"gitId":"kewenlok"},"content":"    public void setGrade(String grade) {"},{"lineNumber":54,"author":{"gitId":"kewenlok"},"content":"        this.grade \u003d grade;"},{"lineNumber":55,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":57,"author":{"gitId":"kewenlok"},"content":"    public void setPreRequisites(ArrayList\u003cString\u003e preRequisites) {"},{"lineNumber":58,"author":{"gitId":"kewenlok"},"content":"        this.preRequisites \u003d preRequisites;"},{"lineNumber":59,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":61,"author":{"gitId":"kewenlok"},"content":"    public String getCode() {"},{"lineNumber":62,"author":{"gitId":"kewenlok"},"content":"        return code;"},{"lineNumber":63,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":65,"author":{"gitId":"kewenlok"},"content":"    public String getName() {"},{"lineNumber":66,"author":{"gitId":"kewenlok"},"content":"        return name;"},{"lineNumber":67,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":69,"author":{"gitId":"kewenlok"},"content":"    public double getCredit() {"},{"lineNumber":70,"author":{"gitId":"kewenlok"},"content":"        return credit;"},{"lineNumber":71,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":73,"author":{"gitId":"kewenlok"},"content":"    public String getStatus() {"},{"lineNumber":74,"author":{"gitId":"kewenlok"},"content":"        return status;"},{"lineNumber":75,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":77,"author":{"gitId":"oscarlai1998"},"content":"    public boolean isDone() {"},{"lineNumber":78,"author":{"gitId":"oscarlai1998"},"content":"        String status \u003d getStatus();"},{"lineNumber":79,"author":{"gitId":"oscarlai1998"},"content":"        if (status.equals(\"taken\")) {"},{"lineNumber":80,"author":{"gitId":"oscarlai1998"},"content":"            return true;"},{"lineNumber":81,"author":{"gitId":"oscarlai1998"},"content":"        } else if (status.equals(\"not taken\")) {"},{"lineNumber":82,"author":{"gitId":"oscarlai1998"},"content":"            return false;"},{"lineNumber":83,"author":{"gitId":"oscarlai1998"},"content":"        } else {"},{"lineNumber":84,"author":{"gitId":"oscarlai1998"},"content":"            return false;"},{"lineNumber":85,"author":{"gitId":"oscarlai1998"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":88,"author":{"gitId":"xseh"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"xseh"},"content":"     * Gets the completion status of the module."},{"lineNumber":90,"author":{"gitId":"xseh"},"content":"     *  "},{"lineNumber":91,"author":{"gitId":"xseh"},"content":"     * @return tick if taken, cross if not taken and dash if unapplicable. "},{"lineNumber":92,"author":{"gitId":"xseh"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"kewenlok"},"content":"    public String getStatusIcon() {"},{"lineNumber":94,"author":{"gitId":"kewenlok"},"content":"        String status \u003d getStatus();"},{"lineNumber":95,"author":{"gitId":"kewenlok"},"content":"        if (status.equals(\"taken\")) {"},{"lineNumber":96,"author":{"gitId":"kewenlok"},"content":"            return \"✓\";"},{"lineNumber":97,"author":{"gitId":"kewenlok"},"content":"        } else if (status.equals(\"not taken\")) {"},{"lineNumber":98,"author":{"gitId":"kewenlok"},"content":"            return \"✘\";"},{"lineNumber":99,"author":{"gitId":"kewenlok"},"content":"        } else {"},{"lineNumber":100,"author":{"gitId":"kewenlok"},"content":"            return \"-\";"},{"lineNumber":101,"author":{"gitId":"kewenlok"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":104,"author":{"gitId":"kewenlok"},"content":"    @Override"},{"lineNumber":105,"author":{"gitId":"kewenlok"},"content":"    public String toString() {"},{"lineNumber":106,"author":{"gitId":"kewenlok"},"content":"        return String.format(\"[%s] %-8s %-55s %5s MC\", getStatusIcon(), getCode(), getName(),"},{"lineNumber":107,"author":{"gitId":"kewenlok"},"content":"                Math.round(getCredit()));"},{"lineNumber":108,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"kewenlok"},"content":"}"}],"authorContributionMap":{"kewenlok":78,"xseh":19,"oscarlai1998":12}},{"path":"src/main/resources/logger.properties","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kewenlok"},"content":"handlers\u003djava.util.logging.FileHandler"},{"lineNumber":2,"author":{"gitId":"kewenlok"},"content":".level\u003dFINE"},{"lineNumber":3,"author":{"gitId":"kewenlok"},"content":"java.util.logging.FileHandler.level\u003dFINE"},{"lineNumber":4,"author":{"gitId":"kewenlok"},"content":"java.util.logging.FileHandler.pattern\u003diGraduate-%u.log"},{"lineNumber":5,"author":{"gitId":"kewenlok"},"content":"java.util.logging.FileHandler.formatter\u003djava.util.logging.SimpleFormatter"}],"authorContributionMap":{"kewenlok":5}},{"path":"src/test/java/seedu/igraduate/IGraduateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kewenlok"},"content":"package seedu.igraduate;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"xseh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"xseh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"xseh"},"content":"import seedu.igraduate.exception.InvalidCommandException;"},{"lineNumber":9,"author":{"gitId":"xseh"},"content":""},{"lineNumber":10,"author":{"gitId":"kewenlok"},"content":"class IGraduateTest {"},{"lineNumber":11,"author":{"gitId":"xseh"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"xseh"},"content":"    void parseCommand_emptyCommand_exceptionThrown() {"},{"lineNumber":13,"author":{"gitId":"xseh"},"content":"        String line \u003d \"\";"},{"lineNumber":14,"author":{"gitId":"xseh"},"content":"        Exception exception \u003d assertThrows(InvalidCommandException.class, () -\u003e Parser.parseCommand(line));"},{"lineNumber":15,"author":{"gitId":"xseh"},"content":"        assertEquals(\"The command you have entered\" + \" is incorrect. \\nPlease double check and try again.\","},{"lineNumber":16,"author":{"gitId":"xseh"},"content":"                exception.getMessage());"},{"lineNumber":17,"author":{"gitId":"xseh"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"kewenlok":2,"xseh":11,"-":5}},{"path":"src/test/java/seedu/igraduate/ModuleListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kewenlok"},"content":"package seedu.igraduate;"},{"lineNumber":2,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":3,"author":{"gitId":"kewenlok"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":5,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.exception.ExistingModuleException;"},{"lineNumber":6,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.exception.ModuleNotFoundException;"},{"lineNumber":7,"author":{"gitId":"kewenlok"},"content":"import seedu.igraduate.module.GeModule;"},{"lineNumber":8,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":9,"author":{"gitId":"kewenlok"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":11,"author":{"gitId":"kewenlok"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":12,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":13,"author":{"gitId":"kewenlok"},"content":"class ModuleListTest {"},{"lineNumber":14,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":15,"author":{"gitId":"kewenlok"},"content":"    private ModuleList modules \u003d new ModuleList();"},{"lineNumber":16,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":17,"author":{"gitId":"kewenlok"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"kewenlok"},"content":"    void add_module_success() throws ModuleNotFoundException, ExistingModuleException {"},{"lineNumber":19,"author":{"gitId":"kewenlok"},"content":"        ArrayList\u003cString\u003e preRequisites \u003d new ArrayList\u003c\u003e();"},{"lineNumber":20,"author":{"gitId":"kewenlok"},"content":"        GeModule geModule \u003d new GeModule(\"GER1000\", \"Quantitative Reasoning\","},{"lineNumber":21,"author":{"gitId":"kewenlok"},"content":"                4.0, \"taken\", \"A-\", preRequisites);"},{"lineNumber":22,"author":{"gitId":"kewenlok"},"content":"        modules.add(geModule);"},{"lineNumber":23,"author":{"gitId":"kewenlok"},"content":"        assertEquals(\"GER1000\", modules.getByCode(\"GER1000\").getCode());"},{"lineNumber":24,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":26,"author":{"gitId":"kewenlok"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"kewenlok"},"content":"    void delete_module_success() throws ExistingModuleException {"},{"lineNumber":28,"author":{"gitId":"kewenlok"},"content":"        ArrayList\u003cString\u003e preRequisites \u003d new ArrayList\u003c\u003e();"},{"lineNumber":29,"author":{"gitId":"kewenlok"},"content":"        GeModule geModule \u003d new GeModule(\"GER1000\", \"Quantitative Reasoning\","},{"lineNumber":30,"author":{"gitId":"kewenlok"},"content":"                4.0, \"taken\", \"A-\", preRequisites);"},{"lineNumber":31,"author":{"gitId":"kewenlok"},"content":"        modules.add(geModule);"},{"lineNumber":32,"author":{"gitId":"kewenlok"},"content":"        modules.delete(geModule);"},{"lineNumber":33,"author":{"gitId":"kewenlok"},"content":"        assertEquals(0, modules.size());"},{"lineNumber":34,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":36,"author":{"gitId":"kewenlok"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"kewenlok"},"content":"    void getModules_emptyModuleList_success() {"},{"lineNumber":38,"author":{"gitId":"kewenlok"},"content":"        assertEquals(0, modules.size());"},{"lineNumber":39,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":41,"author":{"gitId":"kewenlok"},"content":"    @Test"},{"lineNumber":42,"author":{"gitId":"kewenlok"},"content":"    void size_moduleList_success() {"},{"lineNumber":43,"author":{"gitId":"kewenlok"},"content":"        assertEquals(0, modules.size());"},{"lineNumber":44,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"kewenlok"},"content":""},{"lineNumber":46,"author":{"gitId":"kewenlok"},"content":"    @Test"},{"lineNumber":47,"author":{"gitId":"kewenlok"},"content":"    void get_existingModule_success() throws ModuleNotFoundException, ExistingModuleException {"},{"lineNumber":48,"author":{"gitId":"kewenlok"},"content":"        ArrayList\u003cString\u003e preRequisites \u003d new ArrayList\u003c\u003e();"},{"lineNumber":49,"author":{"gitId":"kewenlok"},"content":"        GeModule geModule \u003d new GeModule(\"GER1000\", \"Quantitative Reasoning\","},{"lineNumber":50,"author":{"gitId":"kewenlok"},"content":"                4.0, \"taken\", \"A-\", preRequisites);"},{"lineNumber":51,"author":{"gitId":"kewenlok"},"content":"        modules.add(geModule);"},{"lineNumber":52,"author":{"gitId":"kewenlok"},"content":"        assertEquals(geModule, modules.getByCode(\"GER1000\"));"},{"lineNumber":53,"author":{"gitId":"kewenlok"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"kewenlok"},"content":"}"}],"authorContributionMap":{"kewenlok":54}},{"path":"src/test/java/seedu/igraduate/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xseh"},"content":"package seedu.igraduate;"},{"lineNumber":2,"author":{"gitId":"xseh"},"content":""},{"lineNumber":3,"author":{"gitId":"xseh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"xseh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":5,"author":{"gitId":"xseh"},"content":""},{"lineNumber":6,"author":{"gitId":"xseh"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"xseh"},"content":""},{"lineNumber":8,"author":{"gitId":"fupernova"},"content":"import seedu.igraduate.command.AddCommand;"},{"lineNumber":9,"author":{"gitId":"fupernova"},"content":"import seedu.igraduate.command.ListCommand;"},{"lineNumber":10,"author":{"gitId":"fupernova"},"content":"import seedu.igraduate.command.ProgressCommand;"},{"lineNumber":11,"author":{"gitId":"fupernova"},"content":"import seedu.igraduate.command.DoneCommand;"},{"lineNumber":12,"author":{"gitId":"fupernova"},"content":"import seedu.igraduate.command.DeleteCommand;"},{"lineNumber":13,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":14,"author":{"gitId":"fupernova"},"content":"import seedu.igraduate.exception.IncorrectParameterCountException;"},{"lineNumber":15,"author":{"gitId":"fupernova"},"content":"import seedu.igraduate.exception.InputNotNumberException;"},{"lineNumber":16,"author":{"gitId":"xseh"},"content":"import seedu.igraduate.exception.InvalidCommandException;"},{"lineNumber":17,"author":{"gitId":"fupernova"},"content":"import seedu.igraduate.exception.InvalidModuleTypeException;"},{"lineNumber":18,"author":{"gitId":"xseh"},"content":""},{"lineNumber":19,"author":{"gitId":"xseh"},"content":"public class ParserTest {"},{"lineNumber":20,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":21,"author":{"gitId":"xseh"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"xseh"},"content":"    void parseCommand_emptyCommand_exceptionThrown() {"},{"lineNumber":23,"author":{"gitId":"xseh"},"content":"        String line \u003d \"\";"},{"lineNumber":24,"author":{"gitId":"xseh"},"content":"        Exception exception \u003d assertThrows(InvalidCommandException.class, () -\u003e Parser.parseCommand(line));"},{"lineNumber":25,"author":{"gitId":"xseh"},"content":"        assertEquals(InvalidCommandException.INVALID_COMMAND_ERROR_MESSAGE, exception.getMessage());"},{"lineNumber":26,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":28,"author":{"gitId":"fupernova"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"xseh"},"content":"    void createAddCommand_appropriateParameters_success() "},{"lineNumber":30,"author":{"gitId":"xseh"},"content":"            throws InvalidCommandException, InvalidModuleTypeException,"},{"lineNumber":31,"author":{"gitId":"fupernova"},"content":"            InputNotNumberException, IncorrectParameterCountException {"},{"lineNumber":32,"author":{"gitId":"fupernova"},"content":"        String line \u003d \"add Programming Methodology -t core -mc 4 -c CS1010\";"},{"lineNumber":33,"author":{"gitId":"fupernova"},"content":"        assertEquals(AddCommand.class, Parser.parseCommand(line).getClass());"},{"lineNumber":34,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":36,"author":{"gitId":"fupernova"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"xseh"},"content":"    void createAddCommand_parametersWithSpacing_success() "},{"lineNumber":38,"author":{"gitId":"xseh"},"content":"            throws InvalidCommandException, InvalidModuleTypeException,"},{"lineNumber":39,"author":{"gitId":"fupernova"},"content":"            InputNotNumberException, IncorrectParameterCountException {"},{"lineNumber":40,"author":{"gitId":"fupernova"},"content":"        String line \u003d \"add Programming Methodology    -t      core       -mc      4      -c            CS1010\";"},{"lineNumber":41,"author":{"gitId":"fupernova"},"content":"        assertEquals(AddCommand.class, Parser.parseCommand(line).getClass());"},{"lineNumber":42,"author":{"gitId":"xseh"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":44,"author":{"gitId":"fupernova"},"content":"    @Test"},{"lineNumber":45,"author":{"gitId":"fupernova"},"content":"    void createAddCommand_tooManyParameters_exceptionThrown() {"},{"lineNumber":46,"author":{"gitId":"fupernova"},"content":"        String line \u003d \"Add Introduction to Information Security -t core -mc 4 -c CS2107 -n prefab sprout\";"},{"lineNumber":47,"author":{"gitId":"fupernova"},"content":"        Exception exception \u003d assertThrows(IncorrectParameterCountException.class,"},{"lineNumber":48,"author":{"gitId":"fupernova"},"content":"            () -\u003e Parser.parseCommand(line));"},{"lineNumber":49,"author":{"gitId":"xseh"},"content":"        assertEquals(IncorrectParameterCountException.INCORRECT_PARAMETER_COUNT_ERROR_MESSAGE, "},{"lineNumber":50,"author":{"gitId":"xseh"},"content":"                exception.getMessage());"},{"lineNumber":51,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":53,"author":{"gitId":"fupernova"},"content":"    @Test"},{"lineNumber":54,"author":{"gitId":"fupernova"},"content":"    void createAddCommand_tooFewParameters_exceptionThrown() {"},{"lineNumber":55,"author":{"gitId":"fupernova"},"content":"        String line \u003d \"Add Introduction to Information Security -t core -mc  -c CS2107\";"},{"lineNumber":56,"author":{"gitId":"fupernova"},"content":"        Exception exception \u003d assertThrows(IncorrectParameterCountException.class,"},{"lineNumber":57,"author":{"gitId":"fupernova"},"content":"            () -\u003e Parser.parseCommand(line));"},{"lineNumber":58,"author":{"gitId":"xseh"},"content":"        assertEquals(IncorrectParameterCountException.INCORRECT_PARAMETER_COUNT_ERROR_MESSAGE, "},{"lineNumber":59,"author":{"gitId":"xseh"},"content":"                exception.getMessage());"},{"lineNumber":60,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":62,"author":{"gitId":"fupernova"},"content":"    @Test"},{"lineNumber":63,"author":{"gitId":"xseh"},"content":"    void createAddCommand_invalidCredits_exceptionThrown() {"},{"lineNumber":64,"author":{"gitId":"xseh"},"content":"        String line \u003d \"Add Introduction to Information Security -t core -mc n -c CS2107\";"},{"lineNumber":65,"author":{"gitId":"xseh"},"content":"        Exception exception \u003d assertThrows(InputNotNumberException.class,"},{"lineNumber":66,"author":{"gitId":"xseh"},"content":"            () -\u003e Parser.parseCommand(line));"},{"lineNumber":67,"author":{"gitId":"xseh"},"content":"        assertEquals(InputNotNumberException.INPUT_NOT_NUMBER_ERROR_MESSAGE + \"Modular credits : -mc\", "},{"lineNumber":68,"author":{"gitId":"xseh"},"content":"                exception.getMessage());"},{"lineNumber":69,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":71,"author":{"gitId":"LJ-37"},"content":"    @Test"},{"lineNumber":72,"author":{"gitId":"xseh"},"content":"    void createDeleteCommand_appropriateParameters_success()"},{"lineNumber":73,"author":{"gitId":"xseh"},"content":"            throws InvalidCommandException, InvalidModuleTypeException, "},{"lineNumber":74,"author":{"gitId":"xseh"},"content":"            InputNotNumberException, IncorrectParameterCountException {"},{"lineNumber":75,"author":{"gitId":"fupernova"},"content":"        String line \u003d \"Delete CS2107\";"},{"lineNumber":76,"author":{"gitId":"fupernova"},"content":"        assertEquals(DeleteCommand.class, Parser.parseCommand(line).getClass());"},{"lineNumber":77,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":79,"author":{"gitId":"LJ-37"},"content":"    @Test"},{"lineNumber":80,"author":{"gitId":"fupernova"},"content":"    void createDeleteCommand_tooFewParameters_exceptionThrown() {"},{"lineNumber":81,"author":{"gitId":"LJ-37"},"content":"        String line \u003d \"Delete\";"},{"lineNumber":82,"author":{"gitId":"LJ-37"},"content":"        Exception exception \u003d assertThrows(IncorrectParameterCountException.class,"},{"lineNumber":83,"author":{"gitId":"xseh"},"content":"            () -\u003e Parser.parseCommand(line));"},{"lineNumber":84,"author":{"gitId":"xseh"},"content":"        assertEquals(IncorrectParameterCountException.INCORRECT_PARAMETER_COUNT_ERROR_MESSAGE, "},{"lineNumber":85,"author":{"gitId":"xseh"},"content":"                exception.getMessage());"},{"lineNumber":86,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":88,"author":{"gitId":"fupernova"},"content":"    @Test"},{"lineNumber":89,"author":{"gitId":"fupernova"},"content":"    void createDeleteCommand_extraFlag_exceptionThrown() {"},{"lineNumber":90,"author":{"gitId":"fupernova"},"content":"        String line \u003d \"Delete CS2106 -mc 4\";"},{"lineNumber":91,"author":{"gitId":"fupernova"},"content":"        Exception exception \u003d assertThrows(IncorrectParameterCountException.class,"},{"lineNumber":92,"author":{"gitId":"fupernova"},"content":"            () -\u003e Parser.parseCommand(line));"},{"lineNumber":93,"author":{"gitId":"xseh"},"content":"        assertEquals(IncorrectParameterCountException.INCORRECT_PARAMETER_COUNT_ERROR_MESSAGE, "},{"lineNumber":94,"author":{"gitId":"xseh"},"content":"                exception.getMessage());"},{"lineNumber":95,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":97,"author":{"gitId":"oscarlai1998"},"content":"    @Test"},{"lineNumber":98,"author":{"gitId":"fupernova"},"content":"    void createDoneCommand_appropriateParameters_success() throws InvalidCommandException,"},{"lineNumber":99,"author":{"gitId":"fupernova"},"content":"            InvalidModuleTypeException, InputNotNumberException, IncorrectParameterCountException {"},{"lineNumber":100,"author":{"gitId":"fupernova"},"content":"        String line \u003d \"done CS2107 -g A+\";"},{"lineNumber":101,"author":{"gitId":"fupernova"},"content":"        assertEquals(DoneCommand.class, Parser.parseCommand(line).getClass());"},{"lineNumber":102,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"oscarlai1998"},"content":""},{"lineNumber":104,"author":{"gitId":"oscarlai1998"},"content":"    @Test"},{"lineNumber":105,"author":{"gitId":"fupernova"},"content":"    void createDoneCommand_parametersWithSpacing_success() throws InvalidCommandException,"},{"lineNumber":106,"author":{"gitId":"fupernova"},"content":"            InvalidModuleTypeException, InputNotNumberException, IncorrectParameterCountException {"},{"lineNumber":107,"author":{"gitId":"fupernova"},"content":"        String line \u003d \"done      CS2107           -g                             A+\";"},{"lineNumber":108,"author":{"gitId":"fupernova"},"content":"        assertEquals(DoneCommand.class, Parser.parseCommand(line).getClass());"},{"lineNumber":109,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":111,"author":{"gitId":"fupernova"},"content":"    @Test"},{"lineNumber":112,"author":{"gitId":"xseh"},"content":"    void createDoneCommand_invalidParameter_exceptionThrown() {"},{"lineNumber":113,"author":{"gitId":"oscarlai1998"},"content":"        String line \u003d \"done\";"},{"lineNumber":114,"author":{"gitId":"oscarlai1998"},"content":"        Exception exception \u003d assertThrows(IncorrectParameterCountException.class,"},{"lineNumber":115,"author":{"gitId":"oscarlai1998"},"content":"            () -\u003e Parser.parseCommand(line));"},{"lineNumber":116,"author":{"gitId":"xseh"},"content":"        assertEquals(IncorrectParameterCountException.INCORRECT_PARAMETER_COUNT_ERROR_MESSAGE,"},{"lineNumber":117,"author":{"gitId":"xseh"},"content":"                exception.getMessage());"},{"lineNumber":118,"author":{"gitId":"oscarlai1998"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":120,"author":{"gitId":"fupernova"},"content":"    @Test"},{"lineNumber":121,"author":{"gitId":"fupernova"},"content":"    void createDoneCommand_tooFewParameters_exceptionThrown() {"},{"lineNumber":122,"author":{"gitId":"fupernova"},"content":"        String line \u003d \"done CS2107\";"},{"lineNumber":123,"author":{"gitId":"fupernova"},"content":"        Exception exception \u003d assertThrows(IncorrectParameterCountException.class,"},{"lineNumber":124,"author":{"gitId":"fupernova"},"content":"            () -\u003e Parser.parseCommand(line));"},{"lineNumber":125,"author":{"gitId":"xseh"},"content":"        assertEquals(IncorrectParameterCountException.INCORRECT_PARAMETER_COUNT_ERROR_MESSAGE, "},{"lineNumber":126,"author":{"gitId":"xseh"},"content":"                exception.getMessage());"},{"lineNumber":127,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":129,"author":{"gitId":"fupernova"},"content":"    @Test"},{"lineNumber":130,"author":{"gitId":"fupernova"},"content":"    void createProgressCommand_appropriateParameters_success() throws InvalidCommandException,"},{"lineNumber":131,"author":{"gitId":"fupernova"},"content":"            InvalidModuleTypeException, InputNotNumberException, IncorrectParameterCountException {"},{"lineNumber":132,"author":{"gitId":"fupernova"},"content":"        String line \u003d \"progress\";"},{"lineNumber":133,"author":{"gitId":"fupernova"},"content":"        assertEquals(ProgressCommand.class, Parser.parseCommand(line).getClass());"},{"lineNumber":134,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":136,"author":{"gitId":"fupernova"},"content":"    @Test"},{"lineNumber":137,"author":{"gitId":"fupernova"},"content":"    void createProgressCommand_extraFlag_exceptionThrown() {"},{"lineNumber":138,"author":{"gitId":"fupernova"},"content":"        String line \u003d \"progress -mc\";"},{"lineNumber":139,"author":{"gitId":"fupernova"},"content":"        Exception exception \u003d assertThrows(IncorrectParameterCountException.class,"},{"lineNumber":140,"author":{"gitId":"fupernova"},"content":"            () -\u003e Parser.parseCommand(line));"},{"lineNumber":141,"author":{"gitId":"xseh"},"content":"        assertEquals(IncorrectParameterCountException.INCORRECT_PARAMETER_COUNT_ERROR_MESSAGE, "},{"lineNumber":142,"author":{"gitId":"xseh"},"content":"                exception.getMessage());"},{"lineNumber":143,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":145,"author":{"gitId":"fupernova"},"content":"    @Test"},{"lineNumber":146,"author":{"gitId":"xseh"},"content":"    void createProgressCommand_tooManyParameters_exceptionThrown() {"},{"lineNumber":147,"author":{"gitId":"xseh"},"content":"        String line \u003d \"progress testing\";"},{"lineNumber":148,"author":{"gitId":"xseh"},"content":"        Exception exception \u003d assertThrows(IncorrectParameterCountException.class,"},{"lineNumber":149,"author":{"gitId":"xseh"},"content":"            () -\u003e Parser.parseCommand(line));"},{"lineNumber":150,"author":{"gitId":"xseh"},"content":"        assertEquals(IncorrectParameterCountException.INCORRECT_PARAMETER_COUNT_ERROR_MESSAGE, "},{"lineNumber":151,"author":{"gitId":"xseh"},"content":"                exception.getMessage());"},{"lineNumber":152,"author":{"gitId":"xseh"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"xseh"},"content":""},{"lineNumber":154,"author":{"gitId":"xseh"},"content":"    @Test"},{"lineNumber":155,"author":{"gitId":"xseh"},"content":"    void createListCommand_appropriateParameters_success() "},{"lineNumber":156,"author":{"gitId":"xseh"},"content":"            throws InvalidCommandException, InvalidModuleTypeException, "},{"lineNumber":157,"author":{"gitId":"xseh"},"content":"            InputNotNumberException, IncorrectParameterCountException {"},{"lineNumber":158,"author":{"gitId":"fupernova"},"content":"        String line \u003d \"list\";"},{"lineNumber":159,"author":{"gitId":"fupernova"},"content":"        assertEquals(ListCommand.class, Parser.parseCommand(line).getClass());"},{"lineNumber":160,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"fupernova"},"content":""},{"lineNumber":162,"author":{"gitId":"fupernova"},"content":"    @Test"},{"lineNumber":163,"author":{"gitId":"fupernova"},"content":"    void createListCommand_tooManyParameters_exception() {"},{"lineNumber":164,"author":{"gitId":"fupernova"},"content":"        String line \u003d \"list all\";"},{"lineNumber":165,"author":{"gitId":"fupernova"},"content":"        Exception exception \u003d assertThrows(IncorrectParameterCountException.class,"},{"lineNumber":166,"author":{"gitId":"fupernova"},"content":"            () -\u003e Parser.parseCommand(line));"},{"lineNumber":167,"author":{"gitId":"xseh"},"content":"        assertEquals(IncorrectParameterCountException.INCORRECT_PARAMETER_COUNT_ERROR_MESSAGE, "},{"lineNumber":168,"author":{"gitId":"xseh"},"content":"                exception.getMessage());"},{"lineNumber":169,"author":{"gitId":"xseh"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"xseh"},"content":""},{"lineNumber":171,"author":{"gitId":"xseh"},"content":"    @Test"},{"lineNumber":172,"author":{"gitId":"xseh"},"content":"    void createListCommand_extraFlag_exceptionThrown() {"},{"lineNumber":173,"author":{"gitId":"xseh"},"content":"        String line \u003d \"list -mc\";"},{"lineNumber":174,"author":{"gitId":"xseh"},"content":"        Exception exception \u003d assertThrows(IncorrectParameterCountException.class,"},{"lineNumber":175,"author":{"gitId":"xseh"},"content":"            () -\u003e Parser.parseCommand(line));"},{"lineNumber":176,"author":{"gitId":"xseh"},"content":"        assertEquals(IncorrectParameterCountException.INCORRECT_PARAMETER_COUNT_ERROR_MESSAGE, "},{"lineNumber":177,"author":{"gitId":"xseh"},"content":"                exception.getMessage());"},{"lineNumber":178,"author":{"gitId":"fupernova"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"xseh"},"content":"}"}],"authorContributionMap":{"fupernova":98,"LJ-37":4,"xseh":69,"oscarlai1998":8}}]
