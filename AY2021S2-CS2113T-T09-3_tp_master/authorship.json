[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":45,"author":{"gitId":"rageqqq"},"content":"    enableAssertions \u003d true"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"rageqqq":1,"-":46}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":"All-in-oneNUS is a **desktop application for making university life easier in NUS.** It has 4 different tools, and is "},{"lineNumber":6,"author":{"gitId":"rageqqq"},"content":"optimized for use via a Command Line Interface (CLI)."},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":8,"author":{"gitId":"rageqqq"},"content":"* Table of Contents"},{"lineNumber":9,"author":{"gitId":"rageqqq"},"content":"{:toc}"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Quick Start"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"{Give steps to get started quickly}"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed."},{"lineNumber":16,"author":{"gitId":"rageqqq"},"content":"2. Download the latest version of `Duke` from [here](https://github.com/AY2021S2-CS2113T-T09-3/tp/releases)."},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"rageqqq"},"content":"### Main Menu"},{"lineNumber":21,"author":{"gitId":"rageqqq"},"content":"Accesses the respective tool"},{"lineNumber":22,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":23,"author":{"gitId":"rageqqq"},"content":"Format: `[NUMBER]`"},{"lineNumber":24,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":25,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":26,"author":{"gitId":"rageqqq"},"content":"* Entering `1` directs you to the Team Planner"},{"lineNumber":27,"author":{"gitId":"rageqqq"},"content":"* Entering `2` directs you to the Module Planner"},{"lineNumber":28,"author":{"gitId":"rageqqq"},"content":"* Entering `3` directs you to the Cap Calculator"},{"lineNumber":29,"author":{"gitId":"rageqqq"},"content":"* Entering `4` directs you to the Food Recommendation app"},{"lineNumber":30,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":31,"author":{"gitId":"rageqqq"},"content":"###Team Planner"},{"lineNumber":32,"author":{"gitId":"rageqqq"},"content":"#### Set team leader"},{"lineNumber":33,"author":{"gitId":"rageqqq"},"content":"   Set the team member as the team leader"},{"lineNumber":34,"author":{"gitId":"rageqqq"},"content":"   Format:"},{"lineNumber":35,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":36,"author":{"gitId":"rageqqq"},"content":"#### Add team member"},{"lineNumber":37,"author":{"gitId":"rageqqq"},"content":"   Adds a team member to the team"},{"lineNumber":38,"author":{"gitId":"rageqqq"},"content":"#### Delete team member"},{"lineNumber":39,"author":{"gitId":"rageqqq"},"content":"   Deletes a team member from the team"},{"lineNumber":40,"author":{"gitId":"rageqqq"},"content":"#### Clear team"},{"lineNumber":41,"author":{"gitId":"rageqqq"},"content":"   Clears the members in the team"},{"lineNumber":42,"author":{"gitId":"rageqqq"},"content":"#### Show team"},{"lineNumber":43,"author":{"gitId":"rageqqq"},"content":"   Shows the current members in the team"},{"lineNumber":44,"author":{"gitId":"rageqqq"},"content":"#### Quit"},{"lineNumber":45,"author":{"gitId":"rageqqq"},"content":"   Quits the Team Planner interface"},{"lineNumber":46,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":47,"author":{"gitId":"rageqqq"},"content":"###Cap Calculator"},{"lineNumber":48,"author":{"gitId":"rageqqq"},"content":"####add"},{"lineNumber":49,"author":{"gitId":"rageqqq"},"content":"Enter the module code followed by your grade and then the MCs"},{"lineNumber":50,"author":{"gitId":"rageqqq"},"content":"Format: [Module Code] [Grade] [MCs]"},{"lineNumber":51,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":52,"author":{"gitId":"rageqqq"},"content":"Expected:"},{"lineNumber":53,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":54,"author":{"gitId":"rageqqq"},"content":"####delete"},{"lineNumber":55,"author":{"gitId":"rageqqq"},"content":"Enter delete first. The program will then prompt which module you want to delete. Enter the module"},{"lineNumber":56,"author":{"gitId":"rageqqq"},"content":"Format:"},{"lineNumber":57,"author":{"gitId":"rageqqq"},"content":"delete"},{"lineNumber":58,"author":{"gitId":"rageqqq"},"content":"[MODULE CODE]"},{"lineNumber":59,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":60,"author":{"gitId":"rageqqq"},"content":"####list"},{"lineNumber":61,"author":{"gitId":"rageqqq"},"content":"Lists out all modules you have for the semester"},{"lineNumber":62,"author":{"gitId":"rageqqq"},"content":"Format:"},{"lineNumber":63,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":64,"author":{"gitId":"rageqqq"},"content":"List"},{"lineNumber":65,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":66,"author":{"gitId":"rageqqq"},"content":"####edit"},{"lineNumber":67,"author":{"gitId":"rageqqq"},"content":"Enter edit then enter the Module which you want the grade to be changed"},{"lineNumber":68,"author":{"gitId":"rageqqq"},"content":"Format:"},{"lineNumber":69,"author":{"gitId":"rageqqq"},"content":"edit"},{"lineNumber":70,"author":{"gitId":"rageqqq"},"content":"[Module Code]"},{"lineNumber":71,"author":{"gitId":"rageqqq"},"content":"[new grade]"},{"lineNumber":72,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":73,"author":{"gitId":"rageqqq"},"content":"####calculate"},{"lineNumber":74,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":75,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":76,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":77,"author":{"gitId":"rageqqq"},"content":"###Module Planner"},{"lineNumber":78,"author":{"gitId":"rageqqq"},"content":"####module"},{"lineNumber":79,"author":{"gitId":"rageqqq"},"content":"Enter the module code follow by the number of slots available."},{"lineNumber":80,"author":{"gitId":"rageqqq"},"content":"Format: module [module code],[slots]"},{"lineNumber":81,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":82,"author":{"gitId":"rageqqq"},"content":"####student"},{"lineNumber":83,"author":{"gitId":"rageqqq"},"content":"Enter the student information and the rank they want to put for bidding the module. Enter [true]/[false] for [graduation requirement] to indicate whether the module is required for graduation."},{"lineNumber":84,"author":{"gitId":"rageqqq"},"content":"Format: student [name],[year],[graduation requirement],[rank]"},{"lineNumber":85,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":86,"author":{"gitId":"rageqqq"},"content":"####list"},{"lineNumber":87,"author":{"gitId":"rageqqq"},"content":"Format: list"},{"lineNumber":88,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":89,"author":{"gitId":"rageqqq"},"content":"####recommendation"},{"lineNumber":90,"author":{"gitId":"rageqqq"},"content":"Format: recommendation [name]"},{"lineNumber":91,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":92,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":93,"author":{"gitId":"rageqqq"},"content":"### Food Recommendation app"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"rageqqq"},"content":"#### "},{"lineNumber":96,"author":{"gitId":"-"},"content":"Adds a new item to the list of todo items."},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"Format: `todo n/TODO_NAME d/DEADLINE`"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"* The `DEADLINE` can be in a natural language format."},{"lineNumber":101,"author":{"gitId":"-"},"content":"* The `TODO_NAME` cannot contain punctuation.  "},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"`todo n/Write the rest of the User Guide d/next week`"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"`todo n/Refactor the User Guide to remove passive voice d/13/04/2020`"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"## FAQ"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? "},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"**A**: {your answer here}"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"## Command Summary"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"{Give a \u0027cheat sheet\u0027 of commands here}"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"* Add todo `todo n/TODO_NAME d/DEADLINE`"}],"authorContributionMap":{"rageqqq":81,"-":38}},{"path":"src/main/java/seedu/allinonenus/AllinOneNus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus;"},{"lineNumber":2,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":3,"author":{"gitId":"soepaingzaw"},"content":"public class AllinOneNus {"},{"lineNumber":4,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":5,"author":{"gitId":"soepaingzaw"},"content":"    public static void main(String[] args) {"},{"lineNumber":6,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":7,"author":{"gitId":"soepaingzaw"},"content":"        assert false : \"assertion successful\";"},{"lineNumber":8,"author":{"gitId":"soepaingzaw"},"content":"        new OverallParser().run();"},{"lineNumber":9,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":11,"author":{"gitId":"soepaingzaw"},"content":"}"}],"authorContributionMap":{"soepaingzaw":11}},{"path":"src/main/java/seedu/allinonenus/OverallParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus;"},{"lineNumber":2,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":3,"author":{"gitId":"soepaingzaw"},"content":"import seedu.allinonenus.capcalculatorclasses.CapCalculator;"},{"lineNumber":4,"author":{"gitId":"soepaingzaw"},"content":"import seedu.allinonenus.foodstore.FoodRecommendation;"},{"lineNumber":5,"author":{"gitId":"soepaingzaw"},"content":"import seedu.allinonenus.moduleplanner.ModulePlanner;"},{"lineNumber":6,"author":{"gitId":"soepaingzaw"},"content":"import seedu.allinonenus.teamplannerclasses.TeamPlanner;"},{"lineNumber":7,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":8,"author":{"gitId":"soepaingzaw"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":10,"author":{"gitId":"soepaingzaw"},"content":"public class OverallParser {"},{"lineNumber":11,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":12,"author":{"gitId":"soepaingzaw"},"content":"    public OverallParser() {"},{"lineNumber":13,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":14,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":16,"author":{"gitId":"soepaingzaw"},"content":"    public void run() {"},{"lineNumber":17,"author":{"gitId":"soepaingzaw"},"content":"        requestForFeatureMode();"},{"lineNumber":18,"author":{"gitId":"rageqqq"},"content":"        displayExitMessage();"},{"lineNumber":19,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":21,"author":{"gitId":"rageqqq"},"content":"    public void displayExitMessage() {"},{"lineNumber":22,"author":{"gitId":"rageqqq"},"content":"        System.out.println(\"Thank you for using All-in-oneNUS, we hope to see you again!\");"},{"lineNumber":23,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":25,"author":{"gitId":"soepaingzaw"},"content":"    void greetUserAndDisplayFeatures() {"},{"lineNumber":26,"author":{"gitId":"soepaingzaw"},"content":"        System.out.print(\"Welcome to All-in-OneNUS app!\\n\");"},{"lineNumber":27,"author":{"gitId":"soepaingzaw"},"content":"        System.out.print("},{"lineNumber":28,"author":{"gitId":"soepaingzaw"},"content":"                \"Press 1 to access Team Planner\\n\" +"},{"lineNumber":29,"author":{"gitId":"fangxinjia0203"},"content":"                        \"Press 2 to access Cap Calculator\\n\" +"},{"lineNumber":30,"author":{"gitId":"fangxinjia0203"},"content":"                        \"Press 3 to access Module Planner\\n\" +"},{"lineNumber":31,"author":{"gitId":"soepaingzaw"},"content":"                        \"Press 4 to access Food Recommendation app\\n\");"},{"lineNumber":32,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":34,"author":{"gitId":"soepaingzaw"},"content":"    void requestForFeatureMode() {"},{"lineNumber":35,"author":{"gitId":"soepaingzaw"},"content":"        while (true) {"},{"lineNumber":36,"author":{"gitId":"rageqqq"},"content":"            greetUserAndDisplayFeatures();"},{"lineNumber":37,"author":{"gitId":"soepaingzaw"},"content":"            Scanner choice \u003d new Scanner(System.in);"},{"lineNumber":38,"author":{"gitId":"soepaingzaw"},"content":"            String chosen \u003d choice.nextLine();"},{"lineNumber":39,"author":{"gitId":"soepaingzaw"},"content":"            switch (chosen) {"},{"lineNumber":40,"author":{"gitId":"rageqqq"},"content":"            case \"bye\":"},{"lineNumber":41,"author":{"gitId":"rageqqq"},"content":"                return;"},{"lineNumber":42,"author":{"gitId":"soepaingzaw"},"content":"            case \"1\":"},{"lineNumber":43,"author":{"gitId":"douglaslewpc"},"content":"                new TeamPlanner().run();"},{"lineNumber":44,"author":{"gitId":"soepaingzaw"},"content":"                break;"},{"lineNumber":45,"author":{"gitId":"soepaingzaw"},"content":"            case \"2\":"},{"lineNumber":46,"author":{"gitId":"soepaingzaw"},"content":"                new CapCalculator().run();"},{"lineNumber":47,"author":{"gitId":"soepaingzaw"},"content":"                break;"},{"lineNumber":48,"author":{"gitId":"soepaingzaw"},"content":"            case \"3\":"},{"lineNumber":49,"author":{"gitId":"fangxinjia0203"},"content":"               new ModulePlanner().run();"},{"lineNumber":50,"author":{"gitId":"soepaingzaw"},"content":"                break;"},{"lineNumber":51,"author":{"gitId":"soepaingzaw"},"content":"            case \"4\":"},{"lineNumber":52,"author":{"gitId":"rageqqq"},"content":"                new FoodRecommendation().run();"},{"lineNumber":53,"author":{"gitId":"soepaingzaw"},"content":"                break;"},{"lineNumber":54,"author":{"gitId":"soepaingzaw"},"content":"            default:"},{"lineNumber":55,"author":{"gitId":"soepaingzaw"},"content":"                System.out.print(\"Invalid Try again!\\n\");//replace this line with exception in the future"},{"lineNumber":56,"author":{"gitId":"soepaingzaw"},"content":"                break;"},{"lineNumber":57,"author":{"gitId":"soepaingzaw"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"soepaingzaw"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"soepaingzaw"},"content":"}"}],"authorContributionMap":{"douglaslewpc":1,"rageqqq":9,"fangxinjia0203":5,"soepaingzaw":45}},{"path":"src/main/java/seedu/allinonenus/capcalculatorclasses/CapCalculator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus.capcalculatorclasses;"},{"lineNumber":2,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":3,"author":{"gitId":"soepaingzaw"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"soepaingzaw"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"soepaingzaw"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":7,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":8,"author":{"gitId":"soepaingzaw"},"content":"public class CapCalculator {"},{"lineNumber":9,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":10,"author":{"gitId":"soepaingzaw"},"content":"    private static final String filepath \u003d \"ModuleStorage.txt\";"},{"lineNumber":11,"author":{"gitId":"soepaingzaw"},"content":"    private static ModuleStorage storage \u003d new ModuleStorage(filepath);"},{"lineNumber":12,"author":{"gitId":"soepaingzaw"},"content":"    ModuleList moduleList;"},{"lineNumber":13,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":14,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":15,"author":{"gitId":"soepaingzaw"},"content":"    public static void requestForModule() {"},{"lineNumber":16,"author":{"gitId":"soepaingzaw"},"content":"        System.out.print(\"Welcome to CAP Calculator!\\n\");"},{"lineNumber":17,"author":{"gitId":"soepaingzaw"},"content":"        System.out.print(\"Press Enter to enter another module. Enter an empty line when you are done\\n\");"},{"lineNumber":18,"author":{"gitId":"soepaingzaw"},"content":"        System.out.print(\"Please input your modules in the following format:\\n\");"},{"lineNumber":19,"author":{"gitId":"soepaingzaw"},"content":"        System.out.print(\"[Module Code] [Grade] [MCs]\\n\");"},{"lineNumber":20,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":21,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":23,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":24,"author":{"gitId":"soepaingzaw"},"content":"    public void readModuleInputs() {"},{"lineNumber":25,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":26,"author":{"gitId":"soepaingzaw"},"content":"        while (true) {"},{"lineNumber":27,"author":{"gitId":"soepaingzaw"},"content":"            Scanner scan \u003d new Scanner(System.in);"},{"lineNumber":28,"author":{"gitId":"soepaingzaw"},"content":"            String command;"},{"lineNumber":29,"author":{"gitId":"soepaingzaw"},"content":"            command \u003d scan.nextLine();"},{"lineNumber":30,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":31,"author":{"gitId":"soepaingzaw"},"content":"            if (command.length() \u003d\u003d 0) {"},{"lineNumber":32,"author":{"gitId":"soepaingzaw"},"content":"                break;"},{"lineNumber":33,"author":{"gitId":"soepaingzaw"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":35,"author":{"gitId":"soepaingzaw"},"content":"            switch (command) {"},{"lineNumber":36,"author":{"gitId":"soepaingzaw"},"content":"            case \"list\":"},{"lineNumber":37,"author":{"gitId":"soepaingzaw"},"content":"                System.out.print(\"[MODULES] [GRADEs] [MCs]\\n\");"},{"lineNumber":38,"author":{"gitId":"soepaingzaw"},"content":"                for (int i \u003d 0; i \u003c moduleList.size(); i++) {"},{"lineNumber":39,"author":{"gitId":"soepaingzaw"},"content":"                    System.out.printf(\"[%-7s]   [%-2s]    [%1d]%n\","},{"lineNumber":40,"author":{"gitId":"soepaingzaw"},"content":"                            moduleList.get(i).moduleCode, moduleList.get(i).grade, moduleList.get(i).mcs);"},{"lineNumber":41,"author":{"gitId":"soepaingzaw"},"content":"                }"},{"lineNumber":42,"author":{"gitId":"soepaingzaw"},"content":"                break;"},{"lineNumber":43,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":44,"author":{"gitId":"soepaingzaw"},"content":"            case \"calculate\":"},{"lineNumber":45,"author":{"gitId":"soepaingzaw"},"content":"                System.out.printf(\"%.2f is my CAP\\n\", moduleList.calculate());"},{"lineNumber":46,"author":{"gitId":"soepaingzaw"},"content":"                break;"},{"lineNumber":47,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":48,"author":{"gitId":"soepaingzaw"},"content":"            case \"delete\":"},{"lineNumber":49,"author":{"gitId":"soepaingzaw"},"content":"                System.out.print(\"Which module do you want to delete? Enter the module code:\\n\");"},{"lineNumber":50,"author":{"gitId":"soepaingzaw"},"content":"                String moduleToDelete \u003d scan.nextLine();"},{"lineNumber":51,"author":{"gitId":"soepaingzaw"},"content":"                moduleList.delete(moduleToDelete);"},{"lineNumber":52,"author":{"gitId":"soepaingzaw"},"content":"                System.out.print(\"Deleted \" + moduleToDelete + \"\\n\");"},{"lineNumber":53,"author":{"gitId":"soepaingzaw"},"content":"                break;"},{"lineNumber":54,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":55,"author":{"gitId":"soepaingzaw"},"content":"            case \"edit\":"},{"lineNumber":56,"author":{"gitId":"soepaingzaw"},"content":"                int index;"},{"lineNumber":57,"author":{"gitId":"soepaingzaw"},"content":"                System.out.print(\"Which module do you want to edit? Enter the module code:\\n\");"},{"lineNumber":58,"author":{"gitId":"soepaingzaw"},"content":"                String moduleToEdit \u003d scan.nextLine();"},{"lineNumber":59,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":60,"author":{"gitId":"soepaingzaw"},"content":"                System.out.print(\"Enter your desired grade:\\n\");"},{"lineNumber":61,"author":{"gitId":"soepaingzaw"},"content":"                String newGrade \u003d scan.nextLine();"},{"lineNumber":62,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":63,"author":{"gitId":"soepaingzaw"},"content":"                index \u003d moduleList.edit(moduleToEdit, newGrade);"},{"lineNumber":64,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":65,"author":{"gitId":"soepaingzaw"},"content":"                System.out.print(\"Edited. New data:\\n\" + moduleList.get(index) + \"\\n\");"},{"lineNumber":66,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":67,"author":{"gitId":"soepaingzaw"},"content":"                break;"},{"lineNumber":68,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":69,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":70,"author":{"gitId":"soepaingzaw"},"content":"            default:"},{"lineNumber":71,"author":{"gitId":"soepaingzaw"},"content":"                String[] data \u003d command.split(\" \");"},{"lineNumber":72,"author":{"gitId":"soepaingzaw"},"content":"                ModuleData modules \u003d new ModuleData(data[0], data[1], Integer.parseInt(data[2]));"},{"lineNumber":73,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":74,"author":{"gitId":"soepaingzaw"},"content":"                moduleList.add(modules);"},{"lineNumber":75,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":76,"author":{"gitId":"soepaingzaw"},"content":"                System.out.print(\"Added \" + modules.moduleCode + \"\\n\");"},{"lineNumber":77,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":78,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":79,"author":{"gitId":"soepaingzaw"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":81,"author":{"gitId":"soepaingzaw"},"content":"            try {"},{"lineNumber":82,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":83,"author":{"gitId":"soepaingzaw"},"content":"                storage.writeToFile(filepath, moduleList);"},{"lineNumber":84,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":85,"author":{"gitId":"soepaingzaw"},"content":"            } catch (FileNotFoundException e) {"},{"lineNumber":86,"author":{"gitId":"soepaingzaw"},"content":"                storage.fileDoesntExist();"},{"lineNumber":87,"author":{"gitId":"soepaingzaw"},"content":"            } catch (IOException e) {"},{"lineNumber":88,"author":{"gitId":"soepaingzaw"},"content":"                System.out.print(\"File Error\\n\");"},{"lineNumber":89,"author":{"gitId":"soepaingzaw"},"content":"            }"},{"lineNumber":90,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":91,"author":{"gitId":"soepaingzaw"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"soepaingzaw"},"content":"        System.out.print(\"Bye See ya!\\n\");"},{"lineNumber":93,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":95,"author":{"gitId":"soepaingzaw"},"content":"    public CapCalculator() {"},{"lineNumber":96,"author":{"gitId":"soepaingzaw"},"content":"        requestForModule();"},{"lineNumber":97,"author":{"gitId":"soepaingzaw"},"content":"        storage \u003d new ModuleStorage(filepath);"},{"lineNumber":98,"author":{"gitId":"soepaingzaw"},"content":"        try {"},{"lineNumber":99,"author":{"gitId":"soepaingzaw"},"content":"            moduleList \u003d new ModuleList(storage.load());"},{"lineNumber":100,"author":{"gitId":"soepaingzaw"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":101,"author":{"gitId":"soepaingzaw"},"content":"            System.out.print(\"Creating new storage for you\\n\");"},{"lineNumber":102,"author":{"gitId":"soepaingzaw"},"content":"            moduleList \u003d new ModuleList();"},{"lineNumber":103,"author":{"gitId":"soepaingzaw"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":105,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":107,"author":{"gitId":"soepaingzaw"},"content":"    public void run() {"},{"lineNumber":108,"author":{"gitId":"soepaingzaw"},"content":"        readModuleInputs();"},{"lineNumber":109,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":110,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":112,"author":{"gitId":"soepaingzaw"},"content":"}"}],"authorContributionMap":{"soepaingzaw":112}},{"path":"src/main/java/seedu/allinonenus/capcalculatorclasses/CapCalculatorExceptions.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus.capcalculatorclasses;"},{"lineNumber":2,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":3,"author":{"gitId":"soepaingzaw"},"content":"public class CapCalculatorExceptions extends Exception {"},{"lineNumber":4,"author":{"gitId":"soepaingzaw"},"content":"}"}],"authorContributionMap":{"soepaingzaw":4}},{"path":"src/main/java/seedu/allinonenus/capcalculatorclasses/ModuleData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus.capcalculatorclasses;"},{"lineNumber":2,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":3,"author":{"gitId":"soepaingzaw"},"content":"public class ModuleData {"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"soepaingzaw"},"content":"    public String moduleCode;"},{"lineNumber":7,"author":{"gitId":"soepaingzaw"},"content":"    public String grade;"},{"lineNumber":8,"author":{"gitId":"soepaingzaw"},"content":"    public int mcs;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"soepaingzaw"},"content":"    public ModuleData(String moduleCode, String grade, int mcs) {"},{"lineNumber":11,"author":{"gitId":"soepaingzaw"},"content":"        this.moduleCode \u003d moduleCode;"},{"lineNumber":12,"author":{"gitId":"soepaingzaw"},"content":"        this.grade \u003d grade;"},{"lineNumber":13,"author":{"gitId":"soepaingzaw"},"content":"        this.mcs \u003d mcs;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"soepaingzaw"},"content":"    public void gradeChange(String newGrade) {"},{"lineNumber":18,"author":{"gitId":"soepaingzaw"},"content":"        this.grade \u003d newGrade;"},{"lineNumber":19,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"soepaingzaw"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"soepaingzaw"},"content":"        return \"[\" + moduleCode + \"] \" + \"[\" + grade + \"] \""},{"lineNumber":24,"author":{"gitId":"soepaingzaw"},"content":"                + \"[\" + mcs + \"]\\n\";"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"soepaingzaw"},"content":"    public String fileFormat() {"},{"lineNumber":28,"author":{"gitId":"soepaingzaw"},"content":"        return moduleCode + \"|\" + grade + \"|\" + mcs + \"\\n\";"},{"lineNumber":29,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":31,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"soepaingzaw":22,"-":10}},{"path":"src/main/java/seedu/allinonenus/capcalculatorclasses/ModuleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus.capcalculatorclasses;"},{"lineNumber":2,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":3,"author":{"gitId":"soepaingzaw"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":5,"author":{"gitId":"soepaingzaw"},"content":"public class ModuleList {"},{"lineNumber":6,"author":{"gitId":"soepaingzaw"},"content":"    protected ArrayList\u003cModuleData\u003e moduleList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":7,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":8,"author":{"gitId":"soepaingzaw"},"content":"    public ModuleList() {"},{"lineNumber":9,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":10,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":12,"author":{"gitId":"soepaingzaw"},"content":"    public ModuleList(ArrayList\u003cModuleData\u003e moduleList) {"},{"lineNumber":13,"author":{"gitId":"soepaingzaw"},"content":"        this.moduleList \u003d moduleList;"},{"lineNumber":14,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":16,"author":{"gitId":"soepaingzaw"},"content":"    public void add(ModuleData moduleData) {"},{"lineNumber":17,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":18,"author":{"gitId":"soepaingzaw"},"content":"        moduleList.add(moduleData);"},{"lineNumber":19,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":21,"author":{"gitId":"soepaingzaw"},"content":"    public int size() {"},{"lineNumber":22,"author":{"gitId":"soepaingzaw"},"content":"        return moduleList.size();"},{"lineNumber":23,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":25,"author":{"gitId":"soepaingzaw"},"content":"    public ModuleData get(int index) {"},{"lineNumber":26,"author":{"gitId":"soepaingzaw"},"content":"        return moduleList.get(index);"},{"lineNumber":27,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":29,"author":{"gitId":"soepaingzaw"},"content":"    public void delete(String moduleName) {"},{"lineNumber":30,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":31,"author":{"gitId":"soepaingzaw"},"content":"        for (int i \u003d 0; i \u003c moduleList.size(); i++) {"},{"lineNumber":32,"author":{"gitId":"soepaingzaw"},"content":"            String moduleToRemove \u003d moduleList.get(i).moduleCode;"},{"lineNumber":33,"author":{"gitId":"soepaingzaw"},"content":"            if (moduleToRemove.equals(moduleName)) {"},{"lineNumber":34,"author":{"gitId":"soepaingzaw"},"content":"                moduleList.remove(moduleList.get(i));"},{"lineNumber":35,"author":{"gitId":"soepaingzaw"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"soepaingzaw"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":38,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":40,"author":{"gitId":"soepaingzaw"},"content":"    public int edit(String moduleName, String newGrade) {"},{"lineNumber":41,"author":{"gitId":"soepaingzaw"},"content":"        int i;"},{"lineNumber":42,"author":{"gitId":"soepaingzaw"},"content":"        for (i \u003d 0; i \u003c moduleList.size(); i++) {"},{"lineNumber":43,"author":{"gitId":"soepaingzaw"},"content":"            String moduleToEdit \u003d moduleList.get(i).moduleCode;"},{"lineNumber":44,"author":{"gitId":"soepaingzaw"},"content":"            if (moduleToEdit.equals(moduleName)) {"},{"lineNumber":45,"author":{"gitId":"soepaingzaw"},"content":"                moduleList.get(i).gradeChange(newGrade);"},{"lineNumber":46,"author":{"gitId":"soepaingzaw"},"content":"                break;"},{"lineNumber":47,"author":{"gitId":"soepaingzaw"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"soepaingzaw"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"soepaingzaw"},"content":"        return i;"},{"lineNumber":50,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":51,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":53,"author":{"gitId":"soepaingzaw"},"content":"    public double calculate() {"},{"lineNumber":54,"author":{"gitId":"soepaingzaw"},"content":"        double cap;"},{"lineNumber":55,"author":{"gitId":"soepaingzaw"},"content":"        int summationOfMCs \u003d 0;"},{"lineNumber":56,"author":{"gitId":"soepaingzaw"},"content":"        double summationOfGradeTimesMCs \u003d 0.0;"},{"lineNumber":57,"author":{"gitId":"soepaingzaw"},"content":"        boolean isNotSUmod;"},{"lineNumber":58,"author":{"gitId":"soepaingzaw"},"content":"        boolean isNotPassFailMod;"},{"lineNumber":59,"author":{"gitId":"soepaingzaw"},"content":"        String score;"},{"lineNumber":60,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":61,"author":{"gitId":"soepaingzaw"},"content":"        for (ModuleData capCalculator : moduleList) {"},{"lineNumber":62,"author":{"gitId":"soepaingzaw"},"content":"            score \u003d capCalculator.grade;"},{"lineNumber":63,"author":{"gitId":"soepaingzaw"},"content":"            summationOfGradeTimesMCs +\u003d gradesToPoints(score) * capCalculator.mcs;"},{"lineNumber":64,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":65,"author":{"gitId":"soepaingzaw"},"content":"            isNotSUmod \u003d !score.equals(\"S\") \u0026\u0026 !score.equals(\"U\");"},{"lineNumber":66,"author":{"gitId":"soepaingzaw"},"content":"            isNotPassFailMod \u003d !score.equals(\"CS\") \u0026\u0026 !score.equals(\"CU\");"},{"lineNumber":67,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":68,"author":{"gitId":"soepaingzaw"},"content":"            if (isNotPassFailMod \u0026\u0026 isNotSUmod) {"},{"lineNumber":69,"author":{"gitId":"soepaingzaw"},"content":"                summationOfMCs +\u003d capCalculator.mcs;"},{"lineNumber":70,"author":{"gitId":"soepaingzaw"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"soepaingzaw"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":73,"author":{"gitId":"soepaingzaw"},"content":"        cap \u003d summationOfGradeTimesMCs / summationOfMCs;"},{"lineNumber":74,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":75,"author":{"gitId":"soepaingzaw"},"content":"        return cap;"},{"lineNumber":76,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":78,"author":{"gitId":"soepaingzaw"},"content":"    public double gradesToPoints(String letterGrade) {"},{"lineNumber":79,"author":{"gitId":"soepaingzaw"},"content":"        double points;"},{"lineNumber":80,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":81,"author":{"gitId":"soepaingzaw"},"content":"        switch (letterGrade) {"},{"lineNumber":82,"author":{"gitId":"soepaingzaw"},"content":"        case \"A+\":"},{"lineNumber":83,"author":{"gitId":"soepaingzaw"},"content":"        case \"A\":"},{"lineNumber":84,"author":{"gitId":"soepaingzaw"},"content":"            points \u003d 5.0;"},{"lineNumber":85,"author":{"gitId":"soepaingzaw"},"content":"            break;"},{"lineNumber":86,"author":{"gitId":"soepaingzaw"},"content":"        case \"A-\":"},{"lineNumber":87,"author":{"gitId":"soepaingzaw"},"content":"            points \u003d 4.5;"},{"lineNumber":88,"author":{"gitId":"soepaingzaw"},"content":"            break;"},{"lineNumber":89,"author":{"gitId":"soepaingzaw"},"content":"        case \"B+\":"},{"lineNumber":90,"author":{"gitId":"soepaingzaw"},"content":"            points \u003d 4.0;"},{"lineNumber":91,"author":{"gitId":"soepaingzaw"},"content":"            break;"},{"lineNumber":92,"author":{"gitId":"soepaingzaw"},"content":"        case \"B\":"},{"lineNumber":93,"author":{"gitId":"soepaingzaw"},"content":"            points \u003d 3.5;"},{"lineNumber":94,"author":{"gitId":"soepaingzaw"},"content":"            break;"},{"lineNumber":95,"author":{"gitId":"soepaingzaw"},"content":"        case \"B-\":"},{"lineNumber":96,"author":{"gitId":"soepaingzaw"},"content":"            points \u003d 3.0;"},{"lineNumber":97,"author":{"gitId":"soepaingzaw"},"content":"            break;"},{"lineNumber":98,"author":{"gitId":"soepaingzaw"},"content":"        case \"C+\":"},{"lineNumber":99,"author":{"gitId":"soepaingzaw"},"content":"            points \u003d 2.5;"},{"lineNumber":100,"author":{"gitId":"soepaingzaw"},"content":"            break;"},{"lineNumber":101,"author":{"gitId":"soepaingzaw"},"content":"        case \"C\":"},{"lineNumber":102,"author":{"gitId":"soepaingzaw"},"content":"            points \u003d 2.0;"},{"lineNumber":103,"author":{"gitId":"soepaingzaw"},"content":"            break;"},{"lineNumber":104,"author":{"gitId":"soepaingzaw"},"content":"        case \"D+\":"},{"lineNumber":105,"author":{"gitId":"soepaingzaw"},"content":"            points \u003d 1.5;"},{"lineNumber":106,"author":{"gitId":"soepaingzaw"},"content":"            break;"},{"lineNumber":107,"author":{"gitId":"soepaingzaw"},"content":"        case \"D\":"},{"lineNumber":108,"author":{"gitId":"soepaingzaw"},"content":"            points \u003d 1.0;"},{"lineNumber":109,"author":{"gitId":"soepaingzaw"},"content":"            break;"},{"lineNumber":110,"author":{"gitId":"soepaingzaw"},"content":"        default:"},{"lineNumber":111,"author":{"gitId":"soepaingzaw"},"content":"            points \u003d 0.0;"},{"lineNumber":112,"author":{"gitId":"soepaingzaw"},"content":"            break;"},{"lineNumber":113,"author":{"gitId":"soepaingzaw"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":115,"author":{"gitId":"soepaingzaw"},"content":"        return points;"},{"lineNumber":116,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":118,"author":{"gitId":"soepaingzaw"},"content":"    public String printString() {"},{"lineNumber":119,"author":{"gitId":"soepaingzaw"},"content":"        StringBuilder list \u003d new StringBuilder();"},{"lineNumber":120,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":121,"author":{"gitId":"soepaingzaw"},"content":"        for (ModuleData moduleData : moduleList) {"},{"lineNumber":122,"author":{"gitId":"soepaingzaw"},"content":"            list.append(moduleData.fileFormat());"},{"lineNumber":123,"author":{"gitId":"soepaingzaw"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"soepaingzaw"},"content":"        return list.toString();"},{"lineNumber":125,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":127,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":128,"author":{"gitId":"soepaingzaw"},"content":"}"}],"authorContributionMap":{"soepaingzaw":128}},{"path":"src/main/java/seedu/allinonenus/capcalculatorclasses/ModuleStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus.capcalculatorclasses;"},{"lineNumber":2,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":3,"author":{"gitId":"soepaingzaw"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":5,"author":{"gitId":"soepaingzaw"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":6,"author":{"gitId":"soepaingzaw"},"content":"import java.io.FileWriter;"},{"lineNumber":7,"author":{"gitId":"soepaingzaw"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"soepaingzaw"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"soepaingzaw"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":11,"author":{"gitId":"soepaingzaw"},"content":"public class ModuleStorage {"},{"lineNumber":12,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":13,"author":{"gitId":"soepaingzaw"},"content":"    public String storageFilePath;"},{"lineNumber":14,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":15,"author":{"gitId":"soepaingzaw"},"content":"    public ModuleStorage(String storageFilePath) {"},{"lineNumber":16,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":17,"author":{"gitId":"soepaingzaw"},"content":"        this.storageFilePath \u003d storageFilePath;"},{"lineNumber":18,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":19,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":21,"author":{"gitId":"soepaingzaw"},"content":"    public ArrayList\u003cModuleData\u003e load() throws FileNotFoundException {"},{"lineNumber":22,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":23,"author":{"gitId":"soepaingzaw"},"content":"        ArrayList\u003cModuleData\u003e moduleList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":24,"author":{"gitId":"soepaingzaw"},"content":"        ModuleData modules;"},{"lineNumber":25,"author":{"gitId":"soepaingzaw"},"content":"        File f \u003d new File(storageFilePath);"},{"lineNumber":26,"author":{"gitId":"soepaingzaw"},"content":"        Scanner scan \u003d new Scanner(f);"},{"lineNumber":27,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":28,"author":{"gitId":"soepaingzaw"},"content":"        while (scan.hasNext()) {"},{"lineNumber":29,"author":{"gitId":"soepaingzaw"},"content":"            String textString \u003d scan.nextLine();"},{"lineNumber":30,"author":{"gitId":"soepaingzaw"},"content":"            String[] textData \u003d textString.split(\"\\\\|\");"},{"lineNumber":31,"author":{"gitId":"soepaingzaw"},"content":"            modules \u003d new ModuleData(textData[0], textData[1], Integer.parseInt(textData[2]));"},{"lineNumber":32,"author":{"gitId":"soepaingzaw"},"content":"            moduleList.add(modules);"},{"lineNumber":33,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":34,"author":{"gitId":"soepaingzaw"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":36,"author":{"gitId":"soepaingzaw"},"content":"        return moduleList;"},{"lineNumber":37,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":39,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":40,"author":{"gitId":"soepaingzaw"},"content":"    public void writeToFile(String storageFilePath, ModuleList moduleList) throws IOException {"},{"lineNumber":41,"author":{"gitId":"soepaingzaw"},"content":"        FileWriter fw \u003d new FileWriter(storageFilePath);"},{"lineNumber":42,"author":{"gitId":"soepaingzaw"},"content":"        fw.write(moduleList.printString());"},{"lineNumber":43,"author":{"gitId":"soepaingzaw"},"content":"        fw.close();"},{"lineNumber":44,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":46,"author":{"gitId":"soepaingzaw"},"content":"    public void fileDoesntExist() {"},{"lineNumber":47,"author":{"gitId":"soepaingzaw"},"content":"        System.out.print(\"File is not present. Creating a new file for you\\n\");"},{"lineNumber":48,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":50,"author":{"gitId":"soepaingzaw"},"content":"}"},{"lineNumber":51,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":52,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":53,"author":{"gitId":"soepaingzaw"},"content":""}],"authorContributionMap":{"soepaingzaw":53}},{"path":"src/main/java/seedu/allinonenus/foodstore/FoodExceptions.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus.foodstore;"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"public class FoodExceptions extends Exception {"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":"    public FoodExceptions(String s) {"},{"lineNumber":6,"author":{"gitId":"rageqqq"},"content":"        super(s);"},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"rageqqq"},"content":"}"}],"authorContributionMap":{"rageqqq":7,"soepaingzaw":1}},{"path":"src/main/java/seedu/allinonenus/foodstore/FoodRecommendation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus.foodstore;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"soepaingzaw"},"content":"import seedu.allinonenus.foodstore.FoodStore;"},{"lineNumber":4,"author":{"gitId":"soepaingzaw"},"content":"import seedu.allinonenus.foodstore.FoodExceptions;"},{"lineNumber":5,"author":{"gitId":"soepaingzaw"},"content":"import seedu.allinonenus.foodstore.FoodStoreParser;"},{"lineNumber":6,"author":{"gitId":"soepaingzaw"},"content":"import seedu.allinonenus.foodstore.FoodStoreStorage;"},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":8,"author":{"gitId":"rageqqq"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":9,"author":{"gitId":"rageqqq"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"rageqqq"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"rageqqq"},"content":"import java.util.Random;"},{"lineNumber":12,"author":{"gitId":"rageqqq"},"content":"import java.util.Scanner;"},{"lineNumber":13,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FoodRecommendation {"},{"lineNumber":15,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":16,"author":{"gitId":"rageqqq"},"content":"    private static final String FIND_ERROR_MESSAGE \u003d"},{"lineNumber":17,"author":{"gitId":"rageqqq"},"content":"            \"Sorry, We are unable to find any food stores that fit the description\";"},{"lineNumber":18,"author":{"gitId":"rageqqq"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Welcome to Food Recommendation Bot!\\n\";"},{"lineNumber":19,"author":{"gitId":"rageqqq"},"content":"    private static final String AVAILABLE_COMMANDS \u003d \"Here are the list of commands: \\n\""},{"lineNumber":20,"author":{"gitId":"rageqqq"},"content":"            + \"1. help - Displays the list of commands available\\n\""},{"lineNumber":21,"author":{"gitId":"rageqqq"},"content":"            + \"2. add [store name] [store description] - Adds a new food store\\n\""},{"lineNumber":22,"author":{"gitId":"rageqqq"},"content":"            + \"3. list - Prints out all the food stores\\n\""},{"lineNumber":23,"author":{"gitId":"rageqqq"},"content":"            + \"4. delete [store index] - Deletes the store with that index\\n\""},{"lineNumber":24,"author":{"gitId":"rageqqq"},"content":"            + \"5. recommend - Recommends a random food store\\n\""},{"lineNumber":25,"author":{"gitId":"rageqqq"},"content":"            + \"6. clear - Clears all the food stores in the list\";"},{"lineNumber":26,"author":{"gitId":"rageqqq"},"content":"    private static final String EXIT_MESSAGE \u003d \"Goodbye, hope to see you again!\";"},{"lineNumber":27,"author":{"gitId":"rageqqq"},"content":"    private static final String RECOMMEND_MESSAGE \u003d \"The bot recommends this store for you to try!\";"},{"lineNumber":28,"author":{"gitId":"rageqqq"},"content":"    private static final String CLEAR_MESSAGE \u003d \"All food stores have been cleared from the list.\";"},{"lineNumber":29,"author":{"gitId":"rageqqq"},"content":"    private static final String STORE_REMOVE_MESSAGE \u003d \"This store has been removed:\";"},{"lineNumber":30,"author":{"gitId":"rageqqq"},"content":"    private static final String LIST_MESSAGE \u003d \"Here is the list of food stores:\";"},{"lineNumber":31,"author":{"gitId":"rageqqq"},"content":"    private static final String ADD_MESSAGE \u003d \"This food store has been added to the list:\";"},{"lineNumber":32,"author":{"gitId":"rageqqq"},"content":"    private static final String FILE_NOT_FOUND_MESSAGE \u003d \"File not found. Creating a new file...\";"},{"lineNumber":33,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":34,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":35,"author":{"gitId":"rageqqq"},"content":"    private final ArrayList\u003cFoodStore\u003e foodStoreList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":36,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":37,"author":{"gitId":"rageqqq"},"content":"    public FoodRecommendation() {"},{"lineNumber":38,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":39,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":41,"author":{"gitId":"rageqqq"},"content":"    public void addStore(FoodStore toAdd) {"},{"lineNumber":42,"author":{"gitId":"rageqqq"},"content":"        print(ADD_MESSAGE);"},{"lineNumber":43,"author":{"gitId":"rageqqq"},"content":"        printStore(toAdd);"},{"lineNumber":44,"author":{"gitId":"rageqqq"},"content":"        foodStoreList.add(toAdd);"},{"lineNumber":45,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":47,"author":{"gitId":"rageqqq"},"content":"    public void printStore(FoodStore toPrint) {"},{"lineNumber":48,"author":{"gitId":"rageqqq"},"content":"        System.out.println(toPrint.toString());"},{"lineNumber":49,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":51,"author":{"gitId":"rageqqq"},"content":"    public void printList() {"},{"lineNumber":52,"author":{"gitId":"rageqqq"},"content":"        print(LIST_MESSAGE);"},{"lineNumber":53,"author":{"gitId":"rageqqq"},"content":"        for (int i \u003d 0; i \u003c foodStoreList.size(); i++) {"},{"lineNumber":54,"author":{"gitId":"rageqqq"},"content":"            FoodStore foodStore \u003d foodStoreList.get(i);"},{"lineNumber":55,"author":{"gitId":"rageqqq"},"content":"            Integer index \u003d i + 1;"},{"lineNumber":56,"author":{"gitId":"rageqqq"},"content":"            print(index + \". \" + foodStore.toString());"},{"lineNumber":57,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":60,"author":{"gitId":"rageqqq"},"content":"    public void deleteStore(int index) {"},{"lineNumber":61,"author":{"gitId":"rageqqq"},"content":"            print(STORE_REMOVE_MESSAGE);"},{"lineNumber":62,"author":{"gitId":"rageqqq"},"content":"            printStore(foodStoreList.get(index));"},{"lineNumber":63,"author":{"gitId":"rageqqq"},"content":"            foodStoreList.remove(index);"},{"lineNumber":64,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":66,"author":{"gitId":"rageqqq"},"content":"    public void clearList() {"},{"lineNumber":67,"author":{"gitId":"rageqqq"},"content":"        print(CLEAR_MESSAGE);"},{"lineNumber":68,"author":{"gitId":"rageqqq"},"content":"        foodStoreList.clear();"},{"lineNumber":69,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":71,"author":{"gitId":"rageqqq"},"content":"    public void print(String message) {"},{"lineNumber":72,"author":{"gitId":"rageqqq"},"content":"        System.out.println(message);"},{"lineNumber":73,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":75,"author":{"gitId":"rageqqq"},"content":"    public void recommend() {"},{"lineNumber":76,"author":{"gitId":"rageqqq"},"content":"        Random random \u003d new Random();"},{"lineNumber":77,"author":{"gitId":"rageqqq"},"content":"        FoodStore foodStore \u003d foodStoreList.get(random.nextInt(foodStoreList.size()));"},{"lineNumber":78,"author":{"gitId":"rageqqq"},"content":"        print(RECOMMEND_MESSAGE);"},{"lineNumber":79,"author":{"gitId":"rageqqq"},"content":"        printStore(foodStore);"},{"lineNumber":80,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":82,"author":{"gitId":"rageqqq"},"content":"    public void find(FoodStore toFind) {"},{"lineNumber":83,"author":{"gitId":"rageqqq"},"content":"        if (foodStoreList.contains(toFind)) {"},{"lineNumber":84,"author":{"gitId":"rageqqq"},"content":"            printStore(toFind);"},{"lineNumber":85,"author":{"gitId":"rageqqq"},"content":"        } else {"},{"lineNumber":86,"author":{"gitId":"rageqqq"},"content":"            print(FIND_ERROR_MESSAGE);"},{"lineNumber":87,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":90,"author":{"gitId":"rageqqq"},"content":"    public void setHalal(Integer index) {"},{"lineNumber":91,"author":{"gitId":"rageqqq"},"content":"        FoodStore foodStore \u003d foodStoreList.get(index);"},{"lineNumber":92,"author":{"gitId":"rageqqq"},"content":"        foodStore.setHalal();"},{"lineNumber":93,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":95,"author":{"gitId":"rageqqq"},"content":"    public void clearHalal(Integer index) {"},{"lineNumber":96,"author":{"gitId":"rageqqq"},"content":"        FoodStore foodStore \u003d foodStoreList.get(index);"},{"lineNumber":97,"author":{"gitId":"rageqqq"},"content":"        foodStore.clearHalal();"},{"lineNumber":98,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":100,"author":{"gitId":"rageqqq"},"content":"    public void printWelcomeMessage() {"},{"lineNumber":101,"author":{"gitId":"rageqqq"},"content":"        System.out.println(WELCOME_MESSAGE);"},{"lineNumber":102,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":104,"author":{"gitId":"rageqqq"},"content":"    public void printAvailableCommands() {"},{"lineNumber":105,"author":{"gitId":"rageqqq"},"content":"        System.out.println(AVAILABLE_COMMANDS);"},{"lineNumber":106,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":108,"author":{"gitId":"rageqqq"},"content":"    public void printExitMessage() {"},{"lineNumber":109,"author":{"gitId":"rageqqq"},"content":"        System.out.println(EXIT_MESSAGE);"},{"lineNumber":110,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":112,"author":{"gitId":"rageqqq"},"content":"    public void run() {"},{"lineNumber":113,"author":{"gitId":"rageqqq"},"content":"        printWelcomeMessage();"},{"lineNumber":114,"author":{"gitId":"rageqqq"},"content":"        try {"},{"lineNumber":115,"author":{"gitId":"rageqqq"},"content":"            FoodStoreStorage.loadFile(foodStoreList);"},{"lineNumber":116,"author":{"gitId":"rageqqq"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":117,"author":{"gitId":"rageqqq"},"content":"            print(FILE_NOT_FOUND_MESSAGE);"},{"lineNumber":118,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"rageqqq"},"content":"        printAvailableCommands();"},{"lineNumber":120,"author":{"gitId":"rageqqq"},"content":"        runUntilExit();"},{"lineNumber":121,"author":{"gitId":"rageqqq"},"content":"        try {"},{"lineNumber":122,"author":{"gitId":"rageqqq"},"content":"            FoodStoreStorage.saveFile(foodStoreList);"},{"lineNumber":123,"author":{"gitId":"rageqqq"},"content":"        } catch (IOException e) {"},{"lineNumber":124,"author":{"gitId":"rageqqq"},"content":"            print(\"Something went wrong: \" + e.getMessage());"},{"lineNumber":125,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"rageqqq"},"content":"        printExitMessage();"},{"lineNumber":127,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":129,"author":{"gitId":"rageqqq"},"content":"    public void runUntilExit() {"},{"lineNumber":130,"author":{"gitId":"rageqqq"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":131,"author":{"gitId":"rageqqq"},"content":"        String userInput \u003d in.nextLine();"},{"lineNumber":132,"author":{"gitId":"rageqqq"},"content":"        boolean isExit \u003d userInput.equals(\"bye\");"},{"lineNumber":133,"author":{"gitId":"rageqqq"},"content":"        while (!isExit) {"},{"lineNumber":134,"author":{"gitId":"rageqqq"},"content":"            String[] inputArguments \u003d userInput.split(\" \");"},{"lineNumber":135,"author":{"gitId":"rageqqq"},"content":"            String keyword \u003d inputArguments[0];"},{"lineNumber":136,"author":{"gitId":"rageqqq"},"content":"            boolean isAdd \u003d keyword.equals(\"add\");"},{"lineNumber":137,"author":{"gitId":"rageqqq"},"content":"            boolean isDelete \u003d keyword.equals(\"delete\");"},{"lineNumber":138,"author":{"gitId":"rageqqq"},"content":"            boolean isList \u003d keyword.equals(\"list\");"},{"lineNumber":139,"author":{"gitId":"rageqqq"},"content":"            boolean isRecommend \u003d keyword.equals(\"recommend\");"},{"lineNumber":140,"author":{"gitId":"rageqqq"},"content":"            boolean isClear \u003d keyword.equals(\"clear\");"},{"lineNumber":141,"author":{"gitId":"rageqqq"},"content":"            if (isAdd) {"},{"lineNumber":142,"author":{"gitId":"rageqqq"},"content":"                try {"},{"lineNumber":143,"author":{"gitId":"rageqqq"},"content":"                    FoodStore foodStore \u003d FoodStoreParser.parseAddCommand(userInput);"},{"lineNumber":144,"author":{"gitId":"rageqqq"},"content":"                    addStore(foodStore);"},{"lineNumber":145,"author":{"gitId":"rageqqq"},"content":"                } catch (FoodExceptions e) {"},{"lineNumber":146,"author":{"gitId":"rageqqq"},"content":"                    print(e.getMessage());"},{"lineNumber":147,"author":{"gitId":"rageqqq"},"content":"                }"},{"lineNumber":148,"author":{"gitId":"rageqqq"},"content":"            } else if (isDelete) {"},{"lineNumber":149,"author":{"gitId":"rageqqq"},"content":"                try {"},{"lineNumber":150,"author":{"gitId":"rageqqq"},"content":"                    int index \u003d FoodStoreParser.parseDeleteCommand(userInput, foodStoreList.size());"},{"lineNumber":151,"author":{"gitId":"rageqqq"},"content":"                    deleteStore(index);"},{"lineNumber":152,"author":{"gitId":"rageqqq"},"content":"                } catch (FoodExceptions e) {"},{"lineNumber":153,"author":{"gitId":"rageqqq"},"content":"                    print(e.getMessage());"},{"lineNumber":154,"author":{"gitId":"rageqqq"},"content":"                }"},{"lineNumber":155,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":156,"author":{"gitId":"rageqqq"},"content":"            } else if (isList) {"},{"lineNumber":157,"author":{"gitId":"rageqqq"},"content":"                printList();"},{"lineNumber":158,"author":{"gitId":"rageqqq"},"content":"            } else if (isRecommend) {"},{"lineNumber":159,"author":{"gitId":"rageqqq"},"content":"                recommend();"},{"lineNumber":160,"author":{"gitId":"rageqqq"},"content":"            } else if (isClear) {"},{"lineNumber":161,"author":{"gitId":"rageqqq"},"content":"                clearList();"},{"lineNumber":162,"author":{"gitId":"rageqqq"},"content":"            }"},{"lineNumber":163,"author":{"gitId":"rageqqq"},"content":"            userInput \u003d in.nextLine();"},{"lineNumber":164,"author":{"gitId":"rageqqq"},"content":"            isExit \u003d userInput.equals(\"bye\");"},{"lineNumber":165,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":166,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":168,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"rageqqq":161,"soepaingzaw":5,"-":3}},{"path":"src/main/java/seedu/allinonenus/foodstore/FoodStore.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus.foodstore;"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"public class FoodStore {"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":"    public final String storeName;"},{"lineNumber":6,"author":{"gitId":"rageqqq"},"content":"    public final String storeDescription;"},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":"    public boolean isHalal;"},{"lineNumber":8,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":9,"author":{"gitId":"rageqqq"},"content":"    public FoodStore(String storeName, String storeDescription) {"},{"lineNumber":10,"author":{"gitId":"rageqqq"},"content":"        this.storeName \u003d storeName.trim();"},{"lineNumber":11,"author":{"gitId":"rageqqq"},"content":"        this.storeDescription \u003d storeDescription.trim();"},{"lineNumber":12,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":14,"author":{"gitId":"rageqqq"},"content":"    public String getStoreName() {"},{"lineNumber":15,"author":{"gitId":"rageqqq"},"content":"        return storeName;"},{"lineNumber":16,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":18,"author":{"gitId":"rageqqq"},"content":"    public String getStoreDescription() {"},{"lineNumber":19,"author":{"gitId":"rageqqq"},"content":"        return storeDescription;"},{"lineNumber":20,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":22,"author":{"gitId":"rageqqq"},"content":"    public boolean isHalal() {"},{"lineNumber":23,"author":{"gitId":"rageqqq"},"content":"        return isHalal;"},{"lineNumber":24,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":26,"author":{"gitId":"rageqqq"},"content":"    public void setHalal() {"},{"lineNumber":27,"author":{"gitId":"rageqqq"},"content":"        isHalal \u003d true;"},{"lineNumber":28,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":30,"author":{"gitId":"rageqqq"},"content":"    public void clearHalal() {"},{"lineNumber":31,"author":{"gitId":"rageqqq"},"content":"        isHalal \u003d false;"},{"lineNumber":32,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":34,"author":{"gitId":"rageqqq"},"content":"    public String toString() {"},{"lineNumber":35,"author":{"gitId":"rageqqq"},"content":"        if (isHalal()) {"},{"lineNumber":36,"author":{"gitId":"rageqqq"},"content":"            return \"[Halal] \" + getStoreName() + \": \" + getStoreDescription();"},{"lineNumber":37,"author":{"gitId":"rageqqq"},"content":"        } else {"},{"lineNumber":38,"author":{"gitId":"rageqqq"},"content":"            return \"[Non-Halal] \" + getStoreName() + \": \" + getStoreDescription();"},{"lineNumber":39,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"rageqqq"},"content":"}"}],"authorContributionMap":{"rageqqq":40,"soepaingzaw":1}},{"path":"src/main/java/seedu/allinonenus/foodstore/FoodStoreParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus.foodstore;"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"public class FoodStoreParser {"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":"    private static final String INVALID_ADD_MESSAGE \u003d \"Please enter the add command in correct format.\";"},{"lineNumber":6,"author":{"gitId":"rageqqq"},"content":"    private static final String OUT_OF_BOUNDS_MESSAGE \u003d \"Sorry, the number you inputted is out of bounds.\";"},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":8,"author":{"gitId":"rageqqq"},"content":"    public static FoodStore parseAddCommand(String input) throws FoodExceptions {"},{"lineNumber":9,"author":{"gitId":"rageqqq"},"content":"        input \u003d input.replace(\"add \", \"\");"},{"lineNumber":10,"author":{"gitId":"rageqqq"},"content":"        input \u003d input.trim();"},{"lineNumber":11,"author":{"gitId":"rageqqq"},"content":"        boolean hasStoreName \u003d !input.isEmpty();"},{"lineNumber":12,"author":{"gitId":"rageqqq"},"content":"        boolean hasDescription \u003d input.contains(\"d/ \");"},{"lineNumber":13,"author":{"gitId":"rageqqq"},"content":"        boolean validInput \u003d hasDescription \u0026\u0026 hasStoreName;"},{"lineNumber":14,"author":{"gitId":"rageqqq"},"content":"        if (!validInput) {"},{"lineNumber":15,"author":{"gitId":"rageqqq"},"content":"            throw new FoodExceptions(INVALID_ADD_MESSAGE);"},{"lineNumber":16,"author":{"gitId":"rageqqq"},"content":"        } else {"},{"lineNumber":17,"author":{"gitId":"rageqqq"},"content":"            String[] inputArguments \u003d input.split(\"d/ \");"},{"lineNumber":18,"author":{"gitId":"rageqqq"},"content":"            return new FoodStore(inputArguments[0], inputArguments[1]);"},{"lineNumber":19,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":22,"author":{"gitId":"rageqqq"},"content":"    public static int parseDeleteCommand(String input, int listSize) throws FoodExceptions {"},{"lineNumber":23,"author":{"gitId":"rageqqq"},"content":"        input \u003d input.replace(\"delete \", \"\");"},{"lineNumber":24,"author":{"gitId":"rageqqq"},"content":"        input \u003d input.trim();"},{"lineNumber":25,"author":{"gitId":"rageqqq"},"content":"        int index \u003d Integer.parseInt(input) - 1;"},{"lineNumber":26,"author":{"gitId":"rageqqq"},"content":"        boolean isEmpty \u003d input.isEmpty();"},{"lineNumber":27,"author":{"gitId":"rageqqq"},"content":"        boolean validIndex \u003d index \u003c listSize;"},{"lineNumber":28,"author":{"gitId":"rageqqq"},"content":"        boolean validInput \u003d !isEmpty \u0026\u0026 validIndex;"},{"lineNumber":29,"author":{"gitId":"rageqqq"},"content":"        if (!validInput) {"},{"lineNumber":30,"author":{"gitId":"rageqqq"},"content":"            throw new FoodExceptions(OUT_OF_BOUNDS_MESSAGE);"},{"lineNumber":31,"author":{"gitId":"rageqqq"},"content":"        } else {"},{"lineNumber":32,"author":{"gitId":"rageqqq"},"content":"            return index;"},{"lineNumber":33,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"rageqqq"},"content":"}"}],"authorContributionMap":{"rageqqq":34,"soepaingzaw":1}},{"path":"src/main/java/seedu/allinonenus/foodstore/FoodStoreStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus.foodstore;"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"rageqqq"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"rageqqq"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":10,"author":{"gitId":"rageqqq"},"content":"public class FoodStoreStorage {"},{"lineNumber":11,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":12,"author":{"gitId":"rageqqq"},"content":"    private static final String filepath \u003d \"Food Recommendation.txt\";"},{"lineNumber":13,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":14,"author":{"gitId":"rageqqq"},"content":"    public static void saveFile(ArrayList\u003cFoodStore\u003e foodStores) throws IOException {"},{"lineNumber":15,"author":{"gitId":"rageqqq"},"content":"        FileWriter fileWriter \u003d new FileWriter(filepath);"},{"lineNumber":16,"author":{"gitId":"rageqqq"},"content":"        for (FoodStore foodStore : foodStores) {"},{"lineNumber":17,"author":{"gitId":"rageqqq"},"content":"            fileWriter.write(foodStore.toString() + \"\\n\");"},{"lineNumber":18,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"rageqqq"},"content":"        fileWriter.close();"},{"lineNumber":20,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":22,"author":{"gitId":"rageqqq"},"content":"    public static void loadFile(ArrayList\u003cFoodStore\u003e foodStores) throws FileNotFoundException {"},{"lineNumber":23,"author":{"gitId":"rageqqq"},"content":"        File file \u003d new File(filepath);"},{"lineNumber":24,"author":{"gitId":"rageqqq"},"content":"        if (!file.exists()) {"},{"lineNumber":25,"author":{"gitId":"rageqqq"},"content":"            throw new FileNotFoundException();"},{"lineNumber":26,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"rageqqq"},"content":"        Scanner scanner \u003d new Scanner(file);"},{"lineNumber":28,"author":{"gitId":"rageqqq"},"content":"        while (scanner.hasNext()) {"},{"lineNumber":29,"author":{"gitId":"rageqqq"},"content":"            String input \u003d scanner.nextLine();"},{"lineNumber":30,"author":{"gitId":"rageqqq"},"content":"            input \u003d input.substring(input.lastIndexOf(\"]\") + 1);"},{"lineNumber":31,"author":{"gitId":"rageqqq"},"content":"            String[] inputArguments \u003d input.split(\": \");"},{"lineNumber":32,"author":{"gitId":"rageqqq"},"content":"            FoodStore foodStore \u003d new FoodStore(inputArguments[0], inputArguments[1]);"},{"lineNumber":33,"author":{"gitId":"rageqqq"},"content":"            foodStores.add(foodStore);"},{"lineNumber":34,"author":{"gitId":"rageqqq"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":37,"author":{"gitId":"rageqqq"},"content":"}"}],"authorContributionMap":{"rageqqq":36,"soepaingzaw":1}},{"path":"src/main/java/seedu/allinonenus/moduleplanner/ModulePlanner.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus.moduleplanner;"},{"lineNumber":2,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":3,"author":{"gitId":"fangxinjia0203"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"fangxinjia0203"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"fangxinjia0203"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"fangxinjia0203"},"content":"import java.util.Collections;"},{"lineNumber":7,"author":{"gitId":"fangxinjia0203"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":9,"author":{"gitId":"fangxinjia0203"},"content":"public class ModulePlanner {"},{"lineNumber":10,"author":{"gitId":"fangxinjia0203"},"content":"    protected static String moduleCode;"},{"lineNumber":11,"author":{"gitId":"fangxinjia0203"},"content":"    protected static ArrayList\u003cStudent\u003e students;"},{"lineNumber":12,"author":{"gitId":"fangxinjia0203"},"content":"    protected static int totalSlots;"},{"lineNumber":13,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":14,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":15,"author":{"gitId":"fangxinjia0203"},"content":"    public static void setModuleCode(String moduleCode) {"},{"lineNumber":16,"author":{"gitId":"fangxinjia0203"},"content":"        ModulePlanner.moduleCode \u003d moduleCode;"},{"lineNumber":17,"author":{"gitId":"fangxinjia0203"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":19,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":20,"author":{"gitId":"fangxinjia0203"},"content":"    public static void setTotalSlots(int totalSlots) {"},{"lineNumber":21,"author":{"gitId":"fangxinjia0203"},"content":"        ModulePlanner.totalSlots \u003d totalSlots;"},{"lineNumber":22,"author":{"gitId":"fangxinjia0203"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":24,"author":{"gitId":"fangxinjia0203"},"content":"    public ModulePlanner() {"},{"lineNumber":25,"author":{"gitId":"fangxinjia0203"},"content":"        ModulePlanner.moduleCode \u003d moduleCode;"},{"lineNumber":26,"author":{"gitId":"fangxinjia0203"},"content":"        ModulePlanner.totalSlots \u003d totalSlots;"},{"lineNumber":27,"author":{"gitId":"fangxinjia0203"},"content":"        students \u003d new ArrayList\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":29,"author":{"gitId":"fangxinjia0203"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":31,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":32,"author":{"gitId":"fangxinjia0203"},"content":"    public static String getModuleCode() {"},{"lineNumber":33,"author":{"gitId":"fangxinjia0203"},"content":"        return moduleCode;"},{"lineNumber":34,"author":{"gitId":"fangxinjia0203"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":36,"author":{"gitId":"fangxinjia0203"},"content":"    public static int getTotalSlots() {"},{"lineNumber":37,"author":{"gitId":"fangxinjia0203"},"content":"        return totalSlots;"},{"lineNumber":38,"author":{"gitId":"fangxinjia0203"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":40,"author":{"gitId":"fangxinjia0203"},"content":"    public static void getStudent() {"},{"lineNumber":41,"author":{"gitId":"fangxinjia0203"},"content":"        for (int i \u003d 0; i \u003c students.size(); i++) {"},{"lineNumber":42,"author":{"gitId":"fangxinjia0203"},"content":"            System.out.println(i + 1 + \". \" + students.get(i).toString() + \"\\n\");"},{"lineNumber":43,"author":{"gitId":"fangxinjia0203"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"fangxinjia0203"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":46,"author":{"gitId":"fangxinjia0203"},"content":"    public static void addStudent(Student student) {"},{"lineNumber":47,"author":{"gitId":"fangxinjia0203"},"content":"        students.add(student);"},{"lineNumber":48,"author":{"gitId":"fangxinjia0203"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":50,"author":{"gitId":"fangxinjia0203"},"content":"    public static void findStudent(ArrayList\u003cStudent\u003e students, String line) {"},{"lineNumber":51,"author":{"gitId":"fangxinjia0203"},"content":"        for (int i \u003d 0; i \u003c students.size(); i++) {"},{"lineNumber":52,"author":{"gitId":"fangxinjia0203"},"content":"            if (students.get(i).getName().equals(line)) {"},{"lineNumber":53,"author":{"gitId":"fangxinjia0203"},"content":"                System.out.println(\"The number of students have higher priority than \" + line + \": \" + i + \"\\n\");"},{"lineNumber":54,"author":{"gitId":"fangxinjia0203"},"content":"                System.out.println(\"Chances for \" + line + \": \" + getChances(i + 1, getTotalSlots()) + \"\\n\");"},{"lineNumber":55,"author":{"gitId":"fangxinjia0203"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"fangxinjia0203"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"fangxinjia0203"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":59,"author":{"gitId":"fangxinjia0203"},"content":"    public static Priority getChances(int position, int slots) {"},{"lineNumber":60,"author":{"gitId":"fangxinjia0203"},"content":"        if (position \u003c\u003d slots / 2) {"},{"lineNumber":61,"author":{"gitId":"fangxinjia0203"},"content":"            return Priority.HIGH;"},{"lineNumber":62,"author":{"gitId":"fangxinjia0203"},"content":"        } else if (position \u003e slots) {"},{"lineNumber":63,"author":{"gitId":"fangxinjia0203"},"content":"            return Priority.LOW;"},{"lineNumber":64,"author":{"gitId":"fangxinjia0203"},"content":"        } else {"},{"lineNumber":65,"author":{"gitId":"fangxinjia0203"},"content":"            return Priority.MEDIUM;"},{"lineNumber":66,"author":{"gitId":"fangxinjia0203"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":68,"author":{"gitId":"fangxinjia0203"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":70,"author":{"gitId":"fangxinjia0203"},"content":"    public static void readInput() throws IOException {"},{"lineNumber":71,"author":{"gitId":"fangxinjia0203"},"content":"        System.out.println(\"Please enter the module and the slots. example: module CS2113T,50\\n\");"},{"lineNumber":72,"author":{"gitId":"fangxinjia0203"},"content":"        String line;"},{"lineNumber":73,"author":{"gitId":"fangxinjia0203"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":74,"author":{"gitId":"fangxinjia0203"},"content":"        line \u003d in.nextLine();"},{"lineNumber":75,"author":{"gitId":"fangxinjia0203"},"content":"        while (!line.equals(\"bye\")) {"},{"lineNumber":76,"author":{"gitId":"fangxinjia0203"},"content":"            if (line.startsWith(\"module\")) {"},{"lineNumber":77,"author":{"gitId":"fangxinjia0203"},"content":"                try {"},{"lineNumber":78,"author":{"gitId":"fangxinjia0203"},"content":"                    line \u003d line.replace(\"module\", \"\");"},{"lineNumber":79,"author":{"gitId":"fangxinjia0203"},"content":"                    String[] parts \u003d line.split(\",\");"},{"lineNumber":80,"author":{"gitId":"fangxinjia0203"},"content":"                    ModulePlanner t \u003d new ModulePlanner();"},{"lineNumber":81,"author":{"gitId":"fangxinjia0203"},"content":"                    setModuleCode(parts[0].trim());"},{"lineNumber":82,"author":{"gitId":"fangxinjia0203"},"content":"                    setTotalSlots(Parser.parserToInteger(parts[1].trim()));"},{"lineNumber":83,"author":{"gitId":"fangxinjia0203"},"content":"                    System.out.println(\"Module \" + getModuleCode() + \" has been added.\");"},{"lineNumber":84,"author":{"gitId":"fangxinjia0203"},"content":"                    System.out.println(\"Please add the student name, seniority, requirement for graduation, \" +"},{"lineNumber":85,"author":{"gitId":"fangxinjia0203"},"content":"                            \"rank. example: student Alice,1,true,2\");"},{"lineNumber":86,"author":{"gitId":"fangxinjia0203"},"content":"                    Storage.createFile();"},{"lineNumber":87,"author":{"gitId":"fangxinjia0203"},"content":"                    Storage.readFile(students);"},{"lineNumber":88,"author":{"gitId":"fangxinjia0203"},"content":"                } catch (StringIndexOutOfBoundsException | FileNotFoundException e) {"},{"lineNumber":89,"author":{"gitId":"fangxinjia0203"},"content":"                    Ui.showEmptyDescriptionException(line);"},{"lineNumber":90,"author":{"gitId":"fangxinjia0203"},"content":"                }"},{"lineNumber":91,"author":{"gitId":"fangxinjia0203"},"content":"            } else if (line.startsWith(\"student\")) {"},{"lineNumber":92,"author":{"gitId":"fangxinjia0203"},"content":"                try {"},{"lineNumber":93,"author":{"gitId":"fangxinjia0203"},"content":"                    line \u003d line.replace(\"student\", \"\");"},{"lineNumber":94,"author":{"gitId":"fangxinjia0203"},"content":"                    String[] parts \u003d line.split(\",\");"},{"lineNumber":95,"author":{"gitId":"fangxinjia0203"},"content":"                    Student a \u003d new Student(parts[0].trim(),"},{"lineNumber":96,"author":{"gitId":"fangxinjia0203"},"content":"                            Parser.parserToInteger(parts[1].trim()),"},{"lineNumber":97,"author":{"gitId":"fangxinjia0203"},"content":"                            Parser.parserToBoolean(parts[2].trim()),"},{"lineNumber":98,"author":{"gitId":"fangxinjia0203"},"content":"                            Parser.parserToInteger(parts[3].trim()));"},{"lineNumber":99,"author":{"gitId":"fangxinjia0203"},"content":"                    addStudent(a);"},{"lineNumber":100,"author":{"gitId":"fangxinjia0203"},"content":"                    System.out.println(a.getName() + \"has been added.\");"},{"lineNumber":101,"author":{"gitId":"fangxinjia0203"},"content":"                } catch (java.lang.StringIndexOutOfBoundsException e) {"},{"lineNumber":102,"author":{"gitId":"fangxinjia0203"},"content":"                    Ui.showEmptyDescriptionException(line);"},{"lineNumber":103,"author":{"gitId":"fangxinjia0203"},"content":"                }"},{"lineNumber":104,"author":{"gitId":"fangxinjia0203"},"content":"            } else if (line.equals(\"list\")) {"},{"lineNumber":105,"author":{"gitId":"fangxinjia0203"},"content":"                Collections.sort(students, Collections.reverseOrder());"},{"lineNumber":106,"author":{"gitId":"fangxinjia0203"},"content":"                getStudent();"},{"lineNumber":107,"author":{"gitId":"fangxinjia0203"},"content":"            } else if (line.startsWith(\"recommendation\")) {"},{"lineNumber":108,"author":{"gitId":"fangxinjia0203"},"content":"                line \u003d line.replace(\"recommendation\", \"\").trim();"},{"lineNumber":109,"author":{"gitId":"fangxinjia0203"},"content":"                findStudent(students, line);"},{"lineNumber":110,"author":{"gitId":"fangxinjia0203"},"content":"            }"},{"lineNumber":111,"author":{"gitId":"fangxinjia0203"},"content":"            line \u003d in.nextLine();"},{"lineNumber":112,"author":{"gitId":"fangxinjia0203"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"fangxinjia0203"},"content":"        Storage.writeFile(students);"},{"lineNumber":114,"author":{"gitId":"fangxinjia0203"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":116,"author":{"gitId":"fangxinjia0203"},"content":"    public void run()  {"},{"lineNumber":117,"author":{"gitId":"fangxinjia0203"},"content":"        try {"},{"lineNumber":118,"author":{"gitId":"fangxinjia0203"},"content":"            readInput();"},{"lineNumber":119,"author":{"gitId":"fangxinjia0203"},"content":"        } catch (IOException e) {"},{"lineNumber":120,"author":{"gitId":"fangxinjia0203"},"content":"            Ui.showException();"},{"lineNumber":121,"author":{"gitId":"fangxinjia0203"},"content":"        };"},{"lineNumber":122,"author":{"gitId":"fangxinjia0203"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"fangxinjia0203"},"content":"}"}],"authorContributionMap":{"fangxinjia0203":122,"soepaingzaw":1}},{"path":"src/main/java/seedu/allinonenus/moduleplanner/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus.moduleplanner;"},{"lineNumber":2,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":3,"author":{"gitId":"fangxinjia0203"},"content":"public class Parser {"},{"lineNumber":4,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":5,"author":{"gitId":"fangxinjia0203"},"content":"    protected static int parserToInteger(String input) {"},{"lineNumber":6,"author":{"gitId":"fangxinjia0203"},"content":"        return Integer.parseInt(input);"},{"lineNumber":7,"author":{"gitId":"fangxinjia0203"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":9,"author":{"gitId":"fangxinjia0203"},"content":"    protected static boolean parserToBoolean(String input) {"},{"lineNumber":10,"author":{"gitId":"fangxinjia0203"},"content":"        return Boolean.parseBoolean(input);"},{"lineNumber":11,"author":{"gitId":"fangxinjia0203"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"fangxinjia0203"},"content":"}"}],"authorContributionMap":{"fangxinjia0203":11,"soepaingzaw":1}},{"path":"src/main/java/seedu/allinonenus/moduleplanner/Priority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus.moduleplanner;"},{"lineNumber":2,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":3,"author":{"gitId":"fangxinjia0203"},"content":"public enum Priority {"},{"lineNumber":4,"author":{"gitId":"fangxinjia0203"},"content":"    LOW,"},{"lineNumber":5,"author":{"gitId":"fangxinjia0203"},"content":"    MEDIUM,"},{"lineNumber":6,"author":{"gitId":"fangxinjia0203"},"content":"    HIGH"},{"lineNumber":7,"author":{"gitId":"fangxinjia0203"},"content":"}"}],"authorContributionMap":{"fangxinjia0203":6,"soepaingzaw":1}},{"path":"src/main/java/seedu/allinonenus/moduleplanner/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus.moduleplanner;"},{"lineNumber":2,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":3,"author":{"gitId":"fangxinjia0203"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"fangxinjia0203"},"content":"import java.io.FileInputStream;"},{"lineNumber":5,"author":{"gitId":"fangxinjia0203"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":6,"author":{"gitId":"fangxinjia0203"},"content":"import java.io.FileWriter;"},{"lineNumber":7,"author":{"gitId":"fangxinjia0203"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"fangxinjia0203"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"fangxinjia0203"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":11,"author":{"gitId":"fangxinjia0203"},"content":"public class Storage {"},{"lineNumber":12,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":13,"author":{"gitId":"fangxinjia0203"},"content":"    static void writeFile(ArrayList\u003cStudent\u003e students) throws IOException {"},{"lineNumber":14,"author":{"gitId":"fangxinjia0203"},"content":"        File file \u003d new File(\"ModulePlanner.txt\");"},{"lineNumber":15,"author":{"gitId":"fangxinjia0203"},"content":"        FileWriter writer \u003d new FileWriter(file);"},{"lineNumber":16,"author":{"gitId":"fangxinjia0203"},"content":"        for (Student t : students) {"},{"lineNumber":17,"author":{"gitId":"fangxinjia0203"},"content":"            writer.write(t.getName() + \" | \" + t.getYear() + \" | \""},{"lineNumber":18,"author":{"gitId":"fangxinjia0203"},"content":"                    + t.getGraduationRequirement() + \" | \" + t.getRank());"},{"lineNumber":19,"author":{"gitId":"fangxinjia0203"},"content":"            writer.write(\"\\r\\n\");"},{"lineNumber":20,"author":{"gitId":"fangxinjia0203"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"fangxinjia0203"},"content":"        writer.close();"},{"lineNumber":22,"author":{"gitId":"fangxinjia0203"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":24,"author":{"gitId":"fangxinjia0203"},"content":"    static void createFile() {"},{"lineNumber":25,"author":{"gitId":"fangxinjia0203"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"fangxinjia0203"},"content":"            File file \u003d new File(\"ModulePlanner.txt\");"},{"lineNumber":27,"author":{"gitId":"fangxinjia0203"},"content":"            if (file.createNewFile()) {"},{"lineNumber":28,"author":{"gitId":"fangxinjia0203"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"fangxinjia0203"},"content":"        } catch (IOException e) {"},{"lineNumber":30,"author":{"gitId":"fangxinjia0203"},"content":"            e.printStackTrace();"},{"lineNumber":31,"author":{"gitId":"fangxinjia0203"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"fangxinjia0203"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":34,"author":{"gitId":"fangxinjia0203"},"content":"    static void readFile(ArrayList\u003cStudent\u003e students) throws FileNotFoundException {"},{"lineNumber":35,"author":{"gitId":"fangxinjia0203"},"content":"        FileInputStream data \u003d new FileInputStream(\"ModulePlanner.txt\");"},{"lineNumber":36,"author":{"gitId":"fangxinjia0203"},"content":"        Scanner sc \u003d new Scanner(data);"},{"lineNumber":37,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":38,"author":{"gitId":"fangxinjia0203"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":39,"author":{"gitId":"fangxinjia0203"},"content":"            String line \u003d sc.nextLine();"},{"lineNumber":40,"author":{"gitId":"fangxinjia0203"},"content":"            String[] parts \u003d line.split(\"\\\\|\");"},{"lineNumber":41,"author":{"gitId":"fangxinjia0203"},"content":"            Student a \u003d new Student(parts[0].trim(),"},{"lineNumber":42,"author":{"gitId":"fangxinjia0203"},"content":"                    Parser.parserToInteger(parts[1].trim()),"},{"lineNumber":43,"author":{"gitId":"fangxinjia0203"},"content":"                    Parser.parserToBoolean(parts[2].trim()),"},{"lineNumber":44,"author":{"gitId":"fangxinjia0203"},"content":"                    Parser.parserToInteger(parts[3].trim()));"},{"lineNumber":45,"author":{"gitId":"fangxinjia0203"},"content":"            students.add(a);"},{"lineNumber":46,"author":{"gitId":"fangxinjia0203"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"fangxinjia0203"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"fangxinjia0203"},"content":"}"}],"authorContributionMap":{"fangxinjia0203":47,"soepaingzaw":1}},{"path":"src/main/java/seedu/allinonenus/moduleplanner/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus.moduleplanner;"},{"lineNumber":2,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":3,"author":{"gitId":"fangxinjia0203"},"content":"public class Student implements Comparable\u003cStudent\u003e {"},{"lineNumber":4,"author":{"gitId":"fangxinjia0203"},"content":"    protected String name;"},{"lineNumber":5,"author":{"gitId":"fangxinjia0203"},"content":"    protected boolean graduationRequirement;"},{"lineNumber":6,"author":{"gitId":"fangxinjia0203"},"content":"    protected int year;"},{"lineNumber":7,"author":{"gitId":"fangxinjia0203"},"content":"    protected int score;"},{"lineNumber":8,"author":{"gitId":"fangxinjia0203"},"content":"    protected int rank;"},{"lineNumber":9,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":10,"author":{"gitId":"fangxinjia0203"},"content":"    public Student(String name, int year, boolean graduationRequirement, int rank) {"},{"lineNumber":11,"author":{"gitId":"fangxinjia0203"},"content":"        this.name \u003d name;"},{"lineNumber":12,"author":{"gitId":"fangxinjia0203"},"content":"        this.graduationRequirement \u003d graduationRequirement;"},{"lineNumber":13,"author":{"gitId":"fangxinjia0203"},"content":"        this.year \u003d year;"},{"lineNumber":14,"author":{"gitId":"fangxinjia0203"},"content":"        this.rank \u003d rank;"},{"lineNumber":15,"author":{"gitId":"fangxinjia0203"},"content":"        this.score \u003d getYear() + getGraduationRequirementScore() - (rank - 6);"},{"lineNumber":16,"author":{"gitId":"fangxinjia0203"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":18,"author":{"gitId":"fangxinjia0203"},"content":"    public String getName() {"},{"lineNumber":19,"author":{"gitId":"fangxinjia0203"},"content":"        return name;"},{"lineNumber":20,"author":{"gitId":"fangxinjia0203"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":22,"author":{"gitId":"fangxinjia0203"},"content":"    public boolean isGraduationRequirement() {"},{"lineNumber":23,"author":{"gitId":"fangxinjia0203"},"content":"        return graduationRequirement;"},{"lineNumber":24,"author":{"gitId":"fangxinjia0203"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":26,"author":{"gitId":"fangxinjia0203"},"content":"    public int getYear() {"},{"lineNumber":27,"author":{"gitId":"fangxinjia0203"},"content":"        return year;"},{"lineNumber":28,"author":{"gitId":"fangxinjia0203"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":30,"author":{"gitId":"fangxinjia0203"},"content":"    public int getGraduationRequirementScore() {"},{"lineNumber":31,"author":{"gitId":"fangxinjia0203"},"content":"        return (isGraduationRequirement() ? 3 : 0);"},{"lineNumber":32,"author":{"gitId":"fangxinjia0203"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":34,"author":{"gitId":"fangxinjia0203"},"content":"    public int getScore() {"},{"lineNumber":35,"author":{"gitId":"fangxinjia0203"},"content":"        return score;"},{"lineNumber":36,"author":{"gitId":"fangxinjia0203"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":38,"author":{"gitId":"fangxinjia0203"},"content":"    public boolean getGraduationRequirement() {"},{"lineNumber":39,"author":{"gitId":"fangxinjia0203"},"content":"        return graduationRequirement;"},{"lineNumber":40,"author":{"gitId":"fangxinjia0203"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":42,"author":{"gitId":"fangxinjia0203"},"content":"    public int getRank() {"},{"lineNumber":43,"author":{"gitId":"fangxinjia0203"},"content":"        return rank;"},{"lineNumber":44,"author":{"gitId":"fangxinjia0203"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":46,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":47,"author":{"gitId":"fangxinjia0203"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"fangxinjia0203"},"content":"    public String toString() {"},{"lineNumber":49,"author":{"gitId":"fangxinjia0203"},"content":"        return name + \", \" + getScore();"},{"lineNumber":50,"author":{"gitId":"fangxinjia0203"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":52,"author":{"gitId":"fangxinjia0203"},"content":"    public int compareTo(Student student) {"},{"lineNumber":53,"author":{"gitId":"fangxinjia0203"},"content":"        return this.score - student.score;"},{"lineNumber":54,"author":{"gitId":"fangxinjia0203"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"fangxinjia0203"},"content":"}"}],"authorContributionMap":{"fangxinjia0203":54,"soepaingzaw":1}},{"path":"src/main/java/seedu/allinonenus/moduleplanner/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus.moduleplanner;"},{"lineNumber":2,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":3,"author":{"gitId":"fangxinjia0203"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":5,"author":{"gitId":"fangxinjia0203"},"content":"    public static void showException() {"},{"lineNumber":6,"author":{"gitId":"fangxinjia0203"},"content":"        System.out.println(\"____________________________________________________________\\n\");"},{"lineNumber":7,"author":{"gitId":"fangxinjia0203"},"content":"        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"},{"lineNumber":8,"author":{"gitId":"fangxinjia0203"},"content":"        System.out.println(\"____________________________________________________________\\n\");"},{"lineNumber":9,"author":{"gitId":"fangxinjia0203"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":11,"author":{"gitId":"fangxinjia0203"},"content":"    public static void showEmptyDescriptionException(String line) {"},{"lineNumber":12,"author":{"gitId":"fangxinjia0203"},"content":"        System.out.println(\"____________________________________________________________\\n\");"},{"lineNumber":13,"author":{"gitId":"fangxinjia0203"},"content":"        System.out.println(\"☹ OOPS!!! The description of a \" + line + \" cannot be empty.\\n\");"},{"lineNumber":14,"author":{"gitId":"fangxinjia0203"},"content":"        System.out.println(\"____________________________________________________________\\n\");"},{"lineNumber":15,"author":{"gitId":"fangxinjia0203"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"fangxinjia0203"},"content":"}"}],"authorContributionMap":{"fangxinjia0203":15,"soepaingzaw":1}},{"path":"src/main/java/seedu/allinonenus/teamplannerclasses/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus.teamplannerclasses;"},{"lineNumber":2,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":3,"author":{"gitId":"douglaslewpc"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"douglaslewpc"},"content":"    protected String task;"},{"lineNumber":5,"author":{"gitId":"douglaslewpc"},"content":"    protected int priority;"},{"lineNumber":6,"author":{"gitId":"douglaslewpc"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":8,"author":{"gitId":"douglaslewpc"},"content":"    public Task(String task, int priority, boolean isDone) {"},{"lineNumber":9,"author":{"gitId":"douglaslewpc"},"content":"        this.task \u003d task;"},{"lineNumber":10,"author":{"gitId":"douglaslewpc"},"content":"        this.priority \u003d priority;"},{"lineNumber":11,"author":{"gitId":"douglaslewpc"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":12,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":14,"author":{"gitId":"douglaslewpc"},"content":"    public String getTask() {"},{"lineNumber":15,"author":{"gitId":"douglaslewpc"},"content":"        return task;"},{"lineNumber":16,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":18,"author":{"gitId":"douglaslewpc"},"content":"    public int priorityLevel() {"},{"lineNumber":19,"author":{"gitId":"douglaslewpc"},"content":"        return priority;"},{"lineNumber":20,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":22,"author":{"gitId":"douglaslewpc"},"content":"    public void markAsDone() {"},{"lineNumber":23,"author":{"gitId":"douglaslewpc"},"content":"        isDone \u003d true;"},{"lineNumber":24,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":26,"author":{"gitId":"douglaslewpc"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"douglaslewpc"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"douglaslewpc"},"content":"        return task;"},{"lineNumber":29,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"douglaslewpc"},"content":"}"}],"authorContributionMap":{"douglaslewpc":29,"soepaingzaw":1}},{"path":"src/main/java/seedu/allinonenus/teamplannerclasses/TaskManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus.teamplannerclasses;"},{"lineNumber":2,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":3,"author":{"gitId":"douglaslewpc"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":5,"author":{"gitId":"douglaslewpc"},"content":"public class TaskManager {"},{"lineNumber":6,"author":{"gitId":"douglaslewpc"},"content":"    private ArrayList\u003cTask\u003e taskList;"},{"lineNumber":7,"author":{"gitId":"douglaslewpc"},"content":"    private int taskCount \u003d 0;"},{"lineNumber":8,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":9,"author":{"gitId":"douglaslewpc"},"content":"    public TaskManager() {"},{"lineNumber":10,"author":{"gitId":"douglaslewpc"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":11,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":13,"author":{"gitId":"douglaslewpc"},"content":"    public void addTask(Task task) {"},{"lineNumber":14,"author":{"gitId":"douglaslewpc"},"content":"        taskList.add(task);"},{"lineNumber":15,"author":{"gitId":"douglaslewpc"},"content":"        taskCount++;"},{"lineNumber":16,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":18,"author":{"gitId":"douglaslewpc"},"content":"    public void deleteTask(int taskNum) {"},{"lineNumber":19,"author":{"gitId":"douglaslewpc"},"content":"        if (taskNum \u003c taskCount \u0026\u0026 taskCount \u003e\u003d 0) {"},{"lineNumber":20,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(taskList.get(taskNum) + \" has been removed\");"},{"lineNumber":21,"author":{"gitId":"douglaslewpc"},"content":"            taskList.remove(taskNum);"},{"lineNumber":22,"author":{"gitId":"douglaslewpc"},"content":"            taskCount--;"},{"lineNumber":23,"author":{"gitId":"douglaslewpc"},"content":"        } else {"},{"lineNumber":24,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(\"Index out of range\");"},{"lineNumber":25,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":28,"author":{"gitId":"douglaslewpc"},"content":"    public int getTaskCount() {"},{"lineNumber":29,"author":{"gitId":"douglaslewpc"},"content":"        return taskCount;"},{"lineNumber":30,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":32,"author":{"gitId":"douglaslewpc"},"content":"    public Task getTask(int index) {"},{"lineNumber":33,"author":{"gitId":"douglaslewpc"},"content":"        return taskList.get(index);"},{"lineNumber":34,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":36,"author":{"gitId":"douglaslewpc"},"content":"    public void clearTask() {"},{"lineNumber":37,"author":{"gitId":"douglaslewpc"},"content":"        taskList.clear();"},{"lineNumber":38,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":40,"author":{"gitId":"douglaslewpc"},"content":"}"}],"authorContributionMap":{"douglaslewpc":39,"soepaingzaw":1}},{"path":"src/main/java/seedu/allinonenus/teamplannerclasses/TeamManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus.teamplannerclasses;"},{"lineNumber":2,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":3,"author":{"gitId":"douglaslewpc"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":5,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":6,"author":{"gitId":"douglaslewpc"},"content":"public class TeamManager {"},{"lineNumber":7,"author":{"gitId":"douglaslewpc"},"content":"    private ArrayList\u003cTeamMember\u003e team;"},{"lineNumber":8,"author":{"gitId":"douglaslewpc"},"content":"    private int memberCount \u003d 0;"},{"lineNumber":9,"author":{"gitId":"douglaslewpc"},"content":"    private String password \u003d \"\";"},{"lineNumber":10,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":11,"author":{"gitId":"douglaslewpc"},"content":"    public TeamManager() {"},{"lineNumber":12,"author":{"gitId":"douglaslewpc"},"content":"        this.team \u003d new ArrayList\u003cTeamMember\u003e();"},{"lineNumber":13,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":15,"author":{"gitId":"douglaslewpc"},"content":"    public void addMember(TeamMember teamMember) {"},{"lineNumber":16,"author":{"gitId":"douglaslewpc"},"content":"        team.add(teamMember);"},{"lineNumber":17,"author":{"gitId":"douglaslewpc"},"content":"        memberCount++;"},{"lineNumber":18,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":20,"author":{"gitId":"douglaslewpc"},"content":"    public void removeMember(int memberNum) {"},{"lineNumber":21,"author":{"gitId":"douglaslewpc"},"content":"        if (memberNum \u003c memberCount \u0026\u0026 memberCount \u003e\u003d 0) {"},{"lineNumber":22,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(team.get(memberNum) + \" has been removed\");"},{"lineNumber":23,"author":{"gitId":"douglaslewpc"},"content":"            team.remove(memberNum);"},{"lineNumber":24,"author":{"gitId":"douglaslewpc"},"content":"            memberCount--;"},{"lineNumber":25,"author":{"gitId":"douglaslewpc"},"content":"        } else {"},{"lineNumber":26,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(\"Index out of range\");"},{"lineNumber":27,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":30,"author":{"gitId":"douglaslewpc"},"content":"    public int getMemberCount() {"},{"lineNumber":31,"author":{"gitId":"douglaslewpc"},"content":"        return memberCount;"},{"lineNumber":32,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":34,"author":{"gitId":"douglaslewpc"},"content":"    public TeamMember getTeamMember(int index) {"},{"lineNumber":35,"author":{"gitId":"douglaslewpc"},"content":"        return team.get(index);"},{"lineNumber":36,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":38,"author":{"gitId":"douglaslewpc"},"content":"    public int getIndexOfTeamMember(String teamMemberName) {"},{"lineNumber":39,"author":{"gitId":"douglaslewpc"},"content":"        return team.indexOf(teamMemberName);"},{"lineNumber":40,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":42,"author":{"gitId":"douglaslewpc"},"content":"    public void clearTeam() {"},{"lineNumber":43,"author":{"gitId":"douglaslewpc"},"content":"        team.clear();"},{"lineNumber":44,"author":{"gitId":"douglaslewpc"},"content":"        memberCount \u003d 0;"},{"lineNumber":45,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":47,"author":{"gitId":"douglaslewpc"},"content":"    public void increaseMemberCount(){"},{"lineNumber":48,"author":{"gitId":"douglaslewpc"},"content":"        memberCount++;"},{"lineNumber":49,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":51,"author":{"gitId":"douglaslewpc"},"content":"    public void setPassword(String password){"},{"lineNumber":52,"author":{"gitId":"douglaslewpc"},"content":"        this.password \u003d password;"},{"lineNumber":53,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"douglaslewpc"},"content":"    public String getPassword(){"},{"lineNumber":55,"author":{"gitId":"douglaslewpc"},"content":"        return password;"},{"lineNumber":56,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":58,"author":{"gitId":"douglaslewpc"},"content":"}"}],"authorContributionMap":{"douglaslewpc":57,"soepaingzaw":1}},{"path":"src/main/java/seedu/allinonenus/teamplannerclasses/TeamMember.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus.teamplannerclasses;"},{"lineNumber":2,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":3,"author":{"gitId":"douglaslewpc"},"content":"public class TeamMember {"},{"lineNumber":4,"author":{"gitId":"douglaslewpc"},"content":"    protected String name;"},{"lineNumber":5,"author":{"gitId":"douglaslewpc"},"content":"    protected boolean isTeamLeader;"},{"lineNumber":6,"author":{"gitId":"douglaslewpc"},"content":"    protected TaskManager tasks;"},{"lineNumber":7,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":8,"author":{"gitId":"douglaslewpc"},"content":"    public TeamMember(String name, boolean isTeamLeader) {"},{"lineNumber":9,"author":{"gitId":"douglaslewpc"},"content":"        this.name \u003d name;"},{"lineNumber":10,"author":{"gitId":"douglaslewpc"},"content":"        this.isTeamLeader \u003d isTeamLeader;"},{"lineNumber":11,"author":{"gitId":"douglaslewpc"},"content":"        this.tasks \u003d new TaskManager();"},{"lineNumber":12,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":14,"author":{"gitId":"douglaslewpc"},"content":"    public String getName() {"},{"lineNumber":15,"author":{"gitId":"douglaslewpc"},"content":"        return name;"},{"lineNumber":16,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":18,"author":{"gitId":"douglaslewpc"},"content":"    public boolean isTeamLeader() {"},{"lineNumber":19,"author":{"gitId":"douglaslewpc"},"content":"        return isTeamLeader;"},{"lineNumber":20,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":22,"author":{"gitId":"douglaslewpc"},"content":"    public void addTask(Task task) {"},{"lineNumber":23,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":24,"author":{"gitId":"douglaslewpc"},"content":"        tasks.addTask(task);"},{"lineNumber":25,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":27,"author":{"gitId":"douglaslewpc"},"content":"    public void deleteTask(int taskNum) {"},{"lineNumber":28,"author":{"gitId":"douglaslewpc"},"content":"        tasks.deleteTask(taskNum);"},{"lineNumber":29,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":31,"author":{"gitId":"douglaslewpc"},"content":"    public void markTaskAsDone(int taskNum) {"},{"lineNumber":32,"author":{"gitId":"douglaslewpc"},"content":"        (tasks.getTask(taskNum)).markAsDone();"},{"lineNumber":33,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":35,"author":{"gitId":"douglaslewpc"},"content":"    public int getTaskCount() {"},{"lineNumber":36,"author":{"gitId":"douglaslewpc"},"content":"        return tasks.getTaskCount();"},{"lineNumber":37,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":39,"author":{"gitId":"douglaslewpc"},"content":"    public Task getTask(int taskNum) {"},{"lineNumber":40,"author":{"gitId":"douglaslewpc"},"content":"        return tasks.getTask(taskNum);"},{"lineNumber":41,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":43,"author":{"gitId":"douglaslewpc"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"douglaslewpc"},"content":"    public String toString() {"},{"lineNumber":45,"author":{"gitId":"douglaslewpc"},"content":"        if (isTeamLeader) {"},{"lineNumber":46,"author":{"gitId":"douglaslewpc"},"content":"            return \"[L]\" + name;"},{"lineNumber":47,"author":{"gitId":"douglaslewpc"},"content":"        } else {"},{"lineNumber":48,"author":{"gitId":"douglaslewpc"},"content":"            return \"[M]\" + name;"},{"lineNumber":49,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"douglaslewpc"},"content":"}"}],"authorContributionMap":{"douglaslewpc":50,"soepaingzaw":1}},{"path":"src/main/java/seedu/allinonenus/teamplannerclasses/TeamPlanner.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus.teamplannerclasses;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"soepaingzaw"},"content":"import seedu.allinonenus.teamplannerclasses.TeamManager;"},{"lineNumber":4,"author":{"gitId":"soepaingzaw"},"content":"import seedu.allinonenus.teamplannerclasses.TeamMember;"},{"lineNumber":5,"author":{"gitId":"soepaingzaw"},"content":"import seedu.allinonenus.teamplannerclasses.TeamPlannerException;"},{"lineNumber":6,"author":{"gitId":"soepaingzaw"},"content":"import seedu.allinonenus.teamplannerclasses.TeamPlannerStorage;"},{"lineNumber":7,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":8,"author":{"gitId":"douglaslewpc"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":9,"author":{"gitId":"douglaslewpc"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"douglaslewpc"},"content":"import java.util.Scanner;"},{"lineNumber":11,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class TeamPlanner {"},{"lineNumber":13,"author":{"gitId":"douglaslewpc"},"content":"    private static final String welcomeMessage \u003d \"Welcome to All-In-One-NUS team manager\";"},{"lineNumber":14,"author":{"gitId":"douglaslewpc"},"content":"    private static final String requestTeamLeaderName \u003d \"Please enter the name of the Team lead\";"},{"lineNumber":15,"author":{"gitId":"douglaslewpc"},"content":"    private static final String requestTeamSize \u003d \"Please enter the size of your team\";"},{"lineNumber":16,"author":{"gitId":"douglaslewpc"},"content":"    private static final String requestTeamMembersName \u003d \"Please enter the names of your team members, one per line\";"},{"lineNumber":17,"author":{"gitId":"douglaslewpc"},"content":"    private static final String requestTeamLeaderPassword \u003d \"[Team Lead] Please enter a password\";"},{"lineNumber":18,"author":{"gitId":"douglaslewpc"},"content":"    private static final String requestTeamLeaderPasswordConfirmation \u003d \"[Team Lead] Please re-enter the password\";"},{"lineNumber":19,"author":{"gitId":"douglaslewpc"},"content":"    private static final String passwordConfirmation \u003d \"The password has been set\";"},{"lineNumber":20,"author":{"gitId":"douglaslewpc"},"content":"    private static final String passwordDoNotMatch \u003d \"The passwords do not match\";"},{"lineNumber":21,"author":{"gitId":"douglaslewpc"},"content":"    private static final String displayCommandsAvailable \u003d \"Here are the list of commands available : \\n\""},{"lineNumber":22,"author":{"gitId":"douglaslewpc"},"content":"            + \"1. add member [member] - adds a member (requires password)\\n\""},{"lineNumber":23,"author":{"gitId":"douglaslewpc"},"content":"            + \"2. delete member [member index] - deletes a member (requires password)\\n\""},{"lineNumber":24,"author":{"gitId":"douglaslewpc"},"content":"            + \"3. show members - shows current members\\n\""},{"lineNumber":25,"author":{"gitId":"douglaslewpc"},"content":"            + \"4. clear members - clears the current team and resets the password (requires password)\\n\""},{"lineNumber":26,"author":{"gitId":"douglaslewpc"},"content":"            + \"5. show commands - lists the commands available\\n\""},{"lineNumber":27,"author":{"gitId":"douglaslewpc"},"content":"            + \"6. quit - quits the program\\n\";"},{"lineNumber":28,"author":{"gitId":"douglaslewpc"},"content":"    //            + \"5. add task [member] [task] [priority level(HIGH/MED/LOW)]\\n\""},{"lineNumber":29,"author":{"gitId":"douglaslewpc"},"content":"//            + \"6. delete task [member index] [task index]\\n\""},{"lineNumber":30,"author":{"gitId":"douglaslewpc"},"content":"//            + \"7. mark done [member index] [task]\\n\""},{"lineNumber":31,"author":{"gitId":"douglaslewpc"},"content":"//            + \"8. show tasks\\n\""},{"lineNumber":32,"author":{"gitId":"douglaslewpc"},"content":"    private static final String requestPassword \u003d \"Please enter the password\";"},{"lineNumber":33,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":34,"author":{"gitId":"douglaslewpc"},"content":"    private static TeamManager team \u003d new TeamManager();"},{"lineNumber":35,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":36,"author":{"gitId":"douglaslewpc"},"content":"    public static void teamPlanner() {"},{"lineNumber":37,"author":{"gitId":"douglaslewpc"},"content":"        boolean passwordEntered \u003d false;"},{"lineNumber":38,"author":{"gitId":"douglaslewpc"},"content":"        String password \u003d \"\";"},{"lineNumber":39,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(welcomeMessage);"},{"lineNumber":40,"author":{"gitId":"douglaslewpc"},"content":"        boolean fileNotFoundFlag \u003d true;"},{"lineNumber":41,"author":{"gitId":"douglaslewpc"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"douglaslewpc"},"content":"            TeamPlannerStorage.loadFile(team);"},{"lineNumber":43,"author":{"gitId":"douglaslewpc"},"content":"            fileNotFoundFlag \u003d false;"},{"lineNumber":44,"author":{"gitId":"douglaslewpc"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":45,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(\"No saved file found\");"},{"lineNumber":46,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"douglaslewpc"},"content":"        if (fileNotFoundFlag) {"},{"lineNumber":48,"author":{"gitId":"douglaslewpc"},"content":"            keyInMembersDetails();"},{"lineNumber":49,"author":{"gitId":"douglaslewpc"},"content":"            while (!passwordEntered) {"},{"lineNumber":50,"author":{"gitId":"douglaslewpc"},"content":"                System.out.println(requestTeamLeaderPassword);"},{"lineNumber":51,"author":{"gitId":"douglaslewpc"},"content":"                Scanner in \u003d new Scanner(System.in);"},{"lineNumber":52,"author":{"gitId":"douglaslewpc"},"content":"                password \u003d in.nextLine();"},{"lineNumber":53,"author":{"gitId":"douglaslewpc"},"content":"                System.out.println(requestTeamLeaderPasswordConfirmation);"},{"lineNumber":54,"author":{"gitId":"douglaslewpc"},"content":"                if (password.equals(in.nextLine())) {"},{"lineNumber":55,"author":{"gitId":"douglaslewpc"},"content":"                    passwordEntered \u003d true;"},{"lineNumber":56,"author":{"gitId":"douglaslewpc"},"content":"                    System.out.println(passwordConfirmation);"},{"lineNumber":57,"author":{"gitId":"douglaslewpc"},"content":"                } else {"},{"lineNumber":58,"author":{"gitId":"douglaslewpc"},"content":"                    System.out.println(passwordDoNotMatch);"},{"lineNumber":59,"author":{"gitId":"douglaslewpc"},"content":"                }"},{"lineNumber":60,"author":{"gitId":"douglaslewpc"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"douglaslewpc"},"content":"            team.setPassword(password);"},{"lineNumber":62,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"douglaslewpc"},"content":"        boolean programOn \u003d true;"},{"lineNumber":64,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(displayCommandsAvailable);"},{"lineNumber":65,"author":{"gitId":"douglaslewpc"},"content":"        while (programOn) {"},{"lineNumber":66,"author":{"gitId":"douglaslewpc"},"content":"            boolean passwordCorrect \u003d false;"},{"lineNumber":67,"author":{"gitId":"douglaslewpc"},"content":"            Scanner in \u003d new Scanner(System.in);"},{"lineNumber":68,"author":{"gitId":"douglaslewpc"},"content":"            String command \u003d in.nextLine();"},{"lineNumber":69,"author":{"gitId":"douglaslewpc"},"content":"            String[] commandArguments \u003d command.split(\" \");"},{"lineNumber":70,"author":{"gitId":"douglaslewpc"},"content":"            try {"},{"lineNumber":71,"author":{"gitId":"douglaslewpc"},"content":"                if (commandArguments[0].equals(\"add\") \u0026\u0026 commandArguments[1].equals(\"member\")) {"},{"lineNumber":72,"author":{"gitId":"douglaslewpc"},"content":"                    if (commandArguments.length \u003d\u003d 2) {"},{"lineNumber":73,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(\"Missing parameter in the input. Please specify a member to add\");"},{"lineNumber":74,"author":{"gitId":"douglaslewpc"},"content":"                        continue;"},{"lineNumber":75,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":76,"author":{"gitId":"douglaslewpc"},"content":"                    while (!passwordCorrect) {"},{"lineNumber":77,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(requestPassword);"},{"lineNumber":78,"author":{"gitId":"douglaslewpc"},"content":"                        Scanner input \u003d new Scanner(System.in);"},{"lineNumber":79,"author":{"gitId":"douglaslewpc"},"content":"                        String passwordInputed \u003d input.nextLine();"},{"lineNumber":80,"author":{"gitId":"douglaslewpc"},"content":"                        if (passwordInputed.equals(password)) {"},{"lineNumber":81,"author":{"gitId":"douglaslewpc"},"content":"                            passwordCorrect \u003d true;"},{"lineNumber":82,"author":{"gitId":"douglaslewpc"},"content":"                        }"},{"lineNumber":83,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":84,"author":{"gitId":"douglaslewpc"},"content":"                    String teamMemberName \u003d \"\";"},{"lineNumber":85,"author":{"gitId":"douglaslewpc"},"content":"                    for (String word : commandArguments) {"},{"lineNumber":86,"author":{"gitId":"douglaslewpc"},"content":"                        if (word.equals(\"add\") || word.equals(\"member\")) {"},{"lineNumber":87,"author":{"gitId":"douglaslewpc"},"content":"                            continue;"},{"lineNumber":88,"author":{"gitId":"douglaslewpc"},"content":"                        } else {"},{"lineNumber":89,"author":{"gitId":"douglaslewpc"},"content":"                            teamMemberName +\u003d word;"},{"lineNumber":90,"author":{"gitId":"douglaslewpc"},"content":"                        }"},{"lineNumber":91,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":92,"author":{"gitId":"douglaslewpc"},"content":"                    TeamMember teamMember \u003d new TeamMember(teamMemberName, false);"},{"lineNumber":93,"author":{"gitId":"douglaslewpc"},"content":"                    team.addMember(teamMember);"},{"lineNumber":94,"author":{"gitId":"douglaslewpc"},"content":"                    System.out.println(\"[M]\" + team.getTeamMember(team.getMemberCount() - 1) + \" has been added to the team\");"},{"lineNumber":95,"author":{"gitId":"douglaslewpc"},"content":"                    try {"},{"lineNumber":96,"author":{"gitId":"douglaslewpc"},"content":"                        TeamPlannerStorage.saveFile(team);"},{"lineNumber":97,"author":{"gitId":"douglaslewpc"},"content":"                    } catch (IOException e) {"},{"lineNumber":98,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(\"Unable to save the current members as a text file\");"},{"lineNumber":99,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":100,"author":{"gitId":"douglaslewpc"},"content":"                } else if (commandArguments[0].equals(\"delete\") \u0026\u0026 commandArguments[1].equals(\"member\")) {"},{"lineNumber":101,"author":{"gitId":"douglaslewpc"},"content":"                    if (commandArguments.length \u003d\u003d 2) {"},{"lineNumber":102,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(\"Missing parameter in the input. Please specify a member to delete\");"},{"lineNumber":103,"author":{"gitId":"douglaslewpc"},"content":"                        continue;"},{"lineNumber":104,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":105,"author":{"gitId":"douglaslewpc"},"content":"                    while (!passwordCorrect) {"},{"lineNumber":106,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(requestPassword);"},{"lineNumber":107,"author":{"gitId":"douglaslewpc"},"content":"                        Scanner input \u003d new Scanner(System.in);"},{"lineNumber":108,"author":{"gitId":"douglaslewpc"},"content":"                        String passwordInputed \u003d input.nextLine();"},{"lineNumber":109,"author":{"gitId":"douglaslewpc"},"content":"                        if (passwordInputed.equals(password)) {"},{"lineNumber":110,"author":{"gitId":"douglaslewpc"},"content":"                            passwordCorrect \u003d true;"},{"lineNumber":111,"author":{"gitId":"douglaslewpc"},"content":"                        }"},{"lineNumber":112,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":113,"author":{"gitId":"douglaslewpc"},"content":"                    try {"},{"lineNumber":114,"author":{"gitId":"douglaslewpc"},"content":"                        int indexOfMemberToBeDeleted \u003d Integer.parseInt(commandArguments[2]);"},{"lineNumber":115,"author":{"gitId":"douglaslewpc"},"content":"                        if (indexOfMemberToBeDeleted \u003c team.getMemberCount()) {"},{"lineNumber":116,"author":{"gitId":"douglaslewpc"},"content":"                            System.out.println(team.getTeamMember(indexOfMemberToBeDeleted) + \" will be removed\");"},{"lineNumber":117,"author":{"gitId":"douglaslewpc"},"content":"                            team.removeMember(indexOfMemberToBeDeleted);"},{"lineNumber":118,"author":{"gitId":"douglaslewpc"},"content":"                        } else {"},{"lineNumber":119,"author":{"gitId":"douglaslewpc"},"content":"                            System.out.println(\"Index out of range\");"},{"lineNumber":120,"author":{"gitId":"douglaslewpc"},"content":"                        }"},{"lineNumber":121,"author":{"gitId":"douglaslewpc"},"content":"                    } catch (NumberFormatException e) {"},{"lineNumber":122,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(\"Invalid input for member index\");"},{"lineNumber":123,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":124,"author":{"gitId":"douglaslewpc"},"content":"                    try {"},{"lineNumber":125,"author":{"gitId":"douglaslewpc"},"content":"                        TeamPlannerStorage.saveFile(team);"},{"lineNumber":126,"author":{"gitId":"douglaslewpc"},"content":"                    } catch (IOException e) {"},{"lineNumber":127,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(\"Unable to save the current members as a text file\");"},{"lineNumber":128,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":129,"author":{"gitId":"douglaslewpc"},"content":"                } else if (commandArguments[0].equals(\"show\") \u0026\u0026 commandArguments[1].equals(\"members\")) {"},{"lineNumber":130,"author":{"gitId":"douglaslewpc"},"content":"                    System.out.println(\"The team details are as follows:\");"},{"lineNumber":131,"author":{"gitId":"douglaslewpc"},"content":"                    showTeamMembers();"},{"lineNumber":132,"author":{"gitId":"douglaslewpc"},"content":"                } else if (commandArguments[0].equals(\"clear\") \u0026\u0026 commandArguments[1].equals(\"members\")) {"},{"lineNumber":133,"author":{"gitId":"douglaslewpc"},"content":"                    while (!passwordCorrect) {"},{"lineNumber":134,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(requestPassword);"},{"lineNumber":135,"author":{"gitId":"douglaslewpc"},"content":"                        Scanner input \u003d new Scanner(System.in);"},{"lineNumber":136,"author":{"gitId":"douglaslewpc"},"content":"                        String passwordInputed \u003d input.nextLine();"},{"lineNumber":137,"author":{"gitId":"douglaslewpc"},"content":"                        if (passwordInputed.equals(password)) {"},{"lineNumber":138,"author":{"gitId":"douglaslewpc"},"content":"                            passwordCorrect \u003d true;"},{"lineNumber":139,"author":{"gitId":"douglaslewpc"},"content":"                        }"},{"lineNumber":140,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":141,"author":{"gitId":"douglaslewpc"},"content":"                    team.clearTeam();"},{"lineNumber":142,"author":{"gitId":"douglaslewpc"},"content":"                    try {"},{"lineNumber":143,"author":{"gitId":"douglaslewpc"},"content":"                        TeamPlannerStorage.saveFile(team);"},{"lineNumber":144,"author":{"gitId":"douglaslewpc"},"content":"                    } catch (IOException e) {"},{"lineNumber":145,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(\"Unable to save the current members as a text file\");"},{"lineNumber":146,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":147,"author":{"gitId":"douglaslewpc"},"content":"                    password \u003d \"\";"},{"lineNumber":148,"author":{"gitId":"douglaslewpc"},"content":"                    team.setPassword(password);"},{"lineNumber":149,"author":{"gitId":"douglaslewpc"},"content":"                    System.out.println(welcomeMessage);"},{"lineNumber":150,"author":{"gitId":"douglaslewpc"},"content":"                    keyInMembersDetails();"},{"lineNumber":151,"author":{"gitId":"douglaslewpc"},"content":"                    while (!passwordEntered) {"},{"lineNumber":152,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(requestTeamLeaderPassword);"},{"lineNumber":153,"author":{"gitId":"douglaslewpc"},"content":"                        Scanner teamInput \u003d new Scanner(System.in);"},{"lineNumber":154,"author":{"gitId":"douglaslewpc"},"content":"                        password \u003d teamInput.nextLine();"},{"lineNumber":155,"author":{"gitId":"douglaslewpc"},"content":"                        System.out.println(requestTeamLeaderPasswordConfirmation);"},{"lineNumber":156,"author":{"gitId":"douglaslewpc"},"content":"                        if (password.equals(in.nextLine())) {"},{"lineNumber":157,"author":{"gitId":"douglaslewpc"},"content":"                            passwordEntered \u003d true;"},{"lineNumber":158,"author":{"gitId":"douglaslewpc"},"content":"                            System.out.println(passwordConfirmation);"},{"lineNumber":159,"author":{"gitId":"douglaslewpc"},"content":"                        } else {"},{"lineNumber":160,"author":{"gitId":"douglaslewpc"},"content":"                            System.out.println(passwordDoNotMatch);"},{"lineNumber":161,"author":{"gitId":"douglaslewpc"},"content":"                        }"},{"lineNumber":162,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":163,"author":{"gitId":"douglaslewpc"},"content":"                    team.setPassword(password);"},{"lineNumber":164,"author":{"gitId":"douglaslewpc"},"content":"                } else if (commandArguments[0].equals(\"help\")) {"},{"lineNumber":165,"author":{"gitId":"douglaslewpc"},"content":"                    System.out.println(displayCommandsAvailable);"},{"lineNumber":166,"author":{"gitId":"douglaslewpc"},"content":"                } else if (commandArguments[0].equals(\"quit\")) {"},{"lineNumber":167,"author":{"gitId":"douglaslewpc"},"content":"                    programOn \u003d false;"},{"lineNumber":168,"author":{"gitId":"douglaslewpc"},"content":"                } else {"},{"lineNumber":169,"author":{"gitId":"douglaslewpc"},"content":"                    throw new TeamPlannerException(\"invalid_input\");"},{"lineNumber":170,"author":{"gitId":"douglaslewpc"},"content":"                }"},{"lineNumber":171,"author":{"gitId":"douglaslewpc"},"content":"//                } else if (commandArguments[0].equals(\"add\") \u0026\u0026 commandArguments[1].equals(\"task\")) {"},{"lineNumber":172,"author":{"gitId":"douglaslewpc"},"content":"//                    int priorityLevel \u003d 0;"},{"lineNumber":173,"author":{"gitId":"douglaslewpc"},"content":"//                    if (commandArguments[4].equals(\"HIGH\")) {"},{"lineNumber":174,"author":{"gitId":"douglaslewpc"},"content":"//                        priorityLevel \u003d 1;"},{"lineNumber":175,"author":{"gitId":"douglaslewpc"},"content":"//                    } else if (commandArguments[4].equals(\"MED\")) {"},{"lineNumber":176,"author":{"gitId":"douglaslewpc"},"content":"//                        priorityLevel \u003d 2;"},{"lineNumber":177,"author":{"gitId":"douglaslewpc"},"content":"//                    } else if (commandArguments[4].equals(\"LOW\")) {"},{"lineNumber":178,"author":{"gitId":"douglaslewpc"},"content":"//                        priorityLevel \u003d 3;"},{"lineNumber":179,"author":{"gitId":"douglaslewpc"},"content":"//                    }"},{"lineNumber":180,"author":{"gitId":"douglaslewpc"},"content":"//                    Task task \u003d new Task(commandArguments[3], priorityLevel, false);"},{"lineNumber":181,"author":{"gitId":"douglaslewpc"},"content":"//                    (team.getTeamMember(team.getIndexOfTeamMember(commandArguments[2]))).addTask(task);"},{"lineNumber":182,"author":{"gitId":"douglaslewpc"},"content":"//                } else if (commandArguments[0].equals(\"delete\") \u0026\u0026 commandArguments[1].equals(\"task\")) {"},{"lineNumber":183,"author":{"gitId":"douglaslewpc"},"content":"//                    TeamMember teamMember \u003d (team.getTeamMember(team.getIndexOfTeamMember(commandArguments[2])));"},{"lineNumber":184,"author":{"gitId":"douglaslewpc"},"content":"//                    teamMember.deleteTask(Integer.parseInt(commandArguments[2]));"},{"lineNumber":185,"author":{"gitId":"douglaslewpc"},"content":"//                } else if (commandArguments[0].equals(\"mark\") \u0026\u0026 commandArguments[1].equals(\"done\")) {"},{"lineNumber":186,"author":{"gitId":"douglaslewpc"},"content":"//                    TeamMember teamMember \u003d (team.getTeamMember(team.getIndexOfTeamMember(commandArguments[2])));"},{"lineNumber":187,"author":{"gitId":"douglaslewpc"},"content":"//                    teamMember.markTaskAsDone(Integer.parseInt(commandArguments[2]));"},{"lineNumber":188,"author":{"gitId":"douglaslewpc"},"content":"//                } else if (commandArguments[0].equals(\"show\") \u0026\u0026 commandArguments[1].equals(\"tasks\")) {"},{"lineNumber":189,"author":{"gitId":"douglaslewpc"},"content":"//                    for (int i \u003d 0; i \u003c team.getMemberCount(); i++) {"},{"lineNumber":190,"author":{"gitId":"douglaslewpc"},"content":"//                        System.out.println(\"Member Name: \" + team.getTeamMember(i));"},{"lineNumber":191,"author":{"gitId":"douglaslewpc"},"content":"//                        for (int j \u003d 0; j \u003c (team.getTeamMember(i)).getTaskCount(); j++) {"},{"lineNumber":192,"author":{"gitId":"douglaslewpc"},"content":"//                            System.out.println(\"  \" + j + \". \" + (team.getTeamMember(i)).getTask(j));"},{"lineNumber":193,"author":{"gitId":"douglaslewpc"},"content":"//                        }"},{"lineNumber":194,"author":{"gitId":"douglaslewpc"},"content":"//                    }"},{"lineNumber":195,"author":{"gitId":"douglaslewpc"},"content":"            } catch (TeamPlannerException e) {"},{"lineNumber":196,"author":{"gitId":"douglaslewpc"},"content":"                System.out.println(\"Invalid input\");"},{"lineNumber":197,"author":{"gitId":"douglaslewpc"},"content":"                System.out.println(displayCommandsAvailable);"},{"lineNumber":198,"author":{"gitId":"douglaslewpc"},"content":"            }"},{"lineNumber":199,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":200,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":201,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":202,"author":{"gitId":"douglaslewpc"},"content":"    public static void keyInMembersDetails() {"},{"lineNumber":203,"author":{"gitId":"douglaslewpc"},"content":"        //Initialize the teamManager class"},{"lineNumber":204,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(requestTeamLeaderName);"},{"lineNumber":205,"author":{"gitId":"douglaslewpc"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":206,"author":{"gitId":"douglaslewpc"},"content":"        String teamLeaderInputed \u003d in.nextLine();"},{"lineNumber":207,"author":{"gitId":"douglaslewpc"},"content":"        //Add leader to the teamManager class"},{"lineNumber":208,"author":{"gitId":"douglaslewpc"},"content":"        TeamMember teamLeader \u003d new TeamMember(teamLeaderInputed, true);"},{"lineNumber":209,"author":{"gitId":"douglaslewpc"},"content":"        team.addMember(teamLeader);"},{"lineNumber":210,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(requestTeamSize);"},{"lineNumber":211,"author":{"gitId":"douglaslewpc"},"content":"        int size \u003d 0;"},{"lineNumber":212,"author":{"gitId":"douglaslewpc"},"content":"        boolean validTeamSize \u003d false;"},{"lineNumber":213,"author":{"gitId":"douglaslewpc"},"content":"        while (!validTeamSize) {"},{"lineNumber":214,"author":{"gitId":"douglaslewpc"},"content":"            try {"},{"lineNumber":215,"author":{"gitId":"douglaslewpc"},"content":"                size \u003d Integer.parseInt(in.nextLine());"},{"lineNumber":216,"author":{"gitId":"douglaslewpc"},"content":"                validTeamSize \u003d true;"},{"lineNumber":217,"author":{"gitId":"douglaslewpc"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":218,"author":{"gitId":"douglaslewpc"},"content":"                System.out.println(\"Please enter a number\");"},{"lineNumber":219,"author":{"gitId":"douglaslewpc"},"content":"            }"},{"lineNumber":220,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":221,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(requestTeamMembersName);"},{"lineNumber":222,"author":{"gitId":"douglaslewpc"},"content":"        for (int i \u003d 0; i \u003c size; i++) {"},{"lineNumber":223,"author":{"gitId":"douglaslewpc"},"content":"            String teamMemberInputed \u003d in.nextLine();"},{"lineNumber":224,"author":{"gitId":"douglaslewpc"},"content":"            //Add each member to the teamManager class"},{"lineNumber":225,"author":{"gitId":"douglaslewpc"},"content":"            TeamMember teamMember \u003d new TeamMember(teamMemberInputed, false);"},{"lineNumber":226,"author":{"gitId":"douglaslewpc"},"content":"            team.addMember(teamMember);"},{"lineNumber":227,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":228,"author":{"gitId":"douglaslewpc"},"content":"        System.out.println(\"The team details are as follows:\");"},{"lineNumber":229,"author":{"gitId":"douglaslewpc"},"content":"        showTeamMembers();"},{"lineNumber":230,"author":{"gitId":"douglaslewpc"},"content":"        try {"},{"lineNumber":231,"author":{"gitId":"douglaslewpc"},"content":"            TeamPlannerStorage.saveFile(team);"},{"lineNumber":232,"author":{"gitId":"douglaslewpc"},"content":"        } catch (IOException e) {"},{"lineNumber":233,"author":{"gitId":"douglaslewpc"},"content":"            System.out.println(\"Unable to save the current members as a text file\");"},{"lineNumber":234,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":235,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":236,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":237,"author":{"gitId":"douglaslewpc"},"content":"    public static void showTeamMembers() {"},{"lineNumber":238,"author":{"gitId":"douglaslewpc"},"content":"        for (int i \u003d 0; i \u003c team.getMemberCount(); i++) {"},{"lineNumber":239,"author":{"gitId":"douglaslewpc"},"content":"            if ((team.getTeamMember(i)).isTeamLeader()) {"},{"lineNumber":240,"author":{"gitId":"douglaslewpc"},"content":"                System.out.println((i + 1) + \". [L] \" + (team.getTeamMember(i)).getName());"},{"lineNumber":241,"author":{"gitId":"douglaslewpc"},"content":"            } else {"},{"lineNumber":242,"author":{"gitId":"douglaslewpc"},"content":"                System.out.println((i + 1) + \". [M]\" + (team.getTeamMember(i)).getName());"},{"lineNumber":243,"author":{"gitId":"douglaslewpc"},"content":"            }"},{"lineNumber":244,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":245,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":246,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":247,"author":{"gitId":"douglaslewpc"},"content":"    public void run() {"},{"lineNumber":248,"author":{"gitId":"douglaslewpc"},"content":"        teamPlanner();"},{"lineNumber":249,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":250,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":251,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":252,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"douglaslewpc":244,"soepaingzaw":5,"-":3}},{"path":"src/main/java/seedu/allinonenus/teamplannerclasses/TeamPlannerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus.teamplannerclasses;"},{"lineNumber":2,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":3,"author":{"gitId":"douglaslewpc"},"content":"public class TeamPlannerException extends Exception {"},{"lineNumber":4,"author":{"gitId":"douglaslewpc"},"content":"    public TeamPlannerException(String s) {"},{"lineNumber":5,"author":{"gitId":"douglaslewpc"},"content":"        super(s);"},{"lineNumber":6,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"douglaslewpc"},"content":"}"}],"authorContributionMap":{"douglaslewpc":6,"soepaingzaw":1}},{"path":"src/main/java/seedu/allinonenus/teamplannerclasses/TeamPlannerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus.teamplannerclasses;"},{"lineNumber":2,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":3,"author":{"gitId":"douglaslewpc"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"douglaslewpc"},"content":"import java.io.File;"},{"lineNumber":5,"author":{"gitId":"douglaslewpc"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"douglaslewpc"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"douglaslewpc"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":8,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":9,"author":{"gitId":"douglaslewpc"},"content":"public class TeamPlannerStorage {"},{"lineNumber":10,"author":{"gitId":"douglaslewpc"},"content":"    public static void loadFile(TeamManager team) throws FileNotFoundException {"},{"lineNumber":11,"author":{"gitId":"douglaslewpc"},"content":"        File filePath \u003d new File(\"team.txt\");"},{"lineNumber":12,"author":{"gitId":"douglaslewpc"},"content":"        if (!filePath.exists()) {"},{"lineNumber":13,"author":{"gitId":"douglaslewpc"},"content":"            throw new FileNotFoundException();"},{"lineNumber":14,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"douglaslewpc"},"content":"        Scanner s \u003d new Scanner(filePath);"},{"lineNumber":16,"author":{"gitId":"douglaslewpc"},"content":"        if (filePath.length() !\u003d 0) {"},{"lineNumber":17,"author":{"gitId":"douglaslewpc"},"content":"            while (s.hasNext()) {"},{"lineNumber":18,"author":{"gitId":"douglaslewpc"},"content":"                String currentLine \u003d s.nextLine();"},{"lineNumber":19,"author":{"gitId":"douglaslewpc"},"content":"                String[] words \u003d currentLine.split(\"\");"},{"lineNumber":20,"author":{"gitId":"douglaslewpc"},"content":"                if (words[1].equals(\"[M]\")) {"},{"lineNumber":21,"author":{"gitId":"douglaslewpc"},"content":"                    String teamMemberName \u003d \"\";"},{"lineNumber":22,"author":{"gitId":"douglaslewpc"},"content":"                    for (int i \u003d 1; i \u003c words.length; i++) {"},{"lineNumber":23,"author":{"gitId":"douglaslewpc"},"content":"                        teamMemberName +\u003d words[i];"},{"lineNumber":24,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":25,"author":{"gitId":"douglaslewpc"},"content":"                    TeamMember teamMember \u003d new TeamMember(teamMemberName, false);"},{"lineNumber":26,"author":{"gitId":"douglaslewpc"},"content":"                    team.addMember(teamMember);"},{"lineNumber":27,"author":{"gitId":"douglaslewpc"},"content":"                    team.increaseMemberCount();"},{"lineNumber":28,"author":{"gitId":"douglaslewpc"},"content":"                } else if (words[1].equals(\"[L]\")) {"},{"lineNumber":29,"author":{"gitId":"douglaslewpc"},"content":"                    String teamMemberName \u003d \"\";"},{"lineNumber":30,"author":{"gitId":"douglaslewpc"},"content":"                    for (int i \u003d 2; i \u003c words.length; i++) {"},{"lineNumber":31,"author":{"gitId":"douglaslewpc"},"content":"                        teamMemberName +\u003d words[i];"},{"lineNumber":32,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":33,"author":{"gitId":"douglaslewpc"},"content":"                    TeamMember teamMember \u003d new TeamMember(teamMemberName, true);"},{"lineNumber":34,"author":{"gitId":"douglaslewpc"},"content":"                    team.addMember(teamMember);"},{"lineNumber":35,"author":{"gitId":"douglaslewpc"},"content":"                    team.increaseMemberCount();"},{"lineNumber":36,"author":{"gitId":"douglaslewpc"},"content":"                } else if (words[0].equals(\"[P]\")) {"},{"lineNumber":37,"author":{"gitId":"douglaslewpc"},"content":"                    String password \u003d \"\";"},{"lineNumber":38,"author":{"gitId":"douglaslewpc"},"content":"                    for (int i \u003d 1; i \u003c words.length; i++) {"},{"lineNumber":39,"author":{"gitId":"douglaslewpc"},"content":"                        password +\u003d words[i];"},{"lineNumber":40,"author":{"gitId":"douglaslewpc"},"content":"                    }"},{"lineNumber":41,"author":{"gitId":"douglaslewpc"},"content":"                    team.setPassword(password);"},{"lineNumber":42,"author":{"gitId":"douglaslewpc"},"content":"                }"},{"lineNumber":43,"author":{"gitId":"douglaslewpc"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":47,"author":{"gitId":"douglaslewpc"},"content":"    public static void saveFile(TeamManager team) throws IOException {"},{"lineNumber":48,"author":{"gitId":"douglaslewpc"},"content":"        File filePath \u003d new File(\"team.txt\");"},{"lineNumber":49,"author":{"gitId":"douglaslewpc"},"content":"        if (!filePath.exists()) {"},{"lineNumber":50,"author":{"gitId":"douglaslewpc"},"content":"            if (filePath.exists()) {"},{"lineNumber":51,"author":{"gitId":"douglaslewpc"},"content":"                throw new IOException();"},{"lineNumber":52,"author":{"gitId":"douglaslewpc"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"douglaslewpc"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath);"},{"lineNumber":55,"author":{"gitId":"douglaslewpc"},"content":"        for (int i \u003d 0; i \u003c team.getMemberCount(); i++) {"},{"lineNumber":56,"author":{"gitId":"douglaslewpc"},"content":"            String teamMember \u003d team.getTeamMember(i).toString() + \"\\n\";"},{"lineNumber":57,"author":{"gitId":"douglaslewpc"},"content":"            fileWriter.write(teamMember);"},{"lineNumber":58,"author":{"gitId":"douglaslewpc"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"douglaslewpc"},"content":"        String password \u003d \"[P]\" + team.getPassword();"},{"lineNumber":60,"author":{"gitId":"douglaslewpc"},"content":"        fileWriter.write(password);"},{"lineNumber":61,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"douglaslewpc"},"content":"}"}],"authorContributionMap":{"douglaslewpc":61,"soepaingzaw":1}},{"path":"src/test/java/seedu/allinonenus/DukeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"class DukeTest {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"soepaingzaw":1,"-":11}},{"path":"src/test/java/seedu/allinonenus/capcalculatorclasses/ModuleListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus.capcalculatorclasses;"},{"lineNumber":2,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":3,"author":{"gitId":"soepaingzaw"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":5,"author":{"gitId":"soepaingzaw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":7,"author":{"gitId":"soepaingzaw"},"content":"class ModuleListTest {"},{"lineNumber":8,"author":{"gitId":"soepaingzaw"},"content":""},{"lineNumber":9,"author":{"gitId":"soepaingzaw"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"soepaingzaw"},"content":"    void verifyNumberPrintedForgradesToPoints() {"},{"lineNumber":11,"author":{"gitId":"soepaingzaw"},"content":"        ModuleList ml \u003d new ModuleList();"},{"lineNumber":12,"author":{"gitId":"soepaingzaw"},"content":"        String inputString \u003d \"A-\";"},{"lineNumber":13,"author":{"gitId":"soepaingzaw"},"content":"        assertEquals(4.5,ml.gradesToPoints(inputString));"},{"lineNumber":14,"author":{"gitId":"soepaingzaw"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"soepaingzaw"},"content":"}"}],"authorContributionMap":{"soepaingzaw":15}},{"path":"src/test/java/seedu/allinonenus/foodstore/FoodStoreTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus.foodstore;"},{"lineNumber":2,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":3,"author":{"gitId":"rageqqq"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":5,"author":{"gitId":"rageqqq"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":7,"author":{"gitId":"rageqqq"},"content":"class FoodStoreTest {"},{"lineNumber":8,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":9,"author":{"gitId":"rageqqq"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"rageqqq"},"content":"    void toString_expectOneString() {"},{"lineNumber":11,"author":{"gitId":"rageqqq"},"content":"        FoodStore foodStore \u003d new FoodStore(\"Chicken Rice\", \"Sells White and Roasted Chicken\");"},{"lineNumber":12,"author":{"gitId":"rageqqq"},"content":"        String correctOutput \u003d \"[Non-Halal] Chicken Rice: Sells White and Roasted Chicken\";"},{"lineNumber":13,"author":{"gitId":"rageqqq"},"content":"        assertEquals(correctOutput, foodStore.toString());"},{"lineNumber":14,"author":{"gitId":"rageqqq"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"rageqqq"},"content":""},{"lineNumber":16,"author":{"gitId":"rageqqq"},"content":"}"}],"authorContributionMap":{"rageqqq":15,"soepaingzaw":1}},{"path":"src/test/java/seedu/allinonenus/moduleplanner/ModulePlannerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus.moduleplanner;"},{"lineNumber":2,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":3,"author":{"gitId":"fangxinjia0203"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":5,"author":{"gitId":"fangxinjia0203"},"content":"class ModulePlannerTest {"},{"lineNumber":6,"author":{"gitId":"fangxinjia0203"},"content":"    private final ModulePlanner cs2113 \u003d new ModulePlanner();"},{"lineNumber":7,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":8,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":9,"author":{"gitId":"fangxinjia0203"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"fangxinjia0203"},"content":"    void main() {"},{"lineNumber":11,"author":{"gitId":"fangxinjia0203"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"fangxinjia0203"},"content":"}"}],"authorContributionMap":{"fangxinjia0203":11,"soepaingzaw":1}},{"path":"src/test/java/seedu/allinonenus/moduleplanner/StudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus.moduleplanner;"},{"lineNumber":2,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":3,"author":{"gitId":"fangxinjia0203"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":5,"author":{"gitId":"fangxinjia0203"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":7,"author":{"gitId":"fangxinjia0203"},"content":"class StudentTest {"},{"lineNumber":8,"author":{"gitId":"fangxinjia0203"},"content":"    private final Student alice \u003d new Student(\"Alice\", 1, true, 1);"},{"lineNumber":9,"author":{"gitId":"fangxinjia0203"},"content":"    private final Student bob \u003d new Student(\"Bob\", 2, false, 2);"},{"lineNumber":10,"author":{"gitId":"fangxinjia0203"},"content":""},{"lineNumber":11,"author":{"gitId":"fangxinjia0203"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"fangxinjia0203"},"content":"    void testScore() {"},{"lineNumber":13,"author":{"gitId":"fangxinjia0203"},"content":"        assertEquals(9, alice.getScore());"},{"lineNumber":14,"author":{"gitId":"fangxinjia0203"},"content":"        assertEquals(6, bob.getScore());"},{"lineNumber":15,"author":{"gitId":"fangxinjia0203"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"fangxinjia0203"},"content":"}"}],"authorContributionMap":{"fangxinjia0203":15,"soepaingzaw":1}},{"path":"src/test/java/seedu/allinonenus/teamplannerclasses/TeamManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"soepaingzaw"},"content":"package seedu.allinonenus.teamplannerclasses;"},{"lineNumber":2,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":3,"author":{"gitId":"douglaslewpc"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":5,"author":{"gitId":"douglaslewpc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":7,"author":{"gitId":"douglaslewpc"},"content":"class TeamManagerTest {"},{"lineNumber":8,"author":{"gitId":"douglaslewpc"},"content":""},{"lineNumber":9,"author":{"gitId":"douglaslewpc"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"douglaslewpc"},"content":"    void getTeamMember_oneTeamMember_expectIndexOfTeamMember() {"},{"lineNumber":11,"author":{"gitId":"douglaslewpc"},"content":"        TeamManager team \u003d new TeamManager();"},{"lineNumber":12,"author":{"gitId":"douglaslewpc"},"content":"        String inputString \u003d \"inputName\";"},{"lineNumber":13,"author":{"gitId":"douglaslewpc"},"content":"        TeamMember teamMember \u003d new TeamMember(inputString,false);"},{"lineNumber":14,"author":{"gitId":"douglaslewpc"},"content":"        team.addMember(teamMember);"},{"lineNumber":15,"author":{"gitId":"douglaslewpc"},"content":"        String outputString \u003d (team.getTeamMember(0)).getName();"},{"lineNumber":16,"author":{"gitId":"douglaslewpc"},"content":"        assertEquals(outputString,\"inputName\");"},{"lineNumber":17,"author":{"gitId":"douglaslewpc"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"douglaslewpc"},"content":"}"}],"authorContributionMap":{"douglaslewpc":17,"soepaingzaw":1}}]
