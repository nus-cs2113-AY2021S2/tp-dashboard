[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":"    mainClassName \u003d \"seedu.duke.NusMaze\"","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":"    archiveBaseName \u003d \"NUSMaze\"","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"KimIdeas8"},"content":"run {","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"KimIdeas8"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"KimIdeas8":2,"SimBowen":2,"-":43}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":"\u003cimg src\u003d\"https://user-images.githubusercontent.com/60348727/114308634-3921c680-9b17-11eb-9f2f-b0daaca5be16.png\" width\u003d\"100\" height\u003d\"100\"\u003e | Wonjae Choi | [Github](https://github.com/wjchoi0712) | [Portfolio](team/wjchoi0712.md)","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"\u003cimg src\u003d\"https://user-images.githubusercontent.com/60348727/114308652-3de67a80-9b17-11eb-9c2c-1cc6b6bde2e0.png\" width\u003d\"100\" height\u003d\"100\"\u003e | Sim Bowen | [Github](https://github.com/SimBowen) | [Portfolio](team/simbowen.md)","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"Rizavur"},"content":"\u003cimg src\u003d\"https://user-images.githubusercontent.com/60348727/114308855-d4b33700-9b17-11eb-82b7-9e47db8c7d4d.png\" width\u003d\"100\" height\u003d\"100\"\u003e | Shuhao | [Github](https://github.com/Rye98) | [Portfolio](team/rye98.md)","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"\u003cimg src\u003d\"https://user-images.githubusercontent.com/60348727/114308644-3b842080-9b17-11eb-9c78-d9ae5a829861.png\" width\u003d\"100\" height\u003d\"100\"\u003e | Rizavur Rahman | [Github](https://github.com/Rizavur) | [Portfolio](team/rizavur.md)","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"\u003cimg src\u003d\"https://user-images.githubusercontent.com/60348727/114308637-3a52f380-9b17-11eb-9e85-94af4794be8b.png\" width\u003d\"100\" height\u003d\"100\"\u003e | Kimberley Tay | [Github](https://github.com/KimIdeas8) | [Portfolio](team/kimideas8.md)","lastModifiedDate":"2021-04-11"}],"authorContributionMap":{"SimBowen":2,"-":4,"Rizavur":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"# Developer Guide for NUSMaze","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"---------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":"## Table Of Contents","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Rizavur"},"content":"1. [Introduction](#1-introduction)  ","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":"    1.1. [Overview](#11-overview)  ","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"    1.2. [Setting up and getting started](#12-setting-up-and-getting-started)  ","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":"2. [Design](#2-design)  ","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":"    2.1. [Architecture](#21-architecture)     ","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"    2.2. [UIManager Component](#22-uimanager-component)  ","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"    2.3. [Parser Component](#23-parser-component)  ","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"    2.4. [Command Component](#24-command-component)  ","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"    2.5. [Router Component](#25-router-component)  ","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"    2.6. [Data Component](#26-data-component)  ","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"    2.7. [Storage Component](#27-storage-component)  ","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"Rizavur"},"content":"3. [Implementation](#3-implementation)  ","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"    3.1. [Finding The Shortest Route Feature](#31-finding-the-shortest-route-feature)  ","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.1.1. [Current implementation](#311-current-implementation)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.1.2. [Routing](#312-routing)    ","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"Rizavur"},"content":"    3.2. [Daily Route Planning Feature](#32-daily-route-planning-feature)  ","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.2.1. [Current implementation](#321-current-implementation)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.2.2. [Adding daily route](#322-adding-daily-route)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.2.3. [Showing daily route](#323-showing-daily-route)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.2.4. [Deleting daily route](#324-deleting-daily-route)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"    3.3. [Favourite Routes Feature](#33-favourite-routes-feature)  ","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.3.1. [Current implementation](#331-current-implementation)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.3.2. [Loading of saved favourite routes](#332-loading-of-saved-favourite-routes)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.3.3. [Adding of favourite routes](#333-adding-of-favourite-route)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.3.4. [Reviewing saved favourite routes](#334-reviewing-saved-favourite-routes)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.3.5. [Repeating favourite route](#335-repeating-favourite-route)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.3.6. [Deleting favourite route](#336-deleting-favourite-route)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"Rizavur"},"content":"    3.4. [Custom Aliases Feature](#34-custom-aliases-feature)  ","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"SimBowen"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.4.1. [Current implementation](#341-current-implementation)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.4.2. [Adding of custom aliases](#342-adding-of-custom-aliases)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.4.3. [Showing custom aliases](#343-showing-custom-aliases)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"SimBowen"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.4.4. [Deleting a custom alias](#344-deleting-a-custom-alias)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.4.5. [Example for alias feature](#345-example-for-alias-feature)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"SimBowen"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.4.6. [Design consideration](#346-design-consideration)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"Rizavur"},"content":"    3.5. [History Feature](#35-history-feature)  ","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"SimBowen"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.5.1. [Current implementation](#351-current-implementation)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"SimBowen"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.5.2. [Loading of saved history](#352-loading-of-saved-history)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"SimBowen"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.5.3. [Showing past searches](#353-showing-past-searches)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"SimBowen"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.5.4. [Repeat past searches](#354-repeat-past-searches)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"SimBowen"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.5.5. [Clear past searches](#355-clear-past-searches)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"SimBowen"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.5.6. [Design consideration](#356-design-consideration)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"SimBowen"},"content":"    3.6. [Save Feature](#36-save-feature)  ","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"SimBowen"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.6.1. [Current implementation](#311-current-implementation)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"SimBowen"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.6.2. [Saving/Loading Data](#362-savingloading-data)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"SimBowen"},"content":"    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.6.3. [Design consideration](#363-design-consideration)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"Rizavur"},"content":"4. [Appendix: Requirements](#4-appendix-requirements)  ","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"Rizavur"},"content":"    4.1. [Product Scope](#41-product-scope)  ","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"Rizavur"},"content":"    4.2. [User Stories](#42-user-stories)  ","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"Rizavur"},"content":"    4.3. [Use Cases](#43-use-cases)  ","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"Rizavur"},"content":"    4.4. [Non-functional Requirements](#44-non-functional-requirements)  ","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"Rizavur"},"content":"    4.5. [Glossary](#45-glossary)","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"Rizavur"},"content":"5. [Appendix: Instructions for manual testing](#5-appendix-instructions-for-manual-testing)  ","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"Rizavur"},"content":"   5.1. [Launch and shutdown](#51-launch-and-shutdown)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":60,"author":{"gitId":"Rizavur"},"content":"   5.2. [Viewing help](#52-viewing-help)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":61,"author":{"gitId":"Rizavur"},"content":"   5.3. [Viewing venues in NUSMaze](#53-viewing-venues-in-nusmaze)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":62,"author":{"gitId":"Rizavur"},"content":"   5.4. [Routing](#54-routing)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":63,"author":{"gitId":"Rizavur"},"content":"   5.5. [History](#55-history)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":64,"author":{"gitId":"wjchoi0712"},"content":"   5.6. [Alias](#56-alias)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":65,"author":{"gitId":"wjchoi0712"},"content":"   5.7. [Daily Route](#57-daily-route)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":66,"author":{"gitId":"wjchoi0712"},"content":"   5.8. [Favourites](#58-favourites)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":67,"author":{"gitId":"wjchoi0712"},"content":"   5.9. [Notes](#59-notes)  ","lastModifiedDate":"2021-04-12"},{"lineNumber":68,"author":{"gitId":"wjchoi0712"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"Rizavur"},"content":"---------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"wjchoi0712"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":74,"author":{"gitId":"Rizavur"},"content":"## *1. Introduction*  ","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"Rizavur"},"content":"### 1.1. Overview","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"KimIdeas8"},"content":"NUSMaze is a Command Line Interface (CLI) based application that aims to simplify NUS Engineering students’ journey from one point to another within the Engineering and Computing faculties of NUS. The application allows users to find the best route from one block to another, add favourite locations, locate the nearest eatery and much more. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"KimIdeas8"},"content":"The purpose of this developer guide is to aid any curious or interested contributor in developing NUSMaze further by providing more insight on how the features were implemented. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"Rizavur"},"content":"### 1.2. Setting up and getting started ","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"SimBowen"},"content":"1. Ensure that Java 11 and IntelliJ Idea (or your preferred Java IDE) are installed in your computer.  ","lastModifiedDate":"2021-04-09"},{"lineNumber":83,"author":{"gitId":"SimBowen"},"content":"2. Fork the NUSMaze repo from [here](https://github.com/AY2021S2-CS2113T-T09-2/tp), and clone the fork into your computer.    ","lastModifiedDate":"2021-04-09"},{"lineNumber":84,"author":{"gitId":"SimBowen"},"content":"3. Configure the JDK in IntelliJ Idea to use JDK 11 by following instructions from [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).    ","lastModifiedDate":"2021-04-09"},{"lineNumber":85,"author":{"gitId":"SimBowen"},"content":"4. Import the project as a Gradle project.","lastModifiedDate":"2021-04-09"},{"lineNumber":86,"author":{"gitId":"SimBowen"},"content":"5. If you had previously disabled the Gradle plugin, go to `File → Settings → Plugins` to re-enable them.  ","lastModifiedDate":"2021-04-09"},{"lineNumber":87,"author":{"gitId":"SimBowen"},"content":"6. Click on Import Project and select the build.gradle file.  ","lastModifiedDate":"2021-04-09"},{"lineNumber":88,"author":{"gitId":"SimBowen"},"content":"7. Navigate to the NUSMaze class via the path `src → main → java → seedu.duke → NUSMaze` and right click on it.  ","lastModifiedDate":"2021-04-09"},{"lineNumber":89,"author":{"gitId":"SimBowen"},"content":"8. Press run on the `Main()` method of NUSMaze.","lastModifiedDate":"2021-04-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"Rizavur"},"content":"If the set up process had been completed successfully, you should see the following message:  ","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"wjchoi0712"},"content":"![img.png](images/NUSMazecli.png)","lastModifiedDate":"2021-04-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"Rizavur"},"content":"---------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"wjchoi0712"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":98,"author":{"gitId":"Rizavur"},"content":"## *2. Design* ","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"Rizavur"},"content":"### 2.1. Architecture","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"Rizavur"},"content":"![img.png](images/architecture.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"wjchoi0712"},"content":"The **Architecture Diagram** above depicts the high-level design of the NUSMaze. You can always refer to this diagram","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"KimIdeas8"},"content":"to understand how the different components of NUSMaze interact with each other. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"wjchoi0712"},"content":"The class [`NusMaze`](https://github.com/AY2021S2-CS2113T-T09-2/tp/blob/master/src/main/java/seedu/duke/NusMaze.java) is where the `main()` ","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"SimBowen"},"content":"method belongs and is responsible for:","lastModifiedDate":"2021-04-12"},{"lineNumber":107,"author":{"gitId":"wjchoi0712"},"content":"* When the app launches, initialise and connect different components of the NUSMaze in correct sequence.","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"wjchoi0712"},"content":"* When the app terminates, shut down all the components.","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"wjchoi0712"},"content":"Architecture Components of NUSMaze:","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"wjchoi0712"},"content":"* [**`UIManager`**](#22-uimanager-component): The user interface of the app","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"wjchoi0712"},"content":"* [**`Parser`**](#23-parser-component): Processes commands inputted by the user","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"wjchoi0712"},"content":"* [**`Command`**](#24-command-component): Executes the user command ","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"KimIdeas8"},"content":"* [**`Router`**](#25-router-component): Searches the shortest route","lastModifiedDate":"2021-04-07"},{"lineNumber":115,"author":{"gitId":"KimIdeas8"},"content":"* [**`Data`**](#26-data-component): Holds the data of the app to be used ","lastModifiedDate":"2021-04-08"},{"lineNumber":116,"author":{"gitId":"KimIdeas8"},"content":"* [**`Storage`**](#27-storage-component): Reads app data from and writes the app data to created text files","lastModifiedDate":"2021-04-07"},{"lineNumber":117,"author":{"gitId":"SimBowen"},"content":"* **`Text Files`**: Holds the data of the app in memory","lastModifiedDate":"2021-04-12"},{"lineNumber":118,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"wjchoi0712"},"content":"Explanations on how each component is designed and how it functions are further elaborated in the following ","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"KimIdeas8"},"content":"chapters of the developer guide. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":121,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"wjchoi0712"},"content":"### 2.2. UIManager Component ","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"Rizavur"},"content":"![img.png](images/ui_design.png)  ","lastModifiedDate":"2021-03-31"},{"lineNumber":124,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"Rizavur"},"content":"The UI of the application is managed by the [`UiManager`](https://github.com/AY2021S2-CS2113T-T09-2/tp/blob/master/src/main/java/seedu/duke/ui/UiManager.java) class as shown by the class diagram above. The individual UI classes for each feature such as `AliasUi`, `DailyRouteUi` and","lastModifiedDate":"2021-04-11"},{"lineNumber":126,"author":{"gitId":"KimIdeas8"},"content":"`FavouriteUi` extend the `UiManager` class. The UiManager class consists of the methods that are used to display recurrent messages on the *CLI* and also the utilities to get the user\u0027s inputs. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":127,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"Rizavur"},"content":"The `UiManager` requires the static string variables from the `CommonMessages` class to obtain the commonly used messages that","lastModifiedDate":"2021-03-31"},{"lineNumber":129,"author":{"gitId":"KimIdeas8"},"content":"such as the divider and input headers. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":130,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":131,"author":{"gitId":"Rizavur"},"content":"The individual UI classes contain the methods that are used to get user inputs specific to the needs of the specific feature that","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"Rizavur"},"content":"it is responsible for. For example, when the routing feature is to be executed, the UI will need to prompt the user to obtain 2","lastModifiedDate":"2021-03-31"},{"lineNumber":133,"author":{"gitId":"Rizavur"},"content":"inputs, namely the `from block` and the `to block`. Hence, the `RouterUi` contains the `getRoutingInfo()` method which will prompt","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"KimIdeas8"},"content":"the user for these two inputs using the utility methods from the UiManager. Methods to get user input are called upon directly from the command classes of the specific feature command. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":135,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":136,"author":{"gitId":"KimIdeas8"},"content":"The `UiManager` Component:","lastModifiedDate":"2021-04-12"},{"lineNumber":137,"author":{"gitId":"KimIdeas8"},"content":"* displays messages in the *CLI*. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":138,"author":{"gitId":"KimIdeas8"},"content":"* provides the Ui classes of the respective features with the utilities to obtain user input specific to their needs. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":139,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"Rizavur"},"content":"### 2.3. Parser Component ","lastModifiedDate":"2021-03-30"},{"lineNumber":141,"author":{"gitId":"Rizavur"},"content":"![img.png](images/ParserComponent.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"wjchoi0712"},"content":"As shown above in the class diagram, **Parser component** is made out of the `Parser` class.","lastModifiedDate":"2021-03-31"},{"lineNumber":144,"author":{"gitId":"wjchoi0712"},"content":"After the `UiManager` reads in the user command, `NusMaze` makes use of the `Parser` to interpret ","lastModifiedDate":"2021-03-31"},{"lineNumber":145,"author":{"gitId":"KimIdeas8"},"content":"the user command and it will instantiate a new Command object to execute the command. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":146,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":147,"author":{"gitId":"wjchoi0712"},"content":"The Sequence diagram shown below is of a scenario where the user inputs an `invalid input`. It will allow you to ","lastModifiedDate":"2021-04-12"},{"lineNumber":148,"author":{"gitId":"KimIdeas8"},"content":"get a better understanding of how the `Parser` class interacts with `NusMaze` and `UiManager`. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":149,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"Rizavur"},"content":"![img.png](images/Parsersequencediagram.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":151,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":152,"author":{"gitId":"wjchoi0712"},"content":"### 2.4. Command Component","lastModifiedDate":"2021-03-31"},{"lineNumber":153,"author":{"gitId":"Rizavur"},"content":"![img.png](images/CommandComponent.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":154,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":155,"author":{"gitId":"wjchoi0712"},"content":"The class diagram above may seem complicated at first glance but it actually isn\u0027t.","lastModifiedDate":"2021-03-31"},{"lineNumber":156,"author":{"gitId":"wjchoi0712"},"content":"The **Command Component** of NUSMaze is made out of `Command` class, which is the parent class of","lastModifiedDate":"2021-03-31"},{"lineNumber":157,"author":{"gitId":"wjchoi0712"},"content":"all the other classes in the component (eg. `GoCommand`, `ByeCommand`). Depending on which command the user inputs, the","lastModifiedDate":"2021-03-31"},{"lineNumber":158,"author":{"gitId":"wjchoi0712"},"content":"`Parser` creates different `Command` class to execute the task. ","lastModifiedDate":"2021-03-31"},{"lineNumber":159,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":160,"author":{"gitId":"wjchoi0712"},"content":"Each `Command` class has:","lastModifiedDate":"2021-03-31"},{"lineNumber":161,"author":{"gitId":"SimBowen"},"content":"* A distinct `execute()` method which is overrides the parent class, therefore tailored to execute the given command.","lastModifiedDate":"2021-04-12"},{"lineNumber":162,"author":{"gitId":"wjchoi0712"},"content":"* An `ui` specifically for taking in further user input in order to carry out the command.","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":164,"author":{"gitId":"wjchoi0712"},"content":"### 2.5. Router Component","lastModifiedDate":"2021-03-31"},{"lineNumber":165,"author":{"gitId":"Rizavur"},"content":"![img.png](images/RouterComponent.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":166,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":167,"author":{"gitId":"SimBowen"},"content":"The **Router Component** consist of the `Router` class which is responsible for finding the shortest route to get from","lastModifiedDate":"2021-04-12"},{"lineNumber":168,"author":{"gitId":"wjchoi0712"},"content":"one location to another. In finding the shortest route, it utilises the breath-first-search algorithm, which will be ","lastModifiedDate":"2021-03-31"},{"lineNumber":169,"author":{"gitId":"KimIdeas8"},"content":"further elaborated in the implementation section. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":170,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":171,"author":{"gitId":"wjchoi0712"},"content":"As shown in the diagram above, `Router` is used by the following classes:","lastModifiedDate":"2021-03-31"},{"lineNumber":172,"author":{"gitId":"wjchoi0712"},"content":"* `GoCommand`","lastModifiedDate":"2021-03-31"},{"lineNumber":173,"author":{"gitId":"wjchoi0712"},"content":"* `RepeatHistoryCommand`","lastModifiedDate":"2021-03-31"},{"lineNumber":174,"author":{"gitId":"wjchoi0712"},"content":"* `RepeatFavouriteCommand`","lastModifiedDate":"2021-03-31"},{"lineNumber":175,"author":{"gitId":"wjchoi0712"},"content":"* `ShowDailyRouteCommand`","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":177,"author":{"gitId":"wjchoi0712"},"content":"### 2.6. Data Component","lastModifiedDate":"2021-03-31"},{"lineNumber":178,"author":{"gitId":"Rizavur"},"content":"![img.png](images/DataComponent.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":179,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"wjchoi0712"},"content":"The **Data Component** is where all the data that are needed to execute a command is stored. For example when `\"go\"`","lastModifiedDate":"2021-03-31"},{"lineNumber":181,"author":{"gitId":"wjchoi0712"},"content":"command is executed, the `GoCommand` object will use data stored in `NusMap`, `EateryList` and `BlockAlias` in order to find","lastModifiedDate":"2021-03-31"},{"lineNumber":182,"author":{"gitId":"KimIdeas8"},"content":"the shortest route. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":183,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":184,"author":{"gitId":"KimIdeas8"},"content":"On the other hand, the **Storage Component** is responsible for saving from and loading data into stored in the **Data Component**. This will be","lastModifiedDate":"2021-04-08"},{"lineNumber":185,"author":{"gitId":"KimIdeas8"},"content":"further elaborated in the following section. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":186,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":187,"author":{"gitId":"wjchoi0712"},"content":"### 2.7. Storage Component","lastModifiedDate":"2021-03-31"},{"lineNumber":188,"author":{"gitId":"KimIdeas8"},"content":"![img.png](images/StorageComponent.png)","lastModifiedDate":"2021-04-07"},{"lineNumber":189,"author":{"gitId":"KimIdeas8"},"content":"The **Storage Component** reads app\u0027s data from the objects of the **Data Component** and writes to the **Text File component**. ","lastModifiedDate":"2021-04-08"},{"lineNumber":190,"author":{"gitId":"KimIdeas8"},"content":"It reads the app\u0027s data from the **Text File component** and writes the app\u0027s data into the objects of the **Data component**. \u003cbr\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":191,"author":{"gitId":"KimIdeas8"},"content":"The **Storage Component**:","lastModifiedDate":"2021-04-07"},{"lineNumber":192,"author":{"gitId":"KimIdeas8"},"content":"- loads the app\u0027s data from the relevant text file using the `filepath` into the `nusMap`, `blockAlias`, `history`, `favourite`, or `dailyRoute` objects.","lastModifiedDate":"2021-04-07"},{"lineNumber":193,"author":{"gitId":"KimIdeas8"},"content":"- saves the app\u0027s data from `nusMap`, `blockAlias`, `history`, `favourite`, or `dailyRoute` objects into the relevant text file using the `filepath`.","lastModifiedDate":"2021-04-07"},{"lineNumber":194,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":195,"author":{"gitId":"Rizavur"},"content":"---------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":197,"author":{"gitId":"wjchoi0712"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":198,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":199,"author":{"gitId":"Rizavur"},"content":"## *3. Implementation*","lastModifiedDate":"2021-03-31"},{"lineNumber":200,"author":{"gitId":"SimBowen"},"content":"### 3.1. Finding The Shortest Route Feature","lastModifiedDate":"2021-04-11"},{"lineNumber":201,"author":{"gitId":"SimBowen"},"content":"#### 3.1.1. Current Implementation","lastModifiedDate":"2021-04-12"},{"lineNumber":202,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":203,"author":{"gitId":"SimBowen"},"content":"The current implementation of finding the shortest route is facilitated by the `Router` class which uses data stored in `NusMap`, `Block`, and `BlockAlias` class to return the shortest path.","lastModifiedDate":"2021-04-11"},{"lineNumber":204,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":205,"author":{"gitId":"SimBowen"},"content":"The `GoCommand` class extends the `Command` class and overrides the `execute` method to run the routing algorithm.","lastModifiedDate":"2021-04-11"},{"lineNumber":206,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":207,"author":{"gitId":"SimBowen"},"content":"The image below depicts how the `GoCommand` is implemented.","lastModifiedDate":"2021-04-11"},{"lineNumber":208,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":209,"author":{"gitId":"SimBowen"},"content":"![img.png](images/router.png)","lastModifiedDate":"2021-04-11"},{"lineNumber":210,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":211,"author":{"gitId":"SimBowen"},"content":"#### 3.1.2. Routing","lastModifiedDate":"2021-04-12"},{"lineNumber":212,"author":{"gitId":"SimBowen"},"content":"Given below is an example scenario of how the routing algorithm functions.","lastModifiedDate":"2021-04-11"},{"lineNumber":213,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":214,"author":{"gitId":"SimBowen"},"content":"1. User executes `GoCommand` and the `RouterUi` reads in the starting location and destination.\u003cbr /\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":215,"author":{"gitId":"KimIdeas8"},"content":"2. The input is changed to the name of the block if applicable. \u003cbr /\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":216,"author":{"gitId":"KimIdeas8"},"content":"3. The blocks are then checked to see if they are valid blocks. \u003cbr /\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":217,"author":{"gitId":"SimBowen"},"content":"4. `GoCommand` will then check if the second entry is eatery. If it is not \"EATERY\", step 3 and 4 are skipped for step 5.\u003cbr /\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":218,"author":{"gitId":"SimBowen"},"content":"5. `GoCommand` will then create an instance of `EateryList` and invokes its method `sortEateriesByDistance()` which returns a list of eateries in order of the closest distance.\u003cbr /\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":219,"author":{"gitId":"SimBowen"},"content":"6. `GoCommand` then takes in the selection of eatery that the user is chosen and sets the destination.\u003cbr/\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":220,"author":{"gitId":"SimBowen"},"content":"7. The Router will then run the `findShortestRoute()` method which is a routing algorithm based on breath-first search. This returns the shortest route as a string\u003cbr /\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":221,"author":{"gitId":"SimBowen"},"content":"8. The `RouterUi` will then show the shortest route to the user through `showMessageWithDivider()` method.\u003cbr /\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":222,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":223,"author":{"gitId":"SimBowen"},"content":"Shown below is the sequence diagram when a valid block is entered for the starting location and destination.","lastModifiedDate":"2021-04-11"},{"lineNumber":224,"author":{"gitId":"SimBowen"},"content":"![img.png](images/routersequencediagram.png)","lastModifiedDate":"2021-04-11"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":226,"author":{"gitId":"Rizavur"},"content":"### 3.2. Daily route planning feature","lastModifiedDate":"2021-03-30"},{"lineNumber":227,"author":{"gitId":"SimBowen"},"content":"#### 3.2.1. Current Implementation","lastModifiedDate":"2021-04-12"},{"lineNumber":228,"author":{"gitId":"SimBowen"},"content":"The current implementation is facilitated by `DailyRoute` class, with the `AddDailyRouteCommand`, `ShowDailyRouteCommand` and `DeleteDailyRouteCommand` subclasses invoking methods that the `DailyRoute` class provides. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":229,"author":{"gitId":"SimBowen"},"content":"`AddDailyRouteCommand`, `ClearDailyRouteCommand` and `DeleteDailyRouteCommand` extend `Command` (superclass). \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":230,"author":{"gitId":"SimBowen"},"content":"`AddDailyRouteCommand` implements the feature of adding the schedule of the day to the `DailyRoute` object. `ShowDailyRouteCommand` accesses the `DailyRoute` object to retrieve an ArrayList with the location schedule provided from the `AddDailyRouteCommand` and run the routing algorithm present in the `Router` object. `DeleteDailyRouteCommand` clears the schedule mapped to the selected day.\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":231,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":232,"author":{"gitId":"SimBowen"},"content":"Additionally, `DailyRoute` implements the following operations:","lastModifiedDate":"2021-04-03"},{"lineNumber":233,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":234,"author":{"gitId":"SimBowen"},"content":"`addDailyRoute(String ,ArrayList\u003cString\u003e)` — Maps the inputted day string to the inputted ArrayList of the schedule of the day in a hashmap . \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":235,"author":{"gitId":"SimBowen"},"content":"`getDailyRoute(String)` — Returns the schedule of the day that is mapped to the inputted day. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":236,"author":{"gitId":"SimBowen"},"content":"`getSelectableDays()` — Returns the current days that have schedules mapped to them.\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":237,"author":{"gitId":"SimBowen"},"content":"`getValidDays()` — Returns the days of the week.\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":238,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":239,"author":{"gitId":"SimBowen"},"content":"These operations are exposed in the `DailyRoute` class  as `DailyRoute#addDailyRoute()`, `DailyRoute#getDailyRoute(String)`, `DailyRoute#getSelectableDay()`, `DailyRoute#getValidDay()`. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":240,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":241,"author":{"gitId":"SimBowen"},"content":"#### 3.2.2. Adding daily route ","lastModifiedDate":"2021-04-12"},{"lineNumber":242,"author":{"gitId":"SimBowen"},"content":"Given below is an example usage scenario and how the addDailyRoute mechanism behaves at each step. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":243,"author":{"gitId":"SimBowen"},"content":"1. The user launches the application.\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":244,"author":{"gitId":"SimBowen"},"content":"2. The user executes `add daily route` command. UI will then prompt the user `Select entry to add:`  to input a day index. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":245,"author":{"gitId":"SimBowen"},"content":"3. The UI then prompts the user to input the next block that is in the day\u0027s schedule.  \u003cbr\u003e The inputted location will be appended to an ArrayList. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":246,"author":{"gitId":"SimBowen"},"content":"4. Repeat step 3 until the word `END` is input by the user. \u003cbr\u003e ","lastModifiedDate":"2021-04-11"},{"lineNumber":247,"author":{"gitId":"SimBowen"},"content":"5. The inputted day, and the filled Arraylist from step 3 is then passed into the DailyRoute object\u003cbr\u003e This done using the addDailyRoute method from the DailyRoute class. The selectableDay boolean flag for the selected day is also set to true. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":248,"author":{"gitId":"SimBowen"},"content":"6. The day and filled Arraylist passed in step 5 is then saved in a hashmap that the DailyRoute object contains. \u003cbr\u003e ","lastModifiedDate":"2021-04-11"},{"lineNumber":249,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":250,"author":{"gitId":"SimBowen"},"content":"The following image shows the sequence diagram in which the addDailyRoute command is executed.","lastModifiedDate":"2021-04-09"},{"lineNumber":251,"author":{"gitId":"Rizavur"},"content":"![img.png](images/addday.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":252,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":253,"author":{"gitId":"SimBowen"},"content":"#### 3.2.3. Showing daily route","lastModifiedDate":"2021-04-12"},{"lineNumber":254,"author":{"gitId":"SimBowen"},"content":"Given below is an example usage scenario and how the showDailyRoute mechanism behaves at each step.","lastModifiedDate":"2021-03-30"},{"lineNumber":255,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":256,"author":{"gitId":"SimBowen"},"content":"1. The user launches the application.\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":257,"author":{"gitId":"SimBowen"},"content":"2. The user executes `show daily route` command. UI will then prompt the user `Select entry:`  to input a day index. This returns an arraylist of the day\u0027s schedule. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":258,"author":{"gitId":"SimBowen"},"content":"3. The routing algorithm is now performed for each of the blocks in the array list in order. Each execution of the routing algorithm returns a string which is then appended to the end of an Array list. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":259,"author":{"gitId":"SimBowen"},"content":"4. The arraylist of the days schedule, and the arraylist that contains the routes from the routing algorithm are then output through Daily Route Ui \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":260,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":261,"author":{"gitId":"SimBowen"},"content":"The following image shows the sequence diagram in which the showDailyRoute command is executed.","lastModifiedDate":"2021-04-09"},{"lineNumber":262,"author":{"gitId":"Rizavur"},"content":"![img.png](images/showday.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":263,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":264,"author":{"gitId":"SimBowen"},"content":"#### 3.2.4. Deleting daily route","lastModifiedDate":"2021-04-12"},{"lineNumber":265,"author":{"gitId":"SimBowen"},"content":"Given below is an example usage scenario and how the deleteDailyRoute mechanism behaves at each step.","lastModifiedDate":"2021-04-09"},{"lineNumber":266,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":267,"author":{"gitId":"SimBowen"},"content":"1. The user launches the application.\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":268,"author":{"gitId":"SimBowen"},"content":"2. The user executes `delete daily route` command. UI will then show the selectable days if applicable and prompt the user `Select entry:`  to input a day index. If there are no days scheduled, the UI will print `\"There are no daily routes planned!\"` \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":269,"author":{"gitId":"SimBowen"},"content":"3. The `addDailyRoute(day, schedule)` method is then called with the selected day as day, and an empty array list as the schedule. The selectable day boolean flag for the day is set to false in the DailyRoute object, and the schedule mapped to the day is cleared.\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":270,"author":{"gitId":"SimBowen"},"content":"4. The String `\"Got it! Successfully cleared [DAY]\u0027s schedule!\"` is output through Daily Route Ui \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":271,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":272,"author":{"gitId":"SimBowen"},"content":"The following image shows the sequence diagram in which the deleteDailyRoute command is executed.","lastModifiedDate":"2021-04-09"},{"lineNumber":273,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":274,"author":{"gitId":"SimBowen"},"content":"![img.png](images/clearday.png)","lastModifiedDate":"2021-04-03"},{"lineNumber":275,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":276,"author":{"gitId":"SimBowen"},"content":"### 3.3. Favourite Routes feature","lastModifiedDate":"2021-04-11"},{"lineNumber":277,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":278,"author":{"gitId":"Rye98"},"content":"![img.png](images/Favourite.png)","lastModifiedDate":"2021-04-12"},{"lineNumber":279,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":280,"author":{"gitId":"SimBowen"},"content":"#### 3.3.1. Current Implementation","lastModifiedDate":"2021-04-12"},{"lineNumber":281,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":282,"author":{"gitId":"SimBowen"},"content":"The favourite routes feature acts as an independent storage of the user\u0027s favourites routes,","lastModifiedDate":"2021-04-11"},{"lineNumber":283,"author":{"gitId":"SimBowen"},"content":"allowing the user to call of the route without going through the hassle of the `go` command.","lastModifiedDate":"2021-04-11"},{"lineNumber":284,"author":{"gitId":"SimBowen"},"content":"The start and destination of the favourite routes are saved within an ArrayList named `favourites`.","lastModifiedDate":"2021-04-11"},{"lineNumber":285,"author":{"gitId":"SimBowen"},"content":"The contents of `favourites` will be stored into a text file named `favouritesList.txt` when NUSMaze terminates.","lastModifiedDate":"2021-04-11"},{"lineNumber":286,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":287,"author":{"gitId":"SimBowen"},"content":"#### 3.3.2. Loading of saved favourite routes","lastModifiedDate":"2021-04-12"},{"lineNumber":288,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":289,"author":{"gitId":"SimBowen"},"content":"When NUSMaze launches, the contents of the text file `favouritesList.txt` will be read,","lastModifiedDate":"2021-04-11"},{"lineNumber":290,"author":{"gitId":"SimBowen"},"content":"and stored into `favourites`.","lastModifiedDate":"2021-04-11"},{"lineNumber":291,"author":{"gitId":"SimBowen"},"content":"Refer to the section on **Storage** for more information.","lastModifiedDate":"2021-04-11"},{"lineNumber":292,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":293,"author":{"gitId":"SimBowen"},"content":"#### 3.3.3. Adding of favourite route","lastModifiedDate":"2021-04-12"},{"lineNumber":294,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":295,"author":{"gitId":"SimBowen"},"content":"The command to add a favourite route is `add favourite`.","lastModifiedDate":"2021-04-11"},{"lineNumber":296,"author":{"gitId":"SimBowen"},"content":"Upon calling the `add favourite` command, the user will be prompted to enter the starting block,","lastModifiedDate":"2021-04-11"},{"lineNumber":297,"author":{"gitId":"SimBowen"},"content":"followed by the destination block. If valid blocks are given,","lastModifiedDate":"2021-04-11"},{"lineNumber":298,"author":{"gitId":"SimBowen"},"content":"the route from the starting block to destination block will be added into `favourites`.","lastModifiedDate":"2021-04-11"},{"lineNumber":299,"author":{"gitId":"SimBowen"},"content":"If any invalid block is given, `InvalidBlockException` will be thrown.","lastModifiedDate":"2021-04-11"},{"lineNumber":300,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":301,"author":{"gitId":"SimBowen"},"content":"#### 3.3.4. Reviewing saved favourite routes","lastModifiedDate":"2021-04-12"},{"lineNumber":302,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":303,"author":{"gitId":"SimBowen"},"content":"The command to display all the saved favourite routes is `show favourite`.","lastModifiedDate":"2021-04-11"},{"lineNumber":304,"author":{"gitId":"SimBowen"},"content":"If there are no saved routes, `EmptyFavouriteException` will be thrown.","lastModifiedDate":"2021-04-11"},{"lineNumber":305,"author":{"gitId":"SimBowen"},"content":"If there are any saved favourite routes, a numbered list of the saved routes will be shown to the user.","lastModifiedDate":"2021-04-11"},{"lineNumber":306,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":307,"author":{"gitId":"SimBowen"},"content":"#### 3.3.5. Repeating favourite route","lastModifiedDate":"2021-04-12"},{"lineNumber":308,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":309,"author":{"gitId":"SimBowen"},"content":"The command to repeat a favourite route is `repeat favourite`.","lastModifiedDate":"2021-04-11"},{"lineNumber":310,"author":{"gitId":"SimBowen"},"content":"Upon calling the `repeat favourite` command, the user would be shown a numbered list of saved favourite routes.","lastModifiedDate":"2021-04-11"},{"lineNumber":311,"author":{"gitId":"SimBowen"},"content":"Otherwise, `EmptyFavouriteException` will be thrown.","lastModifiedDate":"2021-04-11"},{"lineNumber":312,"author":{"gitId":"SimBowen"},"content":"After the numbered list of saved favourite routes is shown, the user would be prompted to enter the index of the favourite","lastModifiedDate":"2021-04-11"},{"lineNumber":313,"author":{"gitId":"SimBowen"},"content":"route to be executed. Any invalid input such as decimals or alphabets will result in","lastModifiedDate":"2021-04-11"},{"lineNumber":314,"author":{"gitId":"SimBowen"},"content":"`InvalidIndexException` to be thrown.","lastModifiedDate":"2021-04-11"},{"lineNumber":315,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":316,"author":{"gitId":"SimBowen"},"content":"#### 3.3.6. Deleting favourite route","lastModifiedDate":"2021-04-12"},{"lineNumber":317,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":318,"author":{"gitId":"SimBowen"},"content":"The command to delete a favourite route is `delete favourite`.","lastModifiedDate":"2021-04-11"},{"lineNumber":319,"author":{"gitId":"SimBowen"},"content":"If there are no saved favourite routes, `EmptyFavouriteException` will be thrown.","lastModifiedDate":"2021-04-11"},{"lineNumber":320,"author":{"gitId":"SimBowen"},"content":"If there are any saved favourite routes, a numbered list of the saved routes will be shown to the user.","lastModifiedDate":"2021-04-11"},{"lineNumber":321,"author":{"gitId":"SimBowen"},"content":"The user is then prompted to enter the index of the route to be deleted.","lastModifiedDate":"2021-04-11"},{"lineNumber":322,"author":{"gitId":"SimBowen"},"content":"Any invalid input such as decimals or alphabets will result in","lastModifiedDate":"2021-04-11"},{"lineNumber":323,"author":{"gitId":"SimBowen"},"content":"`InvalidIndexException` to be thrown.","lastModifiedDate":"2021-04-11"},{"lineNumber":324,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":325,"author":{"gitId":"Rizavur"},"content":"### 3.4. Custom aliases feature","lastModifiedDate":"2021-03-30"},{"lineNumber":326,"author":{"gitId":"SimBowen"},"content":"#### 3.4.1. Current Implementation","lastModifiedDate":"2021-04-12"},{"lineNumber":327,"author":{"gitId":"Rizavur"},"content":"The following diagram illustrates the class diagram for implementation of the alias feature:","lastModifiedDate":"2021-03-31"},{"lineNumber":328,"author":{"gitId":"Rizavur"},"content":"![img.png](images/AliasFeature.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":329,"author":{"gitId":"Rizavur"},"content":"The command entered by the user in the `Main()` function of NUSMaze will be parsed by the `Parser` class. Thereafter, the parser will decide which of the 3 alias commands,","lastModifiedDate":"2021-04-12"},{"lineNumber":330,"author":{"gitId":"Rizavur"},"content":"if applicable, was the command that the user wanted to execute. ","lastModifiedDate":"2021-03-31"},{"lineNumber":331,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":332,"author":{"gitId":"Rizavur"},"content":"The three command classes, namely `AddCustomAliasCommand`, `ShowCustomAliasCommand` and `DeleteCustomAliasCommand` extend the `Command` class, and they all depend on the `AliasUi` class to obtain inputs and display outputs.","lastModifiedDate":"2021-04-11"},{"lineNumber":333,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":334,"author":{"gitId":"Rizavur"},"content":"Another thing to note is that the `NUSMaze` class has an `AliasStorage` class that facilitates the storage of the aliases so that the user can access their aliases even after they close and reopen the application. ","lastModifiedDate":"2021-04-11"},{"lineNumber":335,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":336,"author":{"gitId":"Rizavur"},"content":"The data model for this feature is facilitated by the `BlockAlias` class which contains the hashmap of custom aliases and block pairs. ","lastModifiedDate":"2021-03-31"},{"lineNumber":337,"author":{"gitId":"Rizavur"},"content":"The hashmap will have the `custom alias name` as the `key` and the `block name` as the `value` for each key-value pair. The","lastModifiedDate":"2021-03-31"},{"lineNumber":338,"author":{"gitId":"Rizavur"},"content":"`BlockAlias` class also depends on the `NusMap` class to ensure that valid blocks are input by the user.","lastModifiedDate":"2021-03-31"},{"lineNumber":339,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":340,"author":{"gitId":"SimBowen"},"content":"#### 3.4.2. Adding of custom aliases","lastModifiedDate":"2021-04-12"},{"lineNumber":341,"author":{"gitId":"Rizavur"},"content":"The user can enter `add alias` invoke an instance of `AddCustomAliasCommand` which will prompt them for the","lastModifiedDate":"2021-04-12"},{"lineNumber":342,"author":{"gitId":"Rizavur"},"content":"alias and block names. If the alias name already exists, or the alias name conflicts","lastModifiedDate":"2021-04-12"},{"lineNumber":343,"author":{"gitId":"Rizavur"},"content":"with a block name, the application will display an error message and the addition of the custom alias will not be executed. If there","lastModifiedDate":"2021-04-12"},{"lineNumber":344,"author":{"gitId":"Rizavur"},"content":"were no errors, the alias and block pair would be added to the hashmap in the instance of the `BlockAlias` class and it will also be","lastModifiedDate":"2021-04-12"},{"lineNumber":345,"author":{"gitId":"Rizavur"},"content":"stored in the `AliasStorage`.","lastModifiedDate":"2021-04-12"},{"lineNumber":346,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":347,"author":{"gitId":"SimBowen"},"content":"#### 3.4.3. Showing custom aliases","lastModifiedDate":"2021-04-12"},{"lineNumber":348,"author":{"gitId":"Rizavur"},"content":"The user can enter `show alias` to invoke an instance of `ShowCustomAliasCommand` to view all the alias and block pairs that have been stored previously by them.","lastModifiedDate":"2021-04-12"},{"lineNumber":349,"author":{"gitId":"Rizavur"},"content":"If there are no alias and block pairs, then the message `You haven\u0027t set any aliases yet!` will be displayed to the user. If there ","lastModifiedDate":"2021-04-12"},{"lineNumber":350,"author":{"gitId":"Rizavur"},"content":"are valid alias and block pairs stored in the application, then the list of alias and block pairs will be displayed.","lastModifiedDate":"2021-04-12"},{"lineNumber":351,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":352,"author":{"gitId":"SimBowen"},"content":"#### 3.4.4. Deleting a custom alias","lastModifiedDate":"2021-04-12"},{"lineNumber":353,"author":{"gitId":"Rizavur"},"content":"The user can enter `delete alias` to invoke an instance of `DeleteCustomAliasCommand` which will prompt them for the alias name that they","lastModifiedDate":"2021-04-12"},{"lineNumber":354,"author":{"gitId":"Rizavur"},"content":"wish to delete. If the entered alias name exists in the alias hashmap stored in the instance of `BlockAlias`, then that alias will be removed.","lastModifiedDate":"2021-04-12"},{"lineNumber":355,"author":{"gitId":"Rizavur"},"content":"However, if the alias does not exist in the hashmap, then an invalid alias error message will be displayed.","lastModifiedDate":"2021-04-12"},{"lineNumber":356,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":357,"author":{"gitId":"SimBowen"},"content":"#### 3.4.5. Example for alias feature","lastModifiedDate":"2021-04-12"},{"lineNumber":358,"author":{"gitId":"Rizavur"},"content":"Given below is an example usage scenario and how the add/view/delete mechanism behaves at each step:","lastModifiedDate":"2021-03-24"},{"lineNumber":359,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":360,"author":{"gitId":"Rizavur"},"content":"1. The user launches the application for the first time. If there is a storage file with pre-existing alias-block pairs, then the hashmap in `BlockAlias` class will be initialized with those data, or an empty hashmap if it does not exist.  ","lastModifiedDate":"2021-04-11"},{"lineNumber":361,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":362,"author":{"gitId":"SimBowen"},"content":"2. The user executes `add alias` command. The user input will be parsed by the `Parser` which will create a new `AddCustomAliasCommand` command. This will invoke the UI which will prompt the user `Enter the block:` to input the block name and `Enter the alias name:` to input the alias name that the user wants. The UI parser will then check if the entered block and alias are valid and throw an exception if they are not.  ","lastModifiedDate":"2021-04-09"},{"lineNumber":363,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":364,"author":{"gitId":"SimBowen"},"content":"3. The entered alias and block pair will then be put into a temporary hashmap which will then be merged with the main hashmap in the instance of the BlockAlias.  ","lastModifiedDate":"2021-04-09"},{"lineNumber":365,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":366,"author":{"gitId":"SimBowen"},"content":"4. The user executes `show alias` command. The user input will be parsed by the `Parser` which will create a new `ShowCustomAliasCommand` command. The new command will then invoke the UI which will print `It seems that you do not have any aliases` if the hashmap is empty, or it will print the alias-block pairs in new lines when the hashmap has been previously populated.  ","lastModifiedDate":"2021-04-09"},{"lineNumber":367,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":368,"author":{"gitId":"Rizavur"},"content":"5. The user executes `delete alias` command. The user input will be parsed by the `Parser` which will create a new `DeleteCustomAliasCommand` command. The new command will then invoke the UI which will prompt the user `Enter the alias name that you wish to delete:` where the user will enter the alias name that the user wishes to remove. The user input for the alias to be removed will be checked against the hashmap and return an exception if the key does not exist. If the alias to be removed exists in the hashmap, the key-value pair will be removed, and a success message will be displayed to the user.","lastModifiedDate":"2021-04-11"},{"lineNumber":369,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":370,"author":{"gitId":"Rizavur"},"content":"Shown below is the sequence diagram when a valid block name and alias are **added**:","lastModifiedDate":"2021-04-12"},{"lineNumber":371,"author":{"gitId":"Rizavur"},"content":"![img.png](images/AliasFeatureSequence.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":372,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":373,"author":{"gitId":"SimBowen"},"content":"#### 3.4.6. Design Consideration","lastModifiedDate":"2021-04-12"},{"lineNumber":374,"author":{"gitId":"Rizavur"},"content":"**Current choice:** Saves the alias and block names in a hashmap stored within a data model class which is the `BlockAlias` class. \u003cbr/\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":375,"author":{"gitId":"Rizavur"},"content":"- Pros: Easy to implement. \u003cbr/\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":376,"author":{"gitId":"Rizavur"},"content":"- Cons: The same instance of `BlockAlias` needs to be shared among the other classes that may use the alias feature. \u003cbr/\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":377,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":378,"author":{"gitId":"Rizavur"},"content":"### 3.5. History feature ","lastModifiedDate":"2021-03-30"},{"lineNumber":379,"author":{"gitId":"Rye98"},"content":"![img.png](images/history.png)","lastModifiedDate":"2021-04-12"},{"lineNumber":380,"author":{"gitId":"SimBowen"},"content":"#### 3.5.1. Current Implementation","lastModifiedDate":"2021-04-12"},{"lineNumber":381,"author":{"gitId":"Rye98"},"content":"Whenever the user inputs the `go` command, and enters a valid start and destination address, a String consisting the start and end block is created and stored in `historyList`. ","lastModifiedDate":"2021-03-30"},{"lineNumber":382,"author":{"gitId":"Rye98"},"content":"The contents of the `historyList` will be stored into a text file named `historyList.txt` when NUSMaze terminates.","lastModifiedDate":"2021-03-30"},{"lineNumber":383,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":384,"author":{"gitId":"SimBowen"},"content":"#### 3.5.2. Loading of saved history","lastModifiedDate":"2021-04-12"},{"lineNumber":385,"author":{"gitId":"Rye98"},"content":"When NUSMaze starts running, any contents from `historyList.txt` file would be loaded and stored into `historyList`.","lastModifiedDate":"2021-03-30"},{"lineNumber":386,"author":{"gitId":"Rye98"},"content":"Refer to the section on **Storage** for more information.","lastModifiedDate":"2021-03-30"},{"lineNumber":387,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":388,"author":{"gitId":"SimBowen"},"content":"#### 3.5.3. Showing past searches","lastModifiedDate":"2021-04-12"},{"lineNumber":389,"author":{"gitId":"Rye98"},"content":"The user can enter the command `history`, and a numbered list of past searches will be shown to the user.","lastModifiedDate":"2021-03-30"},{"lineNumber":390,"author":{"gitId":"Rye98"},"content":"If there were no past searches, a line of text `\"Oops! You have no past history!\"` will be shown to the user.","lastModifiedDate":"2021-03-30"},{"lineNumber":391,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":392,"author":{"gitId":"SimBowen"},"content":"#### 3.5.4. Repeat past searches","lastModifiedDate":"2021-04-12"},{"lineNumber":393,"author":{"gitId":"Rye98"},"content":"The user can enter the command `repeat history` to request for a repeat of past searches.","lastModifiedDate":"2021-03-30"},{"lineNumber":394,"author":{"gitId":"Rye98"},"content":"If there are no past searches, a line of text `\"Oops! You have no past history!\"` will be shown to the user.","lastModifiedDate":"2021-03-30"},{"lineNumber":395,"author":{"gitId":"Rye98"},"content":"If there is at least one entry in `historyList`, then all past searches would be shown to the user, in a numbered list format. ","lastModifiedDate":"2021-03-30"},{"lineNumber":396,"author":{"gitId":"Rye98"},"content":"(Only the starting location and destination location will be shown.)","lastModifiedDate":"2021-03-30"},{"lineNumber":397,"author":{"gitId":"Rye98"},"content":"The user is then prompted to enter the index of the past search to repeat.","lastModifiedDate":"2021-03-30"},{"lineNumber":398,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":399,"author":{"gitId":"SimBowen"},"content":"#### 3.5.5. Clear past searches","lastModifiedDate":"2021-04-12"},{"lineNumber":400,"author":{"gitId":"Rye98"},"content":"The user can enter the command `clear history` to delete all the contents of `historyList`.","lastModifiedDate":"2021-03-30"},{"lineNumber":401,"author":{"gitId":"Rye98"},"content":"A message: `\"Your history has been successfully cleared\"` will be shown to the user upon successful deletion of the contents of `historyList`.","lastModifiedDate":"2021-03-30"},{"lineNumber":402,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":403,"author":{"gitId":"SimBowen"},"content":"#### 3.5.6. Design Consideration","lastModifiedDate":"2021-04-12"},{"lineNumber":404,"author":{"gitId":"KimIdeas8"},"content":"**Alternative 1 (current choice):** Each command to add, view and delete are implemented using separate classes. \u003cbr\u003e ","lastModifiedDate":"2021-04-12"},{"lineNumber":405,"author":{"gitId":"KimIdeas8"},"content":"Pros: Easy to understand and each command is standalone.  \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":406,"author":{"gitId":"KimIdeas8"},"content":"Cons: Might have to repeat some code fragments.  \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":407,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":408,"author":{"gitId":"KimIdeas8"},"content":"**Alternative 2:** Place all commands (add, view, delete) as functions in 1 command class. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":409,"author":{"gitId":"KimIdeas8"},"content":"Pros: Less code to be written and hashmap can be shared by the 3 commands in 1 class. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":410,"author":{"gitId":"KimIdeas8"},"content":"Cons: Might be confusing since there is less distinction between each command. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":411,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":412,"author":{"gitId":"SimBowen"},"content":"### 3.6. Save feature  ","lastModifiedDate":"2021-04-11"},{"lineNumber":413,"author":{"gitId":"SimBowen"},"content":"#### 3.6.1. Current Implementation  ","lastModifiedDate":"2021-04-12"},{"lineNumber":414,"author":{"gitId":"SimBowen"},"content":"The save mechanism is facilitated by `AliasStorage`, `DailyRouteStorage`, `FavouriteStorage`, `HistoryStorage` and `NotesStorage` subclasses. \u003c/br\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":415,"author":{"gitId":"SimBowen"},"content":"They extend `Storage` (superclass) with a feature to save the blocks\u0027 aliases, daily routes, favourite locations, history of visited routes and tagged notes, stored internally as `aliasList`,  `dailyRouteList`, `favouriteList`, `history`, `noteList` text files. \u003cbr /\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":416,"author":{"gitId":"SimBowen"},"content":"Additionally, they implement the following operations: \u003cbr/\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":417,"author":{"gitId":"SimBowen"},"content":"- `AliasStorage#saveData()` —  Saves all aliases given by user to blocks into `aliasList`. \u003cbr /\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":418,"author":{"gitId":"SimBowen"},"content":"- `AliasStorage#loadData()` —  Restores all aliases given by user to blocks from `aliasList`. \u003cbr /\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":419,"author":{"gitId":"SimBowen"},"content":"- `DailyRouteStorage#saveData()` —  Saves all the daily routes that user wants to see for each day of the week into `dailyRouteList`. \u003cbr /\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":420,"author":{"gitId":"SimBowen"},"content":"- `DailyRouteStorage#loadData()` —  Restores all the daily routes that user wants to see from `dailyRouteList`. \u003cbr /\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":421,"author":{"gitId":"SimBowen"},"content":"- `FavouriteStorage#saveData()` —  Saves the current list of all the routes that the users are interested in keeping in `favouriteList`. \u003cbr /\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":422,"author":{"gitId":"SimBowen"},"content":"- `FavouriteStorage#loadData()` —  Restores the previous list of all the routes that the users are interested in keeping from `favouriteList`. \u003cbr /\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":423,"author":{"gitId":"SimBowen"},"content":"- `HistoryStorage#saveData()` —  Saves the current list of the 10 most recently visited routes in its history into `history`. \u003cbr /\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":424,"author":{"gitId":"SimBowen"},"content":"- `HistoryStorage#loadData()` —  Restores the previous list of the 10 most recently visited routes in its history from `history`. \u003cbr /\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":425,"author":{"gitId":"SimBowen"},"content":"- `NotesStorage#saveData()` —  Saves all notes tagged to a location into `noteList`. \u003cbr /\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":426,"author":{"gitId":"SimBowen"},"content":"- `NotesStorage#loadData()` —  Restores all notes tagged to a location from `noteList`. \u003cbr /\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":427,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":428,"author":{"gitId":"SimBowen"},"content":"These \u0027saveData()\u0027 operations are exposed in the `DataEncoder` interface as `DataEncoder#encodeAlias(:BlockAlias) `, `DataEncoder#encodeDailyRoute(:DailyRoute)`, `DataEncoder#encodeFavourite(:Favourite)`, `DataEncoder#encodeHistory(:History)` and `DataEncoder#encodeNotes(:NusMap)` respectively.\u003cbr /\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":429,"author":{"gitId":"SimBowen"},"content":"These \u0027loadData()\u0027 operations are exposed in the `DataDecoder` interface as `DataDecoder#decodeAliasAndNoteData()`, `DataDecoder#decodeDailyRouteData()` and `DataDecoder#decodeHistoryAndFavouriteData()`.","lastModifiedDate":"2021-04-11"},{"lineNumber":430,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":431,"author":{"gitId":"SimBowen"},"content":"#### 3.6.2. Saving/Loading data","lastModifiedDate":"2021-04-12"},{"lineNumber":432,"author":{"gitId":"SimBowen"},"content":"Given below is an example usage scenario and how the save mechanism behaves at each step. \u003cbr /\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":433,"author":{"gitId":"SimBowen"},"content":"1. The user launches the application for the first time.","lastModifiedDate":"2021-04-11"},{"lineNumber":434,"author":{"gitId":"SimBowen"},"content":"   `AliasStorage`, `DailyRouteStorage`, `FavouriteStorage`, `HistoryStorage` and `NotesStorage` objects","lastModifiedDate":"2021-04-11"},{"lineNumber":435,"author":{"gitId":"SimBowen"},"content":"   will be initialized with the filepaths of `aliasList`,  `dailyRouteList`, `favouriteList`, `history` and `noteList` text files respectively. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":436,"author":{"gitId":"SimBowen"},"content":"   The `blockAlias`, `dailyRoute`, `favourite`, `history` or `nusMap` object in `NusMaze` class will be initialised using the initial state of the respective text file,","lastModifiedDate":"2021-04-11"},{"lineNumber":437,"author":{"gitId":"SimBowen"},"content":"   by calling `AliasStorage#loadData()`, `DailyRouteStorage#loadData()`, `FavouriteStorage#loadData()` `HistoryStorage#loadData()` and `NotesStorage#loadData()`. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":438,"author":{"gitId":"SimBowen"},"content":"   This is done only once for each time the application is launched. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":439,"author":{"gitId":"SimBowen"},"content":"   ![img.png](images/SaveFeatureStep1ref1.png)","lastModifiedDate":"2021-04-11"},{"lineNumber":440,"author":{"gitId":"SimBowen"},"content":"   ![img.png](images/SaveFeatureStep1.png)","lastModifiedDate":"2021-04-11"},{"lineNumber":441,"author":{"gitId":"SimBowen"},"content":"   ![img.png](images/SaveFeatureStep1ref2.png) \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":442,"author":{"gitId":"SimBowen"},"content":"2. For all valid commands called before the last user input \u0027bye\u0027 or before program is terminated, the following process is executed continuously. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":443,"author":{"gitId":"SimBowen"},"content":"   `AliasStorage#saveData()`, `DailyRouteStorage#saveData()`, `FavouriteStorage#saveData()`, `HistoryStorage#saveData()`, `NotesStorage#saveData()` are called.","lastModifiedDate":"2021-04-11"},{"lineNumber":444,"author":{"gitId":"SimBowen"},"content":"   When `#saveData()` for each of the storage objects are called, data from the `blockAlias`, `dailyRoute`, `favourite`, `history` or `nusMap` object is saved into the respective text file. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":445,"author":{"gitId":"SimBowen"},"content":"   ![img_1.png](images/SaveFeatureStep2.png)","lastModifiedDate":"2021-04-11"},{"lineNumber":446,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":447,"author":{"gitId":"KimIdeas8"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":448,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":449,"author":{"gitId":"KimIdeas8"},"content":":information_source: At any point when a command is called, the `AliasStorage#saveData()`, `DailyRouteStorage#saveData()`, `FavouriteStorage#saveData()`, `HistoryStorage#saveData()`, `NotesStorage#saveData()` will be executed,","lastModifiedDate":"2021-04-12"},{"lineNumber":450,"author":{"gitId":"SimBowen"},"content":"but not all text files will be modified. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":451,"author":{"gitId":"SimBowen"},"content":"* The `history` text file is modified by the `go`, `clear history` and `repeat history` commands. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":452,"author":{"gitId":"SimBowen"},"content":"* The `aliasList` text file is modified by the `add alias` and `delete alias` commands. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":453,"author":{"gitId":"SimBowen"},"content":"* The `dailyRouteList` text file is modified by the `add daily route` and `delete daily route` commands. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":454,"author":{"gitId":"SimBowen"},"content":"* The `noteList` text file is modified by the `add note` and `delete note` commands. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":455,"author":{"gitId":"SimBowen"},"content":"* The `favouriteList` text file is modified by the `add favourite`, `repeat favourite` and `delete favourite` commands \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":456,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":457,"author":{"gitId":"SimBowen"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":458,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":459,"author":{"gitId":"SimBowen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":460,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":461,"author":{"gitId":"SimBowen"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":462,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":463,"author":{"gitId":"KimIdeas8"},"content":":information_source: If a command fails its execution, it will not call `#saveData()` for all the storage objects,","lastModifiedDate":"2021-04-12"},{"lineNumber":464,"author":{"gitId":"SimBowen"},"content":"so the content from the `nusMap`, `blockAlias`, `history`, `favourite`, or `dailyRoute` objects will not be saved into the text files.","lastModifiedDate":"2021-04-11"},{"lineNumber":465,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":466,"author":{"gitId":"SimBowen"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":467,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":468,"author":{"gitId":"KimIdeas8"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":469,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":470,"author":{"gitId":"SimBowen"},"content":"#### 3.6.3. Design Consideration","lastModifiedDate":"2021-04-12"},{"lineNumber":471,"author":{"gitId":"KimIdeas8"},"content":"**Current choice:** Saves the entire list of block aliases, visited routes, tagged notes, daily routes and favourite locations. \u003cbr/\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":472,"author":{"gitId":"SimBowen"},"content":"- Pros: Easy to implement. \u003cbr/\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":473,"author":{"gitId":"SimBowen"},"content":"- Cons: Only highly effective when limited to use of one user. \u003cbr/\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":474,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":475,"author":{"gitId":"Rizavur"},"content":"---------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-31"},{"lineNumber":476,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":477,"author":{"gitId":"wjchoi0712"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":478,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":479,"author":{"gitId":"Rizavur"},"content":"## *4. Appendix: Requirements*","lastModifiedDate":"2021-03-31"},{"lineNumber":480,"author":{"gitId":"Rizavur"},"content":"### 4.1. Product Scope","lastModifiedDate":"2021-03-30"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":482,"author":{"gitId":"KimIdeas8"},"content":"NUSMaze is targeted at NUS engineering freshmen, to help new students find their way to their destination blocks.","lastModifiedDate":"2021-04-08"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":484,"author":{"gitId":"Rye98"},"content":"The engineering block is extremely huge, and the layout of the blocks may be confusing for new students. To reduce the time wasted on navigating the numerous blocks in Engineering, NUSMaze will provide the shortest route available for students to take.","lastModifiedDate":"2021-03-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":486,"author":{"gitId":"Rizavur"},"content":"### 4.2. User Stories","lastModifiedDate":"2021-03-30"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":488,"author":{"gitId":"SimBowen"},"content":"Below is our analysis of our target user and the importance in which he/she would place on the potential user stories we have chosen.","lastModifiedDate":"2021-04-09"},{"lineNumber":489,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":490,"author":{"gitId":"SimBowen"},"content":"|Version| As a ... | I want to ... | So that I ...|Importance|","lastModifiedDate":"2021-04-09"},{"lineNumber":491,"author":{"gitId":"SimBowen"},"content":"|--------|----------|---------------|------------------|----|","lastModifiedDate":"2021-04-09"},{"lineNumber":492,"author":{"gitId":"SimBowen"},"content":"|v1.0|new user|see usage instructions|can refer to them when I forget how to use the application|HIGH|","lastModifiedDate":"2021-04-09"},{"lineNumber":493,"author":{"gitId":"SimBowen"},"content":"|v1.0|user|have a clear path to my destination|will not get lost|HIGH|","lastModifiedDate":"2021-04-09"},{"lineNumber":494,"author":{"gitId":"SimBowen"},"content":"|v1.0|user|be able to pin a note to certain locations as a reminder|do not forget|MEDIUM|","lastModifiedDate":"2021-04-09"},{"lineNumber":495,"author":{"gitId":"SimBowen"},"content":"|v1.0|user|keep track of my search history|don\u0027t have to repeatedly search for the same route.|MEDIUM|","lastModifiedDate":"2021-04-09"},{"lineNumber":496,"author":{"gitId":"SimBowen"},"content":"|v1.0|user|have a clear interface in which I can enter my commands|can have a good user experience|HIGH|","lastModifiedDate":"2021-04-09"},{"lineNumber":497,"author":{"gitId":"SimBowen"},"content":"|v2.0|user|find the nearest eatery|do not have to starve for longer than necessary|HIGH|","lastModifiedDate":"2021-04-09"},{"lineNumber":498,"author":{"gitId":"SimBowen"},"content":"|v2.0|user|have a list of favorite locations|can access directions to them quickly|MEDIUM|","lastModifiedDate":"2021-04-09"},{"lineNumber":499,"author":{"gitId":"SimBowen"},"content":"|v2.0|user|have my list of favourites and history stored|can access it every time I start the app|MEDIUM|","lastModifiedDate":"2021-04-09"},{"lineNumber":500,"author":{"gitId":"SimBowen"},"content":"|v2.0|user|be able to set custom aliases to blocks|can access the blocks more conveniently|MEDIUM|","lastModifiedDate":"2021-04-09"},{"lineNumber":501,"author":{"gitId":"SimBowen"},"content":"|v2.0|user|be able to store my routing for my daily activities|can access it easily|MEDIUM|","lastModifiedDate":"2021-04-09"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":503,"author":{"gitId":"Rizavur"},"content":"### 4.3. Use Cases","lastModifiedDate":"2021-03-30"},{"lineNumber":504,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":505,"author":{"gitId":"Rizavur"},"content":"### 4.4. Non-Functional Requirements","lastModifiedDate":"2021-03-30"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":507,"author":{"gitId":"SimBowen"},"content":"1. Should work on any mainstream OS as long as it has Java 11 or above installed.","lastModifiedDate":"2021-03-30"},{"lineNumber":508,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":509,"author":{"gitId":"SimBowen"},"content":"2. Should be able to hold up to 1000 history, notes, favourites and block alias entries without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-03-30"},{"lineNumber":510,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":511,"author":{"gitId":"SimBowen"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-03-30"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":513,"author":{"gitId":"Rizavur"},"content":"### 4.5. Glossary","lastModifiedDate":"2021-03-30"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":515,"author":{"gitId":"Rizavur"},"content":"* *CLI* - Command Line Interface","lastModifiedDate":"2021-03-31"},{"lineNumber":516,"author":{"gitId":"SimBowen"},"content":"* *IntelliJ* - An Integrated Development Environment (IDE) designed for Java software development.","lastModifiedDate":"2021-04-12"},{"lineNumber":517,"author":{"gitId":"SimBowen"},"content":"* *UML* - Unified Modeling Language.","lastModifiedDate":"2021-04-12"},{"lineNumber":518,"author":{"gitId":"SimBowen"},"content":"* *Terminal/PowerShell* - Any operating system shell with a command-line interface.","lastModifiedDate":"2021-04-12"},{"lineNumber":519,"author":{"gitId":"SimBowen"},"content":"* *Mainstream OS* - Windows, mainstream distributions of Linux, and macOS.","lastModifiedDate":"2021-04-12"},{"lineNumber":520,"author":{"gitId":"SimBowen"},"content":"* *JDK* - Java Development Kit.","lastModifiedDate":"2021-04-12"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":522,"author":{"gitId":"Rizavur"},"content":"---------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-31"},{"lineNumber":523,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":524,"author":{"gitId":"wjchoi0712"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":525,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":526,"author":{"gitId":"Rizavur"},"content":"## *5. Appendix: Instructions for manual testing*","lastModifiedDate":"2021-03-31"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":528,"author":{"gitId":"Rizavur"},"content":"### 5.1 Launch and shutdown","lastModifiedDate":"2021-03-31"},{"lineNumber":529,"author":{"gitId":"wjchoi0712"},"content":"1. Initial launch\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":530,"author":{"gitId":"Rizavur"},"content":"    1.1. Download the latest jar file from [here](https://github.com/AY2021S2-CS2113T-T09-2/tp/releases) and copy it into an empty folder.  \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":531,"author":{"gitId":"wjchoi0712"},"content":"    1.2. Open the terminal/powershell console and navigate to the folder in which the `.jar` file was saved.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":532,"author":{"gitId":"wjchoi0712"},"content":"   Expected: Greeting message of NUSMaze  to be shown\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":533,"author":{"gitId":"wjchoi0712"},"content":"2. Exiting the application\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":534,"author":{"gitId":"Rizavur"},"content":"    2.1 Enter `bye` and press enter\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":535,"author":{"gitId":"wjchoi0712"},"content":"    Expected: The application shows thank you message and exits successfully.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":536,"author":{"gitId":"wjchoi0712"},"content":"   ","lastModifiedDate":"2021-04-12"},{"lineNumber":537,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":538,"author":{"gitId":"Rizavur"},"content":"### 5.2 Viewing help","lastModifiedDate":"2021-04-12"},{"lineNumber":539,"author":{"gitId":"Rizavur"},"content":"1. Viewing help for NUSMaze \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":540,"author":{"gitId":"Rizavur"},"content":"    1.1 Enter `help`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":541,"author":{"gitId":"Rizavur"},"content":"   Expected: A list of all the commands that can be used in NUSMaze should be displayed.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":542,"author":{"gitId":"Rizavur"},"content":"   ","lastModifiedDate":"2021-04-12"},{"lineNumber":543,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":544,"author":{"gitId":"Rizavur"},"content":"### 5.3 Viewing venues in NUSMaze","lastModifiedDate":"2021-04-12"},{"lineNumber":545,"author":{"gitId":"Rizavur"},"content":"1. Viewing all the blocks in NUSMaze (Currently only the Engineering and Computing blocks) \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":546,"author":{"gitId":"Rizavur"},"content":"    1.1 Enter `show venues`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":547,"author":{"gitId":"Rizavur"},"content":"   Expected: A table of all the blocks that have been pre-loaded into NUSMaze.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":548,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":549,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":550,"author":{"gitId":"Rizavur"},"content":"### 5.4 Routing","lastModifiedDate":"2021-04-12"},{"lineNumber":551,"author":{"gitId":"wjchoi0712"},"content":"1. Routing with valid blocks\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":552,"author":{"gitId":"wjchoi0712"},"content":"    1.1 Launch the application and type \u0027Go\u0027 followed by the enter key.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":553,"author":{"gitId":"wjchoi0712"},"content":"    1.2 Test case: Starting block → `E1`, Destination block → `E7`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":554,"author":{"gitId":"wjchoi0712"},"content":"    Expected:  `Route: E1 -\u003e LT5 -\u003e E3 -\u003e E4 -\u003e E4A -\u003e EW2 -\u003e E6 -\u003e E7` should be displayed\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":555,"author":{"gitId":"wjchoi0712"},"content":"    1.3 Test case: Starting block → `e4`, Destination block → `techno edge`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":556,"author":{"gitId":"wjchoi0712"},"content":"    Expected:  `Route: E4 -\u003e E3 -\u003e LT5 -\u003e TECHNO EDGE` should be displayed\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":557,"author":{"gitId":"wjchoi0712"},"content":"2. Routing with invalid blocks\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":558,"author":{"gitId":"Rizavur"},"content":"    2.1 Test case: Starting block → `E20`, Destination block → `E7`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":559,"author":{"gitId":"wjchoi0712"},"content":"    Expected:  `Invalid block! Please try again with a block that exists :(` should be displayed\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":560,"author":{"gitId":"wjchoi0712"},"content":"    2.2 Test case: Starting block → `Invalid block`, Destination block → `Invalid block`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":561,"author":{"gitId":"wjchoi0712"},"content":"    Expected:  Similar to previous\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":562,"author":{"gitId":"wjchoi0712"},"content":"3. Routing to an eatery\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":563,"author":{"gitId":"wjchoi0712"},"content":"    3.1 Test case: Starting block → `e3`, Destination block → `eatery`, Select entry to go → `5`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":564,"author":{"gitId":"wjchoi0712"},"content":"    Expected: `Route: E3 -\u003e E2 -\u003e EA -\u003e SPINELLI COFFEE` should be displayed\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":565,"author":{"gitId":"wjchoi0712"},"content":"    3.2 Test case: Starting block → `e3`, Destination block → `spinelli coffee`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":566,"author":{"gitId":"wjchoi0712"},"content":"    Expected: Similar to previous\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":567,"author":{"gitId":"Rizavur"},"content":"   ","lastModifiedDate":"2021-03-31"},{"lineNumber":568,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":569,"author":{"gitId":"Rizavur"},"content":"### 5.5 History","lastModifiedDate":"2021-04-12"},{"lineNumber":570,"author":{"gitId":"Rizavur"},"content":"1. Viewing history when routing has not been used or history has been cleared \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":571,"author":{"gitId":"Rizavur"},"content":"    1.1 Enter `history`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":572,"author":{"gitId":"Rizavur"},"content":"   Expected: `Oops! You have no past history!`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":573,"author":{"gitId":"Rizavur"},"content":"2. Viewing history when routing has been previously used \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":574,"author":{"gitId":"Rizavur"},"content":"   2.1 Enter `history`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":575,"author":{"gitId":"Rizavur"},"content":"   Expected: A list of the past routing history will be displayed (Capped at 10)\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":576,"author":{"gitId":"Rizavur"},"content":"3. Repeating history when history is empty\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":577,"author":{"gitId":"Rizavur"},"content":"    3.1 Enter `repeat history`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":578,"author":{"gitId":"Rizavur"},"content":"    Expected: `Oops! You have no past history!`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":579,"author":{"gitId":"Rizavur"},"content":"4. Repeating history when there is 1 record in the history\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":580,"author":{"gitId":"Rizavur"},"content":"   4.1 Test case: `repeat history` → `1`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":581,"author":{"gitId":"Rizavur"},"content":"   Expected: The result of the routing will be displayed\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":582,"author":{"gitId":"Rizavur"},"content":"   4.2 Test case: `repeat history` → `2`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":583,"author":{"gitId":"Rizavur"},"content":"   Expected: `Oops! You must enter an Integer that is within the bounds :(`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":584,"author":{"gitId":"Rizavur"},"content":"5. Clearing history\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":585,"author":{"gitId":"Rizavur"},"content":"    5.1 Enter `clear history`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":586,"author":{"gitId":"Rizavur"},"content":"   Expected: `Your history has been successfully cleared`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":587,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":588,"author":{"gitId":"wjchoi0712"},"content":"### 5.6 Alias","lastModifiedDate":"2021-04-12"},{"lineNumber":589,"author":{"gitId":"wjchoi0712"},"content":"1. Adding an alias that is a block name\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":590,"author":{"gitId":"wjchoi0712"},"content":"    1.1 Enter `add alias` → Enter block → `e3`, Enter the alias name → `e4`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":591,"author":{"gitId":"wjchoi0712"},"content":"   Expected: The error message for invalid alias will be displayed\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":592,"author":{"gitId":"wjchoi0712"},"content":"2. Adding an alias that already exists\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":593,"author":{"gitId":"Rizavur"},"content":"   2.1 Enter `add alias` → Enter block → `e1`, Enter the alias name → `alias that already exists`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":594,"author":{"gitId":"wjchoi0712"},"content":"   Expected: Similar to previous\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":595,"author":{"gitId":"wjchoi0712"},"content":"3. Showing aliases when there are no aliases that were set prior.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":596,"author":{"gitId":"Rizavur"},"content":"    3.1 Enter `show alias`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":597,"author":{"gitId":"wjchoi0712"},"content":"   Expected: `You haven\u0027t set any aliases yet!`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":598,"author":{"gitId":"wjchoi0712"},"content":"4. Showing aliases when aliases have been previously set.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":599,"author":{"gitId":"Rizavur"},"content":"   4.1 Enter `show alias`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":600,"author":{"gitId":"wjchoi0712"},"content":"   Expected: A list of alias and block pairs will be displayed\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":601,"author":{"gitId":"wjchoi0712"},"content":"5. Deleting an alias that was not previously set\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":602,"author":{"gitId":"Rizavur"},"content":"    5.1 Enter `delete alias` → `alias that does not exist`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":603,"author":{"gitId":"wjchoi0712"},"content":"   Expected: `Invalid alias! Please enter an alias name that exists!`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":604,"author":{"gitId":"wjchoi0712"},"content":"6. Deleting an alias that was previously set\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":605,"author":{"gitId":"Rizavur"},"content":"   6.1 Enter `delete alias` → `alias that exists`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":606,"author":{"gitId":"wjchoi0712"},"content":"   Expected: `Got it! Successfully deleted ALIAS THAT EXISTS from alias list!`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":607,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":608,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":609,"author":{"gitId":"wjchoi0712"},"content":"### 5.7 Daily Route","lastModifiedDate":"2021-04-12"},{"lineNumber":610,"author":{"gitId":"wjchoi0712"},"content":"1. Viewing daily route when the user haven\u0027t scheduled any daily route.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":611,"author":{"gitId":"wjchoi0712"},"content":"   1.1 Enter `show daily route`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":612,"author":{"gitId":"wjchoi0712"},"content":"   Expected: `Oops! You haven\u0027t planned any daily routes yet :(`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":613,"author":{"gitId":"wjchoi0712"},"content":"2. Adding daily route\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":614,"author":{"gitId":"Rizavur"},"content":"   2.1 Test case: `add daily route` → `1` → `ea` → `end`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":615,"author":{"gitId":"wjchoi0712"},"content":"   Expected: `Got it! Successfully added MONDAY\u0027s schedule!` \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":616,"author":{"gitId":"Rizavur"},"content":"   2.2 Test case: `add daily route` → `8`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":617,"author":{"gitId":"wjchoi0712"},"content":"   Expected: `Oops! You must enter an Integer that is within the bounds :(`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":618,"author":{"gitId":"wjchoi0712"},"content":"3. Deleting daily route when only Monday\u0027s schedule is planned\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":619,"author":{"gitId":"Rizavur"},"content":"   3.1 Test case: `delete daily route` → `1`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":620,"author":{"gitId":"wjchoi0712"},"content":"   Expected: `Got it! Successfully cleared MONDAY\u0027s schedule!`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":621,"author":{"gitId":"Rizavur"},"content":"   3.2 Test case: `delete daily route` → `2` \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":622,"author":{"gitId":"wjchoi0712"},"content":"   Expected: `Oops! You must enter an Integer that is within the bounds :(`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":623,"author":{"gitId":"wjchoi0712"},"content":"   ","lastModifiedDate":"2021-04-12"},{"lineNumber":624,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":625,"author":{"gitId":"wjchoi0712"},"content":"### 5.8 Favourites","lastModifiedDate":"2021-04-12"},{"lineNumber":626,"author":{"gitId":"wjchoi0712"},"content":"1. Adding favourite routes\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":627,"author":{"gitId":"wjchoi0712"},"content":"   1.1 Test case: Starting block → `E1`, Destination block → `E7`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":628,"author":{"gitId":"wjchoi0712"},"content":"   Expected: `Got it! Successfully added new favourite route!`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":629,"author":{"gitId":"wjchoi0712"},"content":"   1.2 Test case: Starting block → `E1`, Destination block → `Invalid`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":630,"author":{"gitId":"wjchoi0712"},"content":"   Expected `Invalid block! Please try again with a block that exists :(`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":631,"author":{"gitId":"wjchoi0712"},"content":"2. Showing favourite routes when favourites have not been set before\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":632,"author":{"gitId":"Rizavur"},"content":"    2.1 Enter `show favourite`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":633,"author":{"gitId":"wjchoi0712"},"content":"   Expected: `You haven\u0027t set any favourite routes yet!`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":634,"author":{"gitId":"wjchoi0712"},"content":"3. Showing favourite routes when favourites have been set before\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":635,"author":{"gitId":"Rizavur"},"content":"   3.1 Enter `show favourite`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":636,"author":{"gitId":"wjchoi0712"},"content":"   Expected: A list of all the favourite routes that have been previously set will be displayed\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":637,"author":{"gitId":"wjchoi0712"},"content":"4. Deleting favourite routes\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":638,"author":{"gitId":"Rizavur"},"content":"   4.1 Test case `delete favourite` → `VALID_FAVOURITE_INDEX`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":639,"author":{"gitId":"wjchoi0712"},"content":"   Expected: `Got it! Successfully deleted favourite route :)`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":640,"author":{"gitId":"Rizavur"},"content":"   4.2 Test case `delete favourite` → `INVALID_FAVOURITE_INDEX`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":641,"author":{"gitId":"wjchoi0712"},"content":"   Expected: `Oops! You must enter an Integer that is within the bounds :(`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":642,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":643,"author":{"gitId":"wjchoi0712"},"content":"### 5.9 Notes","lastModifiedDate":"2021-04-12"},{"lineNumber":644,"author":{"gitId":"wjchoi0712"},"content":"1. Adding note to blocks\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":645,"author":{"gitId":"wjchoi0712"},"content":"   1.1 Test case: `add note` → `e1` → `crowded`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":646,"author":{"gitId":"wjchoi0712"},"content":"   Expected: `Got it! Successfully added and tagged note to E1`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":647,"author":{"gitId":"wjchoi0712"},"content":"   1.2 Test case: `add note` → `e20` → `crowded`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":648,"author":{"gitId":"wjchoi0712"},"content":"   Expected: `Invalid block! Please try again with a block that exists :(`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":649,"author":{"gitId":"Rizavur"},"content":"   1.3 Test case: `add note` → `e1` → `\"\"`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":650,"author":{"gitId":"wjchoi0712"},"content":"   Expected: `Your note description cannot be empty or contain \"/\". Please try the command again :)`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":651,"author":{"gitId":"Rizavur"},"content":"   1.4 Test case: `add note` → `e1` → `very/crowded`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":652,"author":{"gitId":"wjchoi0712"},"content":"   Expected: `Your note description cannot be empty or contain \"/\". Please try the command again :)`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":653,"author":{"gitId":"wjchoi0712"},"content":"2. Viewing notes tagged to specific block\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":654,"author":{"gitId":"wjchoi0712"},"content":"   2.1 Test case: `show note` → `e1`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":655,"author":{"gitId":"wjchoi0712"},"content":"   Expected: Show a list of notes tagged to e1\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":656,"author":{"gitId":"wjchoi0712"},"content":"   2.2 Test case: `show note` → `e20`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":657,"author":{"gitId":"wjchoi0712"},"content":"   Expected: `Invalid block! Please try again with a block that exists :(`\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":658,"author":{"gitId":"wjchoi0712"},"content":"3. Deleting note tagged to a specific block\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":659,"author":{"gitId":"wjchoi0712"},"content":"   3.1 Test case: `delete note` → `e1` → `1` (When there is at least one note tagged to e1)\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":660,"author":{"gitId":"wjchoi0712"},"content":"   Expected: `Got it! Successfully deleted note tagged to E1` \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":661,"author":{"gitId":"wjchoi0712"},"content":"   3.2 Test case: `delete note` → `e1` → `1` (When there are no notes tagged to e1)\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":662,"author":{"gitId":"wjchoi0712"},"content":"   Expected: `Oops! There are no notes tagged to E1` \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":663,"author":{"gitId":"wjchoi0712"},"content":"   ","lastModifiedDate":"2021-04-12"},{"lineNumber":664,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":665,"author":{"gitId":"Rizavur"},"content":"   ","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"KimIdeas8":50,"SimBowen":243,"Rye98":28,"wjchoi0712":153,"Rizavur":164,"-":27}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"# NUSMaze","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"**NUSMaze** is a Command Line Interface (CLI) based application that aims to **simplify NUS","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"Computer Engineering students’ journey** from one point to another within the NUS","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"Engineering and Computing buildings. The application allows users to find the shortest route","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"from one block to another, locate the nearest eatery, add personal notes to the location and","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"many more.","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"Show below are some useful links to get familiar with the NUSMaze and its functionalities.","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"wjchoi0712":8,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"# User Guide for NUSMaze","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"## Table of Contents","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":"1. [Introduction](#1-introduction) \u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"2. [Quick start](#2-quick-start) \u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"3. [About](#3-about) \u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"   3.1. [Structure of this document](#31-structure-of-this-document) \u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"   3.2. [Reading this document](#32-reading-this-document) \u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.2.1. [Technical terms](#321-technical-terms) \u003cbr\u003e","lastModifiedDate":"2021-04-05"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.2.2. [General Symbols and Syntax](#322-general-symbols-and-syntax) \u003cbr\u003e","lastModifiedDate":"2021-04-05"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 3.2.3. [Format of commands](#323-format-of-commands) \u003cbr\u003e","lastModifiedDate":"2021-04-05"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"4. [Features](#4-features)  \u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"   4.1. [Viewing Help](#41-viewing-help)\u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"   4.2. [Showing all venues](#42-showing-all-venues) \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"   4.3. [Routing](#43-routing) \u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 4.3.1. [Routing between blocks](#431-routing-between-blocks) \u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 4.3.2. [Routing to an eatery](#432-routing-to-an-eatery) \u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"Rye98"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 4.3.3. [Routing to the closest eatery](#433-routing-to-the-closest-eatery) \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"   4.4. [History](#44-history) \u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 4.4.1. [Viewing History](#441-viewing-history) \u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":21,"author":{"gitId":"Rye98"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 4.4.2. [Repeating History](#442-repeating-history) \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"Rye98"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 4.4.3. [Clearing History](#443-clearing-history) \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"   4.5. [Alias](#45-alias) \u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 4.5.1. [Adding alias for block name](#451-adding-alias-for-block-name) \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 4.5.2. [Showing aliases](#452-showing-aliases) \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 4.5.3. [Deleting aliases](#453-deleting-aliases) \u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":"   4.6. [Daily Routes](#46-daily-routes) \u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":28,"author":{"gitId":"wjchoi0712"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 4.6.1. [Adding daily routes](#461-adding-daily-routes) \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"wjchoi0712"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 4.6.2. [Showing daily routes](#462-showing-daily-routes) \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"wjchoi0712"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 4.6.3. [Deleting daily routes](#463-deleting-daily-routes) \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":"   4.7. [Favourite Routes](#47-favourite-routes) \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"wjchoi0712"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 4.7.1. [Adding favourite routes](#471-adding-favourite-routes) \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"wjchoi0712"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 4.7.2. [Showing favourite routes](#472-showing-favourite-routes) \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"wjchoi0712"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 4.7.3. [Repeating favourite routes](#473-repeating-favourite-routes) \u003cbr\u003e ","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"wjchoi0712"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 4.7.4. [Deleting favourite routes](#474-deleting-favourite-routes) \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":"   4.8. [Notes](#48-notes) \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 4.8.1. [Adding notes](#481-adding-notes) \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"wjchoi0712"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 4.8.2. [Showing notes](#482-showing-notes) \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"wjchoi0712"},"content":"   \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 4.8.3. [Deleting notes](#483-deleting-notes) \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-16"},{"lineNumber":41,"author":{"gitId":"Rizavur"},"content":"   \u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-16"},{"lineNumber":43,"author":{"gitId":"wjchoi0712"},"content":"   4.9. [Exiting the application](#49-exiting-the-application) \u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":44,"author":{"gitId":"wjchoi0712"},"content":"   4.10. [Saving the Data](#410-saving-the-data) \u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":45,"author":{"gitId":"wjchoi0712"},"content":"   4.11. [Loading Past Data](#411-loading-past-data) \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"SimBowen"},"content":"5. [FAQ](#5-faq) \u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":47,"author":{"gitId":"SimBowen"},"content":"6. [Command summary](#6-command-summary) \u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"wjchoi0712"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":51,"author":{"gitId":"KimIdeas8"},"content":"## 1. Introduction","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"SimBowen"},"content":"Welcome to the User Guide of **NUSMaze**!","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"SimBowen"},"content":"**NUSMaze** is a Command Line Interface (CLI) based application that aims to **simplify NUS","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"SimBowen"},"content":"Computer Engineering students’ journey** from one point to another within the NUS","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"SimBowen"},"content":"Engineering and Computing buildings. The application allows users to find the shortest route","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"SimBowen"},"content":"from one block to another, locate the nearest eatery, add personal notes to the location and","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"KimIdeas8"},"content":"many more. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"wjchoi0712"},"content":"NUSMaze uses Command Line Interface (CLI); this means that you operate the application by typing commands","lastModifiedDate":"2021-04-06"},{"lineNumber":62,"author":{"gitId":"wjchoi0712"},"content":"into a Command Box. If your typing speed is fast, you can operate the application faster than other Graphical User Interface","lastModifiedDate":"2021-04-06"},{"lineNumber":63,"author":{"gitId":"KimIdeas8"},"content":"(GUI) applications; GUI applications allow users to interact with the application through graphical icons such as buttons. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"wjchoi0712"},"content":"You do not have to worry at all even if you are new to CLI applications as this user guide will take you through step by","lastModifiedDate":"2021-04-06"},{"lineNumber":66,"author":{"gitId":"KimIdeas8"},"content":"step on how various features of the NUSMaze can be utilised, all geared towards providing the best possible experience to the user. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":68,"author":{"gitId":"wjchoi0712"},"content":"If you are interested, jump to [Section 2 - Quick Start](#2-quick-start) to learn how to navigate around the campus using ","lastModifiedDate":"2021-04-06"},{"lineNumber":69,"author":{"gitId":"KimIdeas8"},"content":"**NUSMaze**. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":71,"author":{"gitId":"SimBowen"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":73,"author":{"gitId":"wjchoi0712"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":75,"author":{"gitId":"KimIdeas8"},"content":"## 2. Quick start","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":77,"author":{"gitId":"KimIdeas8"},"content":"This section gives you step-by-step instructions on how to download and open the application. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":79,"author":{"gitId":"KimIdeas8"},"content":"1. Ensure you have **Java 11** or above installed in your Computer. You may install it [here](https://www.oracle.com/java/technologies/javase-jdk11-downloads.html). \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":81,"author":{"gitId":"KimIdeas8"},"content":"2. Download the latest **NUSMaze.jar** from [here](https://github.com/AY2021S2-CS2113T-T09-2/tp/releases). \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":83,"author":{"gitId":"KimIdeas8"},"content":"3. Copy the file to the folder you want to use as the _home folder_ of **NUSMaze**. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":85,"author":{"gitId":"SimBowen"},"content":"4. Open your command line or terminal and navigate into the file directory where you saved the application. An easy way to do so is shown at the bottom of this section for both Mac and Windows. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":86,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":87,"author":{"gitId":"SimBowen"},"content":"5. Key in `java -jar NUSMaze.jar` and press enter to launch the NUSMaze application.\u003cbr\u003e","lastModifiedDate":"2021-04-05"},{"lineNumber":88,"author":{"gitId":"SimBowen"},"content":"   ","lastModifiedDate":"2021-04-11"},{"lineNumber":89,"author":{"gitId":"SimBowen"},"content":"6. A CLI similar to Figure 1 below should appear in a few seconds.  \u003cbr\u003e","lastModifiedDate":"2021-04-05"},{"lineNumber":90,"author":{"gitId":"Rizavur"},"content":"   \u003cbr\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":91,"author":{"gitId":"Rizavur"},"content":"   ![img.png](images/NUSMazecli.png)","lastModifiedDate":"2021-04-16"},{"lineNumber":92,"author":{"gitId":"Rizavur"},"content":"   \u003cp align\u003d\"center\"\u003eFigure 1 - CLI of NUSMaze\u003c/p\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":94,"author":{"gitId":"SimBowen"},"content":"7. Type your command into the command box at the bottom of the screen, and press Enter on your keyboard to execute it. E.g. typing `help` and pressing Enter will open a help window.\u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":96,"author":{"gitId":"SimBowen"},"content":"8. Refer to [Section 4 - Features](#4-features) for details on the commands you can use for each feature. \u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2021-04-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":98,"author":{"gitId":"wjchoi0712"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":100,"author":{"gitId":"wjchoi0712"},"content":"\u003e :information_source: Image below shows you how you can open home directory of NUSMaze in command prompt or terminal.\u003cbr\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":101,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-16"},{"lineNumber":102,"author":{"gitId":"SimBowen"},"content":"![img.png](images/howtolaunch.png)","lastModifiedDate":"2021-04-11"},{"lineNumber":103,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":104,"author":{"gitId":"SimBowen"},"content":"| Windows |  Mac |","lastModifiedDate":"2021-04-11"},{"lineNumber":105,"author":{"gitId":"SimBowen"},"content":"|:----------:|-------------|","lastModifiedDate":"2021-04-11"},{"lineNumber":106,"author":{"gitId":"SimBowen"},"content":"|Key in `cmd` and press enter.|Right click on the folder and click on \"New Terminal at Folder\"|","lastModifiedDate":"2021-04-11"},{"lineNumber":107,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":108,"author":{"gitId":"SimBowen"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-16"},{"lineNumber":110,"author":{"gitId":"wjchoi0712"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":111,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":112,"author":{"gitId":"KimIdeas8"},"content":"## 3. About","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":114,"author":{"gitId":"KimIdeas8"},"content":"### 3.1. Structure of this document","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":116,"author":{"gitId":"SimBowen"},"content":"We have structured this User Guide in a way to help you find what you need easily and quickly.","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"SimBowen"},"content":"In the next subsection, [Section 3.2 - reading this document](#32-reading-this-document), you can find several useful tips on how to read this guide.","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"wjchoi0712"},"content":"The following section, [Section 4 - Features](#4-features), documents the main features of **NUSMaze** and provides explanation","lastModifiedDate":"2021-04-06"},{"lineNumber":119,"author":{"gitId":"wjchoi0712"},"content":"on how to utilise them.","lastModifiedDate":"2021-04-06"},{"lineNumber":120,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"KimIdeas8"},"content":"### 3.2. Reading this document","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"SimBowen"},"content":"This section introduces you to some technical terms, symbols and syntax that are used throughout the guide. You may want to","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"SimBowen"},"content":"familiarize yourself with them before moving to the next section.","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"SimBowen"},"content":"#### 3.2.1. Technical terms","lastModifiedDate":"2021-04-05"},{"lineNumber":128,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"SimBowen"},"content":"The table below explains some technical terms that you may come across throughout the user guide.","lastModifiedDate":"2021-04-05"},{"lineNumber":130,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":131,"author":{"gitId":"SimBowen"},"content":"| Term |  What it means |","lastModifiedDate":"2021-04-05"},{"lineNumber":132,"author":{"gitId":"wjchoi0712"},"content":"|:----------:|-------------|","lastModifiedDate":"2021-04-06"},{"lineNumber":133,"author":{"gitId":"SimBowen"},"content":"| CLI |  The Command-Line Interface (or CLI for short) is the user interface in which NUSMaze is based on. Unlike traditional Graphical User Interface (GUI) base applications, it may be less intuitive to new users. However upon familiarisation, fast typists may find it faster to use.  |","lastModifiedDate":"2021-04-05"},{"lineNumber":134,"author":{"gitId":"SimBowen"},"content":"| Command word| The Command word refers to the keywords which NUSMaze recognises to invoke specific commands. These command words will be indicated by `COMMAND WORD` in the various sections below.|","lastModifiedDate":"2021-04-05"},{"lineNumber":135,"author":{"gitId":"SimBowen"},"content":"|Parameter|Parameter refers to the user input required after the user is prompted by NUSMaze|","lastModifiedDate":"2021-04-05"},{"lineNumber":136,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":137,"author":{"gitId":"KimIdeas8"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":138,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":139,"author":{"gitId":"SimBowen"},"content":"#### 3.2.2. General Symbols and Syntax","lastModifiedDate":"2021-04-05"},{"lineNumber":140,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":141,"author":{"gitId":"SimBowen"},"content":"The table below explains the general syntax used throughout the user guide.","lastModifiedDate":"2021-03-30"},{"lineNumber":142,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":144,"author":{"gitId":"SimBowen"},"content":"| Syntax |  What it means |","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"wjchoi0712"},"content":"|:----------:|-------------|","lastModifiedDate":"2021-04-06"},{"lineNumber":146,"author":{"gitId":"SimBowen"},"content":"| `command` |  A grey highlighted block specifies a executable command or parameters that can be entered into the command box.  |","lastModifiedDate":"2021-04-05"},{"lineNumber":147,"author":{"gitId":"SimBowen"},"content":"| _italics_ | Italicised text indicates that the text has a definition specific to NUSMaze, or it is a caption for a Figure in the guide. |","lastModifiedDate":"2021-04-03"},{"lineNumber":148,"author":{"gitId":"SimBowen"},"content":"|\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e :information_source: \u003c/div\u003e  | An exclamation mark indicates that the following text is a tip. |","lastModifiedDate":"2021-03-30"},{"lineNumber":149,"author":{"gitId":"SimBowen"},"content":"|\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-danger\"\u003e :warning: \u003c/div\u003e | A warning sign indicates that the following text is important. |","lastModifiedDate":"2021-03-30"},{"lineNumber":150,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":151,"author":{"gitId":"SimBowen"},"content":"#### 3.2.3. Format of commands","lastModifiedDate":"2021-04-05"},{"lineNumber":152,"author":{"gitId":"SimBowen"},"content":"The following points explain the format of a command.","lastModifiedDate":"2021-03-30"},{"lineNumber":153,"author":{"gitId":"SimBowen"},"content":"More examples will be provided for each command in [Section 4 - Features](#4-features).","lastModifiedDate":"2021-03-30"},{"lineNumber":154,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":155,"author":{"gitId":"KimIdeas8"},"content":"1. Words in `UPPER_CASE` are parameters to be supplied by you. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":156,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":157,"author":{"gitId":"KimIdeas8"},"content":"2. In all formats shown in features, → denotes a prompt from the CLI. A user input is expected after the prompt. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":158,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":159,"author":{"gitId":"KimIdeas8"},"content":"3. All the examples provided below are simulation scenarios of expected user commands and outputs by NUSMaze. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":160,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":161,"author":{"gitId":"KimIdeas8"},"content":"4. In each example, lines starting with \u003e signifies user command. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":162,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":163,"author":{"gitId":"KimIdeas8"},"content":"5. In each example, lines starting with * signifies a user input after being prompted by NUSMaze. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":164,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":165,"author":{"gitId":"SimBowen"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-05"},{"lineNumber":166,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":167,"author":{"gitId":"Rizavur"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":168,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-16"},{"lineNumber":169,"author":{"gitId":"KimIdeas8"},"content":"## 4. Features","lastModifiedDate":"2021-03-31"},{"lineNumber":170,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":171,"author":{"gitId":"SimBowen"},"content":"This section contains all the information about the features of **NUSMaze**.","lastModifiedDate":"2021-03-30"},{"lineNumber":172,"author":{"gitId":"SimBowen"},"content":"You may enter a command into the CLI to use each feature.","lastModifiedDate":"2021-04-05"},{"lineNumber":173,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":174,"author":{"gitId":"KimIdeas8"},"content":"### 4.1 Viewing Help","lastModifiedDate":"2021-03-31"},{"lineNumber":175,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":176,"author":{"gitId":"SimBowen"},"content":"Lists all commands and functions of each feature.\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":177,"author":{"gitId":"SimBowen"},"content":"Format : `help` \u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":178,"author":{"gitId":"Rizavur"},"content":"Example :","lastModifiedDate":"2021-04-07"},{"lineNumber":179,"author":{"gitId":"Rizavur"},"content":"```","lastModifiedDate":"2021-04-07"},{"lineNumber":180,"author":{"gitId":"Rizavur"},"content":"--------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":181,"author":{"gitId":"Rizavur"},"content":"\u003e help","lastModifiedDate":"2021-04-07"},{"lineNumber":182,"author":{"gitId":"Rizavur"},"content":"--------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":183,"author":{"gitId":"Rizavur"},"content":"1.  go:","lastModifiedDate":"2021-04-07"},{"lineNumber":184,"author":{"gitId":"Rizavur"},"content":"\t* finds the route to go from one block to another block or eatery","lastModifiedDate":"2021-04-07"},{"lineNumber":185,"author":{"gitId":"Rizavur"},"content":"2.  history:","lastModifiedDate":"2021-04-07"},{"lineNumber":186,"author":{"gitId":"Rizavur"},"content":"\t* lists past 10 route searches","lastModifiedDate":"2021-04-07"},{"lineNumber":187,"author":{"gitId":"Rizavur"},"content":"3.  clear history:","lastModifiedDate":"2021-04-07"},{"lineNumber":188,"author":{"gitId":"Rizavur"},"content":"\t* deletes all past route searches from history","lastModifiedDate":"2021-04-07"},{"lineNumber":189,"author":{"gitId":"Rizavur"},"content":"4.  repeat history:","lastModifiedDate":"2021-04-07"},{"lineNumber":190,"author":{"gitId":"Rizavur"},"content":"\t* repeats the past route search of your choice","lastModifiedDate":"2021-04-07"},{"lineNumber":191,"author":{"gitId":"Rizavur"},"content":"5.  add alias:","lastModifiedDate":"2021-04-07"},{"lineNumber":192,"author":{"gitId":"Rizavur"},"content":"\t* creates an alias for an existing block","lastModifiedDate":"2021-04-07"},{"lineNumber":193,"author":{"gitId":"Rizavur"},"content":"6.  show alias:","lastModifiedDate":"2021-04-07"},{"lineNumber":194,"author":{"gitId":"Rizavur"},"content":"\t* lists all aliases that are currently active","lastModifiedDate":"2021-04-07"},{"lineNumber":195,"author":{"gitId":"Rizavur"},"content":"7.  delete alias:","lastModifiedDate":"2021-04-07"},{"lineNumber":196,"author":{"gitId":"Rizavur"},"content":"\t* deletes an alias that was previously created","lastModifiedDate":"2021-04-07"},{"lineNumber":197,"author":{"gitId":"Rizavur"},"content":"8.  add daily route:","lastModifiedDate":"2021-04-07"},{"lineNumber":198,"author":{"gitId":"Rizavur"},"content":"\t* adds a schedule for the selected day","lastModifiedDate":"2021-04-07"},{"lineNumber":199,"author":{"gitId":"Rizavur"},"content":"9.  show daily route:","lastModifiedDate":"2021-04-07"},{"lineNumber":200,"author":{"gitId":"Rizavur"},"content":"\t* shows the generated route for the schedule of the selected day","lastModifiedDate":"2021-04-07"},{"lineNumber":201,"author":{"gitId":"Rizavur"},"content":"10. delete daily route:","lastModifiedDate":"2021-04-07"},{"lineNumber":202,"author":{"gitId":"Rizavur"},"content":"\t* deletes the stored schedule based on the index number tagged to the day","lastModifiedDate":"2021-04-07"},{"lineNumber":203,"author":{"gitId":"Rizavur"},"content":"11. add note:","lastModifiedDate":"2021-04-07"},{"lineNumber":204,"author":{"gitId":"Rizavur"},"content":"\t* adds and tags a note to a particular location","lastModifiedDate":"2021-04-07"},{"lineNumber":205,"author":{"gitId":"Rizavur"},"content":"12. show notes:","lastModifiedDate":"2021-04-07"},{"lineNumber":206,"author":{"gitId":"Rizavur"},"content":"\t* list notes tagged to the given location","lastModifiedDate":"2021-04-07"},{"lineNumber":207,"author":{"gitId":"Rizavur"},"content":"13. delete note:","lastModifiedDate":"2021-04-07"},{"lineNumber":208,"author":{"gitId":"Rizavur"},"content":"\t* deletes notes based on index number tagged to the given location","lastModifiedDate":"2021-04-07"},{"lineNumber":209,"author":{"gitId":"Rizavur"},"content":"14. add favourite:","lastModifiedDate":"2021-04-07"},{"lineNumber":210,"author":{"gitId":"Rizavur"},"content":"\t* adds a favourite route","lastModifiedDate":"2021-04-07"},{"lineNumber":211,"author":{"gitId":"Rizavur"},"content":"15. show favourite:","lastModifiedDate":"2021-04-07"},{"lineNumber":212,"author":{"gitId":"Rizavur"},"content":"\t* lists all favourite routes that were previously created","lastModifiedDate":"2021-04-07"},{"lineNumber":213,"author":{"gitId":"Rizavur"},"content":"16. delete favourite:","lastModifiedDate":"2021-04-07"},{"lineNumber":214,"author":{"gitId":"Rizavur"},"content":"\t* deletes a favourite route based on index number tagged to the route","lastModifiedDate":"2021-04-07"},{"lineNumber":215,"author":{"gitId":"Rizavur"},"content":"17. show venues:","lastModifiedDate":"2021-04-07"},{"lineNumber":216,"author":{"gitId":"Rizavur"},"content":"\t* lists all possible venues that can be used in the application (excluding user\u0027s alias)","lastModifiedDate":"2021-04-07"},{"lineNumber":217,"author":{"gitId":"Rizavur"},"content":"18. bye:","lastModifiedDate":"2021-04-07"},{"lineNumber":218,"author":{"gitId":"Rizavur"},"content":"\t* exits the application","lastModifiedDate":"2021-04-07"},{"lineNumber":219,"author":{"gitId":"Rizavur"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":220,"author":{"gitId":"Rizavur"},"content":"```","lastModifiedDate":"2021-04-07"},{"lineNumber":221,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":222,"author":{"gitId":"Rizavur"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":223,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-16"},{"lineNumber":224,"author":{"gitId":"wjchoi0712"},"content":"### 4.2 Showing all venues","lastModifiedDate":"2021-04-12"},{"lineNumber":225,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":226,"author":{"gitId":"wjchoi0712"},"content":"List all the venues in Engineering and Computing campus. \u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":227,"author":{"gitId":"SimBowen"},"content":"Format : `show venues` \u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":228,"author":{"gitId":"Rizavur"},"content":"Example :","lastModifiedDate":"2021-04-07"},{"lineNumber":229,"author":{"gitId":"Rizavur"},"content":"```","lastModifiedDate":"2021-04-07"},{"lineNumber":230,"author":{"gitId":"wjchoi0712"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":231,"author":{"gitId":"Rizavur"},"content":"\u003e show venues","lastModifiedDate":"2021-04-07"},{"lineNumber":232,"author":{"gitId":"wjchoi0712"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":233,"author":{"gitId":"Rizavur"},"content":"Venues in Engineering faculty:","lastModifiedDate":"2021-04-07"},{"lineNumber":234,"author":{"gitId":"Rizavur"},"content":"1. E1   | 7.  E4  | 13. EW1  | 19. LT6         | ","lastModifiedDate":"2021-04-07"},{"lineNumber":235,"author":{"gitId":"Rizavur"},"content":"2. E1A  | 8.  E4A | 14. EW1A | 20. LT7         | ","lastModifiedDate":"2021-04-07"},{"lineNumber":236,"author":{"gitId":"Rizavur"},"content":"3. E2   | 9.  E5  | 15. EW2  | 21. LT7A        | ","lastModifiedDate":"2021-04-07"},{"lineNumber":237,"author":{"gitId":"Rizavur"},"content":"4. E2A  | 10. E6  | 16. LT1  | 22. IT          | ","lastModifiedDate":"2021-04-07"},{"lineNumber":238,"author":{"gitId":"Rizavur"},"content":"5. E3   | 11. E7  | 17. LT2  | 23. T-LAB       | ","lastModifiedDate":"2021-04-07"},{"lineNumber":239,"author":{"gitId":"Rizavur"},"content":"6. E3A  | 12. EA  | 18. LT5  | 24. TECHNO EDGE | ","lastModifiedDate":"2021-04-07"},{"lineNumber":240,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":241,"author":{"gitId":"Rizavur"},"content":"Links between Engineering and Computing faculties:","lastModifiedDate":"2021-04-07"},{"lineNumber":242,"author":{"gitId":"Rizavur"},"content":"1. LT3 | 4. CENTRAL LIBRARY | ","lastModifiedDate":"2021-04-07"},{"lineNumber":243,"author":{"gitId":"Rizavur"},"content":"2. LT4 | 5. CHINESE LIBRARY | ","lastModifiedDate":"2021-04-07"},{"lineNumber":244,"author":{"gitId":"Rizavur"},"content":"3. AS6 | ","lastModifiedDate":"2021-04-07"},{"lineNumber":245,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":246,"author":{"gitId":"Rizavur"},"content":"Venues in Computing faculty:","lastModifiedDate":"2021-04-07"},{"lineNumber":247,"author":{"gitId":"Rizavur"},"content":"1. COM1 | 4. LT16 | ","lastModifiedDate":"2021-04-07"},{"lineNumber":248,"author":{"gitId":"Rizavur"},"content":"2. COM2 | 5. LT17 | ","lastModifiedDate":"2021-04-07"},{"lineNumber":249,"author":{"gitId":"Rizavur"},"content":"3. COM3 | ","lastModifiedDate":"2021-04-07"},{"lineNumber":250,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":251,"author":{"gitId":"Rizavur"},"content":"Eateries:","lastModifiedDate":"2021-04-07"},{"lineNumber":252,"author":{"gitId":"Rizavur"},"content":"1. TECHNO EDGE CANTEEN | 5. SPINELLI COFFEE | ","lastModifiedDate":"2021-04-07"},{"lineNumber":253,"author":{"gitId":"Rizavur"},"content":"2. CHEERS MINIMART     | 6. MAXX COFFEE     | ","lastModifiedDate":"2021-04-07"},{"lineNumber":254,"author":{"gitId":"Rizavur"},"content":"3. ARISE \u0026 SHINE       | 7. STARBUCKS       | ","lastModifiedDate":"2021-04-07"},{"lineNumber":255,"author":{"gitId":"Rizavur"},"content":"4. PLATYPUS FOOD BAR   | ","lastModifiedDate":"2021-04-07"},{"lineNumber":256,"author":{"gitId":"wjchoi0712"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":257,"author":{"gitId":"Rizavur"},"content":"```","lastModifiedDate":"2021-04-07"},{"lineNumber":258,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":259,"author":{"gitId":"wjchoi0712"},"content":"\u003e :information_source: These are the venue names that can be used in the features below. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":260,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":261,"author":{"gitId":"Rizavur"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":262,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-16"},{"lineNumber":263,"author":{"gitId":"wjchoi0712"},"content":"### 4.3 Routing","lastModifiedDate":"2021-04-06"},{"lineNumber":264,"author":{"gitId":"wjchoi0712"},"content":"#### 4.3.1 Routing between blocks","lastModifiedDate":"2021-04-06"},{"lineNumber":265,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":266,"author":{"gitId":"SimBowen"},"content":"Finds the shortest route to go from one block to another.\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":267,"author":{"gitId":"KimIdeas8"},"content":"Format : `go` → `STARTING_BLOCK` → `DESTINATION_BLOCK` \u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":268,"author":{"gitId":"SimBowen"},"content":"Example :","lastModifiedDate":"2021-04-05"},{"lineNumber":269,"author":{"gitId":"SimBowen"},"content":"```","lastModifiedDate":"2021-04-05"},{"lineNumber":270,"author":{"gitId":"wjchoi0712"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":271,"author":{"gitId":"SimBowen"},"content":"\u003e go","lastModifiedDate":"2021-04-05"},{"lineNumber":272,"author":{"gitId":"wjchoi0712"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":273,"author":{"gitId":"SimBowen"},"content":"Starting Block:","lastModifiedDate":"2021-04-05"},{"lineNumber":274,"author":{"gitId":"SimBowen"},"content":"* e2","lastModifiedDate":"2021-04-05"},{"lineNumber":275,"author":{"gitId":"SimBowen"},"content":"Destination Block:","lastModifiedDate":"2021-04-05"},{"lineNumber":276,"author":{"gitId":"SimBowen"},"content":"* com1","lastModifiedDate":"2021-04-05"},{"lineNumber":277,"author":{"gitId":"wjchoi0712"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":278,"author":{"gitId":"SimBowen"},"content":"Route: E2 -\u003e E3 -\u003e E4 -\u003e E5 -\u003e LT3 -\u003e CHINESE LIBRARY -\u003e CENTRAL LIBRARY -\u003e AS6 -\u003e COM1","lastModifiedDate":"2021-04-05"},{"lineNumber":279,"author":{"gitId":"wjchoi0712"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":280,"author":{"gitId":"SimBowen"},"content":"```","lastModifiedDate":"2021-04-05"},{"lineNumber":281,"author":{"gitId":"SimBowen"},"content":"- When the `go` command is given NUSMaze will prompt you for the `STARTING_BLOCK`","lastModifiedDate":"2021-03-30"},{"lineNumber":282,"author":{"gitId":"KimIdeas8"},"content":"  followed by the `DESTINATION BLOCK`. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":283,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":284,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":285,"author":{"gitId":"wjchoi0712"},"content":"\u003e :information_source: All the parameters for the Routing feature are **case-insensitive**. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":286,"author":{"gitId":"wjchoi0712"},"content":"\u003e :warning: Both parameters must be one of the Engineering or Computing venues. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":287,"author":{"gitId":"wjchoi0712"},"content":"\u003e :warning: The `STARTING_BLOCK` and the `DESTINATION_BLOCK` cannot be the same. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":288,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":289,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":290,"author":{"gitId":"SimBowen"},"content":"#### 4.3.2 Routing to an eatery","lastModifiedDate":"2021-04-09"},{"lineNumber":291,"author":{"gitId":"wjchoi0712"},"content":"It is also possible to find the shortest route to an eatery using the go feature.\u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":292,"author":{"gitId":"SimBowen"},"content":"Format : `go` → `STARTING_BLOCK` → `EATERY_NAME` \u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":293,"author":{"gitId":"wjchoi0712"},"content":"Example : ","lastModifiedDate":"2021-04-06"},{"lineNumber":294,"author":{"gitId":"wjchoi0712"},"content":"```","lastModifiedDate":"2021-04-06"},{"lineNumber":295,"author":{"gitId":"wjchoi0712"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":296,"author":{"gitId":"wjchoi0712"},"content":"\u003e go","lastModifiedDate":"2021-04-06"},{"lineNumber":297,"author":{"gitId":"wjchoi0712"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":298,"author":{"gitId":"wjchoi0712"},"content":"Starting Block:","lastModifiedDate":"2021-04-06"},{"lineNumber":299,"author":{"gitId":"wjchoi0712"},"content":"* e1","lastModifiedDate":"2021-04-06"},{"lineNumber":300,"author":{"gitId":"wjchoi0712"},"content":"Destination Block:","lastModifiedDate":"2021-04-06"},{"lineNumber":301,"author":{"gitId":"wjchoi0712"},"content":"* starbucks","lastModifiedDate":"2021-04-06"},{"lineNumber":302,"author":{"gitId":"wjchoi0712"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":303,"author":{"gitId":"wjchoi0712"},"content":"Route: E1 -\u003e LT5 -\u003e TECHNO EDGE -\u003e STARBUCKS","lastModifiedDate":"2021-04-06"},{"lineNumber":304,"author":{"gitId":"wjchoi0712"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":305,"author":{"gitId":"wjchoi0712"},"content":"```","lastModifiedDate":"2021-04-06"},{"lineNumber":306,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":307,"author":{"gitId":"KimIdeas8"},"content":"- By entering the name of the eatery that you wish to go to in the `EATERY_NAME` parameter,","lastModifiedDate":"2021-04-06"},{"lineNumber":308,"author":{"gitId":"SimBowen"},"content":"  NUSMaze will display the shortest route to go from the `STARTING_BLOCK` to the","lastModifiedDate":"2021-04-03"},{"lineNumber":309,"author":{"gitId":"KimIdeas8"},"content":"  desired eatery. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":310,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":311,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":312,"author":{"gitId":"wjchoi0712"},"content":"\u003e :warning: The `STARTING_BLOCK` must be one of the Engineering or Computing buildings. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":313,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":314,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":315,"author":{"gitId":"SimBowen"},"content":"#### 4.3.3 Routing to the closest eatery","lastModifiedDate":"2021-04-09"},{"lineNumber":316,"author":{"gitId":"SimBowen"},"content":"NUSMaze can also provide you with a list of eateries from closest to furthest if you are unsure which eatery to go.\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":317,"author":{"gitId":"SimBowen"},"content":"Format : `go` → `STARTING_BLOCK` → `eatery` → `EATERY_ENTRY` \u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":318,"author":{"gitId":"wjchoi0712"},"content":"Example :","lastModifiedDate":"2021-04-06"},{"lineNumber":319,"author":{"gitId":"wjchoi0712"},"content":"```","lastModifiedDate":"2021-04-06"},{"lineNumber":320,"author":{"gitId":"wjchoi0712"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":321,"author":{"gitId":"wjchoi0712"},"content":"\u003e go","lastModifiedDate":"2021-04-06"},{"lineNumber":322,"author":{"gitId":"wjchoi0712"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":323,"author":{"gitId":"wjchoi0712"},"content":"Starting Block:","lastModifiedDate":"2021-04-06"},{"lineNumber":324,"author":{"gitId":"wjchoi0712"},"content":"* e1","lastModifiedDate":"2021-04-06"},{"lineNumber":325,"author":{"gitId":"wjchoi0712"},"content":"Destination Block:","lastModifiedDate":"2021-04-06"},{"lineNumber":326,"author":{"gitId":"wjchoi0712"},"content":"* eatery","lastModifiedDate":"2021-04-06"},{"lineNumber":327,"author":{"gitId":"wjchoi0712"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":328,"author":{"gitId":"wjchoi0712"},"content":"Here are the list of eateries(from closest to furthest):","lastModifiedDate":"2021-04-06"},{"lineNumber":329,"author":{"gitId":"wjchoi0712"},"content":"1. TECHNO EDGE CANTEEN","lastModifiedDate":"2021-04-06"},{"lineNumber":330,"author":{"gitId":"wjchoi0712"},"content":"2. CHEERS MINIMART","lastModifiedDate":"2021-04-06"},{"lineNumber":331,"author":{"gitId":"wjchoi0712"},"content":"3. PLATYPUS FOOD BAR","lastModifiedDate":"2021-04-06"},{"lineNumber":332,"author":{"gitId":"wjchoi0712"},"content":"4. SPINELLI COFFEE","lastModifiedDate":"2021-04-06"},{"lineNumber":333,"author":{"gitId":"wjchoi0712"},"content":"5. STARBUCKS","lastModifiedDate":"2021-04-06"},{"lineNumber":334,"author":{"gitId":"wjchoi0712"},"content":"6. ARISE \u0026 SHINE","lastModifiedDate":"2021-04-06"},{"lineNumber":335,"author":{"gitId":"wjchoi0712"},"content":"7. MAXX COFFEE","lastModifiedDate":"2021-04-06"},{"lineNumber":336,"author":{"gitId":"wjchoi0712"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":337,"author":{"gitId":"wjchoi0712"},"content":"Select entry to go:","lastModifiedDate":"2021-04-06"},{"lineNumber":338,"author":{"gitId":"wjchoi0712"},"content":"* 5","lastModifiedDate":"2021-04-06"},{"lineNumber":339,"author":{"gitId":"wjchoi0712"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":340,"author":{"gitId":"wjchoi0712"},"content":"Route: E1 -\u003e LT5 -\u003e TECHNO EDGE -\u003e STARBUCKS","lastModifiedDate":"2021-04-06"},{"lineNumber":341,"author":{"gitId":"wjchoi0712"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":342,"author":{"gitId":"wjchoi0712"},"content":"```","lastModifiedDate":"2021-04-06"},{"lineNumber":343,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":344,"author":{"gitId":"KimIdeas8"},"content":"- By entering `eatery` as `DESTINATION_BLOCK` parameter, you can see the list of eatery to choose from. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":345,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":346,"author":{"gitId":"KimIdeas8"},"content":"- NUSMaze then prompts for the index of the eatery that you wish to go to. This is when you can enter `EATERY_ENTRY`. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":347,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":348,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":349,"author":{"gitId":"wjchoi0712"},"content":"\u003e :warning: The `STARTING_BLOCK` must be one of the Engineering or Computing buildings. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":350,"author":{"gitId":"wjchoi0712"},"content":"\u003e :warning: `EATERY_ENTRY` must be an integer from 1 to 7. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":351,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":352,"author":{"gitId":"Rizavur"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":353,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":354,"author":{"gitId":"wjchoi0712"},"content":"### 4.4 History","lastModifiedDate":"2021-04-06"},{"lineNumber":355,"author":{"gitId":"wjchoi0712"},"content":"#### 4.4.1 Viewing History","lastModifiedDate":"2021-04-06"},{"lineNumber":356,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":357,"author":{"gitId":"SimBowen"},"content":"Lists the past 10 route searches.\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":358,"author":{"gitId":"SimBowen"},"content":"Format : `history`\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":359,"author":{"gitId":"SimBowen"},"content":"Example :","lastModifiedDate":"2021-04-09"},{"lineNumber":360,"author":{"gitId":"SimBowen"},"content":"```","lastModifiedDate":"2021-04-09"},{"lineNumber":361,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-09"},{"lineNumber":362,"author":{"gitId":"Rye98"},"content":"\u003e history","lastModifiedDate":"2021-04-11"},{"lineNumber":363,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-09"},{"lineNumber":364,"author":{"gitId":"Rye98"},"content":"There are 2 records in your history: ","lastModifiedDate":"2021-04-11"},{"lineNumber":365,"author":{"gitId":"Rye98"},"content":"1. E2 -\u003e COM1","lastModifiedDate":"2021-04-11"},{"lineNumber":366,"author":{"gitId":"Rye98"},"content":"2. E1 -\u003e STARBUCKS","lastModifiedDate":"2021-04-11"},{"lineNumber":367,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-09"},{"lineNumber":368,"author":{"gitId":"SimBowen"},"content":"```","lastModifiedDate":"2021-04-09"},{"lineNumber":369,"author":{"gitId":"wjchoi0712"},"content":"\u003e :information_source: NUSMaze will automatically update your history to the most recent 10 searches.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":370,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":371,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":372,"author":{"gitId":"Rye98"},"content":"#### 4.4.2 Repeating History","lastModifiedDate":"2021-04-11"},{"lineNumber":373,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":374,"author":{"gitId":"SimBowen"},"content":"Repeats past route search history.\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":375,"author":{"gitId":"wjchoi0712"},"content":"Format : `repeat history` → `REPEAT_ENTRY`\u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":376,"author":{"gitId":"wjchoi0712"},"content":"Example : ","lastModifiedDate":"2021-04-06"},{"lineNumber":377,"author":{"gitId":"wjchoi0712"},"content":"```","lastModifiedDate":"2021-04-06"},{"lineNumber":378,"author":{"gitId":"Rye98"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":379,"author":{"gitId":"wjchoi0712"},"content":"\u003e repeat history","lastModifiedDate":"2021-04-06"},{"lineNumber":380,"author":{"gitId":"Rye98"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":381,"author":{"gitId":"wjchoi0712"},"content":"There are 2 records in your history: ","lastModifiedDate":"2021-04-06"},{"lineNumber":382,"author":{"gitId":"wjchoi0712"},"content":"1. E2 -\u003e COM1","lastModifiedDate":"2021-04-06"},{"lineNumber":383,"author":{"gitId":"wjchoi0712"},"content":"2. E1 -\u003e STARBUCKS","lastModifiedDate":"2021-04-06"},{"lineNumber":384,"author":{"gitId":"Rye98"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":385,"author":{"gitId":"wjchoi0712"},"content":"Select Entry to Repeat:","lastModifiedDate":"2021-04-06"},{"lineNumber":386,"author":{"gitId":"wjchoi0712"},"content":"* 2","lastModifiedDate":"2021-04-06"},{"lineNumber":387,"author":{"gitId":"Rye98"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":388,"author":{"gitId":"wjchoi0712"},"content":"Route: E1 -\u003e LT5 -\u003e TECHNO EDGE -\u003e STARBUCKS","lastModifiedDate":"2021-04-06"},{"lineNumber":389,"author":{"gitId":"Rye98"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":390,"author":{"gitId":"wjchoi0712"},"content":"```","lastModifiedDate":"2021-04-06"},{"lineNumber":391,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":392,"author":{"gitId":"KimIdeas8"},"content":"- When the `repeat history` command is entered, NUSMaze will show a list of past route searches. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":393,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":394,"author":{"gitId":"KimIdeas8"},"content":"- Followed by a prompt asking for the `REPEAT_ENTRY` index that you want to repeat. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":395,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":396,"author":{"gitId":"wjchoi0712"},"content":"\u003e :warning: `REPEAT_ENTRY` must be an integer that is within the bounds of the history list shown.","lastModifiedDate":"2021-04-12"},{"lineNumber":397,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":398,"author":{"gitId":"Rizavur"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":399,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-16"},{"lineNumber":400,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":401,"author":{"gitId":"Rye98"},"content":"#### 4.4.3 Clearing History","lastModifiedDate":"2021-04-11"},{"lineNumber":402,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":403,"author":{"gitId":"Rye98"},"content":"Deletes all histories (past route searches).\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":404,"author":{"gitId":"Rye98"},"content":"Format : `clear history`\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":405,"author":{"gitId":"Rye98"},"content":"Example :","lastModifiedDate":"2021-04-11"},{"lineNumber":406,"author":{"gitId":"Rye98"},"content":"```","lastModifiedDate":"2021-04-11"},{"lineNumber":407,"author":{"gitId":"Rye98"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":408,"author":{"gitId":"Rye98"},"content":"\u003e clear history","lastModifiedDate":"2021-04-11"},{"lineNumber":409,"author":{"gitId":"Rye98"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":410,"author":{"gitId":"Rye98"},"content":"Your history has been successfully cleared","lastModifiedDate":"2021-04-11"},{"lineNumber":411,"author":{"gitId":"Rye98"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":412,"author":{"gitId":"Rye98"},"content":"```","lastModifiedDate":"2021-04-11"},{"lineNumber":413,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":414,"author":{"gitId":"Rizavur"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":415,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-16"},{"lineNumber":416,"author":{"gitId":"wjchoi0712"},"content":"### 4.5 Alias","lastModifiedDate":"2021-04-06"},{"lineNumber":417,"author":{"gitId":"wjchoi0712"},"content":"#### 4.5.1 Adding alias for block name","lastModifiedDate":"2021-04-12"},{"lineNumber":418,"author":{"gitId":"SimBowen"},"content":"Creates an alias for existing blocks.\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":419,"author":{"gitId":"Rizavur"},"content":"Format : `add alias` → `BLOCK` → `ALIAS_NAME`\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":420,"author":{"gitId":"Rizavur"},"content":"Example :","lastModifiedDate":"2021-04-07"},{"lineNumber":421,"author":{"gitId":"Rizavur"},"content":"```","lastModifiedDate":"2021-04-07"},{"lineNumber":422,"author":{"gitId":"Rizavur"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":423,"author":{"gitId":"Rizavur"},"content":"\u003e add alias","lastModifiedDate":"2021-04-07"},{"lineNumber":424,"author":{"gitId":"Rizavur"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":425,"author":{"gitId":"Rizavur"},"content":"Enter block: ","lastModifiedDate":"2021-04-07"},{"lineNumber":426,"author":{"gitId":"Rizavur"},"content":"* techno edge","lastModifiedDate":"2021-04-07"},{"lineNumber":427,"author":{"gitId":"Rizavur"},"content":"Enter the alias name: ","lastModifiedDate":"2021-04-07"},{"lineNumber":428,"author":{"gitId":"Rizavur"},"content":"* food","lastModifiedDate":"2021-04-07"},{"lineNumber":429,"author":{"gitId":"Rizavur"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":430,"author":{"gitId":"Rizavur"},"content":"Got it! Successfully added FOOD as TECHNO EDGE\u0027s alias","lastModifiedDate":"2021-04-07"},{"lineNumber":431,"author":{"gitId":"Rizavur"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":432,"author":{"gitId":"Rizavur"},"content":"```","lastModifiedDate":"2021-04-07"},{"lineNumber":433,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":434,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":435,"author":{"gitId":"KimIdeas8"},"content":"- When `add alias` command is called, NUSMaze will prompt for the `BLOCK` that you","lastModifiedDate":"2021-04-06"},{"lineNumber":436,"author":{"gitId":"KimIdeas8"},"content":"  wish to set the alias for. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":437,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":438,"author":{"gitId":"KimIdeas8"},"content":"- NUSMaze then prompts you to input a desired `ALIAS_NAME`. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":439,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":440,"author":{"gitId":"KimIdeas8"},"content":"- Note that there cannot be multiple blocks sharing the same alias. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":441,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":442,"author":{"gitId":"wjchoi0712"},"content":"\u003e :warning: Aliases cannot be used in the `Daily route feature` and `favourite feature`. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":443,"author":{"gitId":"wjchoi0712"},"content":"\u003e :information_source: Alias is **case-insensitive** for all commands \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":444,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":445,"author":{"gitId":"wjchoi0712"},"content":"#### 4.5.2 Showing aliases","lastModifiedDate":"2021-04-12"},{"lineNumber":446,"author":{"gitId":"SimBowen"},"content":"Lists all aliases that are currently active.\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":447,"author":{"gitId":"Rizavur"},"content":"Format : `show alias` \u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":448,"author":{"gitId":"Rizavur"},"content":"Example :","lastModifiedDate":"2021-04-07"},{"lineNumber":449,"author":{"gitId":"Rizavur"},"content":"```","lastModifiedDate":"2021-04-07"},{"lineNumber":450,"author":{"gitId":"Rizavur"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":451,"author":{"gitId":"Rizavur"},"content":"\u003e show alias","lastModifiedDate":"2021-04-07"},{"lineNumber":452,"author":{"gitId":"Rizavur"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":453,"author":{"gitId":"Rizavur"},"content":"Here are your aliases:","lastModifiedDate":"2021-04-07"},{"lineNumber":454,"author":{"gitId":"Rizavur"},"content":"1. FOOD - TECHNO EDGE","lastModifiedDate":"2021-04-07"},{"lineNumber":455,"author":{"gitId":"Rizavur"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":456,"author":{"gitId":"Rizavur"},"content":"```","lastModifiedDate":"2021-04-07"},{"lineNumber":457,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":458,"author":{"gitId":"Rizavur"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":459,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-16"},{"lineNumber":460,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-16"},{"lineNumber":461,"author":{"gitId":"wjchoi0712"},"content":"#### 4.5.3 Deleting aliases","lastModifiedDate":"2021-04-06"},{"lineNumber":462,"author":{"gitId":"SimBowen"},"content":"Deletes an alias that was previously created.\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":463,"author":{"gitId":"Rizavur"},"content":"Format : `delete alias` → `ALIAS_NAME`\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":464,"author":{"gitId":"Rizavur"},"content":"Example :","lastModifiedDate":"2021-04-07"},{"lineNumber":465,"author":{"gitId":"Rizavur"},"content":"```","lastModifiedDate":"2021-04-07"},{"lineNumber":466,"author":{"gitId":"Rizavur"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":467,"author":{"gitId":"Rizavur"},"content":"\u003e delete alias","lastModifiedDate":"2021-04-07"},{"lineNumber":468,"author":{"gitId":"Rizavur"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":469,"author":{"gitId":"Rizavur"},"content":"Enter the alias name that you wish to delete: ","lastModifiedDate":"2021-04-07"},{"lineNumber":470,"author":{"gitId":"Rizavur"},"content":"* food","lastModifiedDate":"2021-04-07"},{"lineNumber":471,"author":{"gitId":"Rizavur"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":472,"author":{"gitId":"Rizavur"},"content":"Got it! Successfully deleted FOOD from alias list!","lastModifiedDate":"2021-04-07"},{"lineNumber":473,"author":{"gitId":"Rizavur"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":474,"author":{"gitId":"Rizavur"},"content":"```","lastModifiedDate":"2021-04-07"},{"lineNumber":475,"author":{"gitId":"SimBowen"},"content":"- When the `delete alias` command is given, NUSMaze will prompt you for the","lastModifiedDate":"2021-03-30"},{"lineNumber":476,"author":{"gitId":"SimBowen"},"content":"  `ALIAS_NAME` that you wish to delete.","lastModifiedDate":"2021-03-30"},{"lineNumber":477,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":478,"author":{"gitId":"Rizavur"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":479,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-16"},{"lineNumber":480,"author":{"gitId":"wjchoi0712"},"content":"### 4.6 Daily Routes","lastModifiedDate":"2021-04-06"},{"lineNumber":481,"author":{"gitId":"wjchoi0712"},"content":"#### 4.6.1 Adding daily routes","lastModifiedDate":"2021-04-12"},{"lineNumber":482,"author":{"gitId":"SimBowen"},"content":"Adds a schedule for the selected day.\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":483,"author":{"gitId":"SimBowen"},"content":"Format : `add daily route` → `DAY_ENTRY` → `BLOCK` → ... → `end` \u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":484,"author":{"gitId":"SimBowen"},"content":"Example : ","lastModifiedDate":"2021-04-05"},{"lineNumber":485,"author":{"gitId":"SimBowen"},"content":"```","lastModifiedDate":"2021-04-05"},{"lineNumber":486,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-05"},{"lineNumber":487,"author":{"gitId":"SimBowen"},"content":"\u003e add daily route","lastModifiedDate":"2021-04-05"},{"lineNumber":488,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-05"},{"lineNumber":489,"author":{"gitId":"SimBowen"},"content":"Here are the available days:","lastModifiedDate":"2021-04-05"},{"lineNumber":490,"author":{"gitId":"SimBowen"},"content":"1. MONDAY","lastModifiedDate":"2021-04-05"},{"lineNumber":491,"author":{"gitId":"SimBowen"},"content":"2. TUESDAY","lastModifiedDate":"2021-04-05"},{"lineNumber":492,"author":{"gitId":"SimBowen"},"content":"3. WEDNESDAY","lastModifiedDate":"2021-04-05"},{"lineNumber":493,"author":{"gitId":"SimBowen"},"content":"4. THURSDAY","lastModifiedDate":"2021-04-05"},{"lineNumber":494,"author":{"gitId":"SimBowen"},"content":"5. FRIDAY","lastModifiedDate":"2021-04-05"},{"lineNumber":495,"author":{"gitId":"SimBowen"},"content":"6. SATURDAY","lastModifiedDate":"2021-04-05"},{"lineNumber":496,"author":{"gitId":"SimBowen"},"content":"7. SUNDAY","lastModifiedDate":"2021-04-05"},{"lineNumber":497,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-05"},{"lineNumber":498,"author":{"gitId":"SimBowen"},"content":"Select entry:","lastModifiedDate":"2021-04-05"},{"lineNumber":499,"author":{"gitId":"SimBowen"},"content":"* 1","lastModifiedDate":"2021-04-05"},{"lineNumber":500,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-05"},{"lineNumber":501,"author":{"gitId":"SimBowen"},"content":"Enter location of the first activity of the day: ","lastModifiedDate":"2021-04-05"},{"lineNumber":502,"author":{"gitId":"SimBowen"},"content":"* e2","lastModifiedDate":"2021-04-05"},{"lineNumber":503,"author":{"gitId":"SimBowen"},"content":"Enter location of the next activity of the day: (Enter \"end\" to stop)","lastModifiedDate":"2021-04-06"},{"lineNumber":504,"author":{"gitId":"SimBowen"},"content":"* e7","lastModifiedDate":"2021-04-05"},{"lineNumber":505,"author":{"gitId":"SimBowen"},"content":"Enter location of the next activity of the day: (Enter \"end\" to stop)","lastModifiedDate":"2021-04-06"},{"lineNumber":506,"author":{"gitId":"SimBowen"},"content":"* ea","lastModifiedDate":"2021-04-05"},{"lineNumber":507,"author":{"gitId":"SimBowen"},"content":"Enter location of the next activity of the day: (Enter \"end\" to stop)","lastModifiedDate":"2021-04-06"},{"lineNumber":508,"author":{"gitId":"SimBowen"},"content":"* end","lastModifiedDate":"2021-04-05"},{"lineNumber":509,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-05"},{"lineNumber":510,"author":{"gitId":"SimBowen"},"content":"Got it! Successfully added MONDAY\u0027s schedule!","lastModifiedDate":"2021-04-05"},{"lineNumber":511,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-05"},{"lineNumber":512,"author":{"gitId":"SimBowen"},"content":"```","lastModifiedDate":"2021-04-05"},{"lineNumber":513,"author":{"gitId":"KimIdeas8"},"content":"- You will be prompted to select the `DAY_ENTRY` of the day which you want to schedule. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":514,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":515,"author":{"gitId":"SimBowen"},"content":"- You will then be prompted to enter the location of the activities(`BLOCK`) of the day one at","lastModifiedDate":"2021-03-30"},{"lineNumber":516,"author":{"gitId":"KimIdeas8"},"content":"  a time. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":517,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":518,"author":{"gitId":"KimIdeas8"},"content":"- NUSMaze will continuously ask for locations until you input `end`. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":519,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":520,"author":{"gitId":"wjchoi0712"},"content":"\u003e :warning: `DAY_ENTRY` must be an integer between 1 and 7, each representing a day of the week (1 represents Monday and 7 represents Sunday).\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":521,"author":{"gitId":"wjchoi0712"},"content":"\u003e :warning: There must be at least one block entered for the schedule.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":522,"author":{"gitId":"wjchoi0712"},"content":"\u003e :warning: Entries must be the original block names. Aliases are not allowed.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":523,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":524,"author":{"gitId":"Rizavur"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":525,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":526,"author":{"gitId":"wjchoi0712"},"content":"#### 4.6.2 Showing daily routes","lastModifiedDate":"2021-04-12"},{"lineNumber":527,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":528,"author":{"gitId":"SimBowen"},"content":"Shows the generated route for the schedule of the selected day, if applicable.\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":529,"author":{"gitId":"KimIdeas8"},"content":"Format : `show daily route` → `DAY_NUMBER` \u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":530,"author":{"gitId":"SimBowen"},"content":"Example :","lastModifiedDate":"2021-04-05"},{"lineNumber":531,"author":{"gitId":"SimBowen"},"content":"```","lastModifiedDate":"2021-04-05"},{"lineNumber":532,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-05"},{"lineNumber":533,"author":{"gitId":"SimBowen"},"content":"\u003e show daily route","lastModifiedDate":"2021-04-05"},{"lineNumber":534,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-05"},{"lineNumber":535,"author":{"gitId":"SimBowen"},"content":"Here are the available days:","lastModifiedDate":"2021-04-05"},{"lineNumber":536,"author":{"gitId":"SimBowen"},"content":"1. MONDAY","lastModifiedDate":"2021-04-05"},{"lineNumber":537,"author":{"gitId":"SimBowen"},"content":"2. TUESDAY","lastModifiedDate":"2021-04-05"},{"lineNumber":538,"author":{"gitId":"SimBowen"},"content":"3. FRIDAY","lastModifiedDate":"2021-04-05"},{"lineNumber":539,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-05"},{"lineNumber":540,"author":{"gitId":"SimBowen"},"content":"Select entry:","lastModifiedDate":"2021-04-05"},{"lineNumber":541,"author":{"gitId":"SimBowen"},"content":"* 1","lastModifiedDate":"2021-04-05"},{"lineNumber":542,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-05"},{"lineNumber":543,"author":{"gitId":"SimBowen"},"content":"Location of activity 1: E2","lastModifiedDate":"2021-04-05"},{"lineNumber":544,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":545,"author":{"gitId":"SimBowen"},"content":"Location of activity 2: E7","lastModifiedDate":"2021-04-05"},{"lineNumber":546,"author":{"gitId":"SimBowen"},"content":"Route: E2 -\u003e E3 -\u003e E4 -\u003e E4A -\u003e EW2 -\u003e E6 -\u003e E7","lastModifiedDate":"2021-04-05"},{"lineNumber":547,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":548,"author":{"gitId":"SimBowen"},"content":"Location of activity 3: EA","lastModifiedDate":"2021-04-05"},{"lineNumber":549,"author":{"gitId":"SimBowen"},"content":"Route: E7 -\u003e E6 -\u003e EW2 -\u003e E4A -\u003e E4 -\u003e E3 -\u003e E2 -\u003e EA","lastModifiedDate":"2021-04-05"},{"lineNumber":550,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-05"},{"lineNumber":551,"author":{"gitId":"SimBowen"},"content":"```","lastModifiedDate":"2021-04-05"},{"lineNumber":552,"author":{"gitId":"KimIdeas8"},"content":"- When the `show daily route` command is entered, the application will display the list of available days","lastModifiedDate":"2021-04-06"},{"lineNumber":553,"author":{"gitId":"KimIdeas8"},"content":"  for which daily routes have been saved. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":554,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":555,"author":{"gitId":"KimIdeas8"},"content":"- NUSMaze will then prompt you for a `DAY_NUMBER`. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":556,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":557,"author":{"gitId":"wjchoi0712"},"content":"\u003e :warning: The `DAY_NUMBER` must be the index of one of the available days which has been displayed. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":558,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":559,"author":{"gitId":"Rizavur"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":560,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":561,"author":{"gitId":"wjchoi0712"},"content":"#### 4.6.3 Deleting daily routes","lastModifiedDate":"2021-04-12"},{"lineNumber":562,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":563,"author":{"gitId":"SimBowen"},"content":"Clears the schedule of the selected day, if applicable.\u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":564,"author":{"gitId":"KimIdeas8"},"content":"Format : `delete daily route` → `DAY_NUMBER` \u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":565,"author":{"gitId":"SimBowen"},"content":"Example :","lastModifiedDate":"2021-04-05"},{"lineNumber":566,"author":{"gitId":"SimBowen"},"content":"```","lastModifiedDate":"2021-04-05"},{"lineNumber":567,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-05"},{"lineNumber":568,"author":{"gitId":"SimBowen"},"content":"\u003e delete daily route","lastModifiedDate":"2021-04-05"},{"lineNumber":569,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-05"},{"lineNumber":570,"author":{"gitId":"SimBowen"},"content":"Here are the available days:","lastModifiedDate":"2021-04-05"},{"lineNumber":571,"author":{"gitId":"SimBowen"},"content":"1. MONDAY","lastModifiedDate":"2021-04-05"},{"lineNumber":572,"author":{"gitId":"SimBowen"},"content":"2. TUESDAY","lastModifiedDate":"2021-04-05"},{"lineNumber":573,"author":{"gitId":"SimBowen"},"content":"3. FRIDAY","lastModifiedDate":"2021-04-05"},{"lineNumber":574,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-05"},{"lineNumber":575,"author":{"gitId":"SimBowen"},"content":"Select entry:","lastModifiedDate":"2021-04-05"},{"lineNumber":576,"author":{"gitId":"SimBowen"},"content":"* 1","lastModifiedDate":"2021-04-05"},{"lineNumber":577,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-05"},{"lineNumber":578,"author":{"gitId":"SimBowen"},"content":"Got it! Successfully cleared MONDAY\u0027s schedule!","lastModifiedDate":"2021-04-05"},{"lineNumber":579,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-05"},{"lineNumber":580,"author":{"gitId":"SimBowen"},"content":"```","lastModifiedDate":"2021-04-05"},{"lineNumber":581,"author":{"gitId":"KimIdeas8"},"content":"- When the `delete daily route` command is entered, the application will display the list of available days","lastModifiedDate":"2021-04-06"},{"lineNumber":582,"author":{"gitId":"KimIdeas8"},"content":"  for which daily routes have been saved. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":583,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":584,"author":{"gitId":"KimIdeas8"},"content":"- NUSMaze will then prompt you for a `DAY_NUMBER`. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":585,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":586,"author":{"gitId":"wjchoi0712"},"content":"\u003e :warning: The `DAY_NUMBER` must be the index of one of the available days which has been displayed. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":587,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":588,"author":{"gitId":"Rizavur"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":589,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-16"},{"lineNumber":590,"author":{"gitId":"SimBowen"},"content":"### 4.7 Favourite Routes","lastModifiedDate":"2021-04-11"},{"lineNumber":591,"author":{"gitId":"wjchoi0712"},"content":"#### 4.7.1 Adding favourite routes","lastModifiedDate":"2021-04-12"},{"lineNumber":592,"author":{"gitId":"SimBowen"},"content":"You can add a route to favourites to easily access it in the future.\u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":593,"author":{"gitId":"KimIdeas8"},"content":"Format : `add favourite` → `STARTING_BLOCK` → `DESTINATION_BLOCK` \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":594,"author":{"gitId":"Rye98"},"content":"Example :","lastModifiedDate":"2021-04-07"},{"lineNumber":595,"author":{"gitId":"Rye98"},"content":"```","lastModifiedDate":"2021-04-07"},{"lineNumber":596,"author":{"gitId":"Rye98"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":597,"author":{"gitId":"Rye98"},"content":"\u003e add favourite","lastModifiedDate":"2021-04-07"},{"lineNumber":598,"author":{"gitId":"Rye98"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":599,"author":{"gitId":"Rye98"},"content":"Starting Block:","lastModifiedDate":"2021-04-07"},{"lineNumber":600,"author":{"gitId":"Rye98"},"content":"* EA","lastModifiedDate":"2021-04-07"},{"lineNumber":601,"author":{"gitId":"Rye98"},"content":"Destination Block:","lastModifiedDate":"2021-04-07"},{"lineNumber":602,"author":{"gitId":"Rye98"},"content":"* E4","lastModifiedDate":"2021-04-07"},{"lineNumber":603,"author":{"gitId":"Rye98"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":604,"author":{"gitId":"Rye98"},"content":"Got it! Successfully added new favourite route!","lastModifiedDate":"2021-04-07"},{"lineNumber":605,"author":{"gitId":"Rye98"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":606,"author":{"gitId":"Rye98"},"content":"```","lastModifiedDate":"2021-04-07"},{"lineNumber":607,"author":{"gitId":"wjchoi0712"},"content":"\u003e :information_source: All the parameters for the Favourite feature are **case-insensitive**. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":608,"author":{"gitId":"wjchoi0712"},"content":"\u003e :warning: The `STARTING_BLOCK` and the `DESTINATION_BLOCK` cannot be the same. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":609,"author":{"gitId":"wjchoi0712"},"content":"\u003e :warning: Aliases cannot be used in this feature.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":610,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":611,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":612,"author":{"gitId":"wjchoi0712"},"content":"#### 4.7.2 Showing favourite routes","lastModifiedDate":"2021-04-12"},{"lineNumber":613,"author":{"gitId":"SimBowen"},"content":"You can request NUSMaze to display all the saved favourites, if you have stored at least one route to favourites.\u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":614,"author":{"gitId":"Rye98"},"content":"Format : `show favourite` \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":615,"author":{"gitId":"Rye98"},"content":"Example :","lastModifiedDate":"2021-04-07"},{"lineNumber":616,"author":{"gitId":"Rye98"},"content":"```","lastModifiedDate":"2021-04-07"},{"lineNumber":617,"author":{"gitId":"Rye98"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":618,"author":{"gitId":"Rye98"},"content":"\u003e show favourite","lastModifiedDate":"2021-04-07"},{"lineNumber":619,"author":{"gitId":"Rye98"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":620,"author":{"gitId":"Rye98"},"content":"Here are your favourite routes:","lastModifiedDate":"2021-04-07"},{"lineNumber":621,"author":{"gitId":"Rye98"},"content":"1. EA -\u003e E4","lastModifiedDate":"2021-04-07"},{"lineNumber":622,"author":{"gitId":"Rye98"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":623,"author":{"gitId":"Rye98"},"content":"```","lastModifiedDate":"2021-04-07"},{"lineNumber":624,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":625,"author":{"gitId":"Rizavur"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":626,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-16"},{"lineNumber":627,"author":{"gitId":"wjchoi0712"},"content":"#### 4.7.3 Repeating favourite routes","lastModifiedDate":"2021-04-12"},{"lineNumber":628,"author":{"gitId":"SimBowen"},"content":"You can execute and obtain the route to take for your favourite routes.\u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":629,"author":{"gitId":"Rye98"},"content":"Format : `repeat favourite` → `ROUTE_INDEX` \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":630,"author":{"gitId":"Rye98"},"content":"Example :","lastModifiedDate":"2021-04-07"},{"lineNumber":631,"author":{"gitId":"Rye98"},"content":"```","lastModifiedDate":"2021-04-07"},{"lineNumber":632,"author":{"gitId":"Rye98"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":633,"author":{"gitId":"Rye98"},"content":"\u003e repeat favourite","lastModifiedDate":"2021-04-07"},{"lineNumber":634,"author":{"gitId":"Rye98"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":635,"author":{"gitId":"Rye98"},"content":"Here are your favourite routes:","lastModifiedDate":"2021-04-07"},{"lineNumber":636,"author":{"gitId":"Rye98"},"content":"1. EA -\u003e E4","lastModifiedDate":"2021-04-07"},{"lineNumber":637,"author":{"gitId":"Rye98"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":638,"author":{"gitId":"Rye98"},"content":"Select Entry to Repeat:","lastModifiedDate":"2021-04-07"},{"lineNumber":639,"author":{"gitId":"Rye98"},"content":"* 1","lastModifiedDate":"2021-04-07"},{"lineNumber":640,"author":{"gitId":"Rye98"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":641,"author":{"gitId":"Rye98"},"content":"Route: EA -\u003e E2 -\u003e E3 -\u003e E4","lastModifiedDate":"2021-04-07"},{"lineNumber":642,"author":{"gitId":"Rye98"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":643,"author":{"gitId":"Rye98"},"content":"```","lastModifiedDate":"2021-04-07"},{"lineNumber":644,"author":{"gitId":"wjchoi0712"},"content":"\u003e :warning: `ROUTE_INDEX` must be an integer within the bounds of the favourite list. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":645,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":646,"author":{"gitId":"wjchoi0712"},"content":"#### 4.7.4 Deleting favourite routes","lastModifiedDate":"2021-04-12"},{"lineNumber":647,"author":{"gitId":"SimBowen"},"content":"You can delete a favourite route if it is not frequently used anymore.\u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":648,"author":{"gitId":"Rye98"},"content":"Format : `delete favourite` → `ROUTE_INDEX` \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":649,"author":{"gitId":"Rye98"},"content":"Example :","lastModifiedDate":"2021-04-07"},{"lineNumber":650,"author":{"gitId":"Rye98"},"content":"```","lastModifiedDate":"2021-04-07"},{"lineNumber":651,"author":{"gitId":"Rye98"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":652,"author":{"gitId":"Rye98"},"content":"\u003e delete favourite","lastModifiedDate":"2021-04-07"},{"lineNumber":653,"author":{"gitId":"Rye98"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":654,"author":{"gitId":"Rye98"},"content":"Here are your favourite routes:","lastModifiedDate":"2021-04-07"},{"lineNumber":655,"author":{"gitId":"Rye98"},"content":"1. EA -\u003e E4","lastModifiedDate":"2021-04-07"},{"lineNumber":656,"author":{"gitId":"Rye98"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":657,"author":{"gitId":"Rye98"},"content":"Select Entry to delete:","lastModifiedDate":"2021-04-07"},{"lineNumber":658,"author":{"gitId":"Rye98"},"content":"* 1","lastModifiedDate":"2021-04-07"},{"lineNumber":659,"author":{"gitId":"Rye98"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":660,"author":{"gitId":"Rye98"},"content":"Got it! Successfully deleted favourite route :)","lastModifiedDate":"2021-04-07"},{"lineNumber":661,"author":{"gitId":"Rye98"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-07"},{"lineNumber":662,"author":{"gitId":"Rye98"},"content":"```","lastModifiedDate":"2021-04-07"},{"lineNumber":663,"author":{"gitId":"wjchoi0712"},"content":"\u003e :warning: `ROUTE_INDEX` must be an integer within the bounds of the favourite list. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":664,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":665,"author":{"gitId":"Rizavur"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":666,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-16"},{"lineNumber":667,"author":{"gitId":"SimBowen"},"content":"### 4.8 Notes","lastModifiedDate":"2021-04-11"},{"lineNumber":668,"author":{"gitId":"SimBowen"},"content":"#### 4.8.1 Adding notes","lastModifiedDate":"2021-04-11"},{"lineNumber":669,"author":{"gitId":"KimIdeas8"},"content":"Tags a note to a location of your choice, if the location exists.\u003cbr/\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":670,"author":{"gitId":"SimBowen"},"content":"Format : `add note` → `BLOCK` → `NOTE` \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":671,"author":{"gitId":"SimBowen"},"content":"Example :","lastModifiedDate":"2021-04-11"},{"lineNumber":672,"author":{"gitId":"SimBowen"},"content":"```","lastModifiedDate":"2021-04-11"},{"lineNumber":673,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":674,"author":{"gitId":"SimBowen"},"content":"\u003e add note","lastModifiedDate":"2021-04-11"},{"lineNumber":675,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":676,"author":{"gitId":"SimBowen"},"content":"Enter Block:","lastModifiedDate":"2021-04-11"},{"lineNumber":677,"author":{"gitId":"SimBowen"},"content":"* starbucks","lastModifiedDate":"2021-04-11"},{"lineNumber":678,"author":{"gitId":"SimBowen"},"content":"Enter the Note:","lastModifiedDate":"2021-04-11"},{"lineNumber":679,"author":{"gitId":"SimBowen"},"content":"* give myself a treat of the new caramel macchiato flavour! :))","lastModifiedDate":"2021-04-11"},{"lineNumber":680,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":681,"author":{"gitId":"SimBowen"},"content":"Got it! Successfully added and tagged note to STARBUCKS","lastModifiedDate":"2021-04-11"},{"lineNumber":682,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":683,"author":{"gitId":"SimBowen"},"content":"```","lastModifiedDate":"2021-04-11"},{"lineNumber":684,"author":{"gitId":"SimBowen"},"content":"- When the `add note` command is entered, NUSMaze will prompt you for a `BLOCK`. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":685,"author":{"gitId":"SimBowen"},"content":"- After a valid location is keyed in,  NUSMaze will prompt you for a `NOTE` to be tagged to the location. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":686,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":687,"author":{"gitId":"wjchoi0712"},"content":"\u003e :warning: The `BLOCK` must be one of the Engineering or Computing buildings. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":688,"author":{"gitId":"wjchoi0712"},"content":"\u003e :warning: The `NOTE` will be invalid if it is empty. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":689,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":690,"author":{"gitId":"wjchoi0712"},"content":"#### 4.8.2 Showing notes","lastModifiedDate":"2021-04-12"},{"lineNumber":691,"author":{"gitId":"SimBowen"},"content":"Lists all notes which had been tagged to the given location, if it exists.\u003cbr/\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":692,"author":{"gitId":"SimBowen"},"content":"Format : `show note` → `BLOCK` \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":693,"author":{"gitId":"SimBowen"},"content":"Example :","lastModifiedDate":"2021-04-11"},{"lineNumber":694,"author":{"gitId":"SimBowen"},"content":"```","lastModifiedDate":"2021-04-11"},{"lineNumber":695,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":696,"author":{"gitId":"SimBowen"},"content":"\u003e show note","lastModifiedDate":"2021-04-11"},{"lineNumber":697,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":698,"author":{"gitId":"SimBowen"},"content":"Enter Block:","lastModifiedDate":"2021-04-11"},{"lineNumber":699,"author":{"gitId":"SimBowen"},"content":"* starbucks","lastModifiedDate":"2021-04-11"},{"lineNumber":700,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":701,"author":{"gitId":"SimBowen"},"content":"Here is the list of notes:","lastModifiedDate":"2021-04-11"},{"lineNumber":702,"author":{"gitId":"SimBowen"},"content":"1. give myself a treat of the new caramel macchiato flavour! :))","lastModifiedDate":"2021-04-11"},{"lineNumber":703,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":704,"author":{"gitId":"SimBowen"},"content":"```","lastModifiedDate":"2021-04-11"},{"lineNumber":705,"author":{"gitId":"SimBowen"},"content":"- When the `show note` command is entered, NUSMaze will prompt you for a `BLOCK`. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":706,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":707,"author":{"gitId":"wjchoi0712"},"content":"\u003e :warning: The `BLOCK` must be one of the Engineering or Computing buildings. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":708,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":709,"author":{"gitId":"Rizavur"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":710,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-16"},{"lineNumber":711,"author":{"gitId":"wjchoi0712"},"content":"#### 4.8.3 Deleting notes","lastModifiedDate":"2021-04-12"},{"lineNumber":712,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":713,"author":{"gitId":"KimIdeas8"},"content":"Deletes a note with the corresponding index number tagged to the given location, if the location exists and the note has been tagged to the given location.\u003cbr/\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":714,"author":{"gitId":"SimBowen"},"content":"Format : `delete note` → `BLOCK` → `NOTE_INDEX` \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":715,"author":{"gitId":"SimBowen"},"content":"Example :","lastModifiedDate":"2021-04-11"},{"lineNumber":716,"author":{"gitId":"SimBowen"},"content":"```","lastModifiedDate":"2021-04-11"},{"lineNumber":717,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":718,"author":{"gitId":"SimBowen"},"content":"\u003e delete note","lastModifiedDate":"2021-04-11"},{"lineNumber":719,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":720,"author":{"gitId":"SimBowen"},"content":"Enter Block:","lastModifiedDate":"2021-04-11"},{"lineNumber":721,"author":{"gitId":"SimBowen"},"content":"* starbucks","lastModifiedDate":"2021-04-11"},{"lineNumber":722,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":723,"author":{"gitId":"SimBowen"},"content":"Here is the list of notes:","lastModifiedDate":"2021-04-11"},{"lineNumber":724,"author":{"gitId":"SimBowen"},"content":"1. give myself a treat of the new caramel macchiato flavour! :))","lastModifiedDate":"2021-04-11"},{"lineNumber":725,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":726,"author":{"gitId":"SimBowen"},"content":"Select Entry to delete:","lastModifiedDate":"2021-04-11"},{"lineNumber":727,"author":{"gitId":"SimBowen"},"content":"* 1","lastModifiedDate":"2021-04-11"},{"lineNumber":728,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":729,"author":{"gitId":"SimBowen"},"content":"Got it! Successfully deleted note tagged to STARBUCKS","lastModifiedDate":"2021-04-11"},{"lineNumber":730,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":731,"author":{"gitId":"SimBowen"},"content":"```","lastModifiedDate":"2021-04-11"},{"lineNumber":732,"author":{"gitId":"SimBowen"},"content":"- When the `delete note` command is entered, NUSMaze will then prompt you for a `BLOCK`. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":733,"author":{"gitId":"SimBowen"},"content":"- After a valid location is keyed in,  NUSMaze will prompt you for a `NOTE_INDEX` of the note to be deleted,","lastModifiedDate":"2021-04-11"},{"lineNumber":734,"author":{"gitId":"SimBowen"},"content":"  which is the index of the note in the location\u0027s notes list. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":735,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":736,"author":{"gitId":"wjchoi0712"},"content":"\u003e :warning: The `BLOCK` must be one of the Engineering or Computing buildings. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":737,"author":{"gitId":"wjchoi0712"},"content":"\u003e :warning: The `NOTE_INDEX` must be an integer within the total number of notes that the location has. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":738,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":739,"author":{"gitId":"Rizavur"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":740,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":741,"author":{"gitId":"wjchoi0712"},"content":"### 4.9 Exiting the application","lastModifiedDate":"2021-04-06"},{"lineNumber":742,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":743,"author":{"gitId":"SimBowen"},"content":"Exits the application.\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":744,"author":{"gitId":"Rye98"},"content":"Format : `bye` \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":745,"author":{"gitId":"SimBowen"},"content":"Example :","lastModifiedDate":"2021-04-09"},{"lineNumber":746,"author":{"gitId":"SimBowen"},"content":"```","lastModifiedDate":"2021-04-09"},{"lineNumber":747,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-09"},{"lineNumber":748,"author":{"gitId":"SimBowen"},"content":"\u003e bye","lastModifiedDate":"2021-04-09"},{"lineNumber":749,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-09"},{"lineNumber":750,"author":{"gitId":"SimBowen"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2021-04-09"},{"lineNumber":751,"author":{"gitId":"SimBowen"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-09"},{"lineNumber":752,"author":{"gitId":"SimBowen"},"content":"```","lastModifiedDate":"2021-04-09"},{"lineNumber":753,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":754,"author":{"gitId":"wjchoi0712"},"content":"### 4.10 Saving the Data","lastModifiedDate":"2021-04-06"},{"lineNumber":755,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":756,"author":{"gitId":"wjchoi0712"},"content":"NUSMaze data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":757,"author":{"gitId":"wjchoi0712"},"content":"Your saved data can be found in the *data folder* within your *home folder* of **NUSMaze**. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":758,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":759,"author":{"gitId":"wjchoi0712"},"content":"In the data folder you will find 5 text files as shown below.\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":760,"author":{"gitId":"wjchoi0712"},"content":"![image.png](images/textfiles.png)","lastModifiedDate":"2021-04-11"},{"lineNumber":761,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":762,"author":{"gitId":"wjchoi0712"},"content":"\u003e :warning: It is highly recommended that you do not edit the saved data as it can cause loading issues in future sessions! \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":763,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":764,"author":{"gitId":"Rizavur"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":765,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-16"},{"lineNumber":766,"author":{"gitId":"wjchoi0712"},"content":"### 4.11 Loading Past Data","lastModifiedDate":"2021-04-11"},{"lineNumber":767,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":768,"author":{"gitId":"wjchoi0712"},"content":"NUSMaze automatically loads your past data when the application is launched.\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":769,"author":{"gitId":"Rizavur"},"content":"NUSMaze will inform you whether the data has been successfully loaded by displaying the message, as shown below, after the NUSMaze Logo.\u003cbr\u003e","lastModifiedDate":"2021-04-16"},{"lineNumber":770,"author":{"gitId":"wjchoi0712"},"content":"```","lastModifiedDate":"2021-04-11"},{"lineNumber":771,"author":{"gitId":"wjchoi0712"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":772,"author":{"gitId":"wjchoi0712"},"content":"[X] Alias data has been successfully loaded!","lastModifiedDate":"2021-04-11"},{"lineNumber":773,"author":{"gitId":"wjchoi0712"},"content":"[X] History data has been successfully loaded!","lastModifiedDate":"2021-04-11"},{"lineNumber":774,"author":{"gitId":"wjchoi0712"},"content":"[X] Favourite data has been successfully loaded!","lastModifiedDate":"2021-04-11"},{"lineNumber":775,"author":{"gitId":"wjchoi0712"},"content":"[X] Daily Route data has been successfully loaded!","lastModifiedDate":"2021-04-11"},{"lineNumber":776,"author":{"gitId":"wjchoi0712"},"content":"[X] Note data has been successfully loaded!","lastModifiedDate":"2021-04-11"},{"lineNumber":777,"author":{"gitId":"wjchoi0712"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":778,"author":{"gitId":"wjchoi0712"},"content":"```","lastModifiedDate":"2021-04-11"},{"lineNumber":779,"author":{"gitId":"wjchoi0712"},"content":"\u003e :information_source: If the saved data is corrupted, NUSMaze will automatically clear the data for that feature.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":780,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":781,"author":{"gitId":"SimBowen"},"content":"For example if favourite data is corrupted, NUSMaze will display:\u003cbr\u003e ","lastModifiedDate":"2021-04-12"},{"lineNumber":782,"author":{"gitId":"wjchoi0712"},"content":"```","lastModifiedDate":"2021-04-11"},{"lineNumber":783,"author":{"gitId":"wjchoi0712"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":784,"author":{"gitId":"wjchoi0712"},"content":"[X] Alias data has been successfully loaded!","lastModifiedDate":"2021-04-11"},{"lineNumber":785,"author":{"gitId":"wjchoi0712"},"content":"[X] History data has been successfully loaded!","lastModifiedDate":"2021-04-11"},{"lineNumber":786,"author":{"gitId":"wjchoi0712"},"content":"[ ] An Error occurred while loading Favourite data. It has been cleared to default!","lastModifiedDate":"2021-04-11"},{"lineNumber":787,"author":{"gitId":"wjchoi0712"},"content":"[X] Daily Route data has been successfully loaded!","lastModifiedDate":"2021-04-11"},{"lineNumber":788,"author":{"gitId":"wjchoi0712"},"content":"[X] Note data has been successfully loaded!","lastModifiedDate":"2021-04-11"},{"lineNumber":789,"author":{"gitId":"wjchoi0712"},"content":"------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":790,"author":{"gitId":"wjchoi0712"},"content":"```","lastModifiedDate":"2021-04-11"},{"lineNumber":791,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":792,"author":{"gitId":"SimBowen"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-30"},{"lineNumber":793,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":794,"author":{"gitId":"KimIdeas8"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":795,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":796,"author":{"gitId":"SimBowen"},"content":"## 5. FAQ","lastModifiedDate":"2021-03-30"},{"lineNumber":797,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":798,"author":{"gitId":"SimBowen"},"content":"**Q** : Do I lose all my personalised routes and preferences when I close the application? \u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":799,"author":{"gitId":"KimIdeas8"},"content":"**A** : Aliases, daily scheduled routes, history and notes are all stored once you exit the app and loaded upon next entry, so you do not lose any data. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":800,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":801,"author":{"gitId":"SimBowen"},"content":"**Q** : How do I transfer my personalised routes and preferences to another computer? \u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":802,"author":{"gitId":"SimBowen"},"content":"**A** : Copy the entire data folder that can be found together with the NUSMaze.jar file on the first computer and copy it over to the same directory where the NUSMaze.jar file ","lastModifiedDate":"2021-03-30"},{"lineNumber":803,"author":{"gitId":"KimIdeas8"},"content":"can be found on the second computer. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":804,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":805,"author":{"gitId":"SimBowen"},"content":"**Q** : What should I do if I don\u0027t know how to travel from one block to another? \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":806,"author":{"gitId":"KimIdeas8"},"content":"**A** : You can refer to this [map](http://map.nus.edu.sg) to view the directions. \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":807,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":808,"author":{"gitId":"SimBowen"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-30"},{"lineNumber":809,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-16"},{"lineNumber":810,"author":{"gitId":"wjchoi0712"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":811,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":812,"author":{"gitId":"SimBowen"},"content":"## 6. Command summary","lastModifiedDate":"2021-04-06"},{"lineNumber":813,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":814,"author":{"gitId":"SimBowen"},"content":"|Action | Format |","lastModifiedDate":"2021-03-30"},{"lineNumber":815,"author":{"gitId":"SimBowen"},"content":"|---------------|------------------------------------------------------------------|","lastModifiedDate":"2021-03-30"},{"lineNumber":816,"author":{"gitId":"SimBowen"},"content":"|[**Viewing help**](#41-viewing-help)        | `help` | ","lastModifiedDate":"2021-03-30"},{"lineNumber":817,"author":{"gitId":"wjchoi0712"},"content":"|[**Showing all venues**](#42-showing-all-venues)        | `show venues` | ","lastModifiedDate":"2021-04-12"},{"lineNumber":818,"author":{"gitId":"SimBowen"},"content":"|[**Finding the route**](#431-routing-between-blocks)       | `go` → `STARTING_BLOCK` → `DESTINATION_BLOCK`|","lastModifiedDate":"2021-04-09"},{"lineNumber":819,"author":{"gitId":"SimBowen"},"content":"|[**Routing to the closest eatery**](#433-routing-to-the-closest-eatery)       | `go` → `STARTING_BLOCK` → `eatery` → `EATERY_ENTRY` |","lastModifiedDate":"2021-04-11"},{"lineNumber":820,"author":{"gitId":"Rizavur"},"content":"|[**Viewing history**](#441-viewing-history)     | `history` |","lastModifiedDate":"2021-04-07"},{"lineNumber":821,"author":{"gitId":"wjchoi0712"},"content":"|[**Repeating history**](#442-repeating-history)       | `repeat history` → `REPEAT_ENTRY` |","lastModifiedDate":"2021-04-12"},{"lineNumber":822,"author":{"gitId":"wjchoi0712"},"content":"|[**Clearing history**](#443-clearing-history)       | `clear history` |","lastModifiedDate":"2021-04-12"},{"lineNumber":823,"author":{"gitId":"wjchoi0712"},"content":"|[**Adding alias for block names**](#451-adding-alias-for-block-name)| `add alias` → `BLOCK` → `ALIAS_NAME` | ","lastModifiedDate":"2021-04-12"},{"lineNumber":824,"author":{"gitId":"wjchoi0712"},"content":"|[**Showing aliases**](#452-showing-aliases)  | `show alias` | ","lastModifiedDate":"2021-04-12"},{"lineNumber":825,"author":{"gitId":"SimBowen"},"content":"|[**Deleting alias**](#453-deleting-aliases)       | `delete alias` → `ALIAS_NAME` |","lastModifiedDate":"2021-04-09"},{"lineNumber":826,"author":{"gitId":"wjchoi0712"},"content":"|[**Adding daily routes**](#461-adding-daily-routes)     | `add daily route` → `DAY_NUMBER` → `BLOCK` → … → `BLOCK` → `end` | ","lastModifiedDate":"2021-04-12"},{"lineNumber":827,"author":{"gitId":"wjchoi0712"},"content":"|[**Showing daily routes**](#462-showing-daily-routes)       | `show daily route` → `DAY_NUMBER` |","lastModifiedDate":"2021-04-12"},{"lineNumber":828,"author":{"gitId":"wjchoi0712"},"content":"|[**Deleting daily routes**](#463-deleting-daily-routes)       | `delete daily route` → `DAY_NUMBER` |","lastModifiedDate":"2021-04-12"},{"lineNumber":829,"author":{"gitId":"wjchoi0712"},"content":"|[**Adding favourite routes**](#471-adding-favourite-routes)       | `add favourite` → `STARTING_BLOCK` → `DESTINATION_BLOCK` |","lastModifiedDate":"2021-04-12"},{"lineNumber":830,"author":{"gitId":"wjchoi0712"},"content":"|[**Showing favourite routes**](#472-showing-favourite-routes)       | `show favourite` |","lastModifiedDate":"2021-04-12"},{"lineNumber":831,"author":{"gitId":"wjchoi0712"},"content":"|[**Repeating favourite routes**](#473-repeating-favourite-routes)       | `repeat favourite` → `ROUTE_INDEX` |","lastModifiedDate":"2021-04-12"},{"lineNumber":832,"author":{"gitId":"wjchoi0712"},"content":"|[**Deleting favourite routes**](#474-deleting-favourite-routes)       | `delete favourite` → `ROUTE_INDEX` |","lastModifiedDate":"2021-04-12"},{"lineNumber":833,"author":{"gitId":"SimBowen"},"content":"|[**Adding notes**](#481-adding-notes)       | `add note` → `BLOCK` → `NOTE` |","lastModifiedDate":"2021-04-11"},{"lineNumber":834,"author":{"gitId":"wjchoi0712"},"content":"|[**Showing notes**](#482-showing-notes)      | `show note` → `BLOCK` | ","lastModifiedDate":"2021-04-12"},{"lineNumber":835,"author":{"gitId":"wjchoi0712"},"content":"|[**Deleting notes**](#483-deleting-notes)       | `delete note` → `BLOCK` → `NOTE_INDEX` |","lastModifiedDate":"2021-04-12"},{"lineNumber":836,"author":{"gitId":"Rizavur"},"content":"|[**Exiting the application**](#49-exiting-the-application)       | `bye` |","lastModifiedDate":"2021-04-07"},{"lineNumber":837,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"KimIdeas8":55,"SimBowen":328,"Rye98":85,"wjchoi0712":199,"Rizavur":146,"-":24}},{"path":"docs/images/SaveFeatureStep2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KimIdeas8"},"content":"@startuml","lastModifiedDate":"2021-04-07"},{"lineNumber":2,"author":{"gitId":"KimIdeas8"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-04-07"},{"lineNumber":3,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":4,"author":{"gitId":"KimIdeas8"},"content":"group sd saveData","lastModifiedDate":"2021-04-07"},{"lineNumber":5,"author":{"gitId":"KimIdeas8"},"content":"    loop till bye command","lastModifiedDate":"2021-04-07"},{"lineNumber":6,"author":{"gitId":"KimIdeas8"},"content":"    NusMaze --\u003e NusMaze: saveCurrentData()","lastModifiedDate":"2021-04-07"},{"lineNumber":7,"author":{"gitId":"KimIdeas8"},"content":"    activate NusMaze #DarkSalmon","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"KimIdeas8"},"content":"    NusMaze --\u003e \":AliasStorage\": saveData()","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"KimIdeas8"},"content":"    activate \":AliasStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":11,"author":{"gitId":"KimIdeas8"},"content":"    \":AliasStorage\" ---\u003e DataEncoder: encodeAlias(blockAlias)","lastModifiedDate":"2021-04-07"},{"lineNumber":12,"author":{"gitId":"KimIdeas8"},"content":"    activate DataEncoder","lastModifiedDate":"2021-04-07"},{"lineNumber":13,"author":{"gitId":"KimIdeas8"},"content":"    DataEncoder ---\u003e \":AliasStorage\": encodedData","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"KimIdeas8"},"content":"    deactivate DataEncoder","lastModifiedDate":"2021-04-07"},{"lineNumber":15,"author":{"gitId":"KimIdeas8"},"content":"    \":AliasStorage\" ---\u003e Files: write(filepath, encodedData);","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"KimIdeas8"},"content":"    activate Files","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"KimIdeas8"},"content":"    deactivate Files","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"KimIdeas8"},"content":"    \":AliasStorage\" --\u003e NusMaze","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":AliasStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":21,"author":{"gitId":"KimIdeas8"},"content":"    NusMaze --\u003e \":DailyRouteStorage\": saveData()","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"KimIdeas8"},"content":"    activate \":DailyRouteStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"KimIdeas8"},"content":"    \":DailyRouteStorage\" ---\u003e DataEncoder: encodeDailyRoute(dailyRoute)","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"KimIdeas8"},"content":"    activate DataEncoder","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"KimIdeas8"},"content":"    DataEncoder ---\u003e \":DailyRouteStorage\": encodedData","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"KimIdeas8"},"content":"    deactivate DataEncoder","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"KimIdeas8"},"content":"    \":DailyRouteStorage\" ---\u003e Files: write(filepath, encodedData);","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"KimIdeas8"},"content":"    activate Files","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"KimIdeas8"},"content":"    deactivate Files","lastModifiedDate":"2021-04-07"},{"lineNumber":30,"author":{"gitId":"KimIdeas8"},"content":"    \":DailyRouteStorage\" --\u003e NusMaze","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":DailyRouteStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":33,"author":{"gitId":"KimIdeas8"},"content":"    NusMaze --\u003e \":FavouriteStorage\": saveData()","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"KimIdeas8"},"content":"    activate \":FavouriteStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"KimIdeas8"},"content":"    \":FavouriteStorage\" ---\u003e DataEncoder: encodeFavourite(favourite)","lastModifiedDate":"2021-04-07"},{"lineNumber":36,"author":{"gitId":"KimIdeas8"},"content":"    activate DataEncoder","lastModifiedDate":"2021-04-07"},{"lineNumber":37,"author":{"gitId":"KimIdeas8"},"content":"    DataEncoder ---\u003e \":FavouriteStorage\": encodedData","lastModifiedDate":"2021-04-07"},{"lineNumber":38,"author":{"gitId":"KimIdeas8"},"content":"    deactivate DataEncoder","lastModifiedDate":"2021-04-07"},{"lineNumber":39,"author":{"gitId":"KimIdeas8"},"content":"    \":FavouriteStorage\" ---\u003e Files: write(filepath, encodedData);","lastModifiedDate":"2021-04-07"},{"lineNumber":40,"author":{"gitId":"KimIdeas8"},"content":"    activate Files","lastModifiedDate":"2021-04-07"},{"lineNumber":41,"author":{"gitId":"KimIdeas8"},"content":"    deactivate Files","lastModifiedDate":"2021-04-07"},{"lineNumber":42,"author":{"gitId":"KimIdeas8"},"content":"    \":FavouriteStorage\" --\u003e NusMaze","lastModifiedDate":"2021-04-07"},{"lineNumber":43,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":FavouriteStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":44,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":45,"author":{"gitId":"KimIdeas8"},"content":"    NusMaze --\u003e \":HistoryStorage\": saveData()","lastModifiedDate":"2021-04-07"},{"lineNumber":46,"author":{"gitId":"KimIdeas8"},"content":"    activate \":HistoryStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":47,"author":{"gitId":"KimIdeas8"},"content":"    \":HistoryStorage\" ---\u003e DataEncoder: encodeHistory(history)","lastModifiedDate":"2021-04-07"},{"lineNumber":48,"author":{"gitId":"KimIdeas8"},"content":"    activate DataEncoder","lastModifiedDate":"2021-04-07"},{"lineNumber":49,"author":{"gitId":"KimIdeas8"},"content":"    DataEncoder ---\u003e \":HistoryStorage\": encodedData","lastModifiedDate":"2021-04-07"},{"lineNumber":50,"author":{"gitId":"KimIdeas8"},"content":"    deactivate DataEncoder","lastModifiedDate":"2021-04-07"},{"lineNumber":51,"author":{"gitId":"KimIdeas8"},"content":"    \":HistoryStorage\" ---\u003e Files: write(filepath, encodedData);","lastModifiedDate":"2021-04-07"},{"lineNumber":52,"author":{"gitId":"KimIdeas8"},"content":"    activate Files","lastModifiedDate":"2021-04-07"},{"lineNumber":53,"author":{"gitId":"KimIdeas8"},"content":"    deactivate Files","lastModifiedDate":"2021-04-07"},{"lineNumber":54,"author":{"gitId":"KimIdeas8"},"content":"    \":HistoryStorage\" --\u003e NusMaze","lastModifiedDate":"2021-04-07"},{"lineNumber":55,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":HistoryStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":56,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":57,"author":{"gitId":"KimIdeas8"},"content":"    NusMaze --\u003e \":NotesStorage\": saveData()","lastModifiedDate":"2021-04-07"},{"lineNumber":58,"author":{"gitId":"KimIdeas8"},"content":"    activate \":NotesStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":59,"author":{"gitId":"KimIdeas8"},"content":"    \":NotesStorage\" ---\u003e DataEncoder: encodeNotes(nusMap)","lastModifiedDate":"2021-04-07"},{"lineNumber":60,"author":{"gitId":"KimIdeas8"},"content":"    activate DataEncoder","lastModifiedDate":"2021-04-07"},{"lineNumber":61,"author":{"gitId":"KimIdeas8"},"content":"    DataEncoder ---\u003e \":NotesStorage\": encodedData","lastModifiedDate":"2021-04-07"},{"lineNumber":62,"author":{"gitId":"KimIdeas8"},"content":"    deactivate DataEncoder","lastModifiedDate":"2021-04-07"},{"lineNumber":63,"author":{"gitId":"KimIdeas8"},"content":"    \":NotesStorage\" ---\u003e Files: write(filepath, encodedData);","lastModifiedDate":"2021-04-07"},{"lineNumber":64,"author":{"gitId":"KimIdeas8"},"content":"    activate Files","lastModifiedDate":"2021-04-07"},{"lineNumber":65,"author":{"gitId":"KimIdeas8"},"content":"    deactivate Files","lastModifiedDate":"2021-04-07"},{"lineNumber":66,"author":{"gitId":"KimIdeas8"},"content":"    \":NotesStorage\" --\u003e NusMaze","lastModifiedDate":"2021-04-07"},{"lineNumber":67,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":NotesStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":68,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":69,"author":{"gitId":"KimIdeas8"},"content":"    deactivate NusMaze #DarkSalmon","lastModifiedDate":"2021-04-07"},{"lineNumber":70,"author":{"gitId":"KimIdeas8"},"content":"    end","lastModifiedDate":"2021-04-07"},{"lineNumber":71,"author":{"gitId":"KimIdeas8"},"content":"end","lastModifiedDate":"2021-04-07"},{"lineNumber":72,"author":{"gitId":"KimIdeas8"},"content":"@enduml","lastModifiedDate":"2021-04-07"}],"authorContributionMap":{"KimIdeas8":72}},{"path":"docs/puml/AliasFeature.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"@startuml","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":"hide circle","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":"class ShowCustomAliasCommand {","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":"# AliasUi ui","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"+ execute():void","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"class AddCustomAliasCommand {","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":"# AliasUi ui","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":"- {static} String MESSAGE_SUCCESS","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"+ execute():void","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"Rizavur"},"content":"class BlockAlias {","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"Rizavur"},"content":"- HashMap\u003cString,String\u003e aliases","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"+ getAliasHashMap():HashMap\u003cString,String\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"+ changeAliasToBlock(String,String):String[]","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"+ addAlias(String,String):void","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"+ deleteAlias(String):void","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"Rizavur"},"content":"class NusMap {","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"Rizavur"},"content":"- HashMap\u003cString,Block\u003e map","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"Rizavur"},"content":"class NusMaze {","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"Rizavur"},"content":"- NusMap nusMap","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"Rizavur"},"content":"- UiManager ui","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"Rizavur"},"content":"- BlockAlias blockAlias","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"Rizavur"},"content":"- Storage aliasStorage","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"Rizavur"},"content":"class DeleteCustomAliasCommand {","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"Rizavur"},"content":"# AliasUi ui","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"Rizavur"},"content":"- {static} String MESSAGE_SUCCESS","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"wjchoi0712"},"content":"+ execute():void","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"Rizavur"},"content":"class AliasStorage {","lastModifiedDate":"2021-04-11"},{"lineNumber":36,"author":{"gitId":"wjchoi0712"},"content":"+ loadAlias(BlockAlias):void","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"wjchoi0712"},"content":"+ overwriteAliasListFile(BlockAlias):void","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"wjchoi0712"},"content":"+ appendToAliasListFile(String):void","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"Rizavur"},"content":"class AliasUi {","lastModifiedDate":"2021-04-11"},{"lineNumber":41,"author":{"gitId":"wjchoi0712"},"content":"+ getAliasInfo():String[]","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"wjchoi0712"},"content":"+ showCustomAliases(BlockAlias):void","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"wjchoi0712"},"content":"+ getDeleteAliasInfo():String","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"Rizavur"},"content":"\"{abstract}\\nCommand\" \u003c|-- ShowCustomAliasCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"Rizavur"},"content":"\"{abstract}\\nCommand\" \u003c|-- AddCustomAliasCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"Rizavur"},"content":"\"{abstract}\\nCommand\" \u003c|-- DeleteCustomAliasCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"Rizavur"},"content":"\"{abstract}\\nStorage\" \u003c|-- AliasStorage","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"Rizavur"},"content":"UiManager \u003c|-- AliasUi","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"Rizavur"},"content":"NusMaze --\u003e \"**1..***\" \"{abstract}\\nCommand\"","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"Rizavur"},"content":"DeleteCustomAliasCommand ..\u003e AliasUi","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"Rizavur"},"content":"AddCustomAliasCommand ..\u003e AliasUi","lastModifiedDate":"2021-04-11"},{"lineNumber":57,"author":{"gitId":"Rizavur"},"content":"ShowCustomAliasCommand ..\u003e AliasUi","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"Rizavur"},"content":"NusMaze --\u003e \"**1**\" BlockAlias","lastModifiedDate":"2021-04-11"},{"lineNumber":60,"author":{"gitId":"Rizavur"},"content":"NusMaze --\u003e \"**1**\" AliasStorage","lastModifiedDate":"2021-04-11"},{"lineNumber":61,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"Rizavur"},"content":"BlockAlias ..\u003e NusMap","lastModifiedDate":"2021-04-11"},{"lineNumber":63,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"Rizavur"},"content":"@enduml","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"wjchoi0712":13,"Rizavur":51}},{"path":"docs/puml/AliasFeatureSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"@startuml","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"hide footbox","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"participant User","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":"User -\u003e AddCustomAliasCommand : execute","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":"activate AddCustomAliasCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"Rizavur"},"content":"AddCustomAliasCommand -\u003e BlockAlias : addAlias","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":"activate BlockAlias","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"BlockAlias -\u003e BlockAlias : isValidBlock","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":"activate BlockAlias","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":"BlockAlias -\u003e NusMap : new","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"Rizavur"},"content":"activate NusMap","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"NusMap -\u003e NusMap : initValidBlocks","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"Rizavur"},"content":"activate NusMap","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"Rizavur"},"content":"NusMap --\u003e NusMap","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"Rizavur"},"content":"deactivate NusMap","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"Rizavur"},"content":"NusMap --\u003e BlockAlias","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"Rizavur"},"content":"deactivate NusMap","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"Rizavur"},"content":"BlockAlias -\u003e NusMap : getBlock","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"Rizavur"},"content":"activate NusMap","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"Rizavur"},"content":"NusMap --\u003e BlockAlias","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"Rizavur"},"content":"deactivate NusMap","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"Rizavur"},"content":"BlockAlias --\u003e BlockAlias","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"Rizavur"},"content":"deactivate BlockAlias","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"Rizavur"},"content":"BlockAlias -\u003e BlockAlias : isValidAlias","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"Rizavur"},"content":"activate BlockAlias","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"Rizavur"},"content":"BlockAlias -\u003e NusMap : new","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"Rizavur"},"content":"activate NusMap","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"Rizavur"},"content":"NusMap -\u003e NusMap : initValidBlocks","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"Rizavur"},"content":"activate NusMap","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"Rizavur"},"content":"NusMap --\u003e NusMap","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"Rizavur"},"content":"deactivate NusMap","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"Rizavur"},"content":"NusMap --\u003e BlockAlias","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"Rizavur"},"content":"deactivate NusMap","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"Rizavur"},"content":"BlockAlias -\u003e NusMap : getBlock","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"Rizavur"},"content":"activate NusMap","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"Rizavur"},"content":"NusMap --\u003e BlockAlias","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"Rizavur"},"content":"deactivate NusMap","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"Rizavur"},"content":"BlockAlias --\u003e BlockAlias","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"Rizavur"},"content":"deactivate BlockAlias","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"Rizavur"},"content":"BlockAlias --\u003e AddCustomAliasCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"Rizavur"},"content":"deactivate BlockAlias","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"Rizavur"},"content":"AddCustomAliasCommand -\u003e UiManager : showMessageWithDivider","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"Rizavur"},"content":"activate UiManager","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"Rizavur"},"content":"UiManager -\u003e UiManager : showMessage","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"Rizavur"},"content":"activate UiManager","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"Rizavur"},"content":"UiManager --\u003e UiManager","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"Rizavur"},"content":"deactivate UiManager","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"Rizavur"},"content":"UiManager --\u003e AddCustomAliasCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"Rizavur"},"content":"deactivate UiManager","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"Rizavur"},"content":"AddCustomAliasCommand -\u003e UiManager : showMessageWithDivider","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"Rizavur"},"content":"activate UiManager","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"Rizavur"},"content":"UiManager -\u003e UiManager : showMessage","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"Rizavur"},"content":"activate UiManager","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"Rizavur"},"content":"UiManager --\u003e UiManager","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"Rizavur"},"content":"deactivate UiManager","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"Rizavur"},"content":"UiManager --\u003e AddCustomAliasCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"Rizavur"},"content":"deactivate UiManager","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"Rizavur"},"content":"return","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":61,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":62,"author":{"gitId":"Rizavur"},"content":"@enduml","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"wjchoi0712":4,"Rizavur":58}},{"path":"docs/puml/CommandComponent.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"@startuml","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"!include Style.puml","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"package Command \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"    abstract class \"{abstract}\\nCommand\" COMMAND_COLOR {","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"        # blockAlias: BlockAlias","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"        # history: History","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"        # favourite: Favourite","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"        # dailyRoute: DailyRoute","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"        # isExit: boolean","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"        + setData(NusMap, BlockAlias, History, Favourite, DailyRoute): void","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"        + isExit(): boolean","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"        + execute(): void","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"    package routecommand {","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"        class GoCommand COMMAND_COLOR {","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"    package generalcommand {","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"        class ByeCommand COMMAND_COLOR {","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"        class HelpCommand COMMAND_COLOR {","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":"        class ShowVenuesCommand COMMAND_COLOR {","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"wjchoi0712"},"content":"    package aliascommand {","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"wjchoi0712"},"content":"        class AddCustomAliasCommand COMMAND_COLOR {","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"wjchoi0712"},"content":"        class DeleteCustomAliasCommand COMMAND_COLOR {","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"wjchoi0712"},"content":"        class ShowCustomAliasCommand COMMAND_COLOR {","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"wjchoi0712"},"content":"    package dailyroutecommand {","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"wjchoi0712"},"content":"        class AddDailyRouteCommand COMMAND_COLOR {","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"wjchoi0712"},"content":"        class ShowDailyRouteCommand COMMAND_COLOR {","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"wjchoi0712"},"content":"        class DeleteDailyRouteCommand COMMAND_COLOR {","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"wjchoi0712"},"content":"    package favouritecommand {","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"wjchoi0712"},"content":"        class AddFavouriteCommand COMMAND_COLOR {","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"wjchoi0712"},"content":"        class ShowFavouriteCommand COMMAND_COLOR {","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"wjchoi0712"},"content":"        class DeleteFavouriteCommand COMMAND_COLOR {","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"wjchoi0712"},"content":"        class RepeatFavouriteCommand COMMAND_COLOR {","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"wjchoi0712"},"content":"    package historycommand {","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"wjchoi0712"},"content":"        class ClearHistoryCommand COMMAND_COLOR {","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"wjchoi0712"},"content":"        class RepeatHistoryCommand COMMAND_COLOR {","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"wjchoi0712"},"content":"        class ShowHistoryCommand COMMAND_COLOR {","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"wjchoi0712"},"content":"    package notecommand {","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"wjchoi0712"},"content":"        class AddNoteCommand COMMAND_COLOR {","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"wjchoi0712"},"content":"        class DeleteNoteCommand COMMAND_COLOR {","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"wjchoi0712"},"content":"        class ListNoteCommand COMMAND_COLOR {","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"wjchoi0712"},"content":"\u0027ByeCommand -[hidden]down- HelpCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"wjchoi0712"},"content":"\u0027AddDailyRouteCommand -[hidden]down- ShowDailyRouteCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"wjchoi0712"},"content":"dailyroutecommand -[hidden]up- routecommand","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"wjchoi0712"},"content":"notecommand -[hidden]- favouritecommand","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"wjchoi0712"},"content":"historycommand -[hidden]down- aliascommand","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"wjchoi0712"},"content":"\"{abstract}\\nCommand\" \u003c|-left- GoCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":86,"author":{"gitId":"wjchoi0712"},"content":"\"{abstract}\\nCommand\" \u003c|-down- ByeCommand","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"wjchoi0712"},"content":"\"{abstract}\\nCommand\" \u003c|-down- HelpCommand","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"wjchoi0712"},"content":"\"{abstract}\\nCommand\" \u003c|-up- AddCustomAliasCommand","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"wjchoi0712"},"content":"\"{abstract}\\nCommand\" \u003c|-up- DeleteCustomAliasCommand","lastModifiedDate":"2021-04-01"},{"lineNumber":90,"author":{"gitId":"wjchoi0712"},"content":"\"{abstract}\\nCommand\" \u003c|-up- ShowCustomAliasCommand","lastModifiedDate":"2021-04-01"},{"lineNumber":91,"author":{"gitId":"wjchoi0712"},"content":"\"{abstract}\\nCommand\" \u003c|-up- AddDailyRouteCommand","lastModifiedDate":"2021-04-01"},{"lineNumber":92,"author":{"gitId":"wjchoi0712"},"content":"\"{abstract}\\nCommand\" \u003c|-up- ShowDailyRouteCommand","lastModifiedDate":"2021-04-01"},{"lineNumber":93,"author":{"gitId":"wjchoi0712"},"content":"\"{abstract}\\nCommand\" \u003c|-down- AddFavouriteCommand","lastModifiedDate":"2021-04-01"},{"lineNumber":94,"author":{"gitId":"wjchoi0712"},"content":"\"{abstract}\\nCommand\" \u003c|-down- DeleteFavouriteCommand","lastModifiedDate":"2021-04-01"},{"lineNumber":95,"author":{"gitId":"wjchoi0712"},"content":"\"{abstract}\\nCommand\" \u003c|-down- RepeatFavouriteCommand","lastModifiedDate":"2021-04-01"},{"lineNumber":96,"author":{"gitId":"wjchoi0712"},"content":"\"{abstract}\\nCommand\" \u003c|-down- ShowFavouriteCommand","lastModifiedDate":"2021-04-01"},{"lineNumber":97,"author":{"gitId":"wjchoi0712"},"content":"\"{abstract}\\nCommand\" \u003c|-up- ClearHistoryCommand","lastModifiedDate":"2021-04-01"},{"lineNumber":98,"author":{"gitId":"wjchoi0712"},"content":"\"{abstract}\\nCommand\" \u003c|-up- RepeatHistoryCommand","lastModifiedDate":"2021-04-01"},{"lineNumber":99,"author":{"gitId":"wjchoi0712"},"content":"\"{abstract}\\nCommand\" \u003c|-up- ShowHistoryCommand","lastModifiedDate":"2021-04-01"},{"lineNumber":100,"author":{"gitId":"wjchoi0712"},"content":"\"{abstract}\\nCommand\" \u003c|-down- AddNoteCommand","lastModifiedDate":"2021-04-01"},{"lineNumber":101,"author":{"gitId":"wjchoi0712"},"content":"\"{abstract}\\nCommand\" \u003c|-down- DeleteNoteCommand","lastModifiedDate":"2021-04-01"},{"lineNumber":102,"author":{"gitId":"wjchoi0712"},"content":"\"{abstract}\\nCommand\" \u003c|-down- ListNoteCommand","lastModifiedDate":"2021-04-01"},{"lineNumber":103,"author":{"gitId":"wjchoi0712"},"content":"\"{abstract}\\nCommand\" \u003c|-down- ShowVenuesCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":104,"author":{"gitId":"wjchoi0712"},"content":"\"{abstract}\\nCommand\" \u003c|-down- DeleteDailyRouteCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":105,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"wjchoi0712"},"content":"hide members","lastModifiedDate":"2021-04-11"},{"lineNumber":107,"author":{"gitId":"wjchoi0712"},"content":"show \"{abstract}\\nCommand\" members","lastModifiedDate":"2021-04-01"},{"lineNumber":108,"author":{"gitId":"wjchoi0712"},"content":"hide circle","lastModifiedDate":"2021-04-01"},{"lineNumber":109,"author":{"gitId":"wjchoi0712"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-04-01"},{"lineNumber":110,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"wjchoi0712"},"content":"@enduml","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"wjchoi0712":111}},{"path":"docs/puml/DataComponent.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"@startuml","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"!include Style.puml","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"package Data \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"    class NusMap DATA_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"    class Block DATA_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"    class BlockAlias DATA_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"    class DailyRoute DATA_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"    class EateryList DATA_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"    class Favourite DATA_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"    class History DATA_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"package Storage \u003c\u003cRectangle\u003e\u003e STORAGE_COLOR {","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"package Command \u003c\u003cRectangle\u003e\u003e COMMAND_COLOR {","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"NusMap --\u003e Block : contains","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"EateryList --\u003e Block : contains","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"Storage -up-\u003e NusMap","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"Storage -up-\u003e DailyRoute","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"Storage -up-\u003e BlockAlias","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"Storage -up-\u003e EateryList","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":"Storage --up-\u003e Favourite","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"wjchoi0712"},"content":"Storage -up-\u003e History","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"wjchoi0712"},"content":"Command -down-\u003e NusMap","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"wjchoi0712"},"content":"Command -down-\u003e DailyRoute","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"wjchoi0712"},"content":"Command -down-\u003e BlockAlias","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"wjchoi0712"},"content":"Command -down-\u003e EateryList","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"wjchoi0712"},"content":"Command -down-\u003e Favourite","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"wjchoi0712"},"content":"Command -down-\u003e History","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"wjchoi0712"},"content":"hide members","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"wjchoi0712"},"content":"hide circle","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"wjchoi0712"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"wjchoi0712"},"content":"@enduml","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"wjchoi0712":40}},{"path":"docs/puml/Favourite.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Rye98"},"content":"@startuml","lastModifiedDate":"2021-04-12"},{"lineNumber":2,"author":{"gitId":"Rye98"},"content":"hide circle","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"Rye98"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"Rye98"},"content":"class FavouriteUi {","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"Rye98"},"content":"+ String[] getFavouriteInfo()","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"Rye98"},"content":"+ showFavourites(Favourite):void","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"Rye98"},"content":"+ getDeleteIndex():int","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"Rye98"},"content":"+ getRepeatIndex():int","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"Rye98"},"content":"}","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"Rye98"},"content":"class AddFavouriteCommand {","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"Rye98"},"content":"# FavouriteUi ui","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"Rye98"},"content":"- {static} String MESSAGE_SUCCESS","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"Rye98"},"content":"+ execute():void","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"Rye98"},"content":"}","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"Rye98"},"content":"class Favourite {","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"Rye98"},"content":"+ ArrayList\u003cString[]\u003e favourites","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"Rye98"},"content":"+ isEmpty():boolean","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"Rye98"},"content":"+ getFavouriteSize():int","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"Rye98"},"content":"+ addFavourite(String,String):void","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"Rye98"},"content":"+ getSpecificEntry(int):String[]","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"Rye98"},"content":"+ deleteFavourite(int):void","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"Rye98"},"content":"}","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"Rye98"},"content":"class DeleteFavouriteCommand {","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"Rye98"},"content":"# FavouriteUi ui","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"Rye98"},"content":"- {static} String MESSAGE_SUCCESS","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"Rye98"},"content":"+ execute():void","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"Rye98"},"content":"}","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"Rye98"},"content":"class RepeatFavouriteCommand {","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"Rye98"},"content":"# FavouriteUi ui","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"Rye98"},"content":"+ execute():void","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"Rye98"},"content":"}","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"Rye98"},"content":"class ShowFavouriteCommand {","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"Rye98"},"content":"# FavouriteUi ui","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"Rye98"},"content":"+ execute():void","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"Rye98"},"content":"}","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"Rye98"},"content":"UiManager \u003c|-- FavouriteUi","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"Rye98"},"content":"Command \u003c|-- AddFavouriteCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"Rye98"},"content":"Command \u003c|-- DeleteFavouriteCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"Rye98"},"content":"Command \u003c|-- RepeatFavouriteCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"Rye98"},"content":"Command \u003c|-- ShowFavouriteCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"Rye98"},"content":"@enduml","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"Rye98":45}},{"path":"docs/puml/History.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Rye98"},"content":"@startuml","lastModifiedDate":"2021-04-12"},{"lineNumber":2,"author":{"gitId":"Rye98"},"content":"hide circle","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"Rye98"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"Rye98"},"content":"class ClearHistoryCommand {","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"Rye98"},"content":"# HistoryUi ui","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"Rye98"},"content":"- {static} String MESSAGE_SUCCESS","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"Rye98"},"content":"+ execute():void","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"Rye98"},"content":"}","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"Rye98"},"content":"class HistoryUi {","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"Rye98"},"content":"+ showHistory(History):void","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"Rye98"},"content":"+ getRepeatIndex():int","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"Rye98"},"content":"}","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"Rye98"},"content":"abstract class Command {","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"Rye98"},"content":"# NusMap nusMap","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"Rye98"},"content":"# BlockAlias blockAlias","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"Rye98"},"content":"# History history","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"Rye98"},"content":"# Favourite favourite","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"Rye98"},"content":"# DailyRoute dailyRoute","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"Rye98"},"content":"# boolean isExit","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"Rye98"},"content":"+ setData(NusMap,BlockAlias,History,Favourite,DailyRoute):void","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"Rye98"},"content":"+ isExit():boolean","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"Rye98"},"content":"+ execute():void","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"Rye98"},"content":"}","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"Rye98"},"content":"class RepeatHistoryCommand {","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"Rye98"},"content":"# HistoryUi ui","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"Rye98"},"content":"+ execute():void","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"Rye98"},"content":"}","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"Rye98"},"content":"class ShowHistoryCommand {","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"Rye98"},"content":"# HistoryUi ui","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"Rye98"},"content":"+ execute():void","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"Rye98"},"content":"}","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"Rye98"},"content":"Command \u003c|-- ClearHistoryCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"Rye98"},"content":"UiManager \u003c|-- HistoryUi","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"Rye98"},"content":"Command \u003c|-- RepeatHistoryCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"Rye98"},"content":"Command \u003c|-- ShowHistoryCommand","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"Rye98"},"content":"@enduml","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"Rye98":40}},{"path":"docs/puml/ParserComponent.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"@startuml","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"!include Style.puml","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"class NusMaze NUSMAZE_COLOR {","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"    - ui: UiManager","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"package Parser \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"class Parser PARSER_COLOR {","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"    + {static} prepareForCommandExecution(String): Command","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"NusMaze -\u003e Parser : uses","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"hide circle","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"@enduml","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"wjchoi0712":19}},{"path":"docs/puml/Parsersequencediagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"@startuml","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"!include Style.puml","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"actor User as user #red","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"participant \":UiManager\" as ui UIMANAGER_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"participant \":NusMaze\" as nusMaze NUSMAZE_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"participant \":Parser\" as parser PARSER_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"create ui","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"nusMaze -\u003e ui","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"nusMaze -\u003e ui ++ : getUserCommandInput()","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"user -\u003e ui : invalid input","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"return invalid input","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"create parser","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"nusMaze -\u003e parser","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"nusMaze -\u003e parser ++ : prepareForCommandExecution(\"invalid input\")","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"return InvalidInputException","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"nusMaze --\u003e ui","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"ui --\u003e user","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"Hide footbox","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"@enduml","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"wjchoi0712":24}},{"path":"docs/puml/Router.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"@startuml","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":"hide circle","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"class GoCommand {","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":"# RouterUi ui","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"+ execute():void","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"class NusMap {","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"- map:HashMap\u003cString,Block\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"+ getBlock(String):Block","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"+ isValidBlock(String):boolean","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"+ addBlock(String):void","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"+ addRelationship(String,String):void","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"+ resetVisitedFlag():void","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"+ getValues():Collection\u003cBlock\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"+ initValidBlocks():void","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":"+ initRelationships():void","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"class BlockAlias {","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"- aliases:HashMap\u003cString,String\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"+ getAliasHashMap():HashMap\u003cString,String\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"+ addAlias(String,String):void","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"+ isValidBlock(String):boolean","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"+ isValidAlias(String):boolean","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":"+ deleteAlias(String):void","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"SimBowen"},"content":"class Router {","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"SimBowen"},"content":"+ String execute(NusMap,BlockAlias,String,String)","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":"+ void findShortestRoute(NusMap,LinkedList\u003cBlock\u003e,BlockAlias,String,String)","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"+ String getRouteAsString(LinkedList\u003cBlock\u003e)","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"SimBowen"},"content":"+ {static} void bfs(NusMap,HashMap\u003cBlock,Block\u003e,Block,Block)","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"SimBowen"},"content":"abstract class \"{abstract}\\nCommand\" {","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"SimBowen"},"content":"# nusMap:NusMap","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"SimBowen"},"content":"# blockAlias:BlockAlias","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"SimBowen"},"content":"# history:History","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"SimBowen"},"content":"# favourite:Favourite","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"SimBowen"},"content":"# dailyRoute:DailyRoute","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"SimBowen"},"content":"# isExit:boolean","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"SimBowen"},"content":"+ setData(NusMap,BlockAlias,History,Favourite,DailyRoute):void","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"SimBowen"},"content":"+ isExit():boolean","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"SimBowen"},"content":"+ execute():void","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"SimBowen"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"SimBowen"},"content":"class RouterUi {","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"SimBowen"},"content":"+ getRoutingInfo():String[]","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"SimBowen"},"content":"+ getEateryEntry(Block[]):int","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"SimBowen"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"SimBowen"},"content":"class EateryList {","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"SimBowen"},"content":"- eateries:Block[]","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"SimBowen"},"content":"+ getEateries():Block[]","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"SimBowen"},"content":"+ getSpecificEatery(int):Block","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"SimBowen"},"content":"+ setRouteLengths(NusMap,BlockAlias,String):void","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"SimBowen"},"content":"+ setEateries(NusMap):void","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"SimBowen"},"content":"+ sortEateriesByDistance():void","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"SimBowen"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"SimBowen"},"content":"\"{abstract}\\nCommand\" \u003c|-- GoCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"SimBowen"},"content":"Router \"**1**\" \u003c.. GoCommand : creates \u003c","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"SimBowen"},"content":"EateryList \"**1**\" \u003c.. GoCommand : creates \u003c","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"SimBowen"},"content":"NusMap \u003c.. Router","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"SimBowen"},"content":"BlockAlias \u003c.. Router","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"SimBowen"},"content":"RouterUi \"**1**\" \u003c---GoCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"SimBowen"},"content":"@enduml","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"SimBowen":76}},{"path":"docs/puml/RouterComponent.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"@startuml","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"!include Style.puml","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"package Router \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"    class Router ROUTER_COLOR {","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"        + execute(): String","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"        + findShortestRoute(NusMap, LinkedList\u003cBlock, String, String): void","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"        + getRouteAsString(LinkedList\u003cBlock): String","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"        {static} + bfs(NusMap, LinkedList\u003cBlock, String, String): void","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"package Command \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"    class GoCommand COMMAND_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"    class RepeatHistoryCommand COMMAND_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"    class RepeatFavouriteCommand COMMAND_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"    class ShowDailyRouteCommand COMMAND_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"GoCommand -d-\u003e Router : uses","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"RepeatHistoryCommand -d-\u003e Router : uses","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"RepeatFavouriteCommand -d-\u003e Router : uses","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"ShowDailyRouteCommand -d-\u003e Router : uses","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"hide members","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"show Router methods","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"hide circle","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"wjchoi0712"},"content":"@enduml","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"wjchoi0712":29}},{"path":"docs/puml/SaveFeatureStep1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KimIdeas8"},"content":"@startuml","lastModifiedDate":"2021-04-07"},{"lineNumber":2,"author":{"gitId":"KimIdeas8"},"content":"hide footbox","lastModifiedDate":"2021-04-12"},{"lineNumber":3,"author":{"gitId":"KimIdeas8"},"content":"participant NusMaze","lastModifiedDate":"2021-04-07"},{"lineNumber":4,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":5,"author":{"gitId":"KimIdeas8"},"content":"participant \":AliasStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":6,"author":{"gitId":"KimIdeas8"},"content":"participant \":DailyRouteStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":7,"author":{"gitId":"KimIdeas8"},"content":"participant \":FavouriteStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"KimIdeas8"},"content":"participant \":HistoryStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"KimIdeas8"},"content":"participant \":NotesStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":11,"author":{"gitId":"KimIdeas8"},"content":"ref over NusMaze, \":NotesStorage\": initData","lastModifiedDate":"2021-04-07"},{"lineNumber":12,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":13,"author":{"gitId":"KimIdeas8"},"content":"NusMaze --\u003e NusMaze: initialiseStorage()","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"KimIdeas8"},"content":"activate NusMaze #DarkSalmon","lastModifiedDate":"2021-04-07"},{"lineNumber":15,"author":{"gitId":"KimIdeas8"},"content":"NusMaze --\u003e \":AliasStorage\": \":AliasStorage\"(\"data/aliasList.txt\")","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"KimIdeas8"},"content":"activate \":AliasStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"KimIdeas8"},"content":"deactivate \":AliasStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"KimIdeas8"},"content":"NusMaze --\u003e \":DailyRouteStorage\": \":DailyRouteStorage\"(\"data/dailyRouteList.txt\")","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"KimIdeas8"},"content":"activate \":DailyRouteStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"KimIdeas8"},"content":"deactivate \":DailyRouteStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":21,"author":{"gitId":"KimIdeas8"},"content":"NusMaze --\u003e \":FavouriteStorage\": \":FavouriteStorage\"(\"data/favouriteList.txt\")","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"KimIdeas8"},"content":"activate \":FavouriteStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"KimIdeas8"},"content":"deactivate \":FavouriteStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"KimIdeas8"},"content":"NusMaze --\u003e \":HistoryStorage\": \":HistoryStorage\"(\"data/history.txt\")","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"KimIdeas8"},"content":"activate \":HistoryStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"KimIdeas8"},"content":"deactivate \":HistoryStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"KimIdeas8"},"content":"NusMaze --\u003e \":NotesStorage\": \":NotesStorage\"(data/noteList.txt\")","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"KimIdeas8"},"content":"activate \":NotesStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"KimIdeas8"},"content":"deactivate \":NotesStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":30,"author":{"gitId":"KimIdeas8"},"content":"deactivate NusMaze #DarkSalmon","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"KimIdeas8"},"content":"NusMaze --\u003e NusMaze: setStorageData()","lastModifiedDate":"2021-04-07"},{"lineNumber":33,"author":{"gitId":"KimIdeas8"},"content":"activate NusMaze #DarkSalmon","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"KimIdeas8"},"content":"NusMaze --\u003e \":AliasStorage\" : setData(nusMap, blockAlias, history, favourite, dailyRoute)","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"KimIdeas8"},"content":"activate \":AliasStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":36,"author":{"gitId":"KimIdeas8"},"content":"deactivate \":AliasStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":37,"author":{"gitId":"KimIdeas8"},"content":"NusMaze --\u003e \":DailyRouteStorage\": setData(nusMap, blockAlias, history, favourite, dailyRoute)","lastModifiedDate":"2021-04-07"},{"lineNumber":38,"author":{"gitId":"KimIdeas8"},"content":"activate \":DailyRouteStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":39,"author":{"gitId":"KimIdeas8"},"content":"deactivate \":DailyRouteStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":40,"author":{"gitId":"KimIdeas8"},"content":"NusMaze --\u003e \":FavouriteStorage\": setData(nusMap, blockAlias, history, favourite, dailyRoute)","lastModifiedDate":"2021-04-07"},{"lineNumber":41,"author":{"gitId":"KimIdeas8"},"content":"activate \":FavouriteStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":42,"author":{"gitId":"KimIdeas8"},"content":"deactivate \":FavouriteStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":43,"author":{"gitId":"KimIdeas8"},"content":"NusMaze --\u003e \":HistoryStorage\": setData(nusMap, blockAlias, history, favourite, dailyRoute)","lastModifiedDate":"2021-04-07"},{"lineNumber":44,"author":{"gitId":"KimIdeas8"},"content":"activate \":HistoryStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":45,"author":{"gitId":"KimIdeas8"},"content":"deactivate \":HistoryStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":46,"author":{"gitId":"KimIdeas8"},"content":"NusMaze --\u003e \":NotesStorage\": setData(nusMap, blockAlias, history, favourite, dailyRoute)","lastModifiedDate":"2021-04-07"},{"lineNumber":47,"author":{"gitId":"KimIdeas8"},"content":"activate \":NotesStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":48,"author":{"gitId":"KimIdeas8"},"content":"deactivate \":NotesStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":49,"author":{"gitId":"KimIdeas8"},"content":"deactivate NusMaze #DarkSalmon","lastModifiedDate":"2021-04-07"},{"lineNumber":50,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":51,"author":{"gitId":"KimIdeas8"},"content":"ref over NusMaze, \":NotesStorage\": loadData","lastModifiedDate":"2021-04-07"},{"lineNumber":52,"author":{"gitId":"KimIdeas8"},"content":"ref over NusMaze, \":NotesStorage\": saveData","lastModifiedDate":"2021-04-07"},{"lineNumber":53,"author":{"gitId":"KimIdeas8"},"content":"@enduml","lastModifiedDate":"2021-04-07"}],"authorContributionMap":{"KimIdeas8":53}},{"path":"docs/puml/SaveFeatureStep1ref1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KimIdeas8"},"content":"@startuml","lastModifiedDate":"2021-04-07"},{"lineNumber":2,"author":{"gitId":"KimIdeas8"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-04-07"},{"lineNumber":3,"author":{"gitId":"KimIdeas8"},"content":"hide footbox","lastModifiedDate":"2021-04-12"},{"lineNumber":4,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":5,"author":{"gitId":"KimIdeas8"},"content":"participant NusMaze","lastModifiedDate":"2021-04-07"},{"lineNumber":6,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":7,"author":{"gitId":"KimIdeas8"},"content":"participant \":BlockAlias\"","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"KimIdeas8"},"content":"participant \":DailyRoute\"","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"KimIdeas8"},"content":"participant \":Favourite\"","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"KimIdeas8"},"content":"participant \":History\"","lastModifiedDate":"2021-04-07"},{"lineNumber":11,"author":{"gitId":"KimIdeas8"},"content":"participant \":NusMap\"","lastModifiedDate":"2021-04-07"},{"lineNumber":12,"author":{"gitId":"KimIdeas8"},"content":"participant \":Block\"","lastModifiedDate":"2021-04-07"},{"lineNumber":13,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"KimIdeas8"},"content":"group sd initData","lastModifiedDate":"2021-04-07"},{"lineNumber":15,"author":{"gitId":"KimIdeas8"},"content":"    NusMaze --\u003e NusMaze: initializeData()","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"KimIdeas8"},"content":"    activate NusMaze #DarkSalmon","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"KimIdeas8"},"content":"    NusMaze --\u003e \":BlockAlias\": BlockAlias()","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"KimIdeas8"},"content":"    activate \":BlockAlias\"","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":BlockAlias\"","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"KimIdeas8"},"content":"    NusMaze --\u003e \":DailyRoute\": DailyRoute()","lastModifiedDate":"2021-04-07"},{"lineNumber":21,"author":{"gitId":"KimIdeas8"},"content":"    activate \":DailyRoute\"","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":DailyRoute\"","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"KimIdeas8"},"content":"    NusMaze --\u003e \":Favourite\": Favourite()","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"KimIdeas8"},"content":"    activate \":Favourite\"","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":Favourite\"","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"KimIdeas8"},"content":"    NusMaze --\u003e \":History\": History()","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"KimIdeas8"},"content":"    activate \":History\"","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":History\"","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"KimIdeas8"},"content":"    NusMaze --\u003e \":NusMap\": NusMap()","lastModifiedDate":"2021-04-07"},{"lineNumber":30,"author":{"gitId":"KimIdeas8"},"content":"    activate \":NusMap\"","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":NusMap\"","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"KimIdeas8"},"content":"    deactivate NusMaze","lastModifiedDate":"2021-04-07"},{"lineNumber":33,"author":{"gitId":"KimIdeas8"},"content":"end","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"KimIdeas8"},"content":"@enduml","lastModifiedDate":"2021-04-07"}],"authorContributionMap":{"KimIdeas8":35}},{"path":"docs/puml/SaveFeatureStep1ref2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KimIdeas8"},"content":"@startuml","lastModifiedDate":"2021-04-07"},{"lineNumber":2,"author":{"gitId":"KimIdeas8"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-04-07"},{"lineNumber":3,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":4,"author":{"gitId":"KimIdeas8"},"content":"hide footbox","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"KimIdeas8"},"content":"participant NusMaze","lastModifiedDate":"2021-04-07"},{"lineNumber":7,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"KimIdeas8"},"content":"participant \":AliasStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"KimIdeas8"},"content":"participant \":DailyRouteStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"KimIdeas8"},"content":"participant \":FavouriteStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":11,"author":{"gitId":"KimIdeas8"},"content":"participant \":HistoryStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":12,"author":{"gitId":"KimIdeas8"},"content":"participant \":NotesStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":13,"author":{"gitId":"KimIdeas8"},"content":"participant \":DataEncoder\"","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"KimIdeas8"},"content":"participant \":DataDecoder\"","lastModifiedDate":"2021-04-07"},{"lineNumber":15,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"KimIdeas8"},"content":"participant \":BlockAlias\"","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"KimIdeas8"},"content":"participant \":DailyRoute\"","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"KimIdeas8"},"content":"participant \":Favourite\"","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"KimIdeas8"},"content":"participant \":History\"","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"KimIdeas8"},"content":"participant \":NusMap\"","lastModifiedDate":"2021-04-07"},{"lineNumber":21,"author":{"gitId":"KimIdeas8"},"content":"participant \":Block\"","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"KimIdeas8"},"content":"group sd loadData","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"KimIdeas8"},"content":"    NusMaze --\u003e NusMaze: loadPreviousData()","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"KimIdeas8"},"content":"    activate NusMaze #DarkSalmon","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"KimIdeas8"},"content":"    NusMaze --\u003e \":AliasStorage\": loadData()","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"KimIdeas8"},"content":"    activate \":AliasStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":30,"author":{"gitId":"KimIdeas8"},"content":"    \":AliasStorage\" ---\u003e \":DataDecoder\": decodeAliasAndNoteData(encodedData, \":NusMap\")","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"KimIdeas8"},"content":"    activate \":DataDecoder\"","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"KimIdeas8"},"content":"    \":DataDecoder\" ---\u003e \":AliasStorage\": decodedData","lastModifiedDate":"2021-04-07"},{"lineNumber":33,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":DataDecoder\"","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"KimIdeas8"},"content":"    \":AliasStorage\" --\u003e \":BlockAlias\": addAlias(decodedData[0], decodedData[1])","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"KimIdeas8"},"content":"    activate  \":BlockAlias\"","lastModifiedDate":"2021-04-07"},{"lineNumber":36,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":BlockAlias\"","lastModifiedDate":"2021-04-07"},{"lineNumber":37,"author":{"gitId":"KimIdeas8"},"content":"    \":AliasStorage\" --\u003e NusMaze","lastModifiedDate":"2021-04-07"},{"lineNumber":38,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":AliasStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":39,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":40,"author":{"gitId":"KimIdeas8"},"content":"    NusMaze --\u003e \":DailyRouteStorage\": loadData()","lastModifiedDate":"2021-04-07"},{"lineNumber":41,"author":{"gitId":"KimIdeas8"},"content":"    activate \":DailyRouteStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":42,"author":{"gitId":"KimIdeas8"},"content":"    \":DailyRouteStorage\" ---\u003e \":DataDecoder\": decodeDailyRouteData(encodedData, \":NusMap\", dailyRoute)","lastModifiedDate":"2021-04-07"},{"lineNumber":43,"author":{"gitId":"KimIdeas8"},"content":"    activate \":DataDecoder\"","lastModifiedDate":"2021-04-07"},{"lineNumber":44,"author":{"gitId":"KimIdeas8"},"content":"    \":DataDecoder\" ---\u003e \":DailyRouteStorage\": decodedData","lastModifiedDate":"2021-04-07"},{"lineNumber":45,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":DataDecoder\"","lastModifiedDate":"2021-04-07"},{"lineNumber":46,"author":{"gitId":"KimIdeas8"},"content":"    \":DailyRouteStorage\" --\u003e \":DailyRoute\": addDailyRoute(decodedData[0], schedule)","lastModifiedDate":"2021-04-07"},{"lineNumber":47,"author":{"gitId":"KimIdeas8"},"content":"    activate  \":DailyRoute\"","lastModifiedDate":"2021-04-07"},{"lineNumber":48,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":DailyRoute\"","lastModifiedDate":"2021-04-07"},{"lineNumber":49,"author":{"gitId":"KimIdeas8"},"content":"    \":DailyRouteStorage\" --\u003e NusMaze","lastModifiedDate":"2021-04-07"},{"lineNumber":50,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":DailyRouteStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":51,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":52,"author":{"gitId":"KimIdeas8"},"content":"    NusMaze --\u003e \":FavouriteStorage\": loadData()","lastModifiedDate":"2021-04-07"},{"lineNumber":53,"author":{"gitId":"KimIdeas8"},"content":"    activate \":FavouriteStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":54,"author":{"gitId":"KimIdeas8"},"content":"    \":FavouriteStorage\" ---\u003e \":DataDecoder\": decodeHistoryAndFavouriteData(encodedData, \":NusMap\");","lastModifiedDate":"2021-04-07"},{"lineNumber":55,"author":{"gitId":"KimIdeas8"},"content":"    activate \":DataDecoder\"","lastModifiedDate":"2021-04-07"},{"lineNumber":56,"author":{"gitId":"KimIdeas8"},"content":"    \":DataDecoder\" ---\u003e \":FavouriteStorage\": decodedData","lastModifiedDate":"2021-04-07"},{"lineNumber":57,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":DataDecoder\"","lastModifiedDate":"2021-04-07"},{"lineNumber":58,"author":{"gitId":"KimIdeas8"},"content":"    \":FavouriteStorage\" --\u003e \":Favourite\": addFavourite(decodedData[0], decodedData[1])","lastModifiedDate":"2021-04-07"},{"lineNumber":59,"author":{"gitId":"KimIdeas8"},"content":"    activate  \":Favourite\"","lastModifiedDate":"2021-04-07"},{"lineNumber":60,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":Favourite\"","lastModifiedDate":"2021-04-07"},{"lineNumber":61,"author":{"gitId":"KimIdeas8"},"content":"    \":FavouriteStorage\" --\u003e NusMaze","lastModifiedDate":"2021-04-07"},{"lineNumber":62,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":FavouriteStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":63,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":64,"author":{"gitId":"KimIdeas8"},"content":"    NusMaze --\u003e \":HistoryStorage\": loadData()","lastModifiedDate":"2021-04-07"},{"lineNumber":65,"author":{"gitId":"KimIdeas8"},"content":"    activate \":HistoryStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":66,"author":{"gitId":"KimIdeas8"},"content":"    \":HistoryStorage\" ---\u003e \":DataDecoder\": decodeHistoryAndFavouriteData(encodedData, \":NusMap\")","lastModifiedDate":"2021-04-07"},{"lineNumber":67,"author":{"gitId":"KimIdeas8"},"content":"    activate \":DataDecoder\"","lastModifiedDate":"2021-04-07"},{"lineNumber":68,"author":{"gitId":"KimIdeas8"},"content":"    \":DataDecoder\" ---\u003e \":HistoryStorage\": decodedData","lastModifiedDate":"2021-04-07"},{"lineNumber":69,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":DataDecoder\"","lastModifiedDate":"2021-04-07"},{"lineNumber":70,"author":{"gitId":"KimIdeas8"},"content":"    \":HistoryStorage\" --\u003e \":History\": addHistory(decodedData[0], decodedData[1])","lastModifiedDate":"2021-04-07"},{"lineNumber":71,"author":{"gitId":"KimIdeas8"},"content":"    activate  \":History\"","lastModifiedDate":"2021-04-07"},{"lineNumber":72,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":History\"","lastModifiedDate":"2021-04-07"},{"lineNumber":73,"author":{"gitId":"KimIdeas8"},"content":"    \":HistoryStorage\" --\u003e NusMaze","lastModifiedDate":"2021-04-07"},{"lineNumber":74,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":HistoryStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":75,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":76,"author":{"gitId":"KimIdeas8"},"content":"    NusMaze --\u003e \":NotesStorage\": loadData()","lastModifiedDate":"2021-04-07"},{"lineNumber":77,"author":{"gitId":"KimIdeas8"},"content":"    activate \":NotesStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":78,"author":{"gitId":"KimIdeas8"},"content":"    \":NotesStorage\" ---\u003e \":DataDecoder\": decodeAliasAndNoteData(encodedData, \":NusMap\")","lastModifiedDate":"2021-04-07"},{"lineNumber":79,"author":{"gitId":"KimIdeas8"},"content":"    activate \":DataDecoder\"","lastModifiedDate":"2021-04-07"},{"lineNumber":80,"author":{"gitId":"KimIdeas8"},"content":"    \":DataDecoder\" ---\u003e \":NotesStorage\": decodedData","lastModifiedDate":"2021-04-07"},{"lineNumber":81,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":DataDecoder\"","lastModifiedDate":"2021-04-07"},{"lineNumber":82,"author":{"gitId":"KimIdeas8"},"content":"    \":NotesStorage\" --\u003e \":NusMap\": getBlock(decodedData[0])","lastModifiedDate":"2021-04-07"},{"lineNumber":83,"author":{"gitId":"KimIdeas8"},"content":"    activate  \":NusMap\"","lastModifiedDate":"2021-04-07"},{"lineNumber":84,"author":{"gitId":"KimIdeas8"},"content":"    \":NusMap\" --\u003e \":Block\": addNote(decodedData[1])","lastModifiedDate":"2021-04-07"},{"lineNumber":85,"author":{"gitId":"KimIdeas8"},"content":"    activate \":Block\"","lastModifiedDate":"2021-04-07"},{"lineNumber":86,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":Block\"","lastModifiedDate":"2021-04-07"},{"lineNumber":87,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":NusMap\"","lastModifiedDate":"2021-04-07"},{"lineNumber":88,"author":{"gitId":"KimIdeas8"},"content":"    \":NotesStorage\" --\u003e NusMaze","lastModifiedDate":"2021-04-07"},{"lineNumber":89,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":NotesStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":90,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":91,"author":{"gitId":"KimIdeas8"},"content":"    deactivate NusMaze #DarkSalmon","lastModifiedDate":"2021-04-07"},{"lineNumber":92,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":93,"author":{"gitId":"KimIdeas8"},"content":"end","lastModifiedDate":"2021-04-07"},{"lineNumber":94,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":95,"author":{"gitId":"KimIdeas8"},"content":"@enduml","lastModifiedDate":"2021-04-07"}],"authorContributionMap":{"KimIdeas8":95}},{"path":"docs/puml/SaveFeatureStep2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KimIdeas8"},"content":"@startuml","lastModifiedDate":"2021-04-07"},{"lineNumber":2,"author":{"gitId":"KimIdeas8"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-04-07"},{"lineNumber":3,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":4,"author":{"gitId":"KimIdeas8"},"content":"hide footbox","lastModifiedDate":"2021-04-12"},{"lineNumber":5,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"KimIdeas8"},"content":"participant NusMaze","lastModifiedDate":"2021-04-07"},{"lineNumber":7,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"KimIdeas8"},"content":"participant \":AliasStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"KimIdeas8"},"content":"participant \":DailyRouteStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"KimIdeas8"},"content":"participant \":FavouriteStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":11,"author":{"gitId":"KimIdeas8"},"content":"participant \":HistoryStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":12,"author":{"gitId":"KimIdeas8"},"content":"participant \":NotesStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":13,"author":{"gitId":"KimIdeas8"},"content":"participant \":DataEncoder\"","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"KimIdeas8"},"content":"participant \":DataDecoder\"","lastModifiedDate":"2021-04-07"},{"lineNumber":15,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"KimIdeas8"},"content":"participant \":BlockAlias\"","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"KimIdeas8"},"content":"participant \":DailyRoute\"","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"KimIdeas8"},"content":"participant \":Favourite\"","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"KimIdeas8"},"content":"participant \":History\"","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"KimIdeas8"},"content":"participant \":NusMap\"","lastModifiedDate":"2021-04-07"},{"lineNumber":21,"author":{"gitId":"KimIdeas8"},"content":"participant \":Block\"","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"KimIdeas8"},"content":"participant \":Files\"","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"KimIdeas8"},"content":"group sd saveData","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"KimIdeas8"},"content":"loop till bye command","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"KimIdeas8"},"content":"    NusMaze --\u003e NusMaze: saveCurrentData()","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"KimIdeas8"},"content":"    activate NusMaze #DarkSalmon","lastModifiedDate":"2021-04-07"},{"lineNumber":30,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"KimIdeas8"},"content":"    NusMaze --\u003e \":AliasStorage\": saveData()","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"KimIdeas8"},"content":"    activate \":AliasStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":33,"author":{"gitId":"KimIdeas8"},"content":"    \":AliasStorage\" ---\u003e \":DataEncoder\": encodeAlias(blockAlias)","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"KimIdeas8"},"content":"    activate \":DataEncoder\"","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"KimIdeas8"},"content":"    group loop[through all entries in HashMap]","lastModifiedDate":"2021-04-07"},{"lineNumber":36,"author":{"gitId":"KimIdeas8"},"content":"    \":DataEncoder\" ---\u003e \":BlockAlias\": getAliasHashMap().entrySet()","lastModifiedDate":"2021-04-07"},{"lineNumber":37,"author":{"gitId":"KimIdeas8"},"content":"    activate \":BlockAlias\"","lastModifiedDate":"2021-04-07"},{"lineNumber":38,"author":{"gitId":"KimIdeas8"},"content":"    end","lastModifiedDate":"2021-04-07"},{"lineNumber":39,"author":{"gitId":"KimIdeas8"},"content":"    \":BlockAlias\" ---\u003e \":DataEncoder\": data [ ]","lastModifiedDate":"2021-04-07"},{"lineNumber":40,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":BlockAlias\"","lastModifiedDate":"2021-04-07"},{"lineNumber":41,"author":{"gitId":"KimIdeas8"},"content":"    \":DataEncoder\" ---\u003e \":AliasStorage\": encodedData","lastModifiedDate":"2021-04-07"},{"lineNumber":42,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":DataEncoder\"","lastModifiedDate":"2021-04-07"},{"lineNumber":43,"author":{"gitId":"KimIdeas8"},"content":"    \":AliasStorage\" ---\u003e \":Files\": write(filepath, encodedData);","lastModifiedDate":"2021-04-07"},{"lineNumber":44,"author":{"gitId":"KimIdeas8"},"content":"    activate \":Files\"","lastModifiedDate":"2021-04-07"},{"lineNumber":45,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":Files\"","lastModifiedDate":"2021-04-07"},{"lineNumber":46,"author":{"gitId":"KimIdeas8"},"content":"    \":AliasStorage\" --\u003e NusMaze","lastModifiedDate":"2021-04-07"},{"lineNumber":47,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":AliasStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":48,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":49,"author":{"gitId":"KimIdeas8"},"content":"    NusMaze --\u003e \":DailyRouteStorage\": saveData()","lastModifiedDate":"2021-04-07"},{"lineNumber":50,"author":{"gitId":"KimIdeas8"},"content":"    activate \":DailyRouteStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":51,"author":{"gitId":"KimIdeas8"},"content":"    \":DailyRouteStorage\" ---\u003e \":DataEncoder\": encodeDailyRoute(dailyRoute)","lastModifiedDate":"2021-04-07"},{"lineNumber":52,"author":{"gitId":"KimIdeas8"},"content":"    activate \":DataEncoder\"","lastModifiedDate":"2021-04-07"},{"lineNumber":53,"author":{"gitId":"KimIdeas8"},"content":"    group loop[through all entries in HashMap]","lastModifiedDate":"2021-04-07"},{"lineNumber":54,"author":{"gitId":"KimIdeas8"},"content":"        \":DataEncoder\" ---\u003e \":DailyRoute\": getFavouriteSize()","lastModifiedDate":"2021-04-07"},{"lineNumber":55,"author":{"gitId":"KimIdeas8"},"content":"        activate \":DailyRoute\"","lastModifiedDate":"2021-04-07"},{"lineNumber":56,"author":{"gitId":"KimIdeas8"},"content":"        deactivate \":DailyRoute\"","lastModifiedDate":"2021-04-07"},{"lineNumber":57,"author":{"gitId":"KimIdeas8"},"content":"        \":DataEncoder\" ---\u003e \":DailyRoute\": getSpecificEntry(i)","lastModifiedDate":"2021-04-07"},{"lineNumber":58,"author":{"gitId":"KimIdeas8"},"content":"        activate \":DailyRoute\"","lastModifiedDate":"2021-04-07"},{"lineNumber":59,"author":{"gitId":"KimIdeas8"},"content":"        deactivate \":DailyRoute\"","lastModifiedDate":"2021-04-07"},{"lineNumber":60,"author":{"gitId":"KimIdeas8"},"content":"    end","lastModifiedDate":"2021-04-07"},{"lineNumber":61,"author":{"gitId":"KimIdeas8"},"content":"    \":DataEncoder\" ---\u003e \":DailyRouteStorage\": encodedData","lastModifiedDate":"2021-04-07"},{"lineNumber":62,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":DataEncoder\"","lastModifiedDate":"2021-04-07"},{"lineNumber":63,"author":{"gitId":"KimIdeas8"},"content":"    \":DailyRouteStorage\" ---\u003e \":Files\": write(filepath, encodedData);","lastModifiedDate":"2021-04-07"},{"lineNumber":64,"author":{"gitId":"KimIdeas8"},"content":"    activate \":Files\"","lastModifiedDate":"2021-04-07"},{"lineNumber":65,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":Files\"","lastModifiedDate":"2021-04-07"},{"lineNumber":66,"author":{"gitId":"KimIdeas8"},"content":"    \":DailyRouteStorage\" --\u003e NusMaze","lastModifiedDate":"2021-04-07"},{"lineNumber":67,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":DailyRouteStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":68,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":69,"author":{"gitId":"KimIdeas8"},"content":"    NusMaze --\u003e \":FavouriteStorage\": saveData()","lastModifiedDate":"2021-04-07"},{"lineNumber":70,"author":{"gitId":"KimIdeas8"},"content":"    activate \":FavouriteStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":71,"author":{"gitId":"KimIdeas8"},"content":"    \":FavouriteStorage\" ---\u003e \":DataEncoder\": encodeFavourite(favourite)","lastModifiedDate":"2021-04-07"},{"lineNumber":72,"author":{"gitId":"KimIdeas8"},"content":"    activate \":DataEncoder\"","lastModifiedDate":"2021-04-07"},{"lineNumber":73,"author":{"gitId":"KimIdeas8"},"content":"    group loop[for all of objects\u0027 array]","lastModifiedDate":"2021-04-07"},{"lineNumber":74,"author":{"gitId":"KimIdeas8"},"content":"        \":DataEncoder\" ---\u003e \":Favourite\": getSelectableDays()","lastModifiedDate":"2021-04-07"},{"lineNumber":75,"author":{"gitId":"KimIdeas8"},"content":"        activate \":Favourite\"","lastModifiedDate":"2021-04-07"},{"lineNumber":76,"author":{"gitId":"KimIdeas8"},"content":"        deactivate \":Favourite\"","lastModifiedDate":"2021-04-07"},{"lineNumber":77,"author":{"gitId":"KimIdeas8"},"content":"        deactivate \":Favourite\"","lastModifiedDate":"2021-04-07"},{"lineNumber":78,"author":{"gitId":"KimIdeas8"},"content":"        \":DataEncoder\" ---\u003e \":Favourite\": getDailyRoute(day)","lastModifiedDate":"2021-04-07"},{"lineNumber":79,"author":{"gitId":"KimIdeas8"},"content":"        activate \":Favourite\"","lastModifiedDate":"2021-04-07"},{"lineNumber":80,"author":{"gitId":"KimIdeas8"},"content":"        deactivate \":Favourite\"","lastModifiedDate":"2021-04-07"},{"lineNumber":81,"author":{"gitId":"KimIdeas8"},"content":"    end","lastModifiedDate":"2021-04-07"},{"lineNumber":82,"author":{"gitId":"KimIdeas8"},"content":"    \":DataEncoder\" ---\u003e \":FavouriteStorage\": encodedData","lastModifiedDate":"2021-04-07"},{"lineNumber":83,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":DataEncoder\"","lastModifiedDate":"2021-04-07"},{"lineNumber":84,"author":{"gitId":"KimIdeas8"},"content":"    \":FavouriteStorage\" ---\u003e \":Files\": write(filepath, encodedData);","lastModifiedDate":"2021-04-07"},{"lineNumber":85,"author":{"gitId":"KimIdeas8"},"content":"    activate \":Files\"","lastModifiedDate":"2021-04-07"},{"lineNumber":86,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":Files\"","lastModifiedDate":"2021-04-07"},{"lineNumber":87,"author":{"gitId":"KimIdeas8"},"content":"    \":FavouriteStorage\" --\u003e NusMaze","lastModifiedDate":"2021-04-07"},{"lineNumber":88,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":FavouriteStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":89,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":90,"author":{"gitId":"KimIdeas8"},"content":"    NusMaze --\u003e \":HistoryStorage\": saveData()","lastModifiedDate":"2021-04-07"},{"lineNumber":91,"author":{"gitId":"KimIdeas8"},"content":"    activate \":HistoryStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":92,"author":{"gitId":"KimIdeas8"},"content":"    \":HistoryStorage\" ---\u003e \":DataEncoder\": encodeHistory(history)","lastModifiedDate":"2021-04-07"},{"lineNumber":93,"author":{"gitId":"KimIdeas8"},"content":"    activate \":DataEncoder\"","lastModifiedDate":"2021-04-07"},{"lineNumber":94,"author":{"gitId":"KimIdeas8"},"content":"    group loop[for all of objects\u0027 array]","lastModifiedDate":"2021-04-07"},{"lineNumber":95,"author":{"gitId":"KimIdeas8"},"content":"        \":DataEncoder\" ---\u003e \":History\": getHistorySize()","lastModifiedDate":"2021-04-07"},{"lineNumber":96,"author":{"gitId":"KimIdeas8"},"content":"        activate \":History\"","lastModifiedDate":"2021-04-07"},{"lineNumber":97,"author":{"gitId":"KimIdeas8"},"content":"        deactivate \":History\"","lastModifiedDate":"2021-04-07"},{"lineNumber":98,"author":{"gitId":"KimIdeas8"},"content":"        deactivate \":History\"","lastModifiedDate":"2021-04-07"},{"lineNumber":99,"author":{"gitId":"KimIdeas8"},"content":"        \":DataEncoder\" ---\u003e \":History\": getSpecificEntry(i)","lastModifiedDate":"2021-04-07"},{"lineNumber":100,"author":{"gitId":"KimIdeas8"},"content":"        activate \":History\"","lastModifiedDate":"2021-04-07"},{"lineNumber":101,"author":{"gitId":"KimIdeas8"},"content":"        deactivate \":History\"","lastModifiedDate":"2021-04-07"},{"lineNumber":102,"author":{"gitId":"KimIdeas8"},"content":"    end","lastModifiedDate":"2021-04-07"},{"lineNumber":103,"author":{"gitId":"KimIdeas8"},"content":"    \":DataEncoder\" ---\u003e \":HistoryStorage\": encodedData","lastModifiedDate":"2021-04-07"},{"lineNumber":104,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":DataEncoder\"","lastModifiedDate":"2021-04-07"},{"lineNumber":105,"author":{"gitId":"KimIdeas8"},"content":"    \":HistoryStorage\" ---\u003e \":Files\": write(filepath, encodedData);","lastModifiedDate":"2021-04-07"},{"lineNumber":106,"author":{"gitId":"KimIdeas8"},"content":"    activate \":Files\"","lastModifiedDate":"2021-04-07"},{"lineNumber":107,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":Files\"","lastModifiedDate":"2021-04-07"},{"lineNumber":108,"author":{"gitId":"KimIdeas8"},"content":"    \":HistoryStorage\" --\u003e NusMaze","lastModifiedDate":"2021-04-07"},{"lineNumber":109,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":HistoryStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":110,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":111,"author":{"gitId":"KimIdeas8"},"content":"    NusMaze --\u003e \":NotesStorage\": saveData()","lastModifiedDate":"2021-04-07"},{"lineNumber":112,"author":{"gitId":"KimIdeas8"},"content":"    activate \":NotesStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":113,"author":{"gitId":"KimIdeas8"},"content":"    \":NotesStorage\" ---\u003e \":DataEncoder\": encodeNotes(nusMap)","lastModifiedDate":"2021-04-07"},{"lineNumber":114,"author":{"gitId":"KimIdeas8"},"content":"    activate \":DataEncoder\"","lastModifiedDate":"2021-04-07"},{"lineNumber":115,"author":{"gitId":"KimIdeas8"},"content":"    group loop[for all of objects\u0027 array]","lastModifiedDate":"2021-04-07"},{"lineNumber":116,"author":{"gitId":"KimIdeas8"},"content":"        \":DataEncoder\" ---\u003e \":NusMap\": getValues()","lastModifiedDate":"2021-04-07"},{"lineNumber":117,"author":{"gitId":"KimIdeas8"},"content":"        activate \":NusMap\"","lastModifiedDate":"2021-04-07"},{"lineNumber":118,"author":{"gitId":"KimIdeas8"},"content":"        deactivate \":NusMap\"","lastModifiedDate":"2021-04-07"},{"lineNumber":119,"author":{"gitId":"KimIdeas8"},"content":"        \":DataEncoder\" ---\u003e \":Block\": getNotes().size()","lastModifiedDate":"2021-04-07"},{"lineNumber":120,"author":{"gitId":"KimIdeas8"},"content":"        activate \":Block\"","lastModifiedDate":"2021-04-07"},{"lineNumber":121,"author":{"gitId":"KimIdeas8"},"content":"        deactivate \":Block\"","lastModifiedDate":"2021-04-07"},{"lineNumber":122,"author":{"gitId":"KimIdeas8"},"content":"        \":DataEncoder\" ---\u003e \":Block\": getName()","lastModifiedDate":"2021-04-07"},{"lineNumber":123,"author":{"gitId":"KimIdeas8"},"content":"        activate \":Block\"","lastModifiedDate":"2021-04-07"},{"lineNumber":124,"author":{"gitId":"KimIdeas8"},"content":"        deactivate \":Block\"","lastModifiedDate":"2021-04-07"},{"lineNumber":125,"author":{"gitId":"KimIdeas8"},"content":"        \":DataEncoder\" ---\u003e \":Block\": getNotes().get(i)","lastModifiedDate":"2021-04-07"},{"lineNumber":126,"author":{"gitId":"KimIdeas8"},"content":"        activate \":Block\"","lastModifiedDate":"2021-04-07"},{"lineNumber":127,"author":{"gitId":"KimIdeas8"},"content":"        deactivate \":Block\"","lastModifiedDate":"2021-04-07"},{"lineNumber":128,"author":{"gitId":"KimIdeas8"},"content":"    end","lastModifiedDate":"2021-04-07"},{"lineNumber":129,"author":{"gitId":"KimIdeas8"},"content":"    \":DataEncoder\" ---\u003e \":NotesStorage\": encodedData","lastModifiedDate":"2021-04-07"},{"lineNumber":130,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":DataEncoder\"","lastModifiedDate":"2021-04-07"},{"lineNumber":131,"author":{"gitId":"KimIdeas8"},"content":"    \":NotesStorage\" ---\u003e \":Files\": write(filepath, encodedData);","lastModifiedDate":"2021-04-07"},{"lineNumber":132,"author":{"gitId":"KimIdeas8"},"content":"    activate \":Files\"","lastModifiedDate":"2021-04-07"},{"lineNumber":133,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":Files\"","lastModifiedDate":"2021-04-07"},{"lineNumber":134,"author":{"gitId":"KimIdeas8"},"content":"    \":NotesStorage\" --\u003e NusMaze","lastModifiedDate":"2021-04-07"},{"lineNumber":135,"author":{"gitId":"KimIdeas8"},"content":"    deactivate \":NotesStorage\"","lastModifiedDate":"2021-04-07"},{"lineNumber":136,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":137,"author":{"gitId":"KimIdeas8"},"content":"end","lastModifiedDate":"2021-04-07"},{"lineNumber":138,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":139,"author":{"gitId":"KimIdeas8"},"content":"deactivate NusMaze #DarkSalmon","lastModifiedDate":"2021-04-07"},{"lineNumber":140,"author":{"gitId":"KimIdeas8"},"content":"end","lastModifiedDate":"2021-04-07"},{"lineNumber":141,"author":{"gitId":"KimIdeas8"},"content":"@enduml","lastModifiedDate":"2021-04-07"}],"authorContributionMap":{"KimIdeas8":141}},{"path":"docs/puml/SaveStep1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KimIdeas8"},"content":"@startuml","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"KimIdeas8"},"content":"\u0027https://plantuml.com/object-diagram","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"KimIdeas8"},"content":"object __Storage__","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"KimIdeas8"},"content":"object __AliasStorage__ {","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"KimIdeas8"},"content":"    filepath \u003d \"data/aliasList.txt\"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"KimIdeas8"},"content":"}","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"KimIdeas8"},"content":"object __HistoryRouteStorage__ {","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"KimIdeas8"},"content":"    filepath \u003d \"data/routesHistoryList.txt\"","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"KimIdeas8"},"content":"}","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"KimIdeas8"},"content":"object __NotesStorage__ {","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"KimIdeas8"},"content":"  filepath \u003d \"data/notesList.txt\" ","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"KimIdeas8"},"content":"}","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"KimIdeas8"},"content":"object __FavouriteLocationsStorage__ {","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"KimIdeas8"},"content":"    filepath \u003d \"data/favouritesList.txt\"","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"KimIdeas8"},"content":"}","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"KimIdeas8"},"content":"__Storage__ \u003c--- __AliasStorage__","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"KimIdeas8"},"content":"__Storage__ \u003c--- __NotesStorage__","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"KimIdeas8"},"content":"__Storage__ \u003c--- __HistoryRouteStorage__","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"KimIdeas8"},"content":"__Storage__ \u003c--- __FavouriteLocationsStorage__","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"KimIdeas8"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"KimIdeas8":26}},{"path":"docs/puml/Style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"!define NUSMAZE_COLOR #a5a9b5","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"!define UIMANAGER_COLOR #7cc963","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"!define ROUTER_COLOR #f57d95","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"!define COMMAND_COLOR #91d5ff","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"!define DATA_COLOR #c391ff","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"!define STORAGE_COLOR #fff691","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"!define PARSER_COLOR #ffc391","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"KimIdeas8"},"content":"!define FILES_COLOR #FFFFFF","lastModifiedDate":"2021-04-08"},{"lineNumber":10,"author":{"gitId":"KimIdeas8"},"content":"!define ARROW_DATA_COLOR #800080","lastModifiedDate":"2021-04-08"},{"lineNumber":11,"author":{"gitId":"KimIdeas8"},"content":"!define ARROW_FILES_NOTELIST_COLOR #FF1493","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"KimIdeas8"},"content":"!define ARROW_FILES_HISTORY_COLOR #000000","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"KimIdeas8"},"content":"!define ARROW_FILES_FAVLIST_COLOR #DC143C","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"KimIdeas8"},"content":"!define ARROW_FILES_DAILYROUTELIST_COLOR #008000","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"KimIdeas8"},"content":"!define ARROW_FILES_ALIASLIST_COLOR #0000CD","lastModifiedDate":"2021-04-12"}],"authorContributionMap":{"KimIdeas8":7,"wjchoi0712":8}},{"path":"docs/puml/addday.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"@startuml","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":"hide footbox","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":"participant \":NUSMaze\"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"\":NUSMaze\" -\u003e \"command:AddDailyRouteCommand\" : execute","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"activate \"command:AddDailyRouteCommand\"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"\"command:AddDailyRouteCommand\" -\u003e \"dailyRoute:DailyRoute\" : getValidDays()","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"activate \"dailyRoute:DailyRoute\"","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":"return","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"deactivate \"dailyRoute:DailyRoute\"","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"\"command:AddDailyRouteCommand\" -\u003e \"ui:DailyRouteUi\" : getDayEntryForAdd(ArrayList\u003cString\u003e)","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"activate \"ui:DailyRouteUi\"","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"return","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"deactivate \"ui:DailyRouteUi\"","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"\"command:AddDailyRouteCommand\" -\u003e \"ui:DailyRouteUi\" : getScheduleInfo()","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"activate \"ui:DailyRouteUi\"","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"return","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"deactivate \"ui:DailyRouteUi\"","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"\"command:AddDailyRouteCommand\" -\u003e \"dailyRoute:DailyRoute\" : addDailyRoute(String, ArrayList\u003cString\u003e)","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":"activate \"dailyRoute:DailyRoute\"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"\"dailyRoute:DailyRoute\" --\u003e \"command:AddDailyRouteCommand\"","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"deactivate \"dailyRoute:DailyRoute\"","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"\"command:AddDailyRouteCommand\" -\u003e \"ui:DailyRouteUi\": showMessageWithDivider(String)","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"activate \"ui:DailyRouteUi\"","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"return","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"deactivate \"ui:DailyRouteUi\"","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"\"command:AddDailyRouteCommand\" --\u003e \":NUSMaze\"","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":"deactivate \"command:AddDailyRouteCommand\"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":"@enduml","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"SimBowen":33}},{"path":"docs/puml/clearday.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"@startuml","lastModifiedDate":"2021-04-03"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":"hide footbox","lastModifiedDate":"2021-04-03"},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":"participant \":NUSMaze\"","lastModifiedDate":"2021-04-03"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"\":NUSMaze\" -\u003e \"command:DeleteDailyRouteCommand\" : execute()","lastModifiedDate":"2021-04-05"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"activate \"command:DeleteDailyRouteCommand\"","lastModifiedDate":"2021-04-05"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"\"command:DeleteDailyRouteCommand\" -\u003e \"dailyRoute:DailyRoute\" : getSelectableDays()","lastModifiedDate":"2021-04-05"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"activate \"dailyRoute:DailyRoute\"","lastModifiedDate":"2021-04-03"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":"return","lastModifiedDate":"2021-04-03"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"deactivate \"dailyRoute:DailyRoute\"","lastModifiedDate":"2021-04-03"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"\"command:DeleteDailyRouteCommand\" -\u003e \"ui:DailyRouteUi\" : getDayEntry(ArrayList\u003cString\u003e)","lastModifiedDate":"2021-04-05"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"activate \"ui:DailyRouteUi\"","lastModifiedDate":"2021-04-03"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"return","lastModifiedDate":"2021-04-03"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"deactivate \"ui:DailyRouteUi\"","lastModifiedDate":"2021-04-03"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"\"command:DeleteDailyRouteCommand\" -\u003e \"dailyRoute:DailyRoute\" : addDailyRoute(String, ArrayList\u003cString\u003e)","lastModifiedDate":"2021-04-05"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"activate \"dailyRoute:DailyRoute\"","lastModifiedDate":"2021-04-03"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"\"dailyRoute:DailyRoute\" --\u003e \"command:DeleteDailyRouteCommand\"","lastModifiedDate":"2021-04-05"},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"deactivate \"dailyRoute:DailyRoute\"","lastModifiedDate":"2021-04-03"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"\"command:DeleteDailyRouteCommand\" -\u003e \"ui:DailyRouteUi\": showMessageWithDivider(String)","lastModifiedDate":"2021-04-05"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"activate \"ui:DailyRouteUi\"","lastModifiedDate":"2021-04-03"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"return","lastModifiedDate":"2021-04-03"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":"deactivate \"ui:DailyRouteUi\"","lastModifiedDate":"2021-04-03"},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"\"command:DeleteDailyRouteCommand\" --\u003e \":NUSMaze\"","lastModifiedDate":"2021-04-05"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"deactivate \"command:DeleteDailyRouteCommand\"","lastModifiedDate":"2021-04-05"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"@enduml","lastModifiedDate":"2021-04-03"}],"authorContributionMap":{"SimBowen":25}},{"path":"docs/puml/routersequencediagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"@startuml","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":"hide footbox","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"participant \":NUSMaze\"","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":"participant \"command:GoCommand\"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"participant \"ui:RouterUi\"","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"participant \"blockAlias:BlockAlias\"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"\":NUSMaze\"-\u003e \"command:GoCommand\" : execute()","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"activate \"command:GoCommand\"","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":"\"command:GoCommand\" -\u003e \"ui:RouterUi\": getRoutingInfo()","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"activate \"ui:RouterUi\"","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"\"ui:RouterUi\" --\u003e \"command:GoCommand\":","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"deactivate \"ui:RouterUi\"","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"\"command:GoCommand\" -\u003e \"blockAlias:BlockAlias\": changeAliasToBlock(String, String)","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"activate \"blockAlias:BlockAlias\"","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"return","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"\"command:GoCommand\" -\u003e \"nusMap:NusMap\": checkIfValidBlock(String)","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"activate \"nusMap:NusMap\"","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"return","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"deactivate \"blockAlias:BlockAlias\"","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"create \":Router\"","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"\"command:GoCommand\" -\u003e \":Router\" : execute()","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":"activate \":Router\"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"\":Router\" -\u003e \":Router\" : findShortestRoute","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"activate \":Router\"","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"\":Router\" -\u003e \"nusMap:NusMap\" : resetVisitedFlag","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"activate \"nusMap:NusMap\"","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"\"nusMap:NusMap\" -\u003e \":Block\" : setAsNotVisited","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"activate \":Block\"","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"\":Block\" --\u003e \"nusMap:NusMap\"","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"deactivate \":Block\"","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":"\"nusMap:NusMap\" --\u003e \":Router\"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":"deactivate \"nusMap:NusMap\"","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":"\":Router\" -\u003e \"nusMap:NusMap\" : getBlock","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"SimBowen"},"content":"activate \"nusMap:NusMap\"","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"SimBowen"},"content":"\"nusMap:NusMap\" --\u003e \":Router\"","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":"deactivate \"nusMap:NusMap\"","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"\":Router\" -\u003e \"nusMap:NusMap\" : getBlock","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"SimBowen"},"content":"activate \"nusMap:NusMap\"","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"\"nusMap:NusMap\" --\u003e \":Router\"","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"SimBowen"},"content":"deactivate \"nusMap:NusMap\"","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"SimBowen"},"content":"\":Router\" -\u003e \":Router\" : bfs","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"SimBowen"},"content":"activate \":Router\"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"SimBowen"},"content":"\":Router\" -\u003e \":Block\" : setAsVisited","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"SimBowen"},"content":"activate \":Block\"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"SimBowen"},"content":"\":Block\" --\u003e \":Router\"","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"SimBowen"},"content":"deactivate \":Block\"","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"SimBowen"},"content":"deactivate \"nusMap:NusMap\"","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"SimBowen"},"content":"deactivate \":Block\"","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"SimBowen"},"content":"\":Router\" --\u003e \":Router\"","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"SimBowen"},"content":"deactivate \":Router\"","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"SimBowen"},"content":"\":Router\" --\u003e \":Router\"","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"SimBowen"},"content":"deactivate \":Router\"","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"SimBowen"},"content":"\":Router\" -\u003e \":Router\" : getRouteAsString","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"SimBowen"},"content":"activate \":Router\"","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"SimBowen"},"content":"\":Router\" --\u003e \":Router\"","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"SimBowen"},"content":"deactivate \":Router\"","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"SimBowen"},"content":"\":Router\" --\u003e \"command:GoCommand\"","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"SimBowen"},"content":"deactivate \":Router\"","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"SimBowen"},"content":"\"command:GoCommand\" -\u003e \"ui:RouterUi\": showMessageWithDivider(String)","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"SimBowen"},"content":"activate \"ui:RouterUi\"","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"SimBowen"},"content":"return","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"SimBowen"},"content":" \"command:GoCommand\" --\u003e \":NUSMaze\"","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"SimBowen"},"content":"@enduml","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"SimBowen":63,"wjchoi0712":1}},{"path":"docs/puml/showday.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"@startuml","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":"hide footbox","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":"participant \":NUSMaze\"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"\":NUSMaze\" -\u003e \"command:ShowDailyRouteCommand\" : execute()","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"activate \"command:ShowDailyRouteCommand\"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"\"command:ShowDailyRouteCommand\" -\u003e \"dailyRoute:DailyRoute\" : getSelectableDays()","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"activate \"dailyRoute:DailyRoute\"","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":"return","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"deactivate \"dailyRoute:DailyRoute\"","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"\"command:ShowDailyRouteCommand\" -\u003e \"ui:DailyRouteUi\" : getDayEntry(ArrayList\u003cString\u003e)","lastModifiedDate":"2021-04-03"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"activate \"ui:DailyRouteUi\"","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"return","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"deactivate \"ui:DailyRouteUi\"","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"\"command:ShowDailyRouteCommand\" -\u003e \"dailyRoute:DailyRoute\" : getdailyRoute(String)","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"activate \"dailyRoute:DailyRoute\"","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"return","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"deactivate \"dailyRoute:DailyRoute\"","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"create \":Router\"","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"\"command:ShowDailyRouteCommand\" -\u003e \":Router\" : execute(NusMap, String, String)","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":"activate \":Router\"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"\":Router\" -\u003e \":Router\" : findShortestRoute","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"activate \":Router\"","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"return","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"return","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"create \":Router\"","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"\"command:ShowDailyRouteCommand\" -\u003e \":Router\" : execute(NusMap, String, String)","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"activate \":Router\"","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"\":Router\" -\u003e \":Router\" : findShortestRoute","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":"activate \":Router\"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":"return","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":"return","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"SimBowen"},"content":"create \":Router\"","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"SimBowen"},"content":"\"command:ShowDailyRouteCommand\" -\u003e \":Router\" : execute(NusMap, String, String)","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":"activate \":Router\"","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"\":Router\" -\u003e \":Router\" : findShortestRoute","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"SimBowen"},"content":"activate \":Router\"","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"return","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"SimBowen"},"content":"return","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"SimBowen"},"content":"\"command:ShowDailyRouteCommand\" -\u003e \"ui:DailyRouteUi\": showDailyRoute(ArrayList\u003cString\u003e, ArrayList\u003cString\u003e)","lastModifiedDate":"2021-04-05"},{"lineNumber":43,"author":{"gitId":"SimBowen"},"content":"activate \"ui:DailyRouteUi\"","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"SimBowen"},"content":"return","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"SimBowen"},"content":"deactivate \"ui:DailyRouteUi\"","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"SimBowen"},"content":"\"command:ShowDailyRouteCommand\" --\u003e \":NUSMaze\"","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"SimBowen"},"content":"deactivate \"command:ShowDailyRouteCommand\"","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"SimBowen"},"content":"@enduml","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"SimBowen":48}},{"path":"docs/puml/ui_design.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"@startuml","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":"!include Style.puml","lastModifiedDate":"2021-04-11"},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"hide circle","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":"class NoteUi UIMANAGER_COLOR{","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"Rizavur"},"content":"+ String[] getNoteInfo()","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":"+ String getBlockInfo()","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"+ void showNotes(ArrayList\u003cString\u003e)","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":"class RouterUi UIMANAGER_COLOR{","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"Rizavur"},"content":"+ String[] getRoutingInfo()","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"+ int getEateryEntry(Block[])","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"Rizavur"},"content":"class UiManager UIMANAGER_COLOR{","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"Rizavur"},"content":"- Scanner in","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"Rizavur"},"content":"- PrintStream out","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"Rizavur"},"content":"+ String getUserCommandInput()","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"Rizavur"},"content":"+ String getUserInput()","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"Rizavur"},"content":"+ void showMessage(String)","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"Rizavur"},"content":"+ void showMessageWithDivider(String)","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"Rizavur"},"content":"class HistoryUi UIMANAGER_COLOR{","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"Rizavur"},"content":"+ void showHistory(History)","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"Rizavur"},"content":"+ int getRepeatEntry()","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"Rizavur"},"content":"class CommonMessage UIMANAGER_COLOR{","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"Rizavur"},"content":"+ {static} String LINE_SEPARATOR","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"Rizavur"},"content":"+ {static} String DIVIDER","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"Rizavur"},"content":"+ {static} String COMMAND_INPUT_HEADER","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"Rizavur"},"content":"+ {static} String INFO_INPUT_HEADER","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"Rizavur"},"content":"class DailyRouteUi UIMANAGER_COLOR{","lastModifiedDate":"2021-04-11"},{"lineNumber":34,"author":{"gitId":"Rizavur"},"content":"+ ArrayList\u003cString\u003e getScheduleInfo()","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"Rizavur"},"content":"+ int getDayEntryForAdd(ArrayList\u003cString\u003e)","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"Rizavur"},"content":"+ int getDayEntryForShow(ArrayList\u003cString\u003e)","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"Rizavur"},"content":"+ void showListOfDays(ArrayList\u003cString\u003e)","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"Rizavur"},"content":"+ int getEntryFromUser(ArrayList\u003cString\u003e)","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"Rizavur"},"content":"class AliasUi UIMANAGER_COLOR{","lastModifiedDate":"2021-04-11"},{"lineNumber":41,"author":{"gitId":"Rizavur"},"content":"+ String[] getAliasInfo()","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"Rizavur"},"content":"+ void showCustomAliases(BlockAlias)","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"Rizavur"},"content":"+ String getDeleteAliasInfo()","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"Rizavur"},"content":"class FavouriteUi UIMANAGER_COLOR{","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"Rizavur"},"content":"+ String[] getFavouriteInfo()","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"Rizavur"},"content":"+ void showFavourites(Favourite)","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"Rizavur"},"content":"+ int getDeleteIndex()","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"Rizavur"},"content":"+ int getRepeatIndex()","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"Rizavur"},"content":"UiManager \u003c|--up-- NoteUi","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"Rizavur"},"content":"UiManager \u003c|--up-- RouterUi","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"Rizavur"},"content":"UiManager \u003c|--up-- HistoryUi","lastModifiedDate":"2021-04-11"},{"lineNumber":55,"author":{"gitId":"Rizavur"},"content":"UiManager \u003c|--down-- DailyRouteUi","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"Rizavur"},"content":"UiManager \u003c|--down-- AliasUi","lastModifiedDate":"2021-04-11"},{"lineNumber":57,"author":{"gitId":"Rizavur"},"content":"UiManager \u003c|--down-- FavouriteUi","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"Rizavur"},"content":"UiManager \u003c|--left[hidden]-- CommonMessage","lastModifiedDate":"2021-04-11"},{"lineNumber":59,"author":{"gitId":"Rizavur"},"content":"@enduml","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"Rizavur":59}},{"path":"docs/team/kimideas8.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KimIdeas8"},"content":"# KimIdeas8 - Project Portfolio Page","lastModifiedDate":"2021-04-06"},{"lineNumber":2,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":3,"author":{"gitId":"KimIdeas8"},"content":"## PROJECT: NUSMaze","lastModifiedDate":"2021-04-08"},{"lineNumber":4,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":5,"author":{"gitId":"KimIdeas8"},"content":"---","lastModifiedDate":"2021-04-08"},{"lineNumber":6,"author":{"gitId":"KimIdeas8"},"content":"## Overview","lastModifiedDate":"2021-04-06"},{"lineNumber":7,"author":{"gitId":"KimIdeas8"},"content":"NUSMaze is a Command Line Interface (CLI) based application that aims to simplify NUS Computer Engineering students’ journey from one point to another within the NUS Engineering and Computing buildings. ","lastModifiedDate":"2021-04-06"},{"lineNumber":8,"author":{"gitId":"KimIdeas8"},"content":"The application allows users to find the shortest route from one block to another, locate the nearest eateries, tag personal notes to the location, add their daily scheduled routes and more. ","lastModifiedDate":"2021-04-06"},{"lineNumber":9,"author":{"gitId":"KimIdeas8"},"content":"This application was created with the aim of helping NUS Computing and Engineering students reach their lessons in time and to aid in making their journey in NUS quicker and more enjoyable.","lastModifiedDate":"2021-04-06"},{"lineNumber":10,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":11,"author":{"gitId":"KimIdeas8"},"content":"## Summary of Contributions","lastModifiedDate":"2021-04-08"},{"lineNumber":12,"author":{"gitId":"KimIdeas8"},"content":"### Code contribution ","lastModifiedDate":"2021-04-08"},{"lineNumber":13,"author":{"gitId":"KimIdeas8"},"content":"[RepoSense link](https://nus-cs2113-ay2021s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dKimIdeas8\u0026tabRepo\u003dAY2021S2-CS2113T-T09-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2021-04-08"},{"lineNumber":14,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":15,"author":{"gitId":"KimIdeas8"},"content":"### Enhancements implemented","lastModifiedDate":"2021-04-08"},{"lineNumber":16,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":17,"author":{"gitId":"KimIdeas8"},"content":"- **Feature 1**: Implemented the ability to add, view and delete notes tagged to a location.","lastModifiedDate":"2021-04-08"},{"lineNumber":18,"author":{"gitId":"KimIdeas8"},"content":"    - What it does: allows the user to add notes one at a time to a location of choice, view an existing list of notes by locations, and delete notes at a location of choice one at a time ","lastModifiedDate":"2021-04-08"},{"lineNumber":19,"author":{"gitId":"KimIdeas8"},"content":"    - Justification: It provides users with way of making quick notes within the campus, and saves users the trouble of adding notes in their own note-taking softwares, especially if the user is rushing for time.","lastModifiedDate":"2021-04-08"},{"lineNumber":20,"author":{"gitId":"KimIdeas8"},"content":"      Since it helps to naturally organise a person\u0027s notes by locations, the user can easily recall what the note was made for.","lastModifiedDate":"2021-04-08"},{"lineNumber":21,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":22,"author":{"gitId":"KimIdeas8"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"KimIdeas8"},"content":"- **Feature 2**: Implemented the ability to save the history of recently searched routes and all notes tagged to locations.","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"KimIdeas8"},"content":"    - What it does: allows the user to auto-save all the past data in the app. This does not require any input from the user.","lastModifiedDate":"2021-04-08"},{"lineNumber":26,"author":{"gitId":"KimIdeas8"},"content":"    - Justification: The ability to save previous data of the user is useful for the features of the app which requires saving data from previous interactions.","lastModifiedDate":"2021-04-08"},{"lineNumber":27,"author":{"gitId":"KimIdeas8"},"content":"    - Highlights: It required an in-depth analysis of design alternatives to minimise the amount of redundancy on our code for the storage classes.","lastModifiedDate":"2021-04-08"},{"lineNumber":28,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":29,"author":{"gitId":"KimIdeas8"},"content":"### Documentation","lastModifiedDate":"2021-04-08"},{"lineNumber":30,"author":{"gitId":"KimIdeas8"},"content":"- **User Guide:**","lastModifiedDate":"2021-04-08"},{"lineNumber":31,"author":{"gitId":"KimIdeas8"},"content":"    - Added documentation for Section 4.8 \u0027Notes\u0027 (under Section 4 \u0027Features\u0027)","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"KimIdeas8"},"content":"    - Edited documentation for \u0027add, view, delete notes\u0027 rows (under Section 6 \u0027Command Summary\u0027)","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"KimIdeas8"},"content":"- **Developer Guide:**","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"KimIdeas8"},"content":"    - Added documentation for Section 2.7 \u0027Storage Component\u0027 (under Section 2 \u0027Design\u0027)","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"KimIdeas8"},"content":"        - UML Diagrams added: (1 diagram) Storage Component Diagram ","lastModifiedDate":"2021-04-08"},{"lineNumber":36,"author":{"gitId":"KimIdeas8"},"content":"    - Added documentation for Section 3.6 \u0027Save Feature\u0027 (under Section 3 \u0027Implementation\u0027)","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"KimIdeas8"},"content":"        - UML Diagrams added: (4 diagrams) 3 close-up Sequence diagrams for Step 1 and 1 close-up Sequence diagram for Step 2","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":39,"author":{"gitId":"KimIdeas8"},"content":"### Contribution to Team-based Tasks ","lastModifiedDate":"2021-04-08"},{"lineNumber":40,"author":{"gitId":"KimIdeas8"},"content":"- Managed releases `v2.0` (1 release) on GitHub","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"KimIdeas8"},"content":"- Enabled assertions for team\u0027s code","lastModifiedDate":"2021-04-08"},{"lineNumber":42,"author":{"gitId":"KimIdeas8"},"content":"    ","lastModifiedDate":"2021-04-08"},{"lineNumber":43,"author":{"gitId":"KimIdeas8"},"content":"### Review / Mentoring Contributions","lastModifiedDate":"2021-04-08"},{"lineNumber":44,"author":{"gitId":"KimIdeas8"},"content":"- Reviewed some pull requests for team: [Links to PRs reviewed](https://github.com/AY2021S2-CS2113T-T09-2/tp/pulls?q\u003dis%3Apr+is%3Aclosed+reviewed-by%3AKimIdeas8)","lastModifiedDate":"2021-04-08"},{"lineNumber":45,"author":{"gitId":"KimIdeas8"},"content":"      ","lastModifiedDate":"2021-04-08"},{"lineNumber":46,"author":{"gitId":"KimIdeas8"},"content":"### Contributions beyond the project team","lastModifiedDate":"2021-04-08"},{"lineNumber":47,"author":{"gitId":"KimIdeas8"},"content":"- **Evidence of helping others:**","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"KimIdeas8"},"content":"  - Contributed suggestions for improving product for Team W09-1: [1](https://github.com/AY2021S2-CS2113T-W09-1/tp/issues/182), [2](https://github.com/AY2021S2-CS2113T-W09-1/tp/issues/181), [3](https://github.com/AY2021S2-CS2113T-W09-1/tp/issues/183)","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"KimIdeas8"},"content":"      ","lastModifiedDate":"2021-04-06"},{"lineNumber":50,"author":{"gitId":"KimIdeas8"},"content":"        ","lastModifiedDate":"2021-04-06"}],"authorContributionMap":{"KimIdeas8":50}},{"path":"docs/team/rizavur.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"# Rizavur - Project Portfolio Page for NUSMaze","lastModifiedDate":"2021-04-07"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"## Overview","lastModifiedDate":"2021-04-07"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"**NUSMaze** is a Command Line Interface (CLI) based application that aims to **simplify NUS Computer Engineering students’ journey** from one point to another within the NUS Engineering and Computing buildings.","lastModifiedDate":"2021-04-07"},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":"The application allows users to find the shortest route from one block to another, locate the nearest eatery, add personal notes to the location and many more.","lastModifiedDate":"2021-04-12"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":"The main target audience of NUSMaze are freshmen who are unfamiliar with the campus and need help travelling between Engineering and computing.","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":"## Summary of Contributions","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"This section shows a brief summary of my contributions to the team project, including coding, documentation and other helpful contribution throughout the development of NUSMaze.","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":"### Code contributed","lastModifiedDate":"2021-04-07"},{"lineNumber":12,"author":{"gitId":"Rizavur"},"content":"The link to the code contributed by me can be found","lastModifiedDate":"2021-04-07"},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"[here](https://nus-cs2113-ay2021s2.github.io/tp-dashboard/?search\u003d09\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-03-05\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dzoom\u0026zFR\u003dfalse\u0026until\u003d2021-04-06\u0026zA\u003dRizavur\u0026zR\u003dAY2021S2-CS2113T-T09-2%2Ftp%5Bmaster%5D\u0026zACS\u003d130.1818181818182\u0026zS\u003d2021-03-05\u0026zFS\u003d09\u0026zU\u003d2021-04-06\u0026zMG\u003dundefined\u0026zFTF\u003dcommit\u0026zFGS\u003dgroupByRepos)","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":15,"author":{"gitId":"Rizavur"},"content":"### Enhancements Implemented","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"Rizavur"},"content":"#### *User Interface*","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"Rizavur"},"content":"I implemented the UI of NUSMaze together with Choi Wonjae (wjChoi0712).\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"Rizavur"},"content":"**What it does:** \u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"Rizavur"},"content":"The UI of NUSMaze provides the users an enjoyable experience as they can easily differentiate between their inputs and the outputs of NUSMaze. The UI of NUSMaze is based on the Command Line Interface.","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"Rizavur"},"content":"**Justification:** \u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"Rizavur"},"content":"The UI is needed to show messages to the user so that they can be affirmed that the application is working correctly or if there are any errors, it will be easier for them to identify what went wrong.","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"Rizavur"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"Rizavur"},"content":"#### *Command classes*","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"Rizavur"},"content":"I implemented the command classes of NUSMaze together with Choi Wonjae (wjChoi0712).\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"Rizavur"},"content":"**What it does:** \u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":30,"author":{"gitId":"Rizavur"},"content":"The command classes of NUSMaze are used to execute the specific commands of the users according to which command they had typed into the command line interface.","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"Rizavur"},"content":"**Justification:** \u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":33,"author":{"gitId":"Rizavur"},"content":"The command classes are needed to clearly differentiate between the various commands that the user wants NUSMaze to execute.","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"Rizavur"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":36,"author":{"gitId":"Rizavur"},"content":"#### *Show help and venues feature*","lastModifiedDate":"2021-04-07"},{"lineNumber":37,"author":{"gitId":"Rizavur"},"content":"I implemented the features to show the help message and to list all possible venues to the user.\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":38,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":39,"author":{"gitId":"Rizavur"},"content":"**What it does:** \u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":40,"author":{"gitId":"Rizavur"},"content":"The user may use the `help` command to activate the show help feature which will list down all the possible commands that the user can user in NUSMaze.","lastModifiedDate":"2021-04-07"},{"lineNumber":41,"author":{"gitId":"Rizavur"},"content":"The user may use the `show venues` command to activate the show all venues feature which will list down all 40 of the pre-defined venues that the user can use in NUSMaze.","lastModifiedDate":"2021-04-07"},{"lineNumber":42,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":43,"author":{"gitId":"Rizavur"},"content":"**Justification:** \u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":44,"author":{"gitId":"Rizavur"},"content":"The show help and venues feature helps new users get accustomed to the application, and it also helps them when troubleshooting any errors.","lastModifiedDate":"2021-04-07"},{"lineNumber":45,"author":{"gitId":"Rizavur"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":46,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":47,"author":{"gitId":"Rizavur"},"content":"#### *Alias feature*","lastModifiedDate":"2021-04-07"},{"lineNumber":48,"author":{"gitId":"Rizavur"},"content":"I implemented the alias feature of NUSMaze.\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":49,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":50,"author":{"gitId":"Rizavur"},"content":"**What it does:** \u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":51,"author":{"gitId":"Rizavur"},"content":"The user may use the `add alias` command to activate the add alias feature. Upon activation, NUSMaze will prompt the user for a block name and the alias that they wish to set to that block. The application will then store this alias.","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"Rizavur"},"content":"The user may use the `show alias` command to activate the show alias feature. Upon activation, NUSMaze will display all the alias names and block pairs that the user has defined thus far.","lastModifiedDate":"2021-04-12"},{"lineNumber":53,"author":{"gitId":"Rizavur"},"content":"The user may use the `delete alias` command to activate the delete alias feature. Upon activation, NUSMaze will prompt the user for the alias name that they wish to delete. The application will then remove this alias from the stored list of aliases.","lastModifiedDate":"2021-04-12"},{"lineNumber":54,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":55,"author":{"gitId":"Rizavur"},"content":"**Justification:** \u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":56,"author":{"gitId":"Rizavur"},"content":"The user can use their custom defined alias instead of the pre-defined block names when calling the `go` command so as to save time as they would have to type less and the alias might make more sense to them as compared to the pre-defined block names.","lastModifiedDate":"2021-04-12"},{"lineNumber":57,"author":{"gitId":"Rizavur"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":58,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":59,"author":{"gitId":"Rizavur"},"content":"#### *User Data Storage*","lastModifiedDate":"2021-04-11"},{"lineNumber":60,"author":{"gitId":"Rizavur"},"content":"I implemented the data storage feature of NUSMaze with Sim Bowen (simbowen), Kimberley (kimideas8) and Choi Wonjae (wjChoi0712). More specifically, I was in charge of the storages for alias and favourites features.\u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":61,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":62,"author":{"gitId":"Rizavur"},"content":"**What it does:** \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":63,"author":{"gitId":"Rizavur"},"content":"The storage feature ensures that the user\u0027s data for the respective features are saved in the computers memory and can be retrieved even if the user exits and reopens NUSMaze.","lastModifiedDate":"2021-04-11"},{"lineNumber":64,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":65,"author":{"gitId":"Rizavur"},"content":"**Justification:** \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":66,"author":{"gitId":"Rizavur"},"content":"The user can use their saved data to continue customising their NUSMaze experience from where they had previously left off. ","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"Rizavur"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":68,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"Rizavur"},"content":"### Contributions to the UG","lastModifiedDate":"2021-04-07"},{"lineNumber":70,"author":{"gitId":"Rizavur"},"content":"I contributed to the information about the alias features namely `Add alias`, `Show alias` and `Delete alias`.","lastModifiedDate":"2021-04-07"},{"lineNumber":71,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":72,"author":{"gitId":"Rizavur"},"content":"### Contributions to the DG","lastModifiedDate":"2021-04-07"},{"lineNumber":73,"author":{"gitId":"Rizavur"},"content":"I contributed to the parts of the DG that describe and explain `UIManager Component`, `Custom Alias Feature` and parts of the `Appendix: Instructions for manual testing`, including the UML diagrams.","lastModifiedDate":"2021-04-07"},{"lineNumber":74,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":75,"author":{"gitId":"Rizavur"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2021-04-07"},{"lineNumber":76,"author":{"gitId":"Rizavur"},"content":"I contributed in the developer testing of NUSMaze by creating JUnit tests ro ensure that NUSMaze runs correctly and any changes in the codebase do not accidentally deviate from the intended outcomes. \u003cbr\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":77,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":78,"author":{"gitId":"Rizavur"},"content":"### Review contributions","lastModifiedDate":"2021-04-07"},{"lineNumber":79,"author":{"gitId":"Rizavur"},"content":"The link to PR reviews by me can be found [here](https://github.com/AY2021S2-CS2113T-T09-2/tp/pulls?q\u003dis%3Apr+is%3Aclosed+author%3ARizavur).","lastModifiedDate":"2021-04-07"},{"lineNumber":80,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":81,"author":{"gitId":"Rizavur"},"content":"### Contributions beyond the project team","lastModifiedDate":"2021-04-07"},{"lineNumber":82,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":83,"author":{"gitId":"Rizavur"},"content":"I contributed in helping to improve the Developer Guide for team CS2113T-F08-3 by commenting on their pull request in Week 11 of the project \u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":84,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":85,"author":{"gitId":"Rizavur"},"content":"I contributed in helping to identify bugs for team CS2113-F10-3. My contribution can be found [here](https://github.com/AY2021S2-CS2113-F10-3/tp/issues) (","lastModifiedDate":"2021-04-07"},{"lineNumber":86,"author":{"gitId":"Rizavur"},"content":"[1](https://github.com/AY2021S2-CS2113-F10-3/tp/issues/63)","lastModifiedDate":"2021-04-07"},{"lineNumber":87,"author":{"gitId":"Rizavur"},"content":"[2](https://github.com/AY2021S2-CS2113-F10-3/tp/issues/64)","lastModifiedDate":"2021-04-07"},{"lineNumber":88,"author":{"gitId":"Rizavur"},"content":"[3](https://github.com/AY2021S2-CS2113-F10-3/tp/issues/65)","lastModifiedDate":"2021-04-07"},{"lineNumber":89,"author":{"gitId":"Rizavur"},"content":"[4](https://github.com/AY2021S2-CS2113-F10-3/tp/issues/66)","lastModifiedDate":"2021-04-07"},{"lineNumber":90,"author":{"gitId":"Rizavur"},"content":"[5](https://github.com/AY2021S2-CS2113-F10-3/tp/issues/67)","lastModifiedDate":"2021-04-07"},{"lineNumber":91,"author":{"gitId":"Rizavur"},"content":"[6](https://github.com/AY2021S2-CS2113-F10-3/tp/issues/68)","lastModifiedDate":"2021-04-07"},{"lineNumber":92,"author":{"gitId":"Rizavur"},"content":"[7](https://github.com/AY2021S2-CS2113-F10-3/tp/issues/69)","lastModifiedDate":"2021-04-07"},{"lineNumber":93,"author":{"gitId":"Rizavur"},"content":"[8](https://github.com/AY2021S2-CS2113-F10-3/tp/issues/70)","lastModifiedDate":"2021-04-07"},{"lineNumber":94,"author":{"gitId":"Rizavur"},"content":"[9](https://github.com/AY2021S2-CS2113-F10-3/tp/issues/71)","lastModifiedDate":"2021-04-07"},{"lineNumber":95,"author":{"gitId":"Rizavur"},"content":"[10](https://github.com/AY2021S2-CS2113-F10-3/tp/issues/72)","lastModifiedDate":"2021-04-07"},{"lineNumber":96,"author":{"gitId":"Rizavur"},"content":"[11](https://github.com/AY2021S2-CS2113-F10-3/tp/issues/73)","lastModifiedDate":"2021-04-07"},{"lineNumber":97,"author":{"gitId":"Rizavur"},"content":"[12](https://github.com/AY2021S2-CS2113-F10-3/tp/issues/74)","lastModifiedDate":"2021-04-07"},{"lineNumber":98,"author":{"gitId":"Rizavur"},"content":") \u003cbr\u003e","lastModifiedDate":"2021-04-07"}],"authorContributionMap":{"Rizavur":98}},{"path":"docs/team/rye98.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Rye98"},"content":"# Shuhao (Rye98) - Project Portfolio Page for NUSMaze","lastModifiedDate":"2021-04-08"},{"lineNumber":2,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":3,"author":{"gitId":"Rye98"},"content":"## Overview","lastModifiedDate":"2021-04-08"},{"lineNumber":4,"author":{"gitId":"Rye98"},"content":"**NUSMaze** is a Command Line Interface (CLI) based application that aims to **simplify NUS Computer Engineering students’ journey** from one point to another within the NUS Engineering and Computing buildings.","lastModifiedDate":"2021-04-08"},{"lineNumber":5,"author":{"gitId":"Rye98"},"content":"The application allows users to find the shortest route from one block to another, locate the nearest eatery, add personal notes to the location and many more.","lastModifiedDate":"2021-04-08"},{"lineNumber":6,"author":{"gitId":"Rye98"},"content":"Although this application is targeted mainly at Engineering and Computing freshman, this app can provide help to anyone trying to navigate through the engineering and computing blocks.","lastModifiedDate":"2021-04-08"},{"lineNumber":7,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":8,"author":{"gitId":"Rye98"},"content":"## Summary of Contributions","lastModifiedDate":"2021-04-08"},{"lineNumber":9,"author":{"gitId":"Rye98"},"content":"This section shows a brief summary of my contributions towards the **NUSMaze** project.","lastModifiedDate":"2021-04-08"},{"lineNumber":10,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":11,"author":{"gitId":"Rye98"},"content":"### Code Contributed","lastModifiedDate":"2021-04-08"},{"lineNumber":12,"author":{"gitId":"Rye98"},"content":"The link to the code contributed by me can be found ","lastModifiedDate":"2021-04-08"},{"lineNumber":13,"author":{"gitId":"Rye98"},"content":"[here](https://nus-cs2113-ay2021s2.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003drye98)","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":15,"author":{"gitId":"Rye98"},"content":"### Enhancements implemented","lastModifiedDate":"2021-04-08"},{"lineNumber":16,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":17,"author":{"gitId":"Rye98"},"content":"#### History","lastModifiedDate":"2021-04-08"},{"lineNumber":18,"author":{"gitId":"Rye98"},"content":"I implemented the history feature, which acts as a storage to keep track of 10 of the most recent route searches.","lastModifiedDate":"2021-04-08"},{"lineNumber":19,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":20,"author":{"gitId":"Rye98"},"content":"**What it does:**","lastModifiedDate":"2021-04-08"},{"lineNumber":21,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":22,"author":{"gitId":"Rye98"},"content":"When a user finishes the  `go` command with valid inputs, a string containing the starting block and destination block is immediately stored into an `\u003cArrayList\u003e`.","lastModifiedDate":"2021-04-08"},{"lineNumber":23,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":24,"author":{"gitId":"Rye98"},"content":"**Justification:**","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":26,"author":{"gitId":"Rye98"},"content":"The user can choose to repeat a route search, which had been done via the `go` command in the past, without the need to repeat the `go` command process nor keying in the possibly long destination names.","lastModifiedDate":"2021-04-08"},{"lineNumber":27,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":28,"author":{"gitId":"Rye98"},"content":"#### Favourites","lastModifiedDate":"2021-04-08"},{"lineNumber":29,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":30,"author":{"gitId":"Rye98"},"content":"Together with Choi Wonjae (wjChoi0712), we implemented the `favourites` feature.","lastModifiedDate":"2021-04-08"},{"lineNumber":31,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":32,"author":{"gitId":"Rye98"},"content":"**What it does:**","lastModifiedDate":"2021-04-08"},{"lineNumber":33,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":34,"author":{"gitId":"Rye98"},"content":"This allows the user to save favourite routes consisting of a starting block, and a destination block.","lastModifiedDate":"2021-04-08"},{"lineNumber":35,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":36,"author":{"gitId":"Rye98"},"content":"**Justification:**","lastModifiedDate":"2021-04-08"},{"lineNumber":37,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":38,"author":{"gitId":"Rye98"},"content":"Due to the `history` feature only storing 10 of the most recent searches, this `favourites` feature allows users to store additional important routes, and these routes will not be deleted (unless the user invokes the `delete favourite` command). This allows the user to store additional routes without going through the `go` command, and without worrying about exceeding the storage capacity of the app.","lastModifiedDate":"2021-04-08"},{"lineNumber":39,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":40,"author":{"gitId":"Rye98"},"content":"#### Contributions to User Guide","lastModifiedDate":"2021-04-08"},{"lineNumber":41,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":42,"author":{"gitId":"Rye98"},"content":"I contributed to the information under **features**, namely the `history` and `favourite route` features.","lastModifiedDate":"2021-04-08"},{"lineNumber":43,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":44,"author":{"gitId":"Rye98"},"content":"#### Contributions to Developer Guide","lastModifiedDate":"2021-04-08"},{"lineNumber":45,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":46,"author":{"gitId":"Rye98"},"content":"I contributed to the information and diagrams under **features**, namely the `history` and `favourite route` features.","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":48,"author":{"gitId":"Rye98"},"content":"#### Contributions to team-based tasks","lastModifiedDate":"2021-04-08"},{"lineNumber":49,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":50,"author":{"gitId":"Rye98"},"content":"I added some JUnit tests for the `history` and `favourites` to ensure that the implementations of methods from these two classes are working as intended when additional code is added.","lastModifiedDate":"2021-04-08"},{"lineNumber":51,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":52,"author":{"gitId":"Rye98"},"content":"#### Review Contributions","lastModifiedDate":"2021-04-08"},{"lineNumber":53,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":54,"author":{"gitId":"Rye98"},"content":"The link to PR reviews by me can be found [here](https://github.com/AY2021S2-CS2113T-T09-2/tp/pulls?q\u003dis%3Apr+is%3Aclosed+reviewed-by%3ARye98+).","lastModifiedDate":"2021-04-08"},{"lineNumber":55,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":56,"author":{"gitId":"Rye98"},"content":"### Contributions beyond the project team:","lastModifiedDate":"2021-04-08"},{"lineNumber":57,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":58,"author":{"gitId":"Rye98"},"content":"I contributed in helping to identify potential bugs in other team\u0027s project, which can be found [here](https://github.com/AY2021S2-CS2113-F10-2/tp): (","lastModifiedDate":"2021-04-08"},{"lineNumber":59,"author":{"gitId":"Rye98"},"content":"[1](https://github.com/AY2021S2-CS2113-F10-2/tp/issues/128), ","lastModifiedDate":"2021-04-08"},{"lineNumber":60,"author":{"gitId":"Rye98"},"content":"[2](https://github.com/AY2021S2-CS2113-F10-2/tp/issues/127), ","lastModifiedDate":"2021-04-08"},{"lineNumber":61,"author":{"gitId":"Rye98"},"content":"[3](https://github.com/AY2021S2-CS2113-F10-2/tp/issues/126), ","lastModifiedDate":"2021-04-08"},{"lineNumber":62,"author":{"gitId":"Rye98"},"content":"[4](https://github.com/AY2021S2-CS2113-F10-2/tp/issues/125), ","lastModifiedDate":"2021-04-08"},{"lineNumber":63,"author":{"gitId":"Rye98"},"content":"[5](https://github.com/AY2021S2-CS2113-F10-2/tp/issues/124), ","lastModifiedDate":"2021-04-08"},{"lineNumber":64,"author":{"gitId":"Rye98"},"content":"[6](https://github.com/AY2021S2-CS2113-F10-2/tp/issues/123), ","lastModifiedDate":"2021-04-08"},{"lineNumber":65,"author":{"gitId":"Rye98"},"content":"[7](https://github.com/AY2021S2-CS2113-F10-2/tp/issues/122), ","lastModifiedDate":"2021-04-08"},{"lineNumber":66,"author":{"gitId":"Rye98"},"content":"[8](https://github.com/AY2021S2-CS2113-F10-2/tp/issues/121), ","lastModifiedDate":"2021-04-08"},{"lineNumber":67,"author":{"gitId":"Rye98"},"content":"[9](https://github.com/AY2021S2-CS2113-F10-2/tp/issues/120), ","lastModifiedDate":"2021-04-08"},{"lineNumber":68,"author":{"gitId":"Rye98"},"content":"[10](https://github.com/AY2021S2-CS2113-F10-2/tp/issues/119), ","lastModifiedDate":"2021-04-08"},{"lineNumber":69,"author":{"gitId":"Rye98"},"content":"[11](https://github.com/AY2021S2-CS2113-F10-2/tp/issues/118)","lastModifiedDate":"2021-04-08"},{"lineNumber":70,"author":{"gitId":"Rye98"},"content":")","lastModifiedDate":"2021-04-08"}],"authorContributionMap":{"Rye98":70}},{"path":"docs/team/simbowen.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"# Sim Bowen - Project Portfolio Page for NUSMaze","lastModifiedDate":"2021-04-06"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"## Overview","lastModifiedDate":"2021-04-06"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":"**NUSMaze** is a Command Line Interface (CLI) based application that aims to **simplify NUS Computer Engineering students’ journey** from one point to another within the NUS Engineering and Computing buildings. ","lastModifiedDate":"2021-04-06"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"The application allows users to find the shortest route from one block to another, locate the nearest eatery, add personal notes to the location and many more. ","lastModifiedDate":"2021-04-06"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"The main target audience of NUSMaze are freshmen who are unfamiliar with the campus and need help travelling between Engineering and computing.","lastModifiedDate":"2021-04-06"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"## Summary of Contributions","lastModifiedDate":"2021-04-06"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":"This section shows a brief summary of my contributions to the team project, including coding, documentation and other helpful contribution through the development of NUSMaze.","lastModifiedDate":"2021-04-06"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"### Code contributed","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"The link to the code contributed by me can be found","lastModifiedDate":"2021-04-06"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"[here](https://nus-cs2113-ay2021s2.github.io/tp-dashboard/?search\u003d09\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-03-05\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dzoom\u0026zA\u003dSimBowen\u0026zR\u003dAY2021S2-CS2113T-T09-2%2Ftp%5Bmaster%5D\u0026zACS\u003d130.65156794425087\u0026zS\u003d2021-03-05\u0026zFS\u003d09\u0026zU\u003d2021-04-06\u0026zMG\u003dundefined\u0026zFTF\u003dcommit\u0026zFGS\u003dgroupByRepos\u0026zFR\u003dfalse\u0026zFT\u003ddocs~functional-code~test-code~other\u0026until\u003d2021-04-06).","lastModifiedDate":"2021-04-06"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"### Enhancements Implemented","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"#### Routing","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"I implemented the basic routing functionality together with Choi Wonjae (wjChoi0712).\u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"**What it does:** \u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"The user may use the `go` command to activate the routing feature. Upon activation, NUSMaze will prompt the user for a Starting location and a destination. The application will then run a modified breath first search algorithm using the graph of the map of Computing and Engineering that we have pre-defined and show the user the shortest sheltered route as defined using the official map on NUS website [here](http://map.nus.edu.sg/#page\u003dmap\u0026long\u003d103.7725819000000000\u0026lat\u003d1.2979695610000000).","lastModifiedDate":"2021-04-06"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":"**Justification:** \u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"The routing feature is the main reason for the creation of NUSMaze. The name of the app came about due to our focus on navigation throughout the campus. The routing feature is useful for all users who are unsure of how to travel between the Engineering and Computing faculties. ","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"#### Daily Route","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"I implemented the daily route feature of NUSMaze.\u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":"**What it does:** \u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":"The user may use the `add daily route` command to activate the add daily route function. Upon activation, NUSMaze will prompt the user to choose a day. The application will then prompt the user to enter locations of their activities until the user enters `END`. The day chosen is then mapped to the schedule entered by the user and stored.","lastModifiedDate":"2021-04-06"},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":34,"author":{"gitId":"SimBowen"},"content":"The user may use the `show daily route` command to activate the show daily route function. Upon activation, NUSMaze will prompt the user to choose a day that has a schedule tagged to it. Upon user selection, the location of activities and routes to get to there based on the location of the previous activity is shown to the user using the routing function.","lastModifiedDate":"2021-04-06"},{"lineNumber":35,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":"The user may use the `delete daily route` command to activate the delete daily route function. Upon activation, NUSMaze will prompt the user to choose a day that has a schedule tagged to it. Upon user selection, the schedule tagged to the day is cleared.","lastModifiedDate":"2021-04-06"},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":38,"author":{"gitId":"SimBowen"},"content":"**Justification:** \u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"This is an extension of the routing function and serves to help store the daily schedule of users. This function was implemented to help our main target audience who are freshmen and may not remember their schedule clearly.","lastModifiedDate":"2021-04-06"},{"lineNumber":40,"author":{"gitId":"SimBowen"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":41,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":42,"author":{"gitId":"SimBowen"},"content":"### Contributions to the UG","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"SimBowen"},"content":"I contributed to the overall formatting of the document and wrote the content page, Sections 2, 3, 4.5, 5, 6 and 7.","lastModifiedDate":"2021-04-06"},{"lineNumber":44,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":45,"author":{"gitId":"SimBowen"},"content":"### Contributions to the DG","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"SimBowen"},"content":"I contributed to the parts of the DG that describe and explain the implementation of finding the shortest route feature and daily route planning feature, including the UML diagrams.","lastModifiedDate":"2021-04-09"},{"lineNumber":47,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":48,"author":{"gitId":"SimBowen"},"content":"### Contributions to team-based tasks:","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"SimBowen"},"content":"I managed release v1.0 (1 release) on GitHub \u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":50,"author":{"gitId":"SimBowen"},"content":"I vetted issues and assigned to members accordingly. \u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":51,"author":{"gitId":"SimBowen"},"content":"I maintained the cohesiveness in language and formatting of the documentations. \u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":52,"author":{"gitId":"SimBowen"},"content":"I contributed to developer testing for NUSMaze by creating JUnit tests to ensure that the behaviour of the application does not defer from intended.","lastModifiedDate":"2021-04-09"},{"lineNumber":53,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":54,"author":{"gitId":"SimBowen"},"content":"### Review contributions","lastModifiedDate":"2021-04-11"},{"lineNumber":55,"author":{"gitId":"SimBowen"},"content":"The link to PR reviews by me can be found [here](https://github.com/AY2021S2-CS2113T-T09-2/tp/pulls?q\u003dis%3Apr+is%3Aclosed+reviewed-by%3ASimBowen+).","lastModifiedDate":"2021-04-06"},{"lineNumber":56,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":57,"author":{"gitId":"SimBowen"},"content":"### Contributions beyond the project team:","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"SimBowen"},"content":"I contributed in helping to identify bugs for other teams which can be found [here](https://github.com/AY2021S2-CS2113-T10-3/tp/issues) (","lastModifiedDate":"2021-04-06"},{"lineNumber":59,"author":{"gitId":"SimBowen"},"content":"[1](https://github.com/AY2021S2-CS2113-T10-3/tp/issues/60)","lastModifiedDate":"2021-04-06"},{"lineNumber":60,"author":{"gitId":"SimBowen"},"content":"[2](https://github.com/AY2021S2-CS2113-T10-3/tp/issues/59)","lastModifiedDate":"2021-04-06"},{"lineNumber":61,"author":{"gitId":"SimBowen"},"content":"[3](https://github.com/AY2021S2-CS2113-T10-3/tp/issues/58)","lastModifiedDate":"2021-04-06"},{"lineNumber":62,"author":{"gitId":"SimBowen"},"content":"[4](https://github.com/AY2021S2-CS2113-T10-3/tp/issues/57)","lastModifiedDate":"2021-04-06"},{"lineNumber":63,"author":{"gitId":"SimBowen"},"content":"[5](https://github.com/AY2021S2-CS2113-T10-3/tp/issues/56)","lastModifiedDate":"2021-04-06"},{"lineNumber":64,"author":{"gitId":"SimBowen"},"content":"[6](https://github.com/AY2021S2-CS2113-T10-3/tp/issues/55)","lastModifiedDate":"2021-04-06"},{"lineNumber":65,"author":{"gitId":"SimBowen"},"content":"[7](https://github.com/AY2021S2-CS2113-T10-3/tp/issues/54)","lastModifiedDate":"2021-04-06"},{"lineNumber":66,"author":{"gitId":"SimBowen"},"content":"[8](https://github.com/AY2021S2-CS2113-T10-3/tp/issues/53)","lastModifiedDate":"2021-04-06"},{"lineNumber":67,"author":{"gitId":"SimBowen"},"content":")","lastModifiedDate":"2021-04-06"}],"authorContributionMap":{"SimBowen":67}},{"path":"docs/team/wjchoi0712.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"# wjchoi0712 - Project Portfolio Page for NUSMaze","lastModifiedDate":"2021-04-11"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"## Overview","lastModifiedDate":"2021-04-11"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"**NUSMaze** is a Command Line Interface (CLI) based application that aims to **simplify NUS Computer Engineering students’ journey** from one point to another within the NUS Engineering and Computing buildings.","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"The application allows users to find the shortest route from one block to another, locate the nearest eatery, add personal notes to the location and many more.","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"The main target audience of NUSMaze are freshmen who are unfamiliar with the campus and need help travelling between Engineering and computing.","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"## Summary of Contributions","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"### Code contributed","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"The codes that I have contributed to the team can be found ","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"[here](https://nus-cs2113-ay2021s2.github.io/tp-dashboard/?search\u003d09\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-03-05\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026until\u003d2021-04-06\u0026tabAuthor\u003dwjchoi0712\u0026tabRepo\u003dAY2021S2-CS2113T-T09-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code).","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"### Enhancements Implemented","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"Shown below are some features/aspects that I have contributed to the team.\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"#### Routing feature","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"* Collaborated with Bowen(simbowen) to implement the routing algorithm.  ","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"* Collaborated with Bowen(simbowen) to construct the map of the Engineering and Computing campus.","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"* Implemented eatery feature which shows the user a list of eateries to choose from.","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"#### Favourite feature","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"* Collaborated with Shuhao(Rye98) to implement the favourite feature, which allows user to store favourite routes.","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":"#### Storage","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"wjchoi0712"},"content":"* Collaborated with Bowen(simbowen), Kimberley(kimideas8) and Rizavur(rizavur) to implement the saving feature.","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"wjchoi0712"},"content":"* Designed the `DataDecoder` and `DataEncoder` class to encode and decode data. ","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"wjchoi0712"},"content":"* Added in exceptions to find corrupted data while loading past data. ","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"wjchoi0712"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"wjchoi0712"},"content":"#### UI","lastModifiedDate":"2021-04-11"},{"lineNumber":36,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"wjchoi0712"},"content":"* Collaborated with Rizavur(rizavur) to develop the UI of NUSMaze.","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"wjchoi0712"},"content":"#### Command Classes","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":41,"author":{"gitId":"wjchoi0712"},"content":"* Collaborated with Rizavur(rizavur) to form the `Parser` for user commands as well the overall OOP structure for the ","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"wjchoi0712"},"content":"command classes.","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"wjchoi0712"},"content":"### Contributions to the UG","lastModifiedDate":"2021-04-11"},{"lineNumber":45,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"wjchoi0712"},"content":"Regarding the User Guide, I have contributed to the following sections:","lastModifiedDate":"2021-04-11"},{"lineNumber":47,"author":{"gitId":"wjchoi0712"},"content":"* Section 1 (Introduction)","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"wjchoi0712"},"content":"* Section 3.2.3 (Format of commands)","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"wjchoi0712"},"content":"* Section 4.3 (Routing)","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"wjchoi0712"},"content":"* Section 4.10 (Saving the data)","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"wjchoi0712"},"content":"* Section 4.11 (Loading past data)","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"wjchoi0712"},"content":"### Contributions to the DG","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":55,"author":{"gitId":"wjchoi0712"},"content":"Regarding the Developer Guide, I have contributed to the following sections:","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"wjchoi0712"},"content":"* Section 2.1 (Architecture)","lastModifiedDate":"2021-04-11"},{"lineNumber":57,"author":{"gitId":"wjchoi0712"},"content":"* Section 2.3 (Parser Component)","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"wjchoi0712"},"content":"* Section 2.4 (Command Component)","lastModifiedDate":"2021-04-11"},{"lineNumber":59,"author":{"gitId":"wjchoi0712"},"content":"* Section 2.5 (Router Component)","lastModifiedDate":"2021-04-11"},{"lineNumber":60,"author":{"gitId":"wjchoi0712"},"content":"* Section 2.6 (Data Component)","lastModifiedDate":"2021-04-11"},{"lineNumber":61,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":62,"author":{"gitId":"wjchoi0712"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2021-04-11"},{"lineNumber":63,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":64,"author":{"gitId":"wjchoi0712"},"content":"Contributions that I have made to team-based tasks are:","lastModifiedDate":"2021-04-11"},{"lineNumber":65,"author":{"gitId":"wjchoi0712"},"content":"* Setting up the GitHub team org/repo","lastModifiedDate":"2021-04-11"},{"lineNumber":66,"author":{"gitId":"wjchoi0712"},"content":"* Organising the classes into different packages","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"wjchoi0712"},"content":"* Integrating different features of the NUSMaze","lastModifiedDate":"2021-04-11"},{"lineNumber":68,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"wjchoi0712"},"content":"### Review contributions","lastModifiedDate":"2021-04-11"},{"lineNumber":70,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":71,"author":{"gitId":"wjchoi0712"},"content":"The PRs that I have reviewed can be found [here](https://github.com/AY2021S2-CS2113T-T09-2/tp/pulls?q\u003dis%3Apr+is%3Aclosed+reviewed-by%3AWjchoi0712).","lastModifiedDate":"2021-04-11"},{"lineNumber":72,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":73,"author":{"gitId":"wjchoi0712"},"content":"### Contributions beyond the project team","lastModifiedDate":"2021-04-11"},{"lineNumber":74,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":75,"author":{"gitId":"wjchoi0712"},"content":"Bug reports that I have provided for other project team is [here](https://github.com/wjchoi0712/ped/issues). \u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":76,"author":{"gitId":"wjchoi0712"},"content":"Response that I have posted in forum is [here](https://github.com/nus-cs2113-AY2021S2/forum/issues/10). ","lastModifiedDate":"2021-04-11"}],"authorContributionMap":{"wjchoi0712":76}},{"path":"src/main/java/seedu/duke/NusMaze.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.data.BlockAlias;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.data.DailyRoute;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.data.Favourite;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.data.History;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.data.NusMap;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.exception.InvalidCommandException;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.exception.InvalidFilePathException;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.exception.LoadDataException;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.exception.SaveDataException;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.exception.StorageOperationException;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.storage.datastorage.DailyRouteStorage;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.storage.datastorage.AliasStorage;","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.storage.datastorage.FavouriteStorage;","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.storage.datastorage.NotesStorage;","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.storage.datastorage.HistoryStorage;","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.ui.CommonMessage;","lastModifiedDate":"2021-04-04"},{"lineNumber":22,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.ui.UiManager;","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"/**","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":" * Entry point of the NusMaze application.","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":" * Initializes the application and starts the interaction with the user.","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":" */","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"public class NusMaze {","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"wjchoi0712"},"content":"    private NusMap nusMap;","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"wjchoi0712"},"content":"    private UiManager ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"wjchoi0712"},"content":"    private BlockAlias blockAlias;","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"wjchoi0712"},"content":"    private History history;","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"wjchoi0712"},"content":"    private Favourite favourite;","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"wjchoi0712"},"content":"    private DailyRoute dailyRoute;","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"wjchoi0712"},"content":"    private Storage[] storages;","lastModifiedDate":"2021-04-04"},{"lineNumber":37,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"        new NusMaze().run();","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"wjchoi0712"},"content":"    /** Sets up and run the program. */","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"wjchoi0712"},"content":"    private void run() {","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"wjchoi0712"},"content":"        initializeNusMaze();","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"wjchoi0712"},"content":"        runCommandLoopUntilByeCommand();","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"wjchoi0712"},"content":"    /** Initialises the data and storage. */","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"wjchoi0712"},"content":"    private void initializeNusMaze() {","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"KimIdeas8"},"content":"        try {","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"wjchoi0712"},"content":"            initializeData();","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"wjchoi0712"},"content":"            initializeStorage();","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"wjchoi0712"},"content":"            setStorageData();","lastModifiedDate":"2021-04-04"},{"lineNumber":54,"author":{"gitId":"wjchoi0712"},"content":"            ui.showLogo();","lastModifiedDate":"2021-04-04"},{"lineNumber":55,"author":{"gitId":"wjchoi0712"},"content":"            loadPreviousData();","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"wjchoi0712"},"content":"            ui.showGreetMessage();","lastModifiedDate":"2021-04-04"},{"lineNumber":57,"author":{"gitId":"wjchoi0712"},"content":"        } catch (StorageOperationException e) {","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"wjchoi0712"},"content":"            ui.showMessageWithDivider(e.getMessage());","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"KimIdeas8"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"wjchoi0712"},"content":"    /** Reads the user command and executes it, until the user issues the bye command. */","lastModifiedDate":"2021-04-12"},{"lineNumber":63,"author":{"gitId":"wjchoi0712"},"content":"    private void runCommandLoopUntilByeCommand() {","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"wjchoi0712"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"wjchoi0712"},"content":"        while (!isExit) {","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"wjchoi0712"},"content":"            try {","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"Rizavur"},"content":"                String input \u003d ui.getUserCommandInput();","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"wjchoi0712"},"content":"                Command command \u003d Parser.prepareForCommandExecution(input);","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"wjchoi0712"},"content":"                command.setData(nusMap, blockAlias, history, favourite, dailyRoute);","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"wjchoi0712"},"content":"                command.execute();","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"wjchoi0712"},"content":"                saveCurrentData();","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"wjchoi0712"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"wjchoi0712"},"content":"            } catch (InvalidCommandException | SaveDataException e) {","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"wjchoi0712"},"content":"                ui.showMessageWithDivider(e.getMessage());","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"wjchoi0712"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"wjchoi0712"},"content":"    /** Initialises the data. */","lastModifiedDate":"2021-04-12"},{"lineNumber":80,"author":{"gitId":"wjchoi0712"},"content":"    private void initializeData() {","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"wjchoi0712"},"content":"        nusMap \u003d new NusMap();","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"wjchoi0712"},"content":"        ui \u003d new UiManager();","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"wjchoi0712"},"content":"        blockAlias \u003d new BlockAlias();","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"wjchoi0712"},"content":"        history \u003d new History();","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"wjchoi0712"},"content":"        favourite \u003d new Favourite();","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"wjchoi0712"},"content":"        dailyRoute \u003d new DailyRoute();","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"wjchoi0712"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":90,"author":{"gitId":"wjchoi0712"},"content":"     * Creates new directory and file according to the {@code filepath} if it does not already exists.","lastModifiedDate":"2021-04-12"},{"lineNumber":91,"author":{"gitId":"wjchoi0712"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":92,"author":{"gitId":"wjchoi0712"},"content":"    private void initializeStorage() throws InvalidFilePathException {","lastModifiedDate":"2021-04-01"},{"lineNumber":93,"author":{"gitId":"wjchoi0712"},"content":"        Storage aliasStorage \u003d new AliasStorage(\"data/aliasList.txt\");","lastModifiedDate":"2021-04-04"},{"lineNumber":94,"author":{"gitId":"wjchoi0712"},"content":"        Storage historyStorage \u003d new HistoryStorage(\"data/history.txt\");","lastModifiedDate":"2021-04-04"},{"lineNumber":95,"author":{"gitId":"wjchoi0712"},"content":"        Storage favouriteStorage \u003d new FavouriteStorage(\"data/favouriteList.txt\");","lastModifiedDate":"2021-04-04"},{"lineNumber":96,"author":{"gitId":"wjchoi0712"},"content":"        Storage dailyRouteStorage \u003d new DailyRouteStorage(\"data/dailyRouteList.txt\");","lastModifiedDate":"2021-04-04"},{"lineNumber":97,"author":{"gitId":"wjchoi0712"},"content":"        Storage notesStorage \u003d new NotesStorage(\"data/noteList.txt\");","lastModifiedDate":"2021-04-04"},{"lineNumber":98,"author":{"gitId":"wjchoi0712"},"content":"        storages \u003d new Storage[]{aliasStorage, historyStorage, favouriteStorage, dailyRouteStorage, notesStorage};","lastModifiedDate":"2021-04-04"},{"lineNumber":99,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":100,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":101,"author":{"gitId":"wjchoi0712"},"content":"    /** Sets the data into appropriate storage. */","lastModifiedDate":"2021-04-12"},{"lineNumber":102,"author":{"gitId":"wjchoi0712"},"content":"    private void setStorageData() {","lastModifiedDate":"2021-04-04"},{"lineNumber":103,"author":{"gitId":"wjchoi0712"},"content":"        for (Storage storage : storages) {","lastModifiedDate":"2021-04-04"},{"lineNumber":104,"author":{"gitId":"wjchoi0712"},"content":"            storage.setData(nusMap, blockAlias, history, favourite, dailyRoute);","lastModifiedDate":"2021-04-04"},{"lineNumber":105,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":106,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"wjchoi0712"},"content":"    /** Loads the data from the txt files. */","lastModifiedDate":"2021-04-12"},{"lineNumber":109,"author":{"gitId":"wjchoi0712"},"content":"    private void loadPreviousData() throws SaveDataException {","lastModifiedDate":"2021-04-04"},{"lineNumber":110,"author":{"gitId":"wjchoi0712"},"content":"        for (Storage storage : storages) {","lastModifiedDate":"2021-04-04"},{"lineNumber":111,"author":{"gitId":"wjchoi0712"},"content":"            try {","lastModifiedDate":"2021-04-04"},{"lineNumber":112,"author":{"gitId":"wjchoi0712"},"content":"                storage.loadData();","lastModifiedDate":"2021-04-04"},{"lineNumber":113,"author":{"gitId":"wjchoi0712"},"content":"                ui.showLoadSuccessMessage(storage.getStorageName());","lastModifiedDate":"2021-04-04"},{"lineNumber":114,"author":{"gitId":"wjchoi0712"},"content":"            } catch (LoadDataException e) {","lastModifiedDate":"2021-04-04"},{"lineNumber":115,"author":{"gitId":"wjchoi0712"},"content":"                ui.showMessage(String.format(e.getMessage(), storage.getStorageName()));","lastModifiedDate":"2021-04-04"},{"lineNumber":116,"author":{"gitId":"wjchoi0712"},"content":"                storage.saveData();","lastModifiedDate":"2021-04-04"},{"lineNumber":117,"author":{"gitId":"wjchoi0712"},"content":"            }","lastModifiedDate":"2021-04-04"},{"lineNumber":118,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":119,"author":{"gitId":"wjchoi0712"},"content":"        ui.showMessage(CommonMessage.DIVIDER);","lastModifiedDate":"2021-04-04"},{"lineNumber":120,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"wjchoi0712"},"content":"    /** Saves the data into the txt file. */","lastModifiedDate":"2021-04-12"},{"lineNumber":123,"author":{"gitId":"wjchoi0712"},"content":"    private void saveCurrentData() throws SaveDataException {","lastModifiedDate":"2021-04-01"},{"lineNumber":124,"author":{"gitId":"wjchoi0712"},"content":"        for (Storage storage : storages) {","lastModifiedDate":"2021-04-04"},{"lineNumber":125,"author":{"gitId":"wjchoi0712"},"content":"            storage.saveData();","lastModifiedDate":"2021-04-04"},{"lineNumber":126,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":127,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"KimIdeas8":7,"SimBowen":2,"wjchoi0712":110,"-":7,"Rizavur":2}},{"path":"src/main/java/seedu/duke/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package seedu.duke.command;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.data.BlockAlias;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.data.DailyRoute;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.data.Favourite;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.data.History;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.data.NusMap;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"/**","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":" * Represents an executable command.","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":" */","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"Rizavur"},"content":"public abstract class Command {","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"    protected NusMap nusMap;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"    protected BlockAlias blockAlias;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"    protected History history;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"    protected Favourite favourite;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"    protected DailyRoute dailyRoute;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"    protected boolean isExit;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"    public Command() {","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"     * Sets the relevant data as the attributes of the command class.","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"    public void setData(NusMap nusMap, BlockAlias blockAlias, History history,","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":"                        Favourite favourite, DailyRoute dailyRoute) {","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"wjchoi0712"},"content":"        this.nusMap \u003d nusMap;","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"wjchoi0712"},"content":"        this.blockAlias \u003d blockAlias;","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"wjchoi0712"},"content":"        this.history \u003d history;","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"wjchoi0712"},"content":"        this.favourite \u003d favourite;","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"wjchoi0712"},"content":"        this.dailyRoute \u003d dailyRoute;","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"wjchoi0712"},"content":"    /** Checks whether the application should be closed. */","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"wjchoi0712"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"wjchoi0712"},"content":"        return isExit;","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"wjchoi0712"},"content":"    public void execute() {","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"wjchoi0712":41,"Rizavur":1}},{"path":"src/main/java/seedu/duke/command/aliascommand/AddCustomAliasCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"//@@author Rizavur","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"package seedu.duke.command.aliascommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.ui.AliasUi;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.exception.InvalidBlockException;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.exception.InvalidAliasException;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":"public class AddCustomAliasCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Rizavur"},"content":"    protected AliasUi ui;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Got it! Successfully added %s as %s\u0027s alias\";","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"Rizavur"},"content":"    public AddCustomAliasCommand() {","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"Rizavur"},"content":"        this.ui \u003d new AliasUi();","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"Rizavur"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"Rizavur"},"content":"     * This method executes the adding of an alias to a block. The user input for the alias to be added is obtained","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"Rizavur"},"content":"     * by calling the getAliasInfo method in the ui class which will then be checked to determine if its valid. The","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"Rizavur"},"content":"     * alias is then added into the hashlist in the BlockAlias class if it was valid.","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"Rizavur"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"Rizavur"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"Rizavur"},"content":"    public void execute() {","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Rizavur"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Rizavur"},"content":"            String[] blockAndAlias \u003d ui.getAliasInfo();","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"Rizavur"},"content":"            nusMap.checkIfValidBlock(blockAndAlias[0]);","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"Rizavur"},"content":"            blockAlias.addAlias(blockAndAlias[0], blockAndAlias[1]);","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"Rizavur"},"content":"            ui.showMessageWithDivider(String.format(MESSAGE_SUCCESS, blockAndAlias[1], blockAndAlias[0]));","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Rizavur"},"content":"        } catch (InvalidAliasException | InvalidBlockException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"Rizavur"},"content":"            ui.showMessageWithDivider(e.getMessage());","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"Rizavur"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"Rizavur":35}},{"path":"src/main/java/seedu/duke/command/aliascommand/DeleteCustomAliasCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"//@@author Rizavur","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"package seedu.duke.command.aliascommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.exception.NoAliasNameException;","lastModifiedDate":"2021-04-05"},{"lineNumber":7,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.ui.AliasUi;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"public class DeleteCustomAliasCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":"    protected AliasUi ui;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Rizavur"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Got it! Successfully deleted %s from alias list!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"Rizavur"},"content":"    public DeleteCustomAliasCommand() {","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"Rizavur"},"content":"        this.ui \u003d new AliasUi();","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Rizavur"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"Rizavur"},"content":"     * This method executes the delete alias command. It gets the user\u0027s input for the alias to be deleted by calling","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"Rizavur"},"content":"     * the ui class and after which calls the deleteAlias function in the BlockAlias class to delete it.","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"Rizavur"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"Rizavur"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"Rizavur"},"content":"    public void execute() {","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"Rizavur"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"Rizavur"},"content":"            String aliasToDelete \u003d ui.getDeleteAliasInfo();","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Rizavur"},"content":"            blockAlias.deleteAlias(aliasToDelete);","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Rizavur"},"content":"            ui.showMessageWithDivider(String.format(MESSAGE_SUCCESS, aliasToDelete));","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"Rizavur"},"content":"        } catch (NoAliasNameException e) {","lastModifiedDate":"2021-04-05"},{"lineNumber":29,"author":{"gitId":"Rizavur"},"content":"            ui.showMessageWithDivider(e.getMessage());","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"Rizavur"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"Rizavur":32}},{"path":"src/main/java/seedu/duke/command/aliascommand/ShowCustomAliasCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"//@@author Rizavur","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"package seedu.duke.command.aliascommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.ui.AliasUi;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.exception.EmptyAliasesException;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"public class ShowCustomAliasCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":"    protected AliasUi ui;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Rizavur"},"content":"    public ShowCustomAliasCommand() {","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"        this.ui \u003d new AliasUi();","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"Rizavur"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"Rizavur"},"content":"     * This method will show all aliases that have been saved by the user. It calls the showCustomAliases method in","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"Rizavur"},"content":"     * the ui class.","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"Rizavur"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"Rizavur"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"Rizavur"},"content":"    public void execute() {","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"Rizavur"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"Rizavur"},"content":"            ui.showCustomAliases(blockAlias);","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"Rizavur"},"content":"        } catch (EmptyAliasesException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"Rizavur"},"content":"            ui.showMessageWithDivider(e.getMessage());","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Rizavur"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"Rizavur":28}},{"path":"src/main/java/seedu/duke/command/dailyroutecommand/AddDailyRouteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"//@@author SimBowen","lastModifiedDate":"2021-04-03"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"package seedu.duke.command.dailyroutecommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"import seedu.duke.exception.EmptyDailyRouteException;","lastModifiedDate":"2021-04-03"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"import seedu.duke.exception.InvalidIndexException;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"import seedu.duke.ui.DailyRouteUi;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"/**","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":" * Adds a daily schedule.","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":" */","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"public class AddDailyRouteCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"    protected DailyRouteUi ui;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"    private static String MESSAGE_SUCCESS \u003d \"Got it! Successfully added %s\u0027s schedule!\";","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"    public AddDailyRouteCommand() {","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":"        this.ui \u003d new DailyRouteUi();","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"     * Gets the day and schedule specified by the user and maps it in dailyRoute","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"     * Success message is printed using ui at the end.","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":"    public void execute() {","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":"        ArrayList\u003cString\u003e validDays \u003d dailyRoute.getValidDays();","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"SimBowen"},"content":"            int index \u003d ui.getDayEntry(validDays);","lastModifiedDate":"2021-04-03"},{"lineNumber":35,"author":{"gitId":"SimBowen"},"content":"            String day \u003d validDays.get(index);","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":"            ArrayList\u003cString\u003e schedule \u003d ui.getScheduleInfo();","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"            dailyRoute.addDailyRoute(day, schedule);","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"SimBowen"},"content":"            ui.showMessageWithDivider(String.format(MESSAGE_SUCCESS, day));","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"        } catch (InvalidIndexException | EmptyDailyRouteException e) {","lastModifiedDate":"2021-04-04"},{"lineNumber":40,"author":{"gitId":"SimBowen"},"content":"            ui.showMessageWithDivider(e.getMessage());","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"SimBowen"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"SimBowen"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"SimBowen":43}},{"path":"src/main/java/seedu/duke/command/dailyroutecommand/DeleteDailyRouteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"//@@author SimBowen","lastModifiedDate":"2021-04-05"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"package seedu.duke.command.dailyroutecommand;","lastModifiedDate":"2021-04-03"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2021-04-03"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"import seedu.duke.exception.EmptyDailyRouteException;","lastModifiedDate":"2021-04-03"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"import seedu.duke.exception.InvalidIndexException;","lastModifiedDate":"2021-04-03"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"import seedu.duke.ui.DailyRouteUi;","lastModifiedDate":"2021-04-03"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-03"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"/**","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":" * Deletes a daily schedule.","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":" */","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"public class DeleteDailyRouteCommand extends Command {","lastModifiedDate":"2021-04-05"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"    protected DailyRouteUi ui;","lastModifiedDate":"2021-04-03"},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"    private static String MESSAGE_SUCCESS \u003d \"Got it! Successfully cleared %s\u0027s schedule!\";","lastModifiedDate":"2021-04-03"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"    public DeleteDailyRouteCommand() {","lastModifiedDate":"2021-04-05"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"        this.ui \u003d new DailyRouteUi();","lastModifiedDate":"2021-04-03"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-04-03"},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"     * Gets the day specified by the user and deletes the corresponding schedule entry.","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"     * Success message is printed using ui at the end.","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"    @Override","lastModifiedDate":"2021-04-03"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"    public void execute() {","lastModifiedDate":"2021-04-03"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"        try {","lastModifiedDate":"2021-04-03"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":"            ArrayList\u003cString\u003e selectableDays \u003d dailyRoute.getSelectableDays();","lastModifiedDate":"2021-04-03"},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":"            int dayEntry \u003d ui.getDayEntry(selectableDays);","lastModifiedDate":"2021-04-03"},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":"            String selectedDay \u003d selectableDays.get(dayEntry);","lastModifiedDate":"2021-04-03"},{"lineNumber":34,"author":{"gitId":"SimBowen"},"content":"            dailyRoute.addDailyRoute(selectedDay, new ArrayList\u003c\u003e());","lastModifiedDate":"2021-04-03"},{"lineNumber":35,"author":{"gitId":"SimBowen"},"content":"            ui.showMessageWithDivider(String.format(MESSAGE_SUCCESS, selectedDay));","lastModifiedDate":"2021-04-03"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":"        } catch (InvalidIndexException | EmptyDailyRouteException e) {","lastModifiedDate":"2021-04-03"},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"            ui.showMessageWithDivider(e.getMessage());","lastModifiedDate":"2021-04-03"},{"lineNumber":38,"author":{"gitId":"SimBowen"},"content":"        }","lastModifiedDate":"2021-04-03"},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-04-03"},{"lineNumber":40,"author":{"gitId":"SimBowen"},"content":"}","lastModifiedDate":"2021-04-03"}],"authorContributionMap":{"SimBowen":40}},{"path":"src/main/java/seedu/duke/command/dailyroutecommand/ShowDailyRouteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"//@@author SimBowen","lastModifiedDate":"2021-04-03"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"package seedu.duke.command.dailyroutecommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"import seedu.duke.exception.EmptyDailyRouteException;","lastModifiedDate":"2021-04-03"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"import seedu.duke.exception.InvalidIndexException;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":"import seedu.duke.ui.DailyRouteUi;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"import seedu.duke.router.Router;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"/**","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":" * Shows a daily schedule.","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":" */","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"public class ShowDailyRouteCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"    protected DailyRouteUi ui;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"    public ShowDailyRouteCommand() {","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"        this.ui \u003d new DailyRouteUi();","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"     * Gets the day specified by the user outputs the routes to the locations.","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"     * Routes are printed using ui at the end.","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"    public void execute() {","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":"            ArrayList\u003cString\u003e selectableDays \u003d dailyRoute.getSelectableDays();","lastModifiedDate":"2021-04-03"},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":"            int dayEntry \u003d ui.getDayEntry(selectableDays);","lastModifiedDate":"2021-04-03"},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":"            String selectedDay \u003d selectableDays.get(dayEntry);","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"SimBowen"},"content":"            ArrayList\u003cString\u003e schedules \u003d dailyRoute.getDailyRoute(selectedDay);","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"SimBowen"},"content":"            ArrayList\u003cString\u003e scheduleRoutes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-05"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":"            scheduleRoutes.add(\"\");","lastModifiedDate":"2021-04-05"},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"            for (int i \u003d 0; i \u003c schedules.size() - 1; i++) {","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"SimBowen"},"content":"                scheduleRoutes.add(new Router().execute(nusMap, schedules.get(i), schedules.get(i + 1)));","lastModifiedDate":"2021-04-05"},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"SimBowen"},"content":"            ui.showDailyRoute(schedules, scheduleRoutes);","lastModifiedDate":"2021-04-05"},{"lineNumber":41,"author":{"gitId":"SimBowen"},"content":"        } catch (InvalidIndexException | EmptyDailyRouteException e) {","lastModifiedDate":"2021-04-03"},{"lineNumber":42,"author":{"gitId":"SimBowen"},"content":"            ui.showMessageWithDivider(e.getMessage());","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"SimBowen"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"SimBowen"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"SimBowen":45}},{"path":"src/main/java/seedu/duke/command/favouritecommand/AddFavouriteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rye98"},"content":"//@@author Rye98","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Rye98"},"content":"package seedu.duke.command.favouritecommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Rye98"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Rye98"},"content":"import seedu.duke.exception.InvalidBlockException;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Rye98"},"content":"import seedu.duke.exception.SameBlockException;","lastModifiedDate":"2021-04-04"},{"lineNumber":8,"author":{"gitId":"Rye98"},"content":"import seedu.duke.ui.FavouriteUi;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Rye98"},"content":"public class AddFavouriteCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Rye98"},"content":"    protected FavouriteUi ui;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Rye98"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Got it! Successfully added new favourite route!\";","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"Rye98"},"content":"    public AddFavouriteCommand() {","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"Rye98"},"content":"        this.ui \u003d new FavouriteUi();","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"Rye98"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"Rye98"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"Rye98"},"content":"     * This method adds a new favourite route to the list of favourite routes,","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"Rye98"},"content":"     * by prompting the user for the starting and destination blocks.","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"Rye98"},"content":"     * This method calls the checkIfValidBlock() method under NusMap class.","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"Rye98"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"Rye98"},"content":"    public void execute() {","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Rye98"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Rye98"},"content":"            String[] startAndDestination \u003d ui.getFavouriteInfo();","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"Rye98"},"content":"            nusMap.checkIfValidBlock(startAndDestination[0]);","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"Rye98"},"content":"            nusMap.checkIfValidBlock(startAndDestination[1]);","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"Rye98"},"content":"            favourite.addFavourite(startAndDestination[0], startAndDestination[1]);","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Rye98"},"content":"            ui.showMessageWithDivider(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"Rye98"},"content":"        } catch (InvalidBlockException | SameBlockException e) {","lastModifiedDate":"2021-04-04"},{"lineNumber":33,"author":{"gitId":"Rye98"},"content":"            ui.showMessageWithDivider(e.getMessage());","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"Rye98"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"Rye98"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"Rye98":36}},{"path":"src/main/java/seedu/duke/command/favouritecommand/DeleteFavouriteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rye98"},"content":"//@@author Rye98","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Rye98"},"content":"package seedu.duke.command.favouritecommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Rye98"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Rye98"},"content":"import seedu.duke.exception.EmptyFavouriteException;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Rye98"},"content":"import seedu.duke.exception.InvalidIndexException;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Rye98"},"content":"import seedu.duke.ui.FavouriteUi;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Rye98"},"content":"public class DeleteFavouriteCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Rye98"},"content":"    protected FavouriteUi ui;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Rye98"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Got it! Successfully deleted favourite route :)\";","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"Rye98"},"content":"    public DeleteFavouriteCommand() {","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"Rye98"},"content":"        this.ui \u003d new FavouriteUi();","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"Rye98"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"Rye98"},"content":"     * This method deletes a currently existing favourite route.","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"Rye98"},"content":"     * The user would first be shown the current list of favourites,","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"Rye98"},"content":"     * and then prompted to provide the index of the favourite route to delete.","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"Rye98"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"Rye98"},"content":"    public void execute() {","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"Rye98"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Rye98"},"content":"            ui.showFavourites(favourite);","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Rye98"},"content":"            int deleteIndex \u003d ui.getDeleteIndex();","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"Rye98"},"content":"            favourite.deleteFavourite(deleteIndex - 1);","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"Rye98"},"content":"            ui.showMessageWithDivider(MESSAGE_SUCCESS);","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"Rye98"},"content":"        } catch (EmptyFavouriteException | InvalidIndexException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Rye98"},"content":"            ui.showMessageWithDivider(e.getMessage());","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"Rye98"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"Rye98"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"Rye98":34}},{"path":"src/main/java/seedu/duke/command/favouritecommand/RepeatFavouriteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rye98"},"content":"//@@author Rye98","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Rye98"},"content":"package seedu.duke.command.favouritecommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Rye98"},"content":"import seedu.duke.exception.EmptyFavouriteException;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Rye98"},"content":"import seedu.duke.exception.InvalidIndexException;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Rye98"},"content":"import seedu.duke.router.Router;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Rye98"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"Rye98"},"content":"import seedu.duke.ui.FavouriteUi;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Rye98"},"content":"public class RepeatFavouriteCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Rye98"},"content":"    protected FavouriteUi ui;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"Rye98"},"content":"    public RepeatFavouriteCommand() {","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"Rye98"},"content":"        this.ui \u003d new FavouriteUi();","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Rye98"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"Rye98"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"Rye98"},"content":"     * This method will run the \"go\" command by using the stored starting block and destination block in favourites.","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"Rye98"},"content":"     * The user would first be shown the current list of favourite routes,","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"Rye98"},"content":"     * and then be prompted to enter the index of the route to repeat.","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"Rye98"},"content":"     *","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"Rye98"},"content":"     * This method further calls the execute() command from the Router class.","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"Rye98"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"Rye98"},"content":"    public void execute() {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Rye98"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"Rye98"},"content":"            ui.showFavourites(favourite);","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"Rye98"},"content":"            int repeatIndex \u003d ui.getRepeatIndex();","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"Rye98"},"content":"            String[] routeInfo \u003d favourite.getSpecificEntry(repeatIndex - 1);","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Rye98"},"content":"            String route \u003d new Router().execute(nusMap, routeInfo[0], routeInfo[1]);","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"Rye98"},"content":"            history.addHistory(routeInfo[0], routeInfo[1]);","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"Rye98"},"content":"            ui.showMessageWithDivider(route);","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"Rye98"},"content":"        } catch (EmptyFavouriteException | InvalidIndexException e) {","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"Rye98"},"content":"            ui.showMessageWithDivider(e.getMessage());","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"Rye98"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"Rye98"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"Rye98":38}},{"path":"src/main/java/seedu/duke/command/favouritecommand/ShowFavouriteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rye98"},"content":"//@@author Rye98","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Rye98"},"content":"package seedu.duke.command.favouritecommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Rye98"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Rye98"},"content":"import seedu.duke.exception.EmptyFavouriteException;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Rye98"},"content":"import seedu.duke.exception.InvalidIndexException;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Rye98"},"content":"import seedu.duke.ui.FavouriteUi;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Rye98"},"content":"public class ShowFavouriteCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Rye98"},"content":"    protected FavouriteUi ui;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"Rye98"},"content":"    public ShowFavouriteCommand() {","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"Rye98"},"content":"        this.ui \u003d new FavouriteUi();","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Rye98"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"Rye98"},"content":"     * This method displays the current list of favourite routes to the user.","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"Rye98"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"Rye98"},"content":"    public void execute() {","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"Rye98"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"Rye98"},"content":"            ui.showFavourites(favourite);","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"Rye98"},"content":"        } catch (EmptyFavouriteException | InvalidIndexException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"Rye98"},"content":"            ui.showMessageWithDivider(e.getMessage());","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Rye98"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"Rye98"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"Rye98":28}},{"path":"src/main/java/seedu/duke/command/generalcommand/ByeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package seedu.duke.command.generalcommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.ui.UiManager;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"/**","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":" * Terminates the program.","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":" */","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"    protected UiManager ui;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"    public ByeCommand() {","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"        this.ui \u003d new UiManager();","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"     * Overrides the {@link Command#isExit()} method to terminate the program.","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"        return true;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"    /** Prints out the ending message. */","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"wjchoi0712"},"content":"    public void execute() {","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"wjchoi0712"},"content":"        ui.showMessageWithDivider(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"wjchoi0712":30,"Rizavur":1}},{"path":"src/main/java/seedu/duke/command/generalcommand/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package seedu.duke.command.generalcommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.ui.UiManager;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"/**","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":" * Shows all the possible commands that the user can use.","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":" */","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"    protected UiManager ui;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"1.  go:\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"            + \"\\t\" + \"* finds the route to go from one block to another block or eatery\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"            + \"2.  history:\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"            + \"\\t\" + \"* lists past 10 route searches\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"            + \"3.  clear history:\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"            + \"\\t\" + \"* deletes all past route searches from history\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"            + \"4.  repeat history:\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"            + \"\\t\" + \"* repeats the past route search of your choice\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"            + \"5.  add alias:\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"            + \"\\t\" + \"* creates an alias for an existing block\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"            + \"6.  show alias:\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"            + \"\\t\" + \"* lists all aliases that are currently active\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"            + \"7.  delete alias:\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"            + \"\\t\" + \"* deletes an alias that was previously created\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"            + \"8.  add daily route:\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"            + \"\\t\" + \"* adds a schedule for the selected day\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"            + \"9.  show daily route:\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"wjchoi0712"},"content":"            + \"\\t\" + \"* shows the generated route for the schedule of the selected day\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"            + \"10. delete daily route:\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"            + \"\\t\" + \"* deletes the stored schedule based on the index number tagged to the day\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":"            + \"11. add note:\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":32,"author":{"gitId":"wjchoi0712"},"content":"            + \"\\t\" + \"* adds and tags a note to a particular location\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":"            + \"12. show notes:\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":34,"author":{"gitId":"wjchoi0712"},"content":"            + \"\\t\" + \"* list notes tagged to the given location\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"SimBowen"},"content":"            + \"13. delete note:\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":36,"author":{"gitId":"wjchoi0712"},"content":"            + \"\\t\" + \"* deletes notes based on index number tagged to the given location\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"            + \"14. add favourite:\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":38,"author":{"gitId":"Rye98"},"content":"            + \"\\t\" + \"* adds a favourite route\\n\"","lastModifiedDate":"2021-04-04"},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"            + \"15. show favourite:\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":40,"author":{"gitId":"Rye98"},"content":"            + \"\\t\" + \"* lists all favourite routes that were previously created\\n\"","lastModifiedDate":"2021-04-04"},{"lineNumber":41,"author":{"gitId":"SimBowen"},"content":"            + \"16. delete favourite:\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":42,"author":{"gitId":"Rye98"},"content":"            + \"\\t\" + \"* deletes a favourite route based on index number tagged to the route\\n\"","lastModifiedDate":"2021-04-04"},{"lineNumber":43,"author":{"gitId":"SimBowen"},"content":"            + \"17. show venues:\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":44,"author":{"gitId":"Rizavur"},"content":"            + \"\\t\" + \"* lists all possible venues that can be used in the application (excluding user\u0027s alias)\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":45,"author":{"gitId":"SimBowen"},"content":"            + \"18. bye:\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":46,"author":{"gitId":"wjchoi0712"},"content":"            + \"\\t\" + \"* exits the application\";","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"wjchoi0712"},"content":"    public HelpCommand() {","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"wjchoi0712"},"content":"        this.ui \u003d new UiManager();","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"wjchoi0712"},"content":"    /** Prints out the help message. */","lastModifiedDate":"2021-04-12"},{"lineNumber":53,"author":{"gitId":"wjchoi0712"},"content":"    public void execute() {","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"wjchoi0712"},"content":"        ui.showMessageWithDivider(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"SimBowen":13,"Rye98":3,"wjchoi0712":38,"Rizavur":2}},{"path":"src/main/java/seedu/duke/command/generalcommand/ShowVenuesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"package seedu.duke.command.generalcommand;","lastModifiedDate":"2021-04-05"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2021-04-05"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.ui.UiManager;","lastModifiedDate":"2021-04-05"},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"/**","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":" * Shows all possible venues.","lastModifiedDate":"2021-04-12"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":" */","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"public class ShowVenuesCommand extends Command {","lastModifiedDate":"2021-04-05"},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":"    protected UiManager ui;","lastModifiedDate":"2021-04-05"},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":"    private static final String TD \u003d \" | \";","lastModifiedDate":"2021-04-05"},{"lineNumber":12,"author":{"gitId":"Rizavur"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Venues in Engineering faculty:\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"            + \"1. E1  \" + TD + \"7.  E4 \" + TD + \"13. EW1 \" + TD + \"19. LT6        \" + TD + \"\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":14,"author":{"gitId":"Rizavur"},"content":"            + \"2. E1A \" + TD + \"8.  E4A\" + TD + \"14. EW1A\" + TD + \"20. LT7        \" + TD + \"\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":15,"author":{"gitId":"Rizavur"},"content":"            + \"3. E2  \" + TD + \"9.  E5 \" + TD + \"15. EW2 \" + TD + \"21. LT7A       \" + TD + \"\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":16,"author":{"gitId":"Rizavur"},"content":"            + \"4. E2A \" + TD + \"10. E6 \" + TD + \"16. LT1 \" + TD + \"22. IT         \" + TD + \"\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":17,"author":{"gitId":"Rizavur"},"content":"            + \"5. E3  \" + TD + \"11. E7 \" + TD + \"17. LT2 \" + TD + \"23. T-LAB      \" + TD + \"\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":18,"author":{"gitId":"Rizavur"},"content":"            + \"6. E3A \" + TD + \"12. EA \" + TD + \"18. LT5 \" + TD + \"24. TECHNO EDGE\" + TD + \"\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":19,"author":{"gitId":"Rizavur"},"content":"            + \"\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":20,"author":{"gitId":"Rizavur"},"content":"            + \"Links between Engineering and Computing faculties:\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":21,"author":{"gitId":"Rizavur"},"content":"            + \"1. LT3\" + TD + \"4. CENTRAL LIBRARY\" + TD + \"\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":22,"author":{"gitId":"Rizavur"},"content":"            + \"2. LT4\" + TD + \"5. CHINESE LIBRARY\" + TD + \"\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":23,"author":{"gitId":"Rizavur"},"content":"            + \"3. AS6\" + TD + \"\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":24,"author":{"gitId":"Rizavur"},"content":"            + \"\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":25,"author":{"gitId":"Rizavur"},"content":"            + \"Venues in Computing faculty:\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":26,"author":{"gitId":"Rizavur"},"content":"            + \"1. COM1\" + TD + \"4. LT16\" + TD + \"\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":27,"author":{"gitId":"Rizavur"},"content":"            + \"2. COM2\" + TD + \"5. LT17\" + TD + \"\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":28,"author":{"gitId":"Rizavur"},"content":"            + \"3. COM3\" + TD + \"\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":29,"author":{"gitId":"Rizavur"},"content":"            + \"\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":30,"author":{"gitId":"Rizavur"},"content":"            + \"Eateries:\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":31,"author":{"gitId":"Rizavur"},"content":"            + \"1. TECHNO EDGE CANTEEN\" + TD + \"5. SPINELLI COFFEE\" + TD + \"\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":32,"author":{"gitId":"Rizavur"},"content":"            + \"2. CHEERS MINIMART    \" + TD + \"6. MAXX COFFEE    \" + TD + \"\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":33,"author":{"gitId":"Rizavur"},"content":"            + \"3. ARISE \u0026 SHINE      \" + TD + \"7. STARBUCKS      \" + TD + \"\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":34,"author":{"gitId":"Rizavur"},"content":"            + \"4. PLATYPUS FOOD BAR  \" + TD;","lastModifiedDate":"2021-04-05"},{"lineNumber":35,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":36,"author":{"gitId":"Rizavur"},"content":"    public ShowVenuesCommand() {","lastModifiedDate":"2021-04-05"},{"lineNumber":37,"author":{"gitId":"Rizavur"},"content":"        this.ui \u003d new UiManager();","lastModifiedDate":"2021-04-05"},{"lineNumber":38,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":39,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":40,"author":{"gitId":"wjchoi0712"},"content":"    /** Prints out the all the venues stored in the application. */","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"Rizavur"},"content":"    public void execute() {","lastModifiedDate":"2021-04-05"},{"lineNumber":42,"author":{"gitId":"Rizavur"},"content":"        ui.showMessageWithDivider(MESSAGE_SUCCESS);","lastModifiedDate":"2021-04-05"},{"lineNumber":43,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":44,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-04-05"}],"authorContributionMap":{"wjchoi0712":4,"Rizavur":40}},{"path":"src/main/java/seedu/duke/command/historycommand/ClearHistoryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rye98"},"content":"//@@author Rye98","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Rye98"},"content":"package seedu.duke.command.historycommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Rye98"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Rye98"},"content":"import seedu.duke.ui.HistoryUi;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"Rye98"},"content":"public class ClearHistoryCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Rye98"},"content":"    protected HistoryUi ui;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Rye98"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Your history has been successfully cleared\";","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"Rye98"},"content":"    public ClearHistoryCommand() {","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"Rye98"},"content":"        this.ui \u003d new HistoryUi();","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Rye98"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"Rye98"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"Rye98"},"content":"     * This method deletes all existing data stored in history.","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"Rye98"},"content":"     * This method calls the clearHistory() method from the history class.","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"Rye98"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"Rye98"},"content":"    public void execute() {","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"Rye98"},"content":"        history.clearHistory();","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"Rye98"},"content":"        ui.showMessageWithDivider(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Rye98"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"Rye98":27}},{"path":"src/main/java/seedu/duke/command/historycommand/RepeatHistoryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rye98"},"content":"//@@author Rye98","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Rye98"},"content":"package seedu.duke.command.historycommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Rye98"},"content":"import seedu.duke.router.Router;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Rye98"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Rye98"},"content":"import seedu.duke.exception.EmptyHistoryException;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Rye98"},"content":"import seedu.duke.exception.InvalidIndexException;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"Rye98"},"content":"import seedu.duke.ui.HistoryUi;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Rye98"},"content":"public class RepeatHistoryCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Rye98"},"content":"    protected HistoryUi ui;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"Rye98"},"content":"    public RepeatHistoryCommand() {","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"Rye98"},"content":"        this.ui \u003d new HistoryUi();","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Rye98"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"Rye98"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"Rye98"},"content":"     * This method will attempt to repeat a \"go\" search using existing entries stored in history.","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"Rye98"},"content":"     * This method then prompts user for their input of the INDEX of stored history searches.","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"Rye98"},"content":"     *","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"Rye98"},"content":"     * This method further calls Router class\u0027 execute() method.","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"Rye98"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"Rye98"},"content":"    public void execute()  {","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Rye98"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Rye98"},"content":"            ui.showHistory(history);","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"Rye98"},"content":"            int entry \u003d ui.getRepeatIndex();","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"Rye98"},"content":"            String[] routeInfo \u003d history.getSpecificEntry(entry - 1);","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"Rye98"},"content":"            String route \u003d new Router().execute(nusMap, routeInfo[0], routeInfo[1]);","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"Rye98"},"content":"            ui.showMessageWithDivider(route);","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"Rye98"},"content":"            history.addHistory(routeInfo[0], routeInfo[1]);","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"Rye98"},"content":"        } catch (InvalidIndexException | EmptyHistoryException e) {","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"Rye98"},"content":"            ui.showMessageWithDivider(e.getMessage());","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"Rye98"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"Rye98"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"Rye98":37}},{"path":"src/main/java/seedu/duke/command/historycommand/ShowHistoryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rye98"},"content":"//@@author Rye98","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Rye98"},"content":"package seedu.duke.command.historycommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Rye98"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Rye98"},"content":"import seedu.duke.exception.EmptyHistoryException;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Rye98"},"content":"import seedu.duke.exception.InvalidIndexException;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Rye98"},"content":"import seedu.duke.ui.HistoryUi;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Rye98"},"content":"public class ShowHistoryCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Rye98"},"content":"    protected HistoryUi ui;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Rye98"},"content":"    public ShowHistoryCommand() {","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"Rye98"},"content":"        this.ui \u003d new HistoryUi();","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"Rye98"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Rye98"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"Rye98"},"content":"     * This method will display all records stored inside history to the user.","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"Rye98"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"Rye98"},"content":"    public void execute() {","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"Rye98"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"Rye98"},"content":"            ui.showHistory(history);","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"Rye98"},"content":"        } catch (InvalidIndexException | EmptyHistoryException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"Rye98"},"content":"            ui.showMessageWithDivider(e.getMessage());","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Rye98"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"Rye98"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"Rye98":28}},{"path":"src/main/java/seedu/duke/command/notecommand/AddNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KimIdeas8"},"content":"//@@author KimIdeas8","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"KimIdeas8"},"content":"package seedu.duke.command.notecommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.data.Block;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.exception.InvalidBlockException;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.exception.InvalidNoteException;","lastModifiedDate":"2021-04-04"},{"lineNumber":9,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.ui.NoteUi;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"KimIdeas8"},"content":"/**","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"KimIdeas8"},"content":" * Execution for add note command. A \u003ccode\u003eAddNoteCommand\u003c/code\u003e object corresponds to","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"KimIdeas8"},"content":" * a response to each input by the user for every \u0027add notes\u0027 command.","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"KimIdeas8"},"content":" */","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"KimIdeas8"},"content":"public class AddNoteCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"KimIdeas8"},"content":"    protected NoteUi ui;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"KimIdeas8"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Got it! Successfully added and tagged note to %s\";","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"KimIdeas8"},"content":"    public AddNoteCommand() {","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"KimIdeas8"},"content":"        this.ui \u003d new NoteUi();","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"KimIdeas8"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"KimIdeas8"},"content":"     * Adds notes to a block\u0027s list, based on user input.","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"KimIdeas8"},"content":"     * Returns error message if block doesn\u0027t exist or user input is empty.","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"KimIdeas8"},"content":"     *","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"KimIdeas8"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"KimIdeas8"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"KimIdeas8"},"content":"    public void execute() {","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"KimIdeas8"},"content":"        try {","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"KimIdeas8"},"content":"            String[] noteInfo \u003d ui.getNoteInfo();","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"KimIdeas8"},"content":"            assert noteInfo[0] !\u003d null : \"Block is not supposed to be null\";","lastModifiedDate":"2021-04-02"},{"lineNumber":34,"author":{"gitId":"KimIdeas8"},"content":"            assert noteInfo[1] !\u003d null : \"Added note is not supposed to be null\";","lastModifiedDate":"2021-04-02"},{"lineNumber":35,"author":{"gitId":"KimIdeas8"},"content":"            nusMap.checkIfValidBlock(noteInfo[0]);","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"KimIdeas8"},"content":"            nusMap.getBlock(noteInfo[0]).addNote(noteInfo[1]);","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"KimIdeas8"},"content":"            ui.showMessageWithDivider(String.format(MESSAGE_SUCCESS, noteInfo[0]));","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"KimIdeas8"},"content":"        } catch (InvalidBlockException | InvalidNoteException e) {","lastModifiedDate":"2021-04-04"},{"lineNumber":39,"author":{"gitId":"KimIdeas8"},"content":"            ui.showMessageWithDivider(e.getMessage());","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"KimIdeas8"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"KimIdeas8"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"KimIdeas8":42}},{"path":"src/main/java/seedu/duke/command/notecommand/DeleteNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KimIdeas8"},"content":"//@@author KimIdeas8","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"KimIdeas8"},"content":"package seedu.duke.command.notecommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.data.Block;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.exception.EmptyNoteException;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.exception.InvalidBlockException;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.exception.InvalidIndexException;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.ui.NoteUi;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"KimIdeas8"},"content":"/**","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"KimIdeas8"},"content":" * Execution for delete note command. A \u003ccode\u003eDeleteNoteCommand\u003c/code\u003e object corresponds to","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"KimIdeas8"},"content":" * a response to each input by the user for every \u0027delete notes\u0027 command.","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"KimIdeas8"},"content":" */","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"KimIdeas8"},"content":"public class DeleteNoteCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"KimIdeas8"},"content":"    protected NoteUi ui;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"KimIdeas8"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Got it! Successfully deleted note tagged to %s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"KimIdeas8"},"content":"    public DeleteNoteCommand() {","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"KimIdeas8"},"content":"        this.ui \u003d new NoteUi();","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"KimIdeas8"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"KimIdeas8"},"content":"     * Removes notes from a block\u0027s list, based on user input of selected note, if note and block exists.","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"KimIdeas8"},"content":"     * Returns error message if block doesn\u0027t exist or if note does not exist or index of note out of bounds.","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"KimIdeas8"},"content":"     *","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"KimIdeas8"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"KimIdeas8"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"KimIdeas8"},"content":"    public void execute() {","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"KimIdeas8"},"content":"        String deleteBlockInfo \u003d ui.getBlockInfo();","lastModifiedDate":"2021-04-02"},{"lineNumber":34,"author":{"gitId":"KimIdeas8"},"content":"        try {","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"KimIdeas8"},"content":"            nusMap.checkIfValidBlock(deleteBlockInfo);","lastModifiedDate":"2021-04-02"},{"lineNumber":36,"author":{"gitId":"KimIdeas8"},"content":"            Block block \u003d nusMap.getBlock(deleteBlockInfo);","lastModifiedDate":"2021-04-02"},{"lineNumber":37,"author":{"gitId":"KimIdeas8"},"content":"            ui.showNotes(block.getNotes());","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"KimIdeas8"},"content":"            int deleteIndex \u003d ui.getDeleteIndex();","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"KimIdeas8"},"content":"            block.deleteNote(deleteIndex - 1);","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"KimIdeas8"},"content":"            ui.showMessageWithDivider(String.format(MESSAGE_SUCCESS, deleteBlockInfo));","lastModifiedDate":"2021-04-02"},{"lineNumber":41,"author":{"gitId":"KimIdeas8"},"content":"        } catch (EmptyNoteException e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"KimIdeas8"},"content":"            ui.showMessageWithDivider(String.format(e.getMessage(), deleteBlockInfo));","lastModifiedDate":"2021-04-02"},{"lineNumber":43,"author":{"gitId":"KimIdeas8"},"content":"        } catch (InvalidIndexException | InvalidBlockException e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"KimIdeas8"},"content":"            ui.showMessageWithDivider(e.getMessage());","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"KimIdeas8"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"KimIdeas8"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"KimIdeas8":47}},{"path":"src/main/java/seedu/duke/command/notecommand/ShowNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KimIdeas8"},"content":"//@@author KimIdeas8","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"KimIdeas8"},"content":"package seedu.duke.command.notecommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.exception.EmptyNoteException;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.exception.InvalidBlockException;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.ui.NoteUi;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"KimIdeas8"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"KimIdeas8"},"content":"/**","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"KimIdeas8"},"content":" * Execution for show note command. A \u003ccode\u003eShowNoteCommand\u003c/code\u003e object corresponds to","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"KimIdeas8"},"content":" * a response to each input by the user for every \u0027show notes\u0027 command.","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"KimIdeas8"},"content":" */","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"KimIdeas8"},"content":"public class ShowNoteCommand extends Command {","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"KimIdeas8"},"content":"    protected NoteUi ui;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"KimIdeas8"},"content":"    public ShowNoteCommand() {","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"KimIdeas8"},"content":"        this.ui \u003d new NoteUi();","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"KimIdeas8"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"KimIdeas8"},"content":"     * Shows notes from a block\u0027s list, based on user input of selected block, if block exists.","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"KimIdeas8"},"content":"     * Returns error message if block doesn\u0027t exist or list of block is empty.","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"KimIdeas8"},"content":"     *","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"KimIdeas8"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"KimIdeas8"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"KimIdeas8"},"content":"    public void execute() {","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"KimIdeas8"},"content":"        String showBlockInfo \u003d ui.getBlockInfo();","lastModifiedDate":"2021-04-02"},{"lineNumber":32,"author":{"gitId":"KimIdeas8"},"content":"        try {","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"KimIdeas8"},"content":"            nusMap.checkIfValidBlock(showBlockInfo);","lastModifiedDate":"2021-04-02"},{"lineNumber":34,"author":{"gitId":"KimIdeas8"},"content":"            ArrayList\u003cString\u003e notes \u003d nusMap.getBlock(showBlockInfo).getNotes();","lastModifiedDate":"2021-04-02"},{"lineNumber":35,"author":{"gitId":"KimIdeas8"},"content":"            ui.showNotes(notes);","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"KimIdeas8"},"content":"        } catch (EmptyNoteException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"KimIdeas8"},"content":"            ui.showMessageWithDivider(String.format(e.getMessage(), showBlockInfo));","lastModifiedDate":"2021-04-02"},{"lineNumber":38,"author":{"gitId":"KimIdeas8"},"content":"        } catch (InvalidBlockException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"KimIdeas8"},"content":"            ui.showMessageWithDivider(e.getMessage());","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"KimIdeas8"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"KimIdeas8"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"KimIdeas8":43}},{"path":"src/main/java/seedu/duke/command/routecommand/GoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package seedu.duke.command.routecommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.data.EateryList;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.exception.InvalidIndexException;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.exception.SameBlockException;","lastModifiedDate":"2021-04-04"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.router.Router;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.exception.InvalidBlockException;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.ui.RouterUi;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"/**","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":" * Finds out the shortest route between two blocks.","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":" */","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"public class GoCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"    protected RouterUi ui;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"    public GoCommand() {","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"        this.ui \u003d new RouterUi();","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"     * Takes in two location from the the user and finds out the shortest route between them.","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"     * When eatery is inputted as the parameter for destination block, it prints out eatery list and takes","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"     * in entry from the user to conduct routing.","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":"    public void execute() {","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"wjchoi0712"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"wjchoi0712"},"content":"            String[] routeInfo \u003d ui.getRoutingInfo();","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"wjchoi0712"},"content":"            String[] startAndDestination \u003d blockAlias.changeAliasToBlock(routeInfo[0], routeInfo[1]);","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"wjchoi0712"},"content":"            nusMap.checkIfValidBlock(startAndDestination[0]);","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"wjchoi0712"},"content":"            if (startAndDestination[1].equals(\"EATERY\")) {","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"wjchoi0712"},"content":"                EateryList eateryList \u003d new EateryList(nusMap, startAndDestination[0]);","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"wjchoi0712"},"content":"                eateryList.sortEateriesByDistance();","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"wjchoi0712"},"content":"                int eateryIndex \u003d ui.getEateryIndex(eateryList.getEateries());","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"wjchoi0712"},"content":"                startAndDestination[1] \u003d eateryList.getSpecificEatery(eateryIndex - 1).getName();","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"wjchoi0712"},"content":"            } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"wjchoi0712"},"content":"                nusMap.checkIfValidBlock(startAndDestination[1]);","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"wjchoi0712"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"wjchoi0712"},"content":"            assert startAndDestination[0] !\u003d null \u0026\u0026 startAndDestination[1] !\u003d null;","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"wjchoi0712"},"content":"            if (startAndDestination[0].equals(startAndDestination[1])) {","lastModifiedDate":"2021-04-05"},{"lineNumber":42,"author":{"gitId":"wjchoi0712"},"content":"                throw new SameBlockException();","lastModifiedDate":"2021-04-05"},{"lineNumber":43,"author":{"gitId":"wjchoi0712"},"content":"            }","lastModifiedDate":"2021-04-05"},{"lineNumber":44,"author":{"gitId":"wjchoi0712"},"content":"            String route \u003d new Router().execute(nusMap, startAndDestination[0], startAndDestination[1]);","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"wjchoi0712"},"content":"            history.addHistory(startAndDestination[0], startAndDestination[1]);","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"wjchoi0712"},"content":"            ui.showMessageWithDivider(route);","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"wjchoi0712"},"content":"        } catch (InvalidBlockException | InvalidIndexException | SameBlockException e) {","lastModifiedDate":"2021-04-04"},{"lineNumber":48,"author":{"gitId":"wjchoi0712"},"content":"            ui.showMessageWithDivider(e.getMessage());","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"KimIdeas8":2,"wjchoi0712":49}},{"path":"src/main/java/seedu/duke/data/Block.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package seedu.duke.data;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.exception.EmptyNoteException;","lastModifiedDate":"2021-04-02"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.exception.InvalidIndexException;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.exception.InvalidNoteException;","lastModifiedDate":"2021-04-05"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"/**","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":" * Represents a location in the {@link NusMap}.","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":" */","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"public class Block {","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"    private String name;","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"    private boolean isVisited;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"    private ArrayList\u003cBlock\u003e neighbours;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"    private ArrayList\u003cString\u003e notes;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"    private int distanceFromStart;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"    public Block(String name) {","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"        this.isVisited \u003d false;","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"        this.neighbours \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"        this.notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"        this.distanceFromStart \u003d 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"wjchoi0712"},"content":"    /** Returns the name of the block. */","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"wjchoi0712"},"content":"    public String getName() {","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"wjchoi0712"},"content":"        return name;","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"wjchoi0712"},"content":"    /** Checks whether the block has been visited. */","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"wjchoi0712"},"content":"    public boolean isVisited() {","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"wjchoi0712"},"content":"        return isVisited;","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"wjchoi0712"},"content":"    /** Sets the block as visited. */","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"wjchoi0712"},"content":"    public void setAsVisited() {","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"wjchoi0712"},"content":"        this.isVisited \u003d true;","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"wjchoi0712"},"content":"    /** Sets the block as not visited. */","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"wjchoi0712"},"content":"    public void setAsNotVisited() {","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"wjchoi0712"},"content":"        this.isVisited \u003d false;","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"wjchoi0712"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"wjchoi0712"},"content":"     * Checks whether two blocks are the same.","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"wjchoi0712"},"content":"     *","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"wjchoi0712"},"content":"     * @param block the block to be compared","lastModifiedDate":"2021-04-12"},{"lineNumber":53,"author":{"gitId":"wjchoi0712"},"content":"     * @return true if the block have the same name.","lastModifiedDate":"2021-04-12"},{"lineNumber":54,"author":{"gitId":"wjchoi0712"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":55,"author":{"gitId":"wjchoi0712"},"content":"    public boolean isSameBlock(Block block) {","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"wjchoi0712"},"content":"        return this.name.equals(block.name);","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"wjchoi0712"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":60,"author":{"gitId":"wjchoi0712"},"content":"     * Adds new neighbour to a block.","lastModifiedDate":"2021-04-12"},{"lineNumber":61,"author":{"gitId":"wjchoi0712"},"content":"     *","lastModifiedDate":"2021-04-12"},{"lineNumber":62,"author":{"gitId":"wjchoi0712"},"content":"     * @param block neighbouring block.","lastModifiedDate":"2021-04-12"},{"lineNumber":63,"author":{"gitId":"wjchoi0712"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":64,"author":{"gitId":"wjchoi0712"},"content":"    public void addNeighbour(Block block) {","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"wjchoi0712"},"content":"        neighbours.add(block);","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"wjchoi0712"},"content":"    /** Returns a list of neighbouring blocks. */","lastModifiedDate":"2021-04-12"},{"lineNumber":69,"author":{"gitId":"KimIdeas8"},"content":"    public ArrayList\u003cBlock\u003e getNeighbours() {","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"KimIdeas8"},"content":"        return neighbours;","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"wjchoi0712"},"content":"    /** Returns list of notes tagged to the block. */","lastModifiedDate":"2021-04-12"},{"lineNumber":74,"author":{"gitId":"wjchoi0712"},"content":"    public ArrayList\u003cString\u003e getNotes() {","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"wjchoi0712"},"content":"        return notes;","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"KimIdeas8"},"content":"    public int getDistanceFromStart() {","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"KimIdeas8"},"content":"        return distanceFromStart;","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":83,"author":{"gitId":"KimIdeas8"},"content":"    public void setDistanceFromStart(int distanceFromStart) {","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"KimIdeas8"},"content":"        this.distanceFromStart \u003d distanceFromStart;","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":88,"author":{"gitId":"wjchoi0712"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":89,"author":{"gitId":"wjchoi0712"},"content":"     * Adds note about a block.","lastModifiedDate":"2021-04-12"},{"lineNumber":90,"author":{"gitId":"wjchoi0712"},"content":"     *","lastModifiedDate":"2021-04-12"},{"lineNumber":91,"author":{"gitId":"wjchoi0712"},"content":"     * @param note note to be added","lastModifiedDate":"2021-04-12"},{"lineNumber":92,"author":{"gitId":"wjchoi0712"},"content":"     * @throws InvalidNoteException if the note is empty","lastModifiedDate":"2021-04-12"},{"lineNumber":93,"author":{"gitId":"wjchoi0712"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":94,"author":{"gitId":"wjchoi0712"},"content":"    public void addNote(String note) throws InvalidNoteException {","lastModifiedDate":"2021-04-05"},{"lineNumber":95,"author":{"gitId":"wjchoi0712"},"content":"        if (note.isBlank() || note.contains(\"/\")) {","lastModifiedDate":"2021-04-12"},{"lineNumber":96,"author":{"gitId":"wjchoi0712"},"content":"            throw new InvalidNoteException();","lastModifiedDate":"2021-04-05"},{"lineNumber":97,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":98,"author":{"gitId":"wjchoi0712"},"content":"        this.notes.add(note);","lastModifiedDate":"2021-04-01"},{"lineNumber":99,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":101,"author":{"gitId":"wjchoi0712"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":102,"author":{"gitId":"wjchoi0712"},"content":"     * Deletes note tagged to a block.","lastModifiedDate":"2021-04-12"},{"lineNumber":103,"author":{"gitId":"wjchoi0712"},"content":"     *","lastModifiedDate":"2021-04-12"},{"lineNumber":104,"author":{"gitId":"wjchoi0712"},"content":"     * @param index the note number to be deleted","lastModifiedDate":"2021-04-12"},{"lineNumber":105,"author":{"gitId":"wjchoi0712"},"content":"     * @throws InvalidIndexException if the index is out of bounds of the note list","lastModifiedDate":"2021-04-12"},{"lineNumber":106,"author":{"gitId":"wjchoi0712"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":107,"author":{"gitId":"wjchoi0712"},"content":"    public void deleteNote(int index) throws InvalidIndexException {","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"wjchoi0712"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"wjchoi0712"},"content":"            notes.remove(index);","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"KimIdeas8"},"content":"            assert (index \u003e\u003d 0 \u0026 index \u003c\u003d notes.size()) : \"Index is out of bounds\";","lastModifiedDate":"2021-04-02"},{"lineNumber":111,"author":{"gitId":"wjchoi0712"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"wjchoi0712"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"KimIdeas8"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":114,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":115,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"KimIdeas8":21,"wjchoi0712":94}},{"path":"src/main/java/seedu/duke/data/BlockAlias.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"//@@author Rizavur","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"package seedu.duke.data;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.exception.InvalidAliasException;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.exception.NoAliasNameException;","lastModifiedDate":"2021-04-05"},{"lineNumber":7,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":"public class BlockAlias {","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":"    private final HashMap\u003cString, String\u003e aliases;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"    public BlockAlias() {","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"Rizavur"},"content":"        this.aliases \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"Rizavur"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"Rizavur"},"content":"     * Returns the hash map containing all the aliases and block pairs.","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"Rizavur"},"content":"     * @return The hash map containing all the aliases and block pairs is returned.","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"Rizavur"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"Rizavur"},"content":"    public HashMap\u003cString, String\u003e getAliasHashMap() {","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"Rizavur"},"content":"        return aliases;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"Rizavur"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"Rizavur"},"content":"     * Returns the boolean value on whether the alias hashmap is empty.","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"Rizavur"},"content":"     * @return A boolean value on whether the alias hashmap is empty is returned.","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"Rizavur"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"Rizavur"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"Rizavur"},"content":"        return aliases.isEmpty();","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"Rizavur"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"Rizavur"},"content":"     * This method adds the new alias that was specified by the user into the alias hashmap.","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"Rizavur"},"content":"     * @param block The block name.","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"Rizavur"},"content":"     * @param alias The alias name.","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"Rizavur"},"content":"     * @throws InvalidAliasException If alias is the same as a block or an alias of the same name already exists.","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"Rizavur"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"Rizavur"},"content":"    public void addAlias(String block, String alias) throws InvalidAliasException {","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"Rizavur"},"content":"        if (!isValidAlias(alias)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"Rizavur"},"content":"            throw new InvalidAliasException();","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"Rizavur"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"Rizavur"},"content":"        aliases.put(alias, block);","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"Rizavur"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"Rizavur"},"content":"     * Returns a boolean value on whether the alias is valid or not.","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"Rizavur"},"content":"     * @param alias The alias that is to be checked if valid.","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"Rizavur"},"content":"     * @return A boolean value of whether the alias is valid.","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"Rizavur"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"Rizavur"},"content":"    public boolean isValidAlias(String alias) {","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"Rizavur"},"content":"        NusMap nusMap \u003d new NusMap();","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"Rizavur"},"content":"        return (!aliases.containsKey(alias)","lastModifiedDate":"2021-04-05"},{"lineNumber":54,"author":{"gitId":"Rizavur"},"content":"                \u0026\u0026 nusMap.getBlock(alias) \u003d\u003d null","lastModifiedDate":"2021-04-05"},{"lineNumber":55,"author":{"gitId":"Rizavur"},"content":"                \u0026\u0026 !alias.equalsIgnoreCase(\"eatery\")","lastModifiedDate":"2021-04-05"},{"lineNumber":56,"author":{"gitId":"Rizavur"},"content":"                \u0026\u0026 !alias.equals(\"\"))","lastModifiedDate":"2021-04-12"},{"lineNumber":57,"author":{"gitId":"Rizavur"},"content":"                \u0026\u0026 !alias.contains(\"/\");","lastModifiedDate":"2021-04-12"},{"lineNumber":58,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"Rizavur"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":61,"author":{"gitId":"Rizavur"},"content":"     * This method checks and converts the alias name back to the block name when being called in the routing function.","lastModifiedDate":"2021-04-12"},{"lineNumber":62,"author":{"gitId":"Rizavur"},"content":"     * @param from The from block that was input in the routing command by the user.","lastModifiedDate":"2021-04-12"},{"lineNumber":63,"author":{"gitId":"Rizavur"},"content":"     * @param to The to block that was input in the routing command by the user.","lastModifiedDate":"2021-04-12"},{"lineNumber":64,"author":{"gitId":"Rizavur"},"content":"     * @return An array of strings where the converted from block is stored in the first index and the converted to","lastModifiedDate":"2021-04-12"},{"lineNumber":65,"author":{"gitId":"Rizavur"},"content":"     *          block is stored in the second index.","lastModifiedDate":"2021-04-12"},{"lineNumber":66,"author":{"gitId":"Rizavur"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":67,"author":{"gitId":"Rizavur"},"content":"    public String[] changeAliasToBlock(String from, String to) {","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"Rizavur"},"content":"        String[] blockNames \u003d {from, to};","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"Rizavur"},"content":"        if (aliases.containsKey(from)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"Rizavur"},"content":"            blockNames[0] \u003d aliases.get(from);","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"Rizavur"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"Rizavur"},"content":"        if (aliases.containsKey(to)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"Rizavur"},"content":"            blockNames[1] \u003d aliases.get(to);","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"Rizavur"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"Rizavur"},"content":"        return blockNames;","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"Rizavur"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":79,"author":{"gitId":"Rizavur"},"content":"     * This method deletes the specified alias from the alias hashmap.","lastModifiedDate":"2021-04-12"},{"lineNumber":80,"author":{"gitId":"Rizavur"},"content":"     * @param alias The alias that is to be deleted.","lastModifiedDate":"2021-04-12"},{"lineNumber":81,"author":{"gitId":"Rizavur"},"content":"     * @throws NoAliasNameException If the alias name cannot be found in the alias hashmap.","lastModifiedDate":"2021-04-12"},{"lineNumber":82,"author":{"gitId":"Rizavur"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":83,"author":{"gitId":"Rizavur"},"content":"    public void deleteAlias(String alias) throws NoAliasNameException {","lastModifiedDate":"2021-04-05"},{"lineNumber":84,"author":{"gitId":"Rizavur"},"content":"        if (aliases.containsKey(alias)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"Rizavur"},"content":"            aliases.remove(alias);","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"Rizavur"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"Rizavur"},"content":"            throw new NoAliasNameException();","lastModifiedDate":"2021-04-05"},{"lineNumber":88,"author":{"gitId":"Rizavur"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"Rizavur":90}},{"path":"src/main/java/seedu/duke/data/DailyRoute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package seedu.duke.data;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"import java.util.List;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"public class DailyRoute {","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"    private HashMap\u003cString, ArrayList\u003cString\u003e\u003e dailyRoutes;","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":"    private final ArrayList\u003cString\u003e days \u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"            new ArrayList\u003c\u003e(List.of(\"MONDAY\", \"TUESDAY\", \"WEDNESDAY\", \"THURSDAY\", \"FRIDAY\", \"SATURDAY\", \"SUNDAY\"));","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"    private boolean[] selectableDays \u003d {false,false,false,false,false,false,false};","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"    public DailyRoute() {","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"        this.dailyRoutes \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"        this.dailyRoutes.put(\"MONDAY\", new ArrayList\u003c\u003e());","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"        this.dailyRoutes.put(\"TUESDAY\", new ArrayList\u003c\u003e());","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"        this.dailyRoutes.put(\"WEDNESDAY\", new ArrayList\u003c\u003e());","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"        this.dailyRoutes.put(\"THURSDAY\", new ArrayList\u003c\u003e());","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"        this.dailyRoutes.put(\"FRIDAY\", new ArrayList\u003c\u003e());","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"        this.dailyRoutes.put(\"SATURDAY\", new ArrayList\u003c\u003e());","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"        this.dailyRoutes.put(\"SUNDAY\", new ArrayList\u003c\u003e());","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"     * maps the day to the inputted schedule.","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"     * @param day is the day input from the user.","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"     * @param blocks is the schedule input from the user.","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"    public void addDailyRoute(String day, ArrayList\u003cString\u003e blocks) {","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"wjchoi0712"},"content":"        dailyRoutes.replace(day, blocks);","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":"        int index \u003d days.indexOf(day);","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":"        selectableDays[index] \u003d blocks.size() !\u003d 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"     * Returns the schedule to the inputted day.","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"SimBowen"},"content":"     * @param day  is the day input from the user.","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"wjchoi0712"},"content":"    public ArrayList\u003cString\u003e getDailyRoute(String day) {","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"wjchoi0712"},"content":"        return dailyRoutes.get(day);","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"SimBowen"},"content":"     * Returns the days that have schedules mapped to them.","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"SimBowen"},"content":"    public ArrayList\u003cString\u003e getSelectableDays() {","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"SimBowen"},"content":"        ArrayList\u003cString\u003e daysFound \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"SimBowen"},"content":"        for (int i \u003d 0; i \u003c 7; i++) {","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"SimBowen"},"content":"            if (selectableDays[i]) {","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"SimBowen"},"content":"                daysFound.add(days.get(i));","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"SimBowen"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"SimBowen"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"SimBowen"},"content":"        return daysFound;","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":58,"author":{"gitId":"SimBowen"},"content":"     * Returns the days in the week.","lastModifiedDate":"2021-04-12"},{"lineNumber":59,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":60,"author":{"gitId":"SimBowen"},"content":"    public ArrayList\u003cString\u003e getValidDays() {","lastModifiedDate":"2021-03-26"},{"lineNumber":61,"author":{"gitId":"SimBowen"},"content":"        return days;","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"SimBowen"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"SimBowen":61,"wjchoi0712":4}},{"path":"src/main/java/seedu/duke/data/EateryList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package seedu.duke.data;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.exception.InvalidIndexException;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.router.Router;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"import java.util.LinkedList;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"/**","lastModifiedDate":"2021-04-12"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":" * Represents a list of eateries in {@link NusMap}.","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":" */","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"public class EateryList {","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"    private Block[] eateries;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"    public EateryList(NusMap nusMap, String from) {","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"        this.eateries \u003d new Block[7];","lastModifiedDate":"2021-04-06"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"        setRouteLengths(nusMap, from);","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"        setEateries(nusMap);","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"    /** Returns the list of eateries. */","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"    public Block[] getEateries() {","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"        return eateries;","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"     * Returns a eatery at specific index.","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":"     *","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"wjchoi0712"},"content":"     * @param index eatery index to be returned","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"wjchoi0712"},"content":"     * @return the eatery at specific index","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"wjchoi0712"},"content":"     * @throws InvalidIndexException if the index is greater than 7 or smaller than 0","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"wjchoi0712"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"wjchoi0712"},"content":"    public Block getSpecificEatery(int index) throws InvalidIndexException {","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"wjchoi0712"},"content":"        if (index \u003e 7 || index \u003c 0) {","lastModifiedDate":"2021-04-06"},{"lineNumber":34,"author":{"gitId":"wjchoi0712"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"wjchoi0712"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"wjchoi0712"},"content":"            return eateries[index];","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"wjchoi0712"},"content":"    /** Sets the distance from Starting block to a particular eatery. */","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"wjchoi0712"},"content":"    public void setRouteLengths(NusMap nusMap, String from) {","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"wjchoi0712"},"content":"        new Router().findShortestRoute(nusMap, new LinkedList\u003c\u003e(), from, \"TECHNO EDGE CANTEEN\");","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"wjchoi0712"},"content":"        new Router().findShortestRoute(nusMap, new LinkedList\u003c\u003e(), from, \"CHEERS MINIMART\");","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"wjchoi0712"},"content":"        new Router().findShortestRoute(nusMap, new LinkedList\u003c\u003e(), from, \"ARISE \u0026 SHINE\");","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"wjchoi0712"},"content":"        new Router().findShortestRoute(nusMap, new LinkedList\u003c\u003e(), from, \"PLATYPUS FOOD BAR\");","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"wjchoi0712"},"content":"        new Router().findShortestRoute(nusMap, new LinkedList\u003c\u003e(), from, \"SPINELLI COFFEE\");","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"wjchoi0712"},"content":"        new Router().findShortestRoute(nusMap, new LinkedList\u003c\u003e(), from, \"MAXX COFFEE\");","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"wjchoi0712"},"content":"        new Router().findShortestRoute(nusMap, new LinkedList\u003c\u003e(), from, \"STARBUCKS\");","lastModifiedDate":"2021-04-06"},{"lineNumber":49,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":50,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"wjchoi0712"},"content":"    /** Sets the eatery list. */","lastModifiedDate":"2021-04-12"},{"lineNumber":53,"author":{"gitId":"wjchoi0712"},"content":"    public void setEateries(NusMap nusMap) {","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"wjchoi0712"},"content":"        eateries[0] \u003d nusMap.getBlock(\"TECHNO EDGE CANTEEN\");","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"wjchoi0712"},"content":"        eateries[1] \u003d nusMap.getBlock(\"CHEERS MINIMART\");","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"wjchoi0712"},"content":"        eateries[2] \u003d nusMap.getBlock(\"ARISE \u0026 SHINE\");","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"wjchoi0712"},"content":"        eateries[3] \u003d nusMap.getBlock(\"PLATYPUS FOOD BAR\");","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"wjchoi0712"},"content":"        eateries[4] \u003d nusMap.getBlock(\"SPINELLI COFFEE\");","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"SimBowen"},"content":"        eateries[5] \u003d nusMap.getBlock(\"MAXX COFFEE\");","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"wjchoi0712"},"content":"        eateries[6] \u003d nusMap.getBlock(\"STARBUCKS\");","lastModifiedDate":"2021-04-06"},{"lineNumber":61,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"wjchoi0712"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":64,"author":{"gitId":"wjchoi0712"},"content":"     * Sorts the eatery list using the {@link Block#getDistanceFromStart()} values.","lastModifiedDate":"2021-04-12"},{"lineNumber":65,"author":{"gitId":"wjchoi0712"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":66,"author":{"gitId":"wjchoi0712"},"content":"    public void sortEateriesByDistance() {","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"wjchoi0712"},"content":"        for (int i \u003d 0; i \u003c eateries.length - 1; i++) {","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"wjchoi0712"},"content":"            for (int j \u003d 0; j \u003c eateries.length - 1 - i; j++) {","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"wjchoi0712"},"content":"                if (eateries[j].getDistanceFromStart() \u003e eateries[j + 1].getDistanceFromStart()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"wjchoi0712"},"content":"                    Block temp \u003d eateries[j];","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"wjchoi0712"},"content":"                    eateries[j] \u003d eateries[j + 1];","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"wjchoi0712"},"content":"                    eateries[j + 1] \u003d temp;","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"wjchoi0712"},"content":"                }","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"wjchoi0712"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"SimBowen":1,"wjchoi0712":76}},{"path":"src/main/java/seedu/duke/data/Favourite.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rye98"},"content":"//@@author Rye98","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Rye98"},"content":"package seedu.duke.data;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Rye98"},"content":"import seedu.duke.exception.InvalidIndexException;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Rye98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"Rye98"},"content":"public class Favourite {","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Rye98"},"content":"    public ArrayList\u003cString[]\u003e favourites;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Rye98"},"content":"    public Favourite() {","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"Rye98"},"content":"        this.favourites \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"Rye98"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Rye98"},"content":"        return favourites.isEmpty();","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"Rye98"},"content":"    public int getFavouriteSize() {","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"Rye98"},"content":"        return favourites.size();","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"Rye98"},"content":"    public void addFavourite(String start, String destination) {","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"Rye98"},"content":"        favourites.add(new String[]{start, destination});","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"Rye98"},"content":"    public String[] getSpecificEntry(int index) throws InvalidIndexException {","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"Rye98"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Rye98"},"content":"            return favourites.get(index);","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"Rye98"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"Rye98"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"Rye98"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"Rye98"},"content":"    public void deleteFavourite(int index) throws InvalidIndexException {","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"Rye98"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"Rye98"},"content":"            favourites.remove(index);","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"Rye98"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"Rye98"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"Rye98"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"Rye98"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"Rye98":44}},{"path":"src/main/java/seedu/duke/data/History.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rye98"},"content":"//@@author Rye98","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Rye98"},"content":"package seedu.duke.data;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Rye98"},"content":"import seedu.duke.exception.InvalidIndexException;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Rye98"},"content":"import java.util.LinkedList;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"Rye98"},"content":"public class History {","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Rye98"},"content":"    private LinkedList\u003cString[]\u003e history;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Rye98"},"content":"    private final int maximumNoOfHistory \u003d 10;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Rye98"},"content":"    public History() {","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"Rye98"},"content":"        this.history \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"Rye98"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Rye98"},"content":"        return history.isEmpty();","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"Rye98"},"content":"    public boolean isFull() {","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"Rye98"},"content":"        return history.size() \u003d\u003d maximumNoOfHistory;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"Rye98"},"content":"    public int getHistorySize() {","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Rye98"},"content":"        return history.size();","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"Rye98"},"content":"    public void addHistory(String start, String destination) {","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"Rye98"},"content":"        if (isFull()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Rye98"},"content":"            history.remove();","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"Rye98"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"Rye98"},"content":"        history.add(new String[]{start, destination});","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"Rye98"},"content":"    public String[] getSpecificEntry(int index) throws InvalidIndexException {","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"Rye98"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"Rye98"},"content":"            return history.get(index);","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"Rye98"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"Rye98"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"Rye98"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"Rye98"},"content":"    public void clearHistory() {","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"Rye98"},"content":"        history.clear();","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"Rye98"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"Rye98":48}},{"path":"src/main/java/seedu/duke/data/NusMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package seedu.duke.data;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.exception.InvalidBlockException;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"public class NusMap {","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"    private HashMap\u003cString, Block\u003e map;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"     * Initializes the map of NUS.","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"    public NusMap() {","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"        this.map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"        initValidBlocks();","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"        initRelationships();","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":"     * Returns the block object.","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"     * @param name is the name of the block.","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"    public Block getBlock(String name) {","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"        return map.get(name);","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"     * Check if the block is a valid block.","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":"     * @param name  is the block input by the user.","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"wjchoi0712"},"content":"    public void checkIfValidBlock(String name) throws InvalidBlockException {","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"wjchoi0712"},"content":"        if (map.get(name) \u003d\u003d null) {","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"wjchoi0712"},"content":"            throw new InvalidBlockException();","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"SimBowen"},"content":"     * Adds a new block into the map.","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"SimBowen"},"content":"     * @param name is the name of the block.","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"wjchoi0712"},"content":"    public void addBlock(String name) {","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"wjchoi0712"},"content":"        map.put(name, new Block(name));","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"SimBowen"},"content":"     * Adds a bidirectional  edge between two blocks.","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"SimBowen"},"content":"     * @param a is one of the blocks.","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"SimBowen"},"content":"     * @param b is the other block.","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"wjchoi0712"},"content":"    public void addRelationship(String a, String b) {","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"wjchoi0712"},"content":"        map.get(a).addNeighbour(map.get(b));","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"wjchoi0712"},"content":"        map.get(b).addNeighbour(map.get(a));","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":58,"author":{"gitId":"SimBowen"},"content":"     * reset all the visited flags for all block objects.","lastModifiedDate":"2021-04-12"},{"lineNumber":59,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":60,"author":{"gitId":"wjchoi0712"},"content":"    public void resetVisitedFlag() {","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"wjchoi0712"},"content":"        for (Block block : map.values()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"wjchoi0712"},"content":"            block.setAsNotVisited();","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":67,"author":{"gitId":"SimBowen"},"content":"     * Gets all the blocks.","lastModifiedDate":"2021-04-12"},{"lineNumber":68,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":69,"author":{"gitId":"wjchoi0712"},"content":"    public Collection\u003cBlock\u003e getValues() {","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"wjchoi0712"},"content":"        return map.values();","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":74,"author":{"gitId":"SimBowen"},"content":"     * Add all the blocks.","lastModifiedDate":"2021-04-12"},{"lineNumber":75,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":76,"author":{"gitId":"SimBowen"},"content":"    public void initValidBlocks() {","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"E1\");","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"E1A\");","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"E2\");","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"E2A\");","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"E3\");","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"E3A\");","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"E4\");","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"E4A\");","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"E5\");","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"E6\");","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"E7\");","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"EA\");","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"EW1\");","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"EW1A\");","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"EW2\");","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"LT1\");","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"LT2\");","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"LT5\");","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"LT6\");","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"LT7\");","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"LT7A\");","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"IT\");","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"T-LAB\");","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"TECHNO EDGE\");","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"wjchoi0712"},"content":"        addBlock(\"TECHNO EDGE CANTEEN\");","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"wjchoi0712"},"content":"        addBlock(\"CHEERS MINIMART\");","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"wjchoi0712"},"content":"        addBlock(\"ARISE \u0026 SHINE\");","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"wjchoi0712"},"content":"        addBlock(\"PLATYPUS FOOD BAR\");","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"wjchoi0712"},"content":"        addBlock(\"SPINELLI COFFEE\");","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"LT3\");","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"LT4\");","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"CHINESE LIBRARY\");","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"CENTRAL LIBRARY\");","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"AS6\");","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"COM1\");","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"COM2\");","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"COM3\");","lastModifiedDate":"2021-03-28"},{"lineNumber":114,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"LT16\");","lastModifiedDate":"2021-03-28"},{"lineNumber":115,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"LT17\");","lastModifiedDate":"2021-03-28"},{"lineNumber":116,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"MAXX COFFEE\");","lastModifiedDate":"2021-03-28"},{"lineNumber":117,"author":{"gitId":"SimBowen"},"content":"        addBlock(\"STARBUCKS\");","lastModifiedDate":"2021-03-28"},{"lineNumber":118,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":121,"author":{"gitId":"SimBowen"},"content":"     * Construct the map by adding edges between all the blocks.","lastModifiedDate":"2021-04-12"},{"lineNumber":122,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":123,"author":{"gitId":"SimBowen"},"content":"    public void initRelationships() {","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"EW1\", \"E1\");","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"E1\", \"LT5\");","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"E1\", \"E1A\");","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"E1\", \"E2\");","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"LT5\", \"TECHNO EDGE\");","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"E1A\", \"EA\");","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"EA\", \"EW1A\");","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"EA\", \"LT7A\");","lastModifiedDate":"2021-03-16"},{"lineNumber":132,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"EA\", \"LT7\");","lastModifiedDate":"2021-03-16"},{"lineNumber":133,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"E2\", \"E1A\");","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"E2\", \"EA\");","lastModifiedDate":"2021-03-16"},{"lineNumber":135,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"E2\", \"E2A\");","lastModifiedDate":"2021-03-16"},{"lineNumber":136,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"E2\", \"LT1\");","lastModifiedDate":"2021-03-16"},{"lineNumber":137,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"E2\", \"LT2\");","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"LT5\", \"E3\");","lastModifiedDate":"2021-03-16"},{"lineNumber":139,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"E3\", \"LT6\");","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"E2\", \"E3\");","lastModifiedDate":"2021-03-16"},{"lineNumber":141,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"E3\", \"T-LAB\");","lastModifiedDate":"2021-03-16"},{"lineNumber":142,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"E3\", \"E4\");","lastModifiedDate":"2021-03-16"},{"lineNumber":143,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"E4\", \"E5\");","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"E4\", \"E4A\");","lastModifiedDate":"2021-03-16"},{"lineNumber":145,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"E5\", \"IT\");","lastModifiedDate":"2021-03-16"},{"lineNumber":146,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"EA\", \"E3A\");","lastModifiedDate":"2021-03-16"},{"lineNumber":147,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"E4A\", \"EW2\");","lastModifiedDate":"2021-03-16"},{"lineNumber":148,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"EW2\", \"E6\");","lastModifiedDate":"2021-03-16"},{"lineNumber":149,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"E6\", \"E7\");","lastModifiedDate":"2021-03-16"},{"lineNumber":150,"author":{"gitId":"wjchoi0712"},"content":"        addRelationship(\"TECHNO EDGE\", \"TECHNO EDGE CANTEEN\");","lastModifiedDate":"2021-03-24"},{"lineNumber":151,"author":{"gitId":"wjchoi0712"},"content":"        addRelationship(\"E3\", \"CHEERS MINIMART\");","lastModifiedDate":"2021-03-24"},{"lineNumber":152,"author":{"gitId":"wjchoi0712"},"content":"        addRelationship(\"E4\", \"ARISE \u0026 SHINE\");","lastModifiedDate":"2021-03-24"},{"lineNumber":153,"author":{"gitId":"wjchoi0712"},"content":"        addRelationship(\"E2A\", \"PLATYPUS FOOD BAR\");","lastModifiedDate":"2021-03-24"},{"lineNumber":154,"author":{"gitId":"wjchoi0712"},"content":"        addRelationship(\"EA\",\"SPINELLI COFFEE\");","lastModifiedDate":"2021-03-24"},{"lineNumber":155,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"TECHNO EDGE\",\"STARBUCKS\");","lastModifiedDate":"2021-03-28"},{"lineNumber":156,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"LT3\",\"E5\");","lastModifiedDate":"2021-03-28"},{"lineNumber":157,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"LT3\",\"IT\");","lastModifiedDate":"2021-03-28"},{"lineNumber":158,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"LT3\",\"LT4\");","lastModifiedDate":"2021-03-28"},{"lineNumber":159,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"LT3\",\"CHINESE LIBRARY\");","lastModifiedDate":"2021-03-28"},{"lineNumber":160,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"CHINESE LIBRARY\",\"CENTRAL LIBRARY\");","lastModifiedDate":"2021-03-28"},{"lineNumber":161,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"CENTRAL LIBRARY\",\"AS6\");","lastModifiedDate":"2021-03-28"},{"lineNumber":162,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"CENTRAL LIBRARY\",\"MAXX COFFEE\");","lastModifiedDate":"2021-03-28"},{"lineNumber":163,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"AS6\",\"COM1\");","lastModifiedDate":"2021-03-28"},{"lineNumber":164,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"COM1\",\"COM3\");","lastModifiedDate":"2021-03-28"},{"lineNumber":165,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"COM1\",\"LT16\");","lastModifiedDate":"2021-03-28"},{"lineNumber":166,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"COM1\",\"LT17\");","lastModifiedDate":"2021-03-28"},{"lineNumber":167,"author":{"gitId":"SimBowen"},"content":"        addRelationship(\"COM1\",\"COM2\");","lastModifiedDate":"2021-03-28"},{"lineNumber":168,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":169,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"KimIdeas8":1,"SimBowen":115,"wjchoi0712":52,"Rizavur":1}},{"path":"src/main/java/seedu/duke/exception/EmptyAliasesException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"//@@author Rizavur","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":"public class EmptyAliasesException extends NusMazeException {","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Rizavur"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":"        return \"You haven\u0027t set any aliases yet!\";","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"Rizavur":10}},{"path":"src/main/java/seedu/duke/exception/EmptyDailyRouteException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-04-03"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public class EmptyDailyRouteException extends NusMazeException {","lastModifiedDate":"2021-04-03"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"    @Override","lastModifiedDate":"2021-04-03"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"    public String getMessage() {","lastModifiedDate":"2021-04-03"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"        return \"Oops! You haven\u0027t planned any daily routes yet :(\";","lastModifiedDate":"2021-04-03"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-04-03"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-04-03"}],"authorContributionMap":{"wjchoi0712":8}},{"path":"src/main/java/seedu/duke/exception/EmptyFavouriteException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rye98"},"content":"//@@author Rye98","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Rye98"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Rye98"},"content":"public class EmptyFavouriteException extends NusMazeException {","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Rye98"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Rye98"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Rye98"},"content":"        return \"You haven\u0027t set any favourite routes yet!\";","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Rye98"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"Rye98":10}},{"path":"src/main/java/seedu/duke/exception/EmptyHistoryException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rye98"},"content":"//@@author Rye98","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Rye98"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Rye98"},"content":"public class EmptyHistoryException extends NusMazeException {","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Rye98"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Rye98"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Rye98"},"content":"        return \"Oops! You have no past history!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Rye98"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"Rye98":10}},{"path":"src/main/java/seedu/duke/exception/EmptyNoteException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KimIdeas8"},"content":"//@@author KimIdeas8","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"KimIdeas8"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"KimIdeas8"},"content":"public class EmptyNoteException extends NusMazeException {","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"KimIdeas8"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"KimIdeas8"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"KimIdeas8"},"content":"        return \"Oops! There are no notes tagged to %s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"KimIdeas8"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"KimIdeas8":10}},{"path":"src/main/java/seedu/duke/exception/InvalidAliasException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"//@@author Rizavur","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":"public class InvalidAliasException extends NusMazeException {","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"Rizavur"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":"        return \"Invalid alias! Please enter the command again to retry! \\n\"","lastModifiedDate":"2021-04-04"},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"                + \"Here are some possible reasons for this error:\\n\"","lastModifiedDate":"2021-04-04"},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":"                + \"- Adding an alias name that already exits.\\n\"","lastModifiedDate":"2021-04-04"},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":"                + \"- Adding a block name as an alias name.\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":12,"author":{"gitId":"Rizavur"},"content":"                + \"- Empty alias or block name. \\n\"","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"                + \"- Usage of \\\"/\\\"\";","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"Rizavur":15}},{"path":"src/main/java/seedu/duke/exception/InvalidBlockException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public class InvalidBlockException extends NusMazeException {","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"        return \"Invalid block! Please try again with a block that exists :(\";","lastModifiedDate":"2021-04-05"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"wjchoi0712":8}},{"path":"src/main/java/seedu/duke/exception/InvalidCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public class InvalidCommandException extends NusMazeException {","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"        return \"OOPS! I\u0027m sorry but I don\u0027t understand your command :(\";","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"wjchoi0712":8}},{"path":"src/main/java/seedu/duke/exception/InvalidDailyRouteException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-04-05"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public class InvalidDailyRouteException extends NusMazeException {","lastModifiedDate":"2021-04-05"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"    @Override","lastModifiedDate":"2021-04-05"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"    public String getMessage() {","lastModifiedDate":"2021-04-05"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"        return \"Invalid Block! Daily route requires at least one location for each schedule!\";","lastModifiedDate":"2021-04-05"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-04-05"}],"authorContributionMap":{"wjchoi0712":8}},{"path":"src/main/java/seedu/duke/exception/InvalidFilePathException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public class InvalidFilePathException extends StorageOperationException {","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"    public String getMessage() {","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"        return \"Oops! An Error occurred while creating directory or file :(\";","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"wjchoi0712":8}},{"path":"src/main/java/seedu/duke/exception/InvalidIndexException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public class InvalidIndexException extends NusMazeException {","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"    public String getMessage() {","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"        return \"Oops! You must enter an Integer that is within the bounds :(\";","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"wjchoi0712":8}},{"path":"src/main/java/seedu/duke/exception/InvalidNoteException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public class InvalidNoteException extends NusMazeException {","lastModifiedDate":"2021-04-04"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"    @Override","lastModifiedDate":"2021-04-04"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"    public String getMessage() {","lastModifiedDate":"2021-04-04"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"        return \"Your note description cannot be empty or contain \\\"/\\\". Please try the command again :)\";","lastModifiedDate":"2021-04-12"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-04-04"}],"authorContributionMap":{"wjchoi0712":8}},{"path":"src/main/java/seedu/duke/exception/LoadDataException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public class LoadDataException extends StorageOperationException {","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"    public String getMessage() {","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"        return \"[ ] An Error occurred while loading %s data. It has been cleared to default!\";","lastModifiedDate":"2021-04-04"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"wjchoi0712":8}},{"path":"src/main/java/seedu/duke/exception/NoAliasNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-04-05"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public class NoAliasNameException extends NusMazeException {","lastModifiedDate":"2021-04-05"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"    @Override","lastModifiedDate":"2021-04-05"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"    public String getMessage() {","lastModifiedDate":"2021-04-05"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"        return \"Invalid alias! Please enter an alias name that exists!\";","lastModifiedDate":"2021-04-05"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-04-05"}],"authorContributionMap":{"wjchoi0712":8}},{"path":"src/main/java/seedu/duke/exception/NusMazeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public class NusMazeException extends Exception {","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"wjchoi0712":4}},{"path":"src/main/java/seedu/duke/exception/RepeatedBlockException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-04-05"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"public class RepeatedBlockException extends NusMazeException {","lastModifiedDate":"2021-04-05"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":"    @Override","lastModifiedDate":"2021-04-05"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"    public String getMessage() {","lastModifiedDate":"2021-04-05"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"        return \"Repeated block! Please enter a different block!\";","lastModifiedDate":"2021-04-05"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"}","lastModifiedDate":"2021-04-05"}],"authorContributionMap":{"SimBowen":7,"wjchoi0712":1}},{"path":"src/main/java/seedu/duke/exception/SameBlockException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public class SameBlockException extends NusMazeException {","lastModifiedDate":"2021-04-04"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"    @Override","lastModifiedDate":"2021-04-04"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"    public String getMessage() {","lastModifiedDate":"2021-04-04"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"        return \"Invalid Blocks! Your start and destination block is the same!\";","lastModifiedDate":"2021-04-04"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-04-04"}],"authorContributionMap":{"wjchoi0712":8}},{"path":"src/main/java/seedu/duke/exception/SaveDataException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public class SaveDataException extends StorageOperationException {","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"    public String getMessage() {","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"        return \"Oops! An Error occurred while saving current data :(\";","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"wjchoi0712":8}},{"path":"src/main/java/seedu/duke/exception/StorageOperationException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package seedu.duke.exception;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"public abstract class StorageOperationException extends NusMazeException {","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"wjchoi0712":4}},{"path":"src/main/java/seedu/duke/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"import seedu.duke.command.dailyroutecommand.DeleteDailyRouteCommand;","lastModifiedDate":"2021-04-05"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.generalcommand.ByeCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.generalcommand.HelpCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.aliascommand.AddCustomAliasCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.aliascommand.DeleteCustomAliasCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.aliascommand.ShowCustomAliasCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.dailyroutecommand.AddDailyRouteCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.dailyroutecommand.ShowDailyRouteCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.favouritecommand.AddFavouriteCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.favouritecommand.DeleteFavouriteCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.favouritecommand.RepeatFavouriteCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.favouritecommand.ShowFavouriteCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.command.generalcommand.ShowVenuesCommand;","lastModifiedDate":"2021-04-05"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.historycommand.ClearHistoryCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.historycommand.RepeatHistoryCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.historycommand.ShowHistoryCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.notecommand.AddNoteCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.notecommand.DeleteNoteCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.notecommand.ShowNoteCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.routecommand.GoCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.exception.InvalidCommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"/**","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":" * Parses user input.","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"wjchoi0712"},"content":" */","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"wjchoi0712"},"content":"public class Parser {","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"wjchoi0712"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"wjchoi0712"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"wjchoi0712"},"content":"     *","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"wjchoi0712"},"content":"     * @param userInput full user input string","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"wjchoi0712"},"content":"     * @return the command based on the user input","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"wjchoi0712"},"content":"     * @throws InvalidCommandException if user command is not one of the command type that the program can execute","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"wjchoi0712"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"wjchoi0712"},"content":"    public static Command prepareForCommandExecution(String userInput) throws InvalidCommandException {","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"Rizavur"},"content":"        assert userInput !\u003d null : \"User input cannot be null\";","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"wjchoi0712"},"content":"        Command command;","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"wjchoi0712"},"content":"        String filteredUserInput \u003d userInput.trim().toLowerCase();","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"Rizavur"},"content":"        switch (filteredUserInput) {","lastModifiedDate":"2021-04-05"},{"lineNumber":43,"author":{"gitId":"Rizavur"},"content":"        case \"bye\":","lastModifiedDate":"2021-04-05"},{"lineNumber":44,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d new ByeCommand();","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"Rizavur"},"content":"            break;","lastModifiedDate":"2021-04-05"},{"lineNumber":46,"author":{"gitId":"Rizavur"},"content":"        case \"help\":","lastModifiedDate":"2021-04-05"},{"lineNumber":47,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d new HelpCommand();","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"Rizavur"},"content":"            break;","lastModifiedDate":"2021-04-05"},{"lineNumber":49,"author":{"gitId":"Rizavur"},"content":"        case \"show venues\":","lastModifiedDate":"2021-04-05"},{"lineNumber":50,"author":{"gitId":"Rizavur"},"content":"            command \u003d new ShowVenuesCommand();","lastModifiedDate":"2021-04-05"},{"lineNumber":51,"author":{"gitId":"Rizavur"},"content":"            break;","lastModifiedDate":"2021-04-05"},{"lineNumber":52,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"wjchoi0712"},"content":"            //route","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"Rizavur"},"content":"        case \"go\":","lastModifiedDate":"2021-04-05"},{"lineNumber":55,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d new GoCommand();","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"Rizavur"},"content":"            break;","lastModifiedDate":"2021-04-05"},{"lineNumber":57,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"wjchoi0712"},"content":"            //alias","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"Rizavur"},"content":"        case \"add alias\":","lastModifiedDate":"2021-04-05"},{"lineNumber":60,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d new AddCustomAliasCommand();","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"Rizavur"},"content":"            break;","lastModifiedDate":"2021-04-05"},{"lineNumber":62,"author":{"gitId":"Rizavur"},"content":"        case \"show alias\":","lastModifiedDate":"2021-04-05"},{"lineNumber":63,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d new ShowCustomAliasCommand();","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"Rizavur"},"content":"            break;","lastModifiedDate":"2021-04-05"},{"lineNumber":65,"author":{"gitId":"Rizavur"},"content":"        case \"delete alias\":","lastModifiedDate":"2021-04-05"},{"lineNumber":66,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d new DeleteCustomAliasCommand();","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"Rizavur"},"content":"            break;","lastModifiedDate":"2021-04-05"},{"lineNumber":68,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"wjchoi0712"},"content":"            //history","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"Rizavur"},"content":"        case \"history\":","lastModifiedDate":"2021-04-05"},{"lineNumber":71,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d new ShowHistoryCommand();","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"Rizavur"},"content":"            break;","lastModifiedDate":"2021-04-05"},{"lineNumber":73,"author":{"gitId":"Rizavur"},"content":"        case \"repeat history\":","lastModifiedDate":"2021-04-05"},{"lineNumber":74,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d new RepeatHistoryCommand();","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"Rizavur"},"content":"            break;","lastModifiedDate":"2021-04-05"},{"lineNumber":76,"author":{"gitId":"Rizavur"},"content":"        case \"clear history\":","lastModifiedDate":"2021-04-05"},{"lineNumber":77,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d new ClearHistoryCommand();","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"Rizavur"},"content":"            break;","lastModifiedDate":"2021-04-05"},{"lineNumber":79,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"wjchoi0712"},"content":"            //favourite","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"Rizavur"},"content":"        case \"show favourite\":","lastModifiedDate":"2021-04-05"},{"lineNumber":82,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d new ShowFavouriteCommand();","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"Rizavur"},"content":"            break;","lastModifiedDate":"2021-04-05"},{"lineNumber":84,"author":{"gitId":"Rizavur"},"content":"        case \"add favourite\":","lastModifiedDate":"2021-04-05"},{"lineNumber":85,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d new AddFavouriteCommand();","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"Rizavur"},"content":"            break;","lastModifiedDate":"2021-04-05"},{"lineNumber":87,"author":{"gitId":"Rizavur"},"content":"        case \"delete favourite\":","lastModifiedDate":"2021-04-05"},{"lineNumber":88,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d new DeleteFavouriteCommand();","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"Rizavur"},"content":"            break;","lastModifiedDate":"2021-04-05"},{"lineNumber":90,"author":{"gitId":"Rizavur"},"content":"        case \"repeat favourite\":","lastModifiedDate":"2021-04-05"},{"lineNumber":91,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d new RepeatFavouriteCommand();","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"Rizavur"},"content":"            break;","lastModifiedDate":"2021-04-05"},{"lineNumber":93,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"wjchoi0712"},"content":"            //daily route","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"Rizavur"},"content":"        case \"add daily route\":","lastModifiedDate":"2021-04-05"},{"lineNumber":96,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d new AddDailyRouteCommand();","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"Rizavur"},"content":"            break;","lastModifiedDate":"2021-04-05"},{"lineNumber":98,"author":{"gitId":"Rizavur"},"content":"        case \"show daily route\":","lastModifiedDate":"2021-04-05"},{"lineNumber":99,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d new ShowDailyRouteCommand();","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"Rizavur"},"content":"            break;","lastModifiedDate":"2021-04-05"},{"lineNumber":101,"author":{"gitId":"SimBowen"},"content":"        case \"delete daily route\":","lastModifiedDate":"2021-04-05"},{"lineNumber":102,"author":{"gitId":"SimBowen"},"content":"            command \u003d new DeleteDailyRouteCommand();","lastModifiedDate":"2021-04-05"},{"lineNumber":103,"author":{"gitId":"Rizavur"},"content":"            break;","lastModifiedDate":"2021-04-05"},{"lineNumber":104,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"wjchoi0712"},"content":"            //note","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"Rizavur"},"content":"        case \"add note\":","lastModifiedDate":"2021-04-05"},{"lineNumber":107,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d new AddNoteCommand();","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"Rizavur"},"content":"            break;","lastModifiedDate":"2021-04-05"},{"lineNumber":109,"author":{"gitId":"Rizavur"},"content":"        case \"show note\":","lastModifiedDate":"2021-04-05"},{"lineNumber":110,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d new ShowNoteCommand();","lastModifiedDate":"2021-04-01"},{"lineNumber":111,"author":{"gitId":"Rizavur"},"content":"            break;","lastModifiedDate":"2021-04-05"},{"lineNumber":112,"author":{"gitId":"Rizavur"},"content":"        case \"delete note\":","lastModifiedDate":"2021-04-05"},{"lineNumber":113,"author":{"gitId":"wjchoi0712"},"content":"            command \u003d new DeleteNoteCommand();","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"Rizavur"},"content":"            break;","lastModifiedDate":"2021-04-05"},{"lineNumber":115,"author":{"gitId":"Rizavur"},"content":"        default:","lastModifiedDate":"2021-04-05"},{"lineNumber":116,"author":{"gitId":"wjchoi0712"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"wjchoi0712"},"content":"        return command;","lastModifiedDate":"2021-03-15"},{"lineNumber":119,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":120,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"SimBowen":3,"wjchoi0712":73,"Rizavur":44}},{"path":"src/main/java/seedu/duke/router/Router.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"//@@author SimBowen","lastModifiedDate":"2021-04-03"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"package seedu.duke.router;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"import seedu.duke.data.Block;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"import seedu.duke.data.NusMap;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"import java.util.LinkedList;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"public class Router {","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"     * Returns a route between 2 locations.","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"     * @param nusMap is the initialized NUS map.","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"     * @param from is the block to route from.","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"     * @param to is the block to route to.","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"    public String execute(NusMap nusMap, String from, String to) {","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"        assert from !\u003d null : \"From block cannot be null\";","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":"        assert to !\u003d null : \"Destination block cannot be null\";","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"        LinkedList\u003cBlock\u003e route \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"        findShortestRoute(nusMap, route, from, to);","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"        return getRouteAsString(route);","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"     * This prepares data for the routing algorithm and the blocks returned from the algorithm to route.","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"     * @param nusMap is the initialized NUS map.","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":"     * @param route holds the route from the routing algorithm.","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":"     * @param from is the block to route from.","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":"     * @param to is the block to route to.","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"SimBowen"},"content":"    public void findShortestRoute(NusMap nusMap, LinkedList\u003cBlock\u003e route, String from, String to) {","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":"        nusMap.resetVisitedFlag();","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"        Block start \u003d nusMap.getBlock(from);","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"SimBowen"},"content":"        Block destination \u003d nusMap.getBlock(to);","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"        HashMap\u003cBlock, Block\u003e predecessor \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"SimBowen"},"content":"        bfs(nusMap, predecessor, start, destination);","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"SimBowen"},"content":"        Block crawl \u003d destination;","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"SimBowen"},"content":"        route.add(crawl);","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"SimBowen"},"content":"        while (predecessor.containsKey(crawl)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"SimBowen"},"content":"            route.add(predecessor.get(crawl));","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"SimBowen"},"content":"            crawl \u003d predecessor.get(crawl);","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"SimBowen"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"SimBowen"},"content":"        nusMap.getBlock(to).setDistanceFromStart(route.size());","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"SimBowen"},"content":"     * This is the modified BFS routing algorithm.","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"SimBowen"},"content":"     * @param nusMap is the initialized NUS map.","lastModifiedDate":"2021-04-12"},{"lineNumber":53,"author":{"gitId":"SimBowen"},"content":"     * @param predecessor previously visited blocks.","lastModifiedDate":"2021-04-12"},{"lineNumber":54,"author":{"gitId":"SimBowen"},"content":"     * @param start is the block to route from.","lastModifiedDate":"2021-04-12"},{"lineNumber":55,"author":{"gitId":"SimBowen"},"content":"     * @param destination is the block to route to.","lastModifiedDate":"2021-04-12"},{"lineNumber":56,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":57,"author":{"gitId":"SimBowen"},"content":"    public static void bfs(NusMap nusMap, HashMap\u003cBlock, Block\u003e predecessor, Block start, Block destination) {","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"SimBowen"},"content":"        LinkedList\u003cBlock\u003e queue \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"SimBowen"},"content":"        queue.add(start);","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"SimBowen"},"content":"        start.setAsVisited();","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"SimBowen"},"content":"        while (!queue.isEmpty()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"SimBowen"},"content":"            Block currentBlock \u003d queue.poll();","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"SimBowen"},"content":"            ArrayList\u003cBlock\u003e neighbours \u003d nusMap.getBlock(currentBlock.getName()).getNeighbours();","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"SimBowen"},"content":"            for (Block neighbour : neighbours) {","lastModifiedDate":"2021-03-11"},{"lineNumber":65,"author":{"gitId":"SimBowen"},"content":"                if (!neighbour.isVisited()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":66,"author":{"gitId":"SimBowen"},"content":"                    neighbour.setAsVisited();","lastModifiedDate":"2021-03-11"},{"lineNumber":67,"author":{"gitId":"SimBowen"},"content":"                    predecessor.put(neighbour, currentBlock);","lastModifiedDate":"2021-03-11"},{"lineNumber":68,"author":{"gitId":"SimBowen"},"content":"                    queue.add(neighbour);","lastModifiedDate":"2021-03-11"},{"lineNumber":69,"author":{"gitId":"SimBowen"},"content":"                    if (neighbour.isSameBlock(destination)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":70,"author":{"gitId":"SimBowen"},"content":"                        break;","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"SimBowen"},"content":"                    }","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"SimBowen"},"content":"                }","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"SimBowen"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":74,"author":{"gitId":"SimBowen"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":75,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":76,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":78,"author":{"gitId":"SimBowen"},"content":"     * This returns the route as a string.","lastModifiedDate":"2021-04-12"},{"lineNumber":79,"author":{"gitId":"SimBowen"},"content":"     * @param route is the arraylist of blocks in the route.","lastModifiedDate":"2021-04-12"},{"lineNumber":80,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":81,"author":{"gitId":"SimBowen"},"content":"    public String getRouteAsString(LinkedList\u003cBlock\u003e route) {","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"SimBowen"},"content":"        StringBuilder routeAsString \u003d new StringBuilder();","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"SimBowen"},"content":"        routeAsString.append(\"Route: \");","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"SimBowen"},"content":"        for (int i \u003d route.size() - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2021-04-01"},{"lineNumber":85,"author":{"gitId":"SimBowen"},"content":"            if (i \u003e 0) {","lastModifiedDate":"2021-04-01"},{"lineNumber":86,"author":{"gitId":"SimBowen"},"content":"                routeAsString.append(route.get(i).getName()).append(\" -\u003e \");","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"SimBowen"},"content":"            } else {","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"SimBowen"},"content":"                routeAsString.append(route.get(i).getName());","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"SimBowen"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":90,"author":{"gitId":"SimBowen"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":91,"author":{"gitId":"SimBowen"},"content":"        return routeAsString.toString();","lastModifiedDate":"2021-04-01"},{"lineNumber":92,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":93,"author":{"gitId":"SimBowen"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"SimBowen":93}},{"path":"src/main/java/seedu/duke/storage/DataDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.data.DailyRoute;","lastModifiedDate":"2021-04-04"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.data.NusMap;","lastModifiedDate":"2021-04-04"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.exception.InvalidBlockException;","lastModifiedDate":"2021-04-04"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.exception.LoadDataException;","lastModifiedDate":"2021-04-04"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-04"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"/**","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":" * Decodes the encoded data in the storage file.","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":" */","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"public interface DataDecoder {","lastModifiedDate":"2021-04-03"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"     * Decodes history or favourite list data.","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"     *","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"     * @param encodedData data to be decoded","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"     * @param nusMap nusMap","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"     * @return decoded data","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"     * @throws LoadDataException if there are invalid blocks in the encoded data","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"    default String[] decodeHistoryAndFavouriteData(String encodedData, NusMap nusMap) throws LoadDataException {","lastModifiedDate":"2021-04-04"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"        try {","lastModifiedDate":"2021-04-04"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"            String[] decodedData \u003d encodedData.split(\"/\");","lastModifiedDate":"2021-04-04"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"            checkIfValidLength(decodedData);","lastModifiedDate":"2021-04-04"},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":"            for (int i \u003d 0; i \u003c decodedData.length; i++) {","lastModifiedDate":"2021-04-04"},{"lineNumber":28,"author":{"gitId":"wjchoi0712"},"content":"                nusMap.checkIfValidBlock(decodedData[i]);","lastModifiedDate":"2021-04-04"},{"lineNumber":29,"author":{"gitId":"wjchoi0712"},"content":"            }","lastModifiedDate":"2021-04-04"},{"lineNumber":30,"author":{"gitId":"wjchoi0712"},"content":"            return decodedData;","lastModifiedDate":"2021-04-04"},{"lineNumber":31,"author":{"gitId":"wjchoi0712"},"content":"        } catch (InvalidBlockException e) {","lastModifiedDate":"2021-04-04"},{"lineNumber":32,"author":{"gitId":"wjchoi0712"},"content":"            throw new LoadDataException();","lastModifiedDate":"2021-04-04"},{"lineNumber":33,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":34,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":35,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":36,"author":{"gitId":"wjchoi0712"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"wjchoi0712"},"content":"     * Decodes Alias list or note data.","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"wjchoi0712"},"content":"     *","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"wjchoi0712"},"content":"     * @param encodedData data to be decoded","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"wjchoi0712"},"content":"     * @param nusMap nusMap","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"wjchoi0712"},"content":"     * @return decoded data","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"wjchoi0712"},"content":"     * @throws LoadDataException if there are invalid blocks in the encoded data","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"wjchoi0712"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"wjchoi0712"},"content":"    default String[] decodeAliasAndNoteData(String encodedData, NusMap nusMap) throws LoadDataException {","lastModifiedDate":"2021-04-04"},{"lineNumber":45,"author":{"gitId":"wjchoi0712"},"content":"        try {","lastModifiedDate":"2021-04-04"},{"lineNumber":46,"author":{"gitId":"wjchoi0712"},"content":"            String[] decodedData \u003d encodedData.split(\"/\");","lastModifiedDate":"2021-04-04"},{"lineNumber":47,"author":{"gitId":"wjchoi0712"},"content":"            checkIfValidLength(decodedData);","lastModifiedDate":"2021-04-04"},{"lineNumber":48,"author":{"gitId":"wjchoi0712"},"content":"            nusMap.checkIfValidBlock(decodedData[0]);","lastModifiedDate":"2021-04-04"},{"lineNumber":49,"author":{"gitId":"wjchoi0712"},"content":"            return decodedData;","lastModifiedDate":"2021-04-04"},{"lineNumber":50,"author":{"gitId":"wjchoi0712"},"content":"        } catch (InvalidBlockException e) {","lastModifiedDate":"2021-04-04"},{"lineNumber":51,"author":{"gitId":"wjchoi0712"},"content":"            throw new LoadDataException();","lastModifiedDate":"2021-04-04"},{"lineNumber":52,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":53,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":54,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":55,"author":{"gitId":"wjchoi0712"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":56,"author":{"gitId":"wjchoi0712"},"content":"     * Decodes daily route data.","lastModifiedDate":"2021-04-12"},{"lineNumber":57,"author":{"gitId":"wjchoi0712"},"content":"     *","lastModifiedDate":"2021-04-12"},{"lineNumber":58,"author":{"gitId":"wjchoi0712"},"content":"     * @param encodedData data to be decoded","lastModifiedDate":"2021-04-12"},{"lineNumber":59,"author":{"gitId":"wjchoi0712"},"content":"     * @param nusMap nusMap","lastModifiedDate":"2021-04-12"},{"lineNumber":60,"author":{"gitId":"wjchoi0712"},"content":"     * @return decoded data","lastModifiedDate":"2021-04-12"},{"lineNumber":61,"author":{"gitId":"wjchoi0712"},"content":"     * @throws LoadDataException if there are invalid blocks in the encoded data","lastModifiedDate":"2021-04-12"},{"lineNumber":62,"author":{"gitId":"wjchoi0712"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":63,"author":{"gitId":"wjchoi0712"},"content":"    default String[] decodeDailyRouteData(String encodedData, NusMap nusMap, DailyRoute dailyRoute)","lastModifiedDate":"2021-04-04"},{"lineNumber":64,"author":{"gitId":"wjchoi0712"},"content":"            throws LoadDataException {","lastModifiedDate":"2021-04-04"},{"lineNumber":65,"author":{"gitId":"wjchoi0712"},"content":"        try {","lastModifiedDate":"2021-04-04"},{"lineNumber":66,"author":{"gitId":"wjchoi0712"},"content":"            String[] decodedData \u003d encodedData.split(\"/\");","lastModifiedDate":"2021-04-04"},{"lineNumber":67,"author":{"gitId":"wjchoi0712"},"content":"            if (!isValidDay(decodedData[0], dailyRoute)) {","lastModifiedDate":"2021-04-04"},{"lineNumber":68,"author":{"gitId":"wjchoi0712"},"content":"                throw new LoadDataException();","lastModifiedDate":"2021-04-04"},{"lineNumber":69,"author":{"gitId":"wjchoi0712"},"content":"            }","lastModifiedDate":"2021-04-04"},{"lineNumber":70,"author":{"gitId":"wjchoi0712"},"content":"            for (int i \u003d 1; i \u003c decodedData.length; i++) {","lastModifiedDate":"2021-04-04"},{"lineNumber":71,"author":{"gitId":"wjchoi0712"},"content":"                nusMap.checkIfValidBlock(decodedData[i]);","lastModifiedDate":"2021-04-04"},{"lineNumber":72,"author":{"gitId":"wjchoi0712"},"content":"            }","lastModifiedDate":"2021-04-04"},{"lineNumber":73,"author":{"gitId":"wjchoi0712"},"content":"            return decodedData;","lastModifiedDate":"2021-04-04"},{"lineNumber":74,"author":{"gitId":"wjchoi0712"},"content":"        } catch (InvalidBlockException e) {","lastModifiedDate":"2021-04-04"},{"lineNumber":75,"author":{"gitId":"wjchoi0712"},"content":"            throw new LoadDataException();","lastModifiedDate":"2021-04-04"},{"lineNumber":76,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":77,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":78,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":79,"author":{"gitId":"wjchoi0712"},"content":"    /** Throws an exception if the decoded data\u0027s length is not equal to 2. */","lastModifiedDate":"2021-04-12"},{"lineNumber":80,"author":{"gitId":"wjchoi0712"},"content":"    default void checkIfValidLength(String[] decodedData) throws InvalidBlockException {","lastModifiedDate":"2021-04-04"},{"lineNumber":81,"author":{"gitId":"wjchoi0712"},"content":"        if (decodedData.length !\u003d 2) {","lastModifiedDate":"2021-04-04"},{"lineNumber":82,"author":{"gitId":"wjchoi0712"},"content":"            throw new InvalidBlockException();","lastModifiedDate":"2021-04-04"},{"lineNumber":83,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":84,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":85,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":86,"author":{"gitId":"wjchoi0712"},"content":"    /** Checks if the day is one of the seven days in a week. */","lastModifiedDate":"2021-04-12"},{"lineNumber":87,"author":{"gitId":"wjchoi0712"},"content":"    default boolean isValidDay(String day, DailyRoute dailyRoute) {","lastModifiedDate":"2021-04-04"},{"lineNumber":88,"author":{"gitId":"wjchoi0712"},"content":"        boolean isValidDay \u003d false;","lastModifiedDate":"2021-04-04"},{"lineNumber":89,"author":{"gitId":"wjchoi0712"},"content":"        ArrayList\u003cString\u003e days \u003d dailyRoute.getValidDays();","lastModifiedDate":"2021-04-04"},{"lineNumber":90,"author":{"gitId":"wjchoi0712"},"content":"        for (int i \u003d 0; i \u003c days.size(); i++) {","lastModifiedDate":"2021-04-04"},{"lineNumber":91,"author":{"gitId":"wjchoi0712"},"content":"            isValidDay \u003d day.equals(days.get(i));","lastModifiedDate":"2021-04-04"},{"lineNumber":92,"author":{"gitId":"wjchoi0712"},"content":"            if (isValidDay) {","lastModifiedDate":"2021-04-04"},{"lineNumber":93,"author":{"gitId":"wjchoi0712"},"content":"                break;","lastModifiedDate":"2021-04-04"},{"lineNumber":94,"author":{"gitId":"wjchoi0712"},"content":"            }","lastModifiedDate":"2021-04-04"},{"lineNumber":95,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":96,"author":{"gitId":"wjchoi0712"},"content":"        return isValidDay;","lastModifiedDate":"2021-04-04"},{"lineNumber":97,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":98,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"wjchoi0712":97,"Rizavur":1}},{"path":"src/main/java/seedu/duke/storage/DataEncoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.data.Block;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.data.BlockAlias;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.data.DailyRoute;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.data.Favourite;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.data.History;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.data.NusMap;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.exception.InvalidIndexException;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"import java.util.Map;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"/**","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":" * Encodes data to be store in {@link Storage}.","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":" */","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"Rizavur"},"content":"public interface DataEncoder {","lastModifiedDate":"2021-04-03"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"    /** Encodes history data. */","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"Rizavur"},"content":"    default ArrayList\u003cString\u003e encodeHistory(History history) throws InvalidIndexException {","lastModifiedDate":"2021-04-03"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"        ArrayList\u003cString\u003e encodedData \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"        for (int i \u003d 0; i \u003c history.getHistorySize(); i++) {","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"            String[] data \u003d history.getSpecificEntry(i);","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"            encodedData.add(data[0] + \"/\" + data[1]);","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":"        return encodedData;","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"wjchoi0712"},"content":"    /** Encodes alias data. */","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"Rizavur"},"content":"    default ArrayList\u003cString\u003e encodeAlias(BlockAlias alias) {","lastModifiedDate":"2021-04-03"},{"lineNumber":32,"author":{"gitId":"wjchoi0712"},"content":"        ArrayList\u003cString\u003e encodedData \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"wjchoi0712"},"content":"        for (Map.Entry\u003cString, String\u003e aliasPair: alias.getAliasHashMap().entrySet()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"wjchoi0712"},"content":"            encodedData.add(aliasPair.getValue() + \"/\" + aliasPair.getKey());","lastModifiedDate":"2021-04-04"},{"lineNumber":35,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"wjchoi0712"},"content":"        return encodedData;","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"wjchoi0712"},"content":"    /** Encodes note data. */","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"Rizavur"},"content":"    default ArrayList\u003cString\u003e encodeNotes(NusMap nusMap) {","lastModifiedDate":"2021-04-03"},{"lineNumber":41,"author":{"gitId":"wjchoi0712"},"content":"        ArrayList\u003cString\u003e encodedData \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"wjchoi0712"},"content":"        for (Block block : nusMap.getValues()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"wjchoi0712"},"content":"            for (int i \u003d 0; i \u003c block.getNotes().size(); i++) {","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"wjchoi0712"},"content":"                encodedData.add(block.getName() + \"/\" + block.getNotes().get(i));","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"wjchoi0712"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"wjchoi0712"},"content":"        return encodedData;","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"wjchoi0712"},"content":"    /** Encodes daily route data. */","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"Rizavur"},"content":"    default ArrayList\u003cString\u003e encodeDailyRoute(DailyRoute dailyRoute) {","lastModifiedDate":"2021-04-03"},{"lineNumber":52,"author":{"gitId":"wjchoi0712"},"content":"        ArrayList\u003cString\u003e encodedData \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"wjchoi0712"},"content":"        for (String day : dailyRoute.getSelectableDays()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"wjchoi0712"},"content":"            StringBuilder schedule \u003d new StringBuilder(day + \"/\");","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"wjchoi0712"},"content":"            for (String block : dailyRoute.getDailyRoute(day)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"wjchoi0712"},"content":"                schedule.append(block + \"/\");","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"wjchoi0712"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"wjchoi0712"},"content":"            encodedData.add(schedule.toString());","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"wjchoi0712"},"content":"        return encodedData;","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"wjchoi0712"},"content":"    /** Encodes favourite list data. */","lastModifiedDate":"2021-04-12"},{"lineNumber":64,"author":{"gitId":"Rizavur"},"content":"    default ArrayList\u003cString\u003e encodeFavourite(Favourite favourite) throws InvalidIndexException {","lastModifiedDate":"2021-04-03"},{"lineNumber":65,"author":{"gitId":"wjchoi0712"},"content":"        ArrayList\u003cString\u003e encodedData \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"wjchoi0712"},"content":"        for (int i \u003d 0; i \u003c favourite.getFavouriteSize(); i++) {","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"wjchoi0712"},"content":"            String[] data \u003d favourite.getSpecificEntry(i);","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"wjchoi0712"},"content":"            encodedData.add(data[0] + \"/\" + data[1]);","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"wjchoi0712"},"content":"        return encodedData;","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"wjchoi0712":66,"Rizavur":6}},{"path":"src/main/java/seedu/duke/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KimIdeas8"},"content":"//@@author KimIdeas8","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"KimIdeas8"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.data.BlockAlias;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.data.DailyRoute;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.data.Favourite;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.data.History;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.data.NusMap;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.exception.InvalidFilePathException;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.exception.LoadDataException;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.exception.SaveDataException;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"KimIdeas8"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"KimIdeas8"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"KimIdeas8"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"KimIdeas8"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"KimIdeas8"},"content":"public abstract class Storage implements DataEncoder, DataDecoder {","lastModifiedDate":"2021-04-03"},{"lineNumber":20,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"KimIdeas8"},"content":"    protected final Path filepath;","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"KimIdeas8"},"content":"    protected String storageName;","lastModifiedDate":"2021-04-04"},{"lineNumber":24,"author":{"gitId":"KimIdeas8"},"content":"    protected NusMap nusMap;","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"KimIdeas8"},"content":"    protected BlockAlias blockAlias;","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"KimIdeas8"},"content":"    protected History history;","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"KimIdeas8"},"content":"    protected Favourite favourite;","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"KimIdeas8"},"content":"    protected DailyRoute dailyRoute;","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"KimIdeas8"},"content":"    public Storage(String filepath) throws InvalidFilePathException {","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"KimIdeas8"},"content":"        this.filepath \u003d Paths.get(filepath);","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"KimIdeas8"},"content":"        createDirectory();","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"KimIdeas8"},"content":"        createFile();","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"KimIdeas8"},"content":"    public String getStorageName() {","lastModifiedDate":"2021-04-04"},{"lineNumber":37,"author":{"gitId":"KimIdeas8"},"content":"        return storageName;","lastModifiedDate":"2021-04-04"},{"lineNumber":38,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":39,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":40,"author":{"gitId":"KimIdeas8"},"content":"    public void createDirectory() throws InvalidFilePathException {","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"KimIdeas8"},"content":"        if (!Files.exists(filepath.getParent())) {","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"KimIdeas8"},"content":"            try {","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"KimIdeas8"},"content":"                Files.createDirectory(filepath.getParent());","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"KimIdeas8"},"content":"            } catch (IOException ioe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"KimIdeas8"},"content":"                throw new InvalidFilePathException();","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"KimIdeas8"},"content":"            }","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"KimIdeas8"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"KimIdeas8"},"content":"    public void createFile() throws InvalidFilePathException {","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"KimIdeas8"},"content":"        if (!Files.exists(filepath)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"KimIdeas8"},"content":"            try {","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"KimIdeas8"},"content":"                Files.createFile(filepath);","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"KimIdeas8"},"content":"            } catch (IOException ioe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"KimIdeas8"},"content":"                throw new InvalidFilePathException();","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"KimIdeas8"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"KimIdeas8"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"KimIdeas8"},"content":"    public void setData(NusMap nusMap, BlockAlias blockAlias, History history,","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"KimIdeas8"},"content":"                           Favourite favourite, DailyRoute dailyRoute) {","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"KimIdeas8"},"content":"        this.nusMap \u003d nusMap;","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"KimIdeas8"},"content":"        this.blockAlias \u003d blockAlias;","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"KimIdeas8"},"content":"        this.history \u003d history;","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"KimIdeas8"},"content":"        this.favourite \u003d favourite;","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"KimIdeas8"},"content":"        this.dailyRoute \u003d dailyRoute;","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"KimIdeas8"},"content":"    public void saveData() throws SaveDataException {","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"KimIdeas8"},"content":"    public void loadData() throws LoadDataException {","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"KimIdeas8"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"KimIdeas8":75}},{"path":"src/main/java/seedu/duke/storage/datastorage/AliasStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"//@@author Rizavur","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"package seedu.duke.storage.datastorage;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.exception.InvalidAliasException;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.exception.InvalidFilePathException;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.exception.LoadDataException;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.exception.SaveDataException;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":"import java.io.IOException;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"Rizavur"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"Rizavur"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"Rizavur"},"content":"/**","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"Rizavur"},"content":" * Represents a storage location for a given file path.","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"Rizavur"},"content":" * A \u003ccode\u003eAliasStorageStorage\u003c/code\u003e object corresponds to an instance of a location which","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"Rizavur"},"content":" * Saves to \u0027aliases\u0027 list from Daily Route.","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"Rizavur"},"content":" * Loads from AliasList text file.","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"Rizavur"},"content":" */","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"Rizavur"},"content":"public class AliasStorage extends Storage {","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"Rizavur"},"content":"    public AliasStorage(String filepath) throws InvalidFilePathException {","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"Rizavur"},"content":"        super(filepath);","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"Rizavur"},"content":"        storageName \u003d \"Alias\";","lastModifiedDate":"2021-04-04"},{"lineNumber":27,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"Rizavur"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"Rizavur"},"content":"     * Saves the data from the \u0027aliases\u0027 list from Daily Route","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"Rizavur"},"content":"     * into the location with the filepath associated with the object.","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"Rizavur"},"content":"     * @throws SaveDataException - if there is error with saving file into location with filepath","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"Rizavur"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"Rizavur"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"Rizavur"},"content":"    public void saveData() throws SaveDataException {","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"Rizavur"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"Rizavur"},"content":"            ArrayList\u003cString\u003e encodedData \u003d encodeAlias(blockAlias);","lastModifiedDate":"2021-04-03"},{"lineNumber":38,"author":{"gitId":"Rizavur"},"content":"            Files.write(filepath, encodedData);","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"Rizavur"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"Rizavur"},"content":"            throw new SaveDataException();","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"Rizavur"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"Rizavur"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"Rizavur"},"content":"     * Loads the data from the location with the filepath associated with the object","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"Rizavur"},"content":"     * into the \u0027aliases\u0027 list from Daily Route.","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"Rizavur"},"content":"     * @throws LoadDataException - if there is error with saving file into location with filepath","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"Rizavur"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"Rizavur"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"Rizavur"},"content":"    public void loadData() throws LoadDataException {","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"Rizavur"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"Rizavur"},"content":"            Scanner s \u003d new Scanner(filepath);","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"Rizavur"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"Rizavur"},"content":"                String encodedData \u003d s.nextLine();","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"Rizavur"},"content":"                String[] decodedData \u003d decodeAliasAndNoteData(encodedData, nusMap);","lastModifiedDate":"2021-04-04"},{"lineNumber":56,"author":{"gitId":"Rizavur"},"content":"                blockAlias.addAlias(decodedData[0], decodedData[1]);","lastModifiedDate":"2021-04-04"},{"lineNumber":57,"author":{"gitId":"Rizavur"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"Rizavur"},"content":"        } catch (IOException | InvalidAliasException e) {","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"Rizavur"},"content":"            throw new LoadDataException();","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"Rizavur"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"Rizavur":62}},{"path":"src/main/java/seedu/duke/storage/datastorage/DailyRouteStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"//@@author SimBowen","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"package seedu.duke.storage.datastorage;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"import seedu.duke.exception.InvalidFilePathException;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"import seedu.duke.exception.LoadDataException;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"import seedu.duke.exception.SaveDataException;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"import java.io.IOException;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"/**","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":" * Represents a storage location for a given file path.","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":" * A \u003ccode\u003eDailyRouteStorageStorage\u003c/code\u003e object corresponds to an instance of a location which","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":" * Saves to \u0027days\u0027 list from Daily Route.","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":" * Loads from DailyRouteList text file.","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":" */","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"public class DailyRouteStorage extends Storage {","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"    public DailyRouteStorage(String filepath) throws InvalidFilePathException {","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"        super(filepath);","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"        storageName \u003d \"Daily Route\";","lastModifiedDate":"2021-04-04"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"     * Saves the data from the \u0027day\u0027 list from Daily Route","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"     * into the location with the filepath associated with the object.","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":"     * @throws SaveDataException - if there is error with saving file into location with filepath","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"SimBowen"},"content":"    public void saveData() throws SaveDataException {","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"SimBowen"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":"            ArrayList\u003cString\u003e encodedData \u003d encodeDailyRoute(dailyRoute);","lastModifiedDate":"2021-04-03"},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"            Files.write(filepath, encodedData);","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"SimBowen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"            throw new SaveDataException();","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"SimBowen"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"SimBowen"},"content":"     * Loads the data from the location with the filepath associated with the object","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"SimBowen"},"content":"     * into the \u0027days\u0027 list from Daily Route.","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"SimBowen"},"content":"     * @throws LoadDataException - if there is error with saving file into location with filepath","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"SimBowen"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"SimBowen"},"content":"    public void loadData() throws LoadDataException {","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"SimBowen"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"SimBowen"},"content":"            Scanner s \u003d new Scanner(filepath);","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"SimBowen"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"SimBowen"},"content":"                String encodedData \u003d s.nextLine();","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"SimBowen"},"content":"                String[] decodedData \u003d decodeDailyRouteData(encodedData, nusMap, dailyRoute);","lastModifiedDate":"2021-04-04"},{"lineNumber":55,"author":{"gitId":"SimBowen"},"content":"                ArrayList\u003cString\u003e schedule \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"SimBowen"},"content":"                for (int i \u003d 1; i \u003c decodedData.length; i++) {","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"SimBowen"},"content":"                    schedule.add(decodedData[i]);","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"SimBowen"},"content":"                }","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"SimBowen"},"content":"                dailyRoute.addDailyRoute(decodedData[0], schedule);","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"SimBowen"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"SimBowen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"SimBowen"},"content":"            throw new LoadDataException();","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"SimBowen"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"SimBowen"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"SimBowen":65}},{"path":"src/main/java/seedu/duke/storage/datastorage/FavouriteStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"//@@author Rizavur","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"package seedu.duke.storage.datastorage;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.exception.InvalidFilePathException;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.exception.InvalidIndexException;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.exception.LoadDataException;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.exception.SaveDataException;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":"import java.io.IOException;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"Rizavur"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"Rizavur"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"Rizavur"},"content":"/**","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"Rizavur"},"content":" * Represents a storage location for a given file path.","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"Rizavur"},"content":" * A \u003ccode\u003eFavoriteStorage\u003c/code\u003e object corresponds to an instance of a location which","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"Rizavur"},"content":" * Saves to \u0027favourites\u0027 list from Favourites Class.","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"Rizavur"},"content":" * Loads from FavouritesList text file.","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"Rizavur"},"content":" */","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"Rizavur"},"content":"public class FavouriteStorage extends Storage {","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"Rizavur"},"content":"    public FavouriteStorage(String filepath) throws InvalidFilePathException {","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"Rizavur"},"content":"        super(filepath);","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"Rizavur"},"content":"        storageName \u003d \"Favourite\";","lastModifiedDate":"2021-04-04"},{"lineNumber":27,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"Rizavur"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"Rizavur"},"content":"     * Saves the data from the \u0027favourites\u0027 list from \u0027Favourites\u0027.","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"Rizavur"},"content":"     * into the location with the filepath associated with the object.","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"Rizavur"},"content":"     * @throws SaveDataException - if there is error with saving file into location with filepath","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"Rizavur"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"Rizavur"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"Rizavur"},"content":"    public void saveData() throws SaveDataException {","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"Rizavur"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"Rizavur"},"content":"            ArrayList\u003cString\u003e encodedData \u003d encodeFavourite(favourite);","lastModifiedDate":"2021-04-03"},{"lineNumber":38,"author":{"gitId":"Rizavur"},"content":"            Files.write(filepath, encodedData);","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"Rizavur"},"content":"        } catch (IOException | InvalidIndexException e) {","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"Rizavur"},"content":"            throw new SaveDataException();","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"Rizavur"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"Rizavur"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"Rizavur"},"content":"     * Loads the data from the location with the filepath associated with the object","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"Rizavur"},"content":"     * into the \u0027favourites\u0027 list from \u0027Favourites\u0027.","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"Rizavur"},"content":"     * @throws LoadDataException - if there is error with saving file into location with filepath","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"Rizavur"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"Rizavur"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"Rizavur"},"content":"    public void loadData() throws LoadDataException {","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"Rizavur"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"Rizavur"},"content":"            Scanner s \u003d new Scanner(filepath);","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"Rizavur"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"Rizavur"},"content":"                String encodedData \u003d s.nextLine();","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"Rizavur"},"content":"                String[] decodedData \u003d decodeHistoryAndFavouriteData(encodedData, nusMap);","lastModifiedDate":"2021-04-04"},{"lineNumber":56,"author":{"gitId":"Rizavur"},"content":"                favourite.addFavourite(decodedData[0], decodedData[1]);","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"Rizavur"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"Rizavur"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"Rizavur"},"content":"            throw new LoadDataException();","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"Rizavur"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"Rizavur":62}},{"path":"src/main/java/seedu/duke/storage/datastorage/HistoryStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KimIdeas8"},"content":"//@@author KimIdeas8","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"KimIdeas8"},"content":"package seedu.duke.storage.datastorage;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.exception.InvalidFilePathException;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.exception.InvalidIndexException;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.exception.LoadDataException;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.exception.SaveDataException;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"KimIdeas8"},"content":"import java.io.IOException;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"KimIdeas8"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"KimIdeas8"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"KimIdeas8"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"KimIdeas8"},"content":"/**","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"KimIdeas8"},"content":" * Represents a storage location for a given file path.","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"KimIdeas8"},"content":" * A \u003ccode\u003eHistoryStorage\u003c/code\u003e object corresponds to an instance of a location which","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"KimIdeas8"},"content":" * Saves to \u0027history\u0027 list from History Class.","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"KimIdeas8"},"content":" * Loads from History text file.","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"KimIdeas8"},"content":" */","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"KimIdeas8"},"content":"public class HistoryStorage extends Storage {","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"KimIdeas8"},"content":"    public HistoryStorage(String filepath) throws InvalidFilePathException {","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"KimIdeas8"},"content":"        super(filepath);","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"KimIdeas8"},"content":"        storageName \u003d \"History\";","lastModifiedDate":"2021-04-04"},{"lineNumber":26,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"KimIdeas8"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"KimIdeas8"},"content":"     * Saves the data from the \u0027history\u0027 list from \u0027History\u0027.","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"KimIdeas8"},"content":"     * into the location with the filepath associated with the object.","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"KimIdeas8"},"content":"     * @throws SaveDataException - if there is error with saving file into location with filepath","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"KimIdeas8"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"KimIdeas8"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"KimIdeas8"},"content":"    public void saveData() throws SaveDataException {","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"KimIdeas8"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"KimIdeas8"},"content":"            ArrayList\u003cString\u003e encodedData \u003d encodeHistory(history);","lastModifiedDate":"2021-04-03"},{"lineNumber":37,"author":{"gitId":"KimIdeas8"},"content":"            Files.write(filepath, encodedData);","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"KimIdeas8"},"content":"        } catch (IOException | InvalidIndexException e) {","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"KimIdeas8"},"content":"            throw new SaveDataException();","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"KimIdeas8"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"KimIdeas8"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"KimIdeas8"},"content":"     * Loads the data from the location with the filepath associated with the object","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"KimIdeas8"},"content":"     * into the \u0027history\u0027 list from \u0027History\u0027.","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"KimIdeas8"},"content":"     * @throws LoadDataException - if there is error with saving file into location with filepath","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"KimIdeas8"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"KimIdeas8"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"KimIdeas8"},"content":"    public void loadData() throws LoadDataException {","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"KimIdeas8"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"KimIdeas8"},"content":"            Scanner s \u003d new Scanner(filepath);","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"KimIdeas8"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"KimIdeas8"},"content":"                String encodedData \u003d s.nextLine();","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"KimIdeas8"},"content":"                String[] decodedData \u003d decodeHistoryAndFavouriteData(encodedData, nusMap);","lastModifiedDate":"2021-04-04"},{"lineNumber":55,"author":{"gitId":"KimIdeas8"},"content":"                history.addHistory(decodedData[0], decodedData[1]);","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"KimIdeas8"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"KimIdeas8"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"KimIdeas8"},"content":"            throw new LoadDataException();","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"KimIdeas8"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"KimIdeas8"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"KimIdeas8":61}},{"path":"src/main/java/seedu/duke/storage/datastorage/NotesStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KimIdeas8"},"content":"//@@author KimIdeas8","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"KimIdeas8"},"content":"package seedu.duke.storage.datastorage;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.exception.InvalidFilePathException;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.exception.InvalidNoteException;","lastModifiedDate":"2021-04-05"},{"lineNumber":7,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.exception.LoadDataException;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.exception.SaveDataException;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":10,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"KimIdeas8"},"content":"import java.io.IOException;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"KimIdeas8"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"KimIdeas8"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"KimIdeas8"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"KimIdeas8"},"content":"/**","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"KimIdeas8"},"content":" * Represents a storage location for a given file path.","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"KimIdeas8"},"content":" * A \u003ccode\u003eNotesStorage\u003c/code\u003e object corresponds to an instance of a location which","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"KimIdeas8"},"content":" * Saves to \u0027notes\u0027 list from History Class.","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"KimIdeas8"},"content":" * Loads from NotesList text file.","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"KimIdeas8"},"content":" */","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"KimIdeas8"},"content":"public class NotesStorage extends Storage {","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"KimIdeas8"},"content":"    public NotesStorage(String filepath) throws InvalidFilePathException {","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"KimIdeas8"},"content":"        super(filepath);","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"KimIdeas8"},"content":"        storageName \u003d \"Note\";","lastModifiedDate":"2021-04-04"},{"lineNumber":29,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"KimIdeas8"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"KimIdeas8"},"content":"     * Saves the data from the \u0027notes\u0027 list from \u0027Block\u0027.","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"KimIdeas8"},"content":"     * into the location with the filepath associated with the object.","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"KimIdeas8"},"content":"     * @throws SaveDataException - if there is error with saving file into location with filepath","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"KimIdeas8"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"KimIdeas8"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"KimIdeas8"},"content":"    public void saveData() throws SaveDataException {","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"KimIdeas8"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"KimIdeas8"},"content":"            ArrayList\u003cString\u003e encodedData \u003d encodeNotes(nusMap);","lastModifiedDate":"2021-04-03"},{"lineNumber":40,"author":{"gitId":"KimIdeas8"},"content":"            Files.write(filepath, encodedData);","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"KimIdeas8"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"KimIdeas8"},"content":"            throw new SaveDataException();","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"KimIdeas8"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"KimIdeas8"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"KimIdeas8"},"content":"     * Loads the data from the location with the filepath associated with the object","lastModifiedDate":"2021-04-12"},{"lineNumber":48,"author":{"gitId":"KimIdeas8"},"content":"     * into the \u0027notes\u0027 list from \u0027Block\u0027.","lastModifiedDate":"2021-04-12"},{"lineNumber":49,"author":{"gitId":"KimIdeas8"},"content":"     * @throws LoadDataException - if there is error with saving file into location with filepath","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"KimIdeas8"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"KimIdeas8"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"KimIdeas8"},"content":"    public void loadData() throws LoadDataException {","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"KimIdeas8"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"KimIdeas8"},"content":"            Scanner s \u003d new Scanner(filepath);","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"KimIdeas8"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"KimIdeas8"},"content":"                String encodedData \u003d s.nextLine();","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"KimIdeas8"},"content":"                String[] decodedData \u003d decodeAliasAndNoteData(encodedData, nusMap);","lastModifiedDate":"2021-04-04"},{"lineNumber":58,"author":{"gitId":"KimIdeas8"},"content":"                nusMap.getBlock(decodedData[0]).addNote(decodedData[1]);","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"KimIdeas8"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"KimIdeas8"},"content":"        } catch (IOException | InvalidNoteException e) {","lastModifiedDate":"2021-04-05"},{"lineNumber":61,"author":{"gitId":"KimIdeas8"},"content":"            throw new LoadDataException();","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"KimIdeas8"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"KimIdeas8"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"KimIdeas8":64}},{"path":"src/main/java/seedu/duke/ui/AliasUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"//@@author Rizavur","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.data.BlockAlias;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.exception.EmptyAliasesException;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.exception.InvalidAliasException;","lastModifiedDate":"2021-04-05"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"import java.util.Map;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":"public class AliasUi extends UiManager {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"Rizavur"},"content":"     * This method obtains user input and returns an array of strings which contains the user input for the alias and","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"Rizavur"},"content":"     * block names.","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"Rizavur"},"content":"     * @return A string array of size 2 where the first index contains the block name and second index contains the","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"Rizavur"},"content":"     *          alias name.","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"Rizavur"},"content":"     * @throws InvalidAliasException If alias is the same as a block or an alias of the same name already exists.","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"Rizavur"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"Rizavur"},"content":"    public String[] getAliasInfo() throws InvalidAliasException {","lastModifiedDate":"2021-04-05"},{"lineNumber":21,"author":{"gitId":"Rizavur"},"content":"        String[] blockAndAlias \u003d new String[2];","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"Rizavur"},"content":"        showMessage(\"Enter block: \");","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"Rizavur"},"content":"        blockAndAlias[0] \u003d getUserInput().toUpperCase();","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"Rizavur"},"content":"        showMessage(\"Enter the alias name: \");","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Rizavur"},"content":"        blockAndAlias[1] \u003d getUserInput().toUpperCase();","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"Rizavur"},"content":"        showMessage(CommonMessage.DIVIDER);","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"Rizavur"},"content":"        return blockAndAlias;","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"Rizavur"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":33,"author":{"gitId":"Rizavur"},"content":"     * This method prints out the aliases that are currently saved in the alias hashmap.","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"Rizavur"},"content":"     * @param aliases The alias hashmap will be retrieved from this instance of blockAlias.","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"Rizavur"},"content":"     * @throws EmptyAliasesException If there are not aliases currently stored and the alias hashmap is empty.","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"Rizavur"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"Rizavur"},"content":"    public void showCustomAliases(BlockAlias aliases) throws EmptyAliasesException {","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"Rizavur"},"content":"        if (aliases.isEmpty()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"Rizavur"},"content":"            throw new EmptyAliasesException();","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"Rizavur"},"content":"        } else {","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"Rizavur"},"content":"            showMessage(\"Here are your aliases:\");","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"Rizavur"},"content":"            int index \u003d 1;","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"Rizavur"},"content":"            for (Map.Entry\u003cString, String\u003e pair : aliases.getAliasHashMap().entrySet()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"Rizavur"},"content":"                showMessage(index + \". \" + pair.getKey() + \" - \" + pair.getValue());","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"Rizavur"},"content":"                index++;","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"Rizavur"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"Rizavur"},"content":"            showMessage(CommonMessage.DIVIDER);","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"Rizavur"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"Rizavur"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"Rizavur"},"content":"     * This method gets the user input for the alias that they want to remove from the stored aliases.","lastModifiedDate":"2021-04-12"},{"lineNumber":53,"author":{"gitId":"Rizavur"},"content":"     * @return The alias name that is to be removed.","lastModifiedDate":"2021-04-12"},{"lineNumber":54,"author":{"gitId":"Rizavur"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":55,"author":{"gitId":"Rizavur"},"content":"    public String getDeleteAliasInfo() {","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"Rizavur"},"content":"        showMessage(\"Enter the alias name that you wish to delete: \");","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"Rizavur"},"content":"        String toDelete \u003d getUserInput().toUpperCase();","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"Rizavur"},"content":"        showMessage(CommonMessage.DIVIDER);","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"Rizavur"},"content":"        return toDelete;","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"Rizavur":61}},{"path":"src/main/java/seedu/duke/ui/CommonMessage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"//@@author Rizavur","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":"public class CommonMessage {","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":"    public static final String LINE_SEPARATOR \u003d System.lineSeparator();","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Rizavur"},"content":"    public static final String DIVIDER \u003d \"------------------------------------------------------\"","lastModifiedDate":"2021-04-04"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":"            + \"------------------------------------------------------\";","lastModifiedDate":"2021-04-04"},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"    public static final String COMMAND_INPUT_HEADER \u003d \"\u003e \";","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":"    public static final String INFO_INPUT_HEADER \u003d \"* \";","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":"    public static final String LOGO \u003d \" /$$   /$$ /$$   /$$  /$$$$$$  /$$      /$$\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"Rizavur"},"content":"            + \"| $$$ | $$| $$  | $$ /$$__  $$| $$$    /$$$\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"            + \"| $$$$| $$| $$  | $$| $$  \\\\__/| $$$$  /$$$$  /$$$$$$  /$$$$$$$$  /$$$$$$\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"Rizavur"},"content":"            + \"| $$ $$ $$| $$  | $$|  $$$$$$ | $$ $$/$$ $$ |____  $$|____ /$$/ /$$__  $$\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"Rizavur"},"content":"            + \"| $$  $$$$| $$  | $$ \\\\____  $$| $$  $$$| $$  /$$$$$$$   /$$$$/ | $$$$$$$$\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"Rizavur"},"content":"            + \"| $$\\\\  $$$| $$  | $$ /$$  \\\\ $$| $$\\\\  $ | $$ /$$__  $$  /$$__/  | $$_____/\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"Rizavur"},"content":"            + \"| $$ \\\\  $$|  $$$$$$/|  $$$$$$/| $$ \\\\/  | $$|  $$$$$$$ /$$$$$$$$|  $$$$$$$\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Rizavur"},"content":"            + \"|__/  \\\\__/ \\\\______/  \\\\______/ |__/     |__/ \\\\_______/|________/ \\\\_______/\";","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"Rizavur"},"content":"    public static final String GREETING_MESSAGE \u003d \"Hello! Welcome to NUSMaze\" + LINE_SEPARATOR","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"Rizavur"},"content":"            + \"Where do you want to go today?\";","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"Rizavur"},"content":"    public static final String SUCCESSFUL_LOAD \u003d \"[X] %s data has been successfully loaded!\";","lastModifiedDate":"2021-04-04"},{"lineNumber":22,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"Rizavur":22}},{"path":"src/main/java/seedu/duke/ui/DailyRouteUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"//@@author SimBowen","lastModifiedDate":"2021-04-03"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"import seedu.duke.data.NusMap;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"import seedu.duke.exception.EmptyDailyRouteException;","lastModifiedDate":"2021-04-03"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"import seedu.duke.exception.InvalidBlockException;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"import seedu.duke.exception.InvalidDailyRouteException;","lastModifiedDate":"2021-04-05"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":"import seedu.duke.exception.InvalidIndexException;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"import seedu.duke.exception.RepeatedBlockException;","lastModifiedDate":"2021-04-05"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"public class DailyRouteUi extends UiManager {","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"     * Prompts the user for the schedule of the day until the user enters \"end\".","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"    public ArrayList\u003cString\u003e getScheduleInfo() {","lastModifiedDate":"2021-04-04"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"        ArrayList\u003cString\u003e dailyBlocks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"        String block \u003d \"Invalid Block\";","lastModifiedDate":"2021-04-04"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":"        while (!isValidBlock(block)) {","lastModifiedDate":"2021-04-04"},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"            showMessage(\"Enter location of the first activity of the day: \");","lastModifiedDate":"2021-04-04"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"            try {","lastModifiedDate":"2021-04-04"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"                block \u003d getBlockEntry(block);","lastModifiedDate":"2021-04-05"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"                if (block.equals(\"END\")) {","lastModifiedDate":"2021-04-05"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"                    throw new InvalidDailyRouteException();","lastModifiedDate":"2021-04-05"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"                }","lastModifiedDate":"2021-04-05"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"                dailyBlocks.add(block);","lastModifiedDate":"2021-04-05"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"            } catch (InvalidBlockException | RepeatedBlockException | InvalidDailyRouteException e) {","lastModifiedDate":"2021-04-05"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":"                showMessageWithDivider(CommonMessage.DIVIDER, e.getMessage());","lastModifiedDate":"2021-04-05"},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":"            }","lastModifiedDate":"2021-04-04"},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":34,"author":{"gitId":"SimBowen"},"content":"        while (!block.equals(\"END\")) {","lastModifiedDate":"2021-04-04"},{"lineNumber":35,"author":{"gitId":"SimBowen"},"content":"            try {","lastModifiedDate":"2021-04-04"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":"                showMessage(\"Enter location of the next activity of the day: (Enter \\\"end\\\" to stop)\");","lastModifiedDate":"2021-04-06"},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"                block \u003d getBlockEntry(block);","lastModifiedDate":"2021-04-05"},{"lineNumber":38,"author":{"gitId":"SimBowen"},"content":"                if (isValidBlock(block)) {","lastModifiedDate":"2021-04-05"},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"                    dailyBlocks.add(block);","lastModifiedDate":"2021-04-05"},{"lineNumber":40,"author":{"gitId":"SimBowen"},"content":"                }","lastModifiedDate":"2021-04-05"},{"lineNumber":41,"author":{"gitId":"SimBowen"},"content":"            } catch (InvalidBlockException | RepeatedBlockException e) {","lastModifiedDate":"2021-04-05"},{"lineNumber":42,"author":{"gitId":"SimBowen"},"content":"                showMessageWithDivider(CommonMessage.DIVIDER, e.getMessage());","lastModifiedDate":"2021-04-05"},{"lineNumber":43,"author":{"gitId":"SimBowen"},"content":"            }","lastModifiedDate":"2021-04-04"},{"lineNumber":44,"author":{"gitId":"SimBowen"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"SimBowen"},"content":"        showMessage(CommonMessage.DIVIDER);","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"SimBowen"},"content":"        return dailyBlocks;","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":50,"author":{"gitId":"SimBowen"},"content":"     * Returns the entry of a block and ensure it is not the same as the previous block.","lastModifiedDate":"2021-04-12"},{"lineNumber":51,"author":{"gitId":"SimBowen"},"content":"     * @param previousBlock this is the name of the previous block.","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":53,"author":{"gitId":"SimBowen"},"content":"    public String getBlockEntry(String previousBlock) throws InvalidBlockException, RepeatedBlockException {","lastModifiedDate":"2021-04-05"},{"lineNumber":54,"author":{"gitId":"SimBowen"},"content":"        String block \u003d getUserInput().toUpperCase();","lastModifiedDate":"2021-04-04"},{"lineNumber":55,"author":{"gitId":"SimBowen"},"content":"        if (block.equals(previousBlock)) {","lastModifiedDate":"2021-04-05"},{"lineNumber":56,"author":{"gitId":"SimBowen"},"content":"            throw new RepeatedBlockException();","lastModifiedDate":"2021-04-05"},{"lineNumber":57,"author":{"gitId":"SimBowen"},"content":"        } else if (isValidBlock(block) || block.equals(\"END\")) {","lastModifiedDate":"2021-04-05"},{"lineNumber":58,"author":{"gitId":"SimBowen"},"content":"            return block;","lastModifiedDate":"2021-04-04"},{"lineNumber":59,"author":{"gitId":"SimBowen"},"content":"        } else {","lastModifiedDate":"2021-04-04"},{"lineNumber":60,"author":{"gitId":"SimBowen"},"content":"            throw new InvalidBlockException();","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"SimBowen"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":65,"author":{"gitId":"SimBowen"},"content":"     * Checks if the block is a valid block.","lastModifiedDate":"2021-04-12"},{"lineNumber":66,"author":{"gitId":"SimBowen"},"content":"     * @param block is the block entered.","lastModifiedDate":"2021-04-12"},{"lineNumber":67,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":68,"author":{"gitId":"SimBowen"},"content":"    public boolean isValidBlock(String block) {","lastModifiedDate":"2021-04-05"},{"lineNumber":69,"author":{"gitId":"SimBowen"},"content":"        NusMap nusMap \u003d new NusMap();","lastModifiedDate":"2021-04-05"},{"lineNumber":70,"author":{"gitId":"SimBowen"},"content":"        return nusMap.getBlock(block) !\u003d null;","lastModifiedDate":"2021-04-05"},{"lineNumber":71,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":72,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":73,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":74,"author":{"gitId":"SimBowen"},"content":"     * Prompts the user to select the day and returns the index of the day selected.","lastModifiedDate":"2021-04-12"},{"lineNumber":75,"author":{"gitId":"SimBowen"},"content":"     * @param selectableDays is the days the user can choose.","lastModifiedDate":"2021-04-12"},{"lineNumber":76,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":77,"author":{"gitId":"SimBowen"},"content":"    public int getDayEntry(ArrayList\u003cString\u003e selectableDays) throws InvalidIndexException, EmptyDailyRouteException {","lastModifiedDate":"2021-04-03"},{"lineNumber":78,"author":{"gitId":"SimBowen"},"content":"        showListOfDays(selectableDays);","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"SimBowen"},"content":"        showMessage(\"Select entry:\");","lastModifiedDate":"2021-04-05"},{"lineNumber":80,"author":{"gitId":"SimBowen"},"content":"        int dayIndex \u003d getEntryFromUser(selectableDays);","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"SimBowen"},"content":"        showMessage(CommonMessage.DIVIDER);","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"SimBowen"},"content":"        return dayIndex;","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":86,"author":{"gitId":"SimBowen"},"content":"     * Shows the list of selectable days.","lastModifiedDate":"2021-04-12"},{"lineNumber":87,"author":{"gitId":"SimBowen"},"content":"     * @param days is the selectable days.","lastModifiedDate":"2021-04-12"},{"lineNumber":88,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":89,"author":{"gitId":"SimBowen"},"content":"    public void showListOfDays(ArrayList\u003cString\u003e days) throws EmptyDailyRouteException {","lastModifiedDate":"2021-04-03"},{"lineNumber":90,"author":{"gitId":"SimBowen"},"content":"        if (days.size() \u003d\u003d 0) {","lastModifiedDate":"2021-04-03"},{"lineNumber":91,"author":{"gitId":"SimBowen"},"content":"            throw new EmptyDailyRouteException();","lastModifiedDate":"2021-04-03"},{"lineNumber":92,"author":{"gitId":"SimBowen"},"content":"        }","lastModifiedDate":"2021-04-03"},{"lineNumber":93,"author":{"gitId":"SimBowen"},"content":"        showMessage(\"Here are the available days:\");","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"SimBowen"},"content":"        for (int i \u003d 0; i \u003c days.size(); i++) {","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"SimBowen"},"content":"            showMessage((i + 1) + \". \" + days.get(i));","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"SimBowen"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"SimBowen"},"content":"        showMessage(CommonMessage.DIVIDER);","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":101,"author":{"gitId":"SimBowen"},"content":"     * Takes in the user\u0027s day selection input.","lastModifiedDate":"2021-04-12"},{"lineNumber":102,"author":{"gitId":"SimBowen"},"content":"     * @param days is the selectable days.","lastModifiedDate":"2021-04-12"},{"lineNumber":103,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":104,"author":{"gitId":"SimBowen"},"content":"    public int getEntryFromUser(ArrayList\u003cString\u003e days) throws InvalidIndexException {","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"SimBowen"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"SimBowen"},"content":"            int dayEntry \u003d Integer.parseInt(getUserInput()) - 1;","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"SimBowen"},"content":"            if (dayEntry \u003c 0 || dayEntry \u003e days.size() - 1) {","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"SimBowen"},"content":"                throw new InvalidIndexException();","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"SimBowen"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"SimBowen"},"content":"            return dayEntry;","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"SimBowen"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"SimBowen"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"SimBowen"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":116,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":117,"author":{"gitId":"SimBowen"},"content":"     * Prints the daily route.","lastModifiedDate":"2021-04-12"},{"lineNumber":118,"author":{"gitId":"SimBowen"},"content":"     * @param schedule is the schedule for the day.","lastModifiedDate":"2021-04-12"},{"lineNumber":119,"author":{"gitId":"SimBowen"},"content":"     * @param routedSchedules is the routes between blocks in schedule.","lastModifiedDate":"2021-04-12"},{"lineNumber":120,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":121,"author":{"gitId":"SimBowen"},"content":"    public void showDailyRoute(ArrayList\u003cString\u003e schedule, ArrayList\u003cString\u003e routedSchedules) {","lastModifiedDate":"2021-04-05"},{"lineNumber":122,"author":{"gitId":"SimBowen"},"content":"        for (int i \u003d 0; i \u003c schedule.size(); i++) {","lastModifiedDate":"2021-04-05"},{"lineNumber":123,"author":{"gitId":"SimBowen"},"content":"            showMessage(\"Location of activity \" + (i + 1) + \": \" + schedule.get(i));","lastModifiedDate":"2021-04-05"},{"lineNumber":124,"author":{"gitId":"SimBowen"},"content":"            String route \u003d \"\";","lastModifiedDate":"2021-04-05"},{"lineNumber":125,"author":{"gitId":"SimBowen"},"content":"            route \u003d routedSchedules.get(i);","lastModifiedDate":"2021-04-05"},{"lineNumber":126,"author":{"gitId":"SimBowen"},"content":"            if (i \u003e 0 \u0026\u0026 i \u003c schedule.size() - 1) {","lastModifiedDate":"2021-04-05"},{"lineNumber":127,"author":{"gitId":"SimBowen"},"content":"                route +\u003d CommonMessage.LINE_SEPARATOR;","lastModifiedDate":"2021-04-05"},{"lineNumber":128,"author":{"gitId":"SimBowen"},"content":"            }","lastModifiedDate":"2021-04-05"},{"lineNumber":129,"author":{"gitId":"SimBowen"},"content":"            if (schedule.size() \u003e 1) {","lastModifiedDate":"2021-04-05"},{"lineNumber":130,"author":{"gitId":"SimBowen"},"content":"                showMessage(route);","lastModifiedDate":"2021-04-05"},{"lineNumber":131,"author":{"gitId":"SimBowen"},"content":"            }","lastModifiedDate":"2021-04-05"},{"lineNumber":132,"author":{"gitId":"SimBowen"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":133,"author":{"gitId":"SimBowen"},"content":"        showMessage(CommonMessage.DIVIDER);","lastModifiedDate":"2021-04-05"},{"lineNumber":134,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":135,"author":{"gitId":"SimBowen"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"SimBowen":135}},{"path":"src/main/java/seedu/duke/ui/FavouriteUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.data.Favourite;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.exception.EmptyFavouriteException;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.exception.InvalidIndexException;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.exception.SameBlockException;","lastModifiedDate":"2021-04-04"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"public class FavouriteUi extends UiManager {","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":"     * This method gets the routing information to be saved as favourites by calling the router ui class.","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"Rizavur"},"content":"     * @return A pair of starting and destination blocks are returned, where starting block is stored in the first index","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"     *          of the array and the destination block is stored in the second index of the array.","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"Rizavur"},"content":"     * @throws SameBlockException If the same start and destination blocks are entered by the user.","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"Rizavur"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"    public String[] getFavouriteInfo() throws SameBlockException {","lastModifiedDate":"2021-04-04"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"        return new RouterUi().getRoutingInfo();","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"Rizavur"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"     * Displays all the stored favourite routes to the user, in the format of an indexed list.","lastModifiedDate":"2021-04-12"},{"lineNumber":22,"author":{"gitId":"Rye98"},"content":"     * If there are no stored favourite routes, the EmptyFavouriteException is thrown.","lastModifiedDate":"2021-04-12"},{"lineNumber":23,"author":{"gitId":"Rye98"},"content":"     * This method further calls the getSpecificEntry() method.","lastModifiedDate":"2021-04-12"},{"lineNumber":24,"author":{"gitId":"Rye98"},"content":"     *","lastModifiedDate":"2021-04-12"},{"lineNumber":25,"author":{"gitId":"Rye98"},"content":"     * @param favourite class","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"Rye98"},"content":"     * @throws EmptyFavouriteException for empty favourites before the method is called","lastModifiedDate":"2021-04-12"},{"lineNumber":27,"author":{"gitId":"Rye98"},"content":"     * @throws InvalidIndexException for invalid input by the user","lastModifiedDate":"2021-04-12"},{"lineNumber":28,"author":{"gitId":"Rizavur"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"wjchoi0712"},"content":"    public void showFavourites(Favourite favourite) throws EmptyFavouriteException, InvalidIndexException {","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"wjchoi0712"},"content":"        if (favourite.isEmpty()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"wjchoi0712"},"content":"            throw new EmptyFavouriteException();","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"wjchoi0712"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"wjchoi0712"},"content":"            showMessage(\"Here are your favourite routes:\");","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"wjchoi0712"},"content":"            for (int i \u003d 0; i \u003c favourite.getFavouriteSize(); i++) {","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"wjchoi0712"},"content":"                String[] routeInfo \u003d favourite.getSpecificEntry(i);","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"wjchoi0712"},"content":"                showMessage((i + 1) + \". \" + routeInfo[0] + \" -\u003e \" + routeInfo[1]);","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"wjchoi0712"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"wjchoi0712"},"content":"            showMessage(CommonMessage.DIVIDER);","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"Rizavur"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"Rizavur"},"content":"     * This method gets the index of the favourites entry that the user wants to delete.","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"Rizavur"},"content":"     * @return The index number of the favourites entry that is to be deleted.","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"Rizavur"},"content":"     * @throws InvalidIndexException If the index to be deleted is not an integer that is within the bounds.","lastModifiedDate":"2021-04-12"},{"lineNumber":46,"author":{"gitId":"Rizavur"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"wjchoi0712"},"content":"    public int getDeleteIndex() throws InvalidIndexException {","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"wjchoi0712"},"content":"        return new NoteUi().getDeleteIndex();","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"Rizavur"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":52,"author":{"gitId":"Rizavur"},"content":"     * This method gets the index of the favourites entry that the user wants to repeat.","lastModifiedDate":"2021-04-12"},{"lineNumber":53,"author":{"gitId":"Rizavur"},"content":"     * @return The index number of the favourites entry that is to be repeated.","lastModifiedDate":"2021-04-12"},{"lineNumber":54,"author":{"gitId":"Rizavur"},"content":"     * @throws InvalidIndexException If the index to be deleted is not an integer that is within the bounds.","lastModifiedDate":"2021-04-12"},{"lineNumber":55,"author":{"gitId":"Rizavur"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":56,"author":{"gitId":"wjchoi0712"},"content":"    public int getRepeatIndex() throws InvalidIndexException {","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"wjchoi0712"},"content":"        return new HistoryUi().getRepeatIndex();","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"Rye98":6,"wjchoi0712":35,"Rizavur":18}},{"path":"src/main/java/seedu/duke/ui/HistoryUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.data.History;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.exception.EmptyHistoryException;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.exception.InvalidIndexException;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"public class HistoryUi extends UiManager {","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"Rye98"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"Rye98"},"content":"     * Displays all available entries stored in history to the user, in the form of an indexed list.","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"Rye98"},"content":"     * If there are no stored entries, the EmptyHistoryException will be thrown.","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"Rye98"},"content":"     * When this method is called from \"Repeat History\" command, the user will also be prompted to enter","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"Rye98"},"content":"     * the index of stored entries, by calling the getRepeatIndex() method.","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"Rye98"},"content":"     *","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"Rye98"},"content":"     * @param history class","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"Rye98"},"content":"     * @throws InvalidIndexException for invalid input by user","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"Rye98"},"content":"     * @throws EmptyHistoryException for empty history before this function is called.","lastModifiedDate":"2021-04-12"},{"lineNumber":19,"author":{"gitId":"Rye98"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"    public void showHistory(History history) throws InvalidIndexException, EmptyHistoryException {","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"Rizavur"},"content":"        assert history !\u003d null : \"History must be initialized before, cannot be null\";","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"        if (history.isEmpty()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"            throw new EmptyHistoryException();","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"            showMessage(\"There are \" + history.getHistorySize() + \" records in your history: \");","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"            for (int i \u003d 0; i \u003c history.getHistorySize(); i++) {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":"                String[] routeInfo \u003d history.getSpecificEntry(i);","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"wjchoi0712"},"content":"                showMessage((i + 1) + \". \" + routeInfo[0] + \" -\u003e \" + routeInfo[1]);","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"wjchoi0712"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"wjchoi0712"},"content":"            showMessage(CommonMessage.DIVIDER);","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Rizavur"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"Rye98"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":35,"author":{"gitId":"wjchoi0712"},"content":"     * Prompts the user to enter an index of a stored entry in history.","lastModifiedDate":"2021-04-12"},{"lineNumber":36,"author":{"gitId":"Rye98"},"content":"     * If an invalid input is provided, the InvalidIndexException is thrown.","lastModifiedDate":"2021-04-12"},{"lineNumber":37,"author":{"gitId":"Rye98"},"content":"     *","lastModifiedDate":"2021-04-12"},{"lineNumber":38,"author":{"gitId":"Rye98"},"content":"     * @return the index of the stored search to repeat.","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"Rye98"},"content":"     * @throws InvalidIndexException when invalid input is provided by user.","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"Rye98"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"wjchoi0712"},"content":"    public int getRepeatIndex() throws InvalidIndexException {","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"Rizavur"},"content":"        try {","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"wjchoi0712"},"content":"            showMessage(\"Select Entry to Repeat:\");","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"wjchoi0712"},"content":"            int repeatIndex \u003d Integer.parseInt(getUserInput());","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"wjchoi0712"},"content":"            showMessage(CommonMessage.DIVIDER);","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"wjchoi0712"},"content":"            return repeatIndex;","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"Rizavur"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"wjchoi0712"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"Rizavur"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"Rye98":17,"wjchoi0712":21,"Rizavur":13}},{"path":"src/main/java/seedu/duke/ui/NoteUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.exception.EmptyNoteException;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.exception.InvalidIndexException;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.exception.InvalidNoteException;","lastModifiedDate":"2021-04-04"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"public class NoteUi extends UiManager {","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"     * Prompts the user for the block name and the note description.","lastModifiedDate":"2021-04-12"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"     *","lastModifiedDate":"2021-04-12"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"     * @return the block name and note description","lastModifiedDate":"2021-04-12"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"    public String[] getNoteInfo() {","lastModifiedDate":"2021-04-12"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"        String[] noteInfo \u003d new String[2];","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"        showMessage(\"Enter Block:\");","lastModifiedDate":"2021-04-05"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"        noteInfo[0] \u003d getUserInput().toUpperCase();","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"KimIdeas8"},"content":"        showMessage(\"Enter the Note:\");","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"        noteInfo[1] \u003d getUserInput();","lastModifiedDate":"2021-04-05"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"        showMessage(CommonMessage.DIVIDER);","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"wjchoi0712"},"content":"        return noteInfo;","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"wjchoi0712"},"content":"    /** Return the block name inputted by the user. */","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"wjchoi0712"},"content":"    public String getBlockInfo() {","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"wjchoi0712"},"content":"        showMessage(\"Enter Block:\");","lastModifiedDate":"2021-04-05"},{"lineNumber":33,"author":{"gitId":"wjchoi0712"},"content":"        String block \u003d getUserInput().toUpperCase();","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"wjchoi0712"},"content":"        showMessage(CommonMessage.DIVIDER);","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"wjchoi0712"},"content":"        return block;","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-04-12"},{"lineNumber":39,"author":{"gitId":"wjchoi0712"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"wjchoi0712"},"content":"     * Generates and displays all the notes tagged to a particular block.","lastModifiedDate":"2021-04-12"},{"lineNumber":41,"author":{"gitId":"wjchoi0712"},"content":"     *","lastModifiedDate":"2021-04-12"},{"lineNumber":42,"author":{"gitId":"wjchoi0712"},"content":"     * @param notes the list of notes to be show to the user","lastModifiedDate":"2021-04-12"},{"lineNumber":43,"author":{"gitId":"wjchoi0712"},"content":"     * @throws EmptyNoteException if there are no notes","lastModifiedDate":"2021-04-12"},{"lineNumber":44,"author":{"gitId":"wjchoi0712"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":45,"author":{"gitId":"wjchoi0712"},"content":"    public void showNotes(ArrayList\u003cString\u003e notes) throws EmptyNoteException {","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"wjchoi0712"},"content":"        if (notes.isEmpty()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"wjchoi0712"},"content":"            throw new EmptyNoteException();","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"wjchoi0712"},"content":"        showMessage(\"Here is the list of notes:\");","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"wjchoi0712"},"content":"        for (int i \u003d 0; i \u003c notes.size(); i++) {","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"wjchoi0712"},"content":"            showMessage((i + 1) + \". \" + notes.get(i));","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"wjchoi0712"},"content":"        showMessage(CommonMessage.DIVIDER);","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"wjchoi0712"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":57,"author":{"gitId":"wjchoi0712"},"content":"     * Prompts the user for the index of the note to be deleted.","lastModifiedDate":"2021-04-12"},{"lineNumber":58,"author":{"gitId":"wjchoi0712"},"content":"     *","lastModifiedDate":"2021-04-12"},{"lineNumber":59,"author":{"gitId":"wjchoi0712"},"content":"     * @return the number of note to be deleted.","lastModifiedDate":"2021-04-12"},{"lineNumber":60,"author":{"gitId":"wjchoi0712"},"content":"     * @throws InvalidIndexException if the input is not an integer","lastModifiedDate":"2021-04-12"},{"lineNumber":61,"author":{"gitId":"wjchoi0712"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":62,"author":{"gitId":"wjchoi0712"},"content":"    public int getDeleteIndex() throws InvalidIndexException {","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"wjchoi0712"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"wjchoi0712"},"content":"            showMessage(\"Select Entry to delete:\");","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"wjchoi0712"},"content":"            int deleteIndex \u003d Integer.parseInt(getUserInput());","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"wjchoi0712"},"content":"            showMessage(CommonMessage.DIVIDER);","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"wjchoi0712"},"content":"            return deleteIndex;","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"wjchoi0712"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"wjchoi0712"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"KimIdeas8":1,"wjchoi0712":71}},{"path":"src/main/java/seedu/duke/ui/RouterUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.data.Block;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.exception.InvalidIndexException;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.exception.SameBlockException;","lastModifiedDate":"2021-04-04"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"public class RouterUi extends UiManager {","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"     * Prompts the user for the block to route from and the block to route to.","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"    public String[] getRoutingInfo() throws SameBlockException {","lastModifiedDate":"2021-04-04"},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"        String[] startAndDestination \u003d new String[2];","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"        showMessage(\"Starting Block:\");","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"        startAndDestination[0] \u003d getUserInput().toUpperCase();","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"        showMessage(\"Destination Block:\");","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"        startAndDestination[1] \u003d getUserInput().toUpperCase();","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"        showMessage(CommonMessage.DIVIDER);","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"        if (startAndDestination[0].equals(startAndDestination[1])) {","lastModifiedDate":"2021-04-04"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"            throw new SameBlockException();","lastModifiedDate":"2021-04-04"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":25,"author":{"gitId":"Rizavur"},"content":"        return startAndDestination;","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"    /**","lastModifiedDate":"2021-04-12"},{"lineNumber":29,"author":{"gitId":"wjchoi0712"},"content":"     * Prompts the user to select an eatery from the list.","lastModifiedDate":"2021-04-12"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"     * @param eateries  is the list of eateries in order of distance.","lastModifiedDate":"2021-04-12"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":"     */","lastModifiedDate":"2021-04-12"},{"lineNumber":32,"author":{"gitId":"wjchoi0712"},"content":"    public int getEateryIndex(Block[] eateries) throws InvalidIndexException {","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"wjchoi0712"},"content":"        showMessage(\"Here are the list of eateries(from closest to furthest):\");","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"wjchoi0712"},"content":"        for (int i \u003d 0; i \u003c eateries.length; i++) {","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"wjchoi0712"},"content":"            showMessage((i + 1) + \". \" + eateries[i].getName());","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"wjchoi0712"},"content":"        showMessage(","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"wjchoi0712"},"content":"                CommonMessage.DIVIDER,","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"                \"Select entry to go:\"","lastModifiedDate":"2021-04-05"},{"lineNumber":40,"author":{"gitId":"wjchoi0712"},"content":"        );","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"wjchoi0712"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"wjchoi0712"},"content":"            int eateryIndex \u003d Integer.parseInt(getUserInput());","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"wjchoi0712"},"content":"            showMessage(CommonMessage.DIVIDER);","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"wjchoi0712"},"content":"            return eateryIndex;","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"wjchoi0712"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"wjchoi0712"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"wjchoi0712"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"SimBowen":6,"wjchoi0712":32,"Rizavur":11}},{"path":"src/main/java/seedu/duke/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"//@@author Rizavur","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Rizavur"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"/**","lastModifiedDate":"2021-04-12"},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":" * TextUi of the application.","lastModifiedDate":"2021-04-12"},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":" */","lastModifiedDate":"2021-04-12"},{"lineNumber":12,"author":{"gitId":"Rizavur"},"content":"public class UiManager {","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"    private final Scanner in;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"Rizavur"},"content":"    private final PrintStream out;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Rizavur"},"content":"    public UiManager() {","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"Rizavur"},"content":"        this(System.in, System.out);","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Rizavur"},"content":"    public UiManager(InputStream in, PrintStream out) {","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"Rizavur"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"Rizavur"},"content":"        this.out \u003d out;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Rizavur"},"content":"    /** Returns the full command input by the user. */","lastModifiedDate":"2021-04-12"},{"lineNumber":26,"author":{"gitId":"Rizavur"},"content":"    public String getUserCommandInput() {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Rizavur"},"content":"        out.print(CommonMessage.COMMAND_INPUT_HEADER);","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"Rizavur"},"content":"        String userInput \u003d in.nextLine();","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"Rizavur"},"content":"        out.println(CommonMessage.DIVIDER);","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"Rizavur"},"content":"        return userInput;","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"Rizavur"},"content":"    /** Returns parameter inputs given by user. */","lastModifiedDate":"2021-04-12"},{"lineNumber":34,"author":{"gitId":"Rizavur"},"content":"    public String getUserInput() {","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"Rizavur"},"content":"        out.print(CommonMessage.INFO_INPUT_HEADER);","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"Rizavur"},"content":"        return in.nextLine().trim();","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"Rizavur"},"content":"    /** Prints the messages that is to be delivered to the user. */","lastModifiedDate":"2021-04-12"},{"lineNumber":40,"author":{"gitId":"Rizavur"},"content":"    public void showMessage(String... message) {","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"Rizavur"},"content":"        for (String m : message) {","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"Rizavur"},"content":"            out.println(m);","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"Rizavur"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"Rizavur"},"content":"    /** Prints the messages that is to be delivered to the user with line divider below it. */","lastModifiedDate":"2021-04-12"},{"lineNumber":47,"author":{"gitId":"Rizavur"},"content":"    public void showMessageWithDivider(String... message) {","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"Rizavur"},"content":"        showMessage(message);","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"Rizavur"},"content":"        out.println(CommonMessage.DIVIDER);","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"Rizavur"},"content":"    /** Prints the logo of the NusMaze. */","lastModifiedDate":"2021-04-12"},{"lineNumber":53,"author":{"gitId":"Rizavur"},"content":"    public void showLogo() {","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"Rizavur"},"content":"        showMessageWithDivider(CommonMessage.DIVIDER, CommonMessage.LOGO);","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"Rizavur"},"content":"    /** Prints the greeting message. */","lastModifiedDate":"2021-04-12"},{"lineNumber":58,"author":{"gitId":"Rizavur"},"content":"    public void showGreetMessage() {","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"Rizavur"},"content":"        showMessageWithDivider(CommonMessage.GREETING_MESSAGE);","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":62,"author":{"gitId":"Rizavur"},"content":"    /** Prints out a message informing the user that previous data has been successfully loaded. */","lastModifiedDate":"2021-04-12"},{"lineNumber":63,"author":{"gitId":"Rizavur"},"content":"    public void showLoadSuccessMessage(String name) {","lastModifiedDate":"2021-04-04"},{"lineNumber":64,"author":{"gitId":"Rizavur"},"content":"        showMessage(String.format(CommonMessage.SUCCESSFUL_LOAD, name));","lastModifiedDate":"2021-04-04"},{"lineNumber":65,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":66,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"Rizavur":66}},{"path":"src/test/java/seedu/duke/GoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wjchoi0712"},"content":"package seedu.duke;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"wjchoi0712"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.exception.InvalidBlockException;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"public class GoCommandTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"    public void goCommandTest() throws InvalidBlockException {","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"        RouterTest routerTest \u003d new RouterTest();","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"        routerTest.printShortestDistance_linkedBlocks_expectRoute();","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"        routerTest.printShortestDistance_unknownBlock_expectException();","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"        routerTest.printShortestDistance_linkedBlocks_expectRouteAfterRepeatedCall();","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"        HistoryTest historyTest \u003d new HistoryTest();","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"        historyTest.getHistory_addOneHistory_oneHistoryInHistory();","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"wjchoi0712":18}},{"path":"src/test/java/seedu/duke/HistoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Rye98"},"content":"package seedu.duke;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"Rye98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.data.History;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.exception.InvalidBlockException;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"Rye98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"public class HistoryTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Rye98"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"    void getHistory_addOneHistory_oneHistoryInHistory() throws InvalidBlockException {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"        History history \u003d new History();","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"        history.addHistory(\"EA\", \"E1\");","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"        assertEquals(history.getHistorySize(), 1);","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"Rye98"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"Rye98"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"    void getHistory_clearHistory_noItemsLeftInHistory() throws InvalidBlockException {","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"wjchoi0712"},"content":"        History history \u003d new History();","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"wjchoi0712"},"content":"        history.addHistory(\"EA\", \"E1\");","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"wjchoi0712"},"content":"        history.addHistory(\"E2\", \"E1\");","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"        history.addHistory(\"EA\", \"E4\");","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"        history.addHistory(\"E2\", \"E4\");","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"        history.clearHistory();","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"wjchoi0712"},"content":"        assertEquals(history.getHistorySize(), 0);","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Rye98"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"Rye98"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"Rye98":12,"wjchoi0712":15}},{"path":"src/test/java/seedu/duke/NotesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KimIdeas8"},"content":"package seedu.duke;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"KimIdeas8"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.data.Block;","lastModifiedDate":"2021-04-02"},{"lineNumber":6,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.data.NusMap;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.exception.EmptyNoteException;","lastModifiedDate":"2021-04-02"},{"lineNumber":8,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.exception.InvalidBlockException;","lastModifiedDate":"2021-04-02"},{"lineNumber":9,"author":{"gitId":"KimIdeas8"},"content":"import seedu.duke.exception.InvalidIndexException;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.exception.InvalidNoteException;","lastModifiedDate":"2021-04-05"},{"lineNumber":11,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"KimIdeas8"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"KimIdeas8"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"KimIdeas8"},"content":"public class NotesTest {","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"wjchoi0712"},"content":"    public void addNoteTest(String location) throws InvalidBlockException, InvalidNoteException {","lastModifiedDate":"2021-04-05"},{"lineNumber":19,"author":{"gitId":"KimIdeas8"},"content":"        NusMap nusMap \u003d new NusMap();","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"KimIdeas8"},"content":"        nusMap.checkIfValidBlock(location);","lastModifiedDate":"2021-04-02"},{"lineNumber":21,"author":{"gitId":"KimIdeas8"},"content":"        Block block \u003d nusMap.getBlock(location);","lastModifiedDate":"2021-04-02"},{"lineNumber":22,"author":{"gitId":"KimIdeas8"},"content":"        block.addNote(\"@gmail\");","lastModifiedDate":"2021-04-02"},{"lineNumber":23,"author":{"gitId":"KimIdeas8"},"content":"        block.addNote(\"password: Newbie\");","lastModifiedDate":"2021-04-02"},{"lineNumber":24,"author":{"gitId":"KimIdeas8"},"content":"        ArrayList\u003cString\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"KimIdeas8"},"content":"        notes.add(\"@gmail\");","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"KimIdeas8"},"content":"        notes.add(\"password: Newbie\");","lastModifiedDate":"2021-04-02"},{"lineNumber":27,"author":{"gitId":"KimIdeas8"},"content":"        assertEquals(nusMap.getBlock(location).getNotes(), notes);","lastModifiedDate":"2021-04-02"},{"lineNumber":28,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":29,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":30,"author":{"gitId":"KimIdeas8"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":31,"author":{"gitId":"KimIdeas8"},"content":"    public void addNoteCommandExecute_validLocation_success() {","lastModifiedDate":"2021-04-02"},{"lineNumber":32,"author":{"gitId":"KimIdeas8"},"content":"        try {","lastModifiedDate":"2021-04-02"},{"lineNumber":33,"author":{"gitId":"KimIdeas8"},"content":"            addNoteTest(\"COM1\");","lastModifiedDate":"2021-04-02"},{"lineNumber":34,"author":{"gitId":"KimIdeas8"},"content":"            addNoteTest(\"STARBUCKS\");","lastModifiedDate":"2021-04-02"},{"lineNumber":35,"author":{"gitId":"wjchoi0712"},"content":"        } catch (InvalidBlockException | InvalidNoteException e) {","lastModifiedDate":"2021-04-05"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":"            assertEquals(\"Invalid block! Please enter again to retry!\", e.getMessage());","lastModifiedDate":"2021-04-04"},{"lineNumber":37,"author":{"gitId":"KimIdeas8"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":38,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"KimIdeas8"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":41,"author":{"gitId":"KimIdeas8"},"content":"    public void addNoteCommandExecute_invalidLocation_exceptionThrown() {","lastModifiedDate":"2021-04-02"},{"lineNumber":42,"author":{"gitId":"KimIdeas8"},"content":"        try {","lastModifiedDate":"2021-04-02"},{"lineNumber":43,"author":{"gitId":"KimIdeas8"},"content":"            addNoteTest(\"TESCO SUPER-MART\");","lastModifiedDate":"2021-04-02"},{"lineNumber":44,"author":{"gitId":"KimIdeas8"},"content":"            addNoteTest(\"GRAND HALL\");","lastModifiedDate":"2021-04-02"},{"lineNumber":45,"author":{"gitId":"wjchoi0712"},"content":"        } catch (InvalidBlockException | InvalidNoteException e) {","lastModifiedDate":"2021-04-05"},{"lineNumber":46,"author":{"gitId":"wjchoi0712"},"content":"            assertEquals(\"Invalid block! Please try again with a block that exists :(\",","lastModifiedDate":"2021-04-05"},{"lineNumber":47,"author":{"gitId":"wjchoi0712"},"content":"                    e.getMessage());","lastModifiedDate":"2021-04-04"},{"lineNumber":48,"author":{"gitId":"KimIdeas8"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":49,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"wjchoi0712"},"content":"    public void deleteNotesTest(int index) throws InvalidIndexException, InvalidNoteException {","lastModifiedDate":"2021-04-05"},{"lineNumber":52,"author":{"gitId":"KimIdeas8"},"content":"        NusMap nusMap \u003d new NusMap();","lastModifiedDate":"2021-04-02"},{"lineNumber":53,"author":{"gitId":"KimIdeas8"},"content":"        Block block \u003d nusMap.getBlock(\"MAXX COFFEE\");","lastModifiedDate":"2021-04-02"},{"lineNumber":54,"author":{"gitId":"KimIdeas8"},"content":"        block.addNote(\"Special event today at 12 noon :))\");","lastModifiedDate":"2021-04-02"},{"lineNumber":55,"author":{"gitId":"KimIdeas8"},"content":"        block.addNote(\"Girl\u0027s gathering @ 5pm today. :D\");","lastModifiedDate":"2021-04-02"},{"lineNumber":56,"author":{"gitId":"KimIdeas8"},"content":"        block.addNote(\"Get the latest Pistachio Latte.\");","lastModifiedDate":"2021-04-02"},{"lineNumber":57,"author":{"gitId":"KimIdeas8"},"content":"        block.deleteNote(index);","lastModifiedDate":"2021-04-02"},{"lineNumber":58,"author":{"gitId":"KimIdeas8"},"content":"        ArrayList\u003cString\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-02"},{"lineNumber":59,"author":{"gitId":"KimIdeas8"},"content":"        switch (index) {","lastModifiedDate":"2021-04-02"},{"lineNumber":60,"author":{"gitId":"KimIdeas8"},"content":"        case 0:","lastModifiedDate":"2021-04-02"},{"lineNumber":61,"author":{"gitId":"KimIdeas8"},"content":"            notes.add(\"Girl\u0027s gathering @ 5pm today. :D\");","lastModifiedDate":"2021-04-02"},{"lineNumber":62,"author":{"gitId":"KimIdeas8"},"content":"            notes.add(\"Get the latest Pistachio Latte.\");","lastModifiedDate":"2021-04-02"},{"lineNumber":63,"author":{"gitId":"KimIdeas8"},"content":"            break;","lastModifiedDate":"2021-04-02"},{"lineNumber":64,"author":{"gitId":"KimIdeas8"},"content":"        case 1:","lastModifiedDate":"2021-04-02"},{"lineNumber":65,"author":{"gitId":"KimIdeas8"},"content":"            notes.add(\"Special event today at 12 noon :))\");","lastModifiedDate":"2021-04-02"},{"lineNumber":66,"author":{"gitId":"KimIdeas8"},"content":"            notes.add(\"Get the latest Pistachio Latte.\");","lastModifiedDate":"2021-04-02"},{"lineNumber":67,"author":{"gitId":"KimIdeas8"},"content":"            break;","lastModifiedDate":"2021-04-02"},{"lineNumber":68,"author":{"gitId":"KimIdeas8"},"content":"        case 2:","lastModifiedDate":"2021-04-02"},{"lineNumber":69,"author":{"gitId":"KimIdeas8"},"content":"            notes.add(\"Special event today at 12 noon :))\");","lastModifiedDate":"2021-04-02"},{"lineNumber":70,"author":{"gitId":"KimIdeas8"},"content":"            notes.add(\"Girl\u0027s gathering @ 5pm today. :D\");","lastModifiedDate":"2021-04-02"},{"lineNumber":71,"author":{"gitId":"KimIdeas8"},"content":"            break;","lastModifiedDate":"2021-04-02"},{"lineNumber":72,"author":{"gitId":"KimIdeas8"},"content":"        default:","lastModifiedDate":"2021-04-02"},{"lineNumber":73,"author":{"gitId":"KimIdeas8"},"content":"            break;","lastModifiedDate":"2021-04-02"},{"lineNumber":74,"author":{"gitId":"KimIdeas8"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":75,"author":{"gitId":"KimIdeas8"},"content":"        assertEquals(block.getNotes(), notes);","lastModifiedDate":"2021-04-02"},{"lineNumber":76,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":77,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":78,"author":{"gitId":"KimIdeas8"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":79,"author":{"gitId":"KimIdeas8"},"content":"    public void deleteNotes_indexWithinRange_success() {","lastModifiedDate":"2021-04-02"},{"lineNumber":80,"author":{"gitId":"KimIdeas8"},"content":"        try {","lastModifiedDate":"2021-04-02"},{"lineNumber":81,"author":{"gitId":"KimIdeas8"},"content":"            deleteNotesTest(0);","lastModifiedDate":"2021-04-02"},{"lineNumber":82,"author":{"gitId":"KimIdeas8"},"content":"            deleteNotesTest(1);","lastModifiedDate":"2021-04-02"},{"lineNumber":83,"author":{"gitId":"KimIdeas8"},"content":"            deleteNotesTest(2);","lastModifiedDate":"2021-04-02"},{"lineNumber":84,"author":{"gitId":"wjchoi0712"},"content":"        } catch (InvalidIndexException | InvalidNoteException e) {","lastModifiedDate":"2021-04-05"},{"lineNumber":85,"author":{"gitId":"wjchoi0712"},"content":"            assertEquals(\"Oops! You must enter an Integer that is within the bounds :(\", e.getMessage());","lastModifiedDate":"2021-04-02"},{"lineNumber":86,"author":{"gitId":"KimIdeas8"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":87,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"KimIdeas8"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":90,"author":{"gitId":"KimIdeas8"},"content":"    public void deleteNotesCommandExecution_indexOutOfRange_exceptionThrown() {","lastModifiedDate":"2021-04-02"},{"lineNumber":91,"author":{"gitId":"KimIdeas8"},"content":"        try {","lastModifiedDate":"2021-04-02"},{"lineNumber":92,"author":{"gitId":"KimIdeas8"},"content":"            deleteNotesTest(-1);","lastModifiedDate":"2021-04-02"},{"lineNumber":93,"author":{"gitId":"KimIdeas8"},"content":"            deleteNotesTest(7);","lastModifiedDate":"2021-04-02"},{"lineNumber":94,"author":{"gitId":"wjchoi0712"},"content":"        } catch (InvalidIndexException | InvalidNoteException e) {","lastModifiedDate":"2021-04-05"},{"lineNumber":95,"author":{"gitId":"wjchoi0712"},"content":"            assertEquals(\"Oops! You must enter an Integer that is within the bounds :(\", e.getMessage());","lastModifiedDate":"2021-04-02"},{"lineNumber":96,"author":{"gitId":"KimIdeas8"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":97,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":98,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":99,"author":{"gitId":"KimIdeas8"},"content":"    public void showNotesTest(NusMap nusMap) throws EmptyNoteException {","lastModifiedDate":"2021-04-02"},{"lineNumber":100,"author":{"gitId":"KimIdeas8"},"content":"        ArrayList\u003cString\u003e notes \u003d nusMap.getBlock(\"CENTRAL LIBRARY\").getNotes();","lastModifiedDate":"2021-04-02"},{"lineNumber":101,"author":{"gitId":"KimIdeas8"},"content":"        if (notes.isEmpty()) {","lastModifiedDate":"2021-04-02"},{"lineNumber":102,"author":{"gitId":"KimIdeas8"},"content":"            throw new EmptyNoteException();","lastModifiedDate":"2021-04-02"},{"lineNumber":103,"author":{"gitId":"KimIdeas8"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":104,"author":{"gitId":"KimIdeas8"},"content":"        ArrayList\u003cString\u003e notesDuplicate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-02"},{"lineNumber":105,"author":{"gitId":"KimIdeas8"},"content":"        notesDuplicate.add(\"Orbital project meeting at 2 :))\");","lastModifiedDate":"2021-04-02"},{"lineNumber":106,"author":{"gitId":"KimIdeas8"},"content":"        assertEquals(notes, notesDuplicate);","lastModifiedDate":"2021-04-02"},{"lineNumber":107,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":108,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":109,"author":{"gitId":"KimIdeas8"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":110,"author":{"gitId":"KimIdeas8"},"content":"    public void showNotesCommand_nonEmptyList_success() {","lastModifiedDate":"2021-04-02"},{"lineNumber":111,"author":{"gitId":"KimIdeas8"},"content":"        try {","lastModifiedDate":"2021-04-02"},{"lineNumber":112,"author":{"gitId":"KimIdeas8"},"content":"            NusMap nusMap \u003d new NusMap();","lastModifiedDate":"2021-04-02"},{"lineNumber":113,"author":{"gitId":"KimIdeas8"},"content":"            nusMap.getBlock(\"CENTRAL LIBRARY\").addNote(\"Orbital project meeting at 2 :))\");","lastModifiedDate":"2021-04-02"},{"lineNumber":114,"author":{"gitId":"KimIdeas8"},"content":"            showNotesTest(nusMap);","lastModifiedDate":"2021-04-02"},{"lineNumber":115,"author":{"gitId":"wjchoi0712"},"content":"        } catch (EmptyNoteException | InvalidNoteException e) {","lastModifiedDate":"2021-04-05"},{"lineNumber":116,"author":{"gitId":"KimIdeas8"},"content":"            assertEquals(\"Oops! There are no notes tagged to CENTRAL LIBRARY\",","lastModifiedDate":"2021-04-02"},{"lineNumber":117,"author":{"gitId":"KimIdeas8"},"content":"                    String.format(e.getMessage(), \"CENTRAL LIBRARY\")); //should not reach here","lastModifiedDate":"2021-04-02"},{"lineNumber":118,"author":{"gitId":"KimIdeas8"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":119,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":120,"author":{"gitId":"KimIdeas8"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":121,"author":{"gitId":"KimIdeas8"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":122,"author":{"gitId":"KimIdeas8"},"content":"    public void showNotesCommand_emptyList_exceptionThrown() {","lastModifiedDate":"2021-04-02"},{"lineNumber":123,"author":{"gitId":"KimIdeas8"},"content":"        try {","lastModifiedDate":"2021-04-02"},{"lineNumber":124,"author":{"gitId":"KimIdeas8"},"content":"            NusMap nusMap \u003d new NusMap();","lastModifiedDate":"2021-04-02"},{"lineNumber":125,"author":{"gitId":"KimIdeas8"},"content":"            showNotesTest(nusMap);","lastModifiedDate":"2021-04-02"},{"lineNumber":126,"author":{"gitId":"KimIdeas8"},"content":"        } catch (EmptyNoteException e) {","lastModifiedDate":"2021-04-02"},{"lineNumber":127,"author":{"gitId":"KimIdeas8"},"content":"            assertEquals(\"Oops! There are no notes tagged to CENTRAL LIBRARY\",","lastModifiedDate":"2021-04-02"},{"lineNumber":128,"author":{"gitId":"KimIdeas8"},"content":"                    String.format(e.getMessage(), \"CENTRAL LIBRARY\"));","lastModifiedDate":"2021-04-02"},{"lineNumber":129,"author":{"gitId":"KimIdeas8"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":130,"author":{"gitId":"KimIdeas8"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":131,"author":{"gitId":"KimIdeas8"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"KimIdeas8":118,"SimBowen":1,"wjchoi0712":12}},{"path":"src/test/java/seedu/duke/NusMazeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"class NusMazeTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"SimBowen":1,"-":10}},{"path":"src/test/java/seedu/duke/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"package seedu.duke;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.routecommand.GoCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.historycommand.RepeatHistoryCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.historycommand.ShowHistoryCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.historycommand.ClearHistoryCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.notecommand.ShowNoteCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.notecommand.AddNoteCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.notecommand.DeleteNoteCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.generalcommand.ByeCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.command.generalcommand.HelpCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.exception.InvalidCommandException;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Rizavur"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Rizavur"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Rizavur"},"content":"class ParserTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Rizavur"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Rizavur"},"content":"    void prepareForCommandExecution_go_expectGoCommand() throws InvalidCommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Rizavur"},"content":"        Command command \u003d Parser.prepareForCommandExecution(\"go\");","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Rizavur"},"content":"        assertTrue(command instanceof GoCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"Rizavur"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"Rizavur"},"content":"    void prepareForCommandExecution_history_expectHistoryCommand() throws InvalidCommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"Rizavur"},"content":"        Command command \u003d Parser.prepareForCommandExecution(\"history\");","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"Rizavur"},"content":"        assertTrue(command instanceof ShowHistoryCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"Rizavur"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"Rizavur"},"content":"    void prepareForCommandExecution_repeat_expectRepeatCommand() throws InvalidCommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"wjchoi0712"},"content":"        Command command \u003d Parser.prepareForCommandExecution(\"repeat history\");","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"wjchoi0712"},"content":"        assertTrue(command instanceof RepeatHistoryCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"Rizavur"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"Rizavur"},"content":"    void prepareForCommandExecution_clearhistory_expectClearHistoryCommand() throws InvalidCommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"Rizavur"},"content":"        Command command \u003d Parser.prepareForCommandExecution(\"clear history\");","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"Rizavur"},"content":"        assertTrue(command instanceof ClearHistoryCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"Rizavur"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"Rizavur"},"content":"    void prepareForCommandExecution_listnotes_expectListNoteCommand() throws InvalidCommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"wjchoi0712"},"content":"        Command command \u003d Parser.prepareForCommandExecution(\"show note\");","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"wjchoi0712"},"content":"        assertTrue(command instanceof ShowNoteCommand);","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"Rizavur"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"Rizavur"},"content":"    void prepareForCommandExecution_addnote_expectAddNoteCommand() throws InvalidCommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"Rizavur"},"content":"        Command command \u003d Parser.prepareForCommandExecution(\"add note\");","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"Rizavur"},"content":"        assertTrue(command instanceof AddNoteCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"Rizavur"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"Rizavur"},"content":"    void prepareForCommandExecution_deletenote_expectDeleteNoteCommand() throws InvalidCommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"Rizavur"},"content":"        Command command \u003d Parser.prepareForCommandExecution(\"delete note\");","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"Rizavur"},"content":"        assertTrue(command instanceof DeleteNoteCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"Rizavur"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"Rizavur"},"content":"    void prepareForCommandExecution_bye_expectByeCommand() throws InvalidCommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"Rizavur"},"content":"        Command command \u003d Parser.prepareForCommandExecution(\"bye\");","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"Rizavur"},"content":"        assertTrue(command instanceof ByeCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"Rizavur"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"Rizavur"},"content":"    void prepareForCommandExecution_help_expectHelpCommand() throws InvalidCommandException {","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"Rizavur"},"content":"        Command command \u003d Parser.prepareForCommandExecution(\"help\");","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"Rizavur"},"content":"        assertTrue(command instanceof HelpCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"Rizavur"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"Rizavur"},"content":"    void prepareForCommandExecution_unknown_expectException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"Rizavur"},"content":"        assertThrows(InvalidCommandException.class,","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"Rizavur"},"content":"            () -\u003e Parser.prepareForCommandExecution(\"unknown command\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"wjchoi0712":14,"Rizavur":67}},{"path":"src/test/java/seedu/duke/RouterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"package seedu.duke;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.data.NusMap;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.exception.InvalidBlockException;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"wjchoi0712"},"content":"import seedu.duke.router.Router;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"class RouterTest {","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"wjchoi0712"},"content":"    void printShortestDistance_linkedBlocks_expectRoute() throws InvalidBlockException {","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"wjchoi0712"},"content":"        NusMap nusMap \u003d new NusMap();","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"wjchoi0712"},"content":"        String out \u003d new Router().execute(nusMap, \"E2\",\"E7\");","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"wjchoi0712"},"content":"        assertEquals(out, \"Route: E2 -\u003e E3 -\u003e E4 -\u003e E4A -\u003e EW2 -\u003e E6 -\u003e E7\");","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"    void printShortestDistance_unknownBlock_expectException() {","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"        NusMap nusMap \u003d new NusMap();","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"        assertThrows(NullPointerException.class, () -\u003e {","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"wjchoi0712"},"content":"            new Router().execute(nusMap, \"AS2\",\"E7\");","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"        });","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"wjchoi0712"},"content":"    void printShortestDistance_linkedBlocks_expectRouteAfterRepeatedCall() throws InvalidBlockException {","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"wjchoi0712"},"content":"        NusMap nusMap \u003d new NusMap();","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"wjchoi0712"},"content":"        String out1 \u003d new Router().execute(nusMap, \"E2\",\"E7\");","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"wjchoi0712"},"content":"        assertEquals(out1, \"Route: E2 -\u003e E3 -\u003e E4 -\u003e E4A -\u003e EW2 -\u003e E6 -\u003e E7\");","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"wjchoi0712"},"content":"        nusMap.resetVisitedFlag();","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"wjchoi0712"},"content":"        String out2 \u003d new Router().execute(nusMap, \"E2\", \"E7\");","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"wjchoi0712"},"content":"        assertEquals(out2, \"Route: E2 -\u003e E3 -\u003e E4 -\u003e E4A -\u003e EW2 -\u003e E6 -\u003e E7\");","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"SimBowen":18,"wjchoi0712":17,"Rizavur":2}},{"path":"src/test/java/seedu/duke/UiManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Rizavur"},"content":"package seedu.duke;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"Rizavur"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"Rizavur"},"content":"import seedu.duke.ui.UiManager;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"Rizavur"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Rizavur"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Rizavur"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"Rizavur"},"content":"class UiManagerTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"Rizavur"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Rizavur"},"content":"    void showLogo_expectLogo() {","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"Rizavur"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"Rizavur"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Rizavur"},"content":"        UiManager ui \u003d new UiManager();","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Rizavur"},"content":"        ui.showLogo();","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Rizavur"},"content":"        String lineSeparator \u003d System.lineSeparator();","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"wjchoi0712"},"content":"        String divider \u003d \"------------------------------------------------------\"","lastModifiedDate":"2021-04-04"},{"lineNumber":23,"author":{"gitId":"wjchoi0712"},"content":"                + \"------------------------------------------------------\";","lastModifiedDate":"2021-04-04"},{"lineNumber":24,"author":{"gitId":"Rizavur"},"content":"        String logo \u003d  \" /$$   /$$ /$$   /$$  /$$$$$$  /$$      /$$\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Rizavur"},"content":"                + \"| $$$ | $$| $$  | $$ /$$__  $$| $$$    /$$$\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Rizavur"},"content":"                + \"| $$$$| $$| $$  | $$| $$  \\\\__/| $$$$  /$$$$  /$$$$$$  /$$$$$$$$  /$$$$$$\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Rizavur"},"content":"                + \"| $$ $$ $$| $$  | $$|  $$$$$$ | $$ $$/$$ $$ |____  $$|____ /$$/ /$$__  $$\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"Rizavur"},"content":"                + \"| $$  $$$$| $$  | $$ \\\\____  $$| $$  $$$| $$  /$$$$$$$   /$$$$/ | $$$$$$$$\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"Rizavur"},"content":"                + \"| $$\\\\  $$$| $$  | $$ /$$  \\\\ $$| $$\\\\  $ | $$ /$$__  $$  /$$__/  | $$_____/\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"Rizavur"},"content":"                + \"| $$ \\\\  $$|  $$$$$$/|  $$$$$$/| $$ \\\\/  | $$|  $$$$$$$ /$$$$$$$$|  $$$$$$$\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"Rizavur"},"content":"                + \"|__/  \\\\__/ \\\\______/  \\\\______/ |__/     |__/ \\\\_______/|________/ \\\\_______/\";","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"Rizavur"},"content":"        assertEquals(divider + lineSeparator + logo + lineSeparator + divider, outContent.toString().trim());","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"Rizavur"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"Rizavur"},"content":"    void showGreetMessage_expectGreetMessage() {","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"Rizavur"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"Rizavur"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"Rizavur"},"content":"        UiManager ui \u003d new UiManager();","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"Rizavur"},"content":"        ui.showGreetMessage();","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"Rizavur"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"Rizavur"},"content":"        String lineSeparator \u003d System.lineSeparator();","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"wjchoi0712"},"content":"        String divider \u003d \"------------------------------------------------------\"","lastModifiedDate":"2021-04-04"},{"lineNumber":45,"author":{"gitId":"wjchoi0712"},"content":"                + \"------------------------------------------------------\";","lastModifiedDate":"2021-04-04"},{"lineNumber":46,"author":{"gitId":"Rizavur"},"content":"        String greetingMessage \u003d \"Hello! Welcome to NUSMaze\" + lineSeparator","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"Rizavur"},"content":"                + \"Where do you want to go today?\";","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"Rizavur"},"content":"        assertEquals(greetingMessage + lineSeparator + divider, outContent.toString().trim());","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"Rizavur"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"Rizavur"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"wjchoi0712":4,"Rizavur":46}},{"path":"src/test/java/seedu/duke/data/DailyRouteTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SimBowen"},"content":"package seedu.duke.data;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"SimBowen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"SimBowen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"SimBowen"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"SimBowen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"SimBowen"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"SimBowen"},"content":"class DailyRouteTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"SimBowen"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"SimBowen"},"content":"    void addDailyRoute_addedValidRoute_expectMapped() {","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"SimBowen"},"content":"        DailyRoute dailyRoute \u003d new DailyRoute();","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"SimBowen"},"content":"        ArrayList\u003cString\u003e blocks \u003d new ArrayList\u003c\u003e(List.of(\"E1\", \"E2\", \"E3\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"SimBowen"},"content":"        String day \u003d \"MONDAY\";","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"SimBowen"},"content":"        dailyRoute.addDailyRoute(day, blocks);","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"SimBowen"},"content":"        assertEquals(dailyRoute.getDailyRoute(day), blocks);","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"SimBowen"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"SimBowen"},"content":"    void getDailyRoute_nothingAdded_expectEmpty() {","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"SimBowen"},"content":"        DailyRoute dailyRoute \u003d new DailyRoute();","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"SimBowen"},"content":"        assertEquals(dailyRoute.getDailyRoute(\"MONDAY\"), new ArrayList\u003c\u003e());","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"SimBowen"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"SimBowen"},"content":"    void getSelectableDays_dayAdded_expectMonday() {","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"SimBowen"},"content":"        DailyRoute dailyRoute \u003d new DailyRoute();","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"SimBowen"},"content":"        ArrayList\u003cString\u003e blocks \u003d new ArrayList\u003c\u003e(List.of(\"E1\", \"E2\", \"E3\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"SimBowen"},"content":"        String day \u003d \"MONDAY\";","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"SimBowen"},"content":"        dailyRoute.addDailyRoute(day, blocks);","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"SimBowen"},"content":"        assertEquals(dailyRoute.getSelectableDays(), new ArrayList\u003c\u003e(List.of(\"MONDAY\")));","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"SimBowen"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"SimBowen"},"content":"    void getSelectableDays_noDayAdded_expectEmpty() {","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"SimBowen"},"content":"        DailyRoute dailyRoute \u003d new DailyRoute();","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"SimBowen"},"content":"        assertEquals(dailyRoute.getSelectableDays(), new ArrayList\u003c\u003e());","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"SimBowen"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"SimBowen"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"SimBowen"},"content":"    void getValidDays_expectMonToSun() {","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"SimBowen"},"content":"        DailyRoute dailyRoute \u003d new DailyRoute();","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"SimBowen"},"content":"        assertEquals(dailyRoute.getValidDays(),","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"SimBowen"},"content":"                new ArrayList\u003c\u003e(List.of(\"MONDAY\", \"TUESDAY\", \"WEDNESDAY\",","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"SimBowen"},"content":"                        \"THURSDAY\", \"FRIDAY\", \"SATURDAY\", \"SUNDAY\")));","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"SimBowen"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"SimBowen"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"SimBowen":52}}]
